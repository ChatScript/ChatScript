1
$cs_language=UNIVERSAL
#`end variables
--dict
( add~l1 inverse~l1 remainder~l1 x00000001 )
( add~l1 inverse~l1 mod~l1 x00000001 )
( add~l1 inverse~l1 modulo~l1 x00000001 )
( plus~l1 inverse~l1 - x00000001 )
( multiply~l1 inverse~l1 `/` x00000001 )
( multiply~l1 inverse~l1 % x00000001 )
( multiply~l1 inverse~l1 quotient~l1 x00000001 )
( divide~l1 inverse~l1 * x00000001 )
( divide~l1 inverse~l1 x~l1 x00000001 )
( square_root~l1 inverse~l1 exponent~l1 x00000001 )
( square_root~l1 inverse~l1 power~l1 x00000001 )
( root~l1 inverse~l1 ^ x00000001 )
( minus~l1 inverse~l1 plus~l1 x00000001 )
( plus~l1 inverse~l1 minus~l1 x00000001 )
( add~l1 inverse~l1 subtract~l1 x00000001 )
( add~l1 inverse~l1 sub~l1 x00000001 )
( add~l1 inverse~l1 deduct~l1 x00000001 )
( divide~l1 inverse~l1 multiply~l1 x00000001 )
( divide~l1 inverse~l1 times~l1 x00000001 )
( times~l1 inverse~l1 divide~l1 x00000001 )
( minus~l1 inverse~l1 + x00000001 )
( minus~l1 inverse~l1 add~l1 x00000001 )
( add~l1 inverse~l1 take_away~l1 x00000001 )
( prod~l1 opposite~l1 devel~l1 x00000001 )
( devel~l1 opposite~l1 prod~l1 x00000001 )
( production~l1 opposite~l1 development~l1 x00000001 )
( development~l1 opposite~l1 production~l1 x00000001 )
( smile~l1 opposite~l1 frown~l1 x00000001 )
( frown~l1 opposite~l1 smile~l1 x00000001 )
( tall~l1 opposite~l1 short~l1 x00000001 )
( short~l1 opposite~l1 tall~l1 x00000001 )
( save~l1 opposite~l1 spend~l1 x00000001 )
( spend~l1 opposite~l1 save~l1 x00000001 )
( artifact~l1 opposite~l1 natural_object~l1 x00000001 )
( natural_object~l1 opposite~l1 artifact~l1 x00000001 )
( underachievement~l1 opposite~l1 overachievement~l1 x00000001 )
( overachievement~l1 opposite~l1 underachievement~l1 x00000001 )
( disappearance~l1 opposite~l1 appearance~l1 x00000001 )
( appearance~l1 opposite~l1 disappearance~l1 x00000001 )
( forward_motion~l1 opposite~l1 retreat~l1 x00000001 )
( retreat~l1 opposite~l1 forward_motion~l1 x00000001 )
( embarkation~l1 opposite~l1 disembarkation~l1 x00000001 )
( disembarkation~l1 opposite~l1 embarkation~l1 x00000001 )
( failing~l1 opposite~l1 qualifying~l1 x00000001 )
( qualifying~l1 opposite~l1 failing~l1 x00000001 )
( put_option~l1 opposite~l1 call_option~l1 x00000001 )
( call_option~l1 opposite~l1 put_option~l1 x00000001 )
( worst~l1 opposite~l1 best~l1 x00000001 )
( best~l1 opposite~l1 worst~l1 x00000001 )
( foul_ball~l1 opposite~l1 fair_ball~l1 x00000001 )
( fair_ball~l1 opposite~l1 foul_ball~l1 x00000001 )
( tightening~l1 opposite~l1 loosening~l1 x00000001 )
( loosening~l1 opposite~l1 tightening~l1 x00000001 )
( demonetization~l1 opposite~l1 monetization~l1 x00000001 )
( monetization~l1 opposite~l1 demonetization~l1 x00000001 )
( straight_ticket~l1 opposite~l1 split_ticket~l1 x00000001 )
( split_ticket~l1 opposite~l1 straight_ticket~l1 x00000001 )
( unearned_run~l1 opposite~l1 earned_run~l1 x00000001 )
( earned_run~l1 opposite~l1 unearned_run~l1 x00000001 )
( demotion~l1 opposite~l1 promotion~l1 x00000001 )
( promotion~l1 opposite~l1 demotion~l1 x00000001 )
( commencement~l1 opposite~l1 finishing~l1 x00000001 )
( finishing~l1 opposite~l1 commencement~l1 x00000001 )
( live_birth~l1 opposite~l1 spontaneous_abortion~l1 x00000001 )
( spontaneous_abortion~l1 opposite~l1 live_birth~l1 x00000001 )
( activation~l1 opposite~l1 deactivation~l1 x00000001 )
( deactivation~l1 opposite~l1 activation~l1 x00000001 )
( decontamination~l1 opposite~l1 contamination~l1 x00000001 )
( contamination~l1 opposite~l1 decontamination~l1 x00000001 )
( sitting_trot~l1 opposite~l1 rising_trot~l1 x00000001 )
( rising_trot~l1 opposite~l1 sitting_trot~l1 x00000001 )
( international_flight~l1 opposite~l1 domestic_flight~l1 x00000001 )
( domestic_flight~l1 opposite~l1 international_flight~l1 x00000001 )
( deceleration~l1 opposite~l1 acceleration~l1 x00000001 )
( acceleration~l1 opposite~l1 deceleration~l1 x00000001 )
( shutting~l1 opposite~l1 opening~l1 x00000001 )
( opening~l1 opposite~l1 shutting~l1 x00000001 )
( pronation~l1 opposite~l1 supination~l1 x00000001 )
( supination~l1 opposite~l1 pronation~l1 x00000001 )
( increase~l1 opposite~l1 diminution~l1 x00000001 )
( diminution~l1 opposite~l1 increase~l1 x00000001 )
( maximization~l1 opposite~l1 minimization~l1 x00000001 )
( minimization~l1 opposite~l1 maximization~l1 x00000001 )
( decompression~l1 opposite~l1 compression~l1 x00000001 )
( compression~l1 opposite~l1 decompression~l1 x00000001 )
( addition~l1 opposite~l1 subtraction~l1 x00000001 )
( subtraction~l1 opposite~l1 addition~l1 x00000001 )
( inflation~l1 opposite~l1 deflation~l1 x00000001 )
( deflation~l1 opposite~l1 inflation~l1 x00000001 )
( strengthening~l1 opposite~l1 weakening~l1 x00000001 )
( weakening~l1 opposite~l1 strengthening~l1 x00000001 )
( concentration~l1 opposite~l1 dilution~l1 x00000001 )
( dilution~l1 opposite~l1 concentration~l1 x00000001 )
( depreciation~l1 opposite~l1 appreciation~l1 x00000001 )
( appreciation~l1 opposite~l1 depreciation~l1 x00000001 )
( enlargement~l1 opposite~l1 contraction~l1 x00000001 )
( contraction~l1 opposite~l1 enlargement~l1 x00000001 )
( flexion~l1 opposite~l1 extension~l1 x00000001 )
( extension~l1 opposite~l1 flexion~l1 x00000001 )
( disunion~l1 opposite~l1 unification~l1 x00000001 )
( unification~l1 opposite~l1 disunion~l1 x00000001 )
( detribalization~l1 opposite~l1 tribalization~l1 x00000001 )
( tribalization~l1 opposite~l1 detribalization~l1 x00000001 )
( narrowing~l1 opposite~l1 broadening~l1 x00000001 )
( broadening~l1 opposite~l1 narrowing~l1 x00000001 )
( inactivity~l1 opposite~l1 activity~l1 x00000001 )
( activity~l1 opposite~l1 inactivity~l1 x00000001 )
( night_game~l1 opposite~l1 day_game~l1 x00000001 )
( day_game~l1 opposite~l1 night_game~l1 x00000001 )
( away_game~l1 opposite~l1 home_game~l1 x00000001 )
( home_game~l1 opposite~l1 away_game~l1 x00000001 )
( softball_game~l1 opposite~l1 hardball~l1 x00000001 )
( hardball~l1 opposite~l1 softball_game~l1 x00000001 )
( volley~l1 opposite~l1 ground_stroke~l1 x00000001 )
( ground_stroke~l1 opposite~l1 volley~l1 x00000001 )
( minor_surgery~l1 opposite~l1 major_surgery~l1 x00000001 )
( major_surgery~l1 opposite~l1 minor_surgery~l1 x00000001 )
( homoeopathy~l1 opposite~l1 allopathy~l1 x00000001 )
( allopathy~l1 opposite~l1 homoeopathy~l1 x00000001 )
( unloading~l1 opposite~l1 loading~l1 x00000001 )
( loading~l1 opposite~l1 unloading~l1 x00000001 )
( original_sin~l1 opposite~l1 actual_sin~l1 x00000001 )
( actual_sin~l1 opposite~l1 original_sin~l1 x00000001 )
( venial_sin~l1 opposite~l1 mortal_sin~l1 x00000001 )
( mortal_sin~l1 opposite~l1 venial_sin~l1 x00000001 )
( petit_larceny~l1 opposite~l1 grand_larceny~l1 x00000001 )
( grand_larceny~l1 opposite~l1 petit_larceny~l1 x00000001 )
( hypopnea~l1 opposite~l1 hyperpnea~l1 x00000001 )
( hyperpnea~l1 opposite~l1 hypopnea~l1 x00000001 )
( disassortative_mating~l1 opposite~l1 assortative_mating~l1 x00000001 )
( assortative_mating~l1 opposite~l1 disassortative_mating~l1 x00000001 )
( approving~l1 opposite~l1 disapproval~l1 x00000001 )
( disapproval~l1 opposite~l1 approving~l1 x00000001 )
( dismantlement~l1 opposite~l1 fabrication~l1 x00000001 )
( fabrication~l1 opposite~l1 dismantlement~l1 x00000001 )
( assemblage~l1 opposite~l1 dismantlement~l1 x00000001 )
( dismantlement~l1 opposite~l1 assemblage~l1 x00000001 )
( discontinuation~l1 opposite~l1 continuation~l1 x00000001 )
( continuation~l1 opposite~l1 discontinuation~l1 x00000001 )
( proliferation~l1 opposite~l1 non-proliferation~l1 x00000001 )
( non-proliferation~l1 opposite~l1 proliferation~l1 x00000001 )
( uptick~l1 opposite~l1 downtick~l1 x00000001 )
( downtick~l1 opposite~l1 uptick~l1 x00000001 )
( wholesale~l1 opposite~l1 retail~l1 x00000001 )
( retail~l1 opposite~l1 wholesale~l1 x00000001 )
( nonpayment~l1 opposite~l1 defrayment~l1 x00000001 )
( defrayment~l1 opposite~l1 nonpayment~l1 x00000001 )
( decriminalization~l1 opposite~l1 criminalization~l1 x00000001 )
( criminalization~l1 opposite~l1 decriminalization~l1 x00000001 )
( disenfranchisement~l1 opposite~l1 enfranchisement~l1 x00000001 )
( enfranchisement~l1 opposite~l1 disenfranchisement~l1 x00000001 )
( declassification~l1 opposite~l1 classification~l1 x00000001 )
( classification~l1 opposite~l1 declassification~l1 x00000001 )
( denationalization~l1 opposite~l1 nationalization~l1 x00000001 )
( nationalization~l1 opposite~l1 denationalization~l1 x00000001 )
( demobilization~l1 opposite~l1 militarization~l1 x00000001 )
( militarization~l1 opposite~l1 demobilization~l1 x00000001 )
( disarmament~l1 opposite~l1 equipping~l1 x00000001 )
( equipping~l1 opposite~l1 disarmament~l1 x00000001 )
( destabilization~l1 opposite~l1 stabilization~l1 x00000001 )
( stabilization~l1 opposite~l1 destabilization~l1 x00000001 )
( noncompliance~l1 opposite~l1 obedience~l1 x00000001 )
( obedience~l1 opposite~l1 noncompliance~l1 x00000001 )
( cooperation~l1 opposite~l1 competition~l1 x00000001 )
( competition~l1 opposite~l1 cooperation~l1 x00000001 )
( conformation~l1 opposite~l1 noncompliance~l1 x00000001 )
( noncompliance~l1 opposite~l1 conformation~l1 x00000001 )
( affirmation~l1 opposite~l1 reversal~l1 x00000001 )
( reversal~l1 opposite~l1 affirmation~l1 x00000001 )
( acquittal~l1 opposite~l1 judgment_of_conviction~l1 x00000001 )
( judgment_of_conviction~l1 opposite~l1 acquittal~l1 x00000001 )
( judgement_in_rem~l1 opposite~l1 judgement_in_personam~l1 x00000001 )
( judgement_in_personam~l1 opposite~l1 judgement_in_rem~l1 x00000001 )
( special_verdict~l1 opposite~l1 general_verdict~l1 x00000001 )
( general_verdict~l1 opposite~l1 special_verdict~l1 x00000001 )
( demurrer~l1 opposite~l1 criminal_prosecution~l1 x00000001 )
( criminal_prosecution~l1 opposite~l1 demurrer~l1 x00000001 )
( desegregation~l1 opposite~l1 sequestration~l1 x00000001 )
( sequestration~l1 opposite~l1 desegregation~l1 x00000001 )
( nonconformance~l1 opposite~l1 conformation~l1 x00000001 )
( conformation~l1 opposite~l1 nonconformance~l1 x00000001 )
( nonobservance~l1 opposite~l1 observance~l1 x00000001 )
( observance~l1 opposite~l1 nonobservance~l1 x00000001 )
( ill_service~l1 opposite~l1 service~l1 x00000001 )
( service~l1 opposite~l1 ill_service~l1 x00000001 )
( nonattendance~l1 opposite~l1 attendance~l1 x00000001 )
( attendance~l1 opposite~l1 nonattendance~l1 x00000001 )
( absence~l1 opposite~l1 presence~l1 x00000001 )
( presence~l1 opposite~l1 absence~l1 x00000001 )
( decentralization~l1 opposite~l1 centralization~l1 x00000001 )
( centralization~l1 opposite~l1 decentralization~l1 x00000001 )
( nonparticipation~l1 opposite~l1 participation~l1 x00000001 )
( participation~l1 opposite~l1 nonparticipation~l1 x00000001 )
( male~l1 opposite~l1 female~l1 x00000001 )
( female~l1 opposite~l1 male~l1 x00000001 )
( host~l1 opposite~l1 parasite~l1 x00000001 )
( parasite~l1 opposite~l1 host~l1 x00000001 )
( prokaryote~l1 opposite~l1 eukaryote~l1 x00000001 )
( eukaryote~l1 opposite~l1 prokaryote~l1 x00000001 )
( spiny-finned_fish~l1 opposite~l1 soft-finned_fish~l1 x00000001 )
( soft-finned_fish~l1 opposite~l1 spiny-finned_fish~l1 x00000001 )
( carinate_bird~l1 opposite~l1 flightless_bird~l1 x00000001 )
( flightless_bird~l1 opposite~l1 carinate_bird~l1 x00000001 )
( diapsid_reptile~l1 opposite~l1 anapsid_reptile~l1 x00000001 )
( anapsid_reptile~l1 opposite~l1 diapsid_reptile~l1 x00000001 )
( dabbling_duck~l1 opposite~l1 diving_duck~l1 x00000001 )
( diving_duck~l1 opposite~l1 dabbling_duck~l1 x00000001 )
( heterodactyl_foot~l1 opposite~l1 zygodactyl_foot~l1 x00000001 )
( zygodactyl_foot~l1 opposite~l1 heterodactyl_foot~l1 x00000001 )
( even-toed_ungulate~l1 opposite~l1 perissodactyl_mammal~l1 x00000001 )
( perissodactyl_mammal~l1 opposite~l1 even-toed_ungulate~l1 x00000001 )
( homocercal_fin~l1 opposite~l1 heterocercal_fin~l1 x00000001 )
( heterocercal_fin~l1 opposite~l1 homocercal_fin~l1 x00000001 )
( digitigrade_mammal~l1 opposite~l1 plantigrade_mammal~l1 x00000001 )
( plantigrade_mammal~l1 opposite~l1 digitigrade_mammal~l1 x00000001 )
( basso_relievo~l1 opposite~l1 alto_relievo~l1 x00000001 )
( alto_relievo~l1 opposite~l1 basso_relievo~l1 x00000001 )
( cathode~l1 opposite~l1 anode~l1 x00000001 )
( anode~l1 opposite~l1 cathode~l1 x00000001 )
( synergist~l1 opposite~l1 antagonist~l1 x00000001 )
( antagonist~l1 opposite~l1 synergist~l1 x00000001 )
( outfield~l1 opposite~l1 baseball_diamond~l1 x00000001 )
( baseball_diamond~l1 opposite~l1 outfield~l1 x00000001 )
( white~l1 opposite~l1 black~l1 x00000001 )
( black~l1 opposite~l1 white~l1 x00000001 )
( taper_file~l1 opposite~l1 blunt_file~l1 x00000001 )
( blunt_file~l1 opposite~l1 taper_file~l1 x00000001 )
( generic_drug~l1 opposite~l1 proprietary_drug~l1 x00000001 )
( proprietary_drug~l1 opposite~l1 generic_drug~l1 x00000001 )
( open_circuit~l1 opposite~l1 closed_circuit~l1 x00000001 )
( closed_circuit~l1 opposite~l1 open_circuit~l1 x00000001 )
( ready-made~l1 opposite~l1 custom-built~l1 x00000001 )
( custom-built~l1 opposite~l1 ready-made~l1 x00000001 )
( non-dedicated_file_server~l1 opposite~l1 dedicated_file_server~l1 x00000001 )
( dedicated_file_server~l1 opposite~l1 non-dedicated_file_server~l1 x00000001 )
( wet-bulb_thermometer~l1 opposite~l1 dry-bulb_thermometer~l1 x00000001 )
( dry-bulb_thermometer~l1 opposite~l1 wet-bulb_thermometer~l1 x00000001 )
( wet_fly~l1 opposite~l1 dry_fly~l1 x00000001 )
( dry_fly~l1 opposite~l1 wet_fly~l1 x00000001 )
( smart_bomb~l1 opposite~l1 gravity_bomb~l1 x00000001 )
( gravity_bomb~l1 opposite~l1 smart_bomb~l1 x00000001 )
( galvanic_cell~l1 opposite~l1 electrolytic_cell~l1 x00000001 )
( electrolytic_cell~l1 opposite~l1 galvanic_cell~l1 x00000001 )
( importation~l1 opposite~l1 exportation~l1 x00000001 )
( exportation~l1 opposite~l1 importation~l1 x00000001 )
( local~l1 opposite~l1 express~l1 x00000001 )
( express~l1 opposite~l1 local~l1 x00000001 )
( slow_lane~l1 opposite~l1 fast_lane~l1 x00000001 )
( fast_lane~l1 opposite~l1 slow_lane~l1 x00000001 )
( thermal_reactor~l1 opposite~l1 fast_reactor~l1 x00000001 )
( fast_reactor~l1 opposite~l1 thermal_reactor~l1 x00000001 )
( rear~l1 opposite~l1 front~l1 x00000001 )
( front~l1 opposite~l1 rear~l1 x00000001 )
( power_mower~l1 opposite~l1 hand_mower~l1 x00000001 )
( hand_mower~l1 opposite~l1 power_mower~l1 x00000001 )
( soft_drug~l1 opposite~l1 hard_drug~l1 x00000001 )
( hard_drug~l1 opposite~l1 soft_drug~l1 x00000001 )
( computer_software~l1 opposite~l1 computer_hardware~l1 x00000001 )
( computer_hardware~l1 opposite~l1 computer_software~l1 x00000001 )
( tail~l1 opposite~l1 head~l1 x00000001 )
( head~l1 opposite~l1 tail~l1 x00000001 )
( out-basket~l1 opposite~l1 in-basket~l1 x00000001 )
( in-basket~l1 opposite~l1 out-basket~l1 x00000001 )
( starboard~l1 opposite~l1 larboard~l1 x00000001 )
( larboard~l1 opposite~l1 starboard~l1 x00000001 )
( studio~l1 opposite~l1 location~l1 x00000001 )
( location~l1 opposite~l1 studio~l1 x00000001 )
( stabile~l1 opposite~l1 mobile~l1 x00000001 )
( mobile~l1 opposite~l1 stabile~l1 x00000001 )
( volatile_storage~l1 opposite~l1 non-volatile_storage~l1 x00000001 )
( non-volatile_storage~l1 opposite~l1 volatile_storage~l1 x00000001 )
( reverse~l1 opposite~l1 obverse~l1 x00000001 )
( obverse~l1 opposite~l1 reverse~l1 x00000001 )
( unmentionable~l1 opposite~l1 outer_garment~l1 x00000001 )
( outer_garment~l1 opposite~l1 unmentionable~l1 x00000001 )
( prescription_medicine~l1 opposite~l1 over-the-counter_medicine~l1 x00000001 )
( over-the-counter_medicine~l1 opposite~l1 prescription_medicine~l1 x00000001 )
( stator_coil~l1 opposite~l1 rotor_coil~l1 x00000001 )
( rotor_coil~l1 opposite~l1 stator_coil~l1 x00000001 )
( surface_ship~l1 opposite~l1 submersible_warship~l1 x00000001 )
( submersible_warship~l1 opposite~l1 surface_ship~l1 x00000001 )
( internality~l1 opposite~l1 outwardness~l1 x00000001 )
( outwardness~l1 opposite~l1 internality~l1 x00000001 )
( worldliness~l1 opposite~l1 otherworldliness~l1 x00000001 )
( otherworldliness~l1 opposite~l1 worldliness~l1 x00000001 )
( introversion~l1 opposite~l1 extraversion~l1 x00000001 )
( extraversion~l1 opposite~l1 introversion~l1 x00000001 )
( ambiversion~l1 opposite~l1 extraversion~l1 x00000001 )
( extraversion~l1 opposite~l1 ambiversion~l1 x00000001 )
( ambiversion~l1 opposite~l1 introversion~l1 x00000001 )
( introversion~l1 opposite~l1 ambiversion~l1 x00000001 )
( emotionlessness~l1 opposite~l1 emotionality~l1 x00000001 )
( emotionality~l1 opposite~l1 emotionlessness~l1 x00000001 )
( uncheerfulness~l1 opposite~l1 cheerfulness~l1 x00000001 )
( cheerfulness~l1 opposite~l1 uncheerfulness~l1 x00000001 )
( inactiveness~l1 opposite~l1 activeness~l1 x00000001 )
( activeness~l1 opposite~l1 inactiveness~l1 x00000001 )
( unpermissiveness~l1 opposite~l1 permissiveness~l1 x00000001 )
( permissiveness~l1 opposite~l1 unpermissiveness~l1 x00000001 )
( ill_nature~l1 opposite~l1 good_nature~l1 x00000001 )
( good_nature~l1 opposite~l1 ill_nature~l1 x00000001 )
( impatience~l1 opposite~l1 forbearance~l1 x00000001 )
( forbearance~l1 opposite~l1 impatience~l1 x00000001 )
( disagreeableness~l1 opposite~l1 agreeableness~l1 x00000001 )
( agreeableness~l1 opposite~l1 disagreeableness~l1 x00000001 )
( bluntness~l1 opposite~l1 sharpness~l1 x00000001 )
( sharpness~l1 opposite~l1 bluntness~l1 x00000001 )
( involuntariness~l1 opposite~l1 willingness~l1 x00000001 )
( willingness~l1 opposite~l1 involuntariness~l1 x00000001 )
( frivolousness~l1 opposite~l1 serious-mindedness~l1 x00000001 )
( serious-mindedness~l1 opposite~l1 frivolousness~l1 x00000001 )
( uncommunicativeness~l1 opposite~l1 communicativeness~l1 x00000001 )
( communicativeness~l1 opposite~l1 uncommunicativeness~l1 x00000001 )
( unsociableness~l1 opposite~l1 sociableness~l1 x00000001 )
( sociableness~l1 opposite~l1 unsociableness~l1 x00000001 )
( secretiveness~l1 opposite~l1 nakedness~l1 x00000001 )
( nakedness~l1 opposite~l1 secretiveness~l1 x00000001 )
( unfriendliness~l1 opposite~l1 friendliness~l1 x00000001 )
( friendliness~l1 opposite~l1 unfriendliness~l1 x00000001 )
( unapproachability~l1 opposite~l1 approachability~l1 x00000001 )
( approachability~l1 opposite~l1 unapproachability~l1 x00000001 )
( uncongeniality~l1 opposite~l1 congeniality~l1 x00000001 )
( congeniality~l1 opposite~l1 uncongeniality~l1 x00000001 )
( unneighborliness~l1 opposite~l1 good-neighbourliness~l1 x00000001 )
( good-neighbourliness~l1 opposite~l1 unneighborliness~l1 x00000001 )
( inhospitableness~l1 opposite~l1 hospitableness~l1 x00000001 )
( hospitableness~l1 opposite~l1 inhospitableness~l1 x00000001 )
( unadaptability~l1 opposite~l1 adaptability~l1 x00000001 )
( adaptability~l1 opposite~l1 unadaptability~l1 x00000001 )
( inflexibility~l1 opposite~l1 flexibleness~l1 x00000001 )
( flexibleness~l1 opposite~l1 inflexibility~l1 x00000001 )
( unthoughtfulness~l1 opposite~l1 thoughtfulness~l1 x00000001 )
( thoughtfulness~l1 opposite~l1 unthoughtfulness~l1 x00000001 )
( inattentiveness~l1 opposite~l1 attentiveness~l1 x00000001 )
( attentiveness~l1 opposite~l1 inattentiveness~l1 x00000001 )
( carelessness~l1 opposite~l1 carefulness~l1 x00000001 )
( carefulness~l1 opposite~l1 carelessness~l1 x00000001 )
( unmindfulness~l1 opposite~l1 mindfulness~l1 x00000001 )
( mindfulness~l1 opposite~l1 unmindfulness~l1 x00000001 )
( incautiousness~l1 opposite~l1 cautiousness~l1 x00000001 )
( cautiousness~l1 opposite~l1 incautiousness~l1 x00000001 )
( unwariness~l1 opposite~l1 chariness~l1 x00000001 )
( chariness~l1 opposite~l1 unwariness~l1 x00000001 )
( femininity~l1 opposite~l1 masculinity~l1 x00000001 )
( masculinity~l1 opposite~l1 femininity~l1 x00000001 )
( untrustworthiness~l1 opposite~l1 trustworthiness~l1 x00000001 )
( trustworthiness~l1 opposite~l1 untrustworthiness~l1 x00000001 )
( irresponsibleness~l1 opposite~l1 responsibleness~l1 x00000001 )
( responsibleness~l1 opposite~l1 irresponsibleness~l1 x00000001 )
( undependableness~l1 opposite~l1 dependableness~l1 x00000001 )
( dependableness~l1 opposite~l1 undependableness~l1 x00000001 )
( unconscientiousness~l1 opposite~l1 conscientiousness~l1 x00000001 )
( conscientiousness~l1 opposite~l1 unconscientiousness~l1 x00000001 )
( hairlessness~l1 opposite~l1 hairiness~l1 x00000001 )
( hairiness~l1 opposite~l1 hairlessness~l1 x00000001 )
( ugliness~l1 opposite~l1 beauty~l1 x00000001 )
( beauty~l1 opposite~l1 ugliness~l1 x00000001 )
( unpleasingness~l1 opposite~l1 pleasingness~l1 x00000001 )
( pleasingness~l1 opposite~l1 unpleasingness~l1 x00000001 )
( unattractiveness~l1 opposite~l1 attractiveness~l1 x00000001 )
( attractiveness~l1 opposite~l1 unattractiveness~l1 x00000001 )
( opaqueness~l1 opposite~l1 uncloudedness~l1 x00000001 )
( uncloudedness~l1 opposite~l1 opaqueness~l1 x00000001 )
( indistinctness~l1 opposite~l1 distinctness~l1 x00000001 )
( distinctness~l1 opposite~l1 indistinctness~l1 x00000001 )
( obtuseness~l1 opposite~l1 acuteness~l1 x00000001 )
( acuteness~l1 opposite~l1 obtuseness~l1 x00000001 )
( inconspicuousness~l1 opposite~l1 conspicuousness~l1 x00000001 )
( conspicuousness~l1 opposite~l1 inconspicuousness~l1 x00000001 )
( unobtrusiveness~l1 opposite~l1 obtrusiveness~l1 x00000001 )
( obtrusiveness~l1 opposite~l1 unobtrusiveness~l1 x00000001 )
( difficultness~l1 opposite~l1 simplicity~l1 x00000001 )
( simplicity~l1 opposite~l1 difficultness~l1 x00000001 )
( effortfulness~l1 opposite~l1 effortlessness~l1 x00000001 )
( effortlessness~l1 opposite~l1 effortfulness~l1 x00000001 )
( incompatibility~l1 opposite~l1 compatibility~l1 x00000001 )
( compatibility~l1 opposite~l1 incompatibility~l1 x00000001 )
( incongruousness~l1 opposite~l1 congruousness~l1 x00000001 )
( congruousness~l1 opposite~l1 incongruousness~l1 x00000001 )
( unsuitableness~l1 opposite~l1 suitableness~l1 x00000001 )
( suitableness~l1 opposite~l1 unsuitableness~l1 x00000001 )
( inappropriateness~l1 opposite~l1 appropriateness~l1 x00000001 )
( appropriateness~l1 opposite~l1 inappropriateness~l1 x00000001 )
( infelicity~l1 opposite~l1 felicitousness~l1 x00000001 )
( felicitousness~l1 opposite~l1 infelicity~l1 x00000001 )
( inappositeness~l1 opposite~l1 appositeness~l1 x00000001 )
( appositeness~l1 opposite~l1 inappositeness~l1 x00000001 )
( unfitness~l1 opposite~l1 fittingness~l1 x00000001 )
( fittingness~l1 opposite~l1 unfitness~l1 x00000001 )
( ineligibility~l1 opposite~l1 eligibility~l1 x00000001 )
( eligibility~l1 opposite~l1 ineligibility~l1 x00000001 )
( uninsurability~l1 opposite~l1 insurability~l1 x00000001 )
( insurability~l1 opposite~l1 uninsurability~l1 x00000001 )
( inconvenience~l1 opposite~l1 convenience~l1 x00000001 )
( convenience~l1 opposite~l1 inconvenience~l1 x00000001 )
( inopportuneness~l1 opposite~l1 opportuneness~l1 x00000001 )
( opportuneness~l1 opposite~l1 inopportuneness~l1 x00000001 )
( inaccessibility~l1 opposite~l1 accessibility~l1 x00000001 )
( accessibility~l1 opposite~l1 inaccessibility~l1 x00000001 )
( inferiority~l1 opposite~l1 high_quality~l1 x00000001 )
( high_quality~l1 opposite~l1 inferiority~l1 x00000001 )
( unchangeableness~l1 opposite~l1 changeableness~l1 x00000001 )
( changeableness~l1 opposite~l1 unchangeableness~l1 x00000001 )
( irreversibility~l1 opposite~l1 reversibility~l1 x00000001 )
( reversibility~l1 opposite~l1 irreversibility~l1 x00000001 )
( constancy~l1 opposite~l1 changefulness~l1 x00000001 )
( changefulness~l1 opposite~l1 constancy~l1 x00000001 )
( invariableness~l1 opposite~l1 variableness~l1 x00000001 )
( variableness~l1 opposite~l1 invariableness~l1 x00000001 )
( unvariedness~l1 opposite~l1 variedness~l1 x00000001 )
( variedness~l1 opposite~l1 unvariedness~l1 x00000001 )
( unexchangeability~l1 opposite~l1 interchangeableness~l1 x00000001 )
( interchangeableness~l1 opposite~l1 unexchangeability~l1 x00000001 )
( inconvertibility~l1 opposite~l1 convertibility~l1 x00000001 )
( convertibility~l1 opposite~l1 inconvertibility~l1 x00000001 )
( immutableness~l1 opposite~l1 mutableness~l1 x00000001 )
( mutableness~l1 opposite~l1 immutableness~l1 x00000001 )
( unalterability~l1 opposite~l1 alterability~l1 x00000001 )
( alterability~l1 opposite~l1 unalterability~l1 x00000001 )
( difference~l1 opposite~l1 sameness~l1 x00000001 )
( sameness~l1 opposite~l1 difference~l1 x00000001 )
( dissimilarity~l1 opposite~l1 similarity~l1 x00000001 )
( similarity~l1 opposite~l1 dissimilarity~l1 x00000001 )
( dissimilitude~l1 opposite~l1 similitude~l1 x00000001 )
( similitude~l1 opposite~l1 dissimilitude~l1 x00000001 )
( nonuniformity~l1 opposite~l1 uniformness~l1 x00000001 )
( uniformness~l1 opposite~l1 nonuniformity~l1 x00000001 )
( heterogeneousness~l1 opposite~l1 homogeneousness~l1 x00000001 )
( homogeneousness~l1 opposite~l1 heterogeneousness~l1 x00000001 )
( inconsistency~l1 opposite~l1 consistency~l1 x00000001 )
( consistency~l1 opposite~l1 inconsistency~l1 x00000001 )
( inequality~l1 opposite~l1 equality~l1 x00000001 )
( equality~l1 opposite~l1 inequality~l1 x00000001 )
( nonequivalence~l1 opposite~l1 equivalence~l1 x00000001 )
( equivalence~l1 opposite~l1 nonequivalence~l1 x00000001 )
( unevenness~l1 opposite~l1 evenness~l1 x00000001 )
( evenness~l1 opposite~l1 unevenness~l1 x00000001 )
( precariousness~l1 opposite~l1 foregone_conclusion~l1 x00000001 )
( foregone_conclusion~l1 opposite~l1 precariousness~l1 x00000001 )
( inconclusiveness~l1 opposite~l1 conclusiveness~l1 x00000001 )
( conclusiveness~l1 opposite~l1 inconclusiveness~l1 x00000001 )
( unpredictability~l1 opposite~l1 predictability~l1 x00000001 )
( predictability~l1 opposite~l1 unpredictability~l1 x00000001 )
( improbableness~l1 opposite~l1 probability~l1 x00000001 )
( probability~l1 opposite~l1 improbableness~l1 x00000001 )
( unlikelihood~l1 opposite~l1 likelihood~l1 x00000001 )
( likelihood~l1 opposite~l1 unlikelihood~l1 x00000001 )
( counterfactuality~l1 opposite~l1 factualness~l1 x00000001 )
( factualness~l1 opposite~l1 counterfactuality~l1 x00000001 )
( abstractness~l1 opposite~l1 concreteness~l1 x00000001 )
( concreteness~l1 opposite~l1 abstractness~l1 x00000001 )
( intangibleness~l1 opposite~l1 tangibleness~l1 x00000001 )
( tangibleness~l1 opposite~l1 intangibleness~l1 x00000001 )
( incorporeality~l1 opposite~l1 physicalness~l1 x00000001 )
( physicalness~l1 opposite~l1 incorporeality~l1 x00000001 )
( insubstantiality~l1 opposite~l1 substantialness~l1 x00000001 )
( substantialness~l1 opposite~l1 insubstantiality~l1 x00000001 )
( unreality~l1 opposite~l1 reality~l1 x00000001 )
( reality~l1 opposite~l1 unreality~l1 x00000001 )
( generality~l1 opposite~l1 particularity~l1 x00000001 )
( particularity~l1 opposite~l1 generality~l1 x00000001 )
( commonality~l1 opposite~l1 individuality~l1 x00000001 )
( individuality~l1 opposite~l1 commonality~l1 x00000001 )
( complexness~l1 opposite~l1 simplicity~l1 x00000001 )
( simplicity~l1 opposite~l1 complexness~l1 x00000001 )
( irregularity~l1 opposite~l1 regularity~l1 x00000001 )
( regularity~l1 opposite~l1 irregularity~l1 x00000001 )
( variability~l1 opposite~l1 invariability~l1 x00000001 )
( invariability~l1 opposite~l1 variability~l1 x00000001 )
( unsteadiness~l1 opposite~l1 steadiness~l1 x00000001 )
( steadiness~l1 opposite~l1 unsteadiness~l1 x00000001 )
( immobility~l1 opposite~l1 mobility~l1 x00000001 )
( mobility~l1 opposite~l1 immobility~l1 x00000001 )
( immotility~l1 opposite~l1 motility~l1 x00000001 )
( motility~l1 opposite~l1 immotility~l1 x00000001 )
( immovableness~l1 opposite~l1 movableness~l1 x00000001 )
( movableness~l1 opposite~l1 immovableness~l1 x00000001 )
( tightness~l1 opposite~l1 looseness~l1 x00000001 )
( looseness~l1 opposite~l1 tightness~l1 x00000001 )
( stableness~l1 opposite~l1 unstableness~l1 x00000001 )
( unstableness~l1 opposite~l1 stableness~l1 x00000001 )
( looseness~l1 opposite~l1 secureness~l1 x00000001 )
( secureness~l1 opposite~l1 looseness~l1 x00000001 )
( unpleasantness~l1 opposite~l1 pleasantness~l1 x00000001 )
( pleasantness~l1 opposite~l1 unpleasantness~l1 x00000001 )
( nastiness~l1 opposite~l1 niceness~l1 x00000001 )
( niceness~l1 opposite~l1 nastiness~l1 x00000001 )
( incredibleness~l1 opposite~l1 believability~l1 x00000001 )
( believability~l1 opposite~l1 incredibleness~l1 x00000001 )
( implausibleness~l1 opposite~l1 plausibleness~l1 x00000001 )
( plausibleness~l1 opposite~l1 implausibleness~l1 x00000001 )
( illogicalness~l1 opposite~l1 logicalness~l1 x00000001 )
( logicalness~l1 opposite~l1 illogicalness~l1 x00000001 )
( unnaturalness~l1 opposite~l1 naturalness~l1 x00000001 )
( naturalness~l1 opposite~l1 unnaturalness~l1 x00000001 )
( affectedness~l1 opposite~l1 unaffectedness~l1 x00000001 )
( unaffectedness~l1 opposite~l1 affectedness~l1 x00000001 )
( pretentiousness~l1 opposite~l1 unpretentiousness~l1 x00000001 )
( unpretentiousness~l1 opposite~l1 pretentiousness~l1 x00000001 )
( unwholesomeness~l1 opposite~l1 wholesomeness~l1 x00000001 )
( wholesomeness~l1 opposite~l1 unwholesomeness~l1 x00000001 )
( unhealthfulness~l1 opposite~l1 healthfulness~l1 x00000001 )
( healthfulness~l1 opposite~l1 unhealthfulness~l1 x00000001 )
( insalubriousness~l1 opposite~l1 salubriousness~l1 x00000001 )
( salubriousness~l1 opposite~l1 insalubriousness~l1 x00000001 )
( unsatisfactoriness~l1 opposite~l1 satisfactoriness~l1 x00000001 )
( satisfactoriness~l1 opposite~l1 unsatisfactoriness~l1 x00000001 )
( inadequateness~l1 opposite~l1 adequateness~l1 x00000001 )
( adequateness~l1 opposite~l1 inadequateness~l1 x00000001 )
( unacceptableness~l1 opposite~l1 acceptableness~l1 x00000001 )
( acceptableness~l1 opposite~l1 unacceptableness~l1 x00000001 )
( inadmissibility~l1 opposite~l1 admissibility~l1 x00000001 )
( admissibility~l1 opposite~l1 inadmissibility~l1 x00000001 )
( impermissibility~l1 opposite~l1 permissibility~l1 x00000001 )
( permissibility~l1 opposite~l1 impermissibility~l1 x00000001 )
( extraordinariness~l1 opposite~l1 ordinariness~l1 x00000001 )
( ordinariness~l1 opposite~l1 extraordinariness~l1 x00000001 )
( unexpectedness~l1 opposite~l1 expectedness~l1 x00000001 )
( expectedness~l1 opposite~l1 unexpectedness~l1 x00000001 )
( uncommonness~l1 opposite~l1 commonplaceness~l1 x00000001 )
( commonplaceness~l1 opposite~l1 uncommonness~l1 x00000001 )
( unusualness~l1 opposite~l1 usualness~l1 x00000001 )
( usualness~l1 opposite~l1 unusualness~l1 x00000001 )
( unfamiliarity~l1 opposite~l1 familiarity~l1 x00000001 )
( familiarity~l1 opposite~l1 unfamiliarity~l1 x00000001 )
( nativeness~l1 opposite~l1 foreignness~l1 x00000001 )
( foreignness~l1 opposite~l1 nativeness~l1 x00000001 )
( unoriginality~l1 opposite~l1 originality~l1 x00000001 )
( originality~l1 opposite~l1 unoriginality~l1 x00000001 )
( orthodoxy~l1 opposite~l1 unorthodoxy~l1 x00000001 )
( unorthodoxy~l1 opposite~l1 orthodoxy~l1 x00000001 )
( conventionality~l1 opposite~l1 unconventionality~l1 x00000001 )
( unconventionality~l1 opposite~l1 conventionality~l1 x00000001 )
( incorrectness~l1 opposite~l1 correctness~l1 x00000001 )
( correctness~l1 opposite~l1 incorrectness~l1 x00000001 )
( inaccuracy~l1 opposite~l1 accuracy~l1 x00000001 )
( accuracy~l1 opposite~l1 inaccuracy~l1 x00000001 )
( inexactitude~l1 opposite~l1 exactitude~l1 x00000001 )
( exactitude~l1 opposite~l1 inexactitude~l1 x00000001 )
( impreciseness~l1 opposite~l1 preciseness~l1 x00000001 )
( preciseness~l1 opposite~l1 impreciseness~l1 x00000001 )
( fallibility~l1 opposite~l1 infallibility~l1 x00000001 )
( infallibility~l1 opposite~l1 fallibility~l1 x00000001 )
( errancy~l1 opposite~l1 inerrancy~l1 x00000001 )
( inerrancy~l1 opposite~l1 errancy~l1 x00000001 )
( unworthiness~l1 opposite~l1 worthiness~l1 x00000001 )
( worthiness~l1 opposite~l1 unworthiness~l1 x00000001 )
( unpopularity~l1 opposite~l1 popularity~l1 x00000001 )
( popularity~l1 opposite~l1 unpopularity~l1 x00000001 )
( illegality~l1 opposite~l1 legality~l1 x00000001 )
( legality~l1 opposite~l1 illegality~l1 x00000001 )
( unlawfulness~l1 opposite~l1 lawfulness~l1 x00000001 )
( lawfulness~l1 opposite~l1 unlawfulness~l1 x00000001 )
( illegitimacy~l1 opposite~l1 legitimacy~l1 x00000001 )
( legitimacy~l1 opposite~l1 illegitimacy~l1 x00000001 )
( illicitness~l1 opposite~l1 licitness~l1 x00000001 )
( licitness~l1 opposite~l1 illicitness~l1 x00000001 )
( inelegance~l1 opposite~l1 elegance~l1 x00000001 )
( elegance~l1 opposite~l1 inelegance~l1 x00000001 )
( tastelessness~l1 opposite~l1 tastefulness~l1 x00000001 )
( tastefulness~l1 opposite~l1 tastelessness~l1 x00000001 )
( urbanity~l1 opposite~l1 rusticity~l1 x00000001 )
( rusticity~l1 opposite~l1 urbanity~l1 x00000001 )
( incomprehensibility~l1 opposite~l1 comprehensibility~l1 x00000001 )
( comprehensibility~l1 opposite~l1 incomprehensibility~l1 x00000001 )
( illegibility~l1 opposite~l1 readability~l1 x00000001 )
( readability~l1 opposite~l1 illegibility~l1 x00000001 )
( unintelligibility~l1 opposite~l1 intelligibility~l1 x00000001 )
( intelligibility~l1 opposite~l1 unintelligibility~l1 x00000001 )
( unclearness~l1 opposite~l1 pellucidity~l1 x00000001 )
( pellucidity~l1 opposite~l1 unclearness~l1 x00000001 )
( reconditeness~l1 opposite~l1 pellucidity~l1 x00000001 )
( pellucidity~l1 opposite~l1 reconditeness~l1 x00000001 )
( lexical_ambiguity~l1 opposite~l1 monosemy~l1 x00000001 )
( monosemy~l1 opposite~l1 lexical_ambiguity~l1 x00000001 )
( equivocalness~l1 opposite~l1 unequivocalness~l1 x00000001 )
( unequivocalness~l1 opposite~l1 equivocalness~l1 x00000001 )
( inexplicitness~l1 opposite~l1 explicitness~l1 x00000001 )
( explicitness~l1 opposite~l1 inexplicitness~l1 x00000001 )
( unrighteousness~l1 opposite~l1 righteousness~l1 x00000001 )
( righteousness~l1 opposite~l1 unrighteousness~l1 x00000001 )
( impiousness~l1 opposite~l1 piousness~l1 x00000001 )
( piousness~l1 opposite~l1 impiousness~l1 x00000001 )
( ungodliness~l1 opposite~l1 godliness~l1 x00000001 )
( godliness~l1 opposite~l1 ungodliness~l1 x00000001 )
( inhumaneness~l1 opposite~l1 humaneness~l1 x00000001 )
( humaneness~l1 opposite~l1 inhumaneness~l1 x00000001 )
( unmercifulness~l1 opposite~l1 mercifulness~l1 x00000001 )
( mercifulness~l1 opposite~l1 unmercifulness~l1 x00000001 )
( stinginess~l1 opposite~l1 generousness~l1 x00000001 )
( generousness~l1 opposite~l1 stinginess~l1 x00000001 )
( illiberality~l1 opposite~l1 liberalness~l1 x00000001 )
( liberalness~l1 opposite~l1 illiberality~l1 x00000001 )
( selfishness~l1 opposite~l1 unselfishness~l1 x00000001 )
( unselfishness~l1 opposite~l1 selfishness~l1 x00000001 )
( self-centeredness~l1 opposite~l1 selflessness~l1 x00000001 )
( selflessness~l1 opposite~l1 self-centeredness~l1 x00000001 )
( unfairness~l1 opposite~l1 fairness~l1 x00000001 )
( fairness~l1 opposite~l1 unfairness~l1 x00000001 )
( unkindness~l1 opposite~l1 kindness~l1 x00000001 )
( kindness~l1 opposite~l1 unkindness~l1 x00000001 )
( maleficence~l1 opposite~l1 beneficence~l1 x00000001 )
( beneficence~l1 opposite~l1 maleficence~l1 x00000001 )
( malignancy~l1 opposite~l1 graciousness~l1 x00000001 )
( graciousness~l1 opposite~l1 malignancy~l1 x00000001 )
( inconsiderateness~l1 opposite~l1 considerateness~l1 x00000001 )
( considerateness~l1 opposite~l1 inconsiderateness~l1 x00000001 )
( tactlessness~l1 opposite~l1 tactfulness~l1 x00000001 )
( tactfulness~l1 opposite~l1 tactlessness~l1 x00000001 )
( insensitiveness~l1 opposite~l1 sensitiveness~l1 x00000001 )
( sensitiveness~l1 opposite~l1 insensitiveness~l1 x00000001 )
( unperceptiveness~l1 opposite~l1 perceptiveness~l1 x00000001 )
( perceptiveness~l1 opposite~l1 unperceptiveness~l1 x00000001 )
( immorality~l1 opposite~l1 morality~l1 x00000001 )
( morality~l1 opposite~l1 immorality~l1 x00000001 )
( wrongness~l1 opposite~l1 rightness~l1 x00000001 )
( rightness~l1 opposite~l1 wrongness~l1 x00000001 )
( evilness~l1 opposite~l1 goodness~l1 x00000001 )
( goodness~l1 opposite~l1 evilness~l1 x00000001 )
( unjustness~l1 opposite~l1 justness~l1 x00000001 )
( justness~l1 opposite~l1 unjustness~l1 x00000001 )
( wrongfulness~l1 opposite~l1 rightfulness~l1 x00000001 )
( rightfulness~l1 opposite~l1 wrongfulness~l1 x00000001 )
( incorruptibility~l1 opposite~l1 corruptibility~l1 x00000001 )
( corruptibility~l1 opposite~l1 incorruptibility~l1 x00000001 )
( incorruptness~l1 opposite~l1 corruptness~l1 x00000001 )
( corruptness~l1 opposite~l1 incorruptness~l1 x00000001 )
( unholiness~l1 opposite~l1 sanctitude~l1 x00000001 )
( sanctitude~l1 opposite~l1 unholiness~l1 x00000001 )
( dangerousness~l1 opposite~l1 safeness~l1 x00000001 )
( safeness~l1 opposite~l1 dangerousness~l1 x00000001 )
( incurableness~l1 opposite~l1 curableness~l1 x00000001 )
( curableness~l1 opposite~l1 incurableness~l1 x00000001 )
( cowardliness~l1 opposite~l1 courageousness~l1 x00000001 )
( courageousness~l1 opposite~l1 cowardliness~l1 x00000001 )
( faintheartedness~l1 opposite~l1 stoutheartedness~l1 x00000001 )
( stoutheartedness~l1 opposite~l1 faintheartedness~l1 x00000001 )
( fearfulness~l1 opposite~l1 fearlessness~l1 x00000001 )
( fearlessness~l1 opposite~l1 fearfulness~l1 x00000001 )
( timorousness~l1 opposite~l1 hardiness~l1 x00000001 )
( hardiness~l1 opposite~l1 timorousness~l1 x00000001 )
( gutlessness~l1 opposite~l1 pluckiness~l1 x00000001 )
( pluckiness~l1 opposite~l1 gutlessness~l1 x00000001 )
( irresoluteness~l1 opposite~l1 firmness_of_purpose~l1 x00000001 )
( firmness_of_purpose~l1 opposite~l1 irresoluteness~l1 x00000001 )
( indecisiveness~l1 opposite~l1 decisiveness~l1 x00000001 )
( decisiveness~l1 opposite~l1 indecisiveness~l1 x00000001 )
( insincerity~l1 opposite~l1 sincerity~l1 x00000001 )
( sincerity~l1 opposite~l1 insincerity~l1 x00000001 )
( dishonourableness~l1 opposite~l1 honourableness~l1 x00000001 )
( honourableness~l1 opposite~l1 dishonourableness~l1 x00000001 )
( dishonour~l1 opposite~l1 honour~l1 x00000001 )
( honour~l1 opposite~l1 dishonour~l1 x00000001 )
( unscrupulousness~l1 opposite~l1 scrupulousness~l1 x00000001 )
( scrupulousness~l1 opposite~l1 unscrupulousness~l1 x00000001 )
( unrespectability~l1 opposite~l1 respectability~l1 x00000001 )
( respectability~l1 opposite~l1 unrespectability~l1 x00000001 )
( dishonesty~l1 opposite~l1 honestness~l1 x00000001 )
( honestness~l1 opposite~l1 dishonesty~l1 x00000001 )
( untruthfulness~l1 opposite~l1 truthfulness~l1 x00000001 )
( truthfulness~l1 opposite~l1 untruthfulness~l1 x00000001 )
( mendacity~l1 opposite~l1 veracity~l1 x00000001 )
( veracity~l1 opposite~l1 mendacity~l1 x00000001 )
( disingenuousness~l1 opposite~l1 ingenuousness~l1 x00000001 )
( ingenuousness~l1 opposite~l1 disingenuousness~l1 x00000001 )
( artfulness~l1 opposite~l1 artlessness~l1 x00000001 )
( artlessness~l1 opposite~l1 artfulness~l1 x00000001 )
( unfaithfulness~l1 opposite~l1 faithfulness~l1 x00000001 )
( faithfulness~l1 opposite~l1 unfaithfulness~l1 x00000001 )
( disloyalty~l1 opposite~l1 trueness~l1 x00000001 )
( trueness~l1 opposite~l1 disloyalty~l1 x00000001 )
( naiveness~l1 opposite~l1 sophistication~l1 x00000001 )
( sophistication~l1 opposite~l1 naiveness~l1 x00000001 )
( indiscipline~l1 opposite~l1 discipline~l1 x00000001 )
( discipline~l1 opposite~l1 indiscipline~l1 x00000001 )
( unrestraint~l1 opposite~l1 restraint~l1 x00000001 )
( restraint~l1 opposite~l1 unrestraint~l1 x00000001 )
( intemperance~l1 opposite~l1 temperance~l1 x00000001 )
( temperance~l1 opposite~l1 intemperance~l1 x00000001 )
( humbleness~l1 opposite~l1 conceitedness~l1 x00000001 )
( conceitedness~l1 opposite~l1 humbleness~l1 x00000001 )
( foolishness~l1 opposite~l1 wiseness~l1 x00000001 )
( wiseness~l1 opposite~l1 foolishness~l1 x00000001 )
( imprudence~l1 opposite~l1 prudence~l1 x00000001 )
( prudence~l1 opposite~l1 imprudence~l1 x00000001 )
( shortsightedness~l1 opposite~l1 providence~l1 x00000001 )
( providence~l1 opposite~l1 shortsightedness~l1 x00000001 )
( distrustfulness~l1 opposite~l1 trustingness~l1 x00000001 )
( trustingness~l1 opposite~l1 distrustfulness~l1 x00000001 )
( uncleanliness~l1 opposite~l1 cleanliness~l1 x00000001 )
( cleanliness~l1 opposite~l1 uncleanliness~l1 x00000001 )
( untidiness~l1 opposite~l1 tidiness~l1 x00000001 )
( tidiness~l1 opposite~l1 untidiness~l1 x00000001 )
( improperness~l1 opposite~l1 correctitude~l1 x00000001 )
( correctitude~l1 opposite~l1 improperness~l1 x00000001 )
( indecorousness~l1 opposite~l1 decorousness~l1 x00000001 )
( decorousness~l1 opposite~l1 indecorousness~l1 x00000001 )
( political_incorrectness~l1 opposite~l1 political_correctitude~l1 x00000001 )
( political_correctitude~l1 opposite~l1 political_incorrectness~l1 x00000001 )
( unseemliness~l1 opposite~l1 seemliness~l1 x00000001 )
( seemliness~l1 opposite~l1 unseemliness~l1 x00000001 )
( unbecomingness~l1 opposite~l1 becomingness~l1 x00000001 )
( becomingness~l1 opposite~l1 unbecomingness~l1 x00000001 )
( indecency~l1 opposite~l1 decency~l1 x00000001 )
( decency~l1 opposite~l1 indecency~l1 x00000001 )
( immodesty~l1 opposite~l1 modestness~l1 x00000001 )
( modestness~l1 opposite~l1 immodesty~l1 x00000001 )
( discomposure~l1 opposite~l1 equanimity~l1 x00000001 )
( equanimity~l1 opposite~l1 discomposure~l1 x00000001 )
( intractableness~l1 opposite~l1 tractableness~l1 x00000001 )
( tractableness~l1 opposite~l1 intractableness~l1 x00000001 )
( wildness~l1 opposite~l1 domestication~l1 x00000001 )
( domestication~l1 opposite~l1 wildness~l1 x00000001 )
( disobedience~l1 opposite~l1 obedience~l1 x00000001 )
( obedience~l1 opposite~l1 disobedience~l1 x00000001 )
( insubordination~l1 opposite~l1 subordination~l1 x00000001 )
( subordination~l1 opposite~l1 insubordination~l1 x00000001 )
( informality~l1 opposite~l1 formalness~l1 x00000001 )
( formalness~l1 opposite~l1 informality~l1 x00000001 )
( unceremoniousness~l1 opposite~l1 ceremoniousness~l1 x00000001 )
( ceremoniousness~l1 opposite~l1 unceremoniousness~l1 x00000001 )
( discourtesy~l1 opposite~l1 good_manners~l1 x00000001 )
( good_manners~l1 opposite~l1 discourtesy~l1 x00000001 )
( impoliteness~l1 opposite~l1 politeness~l1 x00000001 )
( politeness~l1 opposite~l1 impoliteness~l1 x00000001 )
( ungraciousness~l1 opposite~l1 graciousness~l1 x00000001 )
( graciousness~l1 opposite~l1 ungraciousness~l1 x00000001 )
( incivility~l1 opposite~l1 civility~l1 x00000001 )
( civility~l1 opposite~l1 incivility~l1 x00000001 )
( anisotropy~l1 opposite~l1 isotropy~l1 x00000001 )
( isotropy~l1 opposite~l1 anisotropy~l1 x00000001 )
( indirectness~l1 opposite~l1 straightness~l1 x00000001 )
( straightness~l1 opposite~l1 indirectness~l1 x00000001 )
( mediateness~l1 opposite~l1 immediateness~l1 x00000001 )
( immediateness~l1 opposite~l1 mediateness~l1 x00000001 )
( newness~l1 opposite~l1 oldness~l1 x00000001 )
( oldness~l1 opposite~l1 newness~l1 x00000001 )
( staleness~l1 opposite~l1 freshness~l1 x00000001 )
( freshness~l1 opposite~l1 staleness~l1 x00000001 )
( youngness~l1 opposite~l1 oldness~l1 x00000001 )
( oldness~l1 opposite~l1 youngness~l1 x00000001 )
( reduced_instruction_set_computing~l1 opposite~l1 complex_instruction_set_computing~l1 x00000001 )
( complex_instruction_set_computing~l1 opposite~l1 reduced_instruction_set_computing~l1 x00000001 )
( thinness~l1 opposite~l1 thickness~l1 x00000001 )
( thickness~l1 opposite~l1 thinness~l1 x00000001 )
( softness~l1 opposite~l1 hardness~l1 x00000001 )
( hardness~l1 opposite~l1 softness~l1 x00000001 )
( incompressibility~l1 opposite~l1 compressibility~l1 x00000001 )
( compressibility~l1 opposite~l1 incompressibility~l1 x00000001 )
( unbreakableness~l1 opposite~l1 breakableness~l1 x00000001 )
( breakableness~l1 opposite~l1 unbreakableness~l1 x00000001 )
( solidness~l1 opposite~l1 porousness~l1 x00000001 )
( porousness~l1 opposite~l1 solidness~l1 x00000001 )
( impermeableness~l1 opposite~l1 permeableness~l1 x00000001 )
( permeableness~l1 opposite~l1 impermeableness~l1 x00000001 )
( impenetrability~l1 opposite~l1 penetrability~l1 x00000001 )
( penetrability~l1 opposite~l1 impenetrability~l1 x00000001 )
( nonabsorbency~l1 opposite~l1 absorbency~l1 x00000001 )
( absorbency~l1 opposite~l1 nonabsorbency~l1 x00000001 )
( raggedness~l1 opposite~l1 smoothness~l1 x00000001 )
( smoothness~l1 opposite~l1 raggedness~l1 x00000001 )
( dullness~l1 opposite~l1 brightness~l1 x00000001 )
( brightness~l1 opposite~l1 dullness~l1 x00000001 )
( colourlessness~l1 opposite~l1 colouring~l1 x00000001 )
( colouring~l1 opposite~l1 colourlessness~l1 x00000001 )
( achromatic_colour~l1 opposite~l1 chromatic_colour~l1 x00000001 )
( chromatic_colour~l1 opposite~l1 achromatic_colour~l1 x00000001 )
( whiteness~l1 opposite~l1 blackness~l1 x00000001 )
( blackness~l1 opposite~l1 whiteness~l1 x00000001 )
( depigmentation~l1 opposite~l1 pigmentation~l1 x00000001 )
( pigmentation~l1 opposite~l1 depigmentation~l1 x00000001 )
( darkness~l1 opposite~l1 lightness~l1 x00000001 )
( lightness~l1 opposite~l1 darkness~l1 x00000001 )
( silence~l1 opposite~l1 sound~l1 x00000001 )
( sound~l1 opposite~l1 silence~l1 x00000001 )
( dissonance~l1 opposite~l1 harmony~l1 x00000001 )
( harmony~l1 opposite~l1 dissonance~l1 x00000001 )
( low_frequency~l1 opposite~l1 high_frequency~l1 x00000001 )
( high_frequency~l1 opposite~l1 low_frequency~l1 x00000001 )
( softness~l1 opposite~l1 intensity~l1 x00000001 )
( intensity~l1 opposite~l1 softness~l1 x00000001 )
( unpalatableness~l1 opposite~l1 palatableness~l1 x00000001 )
( palatableness~l1 opposite~l1 unpalatableness~l1 x00000001 )
( unappetizingness~l1 opposite~l1 appetizingness~l1 x00000001 )
( appetizingness~l1 opposite~l1 unappetizingness~l1 x00000001 )
( indigestibleness~l1 opposite~l1 digestibleness~l1 x00000001 )
( digestibleness~l1 opposite~l1 indigestibleness~l1 x00000001 )
( spareness~l1 opposite~l1 avoirdupois~l1 x00000001 )
( avoirdupois~l1 opposite~l1 spareness~l1 x00000001 )
( shortness~l1 opposite~l1 tallness~l1 x00000001 )
( tallness~l1 opposite~l1 shortness~l1 x00000001 )
( awkwardness~l1 opposite~l1 gracefulness~l1 x00000001 )
( gracefulness~l1 opposite~l1 awkwardness~l1 x00000001 )
( inanimateness~l1 opposite~l1 animateness~l1 x00000001 )
( animateness~l1 opposite~l1 inanimateness~l1 x00000001 )
( insentience~l1 opposite~l1 sentience~l1 x00000001 )
( sentience~l1 opposite~l1 insentience~l1 x00000001 )
( feminineness~l1 opposite~l1 masculinity~l1 x00000001 )
( masculinity~l1 opposite~l1 feminineness~l1 x00000001 )
( high_temperature~l1 opposite~l1 low_temperature~l1 x00000001 )
( low_temperature~l1 opposite~l1 high_temperature~l1 x00000001 )
( imperceptibility~l1 opposite~l1 perceptibility~l1 x00000001 )
( perceptibility~l1 opposite~l1 imperceptibility~l1 x00000001 )
( invisibleness~l1 opposite~l1 visibleness~l1 x00000001 )
( visibleness~l1 opposite~l1 invisibleness~l1 x00000001 )
( inaudibleness~l1 opposite~l1 audibleness~l1 x00000001 )
( audibleness~l1 opposite~l1 inaudibleness~l1 x00000001 )
( inelasticity~l1 opposite~l1 elasticity~l1 x00000001 )
( elasticity~l1 opposite~l1 inelasticity~l1 x00000001 )
( unmalleability~l1 opposite~l1 malleability~l1 x00000001 )
( malleability~l1 opposite~l1 unmalleability~l1 x00000001 )
( inflexibleness~l1 opposite~l1 flexibleness~l1 x00000001 )
( flexibleness~l1 opposite~l1 inflexibleness~l1 x00000001 )
( weightlessness~l1 opposite~l1 weightiness~l1 x00000001 )
( weightiness~l1 opposite~l1 weightlessness~l1 x00000001 )
( weakness~l1 opposite~l1 strength~l1 x00000001 )
( strength~l1 opposite~l1 weakness~l1 x00000001 )
( weak_part~l1 opposite~l1 good_part~l1 x00000001 )
( good_part~l1 opposite~l1 weak_part~l1 x00000001 )
( unsoundness~l1 opposite~l1 soundness~l1 x00000001 )
( soundness~l1 opposite~l1 unsoundness~l1 x00000001 )
( vulnerability~l1 opposite~l1 invulnerability~l1 x00000001 )
( invulnerability~l1 opposite~l1 vulnerability~l1 x00000001 )
( alkalinity~l1 opposite~l1 acidity~l1 x00000001 )
( acidity~l1 opposite~l1 alkalinity~l1 x00000001 )
( indestructibility~l1 opposite~l1 destructibility~l1 x00000001 )
( destructibility~l1 opposite~l1 indestructibility~l1 x00000001 )
( lateness~l1 opposite~l1 earliness~l1 x00000001 )
( earliness~l1 opposite~l1 lateness~l1 x00000001 )
( subsequentness~l1 opposite~l1 antecedence~l1 x00000001 )
( antecedence~l1 opposite~l1 subsequentness~l1 x00000001 )
( tardiness~l1 opposite~l1 punctuality~l1 x00000001 )
( punctuality~l1 opposite~l1 tardiness~l1 x00000001 )
( unseasonableness~l1 opposite~l1 seasonableness~l1 x00000001 )
( seasonableness~l1 opposite~l1 unseasonableness~l1 x00000001 )
( presentness~l1 opposite~l1 pastness~l1 x00000001 )
( pastness~l1 opposite~l1 presentness~l1 x00000001 )
( futurity~l1 opposite~l1 pastness~l1 x00000001 )
( pastness~l1 opposite~l1 futurity~l1 x00000001 )
( presentness~l1 opposite~l1 futurity~l1 x00000001 )
( futurity~l1 opposite~l1 presentness~l1 x00000001 )
( shortness~l1 opposite~l1 longness~l1 x00000001 )
( longness~l1 opposite~l1 shortness~l1 x00000001 )
( impermanence~l1 opposite~l1 permanence~l1 x00000001 )
( permanence~l1 opposite~l1 impermanence~l1 x00000001 )
( immortality~l1 opposite~l1 mortality~l1 x00000001 )
( mortality~l1 opposite~l1 immortality~l1 x00000001 )
( dissymmetry~l1 opposite~l1 symmetricalness~l1 x00000001 )
( symmetricalness~l1 opposite~l1 dissymmetry~l1 x00000001 )
( radial_asymmetry~l1 opposite~l1 radial_symmetry~l1 x00000001 )
( radial_symmetry~l1 opposite~l1 radial_asymmetry~l1 x00000001 )
( gradualness~l1 opposite~l1 precipitousness~l1 x00000001 )
( precipitousness~l1 opposite~l1 gradualness~l1 x00000001 )
( roundness~l1 opposite~l1 angularity~l1 x00000001 )
( angularity~l1 opposite~l1 roundness~l1 x00000001 )
( unpointedness~l1 opposite~l1 pointedness~l1 x00000001 )
( pointedness~l1 opposite~l1 unpointedness~l1 x00000001 )
( eccentricity~l1 opposite~l1 concentricity~l1 x00000001 )
( concentricity~l1 opposite~l1 eccentricity~l1 x00000001 )
( crookedness~l1 opposite~l1 straightness~l1 x00000001 )
( straightness~l1 opposite~l1 crookedness~l1 x00000001 )
( straightness~l1 opposite~l1 curliness~l1 x00000001 )
( curliness~l1 opposite~l1 straightness~l1 x00000001 )
( marginality~l1 opposite~l1 centrality~l1 x00000001 )
( centrality~l1 opposite~l1 marginality~l1 x00000001 )
( posteriority~l1 opposite~l1 anteriority~l1 x00000001 )
( anteriority~l1 opposite~l1 posteriority~l1 x00000001 )
( inwardness~l1 opposite~l1 outwardness~l1 x00000001 )
( outwardness~l1 opposite~l1 inwardness~l1 x00000001 )
( southernness~l1 opposite~l1 northernness~l1 x00000001 )
( northernness~l1 opposite~l1 southernness~l1 x00000001 )
( closeness~l1 opposite~l1 farawayness~l1 x00000001 )
( farawayness~l1 opposite~l1 closeness~l1 x00000001 )
( concentration~l1 opposite~l1 distribution~l1 x00000001 )
( distribution~l1 opposite~l1 concentration~l1 x00000001 )
( superficiality~l1 opposite~l1 profoundness~l1 x00000001 )
( profoundness~l1 opposite~l1 superficiality~l1 x00000001 )
( low~l1 opposite~l1 high~l1 x00000001 )
( high~l1 opposite~l1 low~l1 x00000001 )
( slenderness~l1 opposite~l1 thickness~l1 x00000001 )
( thickness~l1 opposite~l1 slenderness~l1 x00000001 )
( littleness~l1 opposite~l1 largeness~l1 x00000001 )
( largeness~l1 opposite~l1 littleness~l1 x00000001 )
( negativeness~l1 opposite~l1 positiveness~l1 x00000001 )
( positiveness~l1 opposite~l1 negativeness~l1 x00000001 )
( decrement~l1 opposite~l1 increment~l1 x00000001 )
( increment~l1 opposite~l1 decrement~l1 x00000001 )
( insufficiency~l1 opposite~l1 sufficiency~l1 x00000001 )
( sufficiency~l1 opposite~l1 insufficiency~l1 x00000001 )
( scarceness~l1 opposite~l1 copiousness~l1 x00000001 )
( copiousness~l1 opposite~l1 scarceness~l1 x00000001 )
( immoderateness~l1 opposite~l1 moderateness~l1 x00000001 )
( moderateness~l1 opposite~l1 immoderateness~l1 x00000001 )
( minority~l1 opposite~l1 majority~l1 x00000001 )
( majority~l1 opposite~l1 minority~l1 x00000001 )
( shallowness~l1 opposite~l1 profoundness~l1 x00000001 )
( profoundness~l1 opposite~l1 shallowness~l1 x00000001 )
( narrowness~l1 opposite~l1 broadness~l1 x00000001 )
( broadness~l1 opposite~l1 narrowness~l1 x00000001 )
( lowness~l1 opposite~l1 loftiness~l1 x00000001 )
( loftiness~l1 opposite~l1 lowness~l1 x00000001 )
( worthlessness~l1 opposite~l1 worth~l1 x00000001 )
( worth~l1 opposite~l1 worthlessness~l1 x00000001 )
( demerit~l1 opposite~l1 virtue~l1 x00000001 )
( virtue~l1 opposite~l1 demerit~l1 x00000001 )
( undesirability~l1 opposite~l1 desirableness~l1 x00000001 )
( desirableness~l1 opposite~l1 undesirability~l1 x00000001 )
( badness~l1 opposite~l1 goodness~l1 x00000001 )
( goodness~l1 opposite~l1 badness~l1 x00000001 )
( penalty~l1 opposite~l1 advantage~l1 x00000001 )
( advantage~l1 opposite~l1 penalty~l1 x00000001 )
( inexpensiveness~l1 opposite~l1 expensiveness~l1 x00000001 )
( expensiveness~l1 opposite~l1 inexpensiveness~l1 x00000001 )
( fruitlessness~l1 opposite~l1 fruitfulness~l1 x00000001 )
( fruitfulness~l1 opposite~l1 fruitlessness~l1 x00000001 )
( unproductiveness~l1 opposite~l1 productiveness~l1 x00000001 )
( productiveness~l1 opposite~l1 unproductiveness~l1 x00000001 )
( unusefulness~l1 opposite~l1 usefulness~l1 x00000001 )
( usefulness~l1 opposite~l1 unusefulness~l1 x00000001 )
( impracticality~l1 opposite~l1 practicality~l1 x00000001 )
( practicality~l1 opposite~l1 impracticality~l1 x00000001 )
( impracticableness~l1 opposite~l1 practicableness~l1 x00000001 )
( practicableness~l1 opposite~l1 impracticableness~l1 x00000001 )
( infeasibility~l1 opposite~l1 feasibleness~l1 x00000001 )
( feasibleness~l1 opposite~l1 infeasibility~l1 x00000001 )
( incompetence~l1 opposite~l1 competence~l1 x00000001 )
( competence~l1 opposite~l1 incompetence~l1 x00000001 )
( liability~l1 opposite~l1 asset~l1 x00000001 )
( asset~l1 opposite~l1 liability~l1 x00000001 )
( disadvantage~l1 opposite~l1 advantage~l1 x00000001 )
( advantage~l1 opposite~l1 disadvantage~l1 x00000001 )
( unprofitableness~l1 opposite~l1 profitableness~l1 x00000001 )
( profitableness~l1 opposite~l1 unprofitableness~l1 x00000001 )
( inexpedience~l1 opposite~l1 expedience~l1 x00000001 )
( expedience~l1 opposite~l1 inexpedience~l1 x00000001 )
( weak_point~l1 opposite~l1 strong_point~l1 x00000001 )
( strong_point~l1 opposite~l1 weak_point~l1 x00000001 )
( inadvisability~l1 opposite~l1 advisability~l1 x00000001 )
( advisability~l1 opposite~l1 inadvisability~l1 x00000001 )
( unfavourableness~l1 opposite~l1 advantageousness~l1 x00000001 )
( advantageousness~l1 opposite~l1 unfavourableness~l1 x00000001 )
( inauspiciousness~l1 opposite~l1 auspiciousness~l1 x00000001 )
( auspiciousness~l1 opposite~l1 inauspiciousness~l1 x00000001 )
( destructiveness~l1 opposite~l1 constructiveness~l1 x00000001 )
( constructiveness~l1 opposite~l1 destructiveness~l1 x00000001 )
( unimportance~l1 opposite~l1 importance~l1 x00000001 )
( importance~l1 opposite~l1 unimportance~l1 x00000001 )
( insignificance~l1 opposite~l1 significance~l1 x00000001 )
( significance~l1 opposite~l1 insignificance~l1 x00000001 )
( meaninglessness~l1 opposite~l1 meaningfulness~l1 x00000001 )
( meaningfulness~l1 opposite~l1 meaninglessness~l1 x00000001 )
( purposelessness~l1 opposite~l1 sense_of_purpose~l1 x00000001 )
( sense_of_purpose~l1 opposite~l1 purposelessness~l1 x00000001 )
( inconsequence~l1 opposite~l1 consequence~l1 x00000001 )
( consequence~l1 opposite~l1 inconsequence~l1 x00000001 )
( inessentiality~l1 opposite~l1 essentialness~l1 x00000001 )
( essentialness~l1 opposite~l1 inessentiality~l1 x00000001 )
( dispensableness~l1 opposite~l1 indispensableness~l1 x00000001 )
( indispensableness~l1 opposite~l1 dispensableness~l1 x00000001 )
( powerlessness~l1 opposite~l1 powerfulness~l1 x00000001 )
( powerfulness~l1 opposite~l1 powerlessness~l1 x00000001 )
( unpersuasiveness~l1 opposite~l1 persuasiveness~l1 x00000001 )
( persuasiveness~l1 opposite~l1 unpersuasiveness~l1 x00000001 )
( uninterestingness~l1 opposite~l1 interestingness~l1 x00000001 )
( interestingness~l1 opposite~l1 uninterestingness~l1 x00000001 )
( ineffectiveness~l1 opposite~l1 effectiveness~l1 x00000001 )
( effectiveness~l1 opposite~l1 ineffectiveness~l1 x00000001 )
( inefficaciousness~l1 opposite~l1 efficaciousness~l1 x00000001 )
( efficaciousness~l1 opposite~l1 inefficaciousness~l1 x00000001 )
( inability~l1 opposite~l1 ability~l1 x00000001 )
( ability~l1 opposite~l1 inability~l1 x00000001 )
( incapableness~l1 opposite~l1 capableness~l1 x00000001 )
( capableness~l1 opposite~l1 incapableness~l1 x00000001 )
( incapacity~l1 opposite~l1 capacity~l1 x00000001 )
( capacity~l1 opposite~l1 incapacity~l1 x00000001 )
( boundedness~l1 opposite~l1 unboundedness~l1 x00000001 )
( unboundedness~l1 opposite~l1 boundedness~l1 x00000001 )
( insolubility~l1 opposite~l1 solubility~l1 x00000001 )
( solubility~l1 opposite~l1 insolubility~l1 x00000001 )
( pessimism~l1 opposite~l1 optimism~l1 x00000001 )
( optimism~l1 opposite~l1 pessimism~l1 x00000001 )
( unresponsiveness~l1 opposite~l1 responsiveness~l1 x00000001 )
( responsiveness~l1 opposite~l1 unresponsiveness~l1 x00000001 )
( unsolvability~l1 opposite~l1 solvability~l1 x00000001 )
( solvability~l1 opposite~l1 unsolvability~l1 x00000001 )
( flexor_muscle~l1 opposite~l1 extensor_muscle~l1 x00000001 )
( extensor_muscle~l1 opposite~l1 flexor_muscle~l1 x00000001 )
( sensory_receptor~l1 opposite~l1 effector~l1 x00000001 )
( effector~l1 opposite~l1 sensory_receptor~l1 x00000001 )
( medulla~l1 opposite~l1 cortex~l1 x00000001 )
( cortex~l1 opposite~l1 medulla~l1 x00000001 )
( injudiciousness~l1 opposite~l1 judiciousness~l1 x00000001 )
( judiciousness~l1 opposite~l1 injudiciousness~l1 x00000001 )
( stupidity~l1 opposite~l1 intelligence~l1 x00000001 )
( intelligence~l1 opposite~l1 stupidity~l1 x00000001 )
( inaptitude~l1 opposite~l1 aptitude~l1 x00000001 )
( aptitude~l1 opposite~l1 inaptitude~l1 x00000001 )
( incapacity~l1 opposite~l1 mental_ability~l1 x00000001 )
( mental_ability~l1 opposite~l1 incapacity~l1 x00000001 )
( incapableness~l1 opposite~l1 potentiality~l1 x00000001 )
( potentiality~l1 opposite~l1 incapableness~l1 x00000001 )
( imperfectibility~l1 opposite~l1 perfectibility~l1 x00000001 )
( perfectibility~l1 opposite~l1 imperfectibility~l1 x00000001 )
( uncreativeness~l1 opposite~l1 creative_thinking~l1 x00000001 )
( creative_thinking~l1 opposite~l1 uncreativeness~l1 x00000001 )
( infernal_region~l1 opposite~l1 Heaven~l1 x00000001 )
( Heaven~l1 opposite~l1 infernal_region~l1 x00000001 )
( analphabetism~l1 opposite~l1 literacy~l1 x00000001 )
( literacy~l1 opposite~l1 analphabetism~l1 x00000001 )
( unskillfulness~l1 opposite~l1 skillfulness~l1 x00000001 )
( skillfulness~l1 opposite~l1 unskillfulness~l1 x00000001 )
( incoordination~l1 opposite~l1 coordination~l1 x00000001 )
( coordination~l1 opposite~l1 incoordination~l1 x00000001 )
( disfluency~l1 opposite~l1 fluency~l1 x00000001 )
( fluency~l1 opposite~l1 disfluency~l1 x00000001 )
( inefficiency~l1 opposite~l1 efficiency~l1 x00000001 )
( efficiency~l1 opposite~l1 inefficiency~l1 x00000001 )
( kinanesthesia~l1 opposite~l1 sense_of_movement~l1 x00000001 )
( sense_of_movement~l1 opposite~l1 kinanesthesia~l1 x00000001 )
( spoils_system~l1 opposite~l1 merit_system~l1 x00000001 )
( merit_system~l1 opposite~l1 spoils_system~l1 x00000001 )
( unconsciousness~l1 opposite~l1 consciousness~l1 x00000001 )
( consciousness~l1 opposite~l1 unconsciousness~l1 x00000001 )
( incognizance~l1 opposite~l1 consciousness~l1 x00000001 )
( consciousness~l1 opposite~l1 incognizance~l1 x00000001 )
( unselfconsciousness~l1 opposite~l1 self-consciousness~l1 x00000001 )
( self-consciousness~l1 opposite~l1 unselfconsciousness~l1 x00000001 )
( insensibility~l1 opposite~l1 sensibility~l1 x00000001 )
( sensibility~l1 opposite~l1 insensibility~l1 x00000001 )
( sleeping~l1 opposite~l1 waking~l1 x00000001 )
( waking~l1 opposite~l1 sleeping~l1 x00000001 )
( doubtfulness~l1 opposite~l1 certainty~l1 x00000001 )
( certainty~l1 opposite~l1 doubtfulness~l1 x00000001 )
( inattention~l1 opposite~l1 attention~l1 x00000001 )
( attention~l1 opposite~l1 inattention~l1 x00000001 )
( inattentiveness~l1 opposite~l1 paying_attention~l1 x00000001 )
( paying_attention~l1 opposite~l1 inattentiveness~l1 x00000001 )
( inexperience~l1 opposite~l1 experience~l1 x00000001 )
( experience~l1 opposite~l1 inexperience~l1 x00000001 )
( synthetic_thinking~l1 opposite~l1 analytic_thinking~l1 x00000001 )
( analytic_thinking~l1 opposite~l1 synthetic_thinking~l1 x00000001 )
( out-of-the-box_thinking~l1 opposite~l1 convergent_thinking~l1 x00000001 )
( convergent_thinking~l1 opposite~l1 out-of-the-box_thinking~l1 x00000001 )
( incomprehension~l1 opposite~l1 comprehension~l1 x00000001 )
( comprehension~l1 opposite~l1 incomprehension~l1 x00000001 )
( general~l1 opposite~l1 particular~l1 x00000001 )
( particular~l1 opposite~l1 general~l1 x00000001 )
( misconception~l1 opposite~l1 conception~l1 x00000001 )
( conception~l1 opposite~l1 misconception~l1 x00000001 )
( antitype~l1 opposite~l1 type~l1 x00000001 )
( type~l1 opposite~l1 antitype~l1 x00000001 )
( divergence~l1 opposite~l1 convergence~l1 x00000001 )
( convergence~l1 opposite~l1 divergence~l1 x00000001 )
( middle~l1 opposite~l1 beginning~l1 x00000001 )
( beginning~l1 opposite~l1 middle~l1 x00000001 )
( end~l1 opposite~l1 beginning~l1 x00000001 )
( beginning~l1 opposite~l1 end~l1 x00000001 )
( end~l1 opposite~l1 middle~l1 x00000001 )
( middle~l1 opposite~l1 end~l1 x00000001 )
( reality_principle~l1 opposite~l1 pleasure-unpleasure_principle~l1 x00000001 )
( pleasure-unpleasure_principle~l1 opposite~l1 reality_principle~l1 x00000001 )
( yin~l1 opposite~l1 yang~l1 x00000001 )
( yang~l1 opposite~l1 yin~l1 x00000001 )
( ground~l1 opposite~l1 figure~l1 x00000001 )
( figure~l1 opposite~l1 ground~l1 x00000001 )
( disbelief~l1 opposite~l1 belief~l1 x00000001 )
( belief~l1 opposite~l1 disbelief~l1 x00000001 )
( cataphatism~l1 opposite~l1 apophatism~l1 x00000001 )
( apophatism~l1 opposite~l1 cataphatism~l1 x00000001 )
( doctrine_of_analogy~l1 opposite~l1 apophatism~l1 x00000001 )
( apophatism~l1 opposite~l1 doctrine_of_analogy~l1 x00000001 )
( doctrine_of_analogy~l1 opposite~l1 cataphatism~l1 x00000001 )
( cataphatism~l1 opposite~l1 doctrine_of_analogy~l1 x00000001 )
( imitation~l1 opposite~l1 formalism~l1 x00000001 )
( formalism~l1 opposite~l1 imitation~l1 x00000001 )
( nationalism~l1 opposite~l1 internationalism~l1 x00000001 )
( internationalism~l1 opposite~l1 nationalism~l1 x00000001 )
( pluralism~l1 opposite~l1 monism~l1 x00000001 )
( monism~l1 opposite~l1 pluralism~l1 x00000001 )
( nationalism~l1 opposite~l1 multiculturalism~l1 x00000001 )
( multiculturalism~l1 opposite~l1 nationalism~l1 x00000001 )
( hereditarianism~l1 opposite~l1 environmentalism~l1 x00000001 )
( environmentalism~l1 opposite~l1 hereditarianism~l1 x00000001 )
( unenlightenment~l1 opposite~l1 enlightenment~l1 x00000001 )
( enlightenment~l1 opposite~l1 unenlightenment~l1 x00000001 )
( unbounded_interval~l1 opposite~l1 bounded_interval~l1 x00000001 )
( bounded_interval~l1 opposite~l1 unbounded_interval~l1 x00000001 )
( cacogenics~l1 opposite~l1 eugenics~l1 x00000001 )
( eugenics~l1 opposite~l1 cacogenics~l1 x00000001 )
( holistic_theory~l1 opposite~l1 atomistic_theory~l1 x00000001 )
( atomistic_theory~l1 opposite~l1 holistic_theory~l1 x00000001 )
( corpuscular_theory_of_light~l1 opposite~l1 wave_theory_of_light~l1 x00000001 )
( wave_theory_of_light~l1 opposite~l1 corpuscular_theory_of_light~l1 x00000001 )
( Romantic_Movement~l1 opposite~l1 classicalism~l1 x00000001 )
( classicalism~l1 opposite~l1 Romantic_Movement~l1 x00000001 )
( prescriptive_linguistics~l1 opposite~l1 descriptive_linguistics~l1 x00000001 )
( descriptive_linguistics~l1 opposite~l1 prescriptive_linguistics~l1 x00000001 )
( Athanasianism~l1 opposite~l1 Arianism~l1 x00000001 )
( Arianism~l1 opposite~l1 Athanasianism~l1 x00000001 )
( nonpartisanship~l1 opposite~l1 partisanship~l1 x00000001 )
( partisanship~l1 opposite~l1 nonpartisanship~l1 x00000001 )
( fair-mindedness~l1 opposite~l1 unfairness~l1 x00000001 )
( unfairness~l1 opposite~l1 fair-mindedness~l1 x00000001 )
( intolerance~l1 opposite~l1 tolerance~l1 x00000001 )
( tolerance~l1 opposite~l1 intolerance~l1 x00000001 )
( narrow-mindedness~l1 opposite~l1 broad-mindedness~l1 x00000001 )
( broad-mindedness~l1 opposite~l1 narrow-mindedness~l1 x00000001 )
( disrespect~l1 opposite~l1 respect~l1 x00000001 )
( respect~l1 opposite~l1 disrespect~l1 x00000001 )
( irreverence~l1 opposite~l1 reverence~l1 x00000001 )
( reverence~l1 opposite~l1 irreverence~l1 x00000001 )
( nonconformance~l1 opposite~l1 conformity~l1 x00000001 )
( conformity~l1 opposite~l1 nonconformance~l1 x00000001 )
( hawkishness~l1 opposite~l1 dovishness~l1 x00000001 )
( dovishness~l1 opposite~l1 hawkishness~l1 x00000001 )
( theism~l1 opposite~l1 godlessness~l1 x00000001 )
( godlessness~l1 opposite~l1 theism~l1 x00000001 )
( polytheism~l1 opposite~l1 monotheism~l1 x00000001 )
( monotheism~l1 opposite~l1 polytheism~l1 x00000001 )
( verso~l1 opposite~l1 recto~l1 x00000001 )
( recto~l1 opposite~l1 verso~l1 x00000001 )
( electronic_mail~l1 opposite~l1 snail_mail~l1 x00000001 )
( snail_mail~l1 opposite~l1 electronic_mail~l1 x00000001 )
( equivalent_word~l1 opposite~l1 opposite_word~l1 x00000001 )
( opposite_word~l1 opposite~l1 equivalent_word~l1 x00000001 )
( singular_form~l1 opposite~l1 plural_form~l1 x00000001 )
( plural_form~l1 opposite~l1 singular_form~l1 x00000001 )
( oblique_case~l1 opposite~l1 nominative_case~l1 x00000001 )
( nominative_case~l1 opposite~l1 oblique_case~l1 x00000001 )
( misconstruction~l1 opposite~l1 grammatical_construction~l1 x00000001 )
( grammatical_construction~l1 opposite~l1 misconstruction~l1 x00000001 )
( common_noun~l1 opposite~l1 proper_noun~l1 x00000001 )
( proper_noun~l1 opposite~l1 common_noun~l1 x00000001 )
( flash-forward~l1 opposite~l1 flashback~l1 x00000001 )
( flashback~l1 opposite~l1 flash-forward~l1 x00000001 )
( text_edition~l1 opposite~l1 trade_edition~l1 x00000001 )
( trade_edition~l1 opposite~l1 text_edition~l1 x00000001 )
( source_program~l1 opposite~l1 object_program~l1 x00000001 )
( object_program~l1 opposite~l1 source_program~l1 x00000001 )
( dysphemism~l1 opposite~l1 euphemism~l1 x00000001 )
( euphemism~l1 opposite~l1 dysphemism~l1 x00000001 )
( surface_mail~l1 opposite~l1 air_mail~l1 x00000001 )
( air_mail~l1 opposite~l1 surface_mail~l1 x00000001 )
( inhospitality~l1 opposite~l1 cordial_reception~l1 x00000001 )
( cordial_reception~l1 opposite~l1 inhospitality~l1 x00000001 )
( con~l1 opposite~l1 pro~l1 x00000001 )
( pro~l1 opposite~l1 con~l1 x00000001 )
( nonintervention~l1 opposite~l1 intervention~l1 x00000001 )
( intervention~l1 opposite~l1 nonintervention~l1 x00000001 )
( disapproval~l1 opposite~l1 commendation~l1 x00000001 )
( commendation~l1 opposite~l1 disapproval~l1 x00000001 )
( disapprobation~l1 opposite~l1 approbation~l1 x00000001 )
( approbation~l1 opposite~l1 disapprobation~l1 x00000001 )
( discouragement~l1 opposite~l1 encouragement~l1 x00000001 )
( encouragement~l1 opposite~l1 discouragement~l1 x00000001 )
( falsehood~l1 opposite~l1 true_statement~l1 x00000001 )
( true_statement~l1 opposite~l1 falsehood~l1 x00000001 )
( circumstantial_evidence~l1 opposite~l1 direct_evidence~l1 x00000001 )
( direct_evidence~l1 opposite~l1 circumstantial_evidence~l1 x00000001 )
( universal_proposition~l1 opposite~l1 particular_proposition~l1 x00000001 )
( particular_proposition~l1 opposite~l1 universal_proposition~l1 x00000001 )
( syncategoreme~l1 opposite~l1 categoreme~l1 x00000001 )
( categoreme~l1 opposite~l1 syncategoreme~l1 x00000001 )
( understatement~l1 opposite~l1 overstatement~l1 x00000001 )
( overstatement~l1 opposite~l1 understatement~l1 x00000001 )
( contraindication~l1 opposite~l1 indication~l1 x00000001 )
( indication~l1 opposite~l1 contraindication~l1 x00000001 )
( Roman_numeral~l1 opposite~l1 Hindu-Arabic_numeral~l1 x00000001 )
( Hindu-Arabic_numeral~l1 opposite~l1 Roman_numeral~l1 x00000001 )
( subscript~l1 opposite~l1 superscript~l1 x00000001 )
( superscript~l1 opposite~l1 subscript~l1 x00000001 )
( lower-case_letter~l1 opposite~l1 upper-case_letter~l1 x00000001 )
( upper-case_letter~l1 opposite~l1 lower-case_letter~l1 x00000001 )
( proportional_font~l1 opposite~l1 constant-width_font~l1 x00000001 )
( constant-width_font~l1 opposite~l1 proportional_font~l1 x00000001 )
( old_style_font~l1 opposite~l1 modern_font~l1 x00000001 )
( modern_font~l1 opposite~l1 old_style_font~l1 x00000001 )
( atonality~l1 opposite~l1 tonality~l1 x00000001 )
( tonality~l1 opposite~l1 atonality~l1 x00000001 )
( natural_language~l1 opposite~l1 artificial_language~l1 x00000001 )
( artificial_language~l1 opposite~l1 natural_language~l1 x00000001 )
( one-dimensional_language~l1 opposite~l1 multidimensional_language~l1 x00000001 )
( multidimensional_language~l1 opposite~l1 one-dimensional_language~l1 x00000001 )
( unstratified_language~l1 opposite~l1 stratified_language~l1 x00000001 )
( stratified_language~l1 opposite~l1 unstratified_language~l1 x00000001 )
( tragedy~l1 opposite~l1 comedy~l1 x00000001 )
( comedy~l1 opposite~l1 tragedy~l1 x00000001 )
( polyphonic_music~l1 opposite~l1 monophonic_music~l1 x00000001 )
( monophonic_music~l1 opposite~l1 polyphonic_music~l1 x00000001 )
( resolution~l1 opposite~l1 preparation~l1 x00000001 )
( preparation~l1 opposite~l1 resolution~l1 x00000001 )
( diminution~l1 opposite~l1 augmentation~l1 x00000001 )
( augmentation~l1 opposite~l1 diminution~l1 x00000001 )
( verboseness~l1 opposite~l1 terseness~l1 x00000001 )
( terseness~l1 opposite~l1 verboseness~l1 x00000001 )
( consonant~l1 opposite~l1 vowel_sound~l1 x00000001 )
( vowel_sound~l1 opposite~l1 consonant~l1 x00000001 )
( continuant_consonant~l1 opposite~l1 plosive_speech_sound~l1 x00000001 )
( plosive_speech_sound~l1 opposite~l1 continuant_consonant~l1 x00000001 )
( direct_discourse~l1 opposite~l1 indirect_discourse~l1 x00000001 )
( indirect_discourse~l1 opposite~l1 direct_discourse~l1 x00000001 )
( disagreement~l1 opposite~l1 agreement~l1 x00000001 )
( agreement~l1 opposite~l1 disagreement~l1 x00000001 )
( answer~l1 opposite~l1 interrogation~l1 x00000001 )
( interrogation~l1 opposite~l1 answer~l1 x00000001 )
( negative~l1 opposite~l1 affirmative~l1 x00000001 )
( affirmative~l1 opposite~l1 negative~l1 x00000001 )
( no~l1 opposite~l1 yes~l1 x00000001 )
( yes~l1 opposite~l1 no~l1 x00000001 )
( nay~l1 opposite~l1 yea~l1 x00000001 )
( yea~l1 opposite~l1 nay~l1 x00000001 )
( dissuasion~l1 opposite~l1 persuasion~l1 x00000001 )
( persuasion~l1 opposite~l1 dissuasion~l1 x00000001 )
( conclusion~l1 opposite~l1 beginning~l1 x00000001 )
( beginning~l1 opposite~l1 conclusion~l1 x00000001 )
( disembarrassment~l1 opposite~l1 embarrassment~l1 x00000001 )
( embarrassment~l1 opposite~l1 disembarrassment~l1 x00000001 )
( success~l1 opposite~l1 failure~l1 x00000001 )
( failure~l1 opposite~l1 success~l1 x00000001 )
( decease~l1 opposite~l1 nativity~l1 x00000001 )
( nativity~l1 opposite~l1 decease~l1 x00000001 )
( immersion~l1 opposite~l1 emersion~l1 x00000001 )
( emersion~l1 opposite~l1 immersion~l1 x00000001 )
( downfall~l1 opposite~l1 rise~l1 x00000001 )
( rise~l1 opposite~l1 downfall~l1 x00000001 )
( increase~l1 opposite~l1 lessening~l1 x00000001 )
( lessening~l1 opposite~l1 increase~l1 x00000001 )
( levitation~l1 opposite~l1 gravitation~l1 x00000001 )
( gravitation~l1 opposite~l1 levitation~l1 x00000001 )
( ascension~l1 opposite~l1 fall~l1 x00000001 )
( fall~l1 opposite~l1 ascension~l1 x00000001 )
( low_water~l1 opposite~l1 high_water~l1 x00000001 )
( high_water~l1 opposite~l1 low_water~l1 x00000001 )
( rising_tide~l1 opposite~l1 ebbtide~l1 x00000001 )
( ebbtide~l1 opposite~l1 rising_tide~l1 x00000001 )
( springtide~l1 opposite~l1 neap_tide~l1 x00000001 )
( neap_tide~l1 opposite~l1 springtide~l1 x00000001 )
( waning~l1 opposite~l1 waxing~l1 x00000001 )
( waxing~l1 opposite~l1 waning~l1 x00000001 )
( self-fertilization~l1 opposite~l1 cross-fertilization~l1 x00000001 )
( cross-fertilization~l1 opposite~l1 self-fertilization~l1 x00000001 )
( autogamy~l1 opposite~l1 allogamy~l1 x00000001 )
( allogamy~l1 opposite~l1 autogamy~l1 x00000001 )
( self-pollination~l1 opposite~l1 cross-pollination~l1 x00000001 )
( cross-pollination~l1 opposite~l1 self-pollination~l1 x00000001 )
( counterclockwise_rotation~l1 opposite~l1 clockwise_rotation~l1 x00000001 )
( clockwise_rotation~l1 opposite~l1 counterclockwise_rotation~l1 x00000001 )
( licking~l1 opposite~l1 victory~l1 x00000001 )
( victory~l1 opposite~l1 licking~l1 x00000001 )
( anaphrodisia~l1 opposite~l1 aphrodisia~l1 x00000001 )
( aphrodisia~l1 opposite~l1 anaphrodisia~l1 x00000001 )
( painfulness~l1 opposite~l1 pleasance~l1 x00000001 )
( pleasance~l1 opposite~l1 painfulness~l1 x00000001 )
( dislike~l1 opposite~l1 liking~l1 x00000001 )
( liking~l1 opposite~l1 dislike~l1 x00000001 )
( disinclination~l1 opposite~l1 inclination~l1 x00000001 )
( inclination~l1 opposite~l1 disinclination~l1 x00000001 )
( disapproval~l1 opposite~l1 approval~l1 x00000001 )
( approval~l1 opposite~l1 disapproval~l1 x00000001 )
( Anglophobia~l1 opposite~l1 Anglophilia~l1 x00000001 )
( Anglophilia~l1 opposite~l1 Anglophobia~l1 x00000001 )
( misogynism~l1 opposite~l1 philogyny~l1 x00000001 )
( philogyny~l1 opposite~l1 misogynism~l1 x00000001 )
( ungratefulness~l1 opposite~l1 gratitude~l1 x00000001 )
( gratitude~l1 opposite~l1 ungratefulness~l1 x00000001 )
( unconcern~l1 opposite~l1 concern~l1 x00000001 )
( concern~l1 opposite~l1 unconcern~l1 x00000001 )
( humbleness~l1 opposite~l1 pridefulness~l1 x00000001 )
( pridefulness~l1 opposite~l1 humbleness~l1 x00000001 )
( solemnity~l1 opposite~l1 levity~l1 x00000001 )
( levity~l1 opposite~l1 solemnity~l1 x00000001 )
( calmness~l1 opposite~l1 agitation~l1 x00000001 )
( agitation~l1 opposite~l1 calmness~l1 x00000001 )
( confidence~l1 opposite~l1 self-distrust~l1 x00000001 )
( self-distrust~l1 opposite~l1 confidence~l1 x00000001 )
( unhappiness~l1 opposite~l1 happiness~l1 x00000001 )
( happiness~l1 opposite~l1 unhappiness~l1 x00000001 )
( sorrow~l1 opposite~l1 joyousness~l1 x00000001 )
( joyousness~l1 opposite~l1 sorrow~l1 x00000001 )
( dysphoria~l1 opposite~l1 euphoria~l1 x00000001 )
( euphoria~l1 opposite~l1 dysphoria~l1 x00000001 )
( discontentedness~l1 opposite~l1 contentment~l1 x00000001 )
( contentment~l1 opposite~l1 discontentedness~l1 x00000001 )
( dissatisfaction~l1 opposite~l1 satisfaction~l1 x00000001 )
( satisfaction~l1 opposite~l1 dissatisfaction~l1 x00000001 )
( despair~l1 opposite~l1 hope~l1 x00000001 )
( hope~l1 opposite~l1 despair~l1 x00000001 )
( hopelessness~l1 opposite~l1 hopefulness~l1 x00000001 )
( hopefulness~l1 opposite~l1 hopelessness~l1 x00000001 )
( love~l1 opposite~l1 hate~l1 x00000001 )
( hate~l1 opposite~l1 love~l1 x00000001 )
( malevolence~l1 opposite~l1 benevolence~l1 x00000001 )
( benevolence~l1 opposite~l1 malevolence~l1 x00000001 )
( ill_humour~l1 opposite~l1 good_humour~l1 x00000001 )
( good_humour~l1 opposite~l1 ill_humour~l1 x00000001 )
( cooking_apple~l1 opposite~l1 dessert_apple~l1 x00000001 )
( dessert_apple~l1 opposite~l1 cooking_apple~l1 x00000001 )
( whole_milk~l1 opposite~l1 skimmed_milk~l1 x00000001 )
( skimmed_milk~l1 opposite~l1 whole_milk~l1 x00000001 )
( varietal_wine~l1 opposite~l1 generic_wine~l1 x00000001 )
( generic_wine~l1 opposite~l1 varietal_wine~l1 x00000001 )
( young~l1 opposite~l1 old~l1 x00000001 )
( old~l1 opposite~l1 young~l1 x00000001 )
( cautious~l1 opposite~l1 brave~l1 x00000001 )
( brave~l1 opposite~l1 cautious~l1 x00000001 )
( living~l1 opposite~l1 dead~l1 x00000001 )
( dead~l1 opposite~l1 living~l1 x00000001 )
( uninitiate~l1 opposite~l1 enlightened~l1 x00000001 )
( enlightened~l1 opposite~l1 uninitiate~l1 x00000001 )
( vegetation~l1 opposite~l1 zoology~l1 x00000001 )
( zoology~l1 opposite~l1 vegetation~l1 x00000001 )
( prosecution~l1 opposite~l1 defense_lawyers~l1 x00000001 )
( defense_lawyers~l1 opposite~l1 prosecution~l1 x00000001 )
( defending_team~l1 opposite~l1 offense~l1 x00000001 )
( offense~l1 opposite~l1 defending_team~l1 x00000001 )
( temporalty~l1 opposite~l1 clergy~l1 x00000001 )
( clergy~l1 opposite~l1 temporalty~l1 x00000001 )
( rich_people~l1 opposite~l1 poor_people~l1 x00000001 )
( poor_people~l1 opposite~l1 rich_people~l1 x00000001 )
( singular_matrix~l1 opposite~l1 nonsingular_matrix~l1 x00000001 )
( nonsingular_matrix~l1 opposite~l1 singular_matrix~l1 x00000001 )
( nonalignment~l1 opposite~l1 coalition~l1 x00000001 )
( coalition~l1 opposite~l1 nonalignment~l1 x00000001 )
( socialist_economy~l1 opposite~l1 capitalist_economy~l1 x00000001 )
( capitalist_economy~l1 opposite~l1 socialist_economy~l1 x00000001 )
( non-market_economy~l1 opposite~l1 laissez-faire_economy~l1 x00000001 )
( laissez-faire_economy~l1 opposite~l1 non-market_economy~l1 x00000001 )
( hostile~l1 opposite~l1 friendly~l1 x00000001 )
( friendly~l1 opposite~l1 hostile~l1 x00000001 )
( boarding_school~l1 opposite~l1 day_school~l1 x00000001 )
( day_school~l1 opposite~l1 boarding_school~l1 x00000001 )
( night_school~l1 opposite~l1 day_school~l1 x00000001 )
( day_school~l1 opposite~l1 night_school~l1 x00000001 )
( international_law~l1 opposite~l1 civil_law~l1 x00000001 )
( civil_law~l1 opposite~l1 international_law~l1 x00000001 )
( rear~l1 opposite~l1 head~l1 x00000001 )
( head~l1 opposite~l1 rear~l1 x00000001 )
( there~l1 opposite~l1 here~l1 x00000001 )
( here~l1 opposite~l1 there~l1 x00000001 )
( antapex~l1 opposite~l1 apex_of_the_sun_'s_way~l1 x00000001 )
( apex_of_the_sun_'s_way~l1 opposite~l1 antapex~l1 x00000001 )
( perigee~l1 opposite~l1 apogee~l1 x00000001 )
( apogee~l1 opposite~l1 perigee~l1 x00000001 )
( point_of_periapsis~l1 opposite~l1 point_of_apoapsis~l1 x00000001 )
( point_of_apoapsis~l1 opposite~l1 point_of_periapsis~l1 x00000001 )
( perihelion~l1 opposite~l1 aphelion~l1 x00000001 )
( aphelion~l1 opposite~l1 perihelion~l1 x00000001 )
( perijove~l1 opposite~l1 apojove~l1 x00000001 )
( apojove~l1 opposite~l1 perijove~l1 x00000001 )
( periselene~l1 opposite~l1 aposelene~l1 x00000001 )
( aposelene~l1 opposite~l1 periselene~l1 x00000001 )
( descending_node~l1 opposite~l1 ascending_node~l1 x00000001 )
( ascending_node~l1 opposite~l1 descending_node~l1 x00000001 )
( antinode~l1 opposite~l1 node~l1 x00000001 )
( node~l1 opposite~l1 antinode~l1 x00000001 )
( head~l1 opposite~l1 foot~l1 x00000001 )
( foot~l1 opposite~l1 head~l1 x00000001 )
( backside~l1 opposite~l1 front_end~l1 x00000001 )
( front_end~l1 opposite~l1 backside~l1 x00000001 )
( exterior~l1 opposite~l1 interior~l1 x00000001 )
( interior~l1 opposite~l1 exterior~l1 x00000001 )
( windward~l1 opposite~l1 lee_side~l1 x00000001 )
( lee_side~l1 opposite~l1 windward~l1 x00000001 )
( minimum~l1 opposite~l1 maximum~l1 x00000001 )
( maximum~l1 opposite~l1 minimum~l1 x00000001 )
( zenith~l1 opposite~l1 nadir~l1 x00000001 )
( nadir~l1 opposite~l1 zenith~l1 x00000001 )
( left~l1 opposite~l1 right~l1 x00000001 )
( right~l1 opposite~l1 left~l1 x00000001 )
( front~l1 opposite~l1 back~l1 x00000001 )
( back~l1 opposite~l1 front~l1 x00000001 )
( populated_area~l1 opposite~l1 rural_area~l1 x00000001 )
( rural_area~l1 opposite~l1 populated_area~l1 x00000001 )
( free_state~l1 opposite~l1 slave_state~l1 x00000001 )
( slave_state~l1 opposite~l1 free_state~l1 x00000001 )
( disincentive~l1 opposite~l1 inducement~l1 x00000001 )
( inducement~l1 opposite~l1 disincentive~l1 x00000001 )
( adience~l1 opposite~l1 abience~l1 x00000001 )
( abience~l1 opposite~l1 adience~l1 x00000001 )
( declination~l1 opposite~l1 acclivity~l1 x00000001 )
( acclivity~l1 opposite~l1 declination~l1 x00000001 )
( open_chain~l1 opposite~l1 closed_chain~l1 x00000001 )
( closed_chain~l1 opposite~l1 open_chain~l1 x00000001 )
( tributary~l1 opposite~l1 distributary~l1 x00000001 )
( distributary~l1 opposite~l1 tributary~l1 x00000001 )
( lowland~l1 opposite~l1 highland~l1 x00000001 )
( highland~l1 opposite~l1 lowland~l1 x00000001 )
( territorial_waters~l1 opposite~l1 international_waters~l1 x00000001 )
( international_waters~l1 opposite~l1 territorial_waters~l1 x00000001 )
( requirement~l1 opposite~l1 nonessential~l1 x00000001 )
( nonessential~l1 opposite~l1 requirement~l1 x00000001 )
( natural_elevation~l1 opposite~l1 natural_depression~l1 x00000001 )
( natural_depression~l1 opposite~l1 natural_elevation~l1 x00000001 )
( good_spirit~l1 opposite~l1 cacodaemon~l1 x00000001 )
( cacodaemon~l1 opposite~l1 good_spirit~l1 x00000001 )
( juvenile_person~l1 opposite~l1 grownup~l1 x00000001 )
( grownup~l1 opposite~l1 juvenile_person~l1 x00000001 )
( liberator~l1 opposite~l1 capturer~l1 x00000001 )
( capturer~l1 opposite~l1 liberator~l1 x00000001 )
( male_person~l1 opposite~l1 female_person~l1 x00000001 )
( female_person~l1 opposite~l1 male_person~l1 x00000001 )
( follower~l1 opposite~l1 leader~l1 x00000001 )
( leader~l1 opposite~l1 follower~l1 x00000001 )
( religious_person~l1 opposite~l1 nonreligious_person~l1 x00000001 )
( nonreligious_person~l1 opposite~l1 religious_person~l1 x00000001 )
( worker~l1 opposite~l1 nonworker~l1 x00000001 )
( nonworker~l1 opposite~l1 worker~l1 x00000001 )
( drinker~l1 opposite~l1 nondrinker~l1 x00000001 )
( nondrinker~l1 opposite~l1 drinker~l1 x00000001 )
( complainant~l1 opposite~l1 defendant~l1 x00000001 )
( defendant~l1 opposite~l1 complainant~l1 x00000001 )
( unsuccessful_person~l1 opposite~l1 succeeder~l1 x00000001 )
( succeeder~l1 opposite~l1 unsuccessful_person~l1 x00000001 )
( stranger~l1 opposite~l1 acquaintance~l1 x00000001 )
( acquaintance~l1 opposite~l1 stranger~l1 x00000001 )
( agonist~l1 opposite~l1 antagonist~l1 x00000001 )
( antagonist~l1 opposite~l1 agonist~l1 x00000001 )
( enemy~l1 opposite~l1 friend~l1 x00000001 )
( friend~l1 opposite~l1 enemy~l1 x00000001 )
( professional~l1 opposite~l1 amateur~l1 x00000001 )
( amateur~l1 opposite~l1 professional~l1 x00000001 )
( descendant~l1 opposite~l1 antecedent~l1 x00000001 )
( antecedent~l1 opposite~l1 descendant~l1 x00000001 )
( uncle~l1 opposite~l1 auntie~l1 x00000001 )
( auntie~l1 opposite~l1 uncle~l1 x00000001 )
( good_egg~l1 opposite~l1 bad_egg~l1 x00000001 )
( bad_egg~l1 opposite~l1 good_egg~l1 x00000001 )
( good_guy~l1 opposite~l1 bad_guy~l1 x00000001 )
( bad_guy~l1 opposite~l1 good_guy~l1 x00000001 )
( good_person~l1 opposite~l1 bad_person~l1 x00000001 )
( bad_person~l1 opposite~l1 good_person~l1 x00000001 )
( bull~l1 opposite~l1 bear~l1 x00000001 )
( bear~l1 opposite~l1 bull~l1 x00000001 )
( lender~l1 opposite~l1 borrower~l1 x00000001 )
( borrower~l1 opposite~l1 lender~l1 x00000001 )
( sister~l1 opposite~l1 blood_brother~l1 x00000001 )
( blood_brother~l1 opposite~l1 sister~l1 x00000001 )
( parent~l1 opposite~l1 child~l1 x00000001 )
( child~l1 opposite~l1 parent~l1 x00000001 )
( noncitizen~l1 opposite~l1 citizen~l1 x00000001 )
( citizen~l1 opposite~l1 noncitizen~l1 x00000001 )
( military_personnel~l1 opposite~l1 civilian~l1 x00000001 )
( civilian~l1 opposite~l1 military_personnel~l1 x00000001 )
( romanticist~l1 opposite~l1 classicist~l1 x00000001 )
( classicist~l1 opposite~l1 romanticist~l1 x00000001 )
( layperson~l1 opposite~l1 man_of_the_cloth~l1 x00000001 )
( man_of_the_cloth~l1 opposite~l1 layperson~l1 x00000001 )
( progressive~l1 opposite~l1 conservativist~l1 x00000001 )
( conservativist~l1 opposite~l1 progressive~l1 x00000001 )
( nonconformist~l1 opposite~l1 conformist~l1 x00000001 )
( conformist~l1 opposite~l1 nonconformist~l1 x00000001 )
( Anglican~l1 opposite~l1 Nonconformist~l1 x00000001 )
( Nonconformist~l1 opposite~l1 Anglican~l1 x00000001 )
( debitor~l1 opposite~l1 creditor~l1 x00000001 )
( creditor~l1 opposite~l1 debitor~l1 x00000001 )
( son~l1 opposite~l1 daughter~l1 x00000001 )
( daughter~l1 opposite~l1 son~l1 x00000001 )
( war_hawk~l1 opposite~l1 peacenik~l1 x00000001 )
( peacenik~l1 opposite~l1 war_hawk~l1 x00000001 )
( military_volunteer~l1 opposite~l1 conscript~l1 x00000001 )
( conscript~l1 opposite~l1 military_volunteer~l1 x00000001 )
( nondriver~l1 opposite~l1 driver~l1 x00000001 )
( driver~l1 opposite~l1 nondriver~l1 x00000001 )
( elitist~l1 opposite~l1 equalitarian~l1 x00000001 )
( equalitarian~l1 opposite~l1 elitist~l1 x00000001 )
( unemotional_person~l1 opposite~l1 emotional_person~l1 x00000001 )
( emotional_person~l1 opposite~l1 unemotional_person~l1 x00000001 )
( employer~l1 opposite~l1 employee~l1 x00000001 )
( employee~l1 opposite~l1 employer~l1 x00000001 )
( lay_witness~l1 opposite~l1 expert_witness~l1 x00000001 )
( expert_witness~l1 opposite~l1 lay_witness~l1 x00000001 )
( introvert~l1 opposite~l1 extrovert~l1 x00000001 )
( extrovert~l1 opposite~l1 introvert~l1 x00000001 )
( female_parent~l1 opposite~l1 male_parent~l1 x00000001 )
( male_parent~l1 opposite~l1 female_parent~l1 x00000001 )
( skin_and_bones~l1 opposite~l1 fat_person~l1 x00000001 )
( fat_person~l1 opposite~l1 skin_and_bones~l1 x00000001 )
( male_aristocrat~l1 opposite~l1 female_aristocrat~l1 x00000001 )
( female_aristocrat~l1 opposite~l1 male_aristocrat~l1 x00000001 )
( male_offspring~l1 opposite~l1 female_offspring~l1 x00000001 )
( female_offspring~l1 opposite~l1 male_offspring~l1 x00000001 )
( male_sibling~l1 opposite~l1 female_sibling~l1 x00000001 )
( female_sibling~l1 opposite~l1 male_sibling~l1 x00000001 )
( male_child~l1 opposite~l1 female_child~l1 x00000001 )
( female_child~l1 opposite~l1 male_child~l1 x00000001 )
( withholder~l1 opposite~l1 granter~l1 x00000001 )
( granter~l1 opposite~l1 withholder~l1 x00000001 )
( heir_presumptive~l1 opposite~l1 heir_apparent~l1 x00000001 )
( heir_apparent~l1 opposite~l1 heir_presumptive~l1 x00000001 )
( married_woman~l1 opposite~l1 married_man~l1 x00000001 )
( married_man~l1 opposite~l1 married_woman~l1 x00000001 )
( superordinate~l1 opposite~l1 inferior~l1 x00000001 )
( inferior~l1 opposite~l1 superordinate~l1 x00000001 )
( outpatient~l1 opposite~l1 inpatient~l1 x00000001 )
( inpatient~l1 opposite~l1 outpatient~l1 x00000001 )
( female_monarch~l1 opposite~l1 male_monarch~l1 x00000001 )
( male_monarch~l1 opposite~l1 female_monarch~l1 x00000001 )
( nobleman~l1 opposite~l1 noblewoman~l1 x00000001 )
( noblewoman~l1 opposite~l1 nobleman~l1 x00000001 )
( straight_shooter~l1 opposite~l1 prevaricator~l1 x00000001 )
( prevaricator~l1 opposite~l1 straight_shooter~l1 x00000001 )
( necessitarian~l1 opposite~l1 libertarian~l1 x00000001 )
( libertarian~l1 opposite~l1 necessitarian~l1 x00000001 )
( stillborn_infant~l1 opposite~l1 liveborn_infant~l1 x00000001 )
( liveborn_infant~l1 opposite~l1 stillborn_infant~l1 x00000001 )
( winner~l1 opposite~l1 loser~l1 x00000001 )
( loser~l1 opposite~l1 winner~l1 x00000001 )
( winner~l1 opposite~l1 also-ran~l1 x00000001 )
( also-ran~l1 opposite~l1 winner~l1 x00000001 )
( splitter~l1 opposite~l1 lumper~l1 x00000001 )
( lumper~l1 opposite~l1 splitter~l1 x00000001 )
( adult_female~l1 opposite~l1 adult_male~l1 x00000001 )
( adult_male~l1 opposite~l1 adult_female~l1 x00000001 )
( woman~l1 opposite~l1 man~l1 x00000001 )
( man~l1 opposite~l1 woman~l1 x00000001 )
( sadist~l1 opposite~l1 masochist~l1 x00000001 )
( masochist~l1 opposite~l1 sadist~l1 x00000001 )
( nonmember~l1 opposite~l1 fellow_member~l1 x00000001 )
( fellow_member~l1 opposite~l1 nonmember~l1 x00000001 )
( niece~l1 opposite~l1 nephew~l1 x00000001 )
( nephew~l1 opposite~l1 niece~l1 x00000001 )
( drumbeater~l1 opposite~l1 nonpartisan~l1 x00000001 )
( nonpartisan~l1 opposite~l1 drumbeater~l1 x00000001 )
( resident~l1 opposite~l1 nonresident~l1 x00000001 )
( nonresident~l1 opposite~l1 resident~l1 x00000001 )
( tobacco_user~l1 opposite~l1 nonsmoker~l1 x00000001 )
( nonsmoker~l1 opposite~l1 tobacco_user~l1 x00000001 )
( pessimist~l1 opposite~l1 optimist~l1 x00000001 )
( optimist~l1 opposite~l1 pessimist~l1 x00000001 )
( coenobite~l1 opposite~l1 eremite~l1 x00000001 )
( eremite~l1 opposite~l1 coenobite~l1 x00000001 )
( specializer~l1 opposite~l1 Renaissance_man~l1 x00000001 )
( Renaissance_man~l1 opposite~l1 specializer~l1 x00000001 )
( stander~l1 opposite~l1 sitter~l1 x00000001 )
( sitter~l1 opposite~l1 stander~l1 x00000001 )
( universal_agent~l1 opposite~l1 special_agent~l1 x00000001 )
( special_agent~l1 opposite~l1 universal_agent~l1 x00000001 )
( technophobe~l1 opposite~l1 technophile~l1 x00000001 )
( technophile~l1 opposite~l1 technophobe~l1 x00000001 )
( direct_electric_current~l1 opposite~l1 alternating_electric_current~l1 x00000001 )
( alternating_electric_current~l1 opposite~l1 direct_electric_current~l1 x00000001 )
( repulsive_force~l1 opposite~l1 attractive_force~l1 x00000001 )
( attractive_force~l1 opposite~l1 repulsive_force~l1 x00000001 )
( centripetal_force~l1 opposite~l1 centrifugal_force~l1 x00000001 )
( centrifugal_force~l1 opposite~l1 centripetal_force~l1 x00000001 )
( negative_charge~l1 opposite~l1 positive_charge~l1 x00000001 )
( positive_charge~l1 opposite~l1 negative_charge~l1 x00000001 )
( transparency~l1 opposite~l1 opacity~l1 x00000001 )
( opacity~l1 opposite~l1 transparency~l1 x00000001 )
( pleurocarpous_moss~l1 opposite~l1 acrocarpous_moss~l1 x00000001 )
( acrocarpous_moss~l1 opposite~l1 pleurocarpous_moss~l1 x00000001 )
( Cryptogamia~l1 opposite~l1 Phanerogamae~l1 x00000001 )
( Phanerogamae~l1 opposite~l1 Cryptogamia~l1 x00000001 )
( toadstool~l1 opposite~l1 mushroom~l1 x00000001 )
( mushroom~l1 opposite~l1 toadstool~l1 x00000001 )
( weed~l1 opposite~l1 cultivated_plant~l1 x00000001 )
( cultivated_plant~l1 opposite~l1 weed~l1 x00000001 )
( deciduous_plant~l1 opposite~l1 evergreen_plant~l1 x00000001 )
( evergreen_plant~l1 opposite~l1 deciduous_plant~l1 x00000001 )
( red_ink~l1 opposite~l1 gain~l1 x00000001 )
( gain~l1 opposite~l1 red_ink~l1 x00000001 )
( expenditure~l1 opposite~l1 income~l1 x00000001 )
( income~l1 opposite~l1 expenditure~l1 x00000001 )
( tight_money~l1 opposite~l1 easy_money~l1 x00000001 )
( easy_money~l1 opposite~l1 tight_money~l1 x00000001 )
( paper_loss~l1 opposite~l1 paper_profit~l1 x00000001 )
( paper_profit~l1 opposite~l1 paper_loss~l1 x00000001 )
( losings~l1 opposite~l1 winnings~l1 x00000001 )
( winnings~l1 opposite~l1 losings~l1 x00000001 )
( nonremittal~l1 opposite~l1 payment~l1 x00000001 )
( payment~l1 opposite~l1 nonremittal~l1 x00000001 )
( unsecured_bond~l1 opposite~l1 secured_bond~l1 x00000001 )
( secured_bond~l1 opposite~l1 unsecured_bond~l1 x00000001 )
( margin_account~l1 opposite~l1 cash_account~l1 x00000001 )
( cash_account~l1 opposite~l1 margin_account~l1 x00000001 )
( passive_trust~l1 opposite~l1 active_trust~l1 x00000001 )
( active_trust~l1 opposite~l1 passive_trust~l1 x00000001 )
( immediate_payment~l1 opposite~l1 deferred_payment~l1 x00000001 )
( deferred_payment~l1 opposite~l1 immediate_payment~l1 x00000001 )
( debit_entry~l1 opposite~l1 credit_entry~l1 x00000001 )
( credit_entry~l1 opposite~l1 debit_entry~l1 x00000001 )
( cash_basis~l1 opposite~l1 accrual_basis~l1 x00000001 )
( accrual_basis~l1 opposite~l1 cash_basis~l1 x00000001 )
( over_the_counter_security~l1 opposite~l1 listed_security~l1 x00000001 )
( listed_security~l1 opposite~l1 over_the_counter_security~l1 x00000001 )
( inactivation~l1 opposite~l1 activation~l1 x00000001 )
( activation~l1 opposite~l1 inactivation~l1 x00000001 )
( destructive_metabolism~l1 opposite~l1 constructive_metabolism~l1 x00000001 )
( constructive_metabolism~l1 opposite~l1 destructive_metabolism~l1 x00000001 )
( katamorphism~l1 opposite~l1 anamorphism~l1 x00000001 )
( anamorphism~l1 opposite~l1 katamorphism~l1 x00000001 )
( vermiculation~l1 opposite~l1 anastalsis~l1 x00000001 )
( anastalsis~l1 opposite~l1 vermiculation~l1 x00000001 )
( ovulation~l1 opposite~l1 anovulation~l1 x00000001 )
( anovulation~l1 opposite~l1 ovulation~l1 x00000001 )
( synchronous_operation~l1 opposite~l1 asynchronous_operation~l1 x00000001 )
( asynchronous_operation~l1 opposite~l1 synchronous_operation~l1 x00000001 )
( recapitulation~l1 opposite~l1 caenogenesis~l1 x00000001 )
( caenogenesis~l1 opposite~l1 recapitulation~l1 x00000001 )
( rising_prices~l1 opposite~l1 deflation~l1 x00000001 )
( deflation~l1 opposite~l1 rising_prices~l1 x00000001 )
( disinflation~l1 opposite~l1 deflation~l1 x00000001 )
( deflation~l1 opposite~l1 disinflation~l1 x00000001 )
( development~l1 opposite~l1 degeneration~l1 x00000001 )
( degeneration~l1 opposite~l1 development~l1 x00000001 )
( supply~l1 opposite~l1 demand~l1 x00000001 )
( demand~l1 opposite~l1 supply~l1 x00000001 )
( rising_prices~l1 opposite~l1 disinflation~l1 x00000001 )
( disinflation~l1 opposite~l1 rising_prices~l1 x00000001 )
( nondevelopment~l1 opposite~l1 development~l1 x00000001 )
( development~l1 opposite~l1 nondevelopment~l1 x00000001 )
( deflationary_spiral~l1 opposite~l1 inflationary_spiral~l1 x00000001 )
( inflationary_spiral~l1 opposite~l1 deflationary_spiral~l1 x00000001 )
( effluence~l1 opposite~l1 inflow~l1 x00000001 )
( inflow~l1 opposite~l1 effluence~l1 x00000001 )
( reversible_process~l1 opposite~l1 irreversible_process~l1 x00000001 )
( irreversible_process~l1 opposite~l1 reversible_process~l1 x00000001 )
( consecutive_operation~l1 opposite~l1 simultaneous_operation~l1 x00000001 )
( simultaneous_operation~l1 opposite~l1 consecutive_operation~l1 x00000001 )
( source~l1 opposite~l1 sink~l1 x00000001 )
( sink~l1 opposite~l1 source~l1 x00000001 )
( lead~l1 opposite~l1 deficit~l1 x00000001 )
( deficit~l1 opposite~l1 lead~l1 x00000001 )
( aliquant_part~l1 opposite~l1 aliquot_part~l1 x00000001 )
( aliquot_part~l1 opposite~l1 aliquant_part~l1 x00000001 )
( upper_limit~l1 opposite~l1 lower_limit~l1 x00000001 )
( lower_limit~l1 opposite~l1 upper_limit~l1 x00000001 )
( unconnectedness~l1 opposite~l1 connectedness~l1 x00000001 )
( connectedness~l1 opposite~l1 unconnectedness~l1 x00000001 )
( irrelevance~l1 opposite~l1 relevance~l1 x00000001 )
( relevance~l1 opposite~l1 irrelevance~l1 x00000001 )
( immateriality~l1 opposite~l1 materiality~l1 x00000001 )
( materiality~l1 opposite~l1 immateriality~l1 x00000001 )
( inapplicability~l1 opposite~l1 applicability~l1 x00000001 )
( applicability~l1 opposite~l1 inapplicability~l1 x00000001 )
( unrelatedness~l1 opposite~l1 relatedness~l1 x00000001 )
( relatedness~l1 opposite~l1 unrelatedness~l1 x00000001 )
( intransitiveness~l1 opposite~l1 transitiveness~l1 x00000001 )
( transitiveness~l1 opposite~l1 intransitiveness~l1 x00000001 )
( passive_voice~l1 opposite~l1 active_voice~l1 x00000001 )
( active_voice~l1 opposite~l1 passive_voice~l1 x00000001 )
( consanguinity~l1 opposite~l1 affinity~l1 x00000001 )
( affinity~l1 opposite~l1 consanguinity~l1 x00000001 )
( leeward~l1 opposite~l1 windward~l1 x00000001 )
( windward~l1 opposite~l1 leeward~l1 x00000001 )
( desynchronization~l1 opposite~l1 synchronization~l1 x00000001 )
( synchronization~l1 opposite~l1 desynchronization~l1 x00000001 )
( latter~l1 opposite~l1 former~l1 x00000001 )
( former~l1 opposite~l1 latter~l1 x00000001 )
( concave_polygon~l1 opposite~l1 convex_polygon~l1 x00000001 )
( convex_polygon~l1 opposite~l1 concave_polygon~l1 x00000001 )
( straight_line~l1 opposite~l1 curved_shape~l1 x00000001 )
( curved_shape~l1 opposite~l1 straight_line~l1 x00000001 )
( right-angled_triangle~l1 opposite~l1 oblique_triangle~l1 x00000001 )
( oblique_triangle~l1 opposite~l1 right-angled_triangle~l1 x00000001 )
( trapezium~l1 opposite~l1 parallelogram~l1 x00000001 )
( parallelogram~l1 opposite~l1 trapezium~l1 x00000001 )
( salient_angle~l1 opposite~l1 reentering_angle~l1 x00000001 )
( reentering_angle~l1 opposite~l1 salient_angle~l1 x00000001 )
( oblique_angle~l1 opposite~l1 right_angle~l1 x00000001 )
( right_angle~l1 opposite~l1 oblique_angle~l1 x00000001 )
( disproportion~l1 opposite~l1 proportion~l1 x00000001 )
( proportion~l1 opposite~l1 disproportion~l1 x00000001 )
( dystopia~l1 opposite~l1 utopia~l1 x00000001 )
( utopia~l1 opposite~l1 dystopia~l1 x00000001 )
( rejection~l1 opposite~l1 acceptance~l1 x00000001 )
( acceptance~l1 opposite~l1 rejection~l1 x00000001 )
( equilibrium~l1 opposite~l1 disequilibrium~l1 x00000001 )
( disequilibrium~l1 opposite~l1 equilibrium~l1 x00000001 )
( inclusion~l1 opposite~l1 exclusion~l1 x00000001 )
( exclusion~l1 opposite~l1 inclusion~l1 x00000001 )
( astigmatism~l1 opposite~l1 stigmatism~l1 x00000001 )
( stigmatism~l1 opposite~l1 astigmatism~l1 x00000001 )
( low_status~l1 opposite~l1 high_status~l1 x00000001 )
( high_status~l1 opposite~l1 low_status~l1 x00000001 )
( front_burner~l1 opposite~l1 back_burner~l1 x00000001 )
( back_burner~l1 opposite~l1 front_burner~l1 x00000001 )
( nonexistence~l1 opposite~l1 beingness~l1 x00000001 )
( beingness~l1 opposite~l1 nonexistence~l1 x00000001 )
( nonbeing~l1 opposite~l1 beingness~l1 x00000001 )
( beingness~l1 opposite~l1 nonbeing~l1 x00000001 )
( spuriousness~l1 opposite~l1 genuineness~l1 x00000001 )
( genuineness~l1 opposite~l1 spuriousness~l1 x00000001 )
( unreality~l1 opposite~l1 realness~l1 x00000001 )
( realness~l1 opposite~l1 unreality~l1 x00000001 )
( falseness~l1 opposite~l1 the_true~l1 x00000001 )
( the_true~l1 opposite~l1 falseness~l1 x00000001 )
( thereness~l1 opposite~l1 hereness~l1 x00000001 )
( hereness~l1 opposite~l1 thereness~l1 x00000001 )
( sympatry~l1 opposite~l1 allopatry~l1 x00000001 )
( allopatry~l1 opposite~l1 sympatry~l1 x00000001 )
( intermarriage~l1 opposite~l1 intermarriage~l1 x00000001 )
( unemployment~l1 opposite~l1 employment~l1 x00000001 )
( employment~l1 opposite~l1 unemployment~l1 x00000001 )
( disorder~l1 opposite~l1 order~l1 x00000001 )
( order~l1 opposite~l1 disorder~l1 x00000001 )
( instability~l1 opposite~l1 stability~l1 x00000001 )
( stability~l1 opposite~l1 instability~l1 x00000001 )
( state_of_war~l1 opposite~l1 peace~l1 x00000001 )
( peace~l1 opposite~l1 state_of_war~l1 x00000001 )
( immunodeficiency~l1 opposite~l1 immunocompetence~l1 x00000001 )
( immunocompetence~l1 opposite~l1 immunodeficiency~l1 x00000001 )
( cold_war~l1 opposite~l1 hot_war~l1 x00000001 )
( hot_war~l1 opposite~l1 cold_war~l1 x00000001 )
( darkness~l1 opposite~l1 lighting~l1 x00000001 )
( lighting~l1 opposite~l1 darkness~l1 x00000001 )
( guiltiness~l1 opposite~l1 innocence~l1 x00000001 )
( innocence~l1 opposite~l1 guiltiness~l1 x00000001 )
( instability~l1 opposite~l1 balance~l1 x00000001 )
( balance~l1 opposite~l1 instability~l1 x00000001 )
( motionlessness~l1 opposite~l1 motion~l1 x00000001 )
( motion~l1 opposite~l1 motionlessness~l1 x00000001 )
( soberness~l1 opposite~l1 intoxication~l1 x00000001 )
( intoxication~l1 opposite~l1 soberness~l1 x00000001 )
( sleepiness~l1 opposite~l1 sleeplessness~l1 x00000001 )
( sleeplessness~l1 opposite~l1 sleepiness~l1 x00000001 )
( insomnia~l1 opposite~l1 hypersomnia~l1 x00000001 )
( hypersomnia~l1 opposite~l1 insomnia~l1 x00000001 )
( anoestrus~l1 opposite~l1 oestrus~l1 x00000001 )
( oestrus~l1 opposite~l1 anoestrus~l1 x00000001 )
( hypocapnia~l1 opposite~l1 hypercapnia~l1 x00000001 )
( hypercapnia~l1 opposite~l1 hypocapnia~l1 x00000001 )
( hypothermia~l1 opposite~l1 hyperthermia~l1 x00000001 )
( hyperthermia~l1 opposite~l1 hypothermia~l1 x00000001 )
( potency~l1 opposite~l1 impotence~l1 x00000001 )
( impotence~l1 opposite~l1 potency~l1 x00000001 )
( fertility~l1 opposite~l1 infertility~l1 x00000001 )
( infertility~l1 opposite~l1 fertility~l1 x00000001 )
( health_problem~l1 opposite~l1 good_health~l1 x00000001 )
( good_health~l1 opposite~l1 health_problem~l1 x00000001 )
( organic_disorder~l1 opposite~l1 functional_disorder~l1 x00000001 )
( functional_disorder~l1 opposite~l1 organic_disorder~l1 x00000001 )
( wellness~l1 opposite~l1 unwellness~l1 x00000001 )
( unwellness~l1 opposite~l1 wellness~l1 x00000001 )
( hypoparathyroidism~l1 opposite~l1 hyperparathyroidism~l1 x00000001 )
( hyperparathyroidism~l1 opposite~l1 hypoparathyroidism~l1 x00000001 )
( hypotension~l1 opposite~l1 high_blood_pressure~l1 x00000001 )
( high_blood_pressure~l1 opposite~l1 hypotension~l1 x00000001 )
( hypothyroidism~l1 opposite~l1 hyperthyroidism~l1 x00000001 )
( hyperthyroidism~l1 opposite~l1 hypothyroidism~l1 x00000001 )
( hypovolaemia~l1 opposite~l1 hypervolaemia~l1 x00000001 )
( hypervolaemia~l1 opposite~l1 hypovolaemia~l1 x00000001 )
( hypocalcaemia~l1 opposite~l1 hypercalcaemia~l1 x00000001 )
( hypercalcaemia~l1 opposite~l1 hypocalcaemia~l1 x00000001 )
( hypokalemia~l1 opposite~l1 hyperkalemia~l1 x00000001 )
( hyperkalemia~l1 opposite~l1 hypokalemia~l1 x00000001 )
( hyponatremia~l1 opposite~l1 hypernatremia~l1 x00000001 )
( hypernatremia~l1 opposite~l1 hyponatremia~l1 x00000001 )
( hypopigmentation~l1 opposite~l1 hyperpigmentation~l1 x00000001 )
( hyperpigmentation~l1 opposite~l1 hypopigmentation~l1 x00000001 )
( hypoglycaemia~l1 opposite~l1 hyperglycaemia~l1 x00000001 )
( hyperglycaemia~l1 opposite~l1 hypoglycaemia~l1 x00000001 )
( mental_illness~l1 opposite~l1 mental_health~l1 x00000001 )
( mental_health~l1 opposite~l1 mental_illness~l1 x00000001 )
( insanity~l1 opposite~l1 saneness~l1 x00000001 )
( saneness~l1 opposite~l1 insanity~l1 x00000001 )
( psychotic_depression~l1 opposite~l1 neurotic_depression~l1 x00000001 )
( neurotic_depression~l1 opposite~l1 psychotic_depression~l1 x00000001 )
( elation~l1 opposite~l1 depression~l1 x00000001 )
( depression~l1 opposite~l1 elation~l1 x00000001 )
( high~l1 opposite~l1 low_spirits~l1 x00000001 )
( low_spirits~l1 opposite~l1 high~l1 x00000001 )
( unification~l1 opposite~l1 separation~l1 x00000001 )
( separation~l1 opposite~l1 unification~l1 x00000001 )
( continuity~l1 opposite~l1 discontinuity~l1 x00000001 )
( discontinuity~l1 opposite~l1 continuity~l1 x00000001 )
( connectedness~l1 opposite~l1 disconnectedness~l1 x00000001 )
( disconnectedness~l1 opposite~l1 connectedness~l1 x00000001 )
( cohesiveness~l1 opposite~l1 incoherence~l1 x00000001 )
( incoherence~l1 opposite~l1 cohesiveness~l1 x00000001 )
( disassociation~l1 opposite~l1 association~l1 x00000001 )
( association~l1 opposite~l1 disassociation~l1 x00000001 )
( declination~l1 opposite~l1 improvement~l1 x00000001 )
( improvement~l1 opposite~l1 declination~l1 x00000001 )
( immatureness~l1 opposite~l1 matureness~l1 x00000001 )
( matureness~l1 opposite~l1 immatureness~l1 x00000001 )
( greenness~l1 opposite~l1 ripeness~l1 x00000001 )
( ripeness~l1 opposite~l1 greenness~l1 x00000001 )
( obscurity~l1 opposite~l1 prominence~l1 x00000001 )
( prominence~l1 opposite~l1 obscurity~l1 x00000001 )
( dishonour~l1 opposite~l1 laurels~l1 x00000001 )
( laurels~l1 opposite~l1 dishonour~l1 x00000001 )
( opprobrium~l1 opposite~l1 celebrity~l1 x00000001 )
( celebrity~l1 opposite~l1 opprobrium~l1 x00000001 )
( disesteem~l1 opposite~l1 respect~l1 x00000001 )
( respect~l1 opposite~l1 disesteem~l1 x00000001 )
( disrepute~l1 opposite~l1 reputation~l1 x00000001 )
( reputation~l1 opposite~l1 disrepute~l1 x00000001 )
( infamy~l1 opposite~l1 fame~l1 x00000001 )
( fame~l1 opposite~l1 infamy~l1 x00000001 )
( uncomfortableness~l1 opposite~l1 comfortableness~l1 x00000001 )
( comfortableness~l1 opposite~l1 uncomfortableness~l1 x00000001 )
( ill-being~l1 opposite~l1 well-being~l1 x00000001 )
( well-being~l1 opposite~l1 ill-being~l1 x00000001 )
( emptiness~l1 opposite~l1 fullness~l1 x00000001 )
( fullness~l1 opposite~l1 emptiness~l1 x00000001 )
( hollowness~l1 opposite~l1 solidity~l1 x00000001 )
( solidity~l1 opposite~l1 hollowness~l1 x00000001 )
( imperfectness~l1 opposite~l1 ne_plus_ultra~l1 x00000001 )
( ne_plus_ultra~l1 opposite~l1 imperfectness~l1 x00000001 )
( incompleteness~l1 opposite~l1 completeness~l1 x00000001 )
( completeness~l1 opposite~l1 incompleteness~l1 x00000001 )
( varus~l1 opposite~l1 valgus~l1 x00000001 )
( valgus~l1 opposite~l1 varus~l1 x00000001 )
( misfortune~l1 opposite~l1 good_fortune~l1 x00000001 )
( good_fortune~l1 opposite~l1 misfortune~l1 x00000001 )
( insolvency~l1 opposite~l1 solvency~l1 x00000001 )
( solvency~l1 opposite~l1 insolvency~l1 x00000001 )
( impossibleness~l1 opposite~l1 possibleness~l1 x00000001 )
( possibleness~l1 opposite~l1 impossibleness~l1 x00000001 )
( impureness~l1 opposite~l1 pureness~l1 x00000001 )
( pureness~l1 opposite~l1 impureness~l1 x00000001 )
( impoverishment~l1 opposite~l1 wealthiness~l1 x00000001 )
( wealthiness~l1 opposite~l1 impoverishment~l1 x00000001 )
( unsanitariness~l1 opposite~l1 sanitariness~l1 x00000001 )
( sanitariness~l1 opposite~l1 unsanitariness~l1 x00000001 )
( uncleanness~l1 opposite~l1 cleanness~l1 x00000001 )
( cleanness~l1 opposite~l1 uncleanness~l1 x00000001 )
( disorderliness~l1 opposite~l1 orderliness~l1 x00000001 )
( orderliness~l1 opposite~l1 disorderliness~l1 x00000001 )
( abnormality~l1 opposite~l1 normality~l1 x00000001 )
( normality~l1 opposite~l1 abnormality~l1 x00000001 )
( untypicality~l1 opposite~l1 typicality~l1 x00000001 )
( typicality~l1 opposite~l1 untypicality~l1 x00000001 )
( nonbiodegradable_pollution~l1 opposite~l1 biodegradable_pollution~l1 x00000001 )
( biodegradable_pollution~l1 opposite~l1 nonbiodegradable_pollution~l1 x00000001 )
( cyclone~l1 opposite~l1 anticyclone~l1 x00000001 )
( anticyclone~l1 opposite~l1 cyclone~l1 x00000001 )
( inclementness~l1 opposite~l1 good_weather~l1 x00000001 )
( good_weather~l1 opposite~l1 inclementness~l1 x00000001 )
( susceptibleness~l1 opposite~l1 unsusceptibility~l1 x00000001 )
( unsusceptibility~l1 opposite~l1 susceptibleness~l1 x00000001 )
( waterlessness~l1 opposite~l1 wetness~l1 x00000001 )
( wetness~l1 opposite~l1 waterlessness~l1 x00000001 )
( danger~l1 opposite~l1 safety~l1 x00000001 )
( safety~l1 opposite~l1 danger~l1 x00000001 )
( insecurity~l1 opposite~l1 security~l1 x00000001 )
( security~l1 opposite~l1 insecurity~l1 x00000001 )
( insecureness~l1 opposite~l1 secureness~l1 x00000001 )
( secureness~l1 opposite~l1 insecureness~l1 x00000001 )
( atonicity~l1 opposite~l1 tonicity~l1 x00000001 )
( tonicity~l1 opposite~l1 atonicity~l1 x00000001 )
( unfitness~l1 opposite~l1 physical_fitness~l1 x00000001 )
( physical_fitness~l1 opposite~l1 unfitness~l1 x00000001 )
( longsightedness~l1 opposite~l1 shortsightedness~l1 x00000001 )
( shortsightedness~l1 opposite~l1 longsightedness~l1 x00000001 )
( heterozygosity~l1 opposite~l1 homozygosity~l1 x00000001 )
( homozygosity~l1 opposite~l1 heterozygosity~l1 x00000001 )
( hypotonicity~l1 opposite~l1 hypertonicity~l1 x00000001 )
( hypertonicity~l1 opposite~l1 hypotonicity~l1 x00000001 )
( unleaded_gasoline~l1 opposite~l1 leaded_gasoline~l1 x00000001 )
( leaded_gasoline~l1 opposite~l1 unleaded_gasoline~l1 x00000001 )
( inhibitor~l1 opposite~l1 activator~l1 x00000001 )
( activator~l1 opposite~l1 inhibitor~l1 x00000001 )
( anticatalyst~l1 opposite~l1 accelerator~l1 x00000001 )
( accelerator~l1 opposite~l1 anticatalyst~l1 x00000001 )
( nonconductor~l1 opposite~l1 conductor~l1 x00000001 )
( conductor~l1 opposite~l1 nonconductor~l1 x00000001 )
( noncoding_DNA~l1 opposite~l1 coding_DNA~l1 x00000001 )
( coding_DNA~l1 opposite~l1 noncoding_DNA~l1 x00000001 )
( low_explosive~l1 opposite~l1 high_explosive~l1 x00000001 )
( high_explosive~l1 opposite~l1 low_explosive~l1 x00000001 )
( soft_water~l1 opposite~l1 hard_water~l1 x00000001 )
( hard_water~l1 opposite~l1 soft_water~l1 x00000001 )
( fresh_water~l1 opposite~l1 saltwater~l1 x00000001 )
( saltwater~l1 opposite~l1 fresh_water~l1 x00000001 )
( exotoxin~l1 opposite~l1 endotoxin~l1 x00000001 )
( endotoxin~l1 opposite~l1 exotoxin~l1 x00000001 )
( uptime~l1 opposite~l1 downtime~l1 x00000001 )
( downtime~l1 opposite~l1 uptime~l1 x00000001 )
( time_off~l1 opposite~l1 work_time~l1 x00000001 )
( work_time~l1 opposite~l1 time_off~l1 x00000001 )
( time_to_come~l1 opposite~l1 past_times~l1 x00000001 )
( past_times~l1 opposite~l1 time_to_come~l1 x00000001 )
( day_of_rest~l1 opposite~l1 working_day~l1 x00000001 )
( working_day~l1 opposite~l1 day_of_rest~l1 x00000001 )
( demise~l1 opposite~l1 birth~l1 x00000001 )
( birth~l1 opposite~l1 demise~l1 x00000001 )
( minority~l1 opposite~l1 legal_age~l1 x00000001 )
( legal_age~l1 opposite~l1 minority~l1 x00000001 )
( nighttime~l1 opposite~l1 daylight~l1 x00000001 )
( daylight~l1 opposite~l1 nighttime~l1 x00000001 )
( sundown~l1 opposite~l1 break_of_the_day~l1 x00000001 )
( break_of_the_day~l1 opposite~l1 sundown~l1 x00000001 )
( winter_solstice~l1 opposite~l1 summer_solstice~l1 x00000001 )
( summer_solstice~l1 opposite~l1 winter_solstice~l1 x00000001 )
( September_equinox~l1 opposite~l1 vernal_equinox~l1 x00000001 )
( vernal_equinox~l1 opposite~l1 September_equinox~l1 x00000001 )
( extra_time~l1 opposite~l1 regulation_time~l1 x00000001 )
( regulation_time~l1 opposite~l1 extra_time~l1 x00000001 )
( off-season~l1 opposite~l1 high_season~l1 x00000001 )
( high_season~l1 opposite~l1 off-season~l1 x00000001 )
( dry_season~l1 opposite~l1 rainy_season~l1 x00000001 )
( rainy_season~l1 opposite~l1 dry_season~l1 x00000001 )
( bottom_of_the_inning~l1 opposite~l1 top_of_the_inning~l1 x00000001 )
( top_of_the_inning~l1 opposite~l1 bottom_of_the_inning~l1 x00000001 )
( middle~l1 opposite~l1 starting_time~l1 x00000001 )
( starting_time~l1 opposite~l1 middle~l1 x00000001 )
( ending~l1 opposite~l1 starting_time~l1 x00000001 )
( starting_time~l1 opposite~l1 ending~l1 x00000001 )
( ending~l1 opposite~l1 middle~l1 x00000001 )
( middle~l1 opposite~l1 ending~l1 x00000001 )
( breathe_in~l1 opposite~l1 breathe_out~l1 x00000001 )
( breathe_out~l1 opposite~l1 breathe_in~l1 x00000001 )
( be_active~l1 opposite~l1 rest~l1 x00000001 )
( rest~l1 opposite~l1 be_active~l1 x00000001 )
( wake~l1 opposite~l1 catch_some_Z_'s~l1 x00000001 )
( catch_some_Z_'s~l1 opposite~l1 wake~l1 x00000001 )
( aestivate~l1 opposite~l1 hibernate~l1 x00000001 )
( hibernate~l1 opposite~l1 aestivate~l1 x00000001 )
( come_alive~l1 opposite~l1 fall_asleep~l1 x00000001 )
( fall_asleep~l1 opposite~l1 come_alive~l1 x00000001 )
( turn_out~l1 opposite~l1 hit_the_sack~l1 x00000001 )
( hit_the_sack~l1 opposite~l1 turn_out~l1 x00000001 )
( cause_to_sleep~l1 opposite~l1 wake_up~l1 x00000001 )
( wake_up~l1 opposite~l1 cause_to_sleep~l1 x00000001 )
( bring_around~l1 opposite~l1 anaesthetize~l1 x00000001 )
( anaesthetize~l1 opposite~l1 bring_around~l1 x00000001 )
( stimulate~l1 opposite~l1 tranquillize~l1 x00000001 )
( tranquillize~l1 opposite~l1 stimulate~l1 x00000001 )
( de-energize~l1 opposite~l1 stimulate~l1 x00000001 )
( stimulate~l1 opposite~l1 de-energize~l1 x00000001 )
( wear_upon~l1 opposite~l1 refreshen~l1 x00000001 )
( refreshen~l1 opposite~l1 wear_upon~l1 x00000001 )
( make_relaxed~l1 opposite~l1 tense_up~l1 x00000001 )
( tense_up~l1 opposite~l1 make_relaxed~l1 x00000001 )
( decompress~l1 opposite~l1 tense_up~l1 x00000001 )
( tense_up~l1 opposite~l1 decompress~l1 x00000001 )
( weep~l1 opposite~l1 express_mirth~l1 x00000001 )
( express_mirth~l1 opposite~l1 weep~l1 x00000001 )
( dress_down~l1 opposite~l1 overdress~l1 x00000001 )
( overdress~l1 opposite~l1 dress_down~l1 x00000001 )
( put_on~l1 opposite~l1 lose_weight~l1 x00000001 )
( lose_weight~l1 opposite~l1 put_on~l1 x00000001 )
( strip_down~l1 opposite~l1 get_dressed~l1 x00000001 )
( get_dressed~l1 opposite~l1 strip_down~l1 x00000001 )
( strip_down~l1 opposite~l1 habilitate~l1 x00000001 )
( habilitate~l1 opposite~l1 strip_down~l1 x00000001 )
( underdress~l1 opposite~l1 overclothe~l1 x00000001 )
( overclothe~l1 opposite~l1 underdress~l1 x00000001 )
( slip_off~l1 opposite~l1 slip_on~l1 x00000001 )
( slip_on~l1 opposite~l1 slip_off~l1 x00000001 )
( miscarry~l1 opposite~l1 carry_to_term~l1 x00000001 )
( carry_to_term~l1 opposite~l1 miscarry~l1 x00000001 )
( soothe~l1 opposite~l1 irritate~l1 x00000001 )
( irritate~l1 opposite~l1 soothe~l1 x00000001 )
( be_well~l1 opposite~l1 suffer~l1 x00000001 )
( suffer~l1 opposite~l1 be_well~l1 x00000001 )
( keep_down~l1 opposite~l1 regurgitate~l1 x00000001 )
( regurgitate~l1 opposite~l1 keep_down~l1 x00000001 )
( disinfect~l1 opposite~l1 infect~l1 x00000001 )
( infect~l1 opposite~l1 disinfect~l1 x00000001 )
( recuperate~l1 opposite~l1 deteriorate~l1 x00000001 )
( deteriorate~l1 opposite~l1 recuperate~l1 x00000001 )
( remain~l1 opposite~l1 change~l1 x00000001 )
( change~l1 opposite~l1 remain~l1 x00000001 )
( dedifferentiate~l1 opposite~l1 differentiate~l1 x00000001 )
( differentiate~l1 opposite~l1 dedifferentiate~l1 x00000001 )
( demythologize~l1 opposite~l1 mythologize~l1 x00000001 )
( mythologize~l1 opposite~l1 demythologize~l1 x00000001 )
( increase~l1 opposite~l1 decrease~l1 x00000001 )
( decrease~l1 opposite~l1 increase~l1 x00000001 )
( dissimilate~l1 opposite~l1 assimilate~l1 x00000001 )
( assimilate~l1 opposite~l1 dissimilate~l1 x00000001 )
( devitalize~l1 opposite~l1 vitalize~l1 x00000001 )
( vitalize~l1 opposite~l1 devitalize~l1 x00000001 )
( impoverish~l1 opposite~l1 enrich~l1 x00000001 )
( enrich~l1 opposite~l1 impoverish~l1 x00000001 )
( add~l1 opposite~l1 take_away~l1 x00000001 )
( take_away~l1 opposite~l1 add~l1 x00000001 )
( clutter_up~l1 opposite~l1 unclutter~l1 x00000001 )
( unclutter~l1 opposite~l1 clutter_up~l1 x00000001 )
( inactivate~l1 opposite~l1 activate~l1 x00000001 )
( activate~l1 opposite~l1 inactivate~l1 x00000001 )
( invigorate~l1 opposite~l1 deaden~l1 x00000001 )
( deaden~l1 opposite~l1 invigorate~l1 x00000001 )
( falsify~l1 opposite~l1 correct~l1 x00000001 )
( correct~l1 opposite~l1 falsify~l1 x00000001 )
( ameliorate~l1 opposite~l1 decline~l1 x00000001 )
( decline~l1 opposite~l1 ameliorate~l1 x00000001 )
( exacerbate~l1 opposite~l1 ameliorate~l1 x00000001 )
( ameliorate~l1 opposite~l1 exacerbate~l1 x00000001 )
( hydrate~l1 opposite~l1 exsiccate~l1 x00000001 )
( exsiccate~l1 opposite~l1 hydrate~l1 x00000001 )
( dry_out~l1 opposite~l1 wet~l1 x00000001 )
( wet~l1 opposite~l1 dry_out~l1 x00000001 )
( dehumidify~l1 opposite~l1 moisturize~l1 x00000001 )
( moisturize~l1 opposite~l1 dehumidify~l1 x00000001 )
( unlock~l1 opposite~l1 lock~l1 x00000001 )
( lock~l1 opposite~l1 unlock~l1 x00000001 )
( disengage~l1 opposite~l1 engage~l1 x00000001 )
( engage~l1 opposite~l1 disengage~l1 x00000001 )
( weaken~l1 opposite~l1 strengthen~l1 x00000001 )
( strengthen~l1 opposite~l1 weaken~l1 x00000001 )
( oxidize~l1 opposite~l1 deoxidize~l1 x00000001 )
( deoxidize~l1 opposite~l1 oxidize~l1 x00000001 )
( blow_up~l1 opposite~l1 scale_down~l1 x00000001 )
( scale_down~l1 opposite~l1 blow_up~l1 x00000001 )
( spread_out~l1 opposite~l1 contract~l1 x00000001 )
( contract~l1 opposite~l1 spread_out~l1 x00000001 )
( stretch~l1 opposite~l1 contract~l1 x00000001 )
( contract~l1 opposite~l1 stretch~l1 x00000001 )
( elaborate~l1 opposite~l1 foreshorten~l1 x00000001 )
( foreshorten~l1 opposite~l1 elaborate~l1 x00000001 )
( retrograde~l1 opposite~l1 come_along~l1 x00000001 )
( come_along~l1 opposite~l1 retrograde~l1 x00000001 )
( rejuvenate~l1 opposite~l1 age~l1 x00000001 )
( age~l1 opposite~l1 rejuvenate~l1 x00000001 )
( indurate~l1 opposite~l1 soften~l1 x00000001 )
( soften~l1 opposite~l1 indurate~l1 x00000001 )
( break~l1 opposite~l1 furbish_up~l1 x00000001 )
( furbish_up~l1 opposite~l1 break~l1 x00000001 )
( deflate~l1 opposite~l1 inflate~l1 x00000001 )
( inflate~l1 opposite~l1 deflate~l1 x00000001 )
( alkalize~l1 opposite~l1 acidify~l1 x00000001 )
( acidify~l1 opposite~l1 alkalize~l1 x00000001 )
( get_worse~l1 opposite~l1 bounce_back~l1 x00000001 )
( bounce_back~l1 opposite~l1 get_worse~l1 x00000001 )
( unfreeze~l1 opposite~l1 immobilize~l1 x00000001 )
( immobilize~l1 opposite~l1 unfreeze~l1 x00000001 )
( destabilize~l1 opposite~l1 stabilize~l1 x00000001 )
( stabilize~l1 opposite~l1 destabilize~l1 x00000001 )
( desensitize~l1 opposite~l1 sensibilize~l1 x00000001 )
( sensibilize~l1 opposite~l1 desensitize~l1 x00000001 )
( postdate~l1 opposite~l1 antedate~l1 x00000001 )
( antedate~l1 opposite~l1 postdate~l1 x00000001 )
( melanize~l1 opposite~l1 whiten~l1 x00000001 )
( whiten~l1 opposite~l1 melanize~l1 x00000001 )
( darken~l1 opposite~l1 lighten_up~l1 x00000001 )
( lighten_up~l1 opposite~l1 darken~l1 x00000001 )
( colourise~l1 opposite~l1 discolor~l1 x00000001 )
( discolor~l1 opposite~l1 colourise~l1 x00000001 )
( de-escalate~l1 opposite~l1 intensify~l1 x00000001 )
( intensify~l1 opposite~l1 de-escalate~l1 x00000001 )
( uglify~l1 opposite~l1 embellish~l1 x00000001 )
( embellish~l1 opposite~l1 uglify~l1 x00000001 )
( untune~l1 opposite~l1 tune_up~l1 x00000001 )
( tune_up~l1 opposite~l1 untune~l1 x00000001 )
( disqualify~l1 opposite~l1 qualify~l1 x00000001 )
( qualify~l1 opposite~l1 disqualify~l1 x00000001 )
( contract~l1 opposite~l1 widen~l1 x00000001 )
( widen~l1 opposite~l1 contract~l1 x00000001 )
( take_in~l1 opposite~l1 let_out~l1 x00000001 )
( let_out~l1 opposite~l1 take_in~l1 x00000001 )
( explode~l1 opposite~l1 implode~l1 x00000001 )
( implode~l1 opposite~l1 explode~l1 x00000001 )
( hydrogenate~l1 opposite~l1 dehydrogenate~l1 x00000001 )
( dehydrogenate~l1 opposite~l1 hydrogenate~l1 x00000001 )
( focalize~l1 opposite~l1 blur~l1 x00000001 )
( blur~l1 opposite~l1 focalize~l1 x00000001 )
( focalize~l1 opposite~l1 blear~l1 x00000001 )
( blear~l1 opposite~l1 focalize~l1 x00000001 )
( appreciate~l1 opposite~l1 depreciate~l1 x00000001 )
( depreciate~l1 opposite~l1 appreciate~l1 x00000001 )
( lengthen~l1 opposite~l1 shorten~l1 x00000001 )
( shorten~l1 opposite~l1 lengthen~l1 x00000001 )
( dematerialize~l1 opposite~l1 materialize~l1 x00000001 )
( materialize~l1 opposite~l1 dematerialize~l1 x00000001 )
( terminate~l1 opposite~l1 start_out~l1 x00000001 )
( start_out~l1 opposite~l1 terminate~l1 x00000001 )
( terminate~l1 opposite~l1 lead_off~l1 x00000001 )
( lead_off~l1 opposite~l1 terminate~l1 x00000001 )
( be_born~l1 opposite~l1 cash_in_one_'s_chips~l1 x00000001 )
( cash_in_one_'s_chips~l1 opposite~l1 be_born~l1 x00000001 )
( break_apart~l1 opposite~l1 unify~l1 x00000001 )
( unify~l1 opposite~l1 break_apart~l1 x00000001 )
( heat_up~l1 opposite~l1 cool_down~l1 x00000001 )
( cool_down~l1 opposite~l1 heat_up~l1 x00000001 )
( boil~l1 opposite~l1 freeze~l1 x00000001 )
( freeze~l1 opposite~l1 boil~l1 x00000001 )
( depersonalize~l1 opposite~l1 individualize~l1 x00000001 )
( individualize~l1 opposite~l1 depersonalize~l1 x00000001 )
( stimulate~l1 opposite~l1 stifle~l1 x00000001 )
( stifle~l1 opposite~l1 stimulate~l1 x00000001 )
( flatten~l1 opposite~l1 sharpen~l1 x00000001 )
( sharpen~l1 opposite~l1 flatten~l1 x00000001 )
( desynchronize~l1 opposite~l1 synchronize~l1 x00000001 )
( synchronize~l1 opposite~l1 desynchronize~l1 x00000001 )
( incorporate~l1 opposite~l1 disintegrate~l1 x00000001 )
( disintegrate~l1 opposite~l1 incorporate~l1 x00000001 )
( demagnetize~l1 opposite~l1 magnetize~l1 x00000001 )
( magnetize~l1 opposite~l1 demagnetize~l1 x00000001 )
( complicate~l1 opposite~l1 simplify~l1 x00000001 )
( simplify~l1 opposite~l1 complicate~l1 x00000001 )
( depressurize~l1 opposite~l1 pressurize~l1 x00000001 )
( pressurize~l1 opposite~l1 depressurize~l1 x00000001 )
( deconcentrate~l1 opposite~l1 concentrate~l1 x00000001 )
( concentrate~l1 opposite~l1 deconcentrate~l1 x00000001 )
( summerize~l1 opposite~l1 winterize~l1 x00000001 )
( winterize~l1 opposite~l1 summerize~l1 x00000001 )
( denationalize~l1 opposite~l1 nationalize~l1 x00000001 )
( nationalize~l1 opposite~l1 denationalize~l1 x00000001 )
( denaturalize~l1 opposite~l1 naturalize~l1 x00000001 )
( naturalize~l1 opposite~l1 denaturalize~l1 x00000001 )
( emigrate~l1 opposite~l1 immigrate~l1 x00000001 )
( immigrate~l1 opposite~l1 emigrate~l1 x00000001 )
( loosen~l1 opposite~l1 stiffen~l1 x00000001 )
( stiffen~l1 opposite~l1 loosen~l1 x00000001 )
( detransitivize~l1 opposite~l1 transitivize~l1 x00000001 )
( transitivize~l1 opposite~l1 detransitivize~l1 x00000001 )
( disappear~l1 opposite~l1 appear~l1 x00000001 )
( appear~l1 opposite~l1 disappear~l1 x00000001 )
( disappear~l1 opposite~l1 come_along~l1 x00000001 )
( come_along~l1 opposite~l1 disappear~l1 x00000001 )
( maximize~l1 opposite~l1 minimize~l1 x00000001 )
( minimize~l1 opposite~l1 maximize~l1 x00000001 )
( scale_up~l1 opposite~l1 scale_down~l1 x00000001 )
( scale_down~l1 opposite~l1 scale_up~l1 x00000001 )
( inspissate~l1 opposite~l1 thin~l1 x00000001 )
( thin~l1 opposite~l1 inspissate~l1 x00000001 )
( wane~l1 opposite~l1 mount~l1 x00000001 )
( mount~l1 opposite~l1 wane~l1 x00000001 )
( wane~l1 opposite~l1 full~l1 x00000001 )
( full~l1 opposite~l1 wane~l1 x00000001 )
( roll_up~l1 opposite~l1 unfurl~l1 x00000001 )
( unfurl~l1 opposite~l1 roll_up~l1 x00000001 )
( narrow_down~l1 opposite~l1 branch_out~l1 x00000001 )
( branch_out~l1 opposite~l1 narrow_down~l1 x00000001 )
( decelerate~l1 opposite~l1 accelerate~l1 x00000001 )
( accelerate~l1 opposite~l1 decelerate~l1 x00000001 )
( invalidate~l1 opposite~l1 validate~l1 x00000001 )
( validate~l1 opposite~l1 invalidate~l1 x00000001 )
( fill_up~l1 opposite~l1 discharge~l1 x00000001 )
( discharge~l1 opposite~l1 fill_up~l1 x00000001 )
( make_full~l1 opposite~l1 empty~l1 x00000001 )
( empty~l1 opposite~l1 make_full~l1 x00000001 )
( clabber~l1 opposite~l1 homogenize~l1 x00000001 )
( homogenize~l1 opposite~l1 clabber~l1 x00000001 )
( hold_up~l1 opposite~l1 hurry~l1 x00000001 )
( hurry~l1 opposite~l1 hold_up~l1 x00000001 )
( louden~l1 opposite~l1 quieten~l1 x00000001 )
( quieten~l1 opposite~l1 louden~l1 x00000001 )
( skew~l1 opposite~l1 line_up~l1 x00000001 )
( line_up~l1 opposite~l1 skew~l1 x00000001 )
( contaminate~l1 opposite~l1 decontaminate~l1 x00000001 )
( decontaminate~l1 opposite~l1 contaminate~l1 x00000001 )
( decalcify~l1 opposite~l1 calcify~l1 x00000001 )
( calcify~l1 opposite~l1 decalcify~l1 x00000001 )
( demulsify~l1 opposite~l1 emulsify~l1 x00000001 )
( emulsify~l1 opposite~l1 demulsify~l1 x00000001 )
( nazify~l1 opposite~l1 denazify~l1 x00000001 )
( denazify~l1 opposite~l1 nazify~l1 x00000001 )
( nitrify~l1 opposite~l1 denitrify~l1 x00000001 )
( denitrify~l1 opposite~l1 nitrify~l1 x00000001 )
( enable~l1 opposite~l1 incapacitate~l1 x00000001 )
( incapacitate~l1 opposite~l1 enable~l1 x00000001 )
( foreground~l1 opposite~l1 background~l1 x00000001 )
( background~l1 opposite~l1 foreground~l1 x00000001 )
( demystify~l1 opposite~l1 mystify~l1 x00000001 )
( mystify~l1 opposite~l1 demystify~l1 x00000001 )
( ionate~l1 opposite~l1 de-ionate~l1 x00000001 )
( de-ionate~l1 opposite~l1 ionate~l1 x00000001 )
( de-iodinate~l1 opposite~l1 iodinate~l1 x00000001 )
( iodinate~l1 opposite~l1 de-iodinate~l1 x00000001 )
( orientalize~l1 opposite~l1 occidentalize~l1 x00000001 )
( occidentalize~l1 opposite~l1 orientalize~l1 x00000001 )
( desalinate~l1 opposite~l1 salinate~l1 x00000001 )
( salinate~l1 opposite~l1 desalinate~l1 x00000001 )
( unscramble~l1 opposite~l1 scramble~l1 x00000001 )
( scramble~l1 opposite~l1 unscramble~l1 x00000001 )
( decrescendo~l1 opposite~l1 crescendo~l1 x00000001 )
( crescendo~l1 opposite~l1 decrescendo~l1 x00000001 )
( veer~l1 opposite~l1 back~l1 x00000001 )
( back~l1 opposite~l1 veer~l1 x00000001 )
( destalinize~l1 opposite~l1 stalinize~l1 x00000001 )
( stalinize~l1 opposite~l1 destalinize~l1 x00000001 )
( ignore~l1 opposite~l1 cognize~l1 x00000001 )
( cognize~l1 opposite~l1 ignore~l1 x00000001 )
( lose_track~l1 opposite~l1 keep_track~l1 x00000001 )
( keep_track~l1 opposite~l1 lose_track~l1 x00000001 )
( draw_a_blank~l1 opposite~l1 call_back~l1 x00000001 )
( call_back~l1 opposite~l1 draw_a_blank~l1 x00000001 )
( forget~l1 opposite~l1 bear_in_mind~l1 x00000001 )
( bear_in_mind~l1 opposite~l1 forget~l1 x00000001 )
( forget~l1 opposite~l1 remember~l1 x00000001 )
( remember~l1 opposite~l1 forget~l1 x00000001 )
( take_to_heart~l1 opposite~l1 pretermit~l1 x00000001 )
( pretermit~l1 opposite~l1 take_to_heart~l1 x00000001 )
( include~l1 opposite~l1 leave_out~l1 x00000001 )
( leave_out~l1 opposite~l1 include~l1 x00000001 )
( spiritualize~l1 opposite~l1 literalize~l1 x00000001 )
( literalize~l1 opposite~l1 spiritualize~l1 x00000001 )
( subtract~l1 opposite~l1 add_together~l1 x00000001 )
( add_together~l1 opposite~l1 subtract~l1 x00000001 )
( fraction~l1 opposite~l1 multiply~l1 x00000001 )
( multiply~l1 opposite~l1 fraction~l1 x00000001 )
( integrate~l1 opposite~l1 differentiate~l1 x00000001 )
( differentiate~l1 opposite~l1 integrate~l1 x00000001 )
( synthesize~l1 opposite~l1 break_down~l1 x00000001 )
( break_down~l1 opposite~l1 synthesize~l1 x00000001 )
( upgrade~l1 opposite~l1 downgrade~l1 x00000001 )
( downgrade~l1 opposite~l1 upgrade~l1 x00000001 )
( disprove~l1 opposite~l1 demonstrate~l1 x00000001 )
( demonstrate~l1 opposite~l1 disprove~l1 x00000001 )
( contradict~l1 opposite~l1 substantiate~l1 x00000001 )
( substantiate~l1 opposite~l1 contradict~l1 x00000001 )
( overestimate~l1 opposite~l1 underestimate~l1 x00000001 )
( underestimate~l1 opposite~l1 overestimate~l1 x00000001 )
( disapprove~l1 opposite~l1 approve~l1 x00000001 )
( approve~l1 opposite~l1 disapprove~l1 x00000001 )
( disincline~l1 opposite~l1 dispose~l1 x00000001 )
( dispose~l1 opposite~l1 disincline~l1 x00000001 )
( disbelieve~l1 opposite~l1 believe~l1 x00000001 )
( believe~l1 opposite~l1 disbelieve~l1 x00000001 )
( accept~l1 opposite~l1 reject~l1 x00000001 )
( reject~l1 opposite~l1 accept~l1 x00000001 )
( reprobate~l1 opposite~l1 approbate~l1 x00000001 )
( approbate~l1 opposite~l1 reprobate~l1 x00000001 )
( trust~l1 opposite~l1 distrust~l1 x00000001 )
( distrust~l1 opposite~l1 trust~l1 x00000001 )
( dissociate~l1 opposite~l1 associate~l1 x00000001 )
( associate~l1 opposite~l1 dissociate~l1 x00000001 )
( disclaim~l1 opposite~l1 claim~l1 x00000001 )
( claim~l1 opposite~l1 disclaim~l1 x00000001 )
( dissuade~l1 opposite~l1 persuade~l1 x00000001 )
( persuade~l1 opposite~l1 dissuade~l1 x00000001 )
( talk_into~l1 opposite~l1 talk_out_of~l1 x00000001 )
( talk_out_of~l1 opposite~l1 talk_into~l1 x00000001 )
( countenance~l1 opposite~l1 interdict~l1 x00000001 )
( interdict~l1 opposite~l1 countenance~l1 x00000001 )
( consent~l1 opposite~l1 decline~l1 x00000001 )
( decline~l1 opposite~l1 consent~l1 x00000001 )
( contract_out~l1 opposite~l1 contract_in~l1 x00000001 )
( contract_in~l1 opposite~l1 contract_out~l1 x00000001 )
( dissent~l1 opposite~l1 acquiesce~l1 x00000001 )
( acquiesce~l1 opposite~l1 dissent~l1 x00000001 )
( concord~l1 opposite~l1 take_issue~l1 x00000001 )
( take_issue~l1 opposite~l1 concord~l1 x00000001 )
( disapprove~l1 opposite~l1 sanction~l1 x00000001 )
( sanction~l1 opposite~l1 disapprove~l1 x00000001 )
( confront~l1 opposite~l1 avoid~l1 x00000001 )
( avoid~l1 opposite~l1 confront~l1 x00000001 )
( acknowledge~l1 opposite~l1 deny~l1 x00000001 )
( deny~l1 opposite~l1 acknowledge~l1 x00000001 )
( disavow~l1 opposite~l1 avouch~l1 x00000001 )
( avouch~l1 opposite~l1 disavow~l1 x00000001 )
( praise~l1 opposite~l1 pick_apart~l1 x00000001 )
( pick_apart~l1 opposite~l1 praise~l1 x00000001 )
( understate~l1 opposite~l1 hyperbolize~l1 x00000001 )
( hyperbolize~l1 opposite~l1 understate~l1 x00000001 )
( absolve~l1 opposite~l1 blame~l1 x00000001 )
( blame~l1 opposite~l1 absolve~l1 x00000001 )
( blandish~l1 opposite~l1 disparage~l1 x00000001 )
( disparage~l1 opposite~l1 blandish~l1 x00000001 )
( undeceive~l1 opposite~l1 lead_astray~l1 x00000001 )
( lead_astray~l1 opposite~l1 undeceive~l1 x00000001 )
( sound_off~l1 opposite~l1 cheer_up~l1 x00000001 )
( cheer_up~l1 opposite~l1 sound_off~l1 x00000001 )
( hiss~l1 opposite~l1 applaud~l1 x00000001 )
( applaud~l1 opposite~l1 hiss~l1 x00000001 )
( bless~l1 opposite~l1 anathemize~l1 x00000001 )
( anathemize~l1 opposite~l1 bless~l1 x00000001 )
( deconsecrate~l1 opposite~l1 consecrate~l1 x00000001 )
( consecrate~l1 opposite~l1 deconsecrate~l1 x00000001 )
( disoblige~l1 opposite~l1 accommodate~l1 x00000001 )
( accommodate~l1 opposite~l1 disoblige~l1 x00000001 )
( break~l1 opposite~l1 make~l1 x00000001 )
( make~l1 opposite~l1 break~l1 x00000001 )
( say_farewell~l1 opposite~l1 welcome~l1 x00000001 )
( welcome~l1 opposite~l1 say_farewell~l1 x00000001 )
( convict~l1 opposite~l1 discharge~l1 x00000001 )
( discharge~l1 opposite~l1 convict~l1 x00000001 )
( whisper~l1 opposite~l1 shout~l1 x00000001 )
( shout~l1 opposite~l1 whisper~l1 x00000001 )
( contraindicate~l1 opposite~l1 indicate~l1 x00000001 )
( indicate~l1 opposite~l1 contraindicate~l1 x00000001 )
( keep_one_'s_mouth_shut~l1 opposite~l1 let_the_cat_out_of_the_bag~l1 x00000001 )
( let_the_cat_out_of_the_bag~l1 opposite~l1 keep_one_'s_mouth_shut~l1 x00000001 )
( obfuscate~l1 opposite~l1 elucidate~l1 x00000001 )
( elucidate~l1 opposite~l1 obfuscate~l1 x00000001 )
( vocalize~l1 opposite~l1 devoice~l1 x00000001 )
( devoice~l1 opposite~l1 vocalize~l1 x00000001 )
( check_out~l1 opposite~l1 check_in~l1 x00000001 )
( check_in~l1 opposite~l1 check_out~l1 x00000001 )
( clock_out~l1 opposite~l1 clock_in~l1 x00000001 )
( clock_in~l1 opposite~l1 clock_out~l1 x00000001 )
( decipher~l1 opposite~l1 encode~l1 x00000001 )
( encode~l1 opposite~l1 decipher~l1 x00000001 )
( delete~l1 opposite~l1 record~l1 x00000001 )
( record~l1 opposite~l1 delete~l1 x00000001 )
( generalize~l1 opposite~l1 particularize~l1 x00000001 )
( particularize~l1 opposite~l1 generalize~l1 x00000001 )
( communicate~l1 opposite~l1 excommunicate~l1 x00000001 )
( excommunicate~l1 opposite~l1 communicate~l1 x00000001 )
( open_up~l1 opposite~l1 button_up~l1 x00000001 )
( button_up~l1 opposite~l1 open_up~l1 x00000001 )
( unspell~l1 opposite~l1 spell~l1 x00000001 )
( spell~l1 opposite~l1 unspell~l1 x00000001 )
( fall_by_the_wayside~l1 opposite~l1 participate~l1 x00000001 )
( participate~l1 opposite~l1 fall_by_the_wayside~l1 x00000001 )
( demilitarize~l1 opposite~l1 build_up~l1 x00000001 )
( build_up~l1 opposite~l1 demilitarize~l1 x00000001 )
( mobilize~l1 opposite~l1 demobilize~l1 x00000001 )
( demobilize~l1 opposite~l1 mobilize~l1 x00000001 )
( make_peace~l1 opposite~l1 war~l1 x00000001 )
( war~l1 opposite~l1 make_peace~l1 x00000001 )
( muster_out~l1 opposite~l1 muster_in~l1 x00000001 )
( muster_in~l1 opposite~l1 muster_out~l1 x00000001 )
( demilitarize~l1 opposite~l1 militarize~l1 x00000001 )
( militarize~l1 opposite~l1 demilitarize~l1 x00000001 )
( win~l1 opposite~l1 lose~l1 x00000001 )
( lose~l1 opposite~l1 win~l1 x00000001 )
( fall_behind~l1 opposite~l1 make_headway~l1 x00000001 )
( make_headway~l1 opposite~l1 fall_behind~l1 x00000001 )
( stand_firm~l1 opposite~l1 surrender~l1 x00000001 )
( surrender~l1 opposite~l1 stand_firm~l1 x00000001 )
( defend~l1 opposite~l1 attack~l1 x00000001 )
( attack~l1 opposite~l1 defend~l1 x00000001 )
( undershoot~l1 opposite~l1 overshoot~l1 x00000001 )
( overshoot~l1 opposite~l1 undershoot~l1 x00000001 )
( fuse~l1 opposite~l1 defuse~l1 x00000001 )
( defuse~l1 opposite~l1 fuse~l1 x00000001 )
( abstain~l1 opposite~l1 consume~l1 x00000001 )
( consume~l1 opposite~l1 abstain~l1 x00000001 )
( dine_out~l1 opposite~l1 dine_in~l1 x00000001 )
( dine_in~l1 opposite~l1 dine_out~l1 x00000001 )
( sleep_out~l1 opposite~l1 sleep_in~l1 x00000001 )
( sleep_in~l1 opposite~l1 sleep_out~l1 x00000001 )
( starve~l1 opposite~l1 feed~l1 x00000001 )
( feed~l1 opposite~l1 starve~l1 x00000001 )
( bottlefeed~l1 opposite~l1 breastfeed~l1 x00000001 )
( breastfeed~l1 opposite~l1 bottlefeed~l1 x00000001 )
( be_full~l1 opposite~l1 starve~l1 x00000001 )
( starve~l1 opposite~l1 be_full~l1 x00000001 )
( unclasp~l1 opposite~l1 clasp~l1 x00000001 )
( clasp~l1 opposite~l1 unclasp~l1 x00000001 )
( relinquish~l1 opposite~l1 take_hold~l1 x00000001 )
( take_hold~l1 opposite~l1 relinquish~l1 x00000001 )
( untwist~l1 opposite~l1 distort~l1 x00000001 )
( distort~l1 opposite~l1 untwist~l1 x00000001 )
( miss~l1 opposite~l1 collide_with~l1 x00000001 )
( collide_with~l1 opposite~l1 miss~l1 x00000001 )
( sharpen~l1 opposite~l1 blunt~l1 x00000001 )
( blunt~l1 opposite~l1 sharpen~l1 x00000001 )
( roughen~l1 opposite~l1 smoothen~l1 x00000001 )
( smoothen~l1 opposite~l1 roughen~l1 x00000001 )
( spread_out~l1 opposite~l1 fold_up~l1 x00000001 )
( fold_up~l1 opposite~l1 spread_out~l1 x00000001 )
( unbend~l1 opposite~l1 deform~l1 x00000001 )
( deform~l1 opposite~l1 unbend~l1 x00000001 )
( unwrap~l1 opposite~l1 wrap_up~l1 x00000001 )
( wrap_up~l1 opposite~l1 unwrap~l1 x00000001 )
( bind~l1 opposite~l1 unbrace~l1 x00000001 )
( unbrace~l1 opposite~l1 bind~l1 x00000001 )
( unchain~l1 opposite~l1 chain~l1 x00000001 )
( chain~l1 opposite~l1 unchain~l1 x00000001 )
( unstrap~l1 opposite~l1 strap~l1 x00000001 )
( strap~l1 opposite~l1 unstrap~l1 x00000001 )
( come_away~l1 opposite~l1 attach~l1 x00000001 )
( attach~l1 opposite~l1 come_away~l1 x00000001 )
( disjoint~l1 opposite~l1 conjoin~l1 x00000001 )
( conjoin~l1 opposite~l1 disjoint~l1 x00000001 )
( bring_together~l1 opposite~l1 disjoint~l1 x00000001 )
( disjoint~l1 opposite~l1 bring_together~l1 x00000001 )
( detach~l1 opposite~l1 attach~l1 x00000001 )
( attach~l1 opposite~l1 detach~l1 x00000001 )
( uncouple~l1 opposite~l1 couple_on~l1 x00000001 )
( couple_on~l1 opposite~l1 uncouple~l1 x00000001 )
( suffix~l1 opposite~l1 prefix~l1 x00000001 )
( prefix~l1 opposite~l1 suffix~l1 x00000001 )
( unbridle~l1 opposite~l1 bridle~l1 x00000001 )
( bridle~l1 opposite~l1 unbridle~l1 x00000001 )
( unbind~l1 opposite~l1 bind~l1 x00000001 )
( bind~l1 opposite~l1 unbind~l1 x00000001 )
( unlash~l1 opposite~l1 lash~l1 x00000001 )
( lash~l1 opposite~l1 unlash~l1 x00000001 )
( undock~l1 opposite~l1 dock~l1 x00000001 )
( dock~l1 opposite~l1 undock~l1 x00000001 )
( degrade~l1 opposite~l1 aggrade~l1 x00000001 )
( aggrade~l1 opposite~l1 degrade~l1 x00000001 )
( unhitch~l1 opposite~l1 hitch~l1 x00000001 )
( hitch~l1 opposite~l1 unhitch~l1 x00000001 )
( uncover~l1 opposite~l1 cover~l1 x00000001 )
( cover~l1 opposite~l1 uncover~l1 x00000001 )
( unfasten~l1 opposite~l1 fasten~l1 x00000001 )
( fasten~l1 opposite~l1 unfasten~l1 x00000001 )
( zip_up~l1 opposite~l1 unzip~l1 x00000001 )
( unzip~l1 opposite~l1 zip_up~l1 x00000001 )
( unbar~l1 opposite~l1 bar~l1 x00000001 )
( bar~l1 opposite~l1 unbar~l1 x00000001 )
( open_up~l1 opposite~l1 close~l1 x00000001 )
( close~l1 opposite~l1 open_up~l1 x00000001 )
( unbolt~l1 opposite~l1 bolt~l1 x00000001 )
( bolt~l1 opposite~l1 unbolt~l1 x00000001 )
( screw~l1 opposite~l1 unscrew~l1 x00000001 )
( unscrew~l1 opposite~l1 screw~l1 x00000001 )
( unseal~l1 opposite~l1 seal~l1 x00000001 )
( seal~l1 opposite~l1 unseal~l1 x00000001 )
( disconnect~l1 opposite~l1 connect~l1 x00000001 )
( connect~l1 opposite~l1 disconnect~l1 x00000001 )
( unmask~l1 opposite~l1 mask~l1 x00000001 )
( mask~l1 opposite~l1 unmask~l1 x00000001 )
( unstring~l1 opposite~l1 string~l1 x00000001 )
( string~l1 opposite~l1 unstring~l1 x00000001 )
( unhook~l1 opposite~l1 hook~l1 x00000001 )
( hook~l1 opposite~l1 unhook~l1 x00000001 )
( unbelt~l1 opposite~l1 belt~l1 x00000001 )
( belt~l1 opposite~l1 unbelt~l1 x00000001 )
( unstaple~l1 opposite~l1 staple~l1 x00000001 )
( staple~l1 opposite~l1 unstaple~l1 x00000001 )
( unclip~l1 opposite~l1 clip~l1 x00000001 )
( clip~l1 opposite~l1 unclip~l1 x00000001 )
( unbutton~l1 opposite~l1 button~l1 x00000001 )
( button~l1 opposite~l1 unbutton~l1 x00000001 )
( unpin~l1 opposite~l1 pin~l1 x00000001 )
( pin~l1 opposite~l1 unpin~l1 x00000001 )
( pull_together~l1 opposite~l1 distribute~l1 x00000001 )
( distribute~l1 opposite~l1 pull_together~l1 x00000001 )
( decompress~l1 opposite~l1 pack_together~l1 x00000001 )
( pack_together~l1 opposite~l1 decompress~l1 x00000001 )
( disconnect~l1 opposite~l1 plug_into~l1 x00000001 )
( plug_into~l1 opposite~l1 disconnect~l1 x00000001 )
( uncork~l1 opposite~l1 cork_up~l1 x00000001 )
( cork_up~l1 opposite~l1 uncork~l1 x00000001 )
( carry_away~l1 opposite~l1 convey~l1 x00000001 )
( convey~l1 opposite~l1 carry_away~l1 x00000001 )
( force~l1 opposite~l1 force~l1 x00000001 )
( abduct~l1 opposite~l1 adduct~l1 x00000001 )
( adduct~l1 opposite~l1 abduct~l1 x00000001 )
( straighten_out~l1 opposite~l1 entangle~l1 x00000001 )
( entangle~l1 opposite~l1 straighten_out~l1 x00000001 )
( disarrange~l1 opposite~l1 arrange~l1 x00000001 )
( arrange~l1 opposite~l1 disarrange~l1 x00000001 )
( obstruct~l1 opposite~l1 disengage~l1 x00000001 )
( disengage~l1 opposite~l1 obstruct~l1 x00000001 )
( unclog~l1 opposite~l1 choke_off~l1 x00000001 )
( choke_off~l1 opposite~l1 unclog~l1 x00000001 )
( loosen_up~l1 opposite~l1 choke_up~l1 x00000001 )
( choke_up~l1 opposite~l1 loosen_up~l1 x00000001 )
( take_out~l1 opposite~l1 pack~l1 x00000001 )
( pack~l1 opposite~l1 take_out~l1 x00000001 )
( unveil~l1 opposite~l1 veil~l1 x00000001 )
( veil~l1 opposite~l1 unveil~l1 x00000001 )
( unbox~l1 opposite~l1 package~l1 x00000001 )
( package~l1 opposite~l1 unbox~l1 x00000001 )
( uncrate~l1 opposite~l1 crate~l1 x00000001 )
( crate~l1 opposite~l1 uncrate~l1 x00000001 )
( disburden~l1 opposite~l1 weight_down~l1 x00000001 )
( weight_down~l1 opposite~l1 disburden~l1 x00000001 )
( discharge~l1 opposite~l1 charge~l1 x00000001 )
( charge~l1 opposite~l1 discharge~l1 x00000001 )
( unyoke~l1 opposite~l1 yoke~l1 x00000001 )
( yoke~l1 opposite~l1 unyoke~l1 x00000001 )
( outspan~l1 opposite~l1 inspan~l1 x00000001 )
( inspan~l1 opposite~l1 outspan~l1 x00000001 )
( unharness~l1 opposite~l1 harness~l1 x00000001 )
( harness~l1 opposite~l1 unharness~l1 x00000001 )
( offsaddle~l1 opposite~l1 saddle~l1 x00000001 )
( saddle~l1 opposite~l1 offsaddle~l1 x00000001 )
( force_back~l1 opposite~l1 attract~l1 x00000001 )
( attract~l1 opposite~l1 force_back~l1 x00000001 )
( switch_off~l1 opposite~l1 switch_on~l1 x00000001 )
( switch_on~l1 opposite~l1 switch_off~l1 x00000001 )
( disengage~l1 opposite~l1 operate~l1 x00000001 )
( operate~l1 opposite~l1 disengage~l1 x00000001 )
( untwine~l1 opposite~l1 intertwine~l1 x00000001 )
( intertwine~l1 opposite~l1 untwine~l1 x00000001 )
( unweave~l1 opposite~l1 interweave~l1 x00000001 )
( interweave~l1 opposite~l1 unweave~l1 x00000001 )
( unbraid~l1 opposite~l1 pleach~l1 x00000001 )
( pleach~l1 opposite~l1 unbraid~l1 x00000001 )
( tangle~l1 opposite~l1 unscramble~l1 x00000001 )
( unscramble~l1 opposite~l1 tangle~l1 x00000001 )
( ravel_out~l1 opposite~l1 tangle~l1 x00000001 )
( tangle~l1 opposite~l1 ravel_out~l1 x00000001 )
( wind_off~l1 opposite~l1 twine~l1 x00000001 )
( twine~l1 opposite~l1 wind_off~l1 x00000001 )
( uncoil~l1 opposite~l1 coil~l1 x00000001 )
( coil~l1 opposite~l1 uncoil~l1 x00000001 )
( function~l1 opposite~l1 malfunction~l1 x00000001 )
( malfunction~l1 opposite~l1 function~l1 x00000001 )
( tick_over~l1 opposite~l1 run~l1 x00000001 )
( run~l1 opposite~l1 tick_over~l1 x00000001 )
( go_off~l1 opposite~l1 come_up~l1 x00000001 )
( come_up~l1 opposite~l1 go_off~l1 x00000001 )
( dislodge~l1 opposite~l1 deposit~l1 x00000001 )
( deposit~l1 opposite~l1 dislodge~l1 x00000001 )
( begrime~l1 opposite~l1 make_clean~l1 x00000001 )
( make_clean~l1 opposite~l1 begrime~l1 x00000001 )
( machine_wash~l1 opposite~l1 hand-wash~l1 x00000001 )
( hand-wash~l1 opposite~l1 machine_wash~l1 x00000001 )
( stand_up~l1 opposite~l1 sit_down~l1 x00000001 )
( sit_down~l1 opposite~l1 stand_up~l1 x00000001 )
( lie~l1 opposite~l1 sit_down~l1 x00000001 )
( sit_down~l1 opposite~l1 lie~l1 x00000001 )
( lie~l1 opposite~l1 stand_up~l1 x00000001 )
( stand_up~l1 opposite~l1 lie~l1 x00000001 )
( unbuckle~l1 opposite~l1 buckle~l1 x00000001 )
( buckle~l1 opposite~l1 unbuckle~l1 x00000001 )
( unsheathe~l1 opposite~l1 sheathe~l1 x00000001 )
( sheathe~l1 opposite~l1 unsheathe~l1 x00000001 )
( unwire~l1 opposite~l1 wire~l1 x00000001 )
( wire~l1 opposite~l1 unwire~l1 x00000001 )
( unmake~l1 opposite~l1 make~l1 x00000001 )
( make~l1 opposite~l1 unmake~l1 x00000001 )
( phase_out~l1 opposite~l1 phase_in~l1 x00000001 )
( phase_in~l1 opposite~l1 phase_out~l1 x00000001 )
( disincarnate~l1 opposite~l1 incarnate~l1 x00000001 )
( incarnate~l1 opposite~l1 disincarnate~l1 x00000001 )
( disassemble~l1 opposite~l1 tack_together~l1 x00000001 )
( tack_together~l1 opposite~l1 disassemble~l1 x00000001 )
( dismantle~l1 opposite~l1 set_up~l1 x00000001 )
( set_up~l1 opposite~l1 dismantle~l1 x00000001 )
( cast_off~l1 opposite~l1 cast_on~l1 x00000001 )
( cast_on~l1 opposite~l1 cast_off~l1 x00000001 )
( underplay~l1 opposite~l1 ham_it_up~l1 x00000001 )
( ham_it_up~l1 opposite~l1 underplay~l1 x00000001 )
( tranquillize~l1 opposite~l1 charge_up~l1 x00000001 )
( charge_up~l1 opposite~l1 tranquillize~l1 x00000001 )
( reassure~l1 opposite~l1 worry~l1 x00000001 )
( worry~l1 opposite~l1 reassure~l1 x00000001 )
( love~l1 opposite~l1 detest~l1 x00000001 )
( detest~l1 opposite~l1 love~l1 x00000001 )
( like~l1 opposite~l1 dislike~l1 x00000001 )
( dislike~l1 opposite~l1 like~l1 x00000001 )
( humanize~l1 opposite~l1 dehumanize~l1 x00000001 )
( dehumanize~l1 opposite~l1 humanize~l1 x00000001 )
( repulse~l1 opposite~l1 attract~l1 x00000001 )
( attract~l1 opposite~l1 repulse~l1 x00000001 )
( demoralize~l1 opposite~l1 intoxicate~l1 x00000001 )
( intoxicate~l1 opposite~l1 demoralize~l1 x00000001 )
( sadden~l1 opposite~l1 gladden~l1 x00000001 )
( gladden~l1 opposite~l1 sadden~l1 x00000001 )
( weigh_down~l1 opposite~l1 lighten_up~l1 x00000001 )
( lighten_up~l1 opposite~l1 weigh_down~l1 x00000001 )
( displease~l1 opposite~l1 delight~l1 x00000001 )
( delight~l1 opposite~l1 displease~l1 x00000001 )
( dissatisfy~l1 opposite~l1 satisfy~l1 x00000001 )
( satisfy~l1 opposite~l1 dissatisfy~l1 x00000001 )
( discontent~l1 opposite~l1 content~l1 x00000001 )
( content~l1 opposite~l1 discontent~l1 x00000001 )
( disillusion~l1 opposite~l1 enrapture~l1 x00000001 )
( enrapture~l1 opposite~l1 disillusion~l1 x00000001 )
( dishearten~l1 opposite~l1 recreate~l1 x00000001 )
( recreate~l1 opposite~l1 dishearten~l1 x00000001 )
( discourage~l1 opposite~l1 encourage~l1 x00000001 )
( encourage~l1 opposite~l1 discourage~l1 x00000001 )
( bore~l1 opposite~l1 interest~l1 x00000001 )
( interest~l1 opposite~l1 bore~l1 x00000001 )
( begrudge~l1 opposite~l1 wish_well~l1 x00000001 )
( wish_well~l1 opposite~l1 begrudge~l1 x00000001 )
( look_down_on~l1 opposite~l1 look_up_to~l1 x00000001 )
( look_up_to~l1 opposite~l1 look_down_on~l1 x00000001 )
( stand_still~l1 opposite~l1 move~l1 x00000001 )
( move~l1 opposite~l1 stand_still~l1 x00000001 )
( stay_in_place~l1 opposite~l1 locomote~l1 x00000001 )
( locomote~l1 opposite~l1 stay_in_place~l1 x00000001 )
( come_up~l1 opposite~l1 go_away~l1 x00000001 )
( go_away~l1 opposite~l1 come_up~l1 x00000001 )
( stick_around~l1 opposite~l1 move~l1 x00000001 )
( move~l1 opposite~l1 stick_around~l1 x00000001 )
( move_out~l1 opposite~l1 move_in~l1 x00000001 )
( move_in~l1 opposite~l1 move_out~l1 x00000001 )
( stop~l1 opposite~l1 start_up~l1 x00000001 )
( start_up~l1 opposite~l1 stop~l1 x00000001 )
( get_going~l1 opposite~l1 stop~l1 x00000001 )
( stop~l1 opposite~l1 get_going~l1 x00000001 )
( ebb_away~l1 opposite~l1 surge~l1 x00000001 )
( surge~l1 opposite~l1 ebb_away~l1 x00000001 )
( go_under~l1 opposite~l1 float~l1 x00000001 )
( float~l1 opposite~l1 go_under~l1 x00000001 )
( ride~l1 opposite~l1 walk~l1 x00000001 )
( walk~l1 opposite~l1 ride~l1 x00000001 )
( uncross~l1 opposite~l1 cross~l1 x00000001 )
( cross~l1 opposite~l1 uncross~l1 x00000001 )
( file_out~l1 opposite~l1 file_in~l1 x00000001 )
( file_in~l1 opposite~l1 file_out~l1 x00000001 )
( pop_out~l1 opposite~l1 pop_in~l1 x00000001 )
( pop_in~l1 opposite~l1 pop_out~l1 x00000001 )
( hop_out~l1 opposite~l1 mount_up~l1 x00000001 )
( mount_up~l1 opposite~l1 hop_out~l1 x00000001 )
( come_down~l1 opposite~l1 move_up~l1 x00000001 )
( move_up~l1 opposite~l1 come_down~l1 x00000001 )
( come_down~l1 opposite~l1 ascend~l1 x00000001 )
( ascend~l1 opposite~l1 come_down~l1 x00000001 )
( go_under~l1 opposite~l1 come_up~l1 x00000001 )
( come_up~l1 opposite~l1 go_under~l1 x00000001 )
( bring_up~l1 opposite~l1 bring_down~l1 x00000001 )
( bring_down~l1 opposite~l1 bring_up~l1 x00000001 )
( embark~l1 opposite~l1 disembark~l1 x00000001 )
( disembark~l1 opposite~l1 embark~l1 x00000001 )
( lie_down~l1 opposite~l1 stand_up~l1 x00000001 )
( stand_up~l1 opposite~l1 lie_down~l1 x00000001 )
( deglycerolize~l1 opposite~l1 glycerolize~l1 x00000001 )
( glycerolize~l1 opposite~l1 deglycerolize~l1 x00000001 )
( pull_away~l1 opposite~l1 progress~l1 x00000001 )
( progress~l1 opposite~l1 pull_away~l1 x00000001 )
( back~l1 opposite~l1 bring_forward~l1 x00000001 )
( bring_forward~l1 opposite~l1 back~l1 x00000001 )
( precede~l1 opposite~l1 follow~l1 x00000001 )
( follow~l1 opposite~l1 precede~l1 x00000001 )
( go_forth~l1 opposite~l1 arrive~l1 x00000001 )
( arrive~l1 opposite~l1 go_forth~l1 x00000001 )
( top_out~l1 opposite~l1 bottom_out~l1 x00000001 )
( bottom_out~l1 opposite~l1 top_out~l1 x00000001 )
( stay~l1 opposite~l1 take_leave~l1 x00000001 )
( take_leave~l1 opposite~l1 stay~l1 x00000001 )
( pull_in~l1 opposite~l1 pull_out~l1 x00000001 )
( pull_out~l1 opposite~l1 pull_in~l1 x00000001 )
( move_into~l1 opposite~l1 get_out~l1 x00000001 )
( get_out~l1 opposite~l1 move_into~l1 x00000001 )
( get_on~l1 opposite~l1 get_off~l1 x00000001 )
( get_off~l1 opposite~l1 get_on~l1 x00000001 )
( converge~l1 opposite~l1 diverge~l1 x00000001 )
( diverge~l1 opposite~l1 converge~l1 x00000001 )
( bend~l1 opposite~l1 straighten~l1 x00000001 )
( straighten~l1 opposite~l1 bend~l1 x00000001 )
( cannonball_along~l1 opposite~l1 linger~l1 x00000001 )
( linger~l1 opposite~l1 cannonball_along~l1 x00000001 )
( enjoy~l1 opposite~l1 suffer~l1 x00000001 )
( suffer~l1 opposite~l1 enjoy~l1 x00000001 )
( underexpose~l1 opposite~l1 overexpose~l1 x00000001 )
( overexpose~l1 opposite~l1 underexpose~l1 x00000001 )
( sensitize~l1 opposite~l1 desensitize~l1 x00000001 )
( desensitize~l1 opposite~l1 sensitize~l1 x00000001 )
( ignore~l1 opposite~l1 notice~l1 x00000001 )
( notice~l1 opposite~l1 ignore~l1 x00000001 )
( deodourise~l1 opposite~l1 odourise~l1 x00000001 )
( odourise~l1 opposite~l1 deodourise~l1 x00000001 )
( conceal~l1 opposite~l1 show~l1 x00000001 )
( show~l1 opposite~l1 conceal~l1 x00000001 )
( close~l1 opposite~l1 open~l1 x00000001 )
( open~l1 opposite~l1 close~l1 x00000001 )
( disorientate~l1 opposite~l1 orientate~l1 x00000001 )
( orientate~l1 opposite~l1 disorientate~l1 x00000001 )
( focus~l1 opposite~l1 blur~l1 x00000001 )
( blur~l1 opposite~l1 focus~l1 x00000001 )
( louden~l1 opposite~l1 quiet_down~l1 x00000001 )
( quiet_down~l1 opposite~l1 louden~l1 x00000001 )
( sharpen~l1 opposite~l1 soften~l1 x00000001 )
( soften~l1 opposite~l1 sharpen~l1 x00000001 )
( acidulate~l1 opposite~l1 edulcorate~l1 x00000001 )
( edulcorate~l1 opposite~l1 acidulate~l1 x00000001 )
( take~l1 opposite~l1 give~l1 x00000001 )
( give~l1 opposite~l1 take~l1 x00000001 )
( lose~l1 opposite~l1 hold_on~l1 x00000001 )
( hold_on~l1 opposite~l1 lose~l1 x00000001 )
( sell~l1 opposite~l1 purchase~l1 x00000001 )
( purchase~l1 opposite~l1 sell~l1 x00000001 )
( allow~l1 opposite~l1 refuse~l1 x00000001 )
( refuse~l1 opposite~l1 allow~l1 x00000001 )
( disinherit~l1 opposite~l1 bequeath~l1 x00000001 )
( bequeath~l1 opposite~l1 disinherit~l1 x00000001 )
( export~l1 opposite~l1 import~l1 x00000001 )
( import~l1 opposite~l1 export~l1 x00000001 )
( upload~l1 opposite~l1 download~l1 x00000001 )
( download~l1 opposite~l1 upload~l1 x00000001 )
( turn_down~l1 opposite~l1 accept~l1 x00000001 )
( accept~l1 opposite~l1 turn_down~l1 x00000001 )
( log_out~l1 opposite~l1 log_in~l1 x00000001 )
( log_in~l1 opposite~l1 log_out~l1 x00000001 )
( underpay~l1 opposite~l1 overpay~l1 x00000001 )
( overpay~l1 opposite~l1 underpay~l1 x00000001 )
( default_on~l1 opposite~l1 ante_up~l1 x00000001 )
( ante_up~l1 opposite~l1 default_on~l1 x00000001 )
( clear~l1 opposite~l1 bounce~l1 x00000001 )
( bounce~l1 opposite~l1 clear~l1 x00000001 )
( debit~l1 opposite~l1 credit~l1 x00000001 )
( credit~l1 opposite~l1 debit~l1 x00000001 )
( underspend~l1 opposite~l1 overspend~l1 x00000001 )
( overspend~l1 opposite~l1 underspend~l1 x00000001 )
( economize~l1 opposite~l1 squander~l1 x00000001 )
( squander~l1 opposite~l1 economize~l1 x00000001 )
( disinvest~l1 opposite~l1 invest~l1 x00000001 )
( invest~l1 opposite~l1 disinvest~l1 x00000001 )
( throw_overboard~l1 opposite~l1 lay_claim~l1 x00000001 )
( lay_claim~l1 opposite~l1 throw_overboard~l1 x00000001 )
( derequisition~l1 opposite~l1 requisition~l1 x00000001 )
( requisition~l1 opposite~l1 derequisition~l1 x00000001 )
( turn_a_loss~l1 opposite~l1 turn_a_profit~l1 x00000001 )
( turn_a_profit~l1 opposite~l1 turn_a_loss~l1 x00000001 )
( break_even~l1 opposite~l1 turn_a_profit~l1 x00000001 )
( turn_a_profit~l1 opposite~l1 break_even~l1 x00000001 )
( turn_a_loss~l1 opposite~l1 break_even~l1 x00000001 )
( break_even~l1 opposite~l1 turn_a_loss~l1 x00000001 )
( lose~l1 opposite~l1 regain~l1 x00000001 )
( regain~l1 opposite~l1 lose~l1 x00000001 )
( acquire~l1 opposite~l1 lose~l1 x00000001 )
( lose~l1 opposite~l1 acquire~l1 x00000001 )
( underbid~l1 opposite~l1 overbid~l1 x00000001 )
( overbid~l1 opposite~l1 underbid~l1 x00000001 )
( underbid~l1 opposite~l1 outbid~l1 x00000001 )
( outbid~l1 opposite~l1 underbid~l1 x00000001 )
( withdraw~l1 opposite~l1 deposit~l1 x00000001 )
( deposit~l1 opposite~l1 withdraw~l1 x00000001 )
( pay_cash~l1 opposite~l1 charge~l1 x00000001 )
( charge~l1 opposite~l1 pay_cash~l1 x00000001 )
( undercharge~l1 opposite~l1 overcharge~l1 x00000001 )
( overcharge~l1 opposite~l1 undercharge~l1 x00000001 )
( mark_down~l1 opposite~l1 mark_up~l1 x00000001 )
( mark_up~l1 opposite~l1 mark_down~l1 x00000001 )
( understock~l1 opposite~l1 overstock~l1 x00000001 )
( overstock~l1 opposite~l1 understock~l1 x00000001 )
( lend~l1 opposite~l1 borrow~l1 x00000001 )
( borrow~l1 opposite~l1 lend~l1 x00000001 )
( unmuzzle~l1 opposite~l1 muzzle~l1 x00000001 )
( muzzle~l1 opposite~l1 unmuzzle~l1 x00000001 )
( kern~l1 opposite~l1 kern~l1 x00000001 )
( refrain~l1 opposite~l1 move~l1 x00000001 )
( move~l1 opposite~l1 refrain~l1 x00000001 )
( take_office~l1 opposite~l1 leave_office~l1 x00000001 )
( leave_office~l1 opposite~l1 take_office~l1 x00000001 )
( enthrone~l1 opposite~l1 disinvest~l1 x00000001 )
( disinvest~l1 opposite~l1 enthrone~l1 x00000001 )
( dethrone~l1 opposite~l1 enthrone~l1 x00000001 )
( enthrone~l1 opposite~l1 dethrone~l1 x00000001 )
( kick_downstairs~l1 opposite~l1 kick_upstairs~l1 x00000001 )
( kick_upstairs~l1 opposite~l1 kick_downstairs~l1 x00000001 )
( engage~l1 opposite~l1 give_the_sack~l1 x00000001 )
( give_the_sack~l1 opposite~l1 engage~l1 x00000001 )
( come_before~l1 opposite~l1 come_after~l1 x00000001 )
( come_after~l1 opposite~l1 come_before~l1 x00000001 )
( stagnate~l1 opposite~l1 work~l1 x00000001 )
( work~l1 opposite~l1 stagnate~l1 x00000001 )
( confine~l1 opposite~l1 liberate~l1 x00000001 )
( liberate~l1 opposite~l1 confine~l1 x00000001 )
( prevent~l1 opposite~l1 permit~l1 x00000001 )
( permit~l1 opposite~l1 prevent~l1 x00000001 )
( close_down~l1 opposite~l1 open_up~l1 x00000001 )
( open_up~l1 opposite~l1 close_down~l1 x00000001 )
( get_rid_of~l1 opposite~l1 establish~l1 x00000001 )
( establish~l1 opposite~l1 get_rid_of~l1 x00000001 )
( disorganize~l1 opposite~l1 organize~l1 x00000001 )
( organize~l1 opposite~l1 disorganize~l1 x00000001 )
( derecognize~l1 opposite~l1 license~l1 x00000001 )
( license~l1 opposite~l1 derecognize~l1 x00000001 )
( include~l1 opposite~l1 keep_out~l1 x00000001 )
( keep_out~l1 opposite~l1 include~l1 x00000001 )
( disrespect~l1 opposite~l1 abide_by~l1 x00000001 )
( abide_by~l1 opposite~l1 disrespect~l1 x00000001 )
( patronize~l1 opposite~l1 boycott~l1 x00000001 )
( boycott~l1 opposite~l1 patronize~l1 x00000001 )
( unite~l1 opposite~l1 split_up~l1 x00000001 )
( split_up~l1 opposite~l1 unite~l1 x00000001 )
( enfranchise~l1 opposite~l1 disenfranchise~l1 x00000001 )
( disenfranchise~l1 opposite~l1 enfranchise~l1 x00000001 )
( formalize~l1 opposite~l1 invalidate~l1 x00000001 )
( invalidate~l1 opposite~l1 formalize~l1 x00000001 )
( recall~l1 opposite~l1 supply~l1 x00000001 )
( supply~l1 opposite~l1 recall~l1 x00000001 )
( decriminalize~l1 opposite~l1 criminalize~l1 x00000001 )
( criminalize~l1 opposite~l1 decriminalize~l1 x00000001 )
( segregate~l1 opposite~l1 desegregate~l1 x00000001 )
( desegregate~l1 opposite~l1 segregate~l1 x00000001 )
( repatriate~l1 opposite~l1 expatriate~l1 x00000001 )
( expatriate~l1 opposite~l1 repatriate~l1 x00000001 )
( turn_down~l1 opposite~l1 allow_in~l1 x00000001 )
( allow_in~l1 opposite~l1 turn_down~l1 x00000001 )
( declassify~l1 opposite~l1 classify~l1 x00000001 )
( classify~l1 opposite~l1 declassify~l1 x00000001 )
( derestrict~l1 opposite~l1 restrict~l1 x00000001 )
( restrict~l1 opposite~l1 derestrict~l1 x00000001 )
( deregulate~l1 opposite~l1 regularize~l1 x00000001 )
( regularize~l1 opposite~l1 deregulate~l1 x00000001 )
( compensate~l1 opposite~l1 wrong~l1 x00000001 )
( wrong~l1 opposite~l1 compensate~l1 x00000001 )
( comport~l1 opposite~l1 misconduct~l1 x00000001 )
( misconduct~l1 opposite~l1 comport~l1 x00000001 )
( fail~l1 opposite~l1 negociate~l1 x00000001 )
( negociate~l1 opposite~l1 fail~l1 x00000001 )
( make_it~l1 opposite~l1 flush_it~l1 x00000001 )
( flush_it~l1 opposite~l1 make_it~l1 x00000001 )
( pass~l1 opposite~l1 fail~l1 x00000001 )
( fail~l1 opposite~l1 pass~l1 x00000001 )
( go_wrong~l1 opposite~l1 bring_home_the_bacon~l1 x00000001 )
( bring_home_the_bacon~l1 opposite~l1 go_wrong~l1 x00000001 )
( disobey~l1 opposite~l1 obey~l1 x00000001 )
( obey~l1 opposite~l1 disobey~l1 x00000001 )
( relieve~l1 opposite~l1 implement~l1 x00000001 )
( implement~l1 opposite~l1 relieve~l1 x00000001 )
( rehabilitate~l1 opposite~l1 purge~l1 x00000001 )
( purge~l1 opposite~l1 rehabilitate~l1 x00000001 )
( observe~l1 opposite~l1 transgress~l1 x00000001 )
( transgress~l1 opposite~l1 observe~l1 x00000001 )
( represent~l1 opposite~l1 prosecute~l1 x00000001 )
( prosecute~l1 opposite~l1 represent~l1 x00000001 )
( decolonize~l1 opposite~l1 colonize~l1 x00000001 )
( colonize~l1 opposite~l1 decolonize~l1 x00000001 )
( terminate~l1 opposite~l1 begin~l1 x00000001 )
( begin~l1 opposite~l1 terminate~l1 x00000001 )
( miss~l1 opposite~l1 attend~l1 x00000001 )
( attend~l1 opposite~l1 miss~l1 x00000001 )
( succumb~l1 opposite~l1 pull_through~l1 x00000001 )
( pull_through~l1 opposite~l1 succumb~l1 x00000001 )
( eliminate~l1 opposite~l1 necessitate~l1 x00000001 )
( necessitate~l1 opposite~l1 eliminate~l1 x00000001 )
( miss~l1 opposite~l1 feature~l1 x00000001 )
( feature~l1 opposite~l1 miss~l1 x00000001 )
( exclude~l0 opposite~l1 include~l1 x00000001 )
( include~l1 opposite~l1 exclude~l0 x00000001 )
( disaccord~l1 opposite~l1 correspond~l1 x00000001 )
( correspond~l1 opposite~l1 disaccord~l1 x00000001 )
( conform~l1 opposite~l1 deviate~l1 x00000001 )
( deviate~l1 opposite~l1 conform~l1 x00000001 )
( differ~l1 opposite~l1 equal~l1 x00000001 )
( equal~l1 opposite~l1 differ~l1 x00000001 )
( go_out~l1 opposite~l1 come_in~l1 x00000001 )
( come_in~l1 opposite~l1 go_out~l1 x00000001 )
( conform_to~l1 opposite~l1 go_against~l1 x00000001 )
( go_against~l1 opposite~l1 conform_to~l1 x00000001 )
( live_up_to~l1 opposite~l1 fall_short_of~l1 x00000001 )
( fall_short_of~l1 opposite~l1 live_up_to~l1 x00000001 )
( unbalance~l1 opposite~l1 equilibrate~l1 x00000001 )
( equilibrate~l1 opposite~l1 unbalance~l1 x00000001 )
( discontinue~l1 opposite~l1 continue~l1 x00000001 )
( continue~l1 opposite~l1 discontinue~l1 x00000001 )
( relent~l1 opposite~l1 remain_firm~l1 x00000001 )
( remain_firm~l1 opposite~l1 relent~l1 x00000001 )
( resist~l1 opposite~l1 lend_oneself~l1 x00000001 )
( lend_oneself~l1 opposite~l1 resist~l1 x00000001 )
( postdate~l1 opposite~l1 antecede~l1 x00000001 )
( antecede~l1 opposite~l1 postdate~l1 x00000001 )
( extinguish~l1 opposite~l1 ignite~l1 x00000001 )
( ignite~l1 opposite~l1 extinguish~l1 x00000001 )
( give_out~l1 opposite~l1 take_in~l1 x00000001 )
( take_in~l1 opposite~l1 give_out~l1 x00000001 )
( clear_up~l1 opposite~l1 overcast~l1 x00000001 )
( overcast~l1 opposite~l1 clear_up~l1 x00000001 )
( unkindly~l1 opposite~l1 kindly~l1 x00000001 )
( kindly~l1 opposite~l1 unkindly~l1 x00000001 )
( insignificantly~l1 opposite~l1 significantly~l1 x00000001 )
( significantly~l1 opposite~l1 insignificantly~l1 x00000001 )
( completely~l1 opposite~l1 partially~l1 x00000001 )
( partially~l1 opposite~l1 completely~l1 x00000001 )
( imperfectly~l1 opposite~l1 perfectly~l1 x00000001 )
( perfectly~l1 opposite~l1 imperfectly~l1 x00000001 )
( poorly~l1 opposite~l1 well~l1 x00000001 )
( well~l1 opposite~l1 poorly~l1 x00000001 )
( badly~l1 opposite~l1 well~l1 x00000001 )
( well~l1 opposite~l1 badly~l1 x00000001 )
( disadvantageously~l1 opposite~l1 advantageously~l1 x00000001 )
( advantageously~l1 opposite~l1 disadvantageously~l1 x00000001 )
( unsatisfactorily~l1 opposite~l1 satisfactorily~l1 x00000001 )
( satisfactorily~l1 opposite~l1 unsatisfactorily~l1 x00000001 )
( never~l1 opposite~l1 always~l1 x00000001 )
( always~l1 opposite~l1 never~l1 x00000001 )
( unconventionally~l1 opposite~l1 conventionally~l1 x00000001 )
( conventionally~l1 opposite~l1 unconventionally~l1 x00000001 )
( no_longer~l1 opposite~l1 still~l1 x00000001 )
( still~l1 opposite~l1 no_longer~l1 x00000001 )
( rarely~l1 opposite~l1 frequently~l1 x00000001 )
( frequently~l1 opposite~l1 rarely~l1 x00000001 )
( infrequently~l1 opposite~l1 frequently~l1 x00000001 )
( frequently~l1 opposite~l1 infrequently~l1 x00000001 )
( unreasonably~l1 opposite~l1 reasonably~l1 x00000001 )
( reasonably~l1 opposite~l1 unreasonably~l1 x00000001 )
( unnaturally~l1 opposite~l1 naturally~l1 x00000001 )
( naturally~l1 opposite~l1 unnaturally~l1 x00000001 )
( intentionally~l1 opposite~l1 circumstantially~l1 x00000001 )
( circumstantially~l1 opposite~l1 intentionally~l1 x00000001 )
( in_the_main~l1 opposite~l1 specifically~l1 x00000001 )
( specifically~l1 opposite~l1 in_the_main~l1 x00000001 )
( unfortunately~l1 opposite~l1 as_luck_would_have_it~l1 x00000001 )
( as_luck_would_have_it~l1 opposite~l1 unfortunately~l1 x00000001 )
( unhappily~l1 opposite~l1 happily~l1 x00000001 )
( happily~l1 opposite~l1 unhappily~l1 x00000001 )
( unhappily~l1 opposite~l1 mirthfully~l1 x00000001 )
( mirthfully~l1 opposite~l1 unhappily~l1 x00000001 )
( by_machine~l1 opposite~l1 by_hand~l1 x00000001 )
( by_hand~l1 opposite~l1 by_machine~l1 x00000001 )
( unacceptably~l1 opposite~l1 acceptably~l1 x00000001 )
( acceptably~l1 opposite~l1 unacceptably~l1 x00000001 )
( maladroitly~l1 opposite~l1 adroitly~l1 x00000001 )
( adroitly~l1 opposite~l1 maladroitly~l1 x00000001 )
( not_by_a_blame_sight~l1 opposite~l1 by_all_means~l1 x00000001 )
( by_all_means~l1 opposite~l1 not_by_a_blame_sight~l1 x00000001 )
( indirectly~l1 opposite~l1 directly~l1 x00000001 )
( directly~l1 opposite~l1 indirectly~l1 x00000001 )
( unintentionally~l1 opposite~l1 intentionally~l1 x00000001 )
( intentionally~l1 opposite~l1 unintentionally~l1 x00000001 )
( quietly~l1 opposite~l1 loudly~l1 x00000001 )
( loudly~l1 opposite~l1 quietly~l1 x00000001 )
( forward~l1 opposite~l1 backward~l1 x00000001 )
( backward~l1 opposite~l1 forward~l1 x00000001 )
( frontwards~l1 opposite~l1 backwards~l1 x00000001 )
( backwards~l1 opposite~l1 frontwards~l1 x00000001 )
( overtly~l1 opposite~l1 covertly~l1 x00000001 )
( covertly~l1 opposite~l1 overtly~l1 x00000001 )
( passively~l1 opposite~l1 actively~l1 x00000001 )
( actively~l1 opposite~l1 passively~l1 x00000001 )
( above~l1 opposite~l1 below~l1 x00000001 )
( below~l1 opposite~l1 above~l1 x00000001 )
( in_a_higher_place~l1 opposite~l1 at_a_lower_place~l1 x00000001 )
( at_a_lower_place~l1 opposite~l1 in_a_higher_place~l1 x00000001 )
( sanely~l1 opposite~l1 dementedly~l1 x00000001 )
( dementedly~l1 opposite~l1 sanely~l1 x00000001 )
( multiply~l1 opposite~l1 singly~l1 x00000001 )
( singly~l1 opposite~l1 multiply~l1 x00000001 )
( theoretically~l1 opposite~l1 through_empirical_observation~l1 x00000001 )
( through_empirical_observation~l1 opposite~l1 theoretically~l1 x00000001 )
( tardily~l1 opposite~l1 chop-chop~l1 x00000001 )
( chop-chop~l1 opposite~l1 tardily~l1 x00000001 )
( impermissibly~l1 opposite~l1 permissibly~l1 x00000001 )
( permissibly~l1 opposite~l1 impermissibly~l1 x00000001 )
( temporarily~l1 opposite~l1 permanently~l1 x00000001 )
( permanently~l1 opposite~l1 temporarily~l1 x00000001 )
( linearly~l1 opposite~l1 geometrically~l1 x00000001 )
( geometrically~l1 opposite~l1 linearly~l1 x00000001 )
( inconclusively~l1 opposite~l1 once_and_for_all~l1 x00000001 )
( once_and_for_all~l1 opposite~l1 inconclusively~l1 x00000001 )
( on_a_higher_floor~l1 opposite~l1 on_a_lower_floor~l1 x00000001 )
( on_a_lower_floor~l1 opposite~l1 on_a_higher_floor~l1 x00000001 )
( against_the_wind~l1 opposite~l1 downwind~l1 x00000001 )
( downwind~l1 opposite~l1 against_the_wind~l1 x00000001 )
( upwardly~l1 opposite~l1 downwardly~l1 x00000001 )
( downwardly~l1 opposite~l1 upwardly~l1 x00000001 )
( up~l1 opposite~l1 down~l1 x00000001 )
( down~l1 opposite~l1 up~l1 x00000001 )
( downstream~l1 opposite~l1 upstream~l1 x00000001 )
( upstream~l1 opposite~l1 downstream~l1 x00000001 )
( to_a_lesser_extent~l1 opposite~l1 to_a_greater_extent~l1 x00000001 )
( to_a_greater_extent~l1 opposite~l1 to_a_lesser_extent~l1 x00000001 )
( less~l1 opposite~l1 more~l1 x00000001 )
( more~l1 opposite~l1 less~l1 x00000001 )
( belatedly~l1 opposite~l1 ahead_of_time~l1 x00000001 )
( ahead_of_time~l1 opposite~l1 belatedly~l1 x00000001 )
( at_the_most~l1 opposite~l1 at_the_least~l1 x00000001 )
( at_the_least~l1 opposite~l1 at_the_most~l1 x00000001 )
( at_the_worst~l1 opposite~l1 at_the_best~l1 x00000001 )
( at_the_best~l1 opposite~l1 at_the_worst~l1 x00000001 )
( irresponsibly~l1 opposite~l1 responsibly~l1 x00000001 )
( responsibly~l1 opposite~l1 irresponsibly~l1 x00000001 )
( outstandingly~l1 opposite~l1 unremarkably~l1 x00000001 )
( unremarkably~l1 opposite~l1 outstandingly~l1 x00000001 )
( in_that_location~l1 opposite~l1 here~l1 x00000001 )
( here~l1 opposite~l1 in_that_location~l1 x00000001 )
( thither~l1 opposite~l1 hither~l1 x00000001 )
( hither~l1 opposite~l1 thither~l1 x00000001 )
( out_of_doors~l1 opposite~l1 indoors~l1 x00000001 )
( indoors~l1 opposite~l1 out_of_doors~l1 x00000001 )
( outside~l1 opposite~l1 inside~l1 x00000001 )
( inside~l1 opposite~l1 outside~l1 x00000001 )
( to_the_lowest_degree~l1 opposite~l1 to_the_highest_degree~l1 x00000001 )
( to_the_highest_degree~l1 opposite~l1 to_the_lowest_degree~l1 x00000001 )
( inorganically~l1 opposite~l1 organically~l1 x00000001 )
( organically~l1 opposite~l1 inorganically~l1 x00000001 )
( unofficially~l1 opposite~l1 officially~l1 x00000001 )
( officially~l1 opposite~l1 unofficially~l1 x00000001 )
( peripherally~l1 opposite~l1 centrally~l1 x00000001 )
( centrally~l1 opposite~l1 peripherally~l1 x00000001 )
( on_the_one_hand~l1 opposite~l1 on_the_other_hand~l1 x00000001 )
( on_the_other_hand~l1 opposite~l1 on_the_one_hand~l1 x00000001 )
( unsuccessfully~l1 opposite~l1 successfully~l1 x00000001 )
( successfully~l1 opposite~l1 unsuccessfully~l1 x00000001 )
( unsystematically~l1 opposite~l1 systematically~l1 x00000001 )
( systematically~l1 opposite~l1 unsystematically~l1 x00000001 )
( inconsistently~l1 opposite~l1 systematically~l1 x00000001 )
( systematically~l1 opposite~l1 inconsistently~l1 x00000001 )
( unconstitutionally~l1 opposite~l1 constitutionally~l1 x00000001 )
( constitutionally~l1 opposite~l1 unconstitutionally~l1 x00000001 )
( undemocratically~l1 opposite~l1 democratically~l1 x00000001 )
( democratically~l1 opposite~l1 undemocratically~l1 x00000001 )
( untypically~l1 opposite~l1 typically~l1 x00000001 )
( typically~l1 opposite~l1 untypically~l1 x00000001 )
( in_the_first_place~l1 opposite~l1 secondarily~l1 x00000001 )
( secondarily~l1 opposite~l1 in_the_first_place~l1 x00000001 )
( undramatically~l1 opposite~l1 dramatically~l1 x00000001 )
( dramatically~l1 opposite~l1 undramatically~l1 x00000001 )
( inappropriately~l1 opposite~l1 appropriately~l1 x00000001 )
( appropriately~l1 opposite~l1 inappropriately~l1 x00000001 )
( onshore~l1 opposite~l1 offshore~l1 x00000001 )
( offshore~l1 opposite~l1 onshore~l1 x00000001 )
( by_artificial_means~l1 opposite~l1 naturally~l1 x00000001 )
( naturally~l1 opposite~l1 by_artificial_means~l1 x00000001 )
( chronically~l1 opposite~l1 acutely~l1 x00000001 )
( acutely~l1 opposite~l1 chronically~l1 x00000001 )
( insufficiently~l1 opposite~l1 sufficiently~l1 x00000001 )
( sufficiently~l1 opposite~l1 insufficiently~l1 x00000001 )
( hesitatingly~l1 opposite~l1 unhesitatingly~l1 x00000001 )
( unhesitatingly~l1 opposite~l1 hesitatingly~l1 x00000001 )
( beyond_control~l1 opposite~l1 in_hand~l1 x00000001 )
( in_hand~l1 opposite~l1 beyond_control~l1 x00000001 )
( inadvertently~l1 opposite~l1 advertently~l1 x00000001 )
( advertently~l1 opposite~l1 inadvertently~l1 x00000001 )
( unmindfully~l1 opposite~l1 advertently~l1 x00000001 )
( advertently~l1 opposite~l1 unmindfully~l1 x00000001 )
( legitimately~l1 opposite~l1 illegally~l1 x00000001 )
( illegally~l1 opposite~l1 legitimately~l1 x00000001 )
( uncomfortably~l1 opposite~l1 comfortably~l1 x00000001 )
( comfortably~l1 opposite~l1 uncomfortably~l1 x00000001 )
( in_private~l1 opposite~l1 publically~l1 x00000001 )
( publically~l1 opposite~l1 in_private~l1 x00000001 )
( publicly~l1 opposite~l1 privately~l1 x00000001 )
( privately~l1 opposite~l1 publicly~l1 x00000001 )
( aborad~l1 opposite~l1 orad~l1 x00000001 )
( orad~l1 opposite~l1 aborad~l1 x00000001 )
( patiently~l1 opposite~l1 impatiently~l1 x00000001 )
( impatiently~l1 opposite~l1 patiently~l1 x00000001 )
( steadily~l1 opposite~l1 falteringly~l1 x00000001 )
( falteringly~l1 opposite~l1 steadily~l1 x00000001 )
( unsymmetrically~l1 opposite~l1 symmetrically~l1 x00000001 )
( symmetrically~l1 opposite~l1 unsymmetrically~l1 x00000001 )
( lightly~l1 opposite~l1 intemperately~l1 x00000001 )
( intemperately~l1 opposite~l1 lightly~l1 x00000001 )
( weakly~l1 opposite~l1 strongly~l1 x00000001 )
( strongly~l1 opposite~l1 weakly~l1 x00000001 )
( sparingly~l1 opposite~l1 amply~l1 x00000001 )
( amply~l1 opposite~l1 sparingly~l1 x00000001 )
( gracelessly~l1 opposite~l1 gracefully~l1 x00000001 )
( gracefully~l1 opposite~l1 gracelessly~l1 x00000001 )
( inconsiderately~l1 opposite~l1 considerately~l1 x00000001 )
( considerately~l1 opposite~l1 inconsiderately~l1 x00000001 )
( unhelpfully~l1 opposite~l1 helpfully~l1 x00000001 )
( helpfully~l1 opposite~l1 unhelpfully~l1 x00000001 )
( irrationally~l1 opposite~l1 rationally~l1 x00000001 )
( rationally~l1 opposite~l1 irrationally~l1 x00000001 )
( uncritically~l1 opposite~l1 critically~l1 x00000001 )
( critically~l1 opposite~l1 uncritically~l1 x00000001 )
( displaying_incompetence~l1 opposite~l1 competently~l1 x00000001 )
( competently~l1 opposite~l1 displaying_incompetence~l1 x00000001 )
( unemotionally~l1 opposite~l1 emotionally~l1 x00000001 )
( emotionally~l1 opposite~l1 unemotionally~l1 x00000001 )
( formally~l1 opposite~l1 informally~l1 x00000001 )
( informally~l1 opposite~l1 formally~l1 x00000001 )
( downtown~l1 opposite~l1 uptown~l1 x00000001 )
( uptown~l1 opposite~l1 downtown~l1 x00000001 )
( unenthusiastically~l1 opposite~l1 enthusiastically~l1 x00000001 )
( enthusiastically~l1 opposite~l1 unenthusiastically~l1 x00000001 )
( finely~l1 opposite~l1 coarsely~l1 x00000001 )
( coarsely~l1 opposite~l1 finely~l1 x00000001 )
( unsympathetically~l1 opposite~l1 sympathetically~l1 x00000001 )
( sympathetically~l1 opposite~l1 unsympathetically~l1 x00000001 )
( unconvincingly~l1 opposite~l1 convincingly~l1 x00000001 )
( convincingly~l1 opposite~l1 unconvincingly~l1 x00000001 )
( ungraciously~l1 opposite~l1 graciously~l1 x00000001 )
( graciously~l1 opposite~l1 ungraciously~l1 x00000001 )
( on_an_irregular_basis~l1 opposite~l1 on_a_regular_basis~l1 x00000001 )
( on_a_regular_basis~l1 opposite~l1 on_an_irregular_basis~l1 x00000001 )
( in_good_order~l1 opposite~l1 improperly~l1 x00000001 )
( improperly~l1 opposite~l1 in_good_order~l1 x00000001 )
( inconveniently~l1 opposite~l1 conveniently~l1 x00000001 )
( conveniently~l1 opposite~l1 inconveniently~l1 x00000001 )
( abstractly~l1 opposite~l1 concretely~l1 x00000001 )
( concretely~l1 opposite~l1 abstractly~l1 x00000001 )
( dauntlessly~l1 opposite~l1 fearfully~l1 x00000001 )
( fearfully~l1 opposite~l1 dauntlessly~l1 x00000001 )
( hopelessly~l1 opposite~l1 hopefully~l1 x00000001 )
( hopefully~l1 opposite~l1 hopelessly~l1 x00000001 )
( foolishly~l1 opposite~l1 wisely~l1 x00000001 )
( wisely~l1 opposite~l1 foolishly~l1 x00000001 )
( unintelligently~l1 opposite~l1 intelligently~l1 x00000001 )
( intelligently~l1 opposite~l1 unintelligently~l1 x00000001 )
( ununderstandably~l1 opposite~l1 understandably~l1 x00000001 )
( understandably~l1 opposite~l1 ununderstandably~l1 x00000001 )
( undiplomatically~l1 opposite~l1 diplomatically~l1 x00000001 )
( diplomatically~l1 opposite~l1 undiplomatically~l1 x00000001 )
( incorrectly~l1 opposite~l1 correctly~l1 x00000001 )
( correctly~l1 opposite~l1 incorrectly~l1 x00000001 )
( inaccurately~l1 opposite~l1 accurately~l1 x00000001 )
( accurately~l1 opposite~l1 inaccurately~l1 x00000001 )
( unjustly~l1 opposite~l1 justifiedly~l1 x00000001 )
( justifiedly~l1 opposite~l1 unjustly~l1 x00000001 )
( unhurriedly~l1 opposite~l1 hurriedly~l1 x00000001 )
( hurriedly~l1 opposite~l1 unhurriedly~l1 x00000001 )
( monaurally~l1 opposite~l1 to_both_ears~l1 x00000001 )
( to_both_ears~l1 opposite~l1 monaurally~l1 x00000001 )
( unimaginatively~l1 opposite~l1 imaginatively~l1 x00000001 )
( imaginatively~l1 opposite~l1 unimaginatively~l1 x00000001 )
( ashamedly~l1 opposite~l1 unashamedly~l1 x00000001 )
( unashamedly~l1 opposite~l1 ashamedly~l1 x00000001 )
( unimpressively~l1 opposite~l1 impressively~l1 x00000001 )
( impressively~l1 opposite~l1 unimpressively~l1 x00000001 )
( unproductively~l1 opposite~l1 productively~l1 x00000001 )
( productively~l1 opposite~l1 unproductively~l1 x00000001 )
( amateurishly~l1 opposite~l1 like_an_expert~l1 x00000001 )
( like_an_expert~l1 opposite~l1 amateurishly~l1 x00000001 )
( uninterestingly~l1 opposite~l1 interestingly~l1 x00000001 )
( interestingly~l1 opposite~l1 uninterestingly~l1 x00000001 )
( immoderately~l1 opposite~l1 moderately~l1 x00000001 )
( moderately~l1 opposite~l1 immoderately~l1 x00000001 )
( unrealistically~l1 opposite~l1 realistically~l1 x00000001 )
( realistically~l1 opposite~l1 unrealistically~l1 x00000001 )
( thoughtlessly~l1 opposite~l1 thoughtfully~l1 x00000001 )
( thoughtfully~l1 opposite~l1 thoughtlessly~l1 x00000001 )
( inauspiciously~l1 opposite~l1 auspiciously~l1 x00000001 )
( auspiciously~l1 opposite~l1 inauspiciously~l1 x00000001 )
( discourteously~l1 opposite~l1 courteously~l1 x00000001 )
( courteously~l1 opposite~l1 discourteously~l1 x00000001 )
( disagreeably~l1 opposite~l1 pleasantly~l1 x00000001 )
( pleasantly~l1 opposite~l1 disagreeably~l1 x00000001 )
( unpleasantly~l1 opposite~l1 pleasantly~l1 x00000001 )
( pleasantly~l1 opposite~l1 unpleasantly~l1 x00000001 )
( unambiguously~l1 opposite~l1 ambiguously~l1 x00000001 )
( ambiguously~l1 opposite~l1 unambiguously~l1 x00000001 )
( ceremoniously~l1 opposite~l1 unceremoniously~l1 x00000001 )
( unceremoniously~l1 opposite~l1 ceremoniously~l1 x00000001 )
( broadly_speaking~l1 opposite~l1 narrowly~l1 x00000001 )
( narrowly~l1 opposite~l1 broadly_speaking~l1 x00000001 )
( unfaithfully~l1 opposite~l1 faithfully~l1 x00000001 )
( faithfully~l1 opposite~l1 unfaithfully~l1 x00000001 )
( nonviolently~l1 opposite~l1 violently~l1 x00000001 )
( violently~l1 opposite~l1 nonviolently~l1 x00000001 )
( finitely~l1 opposite~l1 infinitely~l1 x00000001 )
( infinitely~l1 opposite~l1 finitely~l1 x00000001 )
( small~l1 opposite~l1 big~l1 x00000001 )
( big~l1 opposite~l1 small~l1 x00000001 )
( unwarily~l1 opposite~l1 warily~l1 x00000001 )
( warily~l1 opposite~l1 unwarily~l1 x00000001 )
( quietly~l1 opposite~l1 noisily~l1 x00000001 )
( noisily~l1 opposite~l1 quietly~l1 x00000001 )
( unquietly~l1 opposite~l1 quietly~l1 x00000001 )
( quietly~l1 opposite~l1 unquietly~l1 x00000001 )
( inwardly~l1 opposite~l1 outwardly~l1 x00000001 )
( outwardly~l1 opposite~l1 inwardly~l1 x00000001 )
( unfavourably~l1 opposite~l1 favourably~l1 x00000001 )
( favourably~l1 opposite~l1 unfavourably~l1 x00000001 )
( cheerlessly~l1 opposite~l1 cheerfully~l1 x00000001 )
( cheerfully~l1 opposite~l1 cheerlessly~l1 x00000001 )
( involuntarily~l1 opposite~l1 voluntarily~l1 x00000001 )
( voluntarily~l1 opposite~l1 involuntarily~l1 x00000001 )
( inefficiently~l1 opposite~l1 expeditiously~l1 x00000001 )
( expeditiously~l1 opposite~l1 inefficiently~l1 x00000001 )
( inadvertently~l1 opposite~l1 wittingly~l1 x00000001 )
( wittingly~l1 opposite~l1 inadvertently~l1 x00000001 )
( unjustifiably~l1 opposite~l1 justifiably~l1 x00000001 )
( justifiably~l1 opposite~l1 unjustifiably~l1 x00000001 )
( immodestly~l1 opposite~l1 modestly~l1 x00000001 )
( modestly~l1 opposite~l1 immodestly~l1 x00000001 )
( irresolutely~l1 opposite~l1 resolutely~l1 x00000001 )
( resolutely~l1 opposite~l1 irresolutely~l1 x00000001 )
( unattractively~l1 opposite~l1 attractively~l1 x00000001 )
( attractively~l1 opposite~l1 unattractively~l1 x00000001 )
( unconsciously~l1 opposite~l1 consciously~l1 x00000001 )
( consciously~l1 opposite~l1 unconsciously~l1 x00000001 )
( noncompetitively~l1 opposite~l1 competitively~l1 x00000001 )
( competitively~l1 opposite~l1 noncompetitively~l1 x00000001 )
( unbelievably~l1 opposite~l1 believably~l1 x00000001 )
( believably~l1 opposite~l1 unbelievably~l1 x00000001 )
( indecently~l1 opposite~l1 decently~l1 x00000001 )
( decently~l1 opposite~l1 indecently~l1 x00000001 )
( uncharacteristically~l1 opposite~l1 characteristically~l1 x00000001 )
( characteristically~l1 opposite~l1 uncharacteristically~l1 x00000001 )
( externally~l1 opposite~l1 internally~l1 x00000001 )
( internally~l1 opposite~l1 externally~l1 x00000001 )
( a_priori~l1 opposite~l1 a_posteriori~l1 x00000001 )
( a_posteriori~l1 opposite~l1 a_priori~l1 x00000001 )
( unlawfully~l1 opposite~l1 lawfully~l1 x00000001 )
( lawfully~l1 opposite~l1 unlawfully~l1 x00000001 )
( half-time~l1 opposite~l1 full-time~l1 x00000001 )
( full-time~l1 opposite~l1 half-time~l1 x00000001 )
( multilaterally~l1 opposite~l1 unilaterally~l1 x00000001 )
( unilaterally~l1 opposite~l1 multilaterally~l1 x00000001 )
( clockwise~l1 opposite~l1 counterclockwise~l1 x00000001 )
( counterclockwise~l1 opposite~l1 clockwise~l1 x00000001 )
( outwards~l1 opposite~l1 inwards~l1 x00000001 )
( inwards~l1 opposite~l1 outwards~l1 x00000001 )
( onstage~l1 opposite~l1 offstage~l1 x00000001 )
( offstage~l1 opposite~l1 onstage~l1 x00000001 )
( unappealingly~l1 opposite~l1 appealingly~l1 x00000001 )
( appealingly~l1 opposite~l1 unappealingly~l1 x00000001 )
( disapprovingly~l1 opposite~l1 approvingly~l1 x00000001 )
( approvingly~l1 opposite~l1 disapprovingly~l1 x00000001 )
( unambitiously~l1 opposite~l1 determinedly~l1 x00000001 )
( determinedly~l1 opposite~l1 unambitiously~l1 x00000001 )
( downstage~l1 opposite~l1 upstage~l1 x00000001 )
( upstage~l1 opposite~l1 downstage~l1 x00000001 )
( unassertively~l1 opposite~l1 assertively~l1 x00000001 )
( assertively~l1 opposite~l1 unassertively~l1 x00000001 )
( inarticulately~l1 opposite~l1 articulately~l1 x00000001 )
( articulately~l1 opposite~l1 inarticulately~l1 x00000001 )
( inaudibly~l1 opposite~l1 audibly~l1 x00000001 )
( audibly~l1 opposite~l1 inaudibly~l1 x00000001 )
( bloodily~l1 opposite~l1 bloodlessly~l1 x00000001 )
( bloodlessly~l1 opposite~l1 bloodily~l1 x00000001 )
( unappreciatively~l1 opposite~l1 appreciatively~l1 x00000001 )
( appreciatively~l1 opposite~l1 unappreciatively~l1 x00000001 )
( unseasonably~l1 opposite~l1 seasonably~l1 x00000001 )
( seasonably~l1 opposite~l1 unseasonably~l1 x00000001 )
( forward~l1 opposite~l1 astern~l1 x00000001 )
( astern~l1 opposite~l1 forward~l1 x00000001 )
( incautiously~l1 opposite~l1 cautiously~l1 x00000001 )
( cautiously~l1 opposite~l1 incautiously~l1 x00000001 )
( unchivalrously~l1 opposite~l1 chivalrously~l1 x00000001 )
( chivalrously~l1 opposite~l1 unchivalrously~l1 x00000001 )
( below_the_belt~l1 opposite~l1 fairly~l1 x00000001 )
( fairly~l1 opposite~l1 below_the_belt~l1 x00000001 )
( incoherently~l1 opposite~l1 coherently~l1 x00000001 )
( coherently~l1 opposite~l1 incoherently~l1 x00000001 )
( incompatibly~l1 opposite~l1 compatibly~l1 x00000001 )
( compatibly~l1 opposite~l1 incompatibly~l1 x00000001 )
( complainingly~l1 opposite~l1 uncomplainingly~l1 x00000001 )
( uncomplainingly~l1 opposite~l1 complainingly~l1 x00000001 )
( noncomprehensively~l1 opposite~l1 comprehensively~l1 x00000001 )
( comprehensively~l1 opposite~l1 noncomprehensively~l1 x00000001 )
( unconditionally~l1 opposite~l1 conditionally~l1 x00000001 )
( conditionally~l1 opposite~l1 unconditionally~l1 x00000001 )
( inconsequentially~l1 opposite~l1 consequentially~l1 x00000001 )
( consequentially~l1 opposite~l1 inconsequentially~l1 x00000001 )
( credulously~l1 opposite~l1 disbelievingly~l1 x00000001 )
( disbelievingly~l1 opposite~l1 credulously~l1 x00000001 )
( indecisively~l1 opposite~l1 decisively~l1 x00000001 )
( decisively~l1 opposite~l1 indecisively~l1 x00000001 )
( thinly~l1 opposite~l1 densely~l1 x00000001 )
( densely~l1 opposite~l1 thinly~l1 x00000001 )
( impossibly~l1 opposite~l1 possibly~l1 x00000001 )
( possibly~l1 opposite~l1 impossibly~l1 x00000001 )
( undeservedly~l1 opposite~l1 deservedly~l1 x00000001 )
( deservedly~l1 opposite~l1 undeservedly~l1 x00000001 )
( uncontroversially~l1 opposite~l1 controversially~l1 x00000001 )
( controversially~l1 opposite~l1 uncontroversially~l1 x00000001 )
( indecorously~l1 opposite~l1 decorously~l1 x00000001 )
( decorously~l1 opposite~l1 indecorously~l1 x00000001 )
( unwillingly~l1 opposite~l1 volitionally~l1 x00000001 )
( volitionally~l1 opposite~l1 unwillingly~l1 x00000001 )
( offensively~l1 opposite~l1 defensively~l1 x00000001 )
( defensively~l1 opposite~l1 offensively~l1 x00000001 )
( offensively~l1 opposite~l1 inoffensively~l1 x00000001 )
( inoffensively~l1 opposite~l1 offensively~l1 x00000001 )
( harmlessly~l1 opposite~l1 detrimentally~l1 x00000001 )
( detrimentally~l1 opposite~l1 harmlessly~l1 x00000001 )
( dishonestly~l1 opposite~l1 aboveboard~l1 x00000001 )
( aboveboard~l1 opposite~l1 dishonestly~l1 x00000001 )
( honourably~l1 opposite~l1 dishonorably~l1 x00000001 )
( dishonorably~l1 opposite~l1 honourably~l1 x00000001 )
( disloyally~l1 opposite~l1 loyally~l1 x00000001 )
( loyally~l1 opposite~l1 disloyally~l1 x00000001 )
( disobediently~l1 opposite~l1 obediently~l1 x00000001 )
( obediently~l1 opposite~l1 disobediently~l1 x00000001 )
( proportionately~l1 opposite~l1 disproportionately~l1 x00000001 )
( disproportionately~l1 opposite~l1 proportionately~l1 x00000001 )
( reputably~l1 opposite~l1 disreputably~l1 x00000001 )
( disreputably~l1 opposite~l1 reputably~l1 x00000001 )
( disrespectfully~l1 opposite~l1 respectfully~l1 x00000001 )
( respectfully~l1 opposite~l1 disrespectfully~l1 x00000001 )
( confidingly~l1 opposite~l1 distrustfully~l1 x00000001 )
( distrustfully~l1 opposite~l1 confidingly~l1 x00000001 )
( westerly~l1 opposite~l1 easterly~l1 x00000001 )
( easterly~l1 opposite~l1 westerly~l1 x00000001 )
( ineffectually~l1 opposite~l1 effectually~l1 x00000001 )
( effectually~l1 opposite~l1 ineffectually~l1 x00000001 )
( inefficaciously~l1 opposite~l1 efficaciously~l1 x00000001 )
( efficaciously~l1 opposite~l1 inefficaciously~l1 x00000001 )
( unselfishly~l1 opposite~l1 egotistically~l1 x00000001 )
( egotistically~l1 opposite~l1 unselfishly~l1 x00000001 )
( inelegantly~l1 opposite~l1 elegantly~l1 x00000001 )
( elegantly~l1 opposite~l1 inelegantly~l1 x00000001 )
( discouragingly~l1 opposite~l1 encouragingly~l1 x00000001 )
( encouragingly~l1 opposite~l1 discouragingly~l1 x00000001 )
( inequitably~l1 opposite~l1 equitably~l1 x00000001 )
( equitably~l1 opposite~l1 inequitably~l1 x00000001 )
( unethically~l1 opposite~l1 ethically~l1 x00000001 )
( ethically~l1 opposite~l1 unethically~l1 x00000001 )
( unevenly~l1 opposite~l1 evenly~l1 x00000001 )
( evenly~l1 opposite~l1 unevenly~l1 x00000001 )
( irregularly~l1 opposite~l1 regularly~l1 x00000001 )
( regularly~l1 opposite~l1 irregularly~l1 x00000001 )
( unequally~l1 opposite~l1 equally~l1 x00000001 )
( equally~l1 opposite~l1 unequally~l1 x00000001 )
( unexcitingly~l1 opposite~l1 excitingly~l1 x00000001 )
( excitingly~l1 opposite~l1 unexcitingly~l1 x00000001 )
( unpardonably~l1 opposite~l1 forgivably~l1 x00000001 )
( forgivably~l1 opposite~l1 unpardonably~l1 x00000001 )
( inexpediently~l1 opposite~l1 expediently~l1 x00000001 )
( expediently~l1 opposite~l1 inexpediently~l1 x00000001 )
( inexpensively~l1 opposite~l1 expensively~l1 x00000001 )
( expensively~l1 opposite~l1 inexpensively~l1 x00000001 )
( inexpressively~l1 opposite~l1 expressively~l1 x00000001 )
( expressively~l1 opposite~l1 inexpressively~l1 x00000001 )
( unfashionably~l1 opposite~l1 fashionably~l1 x00000001 )
( fashionably~l1 opposite~l1 unfashionably~l1 x00000001 )
( uncivilly~l1 opposite~l1 civilly~l1 x00000001 )
( civilly~l1 opposite~l1 uncivilly~l1 x00000001 )
( unfeelingly~l1 opposite~l1 feelingly~l1 x00000001 )
( feelingly~l1 opposite~l1 unfeelingly~l1 x00000001 )
( infelicitously~l1 opposite~l1 felicitously~l1 x00000001 )
( felicitously~l1 opposite~l1 infelicitously~l1 x00000001 )
( literally~l1 opposite~l1 figuratively~l1 x00000001 )
( figuratively~l1 opposite~l1 literally~l1 x00000001 )
( inflexibly~l1 opposite~l1 flexibly~l1 x00000001 )
( flexibly~l1 opposite~l1 inflexibly~l1 x00000001 )
( unforgivingly~l1 opposite~l1 forgivingly~l1 x00000001 )
( forgivingly~l1 opposite~l1 unforgivingly~l1 x00000001 )
( loudly~l1 opposite~l1 softly~l1 x00000001 )
( softly~l1 opposite~l1 loudly~l1 x00000001 )
( very_loudly~l1 opposite~l1 very_softly~l1 x00000001 )
( very_softly~l1 opposite~l1 very_loudly~l1 x00000001 )
( joylessly~l1 opposite~l1 gleefully~l1 x00000001 )
( gleefully~l1 opposite~l1 joylessly~l1 x00000001 )
( ungrudgingly~l1 opposite~l1 grudgingly~l1 x00000001 )
( grudgingly~l1 opposite~l1 ungrudgingly~l1 x00000001 )
( inhospitably~l1 opposite~l1 hospitably~l1 x00000001 )
( hospitably~l1 opposite~l1 inhospitably~l1 x00000001 )
( inhumanely~l1 opposite~l1 humanely~l1 x00000001 )
( humanely~l1 opposite~l1 inhumanely~l1 x00000001 )
( humourlessly~l1 opposite~l1 humorously~l1 x00000001 )
( humorously~l1 opposite~l1 humourlessly~l1 x00000001 )
( unhygienically~l1 opposite~l1 hygienically~l1 x00000001 )
( hygienically~l1 opposite~l1 unhygienically~l1 x00000001 )
( undecipherably~l1 opposite~l1 decipherably~l1 x00000001 )
( decipherably~l1 opposite~l1 undecipherably~l1 x00000001 )
( legitimately~l1 opposite~l1 illegitimately~l1 x00000001 )
( illegitimately~l1 opposite~l1 legitimately~l1 x00000001 )
( illogically~l1 opposite~l1 logically~l1 x00000001 )
( logically~l1 opposite~l1 illogically~l1 x00000001 )
( immorally~l1 opposite~l1 virtuously~l1 x00000001 )
( virtuously~l1 opposite~l1 immorally~l1 x00000001 )
( penitentially~l1 opposite~l1 unrepentantly~l1 x00000001 )
( unrepentantly~l1 opposite~l1 penitentially~l1 x00000001 )
( perceptibly~l1 opposite~l1 imperceptibly~l1 x00000001 )
( imperceptibly~l1 opposite~l1 perceptibly~l1 x00000001 )
( personally~l1 opposite~l1 impersonally~l1 x00000001 )
( impersonally~l1 opposite~l1 personally~l1 x00000001 )
( explicitly~l1 opposite~l1 implicitly~l1 x00000001 )
( implicitly~l1 opposite~l1 explicitly~l1 x00000001 )
( imprecisely~l1 opposite~l1 incisively~l1 x00000001 )
( incisively~l1 opposite~l1 imprecisely~l1 x00000001 )
( providently~l1 opposite~l1 improvidently~l1 x00000001 )
( improvidently~l1 opposite~l1 providently~l1 x00000001 )
( imprudently~l1 opposite~l1 providentially~l1 x00000001 )
( providentially~l1 opposite~l1 imprudently~l1 x00000001 )
( inadequately~l1 opposite~l1 adequately~l1 x00000001 )
( adequately~l1 opposite~l1 inadequately~l1 x00000001 )
( comparably~l1 opposite~l1 incomparably~l1 x00000001 )
( incomparably~l1 opposite~l1 comparably~l1 x00000001 )
( inconspicuously~l1 opposite~l1 conspicuously~l1 x00000001 )
( conspicuously~l1 opposite~l1 inconspicuously~l1 x00000001 )
( indiscreetly~l1 opposite~l1 discreetly~l1 x00000001 )
( discreetly~l1 opposite~l1 indiscreetly~l1 x00000001 )
( uninformatively~l1 opposite~l1 informatively~l1 x00000001 )
( informatively~l1 opposite~l1 uninformatively~l1 x00000001 )
( opportunely~l1 opposite~l1 inopportunely~l1 x00000001 )
( inopportunely~l1 opposite~l1 opportunely~l1 x00000001 )
( insecurely~l1 opposite~l1 securely~l1 x00000001 )
( securely~l1 opposite~l1 insecurely~l1 x00000001 )
( insensitively~l1 opposite~l1 sensitively~l1 x00000001 )
( sensitively~l1 opposite~l1 insensitively~l1 x00000001 )
( insincerely~l1 opposite~l1 unfeignedly~l1 x00000001 )
( unfeignedly~l1 opposite~l1 insincerely~l1 x00000001 )
( intolerantly~l1 opposite~l1 tolerantly~l1 x00000001 )
( tolerantly~l1 opposite~l1 intolerantly~l1 x00000001 )
( intransitively~l1 opposite~l1 transitively~l1 x00000001 )
( transitively~l1 opposite~l1 intransitively~l1 x00000001 )
( visibly~l1 opposite~l1 invisibly~l1 x00000001 )
( invisibly~l1 opposite~l1 visibly~l1 x00000001 )
( relevantly~l1 opposite~l1 irrelevantly~l1 x00000001 )
( irrelevantly~l1 opposite~l1 relevantly~l1 x00000001 )
( reverentially~l1 opposite~l1 irreverently~l1 x00000001 )
( irreverently~l1 opposite~l1 reverentially~l1 x00000001 )
( maturely~l1 opposite~l1 immaturely~l1 x00000001 )
( immaturely~l1 opposite~l1 maturely~l1 x00000001 )
( injudiciously~l1 opposite~l1 judiciously~l1 x00000001 )
( judiciously~l1 opposite~l1 injudiciously~l1 x00000001 )
( staccato~l1 opposite~l1 legato~l1 x00000001 )
( legato~l1 opposite~l1 staccato~l1 x00000001 )
( unmanageably~l1 opposite~l1 manageably~l1 x00000001 )
( manageably~l1 opposite~l1 unmanageably~l1 x00000001 )
( unmanfully~l1 opposite~l1 manfully~l1 x00000001 )
( manfully~l1 opposite~l1 unmanfully~l1 x00000001 )
( malevolently~l1 opposite~l1 benevolently~l1 x00000001 )
( benevolently~l1 opposite~l1 malevolently~l1 x00000001 )
( minimally~l1 opposite~l1 maximally~l1 x00000001 )
( maximally~l1 opposite~l1 minimally~l1 x00000001 )
( richly~l1 opposite~l1 sparingly~l1 x00000001 )
( sparingly~l1 opposite~l1 richly~l1 x00000001 )
( measurably~l1 opposite~l1 immeasurably~l1 x00000001 )
( immeasurably~l1 opposite~l1 measurably~l1 x00000001 )
( unmelodiously~l1 opposite~l1 melodiously~l1 x00000001 )
( melodiously~l1 opposite~l1 unmelodiously~l1 x00000001 )
( unmemorably~l1 opposite~l1 unforgettably~l1 x00000001 )
( unforgettably~l1 opposite~l1 unmemorably~l1 x00000001 )
( truthfully~l1 opposite~l1 mendaciously~l1 x00000001 )
( mendaciously~l1 opposite~l1 truthfully~l1 x00000001 )
( unmusically~l1 opposite~l1 musically~l1 x00000001 )
( musically~l1 opposite~l1 unmusically~l1 x00000001 )
( broad-mindedly~l1 opposite~l1 narrow-mindedly~l1 x00000001 )
( narrow-mindedly~l1 opposite~l1 broad-mindedly~l1 x00000001 )
( unnecessarily~l1 opposite~l1 necessarily~l1 x00000001 )
( necessarily~l1 opposite~l1 unnecessarily~l1 x00000001 )
( subjectively~l1 opposite~l1 objectively~l1 x00000001 )
( objectively~l1 opposite~l1 subjectively~l1 x00000001 )
( unobtrusively~l1 opposite~l1 obtrusively~l1 x00000001 )
( obtrusively~l1 opposite~l1 unobtrusively~l1 x00000001 )
( pessimistically~l1 opposite~l1 optimistically~l1 x00000001 )
( optimistically~l1 opposite~l1 pessimistically~l1 x00000001 )
( obligatorily~l1 opposite~l1 optionally~l1 x00000001 )
( optionally~l1 opposite~l1 obligatorily~l1 x00000001 )
( unpalatably~l1 opposite~l1 palatably~l1 x00000001 )
( palatably~l1 opposite~l1 unpalatably~l1 x00000001 )
( unpatriotically~l1 opposite~l1 patriotically~l1 x00000001 )
( patriotically~l1 opposite~l1 unpatriotically~l1 x00000001 )
( unrecognizably~l1 opposite~l1 recognizably~l1 x00000001 )
( recognizably~l1 opposite~l1 unrecognizably~l1 x00000001 )
( unpretentiously~l1 opposite~l1 pretentiously~l1 x00000001 )
( pretentiously~l1 opposite~l1 unpretentiously~l1 x00000001 )
( unrighteously~l1 opposite~l1 righteously~l1 x00000001 )
( righteously~l1 opposite~l1 unrighteously~l1 x00000001 )
( unselfconsciously~l1 opposite~l1 self-consciously~l1 x00000001 )
( self-consciously~l1 opposite~l1 unselfconsciously~l1 x00000001 )
( unsentimentally~l1 opposite~l1 sentimentally~l1 x00000001 )
( sentimentally~l1 opposite~l1 unsentimentally~l1 x00000001 )
( inseparably~l1 opposite~l1 separably~l1 x00000001 )
( separably~l1 opposite~l1 inseparably~l1 x00000001 )
( unsmilingly~l1 opposite~l1 smilingly~l1 x00000001 )
( smilingly~l1 opposite~l1 unsmilingly~l1 x00000001 )
( unsociably~l1 opposite~l1 sociably~l1 x00000001 )
( sociably~l1 opposite~l1 unsociably~l1 x00000001 )
( unsportingly~l1 opposite~l1 sportingly~l1 x00000001 )
( sportingly~l1 opposite~l1 unsportingly~l1 x00000001 )
( unromantically~l1 opposite~l1 romantically~l1 x00000001 )
( romantically~l1 opposite~l1 unromantically~l1 x00000001 )
( tactlessly~l1 opposite~l1 tactfully~l1 x00000001 )
( tactfully~l1 opposite~l1 tactlessly~l1 x00000001 )
( tastelessly~l1 opposite~l1 tastefully~l1 x00000001 )
( tastefully~l1 opposite~l1 tastelessly~l1 x00000001 )
( lightly~l1 opposite~l1 thickly~l1 x00000001 )
( thickly~l1 opposite~l1 lightly~l1 x00000001 )
( thickly~l1 opposite~l1 thinly~l1 x00000001 )
( thinly~l1 opposite~l1 thickly~l1 x00000001 )
( grammatically~l1 opposite~l1 ungrammatically~l1 x00000001 )
( ungrammatically~l1 opposite~l1 grammatically~l1 x00000001 )
( unprecedentedly~l1 opposite~l1 precedentedly~l1 x00000001 )
( precedentedly~l1 opposite~l1 unprecedentedly~l1 x00000001 )
( dishonorably~l1 opposite~l1 honorably~l1 x00000001 )
( honorably~l1 opposite~l1 dishonorably~l1 x00000001 )
( uselessly~l1 opposite~l1 usefully~l1 x00000001 )
( usefully~l1 opposite~l1 uselessly~l1 x00000001 )
( concavely~l1 opposite~l1 convexly~l1 x00000001 )
( convexly~l1 opposite~l1 concavely~l1 x00000001 )
( painlessly~l1 opposite~l1 painfully~l1 x00000001 )
( painfully~l1 opposite~l1 painlessly~l1 x00000001 )
( adaxially~l1 opposite~l1 abaxially~l1 x00000001 )
( abaxially~l1 opposite~l1 adaxially~l1 x00000001 )
( unable~l1 opposite~l1 able~l1 x00000001 )
( able~l1 opposite~l1 unable~l1 x00000001 )
( adaxial~l1 opposite~l1 abaxial~l1 x00000001 )
( abaxial~l1 opposite~l1 adaxial~l1 x00000001 )
( basiscopic~l1 opposite~l1 acroscopic~l1 x00000001 )
( acroscopic~l1 opposite~l1 basiscopic~l1 x00000001 )
( adductive~l1 opposite~l1 abducting~l1 x00000001 )
( abducting~l1 opposite~l1 adductive~l1 x00000001 )
( dying~l1 opposite~l1 nascent~l1 x00000001 )
( nascent~l1 opposite~l1 dying~l1 x00000001 )
( unabridged~l1 opposite~l1 abridged~l1 x00000001 )
( abridged~l1 opposite~l1 unabridged~l1 x00000001 )
( comparative~l1 opposite~l1 absolute~l1 x00000001 )
( absolute~l1 opposite~l1 comparative~l1 x00000001 )
( nonabsorptive~l1 opposite~l1 absorptive~l1 x00000001 )
( absorptive~l1 opposite~l1 nonabsorptive~l1 x00000001 )
( nonadsorptive~l1 opposite~l1 surface-assimilative~l1 x00000001 )
( surface-assimilative~l1 opposite~l1 nonadsorptive~l1 x00000001 )
( adsorbable~l1 opposite~l1 absorbable~l1 x00000001 )
( absorbable~l1 opposite~l1 adsorbable~l1 x00000001 )
( gluttonous~l1 opposite~l1 abstemious~l1 x00000001 )
( abstemious~l1 opposite~l1 gluttonous~l1 x00000001 )
( concrete~l1 opposite~l1 abstract~l1 x00000001 )
( abstract~l1 opposite~l1 concrete~l1 x00000001 )
( scarce~l1 opposite~l1 abundant~l1 x00000001 )
( abundant~l1 opposite~l1 scarce~l1 x00000001 )
( unabused~l1 opposite~l1 ill-treated~l1 x00000001 )
( ill-treated~l1 opposite~l1 unabused~l1 x00000001 )
( unacceptable~l1 opposite~l1 acceptable~l1 x00000001 )
( acceptable~l1 opposite~l1 unacceptable~l1 x00000001 )
( inaccessible~l1 opposite~l1 accessible~l1 x00000001 )
( accessible~l1 opposite~l1 inaccessible~l1 x00000001 )
( unaccommodating~l1 opposite~l1 accommodating~l1 x00000001 )
( accommodating~l1 opposite~l1 unaccommodating~l1 x00000001 )
( inaccurate~l1 opposite~l1 accurate~l1 x00000001 )
( accurate~l1 opposite~l1 inaccurate~l1 x00000001 )
( unaccustomed~l1 opposite~l1 accustomed~l1 x00000001 )
( accustomed~l1 opposite~l1 unaccustomed~l1 x00000001 )
( alkaline~l1 opposite~l1 acidic~l1 x00000001 )
( acidic~l1 opposite~l1 alkaline~l1 x00000001 )
( amphiprotic~l1 opposite~l1 acidic~l1 x00000001 )
( acidic~l1 opposite~l1 amphiprotic~l1 x00000001 )
( amphiprotic~l1 opposite~l1 alkaline~l1 x00000001 )
( alkaline~l1 opposite~l1 amphiprotic~l1 x00000001 )
( alkaline-loving~l1 opposite~l1 acid-loving~l1 x00000001 )
( acid-loving~l1 opposite~l1 alkaline-loving~l1 x00000001 )
( unacknowledged~l1 opposite~l1 acknowledged~l1 x00000001 )
( acknowledged~l1 opposite~l1 unacknowledged~l1 x00000001 )
( unacquisitive~l1 opposite~l1 acquisitive~l1 x00000001 )
( acquisitive~l1 opposite~l1 unacquisitive~l1 x00000001 )
( basipetal~l1 opposite~l1 acropetal~l1 x00000001 )
( acropetal~l1 opposite~l1 basipetal~l1 x00000001 )
( inactive~l1 opposite~l1 active~l1 x00000001 )
( active~l1 opposite~l1 inactive~l1 x00000001 )
( active~l1 opposite~l1 extinct~l1 x00000001 )
( extinct~l1 opposite~l1 active~l1 x00000001 )
( stative~l1 opposite~l1 dynamic~l1 x00000001 )
( dynamic~l1 opposite~l1 stative~l1 x00000001 )
( passive~l1 opposite~l1 active~l1 x00000001 )
( active~l1 opposite~l1 passive~l1 x00000001 )
( quiet~l1 opposite~l1 active~l1 x00000001 )
( active~l1 opposite~l1 quiet~l1 x00000001 )
( potential~l1 opposite~l1 existent~l1 x00000001 )
( existent~l1 opposite~l1 potential~l1 x00000001 )
( chronic~l1 opposite~l1 acute~l1 x00000001 )
( acute~l1 opposite~l1 chronic~l1 x00000001 )
( avirulent~l1 opposite~l1 virulent~l1 x00000001 )
( virulent~l1 opposite~l1 avirulent~l1 x00000001 )
( maladaptive~l1 opposite~l1 adaptative~l1 x00000001 )
( adaptative~l1 opposite~l1 maladaptive~l1 x00000001 )
( unaddicted~l1 opposite~l1 addicted~l1 x00000001 )
( addicted~l1 opposite~l1 unaddicted~l1 x00000001 )
( nonaddictive~l1 opposite~l1 habit-forming~l1 x00000001 )
( habit-forming~l1 opposite~l1 nonaddictive~l1 x00000001 )
( subtractive~l1 opposite~l1 additive~l1 x00000001 )
( additive~l1 opposite~l1 subtractive~l1 x00000001 )
( unaddressed~l1 opposite~l1 addressed~l1 x00000001 )
( addressed~l1 opposite~l1 unaddressed~l1 x00000001 )
( inadequate~l1 opposite~l1 adequate~l1 x00000001 )
( adequate~l1 opposite~l1 inadequate~l1 x00000001 )
( nonadhesive~l1 opposite~l1 adhesive~l1 x00000001 )
( adhesive~l1 opposite~l1 nonadhesive~l1 x00000001 )
( substantive~l1 opposite~l1 procedural~l1 x00000001 )
( procedural~l1 opposite~l1 substantive~l1 x00000001 )
( unadoptable~l1 opposite~l1 adoptable~l1 x00000001 )
( adoptable~l1 opposite~l1 unadoptable~l1 x00000001 )
( undecorated~l1 opposite~l1 decorated~l1 x00000001 )
( decorated~l1 opposite~l1 undecorated~l1 x00000001 )
( anticholinergic~l1 opposite~l1 cholinergic~l1 x00000001 )
( cholinergic~l1 opposite~l1 anticholinergic~l1 x00000001 )
( maladroit~l1 opposite~l1 adroit~l1 x00000001 )
( adroit~l1 opposite~l1 maladroit~l1 x00000001 )
( disadvantageous~l1 opposite~l1 advantageous~l1 x00000001 )
( advantageous~l1 opposite~l1 disadvantageous~l1 x00000001 )
( unadventurous~l1 opposite~l1 adventuresome~l1 x00000001 )
( adventuresome~l1 opposite~l1 unadventurous~l1 x00000001 )
( inadvisable~l1 opposite~l1 advisable~l1 x00000001 )
( advisable~l1 opposite~l1 inadvisable~l1 x00000001 )
( ill-advised~l1 opposite~l1 well-advised~l1 x00000001 )
( well-advised~l1 opposite~l1 ill-advised~l1 x00000001 )
( anaerobiotic~l1 opposite~l1 aerophilous~l1 x00000001 )
( aerophilous~l1 opposite~l1 anaerobiotic~l1 x00000001 )
( anaerobic~l1 opposite~l1 aerobic~l1 x00000001 )
( aerobic~l1 opposite~l1 anaerobic~l1 x00000001 )
( inaesthetic~l1 opposite~l1 aesthetical~l1 x00000001 )
( aesthetical~l1 opposite~l1 inaesthetic~l1 x00000001 )
( unaffected~l1 opposite~l1 affected~l1 x00000001 )
( affected~l1 opposite~l1 unaffected~l1 x00000001 )
( unaffected~l1 opposite~l1 unnatural~l1 x00000001 )
( unnatural~l1 opposite~l1 unaffected~l1 x00000001 )
( rejective~l1 opposite~l1 acceptive~l1 x00000001 )
( acceptive~l1 opposite~l1 rejective~l1 x00000001 )
( aground~l1 opposite~l1 afloat~l1 x00000001 )
( afloat~l1 opposite~l1 aground~l1 x00000001 )
( unafraid~l1 opposite~l1 afraid~l1 x00000001 )
( afraid~l1 opposite~l1 unafraid~l1 x00000001 )
( nonaggressive~l1 opposite~l1 aggressive~l1 x00000001 )
( aggressive~l1 opposite~l1 nonaggressive~l1 x00000001 )
( unagitated~l1 opposite~l1 agitated~l1 x00000001 )
( agitated~l1 opposite~l1 unagitated~l1 x00000001 )
( disagreeable~l1 opposite~l1 agreeable~l1 x00000001 )
( agreeable~l1 opposite~l1 disagreeable~l1 x00000001 )
( air-to-air~l1 opposite~l1 air-to-surface~l1 x00000001 )
( air-to-surface~l1 opposite~l1 air-to-air~l1 x00000001 )
( surface-to-air~l1 opposite~l1 air-to-surface~l1 x00000001 )
( air-to-surface~l1 opposite~l1 surface-to-air~l1 x00000001 )
( surface-to-air~l1 opposite~l1 air-to-air~l1 x00000001 )
( air-to-air~l1 opposite~l1 surface-to-air~l1 x00000001 )
( unwatchful~l1 opposite~l1 watchful~l1 x00000001 )
( watchful~l1 opposite~l1 unwatchful~l1 x00000001 )
( heuristic~l1 opposite~l1 algorithmic~l1 x00000001 )
( algorithmic~l1 opposite~l1 heuristic~l1 x00000001 )
( inalienable~l1 opposite~l1 alienable~l1 x00000001 )
( alienable~l1 opposite~l1 inalienable~l1 x00000001 )
( dead~l1 opposite~l1 alive~l1 x00000001 )
( alive~l1 opposite~l1 dead~l1 x00000001 )
( eccrine~l1 opposite~l1 apocrine~l1 x00000001 )
( apocrine~l1 opposite~l1 eccrine~l1 x00000001 )
( subartesian~l1 opposite~l1 artesian~l1 x00000001 )
( artesian~l1 opposite~l1 subartesian~l1 x00000001 )
( dead~l1 opposite~l1 live~l1 x00000001 )
( live~l1 opposite~l1 dead~l1 x00000001 )
( analphabetic~l1 opposite~l1 alphabetical~l1 x00000001 )
( alphabetical~l1 opposite~l1 analphabetic~l1 x00000001 )
( precocial~l1 opposite~l1 altricial~l1 x00000001 )
( altricial~l1 opposite~l1 precocial~l1 x00000001 )
( self-centered~l1 opposite~l1 altruistic~l1 x00000001 )
( altruistic~l1 opposite~l1 self-centered~l1 x00000001 )
( unambiguous~l1 opposite~l1 ambiguous~l1 x00000001 )
( ambiguous~l1 opposite~l1 unambiguous~l1 x00000001 )
( ambitionless~l1 opposite~l1 ambitious~l1 x00000001 )
( ambitious~l1 opposite~l1 ambitionless~l1 x00000001 )
( emmetropic~l1 opposite~l1 ametropic~l1 x00000001 )
( ametropic~l1 opposite~l1 emmetropic~l1 x00000001 )
( meagerly~l1 opposite~l1 ample~l1 x00000001 )
( ample~l1 opposite~l1 meagerly~l1 x00000001 )
( catabolic~l1 opposite~l1 anabolic~l1 x00000001 )
( anabolic~l1 opposite~l1 catabolic~l1 x00000001 )
( cataclinal~l1 opposite~l1 anaclinal~l1 x00000001 )
( anaclinal~l1 opposite~l1 cataclinal~l1 x00000001 )
( astigmatic~l1 opposite~l1 anastigmatic~l1 x00000001 )
( anastigmatic~l1 opposite~l1 astigmatic~l1 x00000001 )
( synclinal~l1 opposite~l1 anticlinal~l1 x00000001 )
( anticlinal~l1 opposite~l1 synclinal~l1 x00000001 )
( catadromous~l1 opposite~l1 anadromous~l1 x00000001 )
( anadromous~l1 opposite~l1 catadromous~l1 x00000001 )
( diadromous~l1 opposite~l1 anadromous~l1 x00000001 )
( anadromous~l1 opposite~l1 diadromous~l1 x00000001 )
( diadromous~l1 opposite~l1 catadromous~l1 x00000001 )
( catadromous~l1 opposite~l1 diadromous~l1 x00000001 )
( katabatic~l1 opposite~l1 anabatic~l1 x00000001 )
( anabatic~l1 opposite~l1 katabatic~l1 x00000001 )
( oral~l1 opposite~l1 anal_retentive~l1 x00000001 )
( anal_retentive~l1 opposite~l1 oral~l1 x00000001 )
( digital~l1 opposite~l1 analogue~l1 x00000001 )
( analogue~l1 opposite~l1 digital~l1 x00000001 )
( synthetical~l1 opposite~l1 analytical~l1 x00000001 )
( analytical~l1 opposite~l1 synthetical~l1 x00000001 )
( synthetic~l1 opposite~l1 uninflected~l1 x00000001 )
( uninflected~l1 opposite~l1 synthetic~l1 x00000001 )
( derivational~l1 opposite~l1 inflectional~l1 x00000001 )
( inflectional~l1 opposite~l1 derivational~l1 x00000001 )
( syncarpous~l1 opposite~l1 apocarpous~l1 x00000001 )
( apocarpous~l1 opposite~l1 syncarpous~l1 x00000001 )
( unangry~l1 opposite~l1 angry~l1 x00000001 )
( angry~l1 opposite~l1 unangry~l1 x00000001 )
( unresentful~l1 opposite~l1 resentful~l1 x00000001 )
( resentful~l1 opposite~l1 unresentful~l1 x00000001 )
( insentient~l1 opposite~l1 sentient~l1 x00000001 )
( sentient~l1 opposite~l1 insentient~l1 x00000001 )
( non-living~l1 opposite~l1 animate~l1 x00000001 )
( animate~l1 opposite~l1 non-living~l1 x00000001 )
( unanimated~l1 opposite~l1 animated~l1 x00000001 )
( animated~l1 opposite~l1 unanimated~l1 x00000001 )
( unenlivened~l1 opposite~l1 enlivened~l1 x00000001 )
( enlivened~l1 opposite~l1 unenlivened~l1 x00000001 )
( inanimate~l1 opposite~l1 animate~l1 x00000001 )
( animate~l1 opposite~l1 inanimate~l1 x00000001 )
( onymous~l1 opposite~l1 anonymous~l1 x00000001 )
( anonymous~l1 opposite~l1 onymous~l1 x00000001 )
( postmortem~l1 opposite~l1 antemortem~l1 x00000001 )
( antemortem~l1 opposite~l1 postmortem~l1 x00000001 )
( subsequent~l1 opposite~l1 antecedent~l1 x00000001 )
( antecedent~l1 opposite~l1 subsequent~l1 x00000001 )
( retrorse~l1 opposite~l1 antrorse~l1 x00000001 )
( antrorse~l1 opposite~l1 retrorse~l1 x00000001 )
( terrestrial~l1 opposite~l1 aquatic~l1 x00000001 )
( aquatic~l1 opposite~l1 terrestrial~l1 x00000001 )
( amphibious~l1 opposite~l1 aquatic~l1 x00000001 )
( aquatic~l1 opposite~l1 amphibious~l1 x00000001 )
( amphibious~l1 opposite~l1 terrestrial~l1 x00000001 )
( terrestrial~l1 opposite~l1 amphibious~l1 x00000001 )
( succeeding~l1 opposite~l1 preceding~l1 x00000001 )
( preceding~l1 opposite~l1 succeeding~l1 x00000001 )
( unprecedented~l1 opposite~l1 precedented~l1 x00000001 )
( precedented~l1 opposite~l1 unprecedented~l1 x00000001 )
( nonprehensile~l1 opposite~l1 prehensile~l1 x00000001 )
( prehensile~l1 opposite~l1 nonprehensile~l1 x00000001 )
( perinatal~l1 opposite~l1 antepartum~l1 x00000001 )
( antepartum~l1 opposite~l1 perinatal~l1 x00000001 )
( postpartum~l1 opposite~l1 antepartum~l1 x00000001 )
( antepartum~l1 opposite~l1 postpartum~l1 x00000001 )
( postpartum~l1 opposite~l1 perinatal~l1 x00000001 )
( perinatal~l1 opposite~l1 postpartum~l1 x00000001 )
( postprandial~l1 opposite~l1 preprandial~l1 x00000001 )
( preprandial~l1 opposite~l1 postprandial~l1 x00000001 )
( postwar~l1 opposite~l1 prewar~l1 x00000001 )
( prewar~l1 opposite~l1 postwar~l1 x00000001 )
( anterograde~l1 opposite~l1 retrograde~l1 x00000001 )
( retrograde~l1 opposite~l1 anterograde~l1 x00000001 )
( postmeridian~l1 opposite~l1 antemeridian~l1 x00000001 )
( antemeridian~l1 opposite~l1 postmeridian~l1 x00000001 )
( posterior~l1 opposite~l1 anterior~l1 x00000001 )
( anterior~l1 opposite~l1 posterior~l1 x00000001 )
( ventral~l1 opposite~l1 dorsal~l1 x00000001 )
( dorsal~l1 opposite~l1 ventral~l1 x00000001 )
( unappealable~l1 opposite~l1 appealable~l1 x00000001 )
( appealable~l1 opposite~l1 unappealable~l1 x00000001 )
( unappendaged~l1 opposite~l1 appendaged~l1 x00000001 )
( appendaged~l1 opposite~l1 unappendaged~l1 x00000001 )
( unappetizing~l1 opposite~l1 appetizing~l1 x00000001 )
( appetizing~l1 opposite~l1 unappetizing~l1 x00000001 )
( unapproachable~l1 opposite~l1 approachable~l1 x00000001 )
( approachable~l1 opposite~l1 unapproachable~l1 x00000001 )
( inappropriate~l1 opposite~l1 appropriate~l1 x00000001 )
( appropriate~l1 opposite~l1 inappropriate~l1 x00000001 )
( undue~l1 opposite~l1 due~l1 x00000001 )
( due~l1 opposite~l1 undue~l1 x00000001 )
( malapropos~l1 opposite~l1 apropos~l1 x00000001 )
( apropos~l1 opposite~l1 malapropos~l1 x00000001 )
( peripteral~l1 opposite~l1 apteral~l1 x00000001 )
( apteral~l1 opposite~l1 peripteral~l1 x00000001 )
( nonarbitrable~l1 opposite~l1 arbitrable~l1 x00000001 )
( arbitrable~l1 opposite~l1 nonarbitrable~l1 x00000001 )
( noncolumned~l1 opposite~l1 columned~l1 x00000001 )
( columned~l1 opposite~l1 noncolumned~l1 x00000001 )
( nonarboreal~l1 opposite~l1 tree-living~l1 x00000001 )
( tree-living~l1 opposite~l1 nonarboreal~l1 x00000001 )
( argillaceous~l1 opposite~l1 arenaceous~l1 x00000001 )
( arenaceous~l1 opposite~l1 argillaceous~l1 x00000001 )
( unarmed~l1 opposite~l1 armed~l1 x00000001 )
( armed~l1 opposite~l1 unarmed~l1 x00000001 )
( unarmoured~l1 opposite~l1 armoured~l1 x00000001 )
( armoured~l1 opposite~l1 unarmoured~l1 x00000001 )
( armless~l1 opposite~l1 armed~l1 x00000001 )
( armed~l1 opposite~l1 armless~l1 x00000001 )
( artless~l1 opposite~l1 artful~l1 x00000001 )
( artful~l1 opposite~l1 artless~l1 x00000001 )
( inarticulate~l1 opposite~l1 articulate~l1 x00000001 )
( articulate~l1 opposite~l1 inarticulate~l1 x00000001 )
( nonspeaking~l1 opposite~l1 speaking~l1 x00000001 )
( speaking~l1 opposite~l1 nonspeaking~l1 x00000001 )
( unarticulated~l1 opposite~l1 articulated~l1 x00000001 )
( articulated~l1 opposite~l1 unarticulated~l1 x00000001 )
( unashamed~l1 opposite~l1 ashamed~l1 x00000001 )
( ashamed~l1 opposite~l1 unashamed~l1 x00000001 )
( unassertive~l1 opposite~l1 self-asserting~l1 x00000001 )
( self-asserting~l1 opposite~l1 unassertive~l1 x00000001 )
( nonassociative~l1 opposite~l1 associative~l1 x00000001 )
( associative~l1 opposite~l1 nonassociative~l1 x00000001 )
( uncommitted~l1 opposite~l1 committed~l1 x00000001 )
( committed~l1 opposite~l1 uncommitted~l1 x00000001 )
( unaffixed~l1 opposite~l1 affixed~l1 x00000001 )
( affixed~l1 opposite~l1 unaffixed~l1 x00000001 )
( pedunculate~l1 opposite~l1 stalkless~l1 x00000001 )
( stalkless~l1 opposite~l1 pedunculate~l1 x00000001 )
( vagile~l1 opposite~l1 sessile~l1 x00000001 )
( sessile~l1 opposite~l1 vagile~l1 x00000001 )
( detached~l1 opposite~l1 attached~l1 x00000001 )
( attached~l1 opposite~l1 detached~l1 x00000001 )
( unstuck~l1 opposite~l1 stuck~l1 x00000001 )
( stuck~l1 opposite~l1 unstuck~l1 x00000001 )
( detachable~l1 opposite~l1 attachable~l1 x00000001 )
( attachable~l1 opposite~l1 detachable~l1 x00000001 )
( unwary~l1 opposite~l1 wary~l1 x00000001 )
( wary~l1 opposite~l1 unwary~l1 x00000001 )
( inattentive~l1 opposite~l1 attentive~l1 x00000001 )
( attentive~l1 opposite~l1 inattentive~l1 x00000001 )
( unattractive~l1 opposite~l1 attractive~l1 x00000001 )
( attractive~l1 opposite~l1 unattractive~l1 x00000001 )
( repulsive~l1 opposite~l1 attractive~l1 x00000001 )
( attractive~l1 opposite~l1 repulsive~l1 x00000001 )
( unappealing~l1 opposite~l1 appealing~l1 x00000001 )
( appealing~l1 opposite~l1 unappealing~l1 x00000001 )
( unattributable~l1 opposite~l1 attributable~l1 x00000001 )
( attributable~l1 opposite~l1 unattributable~l1 x00000001 )
( predicative~l1 opposite~l1 attributive~l1 x00000001 )
( attributive~l1 opposite~l1 predicative~l1 x00000001 )
( nonpregnant~l1 opposite~l1 pregnant~l1 x00000001 )
( pregnant~l1 opposite~l1 nonpregnant~l1 x00000001 )
( unhearable~l1 opposite~l1 hearable~l1 x00000001 )
( hearable~l1 opposite~l1 unhearable~l1 x00000001 )
( subsonic~l1 opposite~l1 transonic~l1 x00000001 )
( transonic~l1 opposite~l1 subsonic~l1 x00000001 )
( supersonic~l1 opposite~l1 transonic~l1 x00000001 )
( transonic~l1 opposite~l1 supersonic~l1 x00000001 )
( supersonic~l1 opposite~l1 subsonic~l1 x00000001 )
( subsonic~l1 opposite~l1 supersonic~l1 x00000001 )
( inauspicious~l1 opposite~l1 auspicious~l1 x00000001 )
( auspicious~l1 opposite~l1 inauspicious~l1 x00000001 )
( unpropitious~l1 opposite~l1 propitious~l1 x00000001 )
( propitious~l1 opposite~l1 unpropitious~l1 x00000001 )
( unauthorized~l1 opposite~l1 authorized~l1 x00000001 )
( authorized~l1 opposite~l1 unauthorized~l1 x00000001 )
( unconstitutional~l1 opposite~l1 constitutional~l1 x00000001 )
( constitutional~l1 opposite~l1 unconstitutional~l1 x00000001 )
( allochthonous~l1 opposite~l1 autochthonous~l1 x00000001 )
( autochthonous~l1 opposite~l1 allochthonous~l1 x00000001 )
( heteroecious~l1 opposite~l1 autoecious~l1 x00000001 )
( autoecious~l1 opposite~l1 heteroecious~l1 x00000001 )
( heterogeneous~l1 opposite~l1 autogenous~l1 x00000001 )
( autogenous~l1 opposite~l1 heterogeneous~l1 x00000001 )
( manual~l1 opposite~l1 automatic~l1 x00000001 )
( automatic~l1 opposite~l1 manual~l1 x00000001 )
( unavailable~l1 opposite~l1 available~l1 x00000001 )
( available~l1 opposite~l1 unavailable~l1 x00000001 )
( asleep~l1 opposite~l1 awake~l1 x00000001 )
( awake~l1 opposite~l1 asleep~l1 x00000001 )
( nonastringent~l1 opposite~l1 astringent~l1 x00000001 )
( astringent~l1 opposite~l1 nonastringent~l1 x00000001 )
( incognizant~l1 opposite~l1 cognizant~l1 x00000001 )
( cognizant~l1 opposite~l1 incognizant~l1 x00000001 )
( unwitting~l1 opposite~l1 witting~l1 x00000001 )
( witting~l1 opposite~l1 unwitting~l1 x00000001 )
( unalarming~l1 opposite~l1 alarming~l1 x00000001 )
( alarming~l1 opposite~l1 unalarming~l1 x00000001 )
( entomophilous~l1 opposite~l1 anemophilous~l1 x00000001 )
( anemophilous~l1 opposite~l1 entomophilous~l1 x00000001 )
( unreassuring~l1 opposite~l1 reassuring~l1 x00000001 )
( reassuring~l1 opposite~l1 unreassuring~l1 x00000001 )
( following~l1 opposite~l1 leading~l1 x00000001 )
( leading~l1 opposite~l1 following~l1 x00000001 )
( backless~l1 opposite~l1 backed~l1 x00000001 )
( backed~l1 opposite~l1 backless~l1 x00000001 )
( reverse~l1 opposite~l1 forward~l1 x00000001 )
( forward~l1 opposite~l1 reverse~l1 x00000001 )
( unbalconied~l1 opposite~l1 balconied~l1 x00000001 )
( balconied~l1 opposite~l1 unbalconied~l1 x00000001 )
( unbarrelled~l1 opposite~l1 barrelled~l1 x00000001 )
( barrelled~l1 opposite~l1 unbarrelled~l1 x00000001 )
( beakless~l1 opposite~l1 beaked~l1 x00000001 )
( beaked~l1 opposite~l1 beakless~l1 x00000001 )
( bedless~l1 opposite~l1 bedded~l1 x00000001 )
( bedded~l1 opposite~l1 bedless~l1 x00000001 )
( unbeneficed~l1 opposite~l1 beneficed~l1 x00000001 )
( beneficed~l1 opposite~l1 unbeneficed~l1 x00000001 )
( unstratified~l1 opposite~l1 stratified~l1 x00000001 )
( stratified~l1 opposite~l1 unstratified~l1 x00000001 )
( fernless~l1 opposite~l1 ferned~l1 x00000001 )
( ferned~l1 opposite~l1 fernless~l1 x00000001 )
( grassless~l1 opposite~l1 grassy~l1 x00000001 )
( grassy~l1 opposite~l1 grassless~l1 x00000001 )
( ungusseted~l1 opposite~l1 gusseted~l1 x00000001 )
( gusseted~l1 opposite~l1 ungusseted~l1 x00000001 )
( hirsute~l1 opposite~l1 hairless~l1 x00000001 )
( hairless~l1 opposite~l1 hirsute~l1 x00000001 )
( awnless~l1 opposite~l1 awned~l1 x00000001 )
( awned~l1 opposite~l1 awnless~l1 x00000001 )
( nonbearing~l1 opposite~l1 bearing~l1 x00000001 )
( bearing~l1 opposite~l1 nonbearing~l1 x00000001 )
( ugly~l1 opposite~l1 beautiful~l1 x00000001 )
( beautiful~l1 opposite~l1 ugly~l1 x00000001 )
( ugly~l1 opposite~l1 pretty~l1 x00000001 )
( pretty~l1 opposite~l1 ugly~l1 x00000001 )
( flat-bellied~l1 opposite~l1 bellied~l1 x00000001 )
( bellied~l1 opposite~l1 flat-bellied~l1 x00000001 )
( unbanded~l1 opposite~l1 banded~l1 x00000001 )
( banded~l1 opposite~l1 unbanded~l1 x00000001 )
( unbelted~l1 opposite~l1 belted~l1 x00000001 )
( belted~l1 opposite~l1 unbelted~l1 x00000001 )
( maleficent~l1 opposite~l1 beneficent~l1 x00000001 )
( beneficent~l1 opposite~l1 maleficent~l1 x00000001 )
( unmalicious~l1 opposite~l1 malicious~l1 x00000001 )
( malicious~l1 opposite~l1 unmalicious~l1 x00000001 )
( malign~l1 opposite~l1 benignant~l1 x00000001 )
( benignant~l1 opposite~l1 malign~l1 x00000001 )
( worse~l1 opposite~l1 better~l1 x00000001 )
( better~l1 opposite~l1 worse~l1 x00000001 )
( worsened~l1 opposite~l1 better~l1 x00000001 )
( better~l1 opposite~l1 worsened~l1 x00000001 )
( worsening~l1 opposite~l1 bettering~l1 x00000001 )
( bettering~l1 opposite~l1 worsening~l1 x00000001 )
( unicameral~l1 opposite~l1 bicameral~l1 x00000001 )
( bicameral~l1 opposite~l1 unicameral~l1 x00000001 )
( unidirectional~l1 opposite~l1 bidirectional~l1 x00000001 )
( bidirectional~l1 opposite~l1 unidirectional~l1 x00000001 )
( faceless~l1 opposite~l1 faced~l1 x00000001 )
( faced~l1 opposite~l1 faceless~l1 x00000001 )
( bibless~l1 opposite~l1 bibbed~l1 x00000001 )
( bibbed~l1 opposite~l1 bibless~l1 x00000001 )
( multilateral~l1 opposite~l1 unilateral~l1 x00000001 )
( unilateral~l1 opposite~l1 multilateral~l1 x00000001 )
( unimodal~l1 opposite~l1 bimodal~l1 x00000001 )
( bimodal~l1 opposite~l1 unimodal~l1 x00000001 )
( monaural~l1 opposite~l1 binaural~l1 x00000001 )
( binaural~l1 opposite~l1 monaural~l1 x00000001 )
( trinucleated~l1 opposite~l1 binucleated~l1 x00000001 )
( binucleated~l1 opposite~l1 trinucleated~l1 x00000001 )
( mononucleate~l1 opposite~l1 binucleated~l1 x00000001 )
( binucleated~l1 opposite~l1 mononucleate~l1 x00000001 )
( trinucleated~l1 opposite~l1 mononucleate~l1 x00000001 )
( mononucleate~l1 opposite~l1 trinucleated~l1 x00000001 )
( quadrupedal~l1 opposite~l1 two-footed~l1 x00000001 )
( two-footed~l1 opposite~l1 quadrupedal~l1 x00000001 )
( brunette~l1 opposite~l1 light-haired~l1 x00000001 )
( light-haired~l1 opposite~l1 brunette~l1 x00000001 )
( unblemished~l1 opposite~l1 blemished~l1 x00000001 )
( blemished~l1 opposite~l1 unblemished~l1 x00000001 )
( bloodless~l1 opposite~l1 bloody~l1 x00000001 )
( bloody~l1 opposite~l1 bloodless~l1 x00000001 )
( timid~l1 opposite~l1 bold~l1 x00000001 )
( bold~l1 opposite~l1 timid~l1 x00000001 )
( unbound~l1 opposite~l1 bound~l1 x00000001 )
( bound~l1 opposite~l1 unbound~l1 x00000001 )
( unlaced~l1 opposite~l1 laced~l1 x00000001 )
( laced~l1 opposite~l1 unlaced~l1 x00000001 )
( unfastened~l1 opposite~l1 fastened~l1 x00000001 )
( fastened~l1 opposite~l1 unfastened~l1 x00000001 )
( untangled~l1 opposite~l1 tangled~l1 x00000001 )
( tangled~l1 opposite~l1 untangled~l1 x00000001 )
( unbordered~l1 opposite~l1 bordered~l1 x00000001 )
( bordered~l1 opposite~l1 unbordered~l1 x00000001 )
( lentic~l1 opposite~l1 lotic~l1 x00000001 )
( lotic~l1 opposite~l1 lentic~l1 x00000001 )
( middle-class~l1 opposite~l1 lower-class~l1 x00000001 )
( lower-class~l1 opposite~l1 middle-class~l1 x00000001 )
( upper-class~l1 opposite~l1 lower-class~l1 x00000001 )
( lower-class~l1 opposite~l1 upper-class~l1 x00000001 )
( upper-class~l1 opposite~l1 middle-class~l1 x00000001 )
( middle-class~l1 opposite~l1 upper-class~l1 x00000001 )
( dolichocephalic~l1 opposite~l1 brachycephalic~l1 x00000001 )
( brachycephalic~l1 opposite~l1 dolichocephalic~l1 x00000001 )
( cowardly~l1 opposite~l1 courageous~l1 x00000001 )
( courageous~l1 opposite~l1 cowardly~l1 x00000001 )
( gutless~l1 opposite~l1 plucky~l1 x00000001 )
( plucky~l1 opposite~l1 gutless~l1 x00000001 )
( bottle-fed~l1 opposite~l1 breast-fed~l1 x00000001 )
( breast-fed~l1 opposite~l1 bottle-fed~l1 x00000001 )
( breathless~l1 opposite~l1 breathing~l1 x00000001 )
( breathing~l1 opposite~l1 breathless~l1 x00000001 )
( noncrystalline~l1 opposite~l1 crystalline~l1 x00000001 )
( crystalline~l1 opposite~l1 noncrystalline~l1 x00000001 )
( landless~l1 opposite~l1 landed~l1 x00000001 )
( landed~l1 opposite~l1 landless~l1 x00000001 )
( dark~l1 opposite~l1 light~l1 x00000001 )
( light~l1 opposite~l1 dark~l1 x00000001 )
( unshaded~l1 opposite~l1 shaded~l1 x00000001 )
( shaded~l1 opposite~l1 unshaded~l1 x00000001 )
( moonless~l1 opposite~l1 moonlit~l1 x00000001 )
( moonlit~l1 opposite~l1 moonless~l1 x00000001 )
( unbridgeable~l1 opposite~l1 bridgeable~l1 x00000001 )
( bridgeable~l1 opposite~l1 unbridgeable~l1 x00000001 )
( dull~l1 opposite~l1 bright~l1 x00000001 )
( bright~l1 opposite~l1 dull~l1 x00000001 )
( undimmed~l1 opposite~l1 dimmed~l1 x00000001 )
( dimmed~l1 opposite~l1 undimmed~l1 x00000001 )
( unprejudiced~l1 opposite~l1 discriminatory~l1 x00000001 )
( discriminatory~l1 opposite~l1 unprejudiced~l1 x00000001 )
( narrow-minded~l1 opposite~l1 broad-minded~l1 x00000001 )
( broad-minded~l1 opposite~l1 narrow-minded~l1 x00000001 )
( unreconstructed~l1 opposite~l1 reconstructed~l1 x00000001 )
( reconstructed~l1 opposite~l1 unreconstructed~l1 x00000001 )
( unbroken~l1 opposite~l1 broken~l1 x00000001 )
( broken~l1 opposite~l1 unbroken~l1 x00000001 )
( sisterlike~l1 opposite~l1 brotherlike~l1 x00000001 )
( brotherlike~l1 opposite~l1 sisterlike~l1 x00000001 )
( endergonic~l1 opposite~l1 exergonic~l1 x00000001 )
( exergonic~l1 opposite~l1 endergonic~l1 x00000001 )
( identical~l1 opposite~l1 fraternal~l1 x00000001 )
( fraternal~l1 opposite~l1 identical~l1 x00000001 )
( unburied~l1 opposite~l1 interred~l1 x00000001 )
( interred~l1 opposite~l1 unburied~l1 x00000001 )
( idle~l1 opposite~l1 busy~l1 x00000001 )
( busy~l1 opposite~l1 idle~l1 x00000001 )
( boneless~l1 opposite~l1 boney~l1 x00000001 )
( boney~l1 opposite~l1 boneless~l1 x00000001 )
( unbuttoned~l1 opposite~l1 buttoned~l1 x00000001 )
( buttoned~l1 opposite~l1 unbuttoned~l1 x00000001 )
( socialistic~l1 opposite~l1 capitalistic~l1 x00000001 )
( capitalistic~l1 opposite~l1 socialistic~l1 x00000001 )
( euphonious~l1 opposite~l1 cacophonous~l1 x00000001 )
( cacophonous~l1 opposite~l1 euphonious~l1 x00000001 )
( incalculable~l1 opposite~l1 calculable~l1 x00000001 )
( calculable~l1 opposite~l1 incalculable~l1 x00000001 )
( stormy~l1 opposite~l1 calm~l1 x00000001 )
( calm~l1 opposite~l1 stormy~l1 x00000001 )
( uncamphorated~l1 opposite~l1 camphorated~l1 x00000001 )
( camphorated~l1 opposite~l1 uncamphorated~l1 x00000001 )
( incapable~l1 opposite~l1 capable~l1 x00000001 )
( capable~l1 opposite~l1 incapable~l1 x00000001 )
( uncared-for~l1 opposite~l1 cared-for~l1 x00000001 )
( cared-for~l1 opposite~l1 uncared-for~l1 x00000001 )
( careless~l1 opposite~l1 careful~l1 x00000001 )
( careful~l1 opposite~l1 careless~l1 x00000001 )
( herbivorous~l1 opposite~l1 carnivorous~l1 x00000001 )
( carnivorous~l1 opposite~l1 herbivorous~l1 x00000001 )
( omnivorous~l1 opposite~l1 carnivorous~l1 x00000001 )
( carnivorous~l1 opposite~l1 omnivorous~l1 x00000001 )
( insectivorous~l1 opposite~l1 carnivorous~l1 x00000001 )
( carnivorous~l1 opposite~l1 insectivorous~l1 x00000001 )
( omnivorous~l1 opposite~l1 herbivorous~l1 x00000001 )
( herbivorous~l1 opposite~l1 omnivorous~l1 x00000001 )
( insectivorous~l1 opposite~l1 herbivorous~l1 x00000001 )
( herbivorous~l1 opposite~l1 insectivorous~l1 x00000001 )
( insectivorous~l1 opposite~l1 omnivorous~l1 x00000001 )
( omnivorous~l1 opposite~l1 insectivorous~l1 x00000001 )
( holophytic~l1 opposite~l1 holozoic~l1 x00000001 )
( holozoic~l1 opposite~l1 holophytic~l1 x00000001 )
( acarpellous~l1 opposite~l1 carpellate~l1 x00000001 )
( carpellate~l1 opposite~l1 acarpellous~l1 x00000001 )
( uncarpeted~l1 opposite~l1 carpeted~l1 x00000001 )
( carpeted~l1 opposite~l1 uncarpeted~l1 x00000001 )
( clincher-built~l1 opposite~l1 carvel-built~l1 x00000001 )
( carvel-built~l1 opposite~l1 clincher-built~l1 x00000001 )
( uncarved~l1 opposite~l1 carved~l1 x00000001 )
( carved~l1 opposite~l1 uncarved~l1 x00000001 )
( catalectic~l1 opposite~l1 acatalectic~l1 x00000001 )
( acatalectic~l1 opposite~l1 catalectic~l1 x00000001 )
( hypercatalectic~l1 opposite~l1 acatalectic~l1 x00000001 )
( acatalectic~l1 opposite~l1 hypercatalectic~l1 x00000001 )
( hypercatalectic~l1 opposite~l1 catalectic~l1 x00000001 )
( catalectic~l1 opposite~l1 hypercatalectic~l1 x00000001 )
( radical~l1 opposite~l1 cauline~l1 x00000001 )
( cauline~l1 opposite~l1 radical~l1 x00000001 )
( uncensored~l1 opposite~l1 censored~l1 x00000001 )
( censored~l1 opposite~l1 uncensored~l1 x00000001 )
( acaudate~l1 opposite~l1 caudated~l1 x00000001 )
( caudated~l1 opposite~l1 acaudate~l1 x00000001 )
( acaulescent~l1 opposite~l1 caulescent~l1 x00000001 )
( caulescent~l1 opposite~l1 acaulescent~l1 x00000001 )
( noncausative~l1 opposite~l1 causative~l1 x00000001 )
( causative~l1 opposite~l1 noncausative~l1 x00000001 )
( incautious~l1 opposite~l1 cautious~l1 x00000001 )
( cautious~l1 opposite~l1 incautious~l1 x00000001 )
( noncellular~l1 opposite~l1 cellular~l1 x00000001 )
( cellular~l1 opposite~l1 noncellular~l1 x00000001 )
( incoherent~l1 opposite~l1 coherent~l1 x00000001 )
( coherent~l1 opposite~l1 incoherent~l1 x00000001 )
( uncompartmented~l1 opposite~l1 compartmented~l1 x00000001 )
( compartmented~l1 opposite~l1 uncompartmented~l1 x00000001 )
( nonporous~l1 opposite~l1 poriferous~l1 x00000001 )
( poriferous~l1 opposite~l1 nonporous~l1 x00000001 )
( peripheral~l1 opposite~l1 central~l1 x00000001 )
( central~l1 opposite~l1 peripheral~l1 x00000001 )
( centripetal~l1 opposite~l1 centrifugal~l1 x00000001 )
( centrifugal~l1 opposite~l1 centripetal~l1 x00000001 )
( efferent~l1 opposite~l1 afferent~l1 x00000001 )
( afferent~l1 opposite~l1 efferent~l1 x00000001 )
( decentralizing~l1 opposite~l1 centralizing~l1 x00000001 )
( centralizing~l1 opposite~l1 decentralizing~l1 x00000001 )
( uncertain~l1 opposite~l1 certain~l1 x00000001 )
( certain~l1 opposite~l1 uncertain~l1 x00000001 )
( unconvinced~l1 opposite~l1 convinced~l1 x00000001 )
( convinced~l1 opposite~l1 unconvinced~l1 x00000001 )
( diffident~l1 opposite~l1 confident~l1 x00000001 )
( confident~l1 opposite~l1 diffident~l1 x00000001 )
( uncertified~l1 opposite~l1 certified~l1 x00000001 )
( certified~l1 opposite~l1 uncertified~l1 x00000001 )
( avoidable~l1 opposite~l1 inevitable~l1 x00000001 )
( inevitable~l1 opposite~l1 avoidable~l1 x00000001 )
( unpreventable~l1 opposite~l1 preventable~l1 x00000001 )
( preventable~l1 opposite~l1 unpreventable~l1 x00000001 )
( unchangeable~l1 opposite~l1 changeable~l1 x00000001 )
( changeable~l1 opposite~l1 unchangeable~l1 x00000001 )
( incommutable~l1 opposite~l1 commutable~l1 x00000001 )
( commutable~l1 opposite~l1 incommutable~l1 x00000001 )
( unalterable~l1 opposite~l1 alterable~l1 x00000001 )
( alterable~l1 opposite~l1 unalterable~l1 x00000001 )
( unmodifiable~l1 opposite~l1 modifiable~l1 x00000001 )
( modifiable~l1 opposite~l1 unmodifiable~l1 x00000001 )
( unadjusted~l1 opposite~l1 adjusted~l1 x00000001 )
( adjusted~l1 opposite~l1 unadjusted~l1 x00000001 )
( maladjusted~l1 opposite~l1 adjusted~l1 x00000001 )
( adjusted~l1 opposite~l1 maladjusted~l1 x00000001 )
( unaltered~l1 opposite~l1 altered~l1 x00000001 )
( altered~l1 opposite~l1 unaltered~l1 x00000001 )
( unamended~l1 opposite~l1 amended~l1 x00000001 )
( amended~l1 opposite~l1 unamended~l1 x00000001 )
( unchanged~l1 opposite~l1 changed~l1 x00000001 )
( changed~l1 opposite~l1 unchanged~l1 x00000001 )
( isotonic~l1 opposite~l1 isometric~l1 x00000001 )
( isometric~l1 opposite~l1 isotonic~l1 x00000001 )
( nonionized~l1 opposite~l1 ionized~l1 x00000001 )
( ionized~l1 opposite~l1 nonionized~l1 x00000001 )
( changeless~l1 opposite~l1 changeable~l1 x00000001 )
( changeable~l1 opposite~l1 changeless~l1 x00000001 )
( uncharacteristic~l1 opposite~l1 characteristic~l1 x00000001 )
( characteristic~l1 opposite~l1 uncharacteristic~l1 x00000001 )
( uncharged~l1 opposite~l1 charged~l1 x00000001 )
( charged~l1 opposite~l1 uncharged~l1 x00000001 )
( uncharitable~l1 opposite~l1 charitable~l1 x00000001 )
( charitable~l1 opposite~l1 uncharitable~l1 x00000001 )
( unchartered~l1 opposite~l1 chartered~l1 x00000001 )
( chartered~l1 opposite~l1 unchartered~l1 x00000001 )
( ownerless~l1 opposite~l1 owned~l1 x00000001 )
( owned~l1 opposite~l1 ownerless~l1 x00000001 )
( unchaste~l1 opposite~l1 chaste~l1 x00000001 )
( chaste~l1 opposite~l1 unchaste~l1 x00000001 )
( depressing~l1 opposite~l1 cheerful~l1 x00000001 )
( cheerful~l1 opposite~l1 depressing~l1 x00000001 )
( achlamydeous~l1 opposite~l1 chlamydeous~l1 x00000001 )
( chlamydeous~l1 opposite~l1 achlamydeous~l1 x00000001 )
( achondritic~l1 opposite~l1 chondritic~l1 x00000001 )
( chondritic~l1 opposite~l1 achondritic~l1 x00000001 )
( triclinic~l1 opposite~l1 monoclinic~l1 x00000001 )
( monoclinic~l1 opposite~l1 triclinic~l1 x00000001 )
( polychromatic~l1 opposite~l1 monochromatic~l1 x00000001 )
( monochromatic~l1 opposite~l1 polychromatic~l1 x00000001 )
( achromatic~l1 opposite~l1 chromatic~l1 x00000001 )
( chromatic~l1 opposite~l1 achromatic~l1 x00000001 )
( unsaturated~l1 opposite~l1 saturated~l1 x00000001 )
( saturated~l1 opposite~l1 unsaturated~l1 x00000001 )
( black-and-white~l1 opposite~l1 colour~l1 x00000001 )
( colour~l1 opposite~l1 black-and-white~l1 x00000001 )
( uncoloured~l1 opposite~l1 coloured~l1 x00000001 )
( coloured~l1 opposite~l1 uncoloured~l1 x00000001 )
( unstained~l1 opposite~l1 stained~l1 x00000001 )
( stained~l1 opposite~l1 unstained~l1 x00000001 )
( colourless~l1 opposite~l1 colourful~l1 x00000001 )
( colourful~l1 opposite~l1 colourless~l1 x00000001 )
( dark~l1 opposite~l1 light-colored~l1 x00000001 )
( light-colored~l1 opposite~l1 dark~l1 x00000001 )
( diatonic~l1 opposite~l1 chromatic~l1 x00000001 )
( chromatic~l1 opposite~l1 diatonic~l1 x00000001 )
( transmontane~l1 opposite~l1 cismontane~l1 x00000001 )
( cismontane~l1 opposite~l1 transmontane~l1 x00000001 )
( unchristian~l1 opposite~l1 christian~l1 x00000001 )
( christian~l1 opposite~l1 unchristian~l1 x00000001 )
( noncivilized~l1 opposite~l1 civilized~l1 x00000001 )
( civilized~l1 opposite~l1 noncivilized~l1 x00000001 )
( nonclassical~l1 opposite~l1 classical~l1 x00000001 )
( classical~l1 opposite~l1 nonclassical~l1 x00000001 )
( unclassified~l1 opposite~l1 classified~l1 x00000001 )
( classified~l1 opposite~l1 unclassified~l1 x00000001 )
( unanalyzed~l1 opposite~l1 analyzed~l1 x00000001 )
( analyzed~l1 opposite~l1 unanalyzed~l1 x00000001 )
( unclean~l1 opposite~l1 clean~l1 x00000001 )
( clean~l1 opposite~l1 unclean~l1 x00000001 )
( dirty~l1 opposite~l1 unobjectionable~l1 x00000001 )
( unobjectionable~l1 opposite~l1 dirty~l1 x00000001 )
( contaminating~l1 opposite~l1 uncontaminating~l1 x00000001 )
( uncontaminating~l1 opposite~l1 contaminating~l1 x00000001 )
( nonradioactive~l1 opposite~l1 radioactive~l1 x00000001 )
( radioactive~l1 opposite~l1 nonradioactive~l1 x00000001 )
( unclear~l1 opposite~l1 clear~l1 x00000001 )
( clear~l1 opposite~l1 unclear~l1 x00000001 )
( opaque~l1 opposite~l1 clear~l1 x00000001 )
( clear~l1 opposite~l1 opaque~l1 x00000001 )
( radio-opaque~l1 opposite~l1 radiolucent~l1 x00000001 )
( radiolucent~l1 opposite~l1 radio-opaque~l1 x00000001 )
( confused~l1 opposite~l1 clear-thinking~l1 x00000001 )
( clear-thinking~l1 opposite~l1 confused~l1 x00000001 )
( inclement~l1 opposite~l1 clement~l1 x00000001 )
( clement~l1 opposite~l1 inclement~l1 x00000001 )
( stupid~l1 opposite~l1 smart~l1 x00000001 )
( smart~l1 opposite~l1 stupid~l1 x00000001 )
( close~l1 opposite~l1 far~l1 x00000001 )
( far~l1 opposite~l1 close~l1 x00000001 )
( close~l1 opposite~l1 distant~l1 x00000001 )
( distant~l1 opposite~l1 close~l1 x00000001 )
( uncousinly~l1 opposite~l1 cousinly~l1 x00000001 )
( cousinly~l1 opposite~l1 uncousinly~l1 x00000001 )
( unclothed~l1 opposite~l1 clothed~l1 x00000001 )
( clothed~l1 opposite~l1 unclothed~l1 x00000001 )
( unsaddled~l1 opposite~l1 saddled~l1 x00000001 )
( saddled~l1 opposite~l1 unsaddled~l1 x00000001 )
( cloudy~l1 opposite~l1 clear~l1 x00000001 )
( clear~l1 opposite~l1 cloudy~l1 x00000001 )
( inland~l1 opposite~l1 coastal~l1 x00000001 )
( coastal~l1 opposite~l1 inland~l1 x00000001 )
( offshore~l1 opposite~l1 shoreward~l1 x00000001 )
( shoreward~l1 opposite~l1 offshore~l1 x00000001 )
( incoherent~l1 opposite~l1 consistent~l1 x00000001 )
( consistent~l1 opposite~l1 incoherent~l1 x00000001 )
( noncollapsible~l1 opposite~l1 collapsible~l1 x00000001 )
( collapsible~l1 opposite~l1 noncollapsible~l1 x00000001 )
( uncrannied~l1 opposite~l1 crannied~l1 x00000001 )
( crannied~l1 opposite~l1 uncrannied~l1 x00000001 )
( distributive~l1 opposite~l1 collective~l1 x00000001 )
( collective~l1 opposite~l1 distributive~l1 x00000001 )
( suppressed~l1 opposite~l1 publicized~l1 x00000001 )
( publicized~l1 opposite~l1 suppressed~l1 x00000001 )
( unpublished~l1 opposite~l1 published~l1 x00000001 )
( published~l1 opposite~l1 unpublished~l1 x00000001 )
( unpublishable~l1 opposite~l1 publishable~l1 x00000001 )
( publishable~l1 opposite~l1 unpublishable~l1 x00000001 )
( unreported~l1 opposite~l1 reported~l1 x00000001 )
( reported~l1 opposite~l1 unreported~l1 x00000001 )
( unreportable~l1 opposite~l1 reportable~l1 x00000001 )
( reportable~l1 opposite~l1 unreportable~l1 x00000001 )
( noncombinative~l1 opposite~l1 combinative~l1 x00000001 )
( combinative~l1 opposite~l1 noncombinative~l1 x00000001 )
( noncombustible~l1 opposite~l1 combustible~l1 x00000001 )
( combustible~l1 opposite~l1 noncombustible~l1 x00000001 )
( nonexplosive~l1 opposite~l1 explosive~l1 x00000001 )
( explosive~l1 opposite~l1 nonexplosive~l1 x00000001 )
( unlighted~l1 opposite~l1 lighted~l1 x00000001 )
( lighted~l1 opposite~l1 unlighted~l1 x00000001 )
( incommodious~l1 opposite~l1 commodious~l1 x00000001 )
( commodious~l1 opposite~l1 incommodious~l1 x00000001 )
( uncomfortable~l1 opposite~l1 comfortable~l1 x00000001 )
( comfortable~l1 opposite~l1 uncomfortable~l1 x00000001 )
( incommensurate~l1 opposite~l1 commensurate~l1 x00000001 )
( commensurate~l1 opposite~l1 incommensurate~l1 x00000001 )
( disproportionate~l1 opposite~l1 proportionate~l1 x00000001 )
( proportionate~l1 opposite~l1 disproportionate~l1 x00000001 )
( noncommercial~l1 opposite~l1 commercial~l1 x00000001 )
( commercial~l1 opposite~l1 noncommercial~l1 x00000001 )
( nonresidential~l1 opposite~l1 residential~l1 x00000001 )
( residential~l1 opposite~l1 nonresidential~l1 x00000001 )
( noncommissioned~l1 opposite~l1 commissioned~l1 x00000001 )
( commissioned~l1 opposite~l1 noncommissioned~l1 x00000001 )
( uncommon~l1 opposite~l1 common~l1 x00000001 )
( common~l1 opposite~l1 uncommon~l1 x00000001 )
( unusual~l1 opposite~l1 usual~l1 x00000001 )
( usual~l1 opposite~l1 unusual~l1 x00000001 )
( hydrophilic~l1 opposite~l1 hydrophobic~l1 x00000001 )
( hydrophobic~l1 opposite~l1 hydrophilic~l1 x00000001 )
( oleophobic~l1 opposite~l1 oleophilic~l1 x00000001 )
( oleophilic~l1 opposite~l1 oleophobic~l1 x00000001 )
( individual~l1 opposite~l1 common~l1 x00000001 )
( common~l1 opposite~l1 individual~l1 x00000001 )
( uncommunicative~l1 opposite~l1 communicative~l1 x00000001 )
( communicative~l1 opposite~l1 uncommunicative~l1 x00000001 )
( loose~l1 opposite~l1 compact~l1 x00000001 )
( compact~l1 opposite~l1 loose~l1 x00000001 )
( incomparable~l1 opposite~l1 comparable~l1 x00000001 )
( comparable~l1 opposite~l1 incomparable~l1 x00000001 )
( uncompassionate~l1 opposite~l1 compassionate~l1 x00000001 )
( compassionate~l1 opposite~l1 uncompassionate~l1 x00000001 )
( incompatible~l1 opposite~l1 compatible~l1 x00000001 )
( compatible~l1 opposite~l1 incompatible~l1 x00000001 )
( non-miscible~l1 opposite~l1 miscible~l1 x00000001 )
( miscible~l1 opposite~l1 non-miscible~l1 x00000001 )
( incompetent~l1 opposite~l1 competent~l1 x00000001 )
( competent~l1 opposite~l1 incompetent~l1 x00000001 )
( noncompetitive~l1 opposite~l1 competitive~l1 x00000001 )
( competitive~l1 opposite~l1 noncompetitive~l1 x00000001 )
( uncomplaining~l1 opposite~l1 complaintive~l1 x00000001 )
( complaintive~l1 opposite~l1 uncomplaining~l1 x00000001 )
( incompressible~l1 opposite~l1 compressible~l1 x00000001 )
( compressible~l1 opposite~l1 incompressible~l1 x00000001 )
( fractional~l1 opposite~l1 whole~l1 x00000001 )
( whole~l1 opposite~l1 fractional~l1 x00000001 )
( half~l1 opposite~l1 whole~l1 x00000001 )
( whole~l1 opposite~l1 half~l1 x00000001 )
( undedicated~l1 opposite~l1 dedicated~l1 x00000001 )
( dedicated~l1 opposite~l1 undedicated~l1 x00000001 )
( incomplete~l1 opposite~l1 complete~l1 x00000001 )
( complete~l1 opposite~l1 incomplete~l1 x00000001 )
( noncomprehensive~l1 opposite~l1 comprehensive~l1 x00000001 )
( comprehensive~l1 opposite~l1 noncomprehensive~l1 x00000001 )
( discomposed~l1 opposite~l1 composed~l1 x00000001 )
( composed~l1 opposite~l1 discomposed~l1 x00000001 )
( incomprehensible~l1 opposite~l1 comprehensible~l1 x00000001 )
( comprehensible~l1 opposite~l1 incomprehensible~l1 x00000001 )
( bulging~l1 opposite~l1 concave~l1 x00000001 )
( concave~l1 opposite~l1 bulging~l1 x00000001 )
( distributed~l1 opposite~l1 concentrated~l1 x00000001 )
( concentrated~l1 opposite~l1 distributed~l1 x00000001 )
( nonconcentric~l1 opposite~l1 concentrical~l1 x00000001 )
( concentrical~l1 opposite~l1 nonconcentric~l1 x00000001 )
( unconcerned~l1 opposite~l1 concerned~l1 x00000001 )
( concerned~l1 opposite~l1 unconcerned~l1 x00000001 )
( prolix~l1 opposite~l1 concise~l1 x00000001 )
( concise~l1 opposite~l1 prolix~l1 x00000001 )
( inconclusive~l1 opposite~l1 conclusive~l1 x00000001 )
( conclusive~l1 opposite~l1 inconclusive~l1 x00000001 )
( unconsummated~l1 opposite~l1 consummated~l1 x00000001 )
( consummated~l1 opposite~l1 unconsummated~l1 x00000001 )
( subordinating~l1 opposite~l1 coordinating~l1 x00000001 )
( coordinating~l1 opposite~l1 subordinating~l1 x00000001 )
( discordant~l1 opposite~l1 accordant~l1 x00000001 )
( accordant~l1 opposite~l1 discordant~l1 x00000001 )
( expanded~l1 opposite~l1 contracted~l1 x00000001 )
( contracted~l1 opposite~l1 expanded~l1 x00000001 )
( hypertrophied~l1 opposite~l1 diminished~l1 x00000001 )
( diminished~l1 opposite~l1 hypertrophied~l1 x00000001 )
( unconditional~l1 opposite~l1 conditional~l1 x00000001 )
( conditional~l1 opposite~l1 unconditional~l1 x00000001 )
( unenforceable~l1 opposite~l1 enforceable~l1 x00000001 )
( enforceable~l1 opposite~l1 unenforceable~l1 x00000001 )
( unenforced~l1 opposite~l1 implemented~l1 x00000001 )
( implemented~l1 opposite~l1 unenforced~l1 x00000001 )
( non-conducting~l1 opposite~l1 conductive~l1 x00000001 )
( conductive~l1 opposite~l1 non-conducting~l1 x00000001 )
( unconfined~l1 opposite~l1 confined~l1 x00000001 )
( confined~l1 opposite~l1 unconfined~l1 x00000001 )
( uncrowded~l1 opposite~l1 crowded~l1 x00000001 )
( crowded~l1 opposite~l1 uncrowded~l1 x00000001 )
( incompatible~l1 opposite~l1 congenial~l1 x00000001 )
( congenial~l1 opposite~l1 incompatible~l1 x00000001 )
( incongruent~l1 opposite~l1 congruent~l1 x00000001 )
( congruent~l1 opposite~l1 incongruent~l1 x00000001 )
( incongruous~l1 opposite~l1 congruous~l1 x00000001 )
( congruous~l1 opposite~l1 incongruous~l1 x00000001 )
( disjunctive~l1 opposite~l1 conjunctive~l1 x00000001 )
( conjunctive~l1 opposite~l1 disjunctive~l1 x00000001 )
( disjunct~l1 opposite~l1 conjunct~l1 x00000001 )
( conjunct~l1 opposite~l1 disjunct~l1 x00000001 )
( unconnected~l1 opposite~l1 connected~l1 x00000001 )
( connected~l1 opposite~l1 unconnected~l1 x00000001 )
( unconquerable~l1 opposite~l1 conquerable~l1 x00000001 )
( conquerable~l1 opposite~l1 unconquerable~l1 x00000001 )
( unconscious~l1 opposite~l1 conscious~l1 x00000001 )
( conscious~l1 opposite~l1 unconscious~l1 x00000001 )
( desecrated~l1 opposite~l1 consecrated~l1 x00000001 )
( consecrated~l1 opposite~l1 desecrated~l1 x00000001 )
( unpriestly~l1 opposite~l1 priestlike~l1 x00000001 )
( priestlike~l1 opposite~l1 unpriestly~l1 x00000001 )
( liberal~l1 opposite~l1 conservative~l1 x00000001 )
( conservative~l1 opposite~l1 liberal~l1 x00000001 )
( inconsistent~l1 opposite~l1 consistent~l1 x00000001 )
( consistent~l1 opposite~l1 inconsistent~l1 x00000001 )
( inconspicuous~l1 opposite~l1 conspicuous~l1 x00000001 )
( conspicuous~l1 opposite~l1 inconspicuous~l1 x00000001 )
( indiscernible~l1 opposite~l1 discernible~l1 x00000001 )
( discernible~l1 opposite~l1 indiscernible~l1 x00000001 )
( indistinguishable~l1 opposite~l1 distinguishable~l1 x00000001 )
( distinguishable~l1 opposite~l1 indistinguishable~l1 x00000001 )
( inconstant~l1 opposite~l1 constant~l1 x00000001 )
( constant~l1 opposite~l1 inconstant~l1 x00000001 )
( destructive~l1 opposite~l1 constructive~l1 x00000001 )
( constructive~l1 opposite~l1 destructive~l1 x00000001 )
( discontented~l1 opposite~l1 contented~l1 x00000001 )
( contented~l1 opposite~l1 discontented~l1 x00000001 )
( incontestable~l1 opposite~l1 contestable~l1 x00000001 )
( contestable~l1 opposite~l1 incontestable~l1 x00000001 )
( incontinent~l1 opposite~l1 continent~l1 x00000001 )
( continent~l1 opposite~l1 incontinent~l1 x00000001 )
( sporadic~l1 opposite~l1 continual~l1 x00000001 )
( continual~l1 opposite~l1 sporadic~l1 x00000001 )
( discontinuous~l1 opposite~l1 uninterrupted~l1 x00000001 )
( uninterrupted~l1 opposite~l1 discontinuous~l1 x00000001 )
( discontinuous~l1 opposite~l1 continuous~l1 x00000001 )
( continuous~l1 opposite~l1 discontinuous~l1 x00000001 )
( discontinued~l1 opposite~l1 continued~l1 x00000001 )
( continued~l1 opposite~l1 discontinued~l1 x00000001 )
( uncontrolled~l1 opposite~l1 controlled~l1 x00000001 )
( controlled~l1 opposite~l1 uncontrolled~l1 x00000001 )
( noncontroversial~l1 opposite~l1 controversial~l1 x00000001 )
( controversial~l1 opposite~l1 noncontroversial~l1 x00000001 )
( unargumentative~l1 opposite~l1 argumentative~l1 x00000001 )
( argumentative~l1 opposite~l1 unargumentative~l1 x00000001 )
( inconvenient~l1 opposite~l1 convenient~l1 x00000001 )
( convenient~l1 opposite~l1 inconvenient~l1 x00000001 )
( unconventional~l1 opposite~l1 conventional~l1 x00000001 )
( conventional~l1 opposite~l1 unconventional~l1 x00000001 )
( conventional~l1 opposite~l1 nuclear~l1 x00000001 )
( nuclear~l1 opposite~l1 conventional~l1 x00000001 )
( nontraditional~l1 opposite~l1 traditional~l1 x00000001 )
( traditional~l1 opposite~l1 nontraditional~l1 x00000001 )
( divergent~l1 opposite~l1 convergent~l1 x00000001 )
( convergent~l1 opposite~l1 divergent~l1 x00000001 )
( branchless~l1 opposite~l1 branchy~l1 x00000001 )
( branchy~l1 opposite~l1 branchless~l1 x00000001 )
( unconvincing~l1 opposite~l1 convincing~l1 x00000001 )
( convincing~l1 opposite~l1 unconvincing~l1 x00000001 )
( raw~l1 opposite~l1 cooked~l1 x00000001 )
( cooked~l1 opposite~l1 raw~l1 x00000001 )
( uncooperative~l1 opposite~l1 cooperative~l1 x00000001 )
( cooperative~l1 opposite~l1 uncooperative~l1 x00000001 )
( incorrupt~l1 opposite~l1 corrupt~l1 x00000001 )
( corrupt~l1 opposite~l1 incorrupt~l1 x00000001 )
( antagonistic~l1 opposite~l1 synergistic~l1 x00000001 )
( synergistic~l1 opposite~l1 antagonistic~l1 x00000001 )
( inconsiderable~l1 opposite~l1 considerable~l1 x00000001 )
( considerable~l1 opposite~l1 inconsiderable~l1 x00000001 )
( insubstantial~l1 opposite~l1 substantial~l1 x00000001 )
( substantial~l1 opposite~l1 insubstantial~l1 x00000001 )
( nonmaterial~l1 opposite~l1 material~l1 x00000001 )
( material~l1 opposite~l1 nonmaterial~l1 x00000001 )
( unbodied~l1 opposite~l1 bodied~l1 x00000001 )
( bodied~l1 opposite~l1 unbodied~l1 x00000001 )
( unbrainwashed~l1 opposite~l1 brainwashed~l1 x00000001 )
( brainwashed~l1 opposite~l1 unbrainwashed~l1 x00000001 )
( incorporeal~l1 opposite~l1 corporeal~l1 x00000001 )
( corporeal~l1 opposite~l1 incorporeal~l1 x00000001 )
( incorrect~l1 opposite~l1 correct~l1 x00000001 )
( correct~l1 opposite~l1 incorrect~l1 x00000001 )
( wrong~l1 opposite~l1 correct~l1 x00000001 )
( correct~l1 opposite~l1 wrong~l1 x00000001 )
( uncorrected~l1 opposite~l1 corrected~l1 x00000001 )
( corrected~l1 opposite~l1 uncorrected~l1 x00000001 )
( incorrigible~l1 opposite~l1 corrigible~l1 x00000001 )
( corrigible~l1 opposite~l1 incorrigible~l1 x00000001 )
( provincial~l1 opposite~l1 cosmopolitan~l1 x00000001 )
( cosmopolitan~l1 opposite~l1 provincial~l1 x00000001 )
( laxative~l1 opposite~l1 costive~l1 x00000001 )
( costive~l1 opposite~l1 laxative~l1 x00000001 )
( unconstipated~l1 opposite~l1 constipated~l1 x00000001 )
( constipated~l1 opposite~l1 unconstipated~l1 x00000001 )
( inconsiderate~l1 opposite~l1 considerate~l1 x00000001 )
( considerate~l1 opposite~l1 inconsiderate~l1 x00000001 )
( discourteous~l1 opposite~l1 courteous~l1 x00000001 )
( courteous~l1 opposite~l1 discourteous~l1 x00000001 )
( impolite~l1 opposite~l1 polite~l1 x00000001 )
( polite~l1 opposite~l1 impolite~l1 x00000001 )
( uncivil~l1 opposite~l1 polite~l1 x00000001 )
( polite~l1 opposite~l1 uncivil~l1 x00000001 )
( sidereal~l1 opposite~l1 civil~l1 x00000001 )
( civil~l1 opposite~l1 sidereal~l1 x00000001 )
( uncreative~l1 opposite~l1 originative~l1 x00000001 )
( originative~l1 opposite~l1 uncreative~l1 x00000001 )
( unbelievable~l1 opposite~l1 believable~l1 x00000001 )
( believable~l1 opposite~l1 unbelievable~l1 x00000001 )
( incredulous~l1 opposite~l1 credulous~l1 x00000001 )
( credulous~l1 opposite~l1 incredulous~l1 x00000001 )
( uncritical~l1 opposite~l1 critical~l1 x00000001 )
( critical~l1 opposite~l1 uncritical~l1 x00000001 )
( nonjudgmental~l1 opposite~l1 judgmental~l1 x00000001 )
( judgmental~l1 opposite~l1 nonjudgmental~l1 x00000001 )
( noncritical~l1 opposite~l1 critical~l1 x00000001 )
( critical~l1 opposite~l1 noncritical~l1 x00000001 )
( uncrossed~l1 opposite~l1 crossed~l1 x00000001 )
( crossed~l1 opposite~l1 uncrossed~l1 x00000001 )
( walleyed~l1 opposite~l1 cross-eyed~l1 x00000001 )
( cross-eyed~l1 opposite~l1 walleyed~l1 x00000001 )
( uncrowned~l1 opposite~l1 crowned~l1 x00000001 )
( crowned~l1 opposite~l1 uncrowned~l1 x00000001 )
( noncrucial~l1 opposite~l1 important~l1 x00000001 )
( important~l1 opposite~l1 noncrucial~l1 x00000001 )
( uncrystallized~l1 opposite~l1 crystallized~l1 x00000001 )
( crystallized~l1 opposite~l1 uncrystallized~l1 x00000001 )
( one-dimensional~l1 opposite~l1 three-dimensional~l1 x00000001 )
( three-dimensional~l1 opposite~l1 one-dimensional~l1 x00000001 )
( two-dimensional~l1 opposite~l1 three-dimensional~l1 x00000001 )
( three-dimensional~l1 opposite~l1 two-dimensional~l1 x00000001 )
( two-dimensional~l1 opposite~l1 one-dimensional~l1 x00000001 )
( one-dimensional~l1 opposite~l1 two-dimensional~l1 x00000001 )
( multidimensional~l1 opposite~l1 one-dimensional~l1 x00000001 )
( one-dimensional~l1 opposite~l1 multidimensional~l1 x00000001 )
( uncut~l1 opposite~l1 cut~l1 x00000001 )
( cut~l1 opposite~l1 uncut~l1 x00000001 )
( incurious~l1 opposite~l1 curious~l1 x00000001 )
( curious~l1 opposite~l1 incurious~l1 x00000001 )
( noncurrent~l1 opposite~l1 current~l1 x00000001 )
( current~l1 opposite~l1 noncurrent~l1 x00000001 )
( blessed~l1 opposite~l1 cursed~l1 x00000001 )
( cursed~l1 opposite~l1 blessed~l1 x00000001 )
( unendowed~l1 opposite~l1 endowed~l1 x00000001 )
( endowed~l1 opposite~l1 unendowed~l1 x00000001 )
( curtainless~l1 opposite~l1 curtained~l1 x00000001 )
( curtained~l1 opposite~l1 curtainless~l1 x00000001 )
( ready-made~l1 opposite~l1 custom-made~l1 x00000001 )
( custom-made~l1 opposite~l1 ready-made~l1 x00000001 )
( machine-made~l1 opposite~l1 hand-crafted~l1 x00000001 )
( hand-crafted~l1 opposite~l1 machine-made~l1 x00000001 )
( factory-made~l1 opposite~l1 homemade~l1 x00000001 )
( homemade~l1 opposite~l1 factory-made~l1 x00000001 )
( noncyclical~l1 opposite~l1 cyclical~l1 x00000001 )
( cyclical~l1 opposite~l1 noncyclical~l1 x00000001 )
( open-chain~l1 opposite~l1 cyclic~l1 x00000001 )
( cyclic~l1 opposite~l1 open-chain~l1 x00000001 )
( acyclic~l1 opposite~l1 cyclic~l1 x00000001 )
( cyclic~l1 opposite~l1 acyclic~l1 x00000001 )
( biennial~l1 opposite~l1 one-year~l1 x00000001 )
( one-year~l1 opposite~l1 biennial~l1 x00000001 )
( perennial~l1 opposite~l1 one-year~l1 x00000001 )
( one-year~l1 opposite~l1 perennial~l1 x00000001 )
( perennial~l1 opposite~l1 biennial~l1 x00000001 )
( biennial~l1 opposite~l1 perennial~l1 x00000001 )
( nocturnal~l1 opposite~l1 diurnal~l1 x00000001 )
( diurnal~l1 opposite~l1 nocturnal~l1 x00000001 )
( undamaged~l1 opposite~l1 damaged~l1 x00000001 )
( damaged~l1 opposite~l1 undamaged~l1 x00000001 )
( undatable~l1 opposite~l1 dateable~l1 x00000001 )
( dateable~l1 opposite~l1 undatable~l1 x00000001 )
( hearing~l1 opposite~l1 deaf~l1 x00000001 )
( deaf~l1 opposite~l1 hearing~l1 x00000001 )
( indecent~l1 opposite~l1 decent~l1 x00000001 )
( decent~l1 opposite~l1 indecent~l1 x00000001 )
( indecisive~l1 opposite~l1 decisive~l1 x00000001 )
( decisive~l1 opposite~l1 indecisive~l1 x00000001 )
( interrogative~l1 opposite~l1 declarative~l1 x00000001 )
( declarative~l1 opposite~l1 interrogative~l1 x00000001 )
( undeclared~l1 opposite~l1 declared~l1 x00000001 )
( declared~l1 opposite~l1 undeclared~l1 x00000001 )
( indecorous~l1 opposite~l1 decorous~l1 x00000001 )
( decorous~l1 opposite~l1 indecorous~l1 x00000001 )
( nondeductible~l1 opposite~l1 deductible~l1 x00000001 )
( deductible~l1 opposite~l1 nondeductible~l1 x00000001 )
( shallow~l1 opposite~l1 deep~l1 x00000001 )
( deep~l1 opposite~l1 shallow~l1 x00000001 )
( de_jure~l1 opposite~l1 de_facto~l1 x00000001 )
( de_facto~l1 opposite~l1 de_jure~l1 x00000001 )
( indefeasible~l1 opposite~l1 defeasible~l1 x00000001 )
( defeasible~l1 opposite~l1 indefeasible~l1 x00000001 )
( undefeated~l1 opposite~l1 defeated~l1 x00000001 )
( defeated~l1 opposite~l1 undefeated~l1 x00000001 )
( compliant~l1 opposite~l1 noncompliant~l1 x00000001 )
( noncompliant~l1 opposite~l1 compliant~l1 x00000001 )
( undefined~l1 opposite~l1 defined~l1 x00000001 )
( defined~l1 opposite~l1 undefined~l1 x00000001 )
( ill-defined~l1 opposite~l1 well-defined~l1 x00000001 )
( well-defined~l1 opposite~l1 ill-defined~l1 x00000001 )
( underived~l1 opposite~l1 derived~l1 x00000001 )
( derived~l1 opposite~l1 underived~l1 x00000001 )
( uninflected~l1 opposite~l1 inflected~l1 x00000001 )
( inflected~l1 opposite~l1 uninflected~l1 x00000001 )
( indefinite~l1 opposite~l1 definite~l1 x00000001 )
( definite~l1 opposite~l1 indefinite~l1 x00000001 )
( indehiscent~l1 opposite~l1 dehiscent~l1 x00000001 )
( dehiscent~l1 opposite~l1 indehiscent~l1 x00000001 )
( elated~l1 opposite~l1 dejected~l1 x00000001 )
( dejected~l1 opposite~l1 elated~l1 x00000001 )
( rugged~l1 opposite~l1 delicate~l1 x00000001 )
( delicate~l1 opposite~l1 rugged~l1 x00000001 )
( unbreakable~l1 opposite~l1 breakable~l1 x00000001 )
( breakable~l1 opposite~l1 unbreakable~l1 x00000001 )
( undemanding~l1 opposite~l1 demanding~l1 x00000001 )
( demanding~l1 opposite~l1 undemanding~l1 x00000001 )
( beseeching~l1 opposite~l1 imperative~l1 x00000001 )
( imperative~l1 opposite~l1 beseeching~l1 x00000001 )
( undemocratic~l1 opposite~l1 democratic~l1 x00000001 )
( democratic~l1 opposite~l1 undemocratic~l1 x00000001 )
( nonarbitrary~l1 opposite~l1 arbitrary~l1 x00000001 )
( arbitrary~l1 opposite~l1 nonarbitrary~l1 x00000001 )
( undemonstrative~l1 opposite~l1 demonstrative~l1 x00000001 )
( demonstrative~l1 opposite~l1 undemonstrative~l1 x00000001 )
( undeniable~l1 opposite~l1 deniable~l1 x00000001 )
( deniable~l1 opposite~l1 undeniable~l1 x00000001 )
( connotative~l1 opposite~l1 denotative~l1 x00000001 )
( denotative~l1 opposite~l1 connotative~l1 x00000001 )
( undependable~l1 opposite~l1 dependable~l1 x00000001 )
( dependable~l1 opposite~l1 undependable~l1 x00000001 )
( independent~l1 opposite~l1 dependent~l1 x00000001 )
( dependent~l1 opposite~l1 independent~l1 x00000001 )
( subordinate~l1 opposite~l1 independent~l1 x00000001 )
( independent~l1 opposite~l1 subordinate~l1 x00000001 )
( nonpartisan~l1 opposite~l1 partisan~l1 x00000001 )
( partisan~l1 opposite~l1 nonpartisan~l1 x00000001 )
( nonaligned~l1 opposite~l1 aligned~l1 x00000001 )
( aligned~l1 opposite~l1 nonaligned~l1 x00000001 )
( prescriptive~l1 opposite~l1 descriptive~l1 x00000001 )
( descriptive~l1 opposite~l1 prescriptive~l1 x00000001 )
( undescriptive~l1 opposite~l1 descriptive~l1 x00000001 )
( descriptive~l1 opposite~l1 undescriptive~l1 x00000001 )
( undesirable~l1 opposite~l1 desirable~l1 x00000001 )
( desirable~l1 opposite~l1 undesirable~l1 x00000001 )
( preserved~l1 opposite~l1 destroyed~l1 x00000001 )
( destroyed~l1 opposite~l1 preserved~l1 x00000001 )
( indestructible~l1 opposite~l1 destructible~l1 x00000001 )
( destructible~l1 opposite~l1 indestructible~l1 x00000001 )
( indeterminable~l1 opposite~l1 determinable~l1 x00000001 )
( determinable~l1 opposite~l1 indeterminable~l1 x00000001 )
( indeterminate~l1 opposite~l1 determinate~l1 x00000001 )
( determinate~l1 opposite~l1 indeterminate~l1 x00000001 )
( undeveloped~l1 opposite~l1 developed~l1 x00000001 )
( developed~l1 opposite~l1 undeveloped~l1 x00000001 )
( sinistral~l1 opposite~l1 dextral~l1 x00000001 )
( dextral~l1 opposite~l1 sinistral~l1 x00000001 )
( adiabatic~l1 opposite~l1 diabatic~l1 x00000001 )
( diabatic~l1 opposite~l1 adiabatic~l1 x00000001 )
( undifferentiated~l1 opposite~l1 differentiated~l1 x00000001 )
( differentiated~l1 opposite~l1 undifferentiated~l1 x00000001 )
( easy~l1 opposite~l1 difficult~l1 x00000001 )
( difficult~l1 opposite~l1 easy~l1 x00000001 )
( plantigrade~l1 opposite~l1 digitigrade~l1 x00000001 )
( digitigrade~l1 opposite~l1 plantigrade~l1 x00000001 )
( undignified~l1 opposite~l1 dignified~l1 x00000001 )
( dignified~l1 opposite~l1 undignified~l1 x00000001 )
( unstatesmanlike~l1 opposite~l1 statesmanlike~l1 x00000001 )
( statesmanlike~l1 opposite~l1 unstatesmanlike~l1 x00000001 )
( unpresidential~l1 opposite~l1 presidential~l1 x00000001 )
( presidential~l1 opposite~l1 unpresidential~l1 x00000001 )
( monocotyledonous~l1 opposite~l1 dicotyledonous~l1 x00000001 )
( dicotyledonous~l1 opposite~l1 monocotyledonous~l1 x00000001 )
( negligent~l1 opposite~l1 diligent~l1 x00000001 )
( diligent~l1 opposite~l1 negligent~l1 x00000001 )
( undiluted~l1 opposite~l1 diluted~l1 x00000001 )
( diluted~l1 opposite~l1 undiluted~l1 x00000001 )
( unsaturated~l1 opposite~l1 concentrated~l1 x00000001 )
( concentrated~l1 opposite~l1 unsaturated~l1 x00000001 )
( undiplomatic~l1 opposite~l1 diplomatical~l1 x00000001 )
( diplomatical~l1 opposite~l1 undiplomatic~l1 x00000001 )
( antagonistic~l1 opposite~l1 conciliatory~l1 x00000001 )
( conciliatory~l1 opposite~l1 antagonistic~l1 x00000001 )
( indirect~l1 opposite~l1 direct~l1 x00000001 )
( direct~l1 opposite~l1 indirect~l1 x00000001 )
( alternating~l1 opposite~l1 direct~l1 x00000001 )
( direct~l1 opposite~l1 alternating~l1 x00000001 )
( inverse~l1 opposite~l1 direct~l1 x00000001 )
( direct~l1 opposite~l1 inverse~l1 x00000001 )
( retrograde~l1 opposite~l1 direct~l1 x00000001 )
( direct~l1 opposite~l1 retrograde~l1 x00000001 )
( mediate~l1 opposite~l1 immediate~l1 x00000001 )
( immediate~l1 opposite~l1 mediate~l1 x00000001 )
( undiscerning~l1 opposite~l1 discerning~l1 x00000001 )
( discerning~l1 opposite~l1 undiscerning~l1 x00000001 )
( indiscreet~l1 opposite~l1 discreet~l1 x00000001 )
( discreet~l1 opposite~l1 indiscreet~l1 x00000001 )
( indiscriminate~l1 opposite~l1 discriminate~l1 x00000001 )
( discriminate~l1 opposite~l1 indiscriminate~l1 x00000001 )
( undiscriminating~l1 opposite~l1 discriminating~l1 x00000001 )
( discriminating~l1 opposite~l1 undiscriminating~l1 x00000001 )
( nondisposable~l1 opposite~l1 disposable~l1 x00000001 )
( disposable~l1 opposite~l1 nondisposable~l1 x00000001 )
( nonreturnable~l1 opposite~l1 returnable~l1 x00000001 )
( returnable~l1 opposite~l1 nonreturnable~l1 x00000001 )
( proximal~l1 opposite~l1 distal~l1 x00000001 )
( distal~l1 opposite~l1 proximal~l1 x00000001 )
( mesial~l1 opposite~l1 distal~l1 x00000001 )
( distal~l1 opposite~l1 mesial~l1 x00000001 )
( indistinct~l1 opposite~l1 distinct~l1 x00000001 )
( distinct~l1 opposite~l1 indistinct~l1 x00000001 )
( unfocussed~l1 opposite~l1 focussed~l1 x00000001 )
( focussed~l1 opposite~l1 unfocussed~l1 x00000001 )
( undiversified~l1 opposite~l1 diversified~l1 x00000001 )
( diversified~l1 opposite~l1 undiversified~l1 x00000001 )
( indivisible~l1 opposite~l1 divisible~l1 x00000001 )
( divisible~l1 opposite~l1 indivisible~l1 x00000001 )
( undocumented~l1 opposite~l1 documented~l1 x00000001 )
( documented~l1 opposite~l1 undocumented~l1 x00000001 )
( submissive~l1 opposite~l1 domineering~l1 x00000001 )
( domineering~l1 opposite~l1 submissive~l1 x00000001 )
( unsubmissive~l1 opposite~l1 servile~l1 x00000001 )
( servile~l1 opposite~l1 unsubmissive~l1 x00000001 )
( subordinate~l1 opposite~l1 dominant~l1 x00000001 )
( dominant~l1 opposite~l1 subordinate~l1 x00000001 )
( recessive~l1 opposite~l1 dominant~l1 x00000001 )
( dominant~l1 opposite~l1 recessive~l1 x00000001 )
( double-barrelled~l1 opposite~l1 single-barrelled~l1 x00000001 )
( single-barrelled~l1 opposite~l1 double-barrelled~l1 x00000001 )
( single-breasted~l1 opposite~l1 double-breasted~l1 x00000001 )
( double-breasted~l1 opposite~l1 single-breasted~l1 x00000001 )
( undramatic~l1 opposite~l1 dramatic~l1 x00000001 )
( dramatic~l1 opposite~l1 undramatic~l1 x00000001 )
( unactable~l1 opposite~l1 actable~l1 x00000001 )
( actable~l1 opposite~l1 unactable~l1 x00000001 )
( untheatrical~l1 opposite~l1 theatrical~l1 x00000001 )
( theatrical~l1 opposite~l1 untheatrical~l1 x00000001 )
( undrinkable~l1 opposite~l1 drinkable~l1 x00000001 )
( drinkable~l1 opposite~l1 undrinkable~l1 x00000001 )
( sober~l1 opposite~l1 intoxicated~l1 x00000001 )
( intoxicated~l1 opposite~l1 sober~l1 x00000001 )
( sharp~l1 opposite~l1 dull~l1 x00000001 )
( dull~l1 opposite~l1 sharp~l1 x00000001 )
( uneventful~l1 opposite~l1 eventful~l1 x00000001 )
( eventful~l1 opposite~l1 uneventful~l1 x00000001 )
( live~l1 opposite~l1 die~l1 x00000001 )
( die~l1 opposite~l1 live~l1 x00000001 )
( dull~l1 opposite~l1 lively~l1 x00000001 )
( lively~l1 opposite~l1 dull~l1 x00000001 )
( undynamic~l1 opposite~l1 dynamical~l1 x00000001 )
( dynamical~l1 opposite~l1 undynamic~l1 x00000001 )
( uneager~l1 opposite~l1 eager~l1 x00000001 )
( eager~l1 opposite~l1 uneager~l1 x00000001 )
( earless~l1 opposite~l1 eared~l1 x00000001 )
( eared~l1 opposite~l1 earless~l1 x00000001 )
( middle~l1 opposite~l1 early~l1 x00000001 )
( early~l1 opposite~l1 middle~l1 x00000001 )
( late~l1 opposite~l1 early~l1 x00000001 )
( early~l1 opposite~l1 late~l1 x00000001 )
( late~l1 opposite~l1 middle~l1 x00000001 )
( middle~l1 opposite~l1 late~l1 x00000001 )
( later~l1 opposite~l1 early~l1 x00000001 )
( early~l1 opposite~l1 later~l1 x00000001 )
( unearned~l1 opposite~l1 earned~l1 x00000001 )
( earned~l1 opposite~l1 unearned~l1 x00000001 )
( uneasy~l1 opposite~l1 easy~l1 x00000001 )
( easy~l1 opposite~l1 uneasy~l1 x00000001 )
( west~l1 opposite~l1 east~l1 x00000001 )
( east~l1 opposite~l1 west~l1 x00000001 )
( eastern~l1 opposite~l1 western~l1 x00000001 )
( western~l1 opposite~l1 eastern~l1 x00000001 )
( endomorphic~l1 opposite~l1 ectomorphic~l1 x00000001 )
( ectomorphic~l1 opposite~l1 endomorphic~l1 x00000001 )
( mesomorphic~l1 opposite~l1 ectomorphic~l1 x00000001 )
( ectomorphic~l1 opposite~l1 mesomorphic~l1 x00000001 )
( mesomorphic~l1 opposite~l1 endomorphic~l1 x00000001 )
( endomorphic~l1 opposite~l1 mesomorphic~l1 x00000001 )
( uneatable~l1 opposite~l1 comestible~l1 x00000001 )
( comestible~l1 opposite~l1 uneatable~l1 x00000001 )
( uneducated~l1 opposite~l1 educated~l1 x00000001 )
( educated~l1 opposite~l1 uneducated~l1 x00000001 )
( innumerate~l1 opposite~l1 numerate~l1 x00000001 )
( numerate~l1 opposite~l1 innumerate~l1 x00000001 )
( inoperative~l1 opposite~l1 operative~l1 x00000001 )
( operative~l1 opposite~l1 inoperative~l1 x00000001 )
( ineffective~l1 opposite~l1 efficacious~l1 x00000001 )
( efficacious~l1 opposite~l1 ineffective~l1 x00000001 )
( effortless~l1 opposite~l1 effortful~l1 x00000001 )
( effortful~l1 opposite~l1 effortless~l1 x00000001 )
( inefficacious~l1 opposite~l1 efficacious~l1 x00000001 )
( efficacious~l1 opposite~l1 inefficacious~l1 x00000001 )
( inefficient~l1 opposite~l1 efficient~l1 x00000001 )
( efficient~l1 opposite~l1 inefficient~l1 x00000001 )
( unforceful~l1 opposite~l1 forceful~l1 x00000001 )
( forceful~l1 opposite~l1 unforceful~l1 x00000001 )
( inelastic~l1 opposite~l1 elastic~l1 x00000001 )
( elastic~l1 opposite~l1 inelastic~l1 x00000001 )
( appointive~l1 opposite~l1 elective~l1 x00000001 )
( elective~l1 opposite~l1 appointive~l1 x00000001 )
( unassigned~l1 opposite~l1 assigned~l1 x00000001 )
( assigned~l1 opposite~l1 unassigned~l1 x00000001 )
( obligatory~l1 opposite~l1 optional~l1 x00000001 )
( optional~l1 opposite~l1 obligatory~l1 x00000001 )
( inelegant~l1 opposite~l1 elegant~l1 x00000001 )
( elegant~l1 opposite~l1 inelegant~l1 x00000001 )
( ineligible~l1 opposite~l1 eligible~l1 x00000001 )
( eligible~l1 opposite~l1 ineligible~l1 x00000001 )
( unemotional~l1 opposite~l1 emotional~l1 x00000001 )
( emotional~l1 opposite~l1 unemotional~l1 x00000001 )
( theoretical~l1 opposite~l1 empirical~l1 x00000001 )
( empirical~l1 opposite~l1 theoretical~l1 x00000001 )
( applied~l1 opposite~l1 theoretical~l1 x00000001 )
( theoretical~l1 opposite~l1 applied~l1 x00000001 )
( self-employed~l1 opposite~l1 salaried~l1 x00000001 )
( salaried~l1 opposite~l1 self-employed~l1 x00000001 )
( unemployed~l1 opposite~l1 employed~l1 x00000001 )
( employed~l1 opposite~l1 unemployed~l1 x00000001 )
( unemployable~l1 opposite~l1 employable~l1 x00000001 )
( employable~l1 opposite~l1 unemployable~l1 x00000001 )
( disenchanted~l1 opposite~l1 enchanted~l1 x00000001 )
( enchanted~l1 opposite~l1 disenchanted~l1 x00000001 )
( discouraging~l1 opposite~l1 encouraging~l1 x00000001 )
( encouraging~l1 opposite~l1 discouraging~l1 x00000001 )
( unencumbered~l1 opposite~l1 encumbered~l1 x00000001 )
( encumbered~l1 opposite~l1 unencumbered~l1 x00000001 )
( unburdened~l1 opposite~l1 burdened~l1 x00000001 )
( burdened~l1 opposite~l1 unburdened~l1 x00000001 )
( exocentric~l1 opposite~l1 endocentric~l1 x00000001 )
( endocentric~l1 opposite~l1 exocentric~l1 x00000001 )
( exogamous~l1 opposite~l1 endogamous~l1 x00000001 )
( endogamous~l1 opposite~l1 exogamous~l1 x00000001 )
( endogamous~l1 opposite~l1 autogamous~l1 x00000001 )
( autogamous~l1 opposite~l1 endogamous~l1 x00000001 )
( exogamous~l1 opposite~l1 autogamous~l1 x00000001 )
( autogamous~l1 opposite~l1 exogamous~l1 x00000001 )
( energy-releasing~l1 opposite~l1 energy-absorbing~l1 x00000001 )
( energy-absorbing~l1 opposite~l1 energy-releasing~l1 x00000001 )
( heat-releasing~l1 opposite~l1 heat-absorbing~l1 x00000001 )
( heat-absorbing~l1 opposite~l1 heat-releasing~l1 x00000001 )
( exogenous~l1 opposite~l1 endogenous~l1 x00000001 )
( endogenous~l1 opposite~l1 exogenous~l1 x00000001 )
( run-on~l1 opposite~l1 end-stopped~l1 x00000001 )
( end-stopped~l1 opposite~l1 run-on~l1 x00000001 )
( unenrgetic~l1 opposite~l1 energetic~l1 x00000001 )
( energetic~l1 opposite~l1 unenrgetic~l1 x00000001 )
( disenfranchised~l1 opposite~l1 enfranchised~l1 x00000001 )
( enfranchised~l1 opposite~l1 disenfranchised~l1 x00000001 )
( unexportable~l1 opposite~l1 exportable~l1 x00000001 )
( exportable~l1 opposite~l1 unexportable~l1 x00000001 )
( nonexploratory~l1 opposite~l1 exploratory~l1 x00000001 )
( exploratory~l1 opposite~l1 nonexploratory~l1 x00000001 )
( uninquisitive~l1 opposite~l1 inquiring~l1 x00000001 )
( inquiring~l1 opposite~l1 uninquisitive~l1 x00000001 )
( decreased~l1 opposite~l1 increased~l1 x00000001 )
( increased~l1 opposite~l1 decreased~l1 x00000001 )
( irreducible~l1 opposite~l1 reducible~l1 x00000001 )
( reducible~l1 opposite~l1 irreducible~l1 x00000001 )
( unenlightened~l1 opposite~l1 enlightened~l1 x00000001 )
( enlightened~l1 opposite~l1 unenlightened~l1 x00000001 )
( nonenterprising~l1 opposite~l1 enterprising~l1 x00000001 )
( enterprising~l1 opposite~l1 nonenterprising~l1 x00000001 )
( unenthusiastic~l1 opposite~l1 enthusiastic~l1 x00000001 )
( enthusiastic~l1 opposite~l1 unenthusiastic~l1 x00000001 )
( undesirous~l1 opposite~l1 desirous~l1 x00000001 )
( desirous~l1 opposite~l1 undesirous~l1 x00000001 )
( epizoic~l1 opposite~l1 entozoic~l1 x00000001 )
( entozoic~l1 opposite~l1 epizoic~l1 x00000001 )
( unequal~l1 opposite~l1 equal~l1 x00000001 )
( equal~l1 opposite~l1 unequal~l1 x00000001 )
( unbalanced~l1 opposite~l1 balanced~l1 x00000001 )
( balanced~l1 opposite~l1 unbalanced~l1 x00000001 )
( hypertonic~l1 opposite~l1 isosmotic~l1 x00000001 )
( isosmotic~l1 opposite~l1 hypertonic~l1 x00000001 )
( hypotonic~l1 opposite~l1 isosmotic~l1 x00000001 )
( isosmotic~l1 opposite~l1 hypotonic~l1 x00000001 )
( hypotonic~l1 opposite~l1 hypertonic~l1 x00000001 )
( hypertonic~l1 opposite~l1 hypotonic~l1 x00000001 )
( unequivocal~l1 opposite~l1 equivocal~l1 x00000001 )
( equivocal~l1 opposite~l1 unequivocal~l1 x00000001 )
( ineradicable~l1 opposite~l1 eradicable~l1 x00000001 )
( eradicable~l1 opposite~l1 ineradicable~l1 x00000001 )
( exoteric~l1 opposite~l1 esoteric~l1 x00000001 )
( esoteric~l1 opposite~l1 exoteric~l1 x00000001 )
( inessential~l1 opposite~l1 essential~l1 x00000001 )
( essential~l1 opposite~l1 inessential~l1 x00000001 )
( indispensable~l1 opposite~l1 dispensable~l1 x00000001 )
( dispensable~l1 opposite~l1 indispensable~l1 x00000001 )
( contemptible~l1 opposite~l1 estimable~l1 x00000001 )
( estimable~l1 opposite~l1 contemptible~l1 x00000001 )
( unethical~l1 opposite~l1 ethical~l1 x00000001 )
( ethical~l1 opposite~l1 unethical~l1 x00000001 )
( uncomplimentary~l1 opposite~l1 complimentary~l1 x00000001 )
( complimentary~l1 opposite~l1 uncomplimentary~l1 x00000001 )
( uncomplimentary~l1 opposite~l1 flattering~l1 x00000001 )
( flattering~l1 opposite~l1 uncomplimentary~l1 x00000001 )
( dysphemistic~l1 opposite~l1 euphemistic~l1 x00000001 )
( euphemistic~l1 opposite~l1 dysphemistic~l1 x00000001 )
( distressed~l1 opposite~l1 euphoric~l1 x00000001 )
( euphoric~l1 opposite~l1 distressed~l1 x00000001 )
( uneven~l1 opposite~l1 even~l1 x00000001 )
( even~l1 opposite~l1 uneven~l1 x00000001 )
( deciduous~l1 opposite~l1 evergreen~l1 x00000001 )
( evergreen~l1 opposite~l1 deciduous~l1 x00000001 )
( inexact~l1 opposite~l1 exact~l1 x00000001 )
( exact~l1 opposite~l1 inexact~l1 x00000001 )
( unexchangeable~l1 opposite~l1 exchangeable~l1 x00000001 )
( exchangeable~l1 opposite~l1 unexchangeable~l1 x00000001 )
( unexcitable~l1 opposite~l1 excitable~l1 x00000001 )
( excitable~l1 opposite~l1 unexcitable~l1 x00000001 )
( unexcited~l1 opposite~l1 excited~l1 x00000001 )
( excited~l1 opposite~l1 unexcited~l1 x00000001 )
( unexciting~l1 opposite~l1 exciting~l1 x00000001 )
( exciting~l1 opposite~l1 unexciting~l1 x00000001 )
( inculpatory~l1 opposite~l1 exculpatory~l1 x00000001 )
( exculpatory~l1 opposite~l1 inculpatory~l1 x00000001 )
( inexhaustible~l1 opposite~l1 exhaustible~l1 x00000001 )
( exhaustible~l1 opposite~l1 inexhaustible~l1 x00000001 )
( unexhausted~l1 opposite~l1 exhausted~l1 x00000001 )
( exhausted~l1 opposite~l1 unexhausted~l1 x00000001 )
( nonexistent~l1 opposite~l1 existent~l1 x00000001 )
( existent~l1 opposite~l1 nonexistent~l1 x00000001 )
( nonextant~l1 opposite~l1 extant~l1 x00000001 )
( extant~l1 opposite~l1 nonextant~l1 x00000001 )
( unexpected~l1 opposite~l1 expected~l1 x00000001 )
( expected~l1 opposite~l1 unexpected~l1 x00000001 )
( inexpedient~l1 opposite~l1 expedient~l1 x00000001 )
( expedient~l1 opposite~l1 inexpedient~l1 x00000001 )
( unexpendable~l1 opposite~l1 expendable~l1 x00000001 )
( expendable~l1 opposite~l1 unexpendable~l1 x00000001 )
( inexpensive~l1 opposite~l1 expensive~l1 x00000001 )
( expensive~l1 opposite~l1 inexpensive~l1 x00000001 )
( inexperienced~l1 opposite~l1 experienced~l1 x00000001 )
( experienced~l1 opposite~l1 inexperienced~l1 x00000001 )
( unexpired~l1 opposite~l1 expired~l1 x00000001 )
( expired~l1 opposite~l1 unexpired~l1 x00000001 )
( incomprehensible~l1 opposite~l1 explicable~l1 x00000001 )
( explicable~l1 opposite~l1 incomprehensible~l1 x00000001 )
( inexplicit~l1 opposite~l1 expressed~l1 x00000001 )
( expressed~l1 opposite~l1 inexplicit~l1 x00000001 )
( unexploited~l1 opposite~l1 exploited~l1 x00000001 )
( exploited~l1 opposite~l1 unexploited~l1 x00000001 )
( inexpressible~l1 opposite~l1 expressible~l1 x00000001 )
( expressible~l1 opposite~l1 inexpressible~l1 x00000001 )
( nonprotractile~l1 opposite~l1 extensible~l1 x00000001 )
( extensible~l1 opposite~l1 nonprotractile~l1 x00000001 )
( inextricable~l1 opposite~l1 extricable~l1 x00000001 )
( extricable~l1 opposite~l1 inextricable~l1 x00000001 )
( plucked~l1 opposite~l1 bowed~l1 x00000001 )
( bowed~l1 opposite~l1 plucked~l1 x00000001 )
( fingerless~l1 opposite~l1 fingered~l1 x00000001 )
( fingered~l1 opposite~l1 fingerless~l1 x00000001 )
( unexpansive~l1 opposite~l1 expansive~l1 x00000001 )
( expansive~l1 opposite~l1 unexpansive~l1 x00000001 )
( inextinguishable~l1 opposite~l1 extinguishable~l1 x00000001 )
( extinguishable~l1 opposite~l1 inextinguishable~l1 x00000001 )
( internal~l1 opposite~l1 external~l1 x00000001 )
( external~l1 opposite~l1 internal~l1 x00000001 )
( inner~l1 opposite~l1 outer~l1 x00000001 )
( outer~l1 opposite~l1 inner~l1 x00000001 )
( inward~l1 opposite~l1 outward~l1 x00000001 )
( outward~l1 opposite~l1 inward~l1 x00000001 )
( eyeless~l1 opposite~l1 eyed~l1 x00000001 )
( eyed~l1 opposite~l1 eyeless~l1 x00000001 )
( unplayable~l1 opposite~l1 playable~l1 x00000001 )
( playable~l1 opposite~l1 unplayable~l1 x00000001 )
( foul~l1 opposite~l1 fair~l1 x00000001 )
( fair~l1 opposite~l1 foul~l1 x00000001 )
( unfair~l1 opposite~l1 fair~l1 x00000001 )
( fair~l1 opposite~l1 unfair~l1 x00000001 )
( inequitable~l1 opposite~l1 equitable~l1 x00000001 )
( equitable~l1 opposite~l1 inequitable~l1 x00000001 )
( unfaithful~l1 opposite~l1 faithful~l1 x00000001 )
( faithful~l1 opposite~l1 unfaithful~l1 x00000001 )
( disloyal~l1 opposite~l1 loyal~l1 x00000001 )
( loyal~l1 opposite~l1 disloyal~l1 x00000001 )
( infallible~l1 opposite~l1 fallible~l1 x00000001 )
( fallible~l1 opposite~l1 infallible~l1 x00000001 )
( unfamiliar~l1 opposite~l1 familiar~l1 x00000001 )
( familiar~l1 opposite~l1 unfamiliar~l1 x00000001 )
( familiar~l1 opposite~l1 strange~l1 x00000001 )
( strange~l1 opposite~l1 familiar~l1 x00000001 )
( unfashionable~l1 opposite~l1 fashionable~l1 x00000001 )
( fashionable~l1 opposite~l1 unfashionable~l1 x00000001 )
( styleless~l1 opposite~l1 fashionable~l1 x00000001 )
( fashionable~l1 opposite~l1 styleless~l1 x00000001 )
( slow~l1 opposite~l1 fast~l1 x00000001 )
( fast~l1 opposite~l1 slow~l1 x00000001 )
( unfastidious~l1 opposite~l1 fastidious~l1 x00000001 )
( fastidious~l1 opposite~l1 unfastidious~l1 x00000001 )
( thin~l1 opposite~l1 fat~l1 x00000001 )
( fat~l1 opposite~l1 thin~l1 x00000001 )
( fat-free~l1 opposite~l1 fatty~l1 x00000001 )
( fatty~l1 opposite~l1 fat-free~l1 x00000001 )
( nonfatal~l1 opposite~l1 fatal~l1 x00000001 )
( fatal~l1 opposite~l1 nonfatal~l1 x00000001 )
( incurable~l1 opposite~l1 curable~l1 x00000001 )
( curable~l1 opposite~l1 incurable~l1 x00000001 )
( unfathomable~l1 opposite~l1 fathomable~l1 x00000001 )
( fathomable~l1 opposite~l1 unfathomable~l1 x00000001 )
( unfavourable~l1 opposite~l1 favourable~l1 x00000001 )
( favourable~l1 opposite~l1 unfavourable~l1 x00000001 )
( unfeathered~l1 opposite~l1 feathered~l1 x00000001 )
( feathered~l1 opposite~l1 unfeathered~l1 x00000001 )
( infelicitous~l1 opposite~l1 felicitous~l1 x00000001 )
( felicitous~l1 opposite~l1 infelicitous~l1 x00000001 )
( unfertile~l1 opposite~l1 fertile~l1 x00000001 )
( fertile~l1 opposite~l1 unfertile~l1 x00000001 )
( unfinished~l1 opposite~l1 finished~l1 x00000001 )
( finished~l1 opposite~l1 unfinished~l1 x00000001 )
( infinite~l1 opposite~l1 finite~l1 x00000001 )
( finite~l1 opposite~l1 infinite~l1 x00000001 )
( non-finite~l1 opposite~l1 finite~l1 x00000001 )
( finite~l1 opposite~l1 non-finite~l1 x00000001 )
( closing~l1 opposite~l1 opening~l1 x00000001 )
( opening~l1 opposite~l1 closing~l1 x00000001 )
( last~l1 opposite~l1 first~l1 x00000001 )
( first~l1 opposite~l1 last~l1 x00000001 )
( terminal~l1 opposite~l1 intermediate~l1 x00000001 )
( intermediate~l1 opposite~l1 terminal~l1 x00000001 )
( second~l1 opposite~l1 first~l1 x00000001 )
( first~l1 opposite~l1 second~l1 x00000001 )
( nonfissile~l1 opposite~l1 fissile~l1 x00000001 )
( fissile~l1 opposite~l1 nonfissile~l1 x00000001 )
( nonfissionable~l1 opposite~l1 fissionable~l1 x00000001 )
( fissionable~l1 opposite~l1 nonfissionable~l1 x00000001 )
( unfit~l1 opposite~l1 fit~l1 x00000001 )
( fit~l1 opposite~l1 unfit~l1 x00000001 )
( contrasty~l1 opposite~l1 flat~l1 x00000001 )
( flat~l1 opposite~l1 contrasty~l1 x00000001 )
( inflexible~l1 opposite~l1 flexible~l1 x00000001 )
( flexible~l1 opposite~l1 inflexible~l1 x00000001 )
( compromising~l1 opposite~l1 uncompromising~l1 x00000001 )
( uncompromising~l1 opposite~l1 compromising~l1 x00000001 )
( nonrigid~l1 opposite~l1 rigid~l1 x00000001 )
( rigid~l1 opposite~l1 nonrigid~l1 x00000001 )
( unadaptable~l1 opposite~l1 adaptable~l1 x00000001 )
( adaptable~l1 opposite~l1 unadaptable~l1 x00000001 )
( orthotropous~l1 opposite~l1 campylotropous~l1 x00000001 )
( campylotropous~l1 opposite~l1 orthotropous~l1 x00000001 )
( amphitropous~l1 opposite~l1 anatropous~l1 x00000001 )
( anatropous~l1 opposite~l1 amphitropous~l1 x00000001 )
( straight~l1 opposite~l1 curly~l1 x00000001 )
( curly~l1 opposite~l1 straight~l1 x00000001 )
( footless~l1 opposite~l1 footed~l1 x00000001 )
( footed~l1 opposite~l1 footless~l1 x00000001 )
( toeless~l1 opposite~l1 toed~l1 x00000001 )
( toed~l1 opposite~l1 toeless~l1 x00000001 )
( splayfooted~l1 opposite~l1 pigeon-toed~l1 x00000001 )
( pigeon-toed~l1 opposite~l1 splayfooted~l1 x00000001 )
( aft~l1 opposite~l1 fore~l1 x00000001 )
( fore~l1 opposite~l1 aft~l1 x00000001 )
( backhanded~l1 opposite~l1 forehanded~l1 x00000001 )
( forehanded~l1 opposite~l1 backhanded~l1 x00000001 )
( adoptive~l1 opposite~l1 native~l1 x00000001 )
( native~l1 opposite~l1 adoptive~l1 x00000001 )
( native~l1 opposite~l1 foreign~l1 x00000001 )
( foreign~l1 opposite~l1 native~l1 x00000001 )
( nonnative~l1 opposite~l1 aboriginal~l1 x00000001 )
( aboriginal~l1 opposite~l1 nonnative~l1 x00000001 )
( domestic~l1 opposite~l1 foreign~l1 x00000001 )
( foreign~l1 opposite~l1 domestic~l1 x00000001 )
( undomestic~l1 opposite~l1 domestic~l1 x00000001 )
( domestic~l1 opposite~l1 undomestic~l1 x00000001 )
( unforgettable~l1 opposite~l1 forgettable~l1 x00000001 )
( forgettable~l1 opposite~l1 unforgettable~l1 x00000001 )
( unforgiving~l1 opposite~l1 forgiving~l1 x00000001 )
( forgiving~l1 opposite~l1 unforgiving~l1 x00000001 )
( informal~l1 opposite~l1 formal~l1 x00000001 )
( formal~l1 opposite~l1 informal~l1 x00000001 )
( unfortunate~l1 opposite~l1 fortunate~l1 x00000001 )
( fortunate~l1 opposite~l1 unfortunate~l1 x00000001 )
( unpleasant-smelling~l1 opposite~l1 fragrant~l1 x00000001 )
( fragrant~l1 opposite~l1 unpleasant-smelling~l1 x00000001 )
( odourless~l1 opposite~l1 odorous~l1 x00000001 )
( odorous~l1 opposite~l1 odourless~l1 x00000001 )
( scentless~l1 opposite~l1 scented~l1 x00000001 )
( scented~l1 opposite~l1 scentless~l1 x00000001 )
( bound~l1 opposite~l1 free~l1 x00000001 )
( free~l1 opposite~l1 bound~l1 x00000001 )
( unfixed~l1 opposite~l1 fixed~l1 x00000001 )
( fixed~l1 opposite~l1 unfixed~l1 x00000001 )
( unfree~l1 opposite~l1 free~l1 x00000001 )
( free~l1 opposite~l1 unfree~l1 x00000001 )
( infrequent~l1 opposite~l1 frequent~l1 x00000001 )
( frequent~l1 opposite~l1 infrequent~l1 x00000001 )
( stale~l1 opposite~l1 fresh~l1 x00000001 )
( fresh~l1 opposite~l1 stale~l1 x00000001 )
( preserved~l1 opposite~l1 fresh~l1 x00000001 )
( fresh~l1 opposite~l1 preserved~l1 x00000001 )
( salty~l1 opposite~l1 fresh~l1 x00000001 )
( fresh~l1 opposite~l1 salty~l1 x00000001 )
( unfriendly~l1 opposite~l1 friendly~l1 x00000001 )
( friendly~l1 opposite~l1 unfriendly~l1 x00000001 )
( unfrozen~l1 opposite~l1 frozen~l1 x00000001 )
( frozen~l1 opposite~l1 unfrozen~l1 x00000001 )
( unfruitful~l1 opposite~l1 fruitful~l1 x00000001 )
( fruitful~l1 opposite~l1 unfruitful~l1 x00000001 )
( empty~l1 opposite~l1 full~l1 x00000001 )
( full~l1 opposite~l1 empty~l1 x00000001 )
( undrained~l1 opposite~l1 drained~l1 x00000001 )
( drained~l1 opposite~l1 undrained~l1 x00000001 )
( part-time~l1 opposite~l1 full-time~l1 x00000001 )
( full-time~l1 opposite~l1 part-time~l1 x00000001 )
( nonfunctional~l1 opposite~l1 functional~l1 x00000001 )
( functional~l1 opposite~l1 nonfunctional~l1 x00000001 )
( malfunctioning~l1 opposite~l1 functioning~l1 x00000001 )
( functioning~l1 opposite~l1 malfunctioning~l1 x00000001 )
( organic~l1 opposite~l1 functional~l1 x00000001 )
( functional~l1 opposite~l1 organic~l1 x00000001 )
( unrigged~l1 opposite~l1 rigged~l1 x00000001 )
( rigged~l1 opposite~l1 unrigged~l1 x00000001 )
( unequipped~l1 opposite~l1 equipped~l1 x00000001 )
( equipped~l1 opposite~l1 unequipped~l1 x00000001 )
( unfledged~l1 opposite~l1 fledged~l1 x00000001 )
( fledged~l1 opposite~l1 unfledged~l1 x00000001 )
( unframed~l1 opposite~l1 framed~l1 x00000001 )
( framed~l1 opposite~l1 unframed~l1 x00000001 )
( unfurnished~l1 opposite~l1 furnished~l1 x00000001 )
( furnished~l1 opposite~l1 unfurnished~l1 x00000001 )
( unfunded~l1 opposite~l1 funded~l1 x00000001 )
( funded~l1 opposite~l1 unfunded~l1 x00000001 )
( unfueled~l1 opposite~l1 fueled~l1 x00000001 )
( fueled~l1 opposite~l1 unfueled~l1 x00000001 )
( unspecified~l1 opposite~l1 specified~l1 x00000001 )
( specified~l1 opposite~l1 unspecified~l1 x00000001 )
( ungeared~l1 opposite~l1 geared~l1 x00000001 )
( geared~l1 opposite~l1 ungeared~l1 x00000001 )
( specific~l1 opposite~l1 general~l1 x00000001 )
( general~l1 opposite~l1 specific~l1 x00000001 )
( nonspecific~l1 opposite~l1 specific~l1 x00000001 )
( specific~l1 opposite~l1 nonspecific~l1 x00000001 )
( local~l1 opposite~l1 national~l1 x00000001 )
( national~l1 opposite~l1 local~l1 x00000001 )
( endemic~l1 opposite~l1 widely_distributed~l1 x00000001 )
( widely_distributed~l1 opposite~l1 endemic~l1 x00000001 )
( abranchiate~l1 opposite~l1 branchiate~l1 x00000001 )
( branchiate~l1 opposite~l1 abranchiate~l1 x00000001 )
( unitary~l1 opposite~l1 federal~l1 x00000001 )
( federal~l1 opposite~l1 unitary~l1 x00000001 )
( decentralized~l1 opposite~l1 centralized~l1 x00000001 )
( centralized~l1 opposite~l1 decentralized~l1 x00000001 )
( nontechnical~l1 opposite~l1 technical~l1 x00000001 )
( technical~l1 opposite~l1 nontechnical~l1 x00000001 )
( proprietary~l1 opposite~l1 nonproprietary~l1 x00000001 )
( nonproprietary~l1 opposite~l1 proprietary~l1 x00000001 )
( ungenerous~l1 opposite~l1 generous~l1 x00000001 )
( generous~l1 opposite~l1 ungenerous~l1 x00000001 )
( meanspirited~l1 opposite~l1 generous~l1 x00000001 )
( generous~l1 opposite~l1 meanspirited~l1 x00000001 )
( counterfeit~l1 opposite~l1 genuine~l1 x00000001 )
( genuine~l1 opposite~l1 counterfeit~l1 x00000001 )
( heliocentric~l1 opposite~l1 geocentric~l1 x00000001 )
( geocentric~l1 opposite~l1 heliocentric~l1 x00000001 )
( untalented~l1 opposite~l1 talented~l1 x00000001 )
( talented~l1 opposite~l1 untalented~l1 x00000001 )
( unglazed~l1 opposite~l1 glazed~l1 x00000001 )
( glazed~l1 opposite~l1 unglazed~l1 x00000001 )
( glassless~l1 opposite~l1 glassed~l1 x00000001 )
( glassed~l1 opposite~l1 glassless~l1 x00000001 )
( inglorious~l1 opposite~l1 glorious~l1 x00000001 )
( glorious~l1 opposite~l1 inglorious~l1 x00000001 )
( no-go~l1 opposite~l1 go~l1 x00000001 )
( go~l1 opposite~l1 no-go~l1 x00000001 )
( bad~l1 opposite~l1 good~l1 x00000001 )
( good~l1 opposite~l1 bad~l1 x00000001 )
( evil~l1 opposite~l1 good~l1 x00000001 )
( good~l1 opposite~l1 evil~l1 x00000001 )
( ill-natured~l1 opposite~l1 good-natured~l1 x00000001 )
( good-natured~l1 opposite~l1 ill-natured~l1 x00000001 )
( awkward~l1 opposite~l1 graceful~l1 x00000001 )
( graceful~l1 opposite~l1 awkward~l1 x00000001 )
( ungracious~l1 opposite~l1 gracious~l1 x00000001 )
( gracious~l1 opposite~l1 ungracious~l1 x00000001 )
( sudden~l1 opposite~l1 gradual~l1 x00000001 )
( gradual~l1 opposite~l1 sudden~l1 x00000001 )
( steep~l1 opposite~l1 gradual~l1 x00000001 )
( gradual~l1 opposite~l1 steep~l1 x00000001 )
( ungrammatical~l1 opposite~l1 grammatical~l1 x00000001 )
( grammatical~l1 opposite~l1 ungrammatical~l1 x00000001 )
( ungrateful~l1 opposite~l1 grateful~l1 x00000001 )
( grateful~l1 opposite~l1 ungrateful~l1 x00000001 )
( diploid~l1 opposite~l1 haploidic~l1 x00000001 )
( haploidic~l1 opposite~l1 diploid~l1 x00000001 )
( polyploid~l1 opposite~l1 haploidic~l1 x00000001 )
( haploidic~l1 opposite~l1 polyploid~l1 x00000001 )
( polyploid~l1 opposite~l1 diploid~l1 x00000001 )
( diploid~l1 opposite~l1 polyploid~l1 x00000001 )
( unhappy~l1 opposite~l1 happy~l1 x00000001 )
( happy~l1 opposite~l1 unhappy~l1 x00000001 )
( unregretting~l1 opposite~l1 regretful~l1 x00000001 )
( regretful~l1 opposite~l1 unregretting~l1 x00000001 )
( soft~l1 opposite~l1 hard~l1 x00000001 )
( hard~l1 opposite~l1 soft~l1 x00000001 )
( diffused~l1 opposite~l1 concentrated~l1 x00000001 )
( concentrated~l1 opposite~l1 diffused~l1 x00000001 )
( softhearted~l1 opposite~l1 hardhearted~l1 x00000001 )
( hardhearted~l1 opposite~l1 softhearted~l1 x00000001 )
( nonalcoholic~l1 opposite~l1 alcoholic~l1 x00000001 )
( alcoholic~l1 opposite~l1 nonalcoholic~l1 x00000001 )
( harmful~l1 opposite~l1 harmless~l1 x00000001 )
( harmless~l1 opposite~l1 harmful~l1 x00000001 )
( inharmonious~l1 opposite~l1 harmonious~l1 x00000001 )
( harmonious~l1 opposite~l1 inharmonious~l1 x00000001 )
( unhealthful~l1 opposite~l1 healthful~l1 x00000001 )
( healthful~l1 opposite~l1 unhealthful~l1 x00000001 )
( operative~l1 opposite~l1 medical~l1 x00000001 )
( medical~l1 opposite~l1 operative~l1 x00000001 )
( inoperable~l1 opposite~l1 operable~l1 x00000001 )
( operable~l1 opposite~l1 inoperable~l1 x00000001 )
( antipyretic~l1 opposite~l1 pyretic~l1 x00000001 )
( pyretic~l1 opposite~l1 antipyretic~l1 x00000001 )
( unhealthy~l1 opposite~l1 healthy~l1 x00000001 )
( healthy~l1 opposite~l1 unhealthy~l1 x00000001 )
( phlegmy~l1 opposite~l1 dry~l1 x00000001 )
( dry~l1 opposite~l1 phlegmy~l1 x00000001 )
( earthly~l1 opposite~l1 heavenly~l1 x00000001 )
( heavenly~l1 opposite~l1 earthly~l1 x00000001 )
( indigestible~l1 opposite~l1 digestible~l1 x00000001 )
( digestible~l1 opposite~l1 indigestible~l1 x00000001 )
( headless~l1 opposite~l1 headed~l1 x00000001 )
( headed~l1 opposite~l1 headless~l1 x00000001 )
( unheaded~l1 opposite~l1 headed~l1 x00000001 )
( headed~l1 opposite~l1 unheaded~l1 x00000001 )
( light~l1 opposite~l1 heavy~l1 x00000001 )
( heavy~l1 opposite~l1 light~l1 x00000001 )
( weightless~l1 opposite~l1 weighty~l1 x00000001 )
( weighty~l1 opposite~l1 weightless~l1 x00000001 )
( heavy-duty~l1 opposite~l1 light-duty~l1 x00000001 )
( light-duty~l1 opposite~l1 heavy-duty~l1 x00000001 )
( heavy-footed~l1 opposite~l1 light-footed~l1 x00000001 )
( light-footed~l1 opposite~l1 heavy-footed~l1 x00000001 )
( paying_attention~l1 opposite~l1 unheeding~l1 x00000001 )
( unheeding~l1 opposite~l1 paying_attention~l1 x00000001 )
( disqualifying~l1 opposite~l1 enabling~l1 x00000001 )
( enabling~l1 opposite~l1 disqualifying~l1 x00000001 )
( unhelpful~l1 opposite~l1 helpful~l1 x00000001 )
( helpful~l1 opposite~l1 unhelpful~l1 x00000001 )
( zygodactyl~l1 opposite~l1 heterodactyl~l1 x00000001 )
( heterodactyl~l1 opposite~l1 zygodactyl~l1 x00000001 )
( homogeneous~l1 opposite~l1 heterogeneous~l1 x00000001 )
( heterogeneous~l1 opposite~l1 homogeneous~l1 x00000001 )
( heterozygous~l1 opposite~l1 homozygous~l1 x00000001 )
( homozygous~l1 opposite~l1 heterozygous~l1 x00000001 )
( homosexual~l1 opposite~l1 heterosexual~l1 x00000001 )
( heterosexual~l1 opposite~l1 homosexual~l1 x00000001 )
( bisexual~l1 opposite~l1 heterosexual~l1 x00000001 )
( heterosexual~l1 opposite~l1 bisexual~l1 x00000001 )
( bisexual~l1 opposite~l1 homosexual~l1 x00000001 )
( homosexual~l1 opposite~l1 bisexual~l1 x00000001 )
( nonhierarchical~l1 opposite~l1 hierarchical~l1 x00000001 )
( hierarchical~l1 opposite~l1 nonhierarchical~l1 x00000001 )
( lowered~l1 opposite~l1 raised~l1 x00000001 )
( raised~l1 opposite~l1 lowered~l1 x00000001 )
( low-tech~l1 opposite~l1 high-tech~l1 x00000001 )
( high-tech~l1 opposite~l1 low-tech~l1 x00000001 )
( neckless~l1 opposite~l1 necked~l1 x00000001 )
( necked~l1 opposite~l1 neckless~l1 x00000001 )
( floored~l1 opposite~l1 ceilinged~l1 x00000001 )
( ceilinged~l1 opposite~l1 floored~l1 x00000001 )
( high-sudsing~l1 opposite~l1 low-sudsing~l1 x00000001 )
( low-sudsing~l1 opposite~l1 high-sudsing~l1 x00000001 )
( high-interest~l1 opposite~l1 low-interest~l1 x00000001 )
( low-interest~l1 opposite~l1 high-interest~l1 x00000001 )
( low-pitched~l1 opposite~l1 high-pitched~l1 x00000001 )
( high-pitched~l1 opposite~l1 low-pitched~l1 x00000001 )
( nonimitative~l1 opposite~l1 imitative~l1 x00000001 )
( imitative~l1 opposite~l1 nonimitative~l1 x00000001 )
( nonechoic~l1 opposite~l1 onomatopoeical~l1 x00000001 )
( onomatopoeical~l1 opposite~l1 nonechoic~l1 x00000001 )
( low-resolution~l1 opposite~l1 high-resolution~l1 x00000001 )
( high-resolution~l1 opposite~l1 low-resolution~l1 x00000001 )
( low-rise~l1 opposite~l1 high-rise~l1 x00000001 )
( high-rise~l1 opposite~l1 low-rise~l1 x00000001 )
( away~l1 opposite~l1 home~l1 x00000001 )
( home~l1 opposite~l1 away~l1 x00000001 )
( heterologous~l1 opposite~l1 homologous~l1 x00000001 )
( homologous~l1 opposite~l1 heterologous~l1 x00000001 )
( autologous~l1 opposite~l1 homologous~l1 x00000001 )
( homologous~l1 opposite~l1 autologous~l1 x00000001 )
( autologous~l1 opposite~l1 heterologous~l1 x00000001 )
( heterologous~l1 opposite~l1 autologous~l1 x00000001 )
( analogous~l1 opposite~l1 homologous~l1 x00000001 )
( homologous~l1 opposite~l1 analogous~l1 x00000001 )
( heterological~l1 opposite~l1 homologous~l1 x00000001 )
( homologous~l1 opposite~l1 heterological~l1 x00000001 )
( analogous~l1 opposite~l1 heterological~l1 x00000001 )
( heterological~l1 opposite~l1 analogous~l1 x00000001 )
( hipped~l1 opposite~l1 gabled~l1 x00000001 )
( gabled~l1 opposite~l1 hipped~l1 x00000001 )
( hipless~l1 opposite~l1 hipped~l1 x00000001 )
( hipped~l1 opposite~l1 hipless~l1 x00000001 )
( dishonorable~l1 opposite~l1 honorable~l1 x00000001 )
( honorable~l1 opposite~l1 dishonorable~l1 x00000001 )
( untruthful~l1 opposite~l1 truthful~l1 x00000001 )
( truthful~l1 opposite~l1 untruthful~l1 x00000001 )
( dishonourable~l1 opposite~l1 honourable~l1 x00000001 )
( honourable~l1 opposite~l1 dishonourable~l1 x00000001 )
( hopeless~l1 opposite~l1 hopeful~l1 x00000001 )
( hopeful~l1 opposite~l1 hopeless~l1 x00000001 )
( noninstitutionalized~l1 opposite~l1 institutionalized~l1 x00000001 )
( institutionalized~l1 opposite~l1 noninstitutionalized~l1 x00000001 )
( noninstitutional~l1 opposite~l1 institutional~l1 x00000001 )
( institutional~l1 opposite~l1 noninstitutional~l1 x00000001 )
( de-iodinating~l1 opposite~l1 iodinating~l1 x00000001 )
( iodinating~l1 opposite~l1 de-iodinating~l1 x00000001 )
( inconsolable~l1 opposite~l1 consolable~l1 x00000001 )
( consolable~l1 opposite~l1 inconsolable~l1 x00000001 )
( perpendicular~l1 opposite~l1 horizontal~l1 x00000001 )
( horizontal~l1 opposite~l1 perpendicular~l1 x00000001 )
( inclined~l1 opposite~l1 horizontal~l1 x00000001 )
( horizontal~l1 opposite~l1 inclined~l1 x00000001 )
( inclined~l1 opposite~l1 perpendicular~l1 x00000001 )
( perpendicular~l1 opposite~l1 inclined~l1 x00000001 )
( unerect~l1 opposite~l1 vertical~l1 x00000001 )
( vertical~l1 opposite~l1 unerect~l1 x00000001 )
( sitting~l1 opposite~l1 standing~l1 x00000001 )
( standing~l1 opposite~l1 sitting~l1 x00000001 )
( running~l1 opposite~l1 standing~l1 x00000001 )
( standing~l1 opposite~l1 running~l1 x00000001 )
( passing~l1 opposite~l1 running~l1 x00000001 )
( running~l1 opposite~l1 passing~l1 x00000001 )
( inhospitable~l1 opposite~l1 hospitable~l1 x00000001 )
( hospitable~l1 opposite~l1 inhospitable~l1 x00000001 )
( amicable~l1 opposite~l1 hostile~l1 x00000001 )
( hostile~l1 opposite~l1 amicable~l1 x00000001 )
( cold~l1 opposite~l1 hot~l1 x00000001 )
( hot~l1 opposite~l1 cold~l1 x00000001 )
( summery~l1 opposite~l1 vernal~l1 x00000001 )
( vernal~l1 opposite~l1 summery~l1 x00000001 )
( autumnal~l1 opposite~l1 vernal~l1 x00000001 )
( vernal~l1 opposite~l1 autumnal~l1 x00000001 )
( wintery~l1 opposite~l1 vernal~l1 x00000001 )
( vernal~l1 opposite~l1 wintery~l1 x00000001 )
( autumnal~l1 opposite~l1 summery~l1 x00000001 )
( summery~l1 opposite~l1 autumnal~l1 x00000001 )
( wintery~l1 opposite~l1 summery~l1 x00000001 )
( summery~l1 opposite~l1 wintery~l1 x00000001 )
( wintery~l1 opposite~l1 autumnal~l1 x00000001 )
( autumnal~l1 opposite~l1 wintery~l1 x00000001 )
( nonhuman~l1 opposite~l1 human~l1 x00000001 )
( human~l1 opposite~l1 nonhuman~l1 x00000001 )
( subhuman~l1 opposite~l1 superhuman~l1 x00000001 )
( superhuman~l1 opposite~l1 subhuman~l1 x00000001 )
( inhumane~l1 opposite~l1 humane~l1 x00000001 )
( humane~l1 opposite~l1 inhumane~l1 x00000001 )
( humourless~l1 opposite~l1 humourous~l1 x00000001 )
( humourous~l1 opposite~l1 humourless~l1 x00000001 )
( thirsty~l1 opposite~l1 hungry~l1 x00000001 )
( hungry~l1 opposite~l1 thirsty~l1 x00000001 )
( unhurried~l1 opposite~l1 hurried~l1 x00000001 )
( hurried~l1 opposite~l1 unhurried~l1 x00000001 )
( unidentifiable~l1 opposite~l1 identifiable~l1 x00000001 )
( identifiable~l1 opposite~l1 unidentifiable~l1 x00000001 )
( transeunt~l1 opposite~l1 subjective~l1 x00000001 )
( subjective~l1 opposite~l1 transeunt~l1 x00000001 )
( unimpaired~l1 opposite~l1 impaired~l1 x00000001 )
( impaired~l1 opposite~l1 unimpaired~l1 x00000001 )
( unimportant~l1 opposite~l1 important~l1 x00000001 )
( important~l1 opposite~l1 unimportant~l1 x00000001 )
( unimpressive~l1 opposite~l1 impressive~l1 x00000001 )
( impressive~l1 opposite~l1 unimpressive~l1 x00000001 )
( unnoticeable~l1 opposite~l1 noticeable~l1 x00000001 )
( noticeable~l1 opposite~l1 unnoticeable~l1 x00000001 )
( unimproved~l1 opposite~l1 improved~l1 x00000001 )
( improved~l1 opposite~l1 unimproved~l1 x00000001 )
( uncleared~l1 opposite~l1 cleared~l1 x00000001 )
( cleared~l1 opposite~l1 uncleared~l1 x00000001 )
( exaugural~l1 opposite~l1 inaugural~l1 x00000001 )
( inaugural~l1 opposite~l1 exaugural~l1 x00000001 )
( outboard~l1 opposite~l1 inboard~l1 x00000001 )
( inboard~l1 opposite~l1 outboard~l1 x00000001 )
( outbred~l1 opposite~l1 inbred~l1 x00000001 )
( inbred~l1 opposite~l1 outbred~l1 x00000001 )
( disinclined~l1 opposite~l1 inclined~l1 x00000001 )
( inclined~l1 opposite~l1 disinclined~l1 x00000001 )
( outgoing~l1 opposite~l1 incoming~l1 x00000001 )
( incoming~l1 opposite~l1 outgoing~l1 x00000001 )
( deductive~l1 opposite~l1 inductive~l1 x00000001 )
( inductive~l1 opposite~l1 deductive~l1 x00000001 )
( nonindulgent~l1 opposite~l1 indulgent~l1 x00000001 )
( indulgent~l1 opposite~l1 nonindulgent~l1 x00000001 )
( nonindustrial~l1 opposite~l1 industrial~l1 x00000001 )
( industrial~l1 opposite~l1 nonindustrial~l1 x00000001 )
( noninfectious~l1 opposite~l1 infectious~l1 x00000001 )
( infectious~l1 opposite~l1 noninfectious~l1 x00000001 )
( supernal~l1 opposite~l1 infernal~l1 x00000001 )
( infernal~l1 opposite~l1 supernal~l1 x00000001 )
( uninformative~l1 opposite~l1 informative~l1 x00000001 )
( informative~l1 opposite~l1 uninformative~l1 x00000001 )
( agnostical~l1 opposite~l1 gnostic~l1 x00000001 )
( gnostic~l1 opposite~l1 agnostical~l1 x00000001 )
( uninformed~l1 opposite~l1 informed~l1 x00000001 )
( informed~l1 opposite~l1 uninformed~l1 x00000001 )
( disingenuous~l1 opposite~l1 ingenuous~l1 x00000001 )
( ingenuous~l1 opposite~l1 disingenuous~l1 x00000001 )
( uninhabited~l1 opposite~l1 inhabited~l1 x00000001 )
( inhabited~l1 opposite~l1 uninhabited~l1 x00000001 )
( noninheritable~l1 opposite~l1 inheritable~l1 x00000001 )
( inheritable~l1 opposite~l1 noninheritable~l1 x00000001 )
( uninhibited~l1 opposite~l1 inhibited~l1 x00000001 )
( inhibited~l1 opposite~l1 uninhibited~l1 x00000001 )
( uninjectable~l1 opposite~l1 injectable~l1 x00000001 )
( injectable~l1 opposite~l1 uninjectable~l1 x00000001 )
( uninjured~l1 opposite~l1 injured~l1 x00000001 )
( injured~l1 opposite~l1 uninjured~l1 x00000001 )
( guilty~l1 opposite~l1 clean-handed~l1 x00000001 )
( clean-handed~l1 opposite~l1 guilty~l1 x00000001 )
( uninspiring~l1 opposite~l1 inspiring~l1 x00000001 )
( inspiring~l1 opposite~l1 uninspiring~l1 x00000001 )
( uninstructive~l1 opposite~l1 instructive~l1 x00000001 )
( instructive~l1 opposite~l1 uninstructive~l1 x00000001 )
( unenlightening~l1 opposite~l1 enlightening~l1 x00000001 )
( enlightening~l1 opposite~l1 unenlightening~l1 x00000001 )
( unintegrated~l1 opposite~l1 integrated~l1 x00000001 )
( integrated~l1 opposite~l1 unintegrated~l1 x00000001 )
( nonintegrated~l1 opposite~l1 integrated~l1 x00000001 )
( integrated~l1 opposite~l1 nonintegrated~l1 x00000001 )
( unblended~l1 opposite~l1 blended~l1 x00000001 )
( blended~l1 opposite~l1 unblended~l1 x00000001 )
( uncombined~l1 opposite~l1 combined~l1 x00000001 )
( combined~l1 opposite~l1 uncombined~l1 x00000001 )
( disintegrative~l1 opposite~l1 integrative~l1 x00000001 )
( integrative~l1 opposite~l1 disintegrative~l1 x00000001 )
( nonintellectual~l1 opposite~l1 intellectual~l1 x00000001 )
( intellectual~l1 opposite~l1 nonintellectual~l1 x00000001 )
( unintelligent~l1 opposite~l1 intelligent~l1 x00000001 )
( intelligent~l1 opposite~l1 unintelligent~l1 x00000001 )
( unintelligible~l1 opposite~l1 intelligible~l1 x00000001 )
( intelligible~l1 opposite~l1 unintelligible~l1 x00000001 )
( unintended~l1 opposite~l1 intended~l1 x00000001 )
( intended~l1 opposite~l1 unintended~l1 x00000001 )
( undesigned~l1 opposite~l1 intentional~l1 x00000001 )
( intentional~l1 opposite~l1 undesigned~l1 x00000001 )
( moderating~l1 opposite~l1 intensifying~l1 x00000001 )
( intensifying~l1 opposite~l1 moderating~l1 x00000001 )
( intraspecific~l1 opposite~l1 interspecific~l1 x00000001 )
( interspecific~l1 opposite~l1 intraspecific~l1 x00000001 )
( uninterested~l1 opposite~l1 interested~l1 x00000001 )
( interested~l1 opposite~l1 uninterested~l1 x00000001 )
( uninteresting~l1 opposite~l1 interesting~l1 x00000001 )
( interesting~l1 opposite~l1 uninteresting~l1 x00000001 )
( extramural~l1 opposite~l1 intramural~l1 x00000001 )
( intramural~l1 opposite~l1 extramural~l1 x00000001 )
( ultra_vires~l1 opposite~l1 intra_vires~l1 x00000001 )
( intra_vires~l1 opposite~l1 ultra_vires~l1 x00000001 )
( extrinsic~l1 opposite~l1 intrinsical~l1 x00000001 )
( intrinsical~l1 opposite~l1 extrinsic~l1 x00000001 )
( extrospective~l1 opposite~l1 self-examining~l1 x00000001 )
( self-examining~l1 opposite~l1 extrospective~l1 x00000001 )
( extroversive~l1 opposite~l1 introversive~l1 x00000001 )
( introversive~l1 opposite~l1 extroversive~l1 x00000001 )
( ambiversive~l1 opposite~l1 introversive~l1 x00000001 )
( introversive~l1 opposite~l1 ambiversive~l1 x00000001 )
( ambiversive~l1 opposite~l1 extroversive~l1 x00000001 )
( extroversive~l1 opposite~l1 ambiversive~l1 x00000001 )
( not_intrusive~l1 opposite~l1 intrusive~l1 x00000001 )
( intrusive~l1 opposite~l1 not_intrusive~l1 x00000001 )
( protrusive~l1 opposite~l1 intrusive~l1 x00000001 )
( intrusive~l1 opposite~l1 protrusive~l1 x00000001 )
( sedimentary~l1 opposite~l1 eruptive~l1 x00000001 )
( eruptive~l1 opposite~l1 sedimentary~l1 x00000001 )
( extrusive~l1 opposite~l1 intrusive~l1 x00000001 )
( intrusive~l1 opposite~l1 extrusive~l1 x00000001 )
( confined~l1 opposite~l1 invasive~l1 x00000001 )
( invasive~l1 opposite~l1 confined~l1 x00000001 )
( noninvasive~l1 opposite~l1 invasive~l1 x00000001 )
( invasive~l1 opposite~l1 noninvasive~l1 x00000001 )
( debilitating~l1 opposite~l1 invigorating~l1 x00000001 )
( invigorating~l1 opposite~l1 debilitating~l1 x00000001 )
( uninviting~l1 opposite~l1 inviting~l1 x00000001 )
( inviting~l1 opposite~l1 uninviting~l1 x00000001 )
( in_vivo~l1 opposite~l1 in_vitro~l1 x00000001 )
( in_vitro~l1 opposite~l1 in_vivo~l1 x00000001 )
( unironed~l1 opposite~l1 ironed~l1 x00000001 )
( ironed~l1 opposite~l1 unironed~l1 x00000001 )
( wrinkleless~l1 opposite~l1 wrinkled~l1 x00000001 )
( wrinkled~l1 opposite~l1 wrinkleless~l1 x00000001 )
( anisotropic~l1 opposite~l1 isotropous~l1 x00000001 )
( isotropous~l1 opposite~l1 anisotropic~l1 x00000001 )
( sad~l1 opposite~l1 glad~l1 x00000001 )
( glad~l1 opposite~l1 sad~l1 x00000001 )
( sorrowful~l1 opposite~l1 joyful~l1 x00000001 )
( joyful~l1 opposite~l1 sorrowful~l1 x00000001 )
( joyless~l1 opposite~l1 joyous~l1 x00000001 )
( joyous~l1 opposite~l1 joyless~l1 x00000001 )
( juiceless~l1 opposite~l1 juicy~l1 x00000001 )
( juicy~l1 opposite~l1 juiceless~l1 x00000001 )
( unjust~l1 opposite~l1 just~l1 x00000001 )
( just~l1 opposite~l1 unjust~l1 x00000001 )
( unmerited~l1 opposite~l1 deserved~l1 x00000001 )
( deserved~l1 opposite~l1 unmerited~l1 x00000001 )
( keyless~l1 opposite~l1 keyed~l1 x00000001 )
( keyed~l1 opposite~l1 keyless~l1 x00000001 )
( unkind~l1 opposite~l1 kind~l1 x00000001 )
( kind~l1 opposite~l1 unkind~l1 x00000001 )
( unknowable~l1 opposite~l1 cognoscible~l1 x00000001 )
( cognoscible~l1 opposite~l1 unknowable~l1 x00000001 )
( unknown~l1 opposite~l1 known~l1 x00000001 )
( known~l1 opposite~l1 unknown~l1 x00000001 )
( ununderstood~l1 opposite~l1 understood~l1 x00000001 )
( understood~l1 opposite~l1 ununderstood~l1 x00000001 )
( unlabelled~l1 opposite~l1 labelled~l1 x00000001 )
( labelled~l1 opposite~l1 unlabelled~l1 x00000001 )
( unlamented~l1 opposite~l1 lamented~l1 x00000001 )
( lamented~l1 opposite~l1 unlamented~l1 x00000001 )
( unlaurelled~l1 opposite~l1 laurelled~l1 x00000001 )
( laurelled~l1 opposite~l1 unlaurelled~l1 x00000001 )
( little~l1 opposite~l1 large~l1 x00000001 )
( large~l1 opposite~l1 little~l1 x00000001 )
( lesser~l1 opposite~l1 greater~l1 x00000001 )
( greater~l1 opposite~l1 lesser~l1 x00000001 )
( unlawful~l1 opposite~l1 lawful~l1 x00000001 )
( lawful~l1 opposite~l1 unlawful~l1 x00000001 )
( unleaded~l1 opposite~l1 leaded~l1 x00000001 )
( leaded~l1 opposite~l1 unleaded~l1 x00000001 )
( tight~l1 opposite~l1 leaky~l1 x00000001 )
( leaky~l1 opposite~l1 tight~l1 x00000001 )
( uncaulked~l1 opposite~l1 caulked~l1 x00000001 )
( caulked~l1 opposite~l1 uncaulked~l1 x00000001 )
( unleavened~l1 opposite~l1 leavened~l1 x00000001 )
( leavened~l1 opposite~l1 unleavened~l1 x00000001 )
( illegal~l1 opposite~l1 legal~l1 x00000001 )
( legal~l1 opposite~l1 illegal~l1 x00000001 )
( illegible~l1 opposite~l1 legible~l1 x00000001 )
( legible~l1 opposite~l1 illegible~l1 x00000001 )
( undeciphered~l1 opposite~l1 deciphered~l1 x00000001 )
( deciphered~l1 opposite~l1 undeciphered~l1 x00000001 )
( adoptive~l1 opposite~l1 biological~l1 x00000001 )
( biological~l1 opposite~l1 adoptive~l1 x00000001 )
( illegitimate~l1 opposite~l1 legitimate~l1 x00000001 )
( legitimate~l1 opposite~l1 illegitimate~l1 x00000001 )
( catarrhinian~l1 opposite~l1 leptorrhinian~l1 x00000001 )
( leptorrhinian~l1 opposite~l1 catarrhinian~l1 x00000001 )
( platyrrhinian~l1 opposite~l1 leptorrhinian~l1 x00000001 )
( leptorrhinian~l1 opposite~l1 platyrrhinian~l1 x00000001 )
( platyrrhinian~l1 opposite~l1 catarrhinian~l1 x00000001 )
( catarrhinian~l1 opposite~l1 platyrrhinian~l1 x00000001 )
( eusporangiate~l1 opposite~l1 leptosporangiate~l1 x00000001 )
( leptosporangiate~l1 opposite~l1 eusporangiate~l1 x00000001 )
( dissimilar~l1 opposite~l1 similar~l1 x00000001 )
( similar~l1 opposite~l1 dissimilar~l1 x00000001 )
( unlike~l1 opposite~l1 like~l1 x00000001 )
( like~l1 opposite~l1 unlike~l1 x00000001 )
( unlikely~l1 opposite~l1 likely~l1 x00000001 )
( likely~l1 opposite~l1 unlikely~l1 x00000001 )
( improbable~l1 opposite~l1 probable~l1 x00000001 )
( probable~l1 opposite~l1 improbable~l1 x00000001 )
( limbless~l1 opposite~l1 limbed~l1 x00000001 )
( limbed~l1 opposite~l1 limbless~l1 x00000001 )
( unlimited~l1 opposite~l1 limited~l1 x00000001 )
( limited~l1 opposite~l1 unlimited~l1 x00000001 )
( collateral~l1 opposite~l1 lineal~l1 x00000001 )
( lineal~l1 opposite~l1 collateral~l1 x00000001 )
( nonlinear~l1 opposite~l1 additive~l1 x00000001 )
( additive~l1 opposite~l1 nonlinear~l1 x00000001 )
( unlined~l1 opposite~l1 lined~l1 x00000001 )
( lined~l1 opposite~l1 unlined~l1 x00000001 )
( unlisted~l1 opposite~l1 listed~l1 x00000001 )
( listed~l1 opposite~l1 unlisted~l1 x00000001 )
( figurative~l1 opposite~l1 literal~l1 x00000001 )
( literal~l1 opposite~l1 figurative~l1 x00000001 )
( illiterate~l1 opposite~l1 literate~l1 x00000001 )
( literate~l1 opposite~l1 illiterate~l1 x00000001 )
( recorded~l1 opposite~l1 unrecorded~l1 x00000001 )
( unrecorded~l1 opposite~l1 recorded~l1 x00000001 )
( unliveable~l1 opposite~l1 liveable~l1 x00000001 )
( liveable~l1 opposite~l1 unliveable~l1 x00000001 )
( unliveried~l1 opposite~l1 liveried~l1 x00000001 )
( liveried~l1 opposite~l1 unliveried~l1 x00000001 )
( unloaded~l1 opposite~l1 loaded~l1 x00000001 )
( loaded~l1 opposite~l1 unloaded~l1 x00000001 )
( loamless~l1 opposite~l1 loamy~l1 x00000001 )
( loamy~l1 opposite~l1 loamless~l1 x00000001 )
( general~l1 opposite~l1 local~l1 x00000001 )
( local~l1 opposite~l1 general~l1 x00000001 )
( endemical~l1 opposite~l1 epidemic~l1 x00000001 )
( epidemic~l1 opposite~l1 endemical~l1 x00000001 )
( ecdemic~l1 opposite~l1 epidemic~l1 x00000001 )
( epidemic~l1 opposite~l1 ecdemic~l1 x00000001 )
( endemical~l1 opposite~l1 ecdemic~l1 x00000001 )
( ecdemic~l1 opposite~l1 endemical~l1 x00000001 )
( gloveless~l1 opposite~l1 gloved~l1 x00000001 )
( gloved~l1 opposite~l1 gloveless~l1 x00000001 )
( hatless~l1 opposite~l1 hatted~l1 x00000001 )
( hatted~l1 opposite~l1 hatless~l1 x00000001 )
( unguided~l1 opposite~l1 guided~l1 x00000001 )
( guided~l1 opposite~l1 unguided~l1 x00000001 )
( legless~l1 opposite~l1 legged~l1 x00000001 )
( legged~l1 opposite~l1 legless~l1 x00000001 )
( illogical~l1 opposite~l1 logical~l1 x00000001 )
( logical~l1 opposite~l1 illogical~l1 x00000001 )
( unextended~l1 opposite~l1 extended~l1 x00000001 )
( extended~l1 opposite~l1 unextended~l1 x00000001 )
( midi~l1 opposite~l1 mini~l1 x00000001 )
( mini~l1 opposite~l1 midi~l1 x00000001 )
( maxi~l1 opposite~l1 mini~l1 x00000001 )
( mini~l1 opposite~l1 maxi~l1 x00000001 )
( maxi~l1 opposite~l1 midi~l1 x00000001 )
( midi~l1 opposite~l1 maxi~l1 x00000001 )
( lossless~l1 opposite~l1 lossy~l1 x00000001 )
( lossy~l1 opposite~l1 lossless~l1 x00000001 )
( short~l1 opposite~l1 long~l1 x00000001 )
( long~l1 opposite~l1 short~l1 x00000001 )
( crosswise~l1 opposite~l1 lengthwise~l1 x00000001 )
( lengthwise~l1 opposite~l1 crosswise~l1 x00000001 )
( lidless~l1 opposite~l1 lidded~l1 x00000001 )
( lidded~l1 opposite~l1 lidless~l1 x00000001 )
( tight~l1 opposite~l1 loose~l1 x00000001 )
( loose~l1 opposite~l1 tight~l1 x00000001 )
( unconstricted~l1 opposite~l1 constricted~l1 x00000001 )
( constricted~l1 opposite~l1 unconstricted~l1 x00000001 )
( found~l1 opposite~l1 lost~l1 x00000001 )
( lost~l1 opposite~l1 found~l1 x00000001 )
( saved~l1 opposite~l1 lost~l1 x00000001 )
( lost~l1 opposite~l1 saved~l1 x00000001 )
( won~l1 opposite~l1 lost~l1 x00000001 )
( lost~l1 opposite~l1 won~l1 x00000001 )
( soft~l1 opposite~l1 loud~l1 x00000001 )
( loud~l1 opposite~l1 soft~l1 x00000001 )
( thin~l1 opposite~l1 full~l1 x00000001 )
( full~l1 opposite~l1 thin~l1 x00000001 )
( forte~l1 opposite~l1 piano~l1 x00000001 )
( piano~l1 opposite~l1 forte~l1 x00000001 )
( soft~l1 opposite~l1 hardened~l1 x00000001 )
( hardened~l1 opposite~l1 soft~l1 x00000001 )
( hateful~l1 opposite~l1 loveable~l1 x00000001 )
( loveable~l1 opposite~l1 hateful~l1 x00000001 )
( disliked~l1 opposite~l1 liked~l1 x00000001 )
( liked~l1 opposite~l1 disliked~l1 x00000001 )
( unloved~l1 opposite~l1 loved~l1 x00000001 )
( loved~l1 opposite~l1 unloved~l1 x00000001 )
( unloving~l1 opposite~l1 loving~l1 x00000001 )
( loving~l1 opposite~l1 unloving~l1 x00000001 )
( uppercase~l1 opposite~l1 lowercase~l1 x00000001 )
( lowercase~l1 opposite~l1 uppercase~l1 x00000001 )
( luckless~l1 opposite~l1 lucky~l1 x00000001 )
( lucky~l1 opposite~l1 luckless~l1 x00000001 )
( dramatic~l1 opposite~l1 lyric~l1 x00000001 )
( lyric~l1 opposite~l1 dramatic~l1 x00000001 )
( unmade~l1 opposite~l1 made~l1 x00000001 )
( made~l1 opposite~l1 unmade~l1 x00000001 )
( antimagnetic~l1 opposite~l1 magnetized~l1 x00000001 )
( magnetized~l1 opposite~l1 antimagnetic~l1 x00000001 )
( geographical~l1 opposite~l1 magnetic~l1 x00000001 )
( magnetic~l1 opposite~l1 geographical~l1 x00000001 )
( nonmagnetic~l1 opposite~l1 magnetic~l1 x00000001 )
( magnetic~l1 opposite~l1 nonmagnetic~l1 x00000001 )
( minor~l1 opposite~l1 major~l1 x00000001 )
( major~l1 opposite~l1 minor~l1 x00000001 )
( underage~l1 opposite~l1 major~l1 x00000001 )
( major~l1 opposite~l1 underage~l1 x00000001 )
( minuscular~l1 opposite~l1 majuscule~l1 x00000001 )
( majuscule~l1 opposite~l1 minuscular~l1 x00000001 )
( unmanageable~l1 opposite~l1 manageable~l1 x00000001 )
( manageable~l1 opposite~l1 unmanageable~l1 x00000001 )
( unmanlike~l1 opposite~l1 manlike~l1 x00000001 )
( manlike~l1 opposite~l1 unmanlike~l1 x00000001 )
( remote-controlled~l1 opposite~l1 manned~l1 x00000001 )
( manned~l1 opposite~l1 remote-controlled~l1 x00000001 )
( unmarked~l1 opposite~l1 marked~l1 x00000001 )
( marked~l1 opposite~l1 unmarked~l1 x00000001 )
( unbranded~l1 opposite~l1 branded~l1 x00000001 )
( branded~l1 opposite~l1 unbranded~l1 x00000001 )
( unmarried~l1 opposite~l1 married~l1 x00000001 )
( married~l1 opposite~l1 unmarried~l1 x00000001 )
( unmated~l1 opposite~l1 mated~l1 x00000001 )
( mated~l1 opposite~l1 unmated~l1 x00000001 )
( feminine~l1 opposite~l1 masculine~l1 x00000001 )
( masculine~l1 opposite~l1 feminine~l1 x00000001 )
( unwomanly~l1 opposite~l1 feminine~l1 x00000001 )
( feminine~l1 opposite~l1 unwomanly~l1 x00000001 )
( neuter~l1 opposite~l1 masculine~l1 x00000001 )
( masculine~l1 opposite~l1 neuter~l1 x00000001 )
( neuter~l1 opposite~l1 feminine~l1 x00000001 )
( feminine~l1 opposite~l1 neuter~l1 x00000001 )
( mismatched~l1 opposite~l1 matched~l1 x00000001 )
( matched~l1 opposite~l1 mismatched~l1 x00000001 )
( immaterial~l1 opposite~l1 material~l1 x00000001 )
( material~l1 opposite~l1 immaterial~l1 x00000001 )
( immature~l1 opposite~l1 mature~l1 x00000001 )
( mature~l1 opposite~l1 immature~l1 x00000001 )
( unripened~l1 opposite~l1 mature~l1 x00000001 )
( mature~l1 opposite~l1 unripened~l1 x00000001 )
( year-around~l1 opposite~l1 seasonal~l1 x00000001 )
( seasonal~l1 opposite~l1 year-around~l1 x00000001 )
( unseasonable~l1 opposite~l1 seasonable~l1 x00000001 )
( seasonable~l1 opposite~l1 unseasonable~l1 x00000001 )
( unseasoned~l1 opposite~l1 seasoned~l1 x00000001 )
( seasoned~l1 opposite~l1 unseasoned~l1 x00000001 )
( premature~l1 opposite~l1 full-term~l1 x00000001 )
( full-term~l1 opposite~l1 premature~l1 x00000001 )
( minimal~l1 opposite~l1 maximal~l1 x00000001 )
( maximal~l1 opposite~l1 minimal~l1 x00000001 )
( nonmeaningful~l1 opposite~l1 meaningful~l1 x00000001 )
( meaningful~l1 opposite~l1 nonmeaningful~l1 x00000001 )
( immeasurable~l1 opposite~l1 measurable~l1 x00000001 )
( measurable~l1 opposite~l1 immeasurable~l1 x00000001 )
( meatless~l1 opposite~l1 meaty~l1 x00000001 )
( meaty~l1 opposite~l1 meatless~l1 x00000001 )
( nonmechanical~l1 opposite~l1 mechanical~l1 x00000001 )
( mechanical~l1 opposite~l1 nonmechanical~l1 x00000001 )
( unmelodious~l1 opposite~l1 melodious~l1 x00000001 )
( melodious~l1 opposite~l1 unmelodious~l1 x00000001 )
( memberless~l1 opposite~l1 membered~l1 x00000001 )
( membered~l1 opposite~l1 memberless~l1 x00000001 )
( unmined~l1 opposite~l1 mined~l1 x00000001 )
( mined~l1 opposite~l1 unmined~l1 x00000001 )
( nonmusical~l1 opposite~l1 musical~l1 x00000001 )
( musical~l1 opposite~l1 nonmusical~l1 x00000001 )
( unmelted~l1 opposite~l1 liquified~l1 x00000001 )
( liquified~l1 opposite~l1 unmelted~l1 x00000001 )
( unmerciful~l1 opposite~l1 merciful~l1 x00000001 )
( merciful~l1 opposite~l1 unmerciful~l1 x00000001 )
( ametabolous~l1 opposite~l1 metabolous~l1 x00000001 )
( metabolous~l1 opposite~l1 ametabolous~l1 x00000001 )
( intense~l1 opposite~l1 mild~l1 x00000001 )
( mild~l1 opposite~l1 intense~l1 x00000001 )
( extensive~l1 opposite~l1 intensive~l1 x00000001 )
( intensive~l1 opposite~l1 extensive~l1 x00000001 )
( uninvolved~l1 opposite~l1 involved~l1 x00000001 )
( involved~l1 opposite~l1 uninvolved~l1 x00000001 )
( civilian~l1 opposite~l1 military~l1 x00000001 )
( military~l1 opposite~l1 civilian~l1 x00000001 )
( nonmilitary~l1 opposite~l1 military~l1 x00000001 )
( military~l1 opposite~l1 nonmilitary~l1 x00000001 )
( unmitigated~l1 opposite~l1 mitigated~l1 x00000001 )
( mitigated~l1 opposite~l1 unmitigated~l1 x00000001 )
( untempered~l1 opposite~l1 tempered~l1 x00000001 )
( tempered~l1 opposite~l1 untempered~l1 x00000001 )
( untempered~l1 opposite~l1 toughened~l1 x00000001 )
( toughened~l1 opposite~l1 untempered~l1 x00000001 )
( immobile~l1 opposite~l1 mobile~l1 x00000001 )
( mobile~l1 opposite~l1 immobile~l1 x00000001 )
( unportable~l1 opposite~l1 portable~l1 x00000001 )
( portable~l1 opposite~l1 unportable~l1 x00000001 )
( irremovable~l1 opposite~l1 removable~l1 x00000001 )
( removable~l1 opposite~l1 irremovable~l1 x00000001 )
( nonmetallic~l1 opposite~l1 metallic~l1 x00000001 )
( metallic~l1 opposite~l1 nonmetallic~l1 x00000001 )
( nonmetamorphic~l1 opposite~l1 metamorphic~l1 x00000001 )
( metamorphic~l1 opposite~l1 nonmetamorphic~l1 x00000001 )
( immoderate~l1 opposite~l1 moderate~l1 x00000001 )
( moderate~l1 opposite~l1 immoderate~l1 x00000001 )
( nonmodern~l1 opposite~l1 modern~l1 x00000001 )
( modern~l1 opposite~l1 nonmodern~l1 x00000001 )
( immodest~l1 opposite~l1 modest~l1 x00000001 )
( modest~l1 opposite~l1 immodest~l1 x00000001 )
( unmodified~l1 opposite~l1 modified~l1 x00000001 )
( modified~l1 opposite~l1 unmodified~l1 x00000001 )
( unmodulated~l1 opposite~l1 modulated~l1 x00000001 )
( modulated~l1 opposite~l1 unmodulated~l1 x00000001 )
( molecular~l1 opposite~l1 molar~l1 x00000001 )
( molar~l1 opposite~l1 molecular~l1 x00000001 )
( diclinous~l1 opposite~l1 monoclinous~l1 x00000001 )
( monoclinous~l1 opposite~l1 diclinous~l1 x00000001 )
( dioecious~l1 opposite~l1 monoecious~l1 x00000001 )
( monoecious~l1 opposite~l1 dioecious~l1 x00000001 )
( contrapuntal~l1 opposite~l1 monophonic~l1 x00000001 )
( monophonic~l1 opposite~l1 contrapuntal~l1 x00000001 )
( polygamous~l1 opposite~l1 monogamous~l1 x00000001 )
( monogamous~l1 opposite~l1 polygamous~l1 x00000001 )
( multilingual~l1 opposite~l1 monolingual~l1 x00000001 )
( monolingual~l1 opposite~l1 multilingual~l1 x00000001 )
( multivalent~l1 opposite~l1 monovalent~l1 x00000001 )
( monovalent~l1 opposite~l1 multivalent~l1 x00000001 )
( bivalent~l1 opposite~l1 univalent~l1 x00000001 )
( univalent~l1 opposite~l1 bivalent~l1 x00000001 )
( multivalent~l1 opposite~l1 univalent~l1 x00000001 )
( univalent~l1 opposite~l1 multivalent~l1 x00000001 )
( multivalent~l1 opposite~l1 bivalent~l1 x00000001 )
( bivalent~l1 opposite~l1 multivalent~l1 x00000001 )
( nonmonotonic~l1 opposite~l1 monotonic~l1 x00000001 )
( monotonic~l1 opposite~l1 nonmonotonic~l1 x00000001 )
( polyvalent~l1 opposite~l1 monovalent~l1 x00000001 )
( monovalent~l1 opposite~l1 polyvalent~l1 x00000001 )
( immoral~l1 opposite~l1 moral~l1 x00000001 )
( moral~l1 opposite~l1 immoral~l1 x00000001 )
( illicit~l1 opposite~l1 licit~l1 x00000001 )
( licit~l1 opposite~l1 illicit~l1 x00000001 )
( unprincipled~l1 opposite~l1 principled~l1 x00000001 )
( principled~l1 opposite~l1 unprincipled~l1 x00000001 )
( few~l1 opposite~l1 many~l1 x00000001 )
( many~l1 opposite~l1 few~l1 x00000001 )
( little~l1 opposite~l1 much~l1 x00000001 )
( much~l1 opposite~l1 little~l1 x00000001 )
( less~l1 opposite~l1 more_than~l1 x00000001 )
( more_than~l1 opposite~l1 less~l1 x00000001 )
( least~l1 opposite~l1 most~l1 x00000001 )
( most~l1 opposite~l1 least~l1 x00000001 )
( fewer~l1 opposite~l1 more~l1 x00000001 )
( more~l1 opposite~l1 fewer~l1 x00000001 )
( fewest~l1 opposite~l1 most~l1 x00000001 )
( most~l1 opposite~l1 fewest~l1 x00000001 )
( immortal~l1 opposite~l1 mortal~l1 x00000001 )
( mortal~l1 opposite~l1 immortal~l1 x00000001 )
( unmotivated~l1 opposite~l1 motivated~l1 x00000001 )
( motivated~l1 opposite~l1 unmotivated~l1 x00000001 )
( unmotorized~l1 opposite~l1 motorized~l1 x00000001 )
( motorized~l1 opposite~l1 unmotorized~l1 x00000001 )
( unmoving~l1 opposite~l1 moving~l1 x00000001 )
( moving~l1 opposite~l1 unmoving~l1 x00000001 )
( nonmoving~l1 opposite~l1 moving~l1 x00000001 )
( moving~l1 opposite~l1 nonmoving~l1 x00000001 )
( still~l1 opposite~l1 moving~l1 x00000001 )
( moving~l1 opposite~l1 still~l1 x00000001 )
( unmown~l1 opposite~l1 mown~l1 x00000001 )
( mown~l1 opposite~l1 unmown~l1 x00000001 )
( unseamanlike~l1 opposite~l1 seamanlike~l1 x00000001 )
( seamanlike~l1 opposite~l1 unseamanlike~l1 x00000001 )
( intercontinental~l1 opposite~l1 continental~l1 x00000001 )
( continental~l1 opposite~l1 intercontinental~l1 x00000001 )
( international~l1 opposite~l1 national~l1 x00000001 )
( national~l1 opposite~l1 international~l1 x00000001 )
( intrastate~l1 opposite~l1 interstate~l1 x00000001 )
( interstate~l1 opposite~l1 intrastate~l1 x00000001 )
( unnatural~l1 opposite~l1 natural~l1 x00000001 )
( natural~l1 opposite~l1 unnatural~l1 x00000001 )
( artificial~l1 opposite~l1 natural~l1 x00000001 )
( natural~l1 opposite~l1 artificial~l1 x00000001 )
( supernatural~l1 opposite~l1 natural~l1 x00000001 )
( natural~l1 opposite~l1 supernatural~l1 x00000001 )
( sharp~l1 opposite~l1 natural~l1 x00000001 )
( natural~l1 opposite~l1 sharp~l1 x00000001 )
( flat~l1 opposite~l1 natural~l1 x00000001 )
( natural~l1 opposite~l1 flat~l1 x00000001 )
( flat~l1 opposite~l1 sharp~l1 x00000001 )
( sharp~l1 opposite~l1 flat~l1 x00000001 )
( proximate~l1 opposite~l1 ultimate~l1 x00000001 )
( ultimate~l1 opposite~l1 proximate~l1 x00000001 )
( unnecessary~l1 opposite~l1 necessary~l1 x00000001 )
( necessary~l1 opposite~l1 unnecessary~l1 x00000001 )
( gross~l1 opposite~l1 nett~l1 x00000001 )
( nett~l1 opposite~l1 gross~l1 x00000001 )
( unneurotic~l1 opposite~l1 psychoneurotic~l1 x00000001 )
( psychoneurotic~l1 opposite~l1 unneurotic~l1 x00000001 )
( nasty~l1 opposite~l1 nice~l1 x00000001 )
( nice~l1 opposite~l1 nasty~l1 x00000001 )
( nidifugous~l1 opposite~l1 nidicolous~l1 x00000001 )
( nidicolous~l1 opposite~l1 nidifugous~l1 x00000001 )
( ignoble~l1 opposite~l1 noble~l1 x00000001 )
( noble~l1 opposite~l1 ignoble~l1 x00000001 )
( lowborn~l1 opposite~l1 noble~l1 x00000001 )
( noble~l1 opposite~l1 lowborn~l1 x00000001 )
( unnatural~l1 opposite~l1 normal~l1 x00000001 )
( normal~l1 opposite~l1 unnatural~l1 x00000001 )
( abnormal~l1 opposite~l1 normal~l1 x00000001 )
( normal~l1 opposite~l1 abnormal~l1 x00000001 )
( hypotensive~l1 opposite~l1 hypertensive~l1 x00000001 )
( hypertensive~l1 opposite~l1 hypotensive~l1 x00000001 )
( normotensive~l1 opposite~l1 hypertensive~l1 x00000001 )
( hypertensive~l1 opposite~l1 normotensive~l1 x00000001 )
( normotensive~l1 opposite~l1 hypotensive~l1 x00000001 )
( hypotensive~l1 opposite~l1 normotensive~l1 x00000001 )
( paranormal~l1 opposite~l1 normal~l1 x00000001 )
( normal~l1 opposite~l1 paranormal~l1 x00000001 )
( south~l1 opposite~l1 north~l1 x00000001 )
( north~l1 opposite~l1 south~l1 x00000001 )
( southern~l1 opposite~l1 northern~l1 x00000001 )
( northern~l1 opposite~l1 southern~l1 x00000001 )
( noseless~l1 opposite~l1 nosed~l1 x00000001 )
( nosed~l1 opposite~l1 noseless~l1 x00000001 )
( unnoticed~l1 opposite~l1 noticed~l1 x00000001 )
( noticed~l1 opposite~l1 unnoticed~l1 x00000001 )
( undetected~l1 opposite~l1 detected~l1 x00000001 )
( detected~l1 opposite~l1 undetected~l1 x00000001 )
( undetermined~l1 opposite~l1 determined~l1 x00000001 )
( determined~l1 opposite~l1 undetermined~l1 x00000001 )
( innocuous~l1 opposite~l1 noxious~l1 x00000001 )
( noxious~l1 opposite~l1 innocuous~l1 x00000001 )
( disobedient~l1 opposite~l1 obedient~l1 x00000001 )
( obedient~l1 opposite~l1 disobedient~l1 x00000001 )
( subjective~l1 opposite~l1 nonsubjective~l1 x00000001 )
( nonsubjective~l1 opposite~l1 subjective~l1 x00000001 )
( unobligated~l1 opposite~l1 obligated~l1 x00000001 )
( obligated~l1 opposite~l1 unobligated~l1 x00000001 )
( facultative~l1 opposite~l1 obligate~l1 x00000001 )
( obligate~l1 opposite~l1 facultative~l1 x00000001 )
( unobvious~l1 opposite~l1 obvious~l1 x00000001 )
( obvious~l1 opposite~l1 unobvious~l1 x00000001 )
( unobstructed~l1 opposite~l1 obstructed~l1 x00000001 )
( obstructed~l1 opposite~l1 unobstructed~l1 x00000001 )
( unoccupied~l1 opposite~l1 occupied~l1 x00000001 )
( occupied~l1 opposite~l1 unoccupied~l1 x00000001 )
( inoffensive~l1 opposite~l1 offensive~l1 x00000001 )
( offensive~l1 opposite~l1 inoffensive~l1 x00000001 )
( unsavoury~l1 opposite~l1 savoury~l1 x00000001 )
( savoury~l1 opposite~l1 unsavoury~l1 x00000001 )
( defensive~l1 opposite~l1 offensive~l1 x00000001 )
( offensive~l1 opposite~l1 defensive~l1 x00000001 )
( unoffending~l1 opposite~l1 offending~l1 x00000001 )
( offending~l1 opposite~l1 unoffending~l1 x00000001 )
( unapologetic~l1 opposite~l1 apologetic~l1 x00000001 )
( apologetic~l1 opposite~l1 unapologetic~l1 x00000001 )
( unofficial~l1 opposite~l1 official~l1 x00000001 )
( official~l1 opposite~l1 unofficial~l1 x00000001 )
( unconfirmed~l1 opposite~l1 confirmed~l1 x00000001 )
( confirmed~l1 opposite~l1 unconfirmed~l1 x00000001 )
( unestablished~l1 opposite~l1 established~l1 x00000001 )
( established~l1 opposite~l1 unestablished~l1 x00000001 )
( unconditioned~l1 opposite~l1 conditioned~l1 x00000001 )
( conditioned~l1 opposite~l1 unconditioned~l1 x00000001 )
( off-site~l1 opposite~l1 on-site~l1 x00000001 )
( on-site~l1 opposite~l1 off-site~l1 x00000001 )
( on-street~l1 opposite~l1 off-street~l1 x00000001 )
( off-street~l1 opposite~l1 on-street~l1 x00000001 )
( new~l1 opposite~l1 old~l1 x00000001 )
( old~l1 opposite~l1 new~l1 x00000001 )
( immature~l1 opposite~l1 old~l1 x00000001 )
( old~l1 opposite~l1 immature~l1 x00000001 )
( two-piece~l1 opposite~l1 one-piece~l1 x00000001 )
( one-piece~l1 opposite~l1 two-piece~l1 x00000001 )
( three-piece~l1 opposite~l1 one-piece~l1 x00000001 )
( one-piece~l1 opposite~l1 three-piece~l1 x00000001 )
( three-piece~l1 opposite~l1 two-piece~l1 x00000001 )
( two-piece~l1 opposite~l1 three-piece~l1 x00000001 )
( off-line~l1 opposite~l1 on-line~l1 x00000001 )
( on-line~l1 opposite~l1 off-line~l1 x00000001 )
( off~l1 opposite~l1 on~l1 x00000001 )
( on~l1 opposite~l1 off~l1 x00000001 )
( cancelled~l1 opposite~l1 on~l1 x00000001 )
( on~l1 opposite~l1 cancelled~l1 x00000001 )
( offsides~l1 opposite~l1 onside~l1 x00000001 )
( onside~l1 opposite~l1 offsides~l1 x00000001 )
( unopen~l1 opposite~l1 unfastened~l1 x00000001 )
( unfastened~l1 opposite~l1 unopen~l1 x00000001 )
( closed~l1 opposite~l1 open~l1 x00000001 )
( open~l1 opposite~l1 closed~l1 x00000001 )
( closed~l1 opposite~l1 opened~l1 x00000001 )
( opened~l1 opposite~l1 closed~l1 x00000001 )
( unspaced~l1 opposite~l1 spaced~l1 x00000001 )
( spaced~l1 opposite~l1 unspaced~l1 x00000001 )
( unenclosed~l1 opposite~l1 enclosed~l1 x00000001 )
( enclosed~l1 opposite~l1 unenclosed~l1 x00000001 )
( untanned~l1 opposite~l1 tanned~l1 x00000001 )
( tanned~l1 opposite~l1 untanned~l1 x00000001 )
( untapped~l1 opposite~l1 tapped~l1 x00000001 )
( tapped~l1 opposite~l1 untapped~l1 x00000001 )
( nonoperational~l1 opposite~l1 operational~l1 x00000001 )
( operational~l1 opposite~l1 nonoperational~l1 x00000001 )
( inopportune~l1 opposite~l1 opportune~l1 x00000001 )
( opportune~l1 opposite~l1 inopportune~l1 x00000001 )
( unopposable~l1 opposite~l1 opposable~l1 x00000001 )
( opposable~l1 opposite~l1 unopposable~l1 x00000001 )
( unopposed~l1 opposite~l1 opposed~l1 x00000001 )
( opposed~l1 opposite~l1 unopposed~l1 x00000001 )
( alternate~l1 opposite~l1 opposite~l1 x00000001 )
( opposite~l1 opposite~l1 alternate~l1 x00000001 )
( pessimistic~l1 opposite~l1 optimistic~l1 x00000001 )
( optimistic~l1 opposite~l1 pessimistic~l1 x00000001 )
( aboral~l1 opposite~l1 oral~l1 x00000001 )
( oral~l1 opposite~l1 aboral~l1 x00000001 )
( abactinal~l1 opposite~l1 actinal~l1 x00000001 )
( actinal~l1 opposite~l1 abactinal~l1 x00000001 )
( disorderly~l1 opposite~l1 orderly~l1 x00000001 )
( orderly~l1 opposite~l1 disorderly~l1 x00000001 )
( disordered~l1 opposite~l1 ordered~l1 x00000001 )
( ordered~l1 opposite~l1 disordered~l1 x00000001 )
( disorganized~l1 opposite~l1 organized~l1 x00000001 )
( organized~l1 opposite~l1 disorganized~l1 x00000001 )
( unorganized~l1 opposite~l1 organized~l1 x00000001 )
( organized~l1 opposite~l1 unorganized~l1 x00000001 )
( unstructured~l1 opposite~l1 structured~l1 x00000001 )
( structured~l1 opposite~l1 unstructured~l1 x00000001 )
( extraordinary~l1 opposite~l1 ordinary~l1 x00000001 )
( ordinary~l1 opposite~l1 extraordinary~l1 x00000001 )
( inorganic~l1 opposite~l1 organic~l1 x00000001 )
( organic~l1 opposite~l1 inorganic~l1 x00000001 )
( atomistical~l1 opposite~l1 holistic~l1 x00000001 )
( holistic~l1 opposite~l1 atomistical~l1 x00000001 )
( disarranged~l1 opposite~l1 arranged~l1 x00000001 )
( arranged~l1 opposite~l1 disarranged~l1 x00000001 )
( unoriented~l1 opposite~l1 orientated~l1 x00000001 )
( orientated~l1 opposite~l1 unoriented~l1 x00000001 )
( disorienting~l1 opposite~l1 orientating~l1 x00000001 )
( orientating~l1 opposite~l1 disorienting~l1 x00000001 )
( unoriginal~l1 opposite~l1 original~l1 x00000001 )
( original~l1 opposite~l1 unoriginal~l1 x00000001 )
( unorthodox~l1 opposite~l1 orthodox~l1 x00000001 )
( orthodox~l1 opposite~l1 unorthodox~l1 x00000001 )
( indoor~l1 opposite~l1 out-of-door~l1 x00000001 )
( out-of-door~l1 opposite~l1 indoor~l1 x00000001 )
( bare~l1 opposite~l1 covered~l1 x00000001 )
( covered~l1 opposite~l1 bare~l1 x00000001 )
( uncoated~l1 opposite~l1 coated~l1 x00000001 )
( coated~l1 opposite~l1 uncoated~l1 x00000001 )
( roofless~l1 opposite~l1 roofed~l1 x00000001 )
( roofed~l1 opposite~l1 roofless~l1 x00000001 )
( leafless~l1 opposite~l1 leafy~l1 x00000001 )
( leafy~l1 opposite~l1 leafless~l1 x00000001 )
( unlipped~l1 opposite~l1 lipped~l1 x00000001 )
( lipped~l1 opposite~l1 unlipped~l1 x00000001 )
( covert~l1 opposite~l1 overt~l1 x00000001 )
( overt~l1 opposite~l1 covert~l1 x00000001 )
( unpaid~l1 opposite~l1 paid~l1 x00000001 )
( paid~l1 opposite~l1 unpaid~l1 x00000001 )
( painless~l1 opposite~l1 painful~l1 x00000001 )
( painful~l1 opposite~l1 painless~l1 x00000001 )
( unpainted~l1 opposite~l1 painted~l1 x00000001 )
( painted~l1 opposite~l1 unpainted~l1 x00000001 )
( undelineated~l1 opposite~l1 represented~l1 x00000001 )
( represented~l1 opposite~l1 undelineated~l1 x00000001 )
( unpaintable~l1 opposite~l1 paintable~l1 x00000001 )
( paintable~l1 opposite~l1 unpaintable~l1 x00000001 )
( unpalatable~l1 opposite~l1 palatable~l1 x00000001 )
( palatable~l1 opposite~l1 unpalatable~l1 x00000001 )
( impalpable~l1 opposite~l1 palpable~l1 x00000001 )
( palpable~l1 opposite~l1 impalpable~l1 x00000001 )
( perpendicular~l1 opposite~l1 parallel~l1 x00000001 )
( parallel~l1 opposite~l1 perpendicular~l1 x00000001 )
( oblique~l1 opposite~l1 parallel~l1 x00000001 )
( parallel~l1 opposite~l1 oblique~l1 x00000001 )
( perpendicular~l1 opposite~l1 oblique~l1 x00000001 )
( oblique~l1 opposite~l1 perpendicular~l1 x00000001 )
( unpardonable~l1 opposite~l1 pardonable~l1 x00000001 )
( pardonable~l1 opposite~l1 unpardonable~l1 x00000001 )
( inexcusable~l1 opposite~l1 excusable~l1 x00000001 )
( excusable~l1 opposite~l1 inexcusable~l1 x00000001 )
( filial~l1 opposite~l1 parental~l1 x00000001 )
( parental~l1 opposite~l1 filial~l1 x00000001 )
( impartial~l1 opposite~l1 partial~l1 x00000001 )
( partial~l1 opposite~l1 impartial~l1 x00000001 )
( nonparticulate~l1 opposite~l1 particulate~l1 x00000001 )
( particulate~l1 opposite~l1 nonparticulate~l1 x00000001 )
( impassable~l1 opposite~l1 passable~l1 x00000001 )
( passable~l1 opposite~l1 impassable~l1 x00000001 )
( passionless~l1 opposite~l1 passionate~l1 x00000001 )
( passionate~l1 opposite~l1 passionless~l1 x00000001 )
( present~l1 opposite~l1 past~l1 x00000001 )
( past~l1 opposite~l1 present~l1 x00000001 )
( future~l1 opposite~l1 past~l1 x00000001 )
( past~l1 opposite~l1 future~l1 x00000001 )
( future~l1 opposite~l1 present~l1 x00000001 )
( present~l1 opposite~l1 future~l1 x00000001 )
( unborn~l1 opposite~l1 born~l1 x00000001 )
( born~l1 opposite~l1 unborn~l1 x00000001 )
( unparented~l1 opposite~l1 parented~l1 x00000001 )
( parented~l1 opposite~l1 unparented~l1 x00000001 )
( maternal~l1 opposite~l1 paternal~l1 x00000001 )
( paternal~l1 opposite~l1 maternal~l1 x00000001 )
( husbandly~l1 opposite~l1 wifelike~l1 x00000001 )
( wifelike~l1 opposite~l1 husbandly~l1 x00000001 )
( impatient~l1 opposite~l1 patient~l1 x00000001 )
( patient~l1 opposite~l1 impatient~l1 x00000001 )
( matriarchal~l1 opposite~l1 patriarchal~l1 x00000001 )
( patriarchal~l1 opposite~l1 matriarchal~l1 x00000001 )
( unpatronized~l1 opposite~l1 patronized~l1 x00000001 )
( patronized~l1 opposite~l1 unpatronized~l1 x00000001 )
( unpackaged~l1 opposite~l1 packaged~l1 x00000001 )
( packaged~l1 opposite~l1 unpackaged~l1 x00000001 )
( unpaved~l1 opposite~l1 paved~l1 x00000001 )
( paved~l1 opposite~l1 unpaved~l1 x00000001 )
( unpatriotic~l1 opposite~l1 patriotic~l1 x00000001 )
( patriotic~l1 opposite~l1 unpatriotic~l1 x00000001 )
( unpeaceful~l1 opposite~l1 peaceable~l1 x00000001 )
( peaceable~l1 opposite~l1 unpeaceful~l1 x00000001 )
( unremorseful~l1 opposite~l1 repentant~l1 x00000001 )
( repentant~l1 opposite~l1 unremorseful~l1 x00000001 )
( unperceptive~l1 opposite~l1 perceptive~l1 x00000001 )
( perceptive~l1 opposite~l1 unperceptive~l1 x00000001 )
( imperceptible~l1 opposite~l1 perceptible~l1 x00000001 )
( perceptible~l1 opposite~l1 imperceptible~l1 x00000001 )
( imperfect~l1 opposite~l1 perfect~l1 x00000001 )
( perfect~l1 opposite~l1 imperfect~l1 x00000001 )
( imperishable~l1 opposite~l1 perishable~l1 x00000001 )
( perishable~l1 opposite~l1 imperishable~l1 x00000001 )
( impermanent~l1 opposite~l1 permanent~l1 x00000001 )
( permanent~l1 opposite~l1 impermanent~l1 x00000001 )
( caducous~l1 opposite~l1 persistent~l1 x00000001 )
( persistent~l1 opposite~l1 caducous~l1 x00000001 )
( irreversible~l1 opposite~l1 reversible~l1 x00000001 )
( reversible~l1 opposite~l1 irreversible~l1 x00000001 )
( nonreversible~l1 opposite~l1 reversible~l1 x00000001 )
( reversible~l1 opposite~l1 nonreversible~l1 x00000001 )
( irrevocable~l1 opposite~l1 revocable~l1 x00000001 )
( revocable~l1 opposite~l1 irrevocable~l1 x00000001 )
( impermissible~l1 opposite~l1 permissible~l1 x00000001 )
( permissible~l1 opposite~l1 impermissible~l1 x00000001 )
( inadmissible~l1 opposite~l1 admissible~l1 x00000001 )
( admissible~l1 opposite~l1 inadmissible~l1 x00000001 )
( unpermissive~l1 opposite~l1 permissive~l1 x00000001 )
( permissive~l1 opposite~l1 unpermissive~l1 x00000001 )
( preventative~l1 opposite~l1 permissive~l1 x00000001 )
( permissive~l1 opposite~l1 preventative~l1 x00000001 )
( unperplexed~l1 opposite~l1 perplexed~l1 x00000001 )
( perplexed~l1 opposite~l1 unperplexed~l1 x00000001 )
( impersonal~l1 opposite~l1 personal~l1 x00000001 )
( personal~l1 opposite~l1 impersonal~l1 x00000001 )
( dissuasive~l1 opposite~l1 persuasive~l1 x00000001 )
( persuasive~l1 opposite~l1 dissuasive~l1 x00000001 )
( impenetrable~l1 opposite~l1 penetrable~l1 x00000001 )
( penetrable~l1 opposite~l1 impenetrable~l1 x00000001 )
( impermeable~l1 opposite~l1 permeable~l1 x00000001 )
( permeable~l1 opposite~l1 impermeable~l1 x00000001 )
( imperviable~l1 opposite~l1 pervious~l1 x00000001 )
( pervious~l1 opposite~l1 imperviable~l1 x00000001 )
( apetalous~l1 opposite~l1 petalous~l1 x00000001 )
( petalous~l1 opposite~l1 apetalous~l1 x00000001 )
( punctureless~l1 opposite~l1 puncturable~l1 x00000001 )
( puncturable~l1 opposite~l1 punctureless~l1 x00000001 )
( nonpsychoactive~l1 opposite~l1 psychoactive~l1 x00000001 )
( psychoactive~l1 opposite~l1 nonpsychoactive~l1 x00000001 )
( mental~l1 opposite~l1 physical~l1 x00000001 )
( physical~l1 opposite~l1 mental~l1 x00000001 )
( polytheistic~l1 opposite~l1 monotheistic~l1 x00000001 )
( monotheistic~l1 opposite~l1 polytheistic~l1 x00000001 )
( impious~l1 opposite~l1 pious~l1 x00000001 )
( pious~l1 opposite~l1 impious~l1 x00000001 )
( religious~l1 opposite~l1 secular~l1 x00000001 )
( secular~l1 opposite~l1 religious~l1 x00000001 )
( irreligious~l1 opposite~l1 religious~l1 x00000001 )
( religious~l1 opposite~l1 irreligious~l1 x00000001 )
( implacable~l1 opposite~l1 placable~l1 x00000001 )
( placable~l1 opposite~l1 implacable~l1 x00000001 )
( patterned~l1 opposite~l1 unpatterned~l1 x00000001 )
( unpatterned~l1 opposite~l1 patterned~l1 x00000001 )
( fancy~l1 opposite~l1 plain~l1 x00000001 )
( plain~l1 opposite~l1 fancy~l1 x00000001 )
( unplanned~l1 opposite~l1 planned~l1 x00000001 )
( planned~l1 opposite~l1 unplanned~l1 x00000001 )
( uncontrived~l1 opposite~l1 studied~l1 x00000001 )
( studied~l1 opposite~l1 uncontrived~l1 x00000001 )
( implausible~l1 opposite~l1 plausible~l1 x00000001 )
( plausible~l1 opposite~l1 implausible~l1 x00000001 )
( unpleasant~l1 opposite~l1 pleasant~l1 x00000001 )
( pleasant~l1 opposite~l1 unpleasant~l1 x00000001 )
( displeased~l1 opposite~l1 pleased~l1 x00000001 )
( pleased~l1 opposite~l1 displeased~l1 x00000001 )
( displeasing~l1 opposite~l1 pleasing~l1 x00000001 )
( pleasing~l1 opposite~l1 displeasing~l1 x00000001 )
( pointless~l1 opposite~l1 pointed~l1 x00000001 )
( pointed~l1 opposite~l1 pointless~l1 x00000001 )
( obtuse~l1 opposite~l1 acute~l1 x00000001 )
( acute~l1 opposite~l1 obtuse~l1 x00000001 )
( unpolished~l1 opposite~l1 polished~l1 x00000001 )
( polished~l1 opposite~l1 unpolished~l1 x00000001 )
( impolitic~l1 opposite~l1 politic~l1 x00000001 )
( politic~l1 opposite~l1 impolitic~l1 x00000001 )
( nonpolitical~l1 opposite~l1 political~l1 x00000001 )
( political~l1 opposite~l1 nonpolitical~l1 x00000001 )
( imponderable~l1 opposite~l1 ponderable~l1 x00000001 )
( ponderable~l1 opposite~l1 imponderable~l1 x00000001 )
( unpopular~l1 opposite~l1 popular~l1 x00000001 )
( popular~l1 opposite~l1 unpopular~l1 x00000001 )
( anti~l1 opposite~l1 pro~l1 x00000001 )
( pro~l1 opposite~l1 anti~l1 x00000001 )
( negative~l1 opposite~l1 positive~l1 x00000001 )
( positive~l1 opposite~l1 negative~l1 x00000001 )
( neutral~l1 opposite~l1 positive~l1 x00000001 )
( positive~l1 opposite~l1 neutral~l1 x00000001 )
( neutral~l1 opposite~l1 negative~l1 x00000001 )
( negative~l1 opposite~l1 neutral~l1 x00000001 )
( minus~l1 opposite~l1 plus~l1 x00000001 )
( plus~l1 opposite~l1 minus~l1 x00000001 )
( disconfirming~l1 opposite~l1 confirming~l1 x00000001 )
( confirming~l1 opposite~l1 disconfirming~l1 x00000001 )
( impossible~l1 opposite~l1 possible~l1 x00000001 )
( possible~l1 opposite~l1 impossible~l1 x00000001 )
( impotent~l1 opposite~l1 potent~l1 x00000001 )
( potent~l1 opposite~l1 impotent~l1 x00000001 )
( powerless~l1 opposite~l1 powerful~l1 x00000001 )
( powerful~l1 opposite~l1 powerless~l1 x00000001 )
( unpowered~l1 opposite~l1 powered~l1 x00000001 )
( powered~l1 opposite~l1 unpowered~l1 x00000001 )
( low-tension~l1 opposite~l1 high-tension~l1 x00000001 )
( high-tension~l1 opposite~l1 low-tension~l1 x00000001 )
( uninfluential~l1 opposite~l1 influential~l1 x00000001 )
( influential~l1 opposite~l1 uninfluential~l1 x00000001 )
( aplacental~l1 opposite~l1 placental~l1 x00000001 )
( placental~l1 opposite~l1 aplacental~l1 x00000001 )
( unplanted~l1 opposite~l1 planted~l1 x00000001 )
( planted~l1 opposite~l1 unplanted~l1 x00000001 )
( unploughed~l1 opposite~l1 ploughed~l1 x00000001 )
( ploughed~l1 opposite~l1 unploughed~l1 x00000001 )
( uncultivated~l1 opposite~l1 cultivated~l1 x00000001 )
( cultivated~l1 opposite~l1 uncultivated~l1 x00000001 )
( unpotted~l1 opposite~l1 potted~l1 x00000001 )
( potted~l1 opposite~l1 unpotted~l1 x00000001 )
( impractical~l1 opposite~l1 practical~l1 x00000001 )
( practical~l1 opposite~l1 impractical~l1 x00000001 )
( imprecise~l1 opposite~l1 precise~l1 x00000001 )
( precise~l1 opposite~l1 imprecise~l1 x00000001 )
( retarded~l1 opposite~l1 precocious~l1 x00000001 )
( precocious~l1 opposite~l1 retarded~l1 x00000001 )
( unpredictable~l1 opposite~l1 predictable~l1 x00000001 )
( predictable~l1 opposite~l1 unpredictable~l1 x00000001 )
( unpremeditated~l1 opposite~l1 premeditated~l1 x00000001 )
( premeditated~l1 opposite~l1 unpremeditated~l1 x00000001 )
( unprepared~l1 opposite~l1 prepared~l1 x00000001 )
( prepared~l1 opposite~l1 unprepared~l1 x00000001 )
( over-the-counter~l1 opposite~l1 prescription~l1 x00000001 )
( prescription~l1 opposite~l1 over-the-counter~l1 x00000001 )
( absent~l1 opposite~l1 present~l1 x00000001 )
( present~l1 opposite~l1 absent~l1 x00000001 )
( unostentatious~l1 opposite~l1 ostentatious~l1 x00000001 )
( ostentatious~l1 opposite~l1 unostentatious~l1 x00000001 )
( unpretentious~l1 opposite~l1 pretentious~l1 x00000001 )
( pretentious~l1 opposite~l1 unpretentious~l1 x00000001 )
( secondary~l1 opposite~l1 primary~l1 x00000001 )
( primary~l1 opposite~l1 secondary~l1 x00000001 )
( incidental~l1 opposite~l1 basic~l1 x00000001 )
( basic~l1 opposite~l1 incidental~l1 x00000001 )
( public~l1 opposite~l1 private~l1 x00000001 )
( private~l1 opposite~l1 public~l1 x00000001 )
( inclusive~l1 opposite~l1 exclusive~l1 x00000001 )
( exclusive~l1 opposite~l1 inclusive~l1 x00000001 )
( underprivileged~l1 opposite~l1 privileged~l1 x00000001 )
( privileged~l1 opposite~l1 underprivileged~l1 x00000001 )
( unproductive~l1 opposite~l1 productive~l1 x00000001 )
( productive~l1 opposite~l1 unproductive~l1 x00000001 )
( consumptive~l1 opposite~l1 generative~l1 x00000001 )
( generative~l1 opposite~l1 consumptive~l1 x00000001 )
( unreproducible~l1 opposite~l1 reproducible~l1 x00000001 )
( reproducible~l1 opposite~l1 unreproducible~l1 x00000001 )
( nonprofessional~l1 opposite~l1 professional~l1 x00000001 )
( professional~l1 opposite~l1 nonprofessional~l1 x00000001 )
( unprofessional~l1 opposite~l1 professional~l1 x00000001 )
( professional~l1 opposite~l1 unprofessional~l1 x00000001 )
( unprofitable~l1 opposite~l1 profitable~l1 x00000001 )
( profitable~l1 opposite~l1 unprofitable~l1 x00000001 )
( superficial~l1 opposite~l1 profound~l1 x00000001 )
( profound~l1 opposite~l1 superficial~l1 x00000001 )
( opisthognathous~l1 opposite~l1 hypognathous~l1 x00000001 )
( hypognathous~l1 opposite~l1 opisthognathous~l1 x00000001 )
( regressive~l1 opposite~l1 progressive~l1 x00000001 )
( progressive~l1 opposite~l1 regressive~l1 x00000001 )
( unpronounceable~l1 opposite~l1 pronounceable~l1 x00000001 )
( pronounceable~l1 opposite~l1 unpronounceable~l1 x00000001 )
( improper~l1 opposite~l1 proper~l1 x00000001 )
( proper~l1 opposite~l1 improper~l1 x00000001 )
( unprophetic~l1 opposite~l1 prophetical~l1 x00000001 )
( prophetical~l1 opposite~l1 unprophetic~l1 x00000001 )
( retrospective~l1 opposite~l1 prospective~l1 x00000001 )
( prospective~l1 opposite~l1 retrospective~l1 x00000001 )
( unprotected~l1 opposite~l1 protected~l1 x00000001 )
( protected~l1 opposite~l1 unprotected~l1 x00000001 )
( unprotective~l1 opposite~l1 protective~l1 x00000001 )
( protective~l1 opposite~l1 unprotective~l1 x00000001 )
( humble~l1 opposite~l1 proud~l1 x00000001 )
( proud~l1 opposite~l1 humble~l1 x00000001 )
( unproved~l1 opposite~l1 proved~l1 x00000001 )
( proved~l1 opposite~l1 unproved~l1 x00000001 )
( improvident~l1 opposite~l1 provident~l1 x00000001 )
( provident~l1 opposite~l1 improvident~l1 x00000001 )
( unprovocative~l1 opposite~l1 provocative~l1 x00000001 )
( provocative~l1 opposite~l1 unprovocative~l1 x00000001 )
( imprudent~l1 opposite~l1 prudent~l1 x00000001 )
( prudent~l1 opposite~l1 imprudent~l1 x00000001 )
( unpunctual~l1 opposite~l1 punctual~l1 x00000001 )
( punctual~l1 opposite~l1 unpunctual~l1 x00000001 )
( unpunished~l1 opposite~l1 punished~l1 x00000001 )
( punished~l1 opposite~l1 unpunished~l1 x00000001 )
( rehabilitative~l1 opposite~l1 punitive~l1 x00000001 )
( punitive~l1 opposite~l1 rehabilitative~l1 x00000001 )
( crossbred~l1 opposite~l1 purebred~l1 x00000001 )
( purebred~l1 opposite~l1 crossbred~l1 x00000001 )
( impure~l1 opposite~l1 pure~l1 x00000001 )
( pure~l1 opposite~l1 impure~l1 x00000001 )
( uncontaminated~l1 opposite~l1 contaminated~l1 x00000001 )
( contaminated~l1 opposite~l1 uncontaminated~l1 x00000001 )
( purposeless~l1 opposite~l1 purposeful~l1 x00000001 )
( purposeful~l1 opposite~l1 purposeless~l1 x00000001 )
( unqualified~l1 opposite~l1 qualified~l1 x00000001 )
( qualified~l1 opposite~l1 unqualified~l1 x00000001 )
( untrained~l1 opposite~l1 trained~l1 x00000001 )
( trained~l1 opposite~l1 untrained~l1 x00000001 )
( quantitative~l1 opposite~l1 qualitative~l1 x00000001 )
( qualitative~l1 opposite~l1 quantitative~l1 x00000001 )
( unquestionable~l1 opposite~l1 questionable~l1 x00000001 )
( questionable~l1 opposite~l1 unquestionable~l1 x00000001 )
( noisy~l1 opposite~l1 quiet~l1 x00000001 )
( quiet~l1 opposite~l1 noisy~l1 x00000001 )
( restless~l1 opposite~l1 reposeful~l1 x00000001 )
( reposeful~l1 opposite~l1 restless~l1 x00000001 )
( unquiet~l1 opposite~l1 quiet~l1 x00000001 )
( quiet~l1 opposite~l1 unquiet~l1 x00000001 )
( nonrandom~l1 opposite~l1 random~l1 x00000001 )
( random~l1 opposite~l1 nonrandom~l1 x00000001 )
( irrational~l1 opposite~l1 rational~l1 x00000001 )
( rational~l1 opposite~l1 irrational~l1 x00000001 )
( intellectual~l1 opposite~l1 emotional~l1 x00000001 )
( emotional~l1 opposite~l1 intellectual~l1 x00000001 )
( nonracial~l1 opposite~l1 racial~l1 x00000001 )
( racial~l1 opposite~l1 nonracial~l1 x00000001 )
( unreactive~l1 opposite~l1 reactive~l1 x00000001 )
( reactive~l1 opposite~l1 unreactive~l1 x00000001 )
( unready~l1 opposite~l1 ready~l1 x00000001 )
( ready~l1 opposite~l1 unready~l1 x00000001 )
( unreal~l1 opposite~l1 existent~l1 x00000001 )
( existent~l1 opposite~l1 unreal~l1 x00000001 )
( unreal~l1 opposite~l1 real~l1 x00000001 )
( real~l1 opposite~l1 unreal~l1 x00000001 )
( nominal~l1 opposite~l1 real~l1 x00000001 )
( real~l1 opposite~l1 nominal~l1 x00000001 )
( unrealistic~l1 opposite~l1 realistic~l1 x00000001 )
( realistic~l1 opposite~l1 unrealistic~l1 x00000001 )
( unreasonable~l1 opposite~l1 reasonable~l1 x00000001 )
( reasonable~l1 opposite~l1 unreasonable~l1 x00000001 )
( nonreciprocal~l1 opposite~l1 reciprocal~l1 x00000001 )
( reciprocal~l1 opposite~l1 nonreciprocal~l1 x00000001 )
( unrefined~l1 opposite~l1 refined~l1 x00000001 )
( refined~l1 opposite~l1 unrefined~l1 x00000001 )
( unprocessed~l1 opposite~l1 processed~l1 x00000001 )
( processed~l1 opposite~l1 unprocessed~l1 x00000001 )
( untreated~l1 opposite~l1 treated~l1 x00000001 )
( treated~l1 opposite~l1 untreated~l1 x00000001 )
( unoiled~l1 opposite~l1 oiled~l1 x00000001 )
( oiled~l1 opposite~l1 unoiled~l1 x00000001 )
( unrecoverable~l1 opposite~l1 recoverable~l1 x00000001 )
( recoverable~l1 opposite~l1 unrecoverable~l1 x00000001 )
( unregenerated~l1 opposite~l1 regenerate~l1 x00000001 )
( regenerate~l1 opposite~l1 unregenerated~l1 x00000001 )
( unregistered~l1 opposite~l1 registered~l1 x00000001 )
( registered~l1 opposite~l1 unregistered~l1 x00000001 )
( irregular~l1 opposite~l1 regular~l1 x00000001 )
( regular~l1 opposite~l1 irregular~l1 x00000001 )
( unregulated~l1 opposite~l1 regulated~l1 x00000001 )
( regulated~l1 opposite~l1 unregulated~l1 x00000001 )
( irremediable~l1 opposite~l1 remediable~l1 x00000001 )
( remediable~l1 opposite~l1 irremediable~l1 x00000001 )
( nonrenewable~l1 opposite~l1 renewable~l1 x00000001 )
( renewable~l1 opposite~l1 nonrenewable~l1 x00000001 )
( unrentable~l1 opposite~l1 rentable~l1 x00000001 )
( rentable~l1 opposite~l1 unrentable~l1 x00000001 )
( irreparable~l1 opposite~l1 rectifiable~l1 x00000001 )
( rectifiable~l1 opposite~l1 irreparable~l1 x00000001 )
( unrepeatable~l1 opposite~l1 repeatable~l1 x00000001 )
( repeatable~l1 opposite~l1 unrepeatable~l1 x00000001 )
( nonrepetitive~l1 opposite~l1 repetitious~l1 x00000001 )
( repetitious~l1 opposite~l1 nonrepetitive~l1 x00000001 )
( unprintable~l1 opposite~l1 printable~l1 x00000001 )
( printable~l1 opposite~l1 unprintable~l1 x00000001 )
( unrequested~l1 opposite~l1 requested~l1 x00000001 )
( requested~l1 opposite~l1 unrequested~l1 x00000001 )
( rhymeless~l1 opposite~l1 rhyming~l1 x00000001 )
( rhyming~l1 opposite~l1 rhymeless~l1 x00000001 )
( multiform~l1 opposite~l1 unvarying~l1 x00000001 )
( unvarying~l1 opposite~l1 multiform~l1 x00000001 )
( nonperiodic~l1 opposite~l1 periodical~l1 x00000001 )
( periodical~l1 opposite~l1 nonperiodic~l1 x00000001 )
( unrelated~l1 opposite~l1 related~l1 x00000001 )
( related~l1 opposite~l1 unrelated~l1 x00000001 )
( unrelated~l1 opposite~l1 related_to~l1 x00000001 )
( related_to~l1 opposite~l1 unrelated~l1 x00000001 )
( irrelevant~l1 opposite~l1 relevant~l1 x00000001 )
( relevant~l1 opposite~l1 irrelevant~l1 x00000001 )
( unmindful~l1 opposite~l1 mindful~l1 x00000001 )
( mindful~l1 opposite~l1 unmindful~l1 x00000001 )
( irreplaceable~l1 opposite~l1 replaceable~l1 x00000001 )
( replaceable~l1 opposite~l1 irreplaceable~l1 x00000001 )
( nonrepresentational~l1 opposite~l1 representational~l1 x00000001 )
( representational~l1 opposite~l1 nonrepresentational~l1 x00000001 )
( nonrepresentative~l1 opposite~l1 representative~l1 x00000001 )
( representative~l1 opposite~l1 nonrepresentative~l1 x00000001 )
( disreputable~l1 opposite~l1 reputable~l1 x00000001 )
( reputable~l1 opposite~l1 disreputable~l1 x00000001 )
( unreceptive~l1 opposite~l1 receptive~l1 x00000001 )
( receptive~l1 opposite~l1 unreceptive~l1 x00000001 )
( irreconcilable~l1 opposite~l1 reconcilable~l1 x00000001 )
( reconcilable~l1 opposite~l1 irreconcilable~l1 x00000001 )
( unreserved~l1 opposite~l1 reserved~l1 x00000001 )
( reserved~l1 opposite~l1 unreserved~l1 x00000001 )
( irresistible~l1 opposite~l1 resistible~l1 x00000001 )
( resistible~l1 opposite~l1 irresistible~l1 x00000001 )
( irresolute~l1 opposite~l1 resolute~l1 x00000001 )
( resolute~l1 opposite~l1 irresolute~l1 x00000001 )
( unrespectable~l1 opposite~l1 respectable~l1 x00000001 )
( respectable~l1 opposite~l1 unrespectable~l1 x00000001 )
( disrespectful~l1 opposite~l1 respectful~l1 x00000001 )
( respectful~l1 opposite~l1 disrespectful~l1 x00000001 )
( irresponsible~l1 opposite~l1 responsible~l1 x00000001 )
( responsible~l1 opposite~l1 irresponsible~l1 x00000001 )
( unresponsive~l1 opposite~l1 responsive~l1 x00000001 )
( responsive~l1 opposite~l1 unresponsive~l1 x00000001 )
( unrestrained~l1 opposite~l1 restrained~l1 x00000001 )
( restrained~l1 opposite~l1 unrestrained~l1 x00000001 )
( unrestricted~l1 opposite~l1 restricted~l1 x00000001 )
( restricted~l1 opposite~l1 unrestricted~l1 x00000001 )
( unrestrictive~l1 opposite~l1 restrictive~l1 x00000001 )
( restrictive~l1 opposite~l1 unrestrictive~l1 x00000001 )
( unretentive~l1 opposite~l1 recollective~l1 x00000001 )
( recollective~l1 opposite~l1 unretentive~l1 x00000001 )
( nonreticulate~l1 opposite~l1 reticulate~l1 x00000001 )
( reticulate~l1 opposite~l1 nonreticulate~l1 x00000001 )
( nonretractable~l1 opposite~l1 retractile~l1 x00000001 )
( retractile~l1 opposite~l1 nonretractable~l1 x00000001 )
( nonreflective~l1 opposite~l1 reflective~l1 x00000001 )
( reflective~l1 opposite~l1 nonreflective~l1 x00000001 )
( unreflected~l1 opposite~l1 reflected~l1 x00000001 )
( reflected~l1 opposite~l1 unreflected~l1 x00000001 )
( unreverberant~l1 opposite~l1 reverberant~l1 x00000001 )
( reverberant~l1 opposite~l1 unreverberant~l1 x00000001 )
( irreverent~l1 opposite~l1 reverent~l1 x00000001 )
( reverent~l1 opposite~l1 irreverent~l1 x00000001 )
( unrevived~l1 opposite~l1 revived~l1 x00000001 )
( revived~l1 opposite~l1 unrevived~l1 x00000001 )
( unawakened~l1 opposite~l1 awakened~l1 x00000001 )
( awakened~l1 opposite~l1 unawakened~l1 x00000001 )
( unawed~l1 opposite~l1 awestricken~l1 x00000001 )
( awestricken~l1 opposite~l1 unawed~l1 x00000001 )
( counterrevolutionary~l1 opposite~l1 revolutionary~l1 x00000001 )
( revolutionary~l1 opposite~l1 counterrevolutionary~l1 x00000001 )
( unrewarding~l1 opposite~l1 rewarding~l1 x00000001 )
( rewarding~l1 opposite~l1 unrewarding~l1 x00000001 )
( unrhetorical~l1 opposite~l1 rhetorical~l1 x00000001 )
( rhetorical~l1 opposite~l1 unrhetorical~l1 x00000001 )
( unrhythmical~l1 opposite~l1 rhythmical~l1 x00000001 )
( rhythmical~l1 opposite~l1 unrhythmical~l1 x00000001 )
( ribless~l1 opposite~l1 ribbed~l1 x00000001 )
( ribbed~l1 opposite~l1 ribless~l1 x00000001 )
( poor~l1 opposite~l1 rich~l1 x00000001 )
( rich~l1 opposite~l1 poor~l1 x00000001 )
( moneyless~l1 opposite~l1 moneyed~l1 x00000001 )
( moneyed~l1 opposite~l1 moneyless~l1 x00000001 )
( insolvent~l1 opposite~l1 solvent~l1 x00000001 )
( solvent~l1 opposite~l1 insolvent~l1 x00000001 )
( lean~l1 opposite~l1 rich~l1 x00000001 )
( rich~l1 opposite~l1 lean~l1 x00000001 )
( rimless~l1 opposite~l1 rimmed~l1 x00000001 )
( rimmed~l1 opposite~l1 rimless~l1 x00000001 )
( handless~l1 opposite~l1 handed~l1 x00000001 )
( handed~l1 opposite~l1 handless~l1 x00000001 )
( handleless~l1 opposite~l1 handled~l1 x00000001 )
( handled~l1 opposite~l1 handleless~l1 x00000001 )
( left-handed~l1 opposite~l1 right-handed~l1 x00000001 )
( right-handed~l1 opposite~l1 left-handed~l1 x00000001 )
( ambidextrous~l1 opposite~l1 right-handed~l1 x00000001 )
( right-handed~l1 opposite~l1 ambidextrous~l1 x00000001 )
( ambidextrous~l1 opposite~l1 left-handed~l1 x00000001 )
( left-handed~l1 opposite~l1 ambidextrous~l1 x00000001 )
( center~l1 opposite~l1 right~l1 x00000001 )
( right~l1 opposite~l1 center~l1 x00000001 )
( center~l1 opposite~l1 left~l1 x00000001 )
( left~l1 opposite~l1 center~l1 x00000001 )
( hornless~l1 opposite~l1 horned~l1 x00000001 )
( horned~l1 opposite~l1 hornless~l1 x00000001 )
( wrong~l1 opposite~l1 right~l1 x00000001 )
( right~l1 opposite~l1 wrong~l1 x00000001 )
( unrighteous~l1 opposite~l1 righteous~l1 x00000001 )
( righteous~l1 opposite~l1 unrighteous~l1 x00000001 )
( frail~l1 opposite~l1 robust~l1 x00000001 )
( robust~l1 opposite~l1 frail~l1 x00000001 )
( square~l1 opposite~l1 circular~l1 x00000001 )
( circular~l1 opposite~l1 square~l1 x00000001 )
( angulate~l1 opposite~l1 rounded~l1 x00000001 )
( rounded~l1 opposite~l1 angulate~l1 x00000001 )
( watermelon-shaped~l1 opposite~l1 pumpkin-shaped~l1 x00000001 )
( pumpkin-shaped~l1 opposite~l1 watermelon-shaped~l1 x00000001 )
( urban~l1 opposite~l1 rural~l1 x00000001 )
( rural~l1 opposite~l1 urban~l1 x00000001 )
( rustless~l1 opposite~l1 rusted~l1 x00000001 )
( rusted~l1 opposite~l1 rustless~l1 x00000001 )
( unhallowed~l1 opposite~l1 holy~l1 x00000001 )
( holy~l1 opposite~l1 unhallowed~l1 x00000001 )
( profane~l1 opposite~l1 sacred~l1 x00000001 )
( sacred~l1 opposite~l1 profane~l1 x00000001 )
( masochistic~l1 opposite~l1 sadistic~l1 x00000001 )
( sadistic~l1 opposite~l1 masochistic~l1 x00000001 )
( dangerous~l1 opposite~l1 safe~l1 x00000001 )
( safe~l1 opposite~l1 dangerous~l1 x00000001 )
( out~l1 opposite~l1 safe~l1 x00000001 )
( safe~l1 opposite~l1 out~l1 x00000001 )
( unsaleable~l1 opposite~l1 saleable~l1 x00000001 )
( saleable~l1 opposite~l1 unsaleable~l1 x00000001 )
( different~l1 opposite~l1 same~l1 x00000001 )
( same~l1 opposite~l1 different~l1 x00000001 )
( other~l1 opposite~l1 same~l1 x00000001 )
( same~l1 opposite~l1 other~l1 x00000001 )
( insane~l1 opposite~l1 sane~l1 x00000001 )
( sane~l1 opposite~l1 insane~l1 x00000001 )
( insatiable~l1 opposite~l1 satiated~l1 x00000001 )
( satiated~l1 opposite~l1 insatiable~l1 x00000001 )
( unsarcastic~l1 opposite~l1 sarcastic~l1 x00000001 )
( sarcastic~l1 opposite~l1 unsarcastic~l1 x00000001 )
( unsatisfactory~l1 opposite~l1 satisfactory~l1 x00000001 )
( satisfactory~l1 opposite~l1 unsatisfactory~l1 x00000001 )
( unclimbable~l1 opposite~l1 scalable~l1 x00000001 )
( scalable~l1 opposite~l1 unclimbable~l1 x00000001 )
( unscholarly~l1 opposite~l1 scholarly~l1 x00000001 )
( scholarly~l1 opposite~l1 unscholarly~l1 x00000001 )
( unscientific~l1 opposite~l1 scientific~l1 x00000001 )
( scientific~l1 opposite~l1 unscientific~l1 x00000001 )
( unscrupulous~l1 opposite~l1 scrupulous~l1 x00000001 )
( scrupulous~l1 opposite~l1 unscrupulous~l1 x00000001 )
( unconscientious~l1 opposite~l1 conscientious~l1 x00000001 )
( conscientious~l1 opposite~l1 unconscientious~l1 x00000001 )
( unsealed~l1 opposite~l1 sealed~l1 x00000001 )
( sealed~l1 opposite~l1 unsealed~l1 x00000001 )
( unwrapped~l1 opposite~l1 wrapped~l1 x00000001 )
( wrapped~l1 opposite~l1 unwrapped~l1 x00000001 )
( unseaworthy~l1 opposite~l1 seaworthy~l1 x00000001 )
( seaworthy~l1 opposite~l1 unseaworthy~l1 x00000001 )
( unairworthy~l1 opposite~l1 airworthy~l1 x00000001 )
( airworthy~l1 opposite~l1 unairworthy~l1 x00000001 )
( unconcealed~l1 opposite~l1 concealed~l1 x00000001 )
( concealed~l1 opposite~l1 unconcealed~l1 x00000001 )
( revealing~l1 opposite~l1 concealing~l1 x00000001 )
( concealing~l1 opposite~l1 revealing~l1 x00000001 )
( nonsectarian~l1 opposite~l1 sectarian~l1 x00000001 )
( sectarian~l1 opposite~l1 nonsectarian~l1 x00000001 )
( insecure~l1 opposite~l1 untroubled~l1 x00000001 )
( untroubled~l1 opposite~l1 insecure~l1 x00000001 )
( insecure~l1 opposite~l1 secure~l1 x00000001 )
( secure~l1 opposite~l1 insecure~l1 x00000001 )
( uninsured~l1 opposite~l1 insured~l1 x00000001 )
( insured~l1 opposite~l1 uninsured~l1 x00000001 )
( unseductive~l1 opposite~l1 seductive~l1 x00000001 )
( seductive~l1 opposite~l1 unseductive~l1 x00000001 )
( unselfish~l1 opposite~l1 selfish~l1 x00000001 )
( selfish~l1 opposite~l1 unselfish~l1 x00000001 )
( junior~l1 opposite~l1 senior~l1 x00000001 )
( senior~l1 opposite~l1 junior~l1 x00000001 )
( unsensational~l1 opposite~l1 sensational~l1 x00000001 )
( sensational~l1 opposite~l1 unsensational~l1 x00000001 )
( insensible~l1 opposite~l1 sensitive~l1 x00000001 )
( sensitive~l1 opposite~l1 insensible~l1 x00000001 )
( insensitive~l1 opposite~l1 sensitive~l1 x00000001 )
( sensitive~l1 opposite~l1 insensitive~l1 x00000001 )
( desensitizing~l1 opposite~l1 sensitizing~l1 x00000001 )
( sensitizing~l1 opposite~l1 desensitizing~l1 x00000001 )
( extrasensory~l1 opposite~l1 sensorial~l1 x00000001 )
( sensorial~l1 opposite~l1 extrasensory~l1 x00000001 )
( unsent~l1 opposite~l1 sent~l1 x00000001 )
( sent~l1 opposite~l1 unsent~l1 x00000001 )
( joint~l1 opposite~l1 separate~l1 x00000001 )
( separate~l1 opposite~l1 joint~l1 x00000001 )
( antiseptic~l1 opposite~l1 infected~l1 x00000001 )
( infected~l1 opposite~l1 antiseptic~l1 x00000001 )
( germy~l1 opposite~l1 germfree~l1 x00000001 )
( germfree~l1 opposite~l1 germy~l1 x00000001 )
( purifying~l1 opposite~l1 adulterating~l1 x00000001 )
( adulterating~l1 opposite~l1 purifying~l1 x00000001 )
( frivolous~l1 opposite~l1 serious~l1 x00000001 )
( serious~l1 opposite~l1 frivolous~l1 x00000001 )
( unplayful~l1 opposite~l1 playful~l1 x00000001 )
( playful~l1 opposite~l1 unplayful~l1 x00000001 )
( unselected~l1 opposite~l1 selected~l1 x00000001 )
( selected~l1 opposite~l1 unselected~l1 x00000001 )
( unserviceable~l1 opposite~l1 serviceable~l1 x00000001 )
( serviceable~l1 opposite~l1 unserviceable~l1 x00000001 )
( unsettled~l1 opposite~l1 settled~l1 x00000001 )
( settled~l1 opposite~l1 unsettled~l1 x00000001 )
( nonmigratory~l1 opposite~l1 migratory~l1 x00000001 )
( migratory~l1 opposite~l1 nonmigratory~l1 x00000001 )
( unsexy~l1 opposite~l1 sexy~l1 x00000001 )
( sexy~l1 opposite~l1 unsexy~l1 x00000001 )
( nonsexual~l1 opposite~l1 sexual~l1 x00000001 )
( sexual~l1 opposite~l1 nonsexual~l1 x00000001 )
( uncastrated~l1 opposite~l1 castrated~l1 x00000001 )
( castrated~l1 opposite~l1 uncastrated~l1 x00000001 )
( anaphrodisiac~l1 opposite~l1 aphrodisiacal~l1 x00000001 )
( aphrodisiacal~l1 opposite~l1 anaphrodisiac~l1 x00000001 )
( anestrous~l1 opposite~l1 estrous~l1 x00000001 )
( estrous~l1 opposite~l1 anestrous~l1 x00000001 )
( unshapely~l1 opposite~l1 shapely~l1 x00000001 )
( shapely~l1 opposite~l1 unshapely~l1 x00000001 )
( breastless~l1 opposite~l1 breasted~l1 x00000001 )
( breasted~l1 opposite~l1 breastless~l1 x00000001 )
( unformed~l1 opposite~l1 formed~l1 x00000001 )
( formed~l1 opposite~l1 unformed~l1 x00000001 )
( unshared~l1 opposite~l1 shared~l1 x00000001 )
( shared~l1 opposite~l1 unshared~l1 x00000001 )
( unshaven~l1 opposite~l1 shaven~l1 x00000001 )
( shaven~l1 opposite~l1 unshaven~l1 x00000001 )
( unsheared~l1 opposite~l1 sheared~l1 x00000001 )
( sheared~l1 opposite~l1 unsheared~l1 x00000001 )
( unsheathed~l1 opposite~l1 sheathed~l1 x00000001 )
( sheathed~l1 opposite~l1 unsheathed~l1 x00000001 )
( unshoed~l1 opposite~l1 shodden~l1 x00000001 )
( shodden~l1 opposite~l1 unshoed~l1 x00000001 )
( discalceate~l1 opposite~l1 calced~l1 x00000001 )
( calced~l1 opposite~l1 discalceate~l1 x00000001 )
( farsighted~l1 opposite~l1 shortsighted~l1 x00000001 )
( shortsighted~l1 opposite~l1 farsighted~l1 x00000001 )
( unshrinkable~l1 opposite~l1 shrinkable~l1 x00000001 )
( shrinkable~l1 opposite~l1 unshrinkable~l1 x00000001 )
( unsighted~l1 opposite~l1 sighted~l1 x00000001 )
( sighted~l1 opposite~l1 unsighted~l1 x00000001 )
( unsigned~l1 opposite~l1 signed~l1 x00000001 )
( signed~l1 opposite~l1 unsigned~l1 x00000001 )
( insignificant~l1 opposite~l1 significant~l1 x00000001 )
( significant~l1 opposite~l1 insignificant~l1 x00000001 )
( nonsignificant~l1 opposite~l1 significant~l1 x00000001 )
( significant~l1 opposite~l1 nonsignificant~l1 x00000001 )
( unsilenced~l1 opposite~l1 silenced~l1 x00000001 )
( silenced~l1 opposite~l1 unsilenced~l1 x00000001 )
( compound~l1 opposite~l1 unsubdivided~l1 x00000001 )
( unsubdivided~l1 opposite~l1 compound~l1 x00000001 )
( complex~l1 opposite~l1 simple~l1 x00000001 )
( simple~l1 opposite~l1 complex~l1 x00000001 )
( insincere~l1 opposite~l1 sincere~l1 x00000001 )
( sincere~l1 opposite~l1 insincere~l1 x00000001 )
( plural~l1 opposite~l1 singular~l1 x00000001 )
( singular~l1 opposite~l1 plural~l1 x00000001 )
( ordinal~l1 opposite~l1 cardinal~l1 x00000001 )
( cardinal~l1 opposite~l1 ordinal~l1 x00000001 )
( unscripted~l1 opposite~l1 scripted~l1 x00000001 )
( scripted~l1 opposite~l1 unscripted~l1 x00000001 )
( unsinkable~l1 opposite~l1 sinkable~l1 x00000001 )
( sinkable~l1 opposite~l1 unsinkable~l1 x00000001 )
( multiple~l1 opposite~l1 single~l1 x00000001 )
( single~l1 opposite~l1 multiple~l1 x00000001 )
( single~l1 opposite~l1 double~l1 x00000001 )
( double~l1 opposite~l1 single~l1 x00000001 )
( true-false~l1 opposite~l1 multiple-choice~l1 x00000001 )
( multiple-choice~l1 opposite~l1 true-false~l1 x00000001 )
( multilane~l1 opposite~l1 single-lane~l1 x00000001 )
( single-lane~l1 opposite~l1 multilane~l1 x00000001 )
( unsized~l1 opposite~l1 sized~l1 x00000001 )
( sized~l1 opposite~l1 unsized~l1 x00000001 )
( unskilled~l1 opposite~l1 skilled~l1 x00000001 )
( skilled~l1 opposite~l1 unskilled~l1 x00000001 )
( mathematical~l1 opposite~l1 verbal~l1 x00000001 )
( verbal~l1 opposite~l1 mathematical~l1 x00000001 )
( fine~l1 opposite~l1 coarse~l1 x00000001 )
( coarse~l1 opposite~l1 fine~l1 x00000001 )
( smokeless~l1 opposite~l1 smoky~l1 x00000001 )
( smoky~l1 opposite~l1 smokeless~l1 x00000001 )
( nonslippery~l1 opposite~l1 slippery~l1 x00000001 )
( slippery~l1 opposite~l1 nonslippery~l1 x00000001 )
( unlubricated~l1 opposite~l1 lubricated~l1 x00000001 )
( lubricated~l1 opposite~l1 unlubricated~l1 x00000001 )
( unsmooth~l1 opposite~l1 smooth~l1 x00000001 )
( smooth~l1 opposite~l1 unsmooth~l1 x00000001 )
( jolting~l1 opposite~l1 smooth~l1 x00000001 )
( smooth~l1 opposite~l1 jolting~l1 x00000001 )
( unfurrowed~l1 opposite~l1 furrowed~l1 x00000001 )
( furrowed~l1 opposite~l1 unfurrowed~l1 x00000001 )
( rough~l1 opposite~l1 smooth~l1 x00000001 )
( smooth~l1 opposite~l1 rough~l1 x00000001 )
( smoothbore~l1 opposite~l1 rifled~l1 x00000001 )
( rifled~l1 opposite~l1 smoothbore~l1 x00000001 )
( unsocial~l1 opposite~l1 social~l1 x00000001 )
( social~l1 opposite~l1 unsocial~l1 x00000001 )
( unaccompanied~l1 opposite~l1 accompanied~l1 x00000001 )
( accompanied~l1 opposite~l1 unaccompanied~l1 x00000001 )
( ungregarious~l1 opposite~l1 gregarious~l1 x00000001 )
( gregarious~l1 opposite~l1 ungregarious~l1 x00000001 )
( seamless~l1 opposite~l1 seamed~l1 x00000001 )
( seamed~l1 opposite~l1 seamless~l1 x00000001 )
( unseeded~l1 opposite~l1 seeded~l1 x00000001 )
( seeded~l1 opposite~l1 unseeded~l1 x00000001 )
( seedless~l1 opposite~l1 seedy~l1 x00000001 )
( seedy~l1 opposite~l1 seedless~l1 x00000001 )
( unshuttered~l1 opposite~l1 shuttered~l1 x00000001 )
( shuttered~l1 opposite~l1 unshuttered~l1 x00000001 )
( sleeveless~l1 opposite~l1 sleeved~l1 x00000001 )
( sleeved~l1 opposite~l1 sleeveless~l1 x00000001 )
( unsociable~l1 opposite~l1 sociable~l1 x00000001 )
( sociable~l1 opposite~l1 unsociable~l1 x00000001 )
( unsold~l1 opposite~l1 sold~l1 x00000001 )
( sold~l1 opposite~l1 unsold~l1 x00000001 )
( soleless~l1 opposite~l1 soled~l1 x00000001 )
( soled~l1 opposite~l1 soleless~l1 x00000001 )
( liquid~l1 opposite~l1 solid~l1 x00000001 )
( solid~l1 opposite~l1 liquid~l1 x00000001 )
( gaseous~l1 opposite~l1 solid~l1 x00000001 )
( solid~l1 opposite~l1 gaseous~l1 x00000001 )
( gaseous~l1 opposite~l1 liquid~l1 x00000001 )
( liquid~l1 opposite~l1 gaseous~l1 x00000001 )
( hollow~l1 opposite~l1 solid~l1 x00000001 )
( solid~l1 opposite~l1 hollow~l1 x00000001 )
( indissoluble~l1 opposite~l1 soluble~l1 x00000001 )
( soluble~l1 opposite~l1 indissoluble~l1 x00000001 )
( insoluble~l1 opposite~l1 soluble~l1 x00000001 )
( soluble~l1 opposite~l1 insoluble~l1 x00000001 )
( unresolved~l1 opposite~l1 resolved~l1 x00000001 )
( resolved~l1 opposite~l1 unresolved~l1 x00000001 )
( no~l1 opposite~l1 some~l1 x00000001 )
( some~l1 opposite~l1 no~l1 x00000001 )
( all~l1 opposite~l1 some~l1 x00000001 )
( some~l1 opposite~l1 all~l1 x00000001 )
( all~l1 opposite~l1 no~l1 x00000001 )
( no~l1 opposite~l1 all~l1 x00000001 )
( naive~l1 opposite~l1 sophisticated~l1 x00000001 )
( sophisticated~l1 opposite~l1 naive~l1 x00000001 )
( unsound~l1 opposite~l1 sound~l1 x00000001 )
( sound~l1 opposite~l1 unsound~l1 x00000001 )
( noneffervescent~l1 opposite~l1 effervescent~l1 x00000001 )
( effervescent~l1 opposite~l1 noneffervescent~l1 x00000001 )
( unspecialized~l1 opposite~l1 specialized~l1 x00000001 )
( specialized~l1 opposite~l1 unspecialized~l1 x00000001 )
( spineless~l1 opposite~l1 spinous~l1 x00000001 )
( spinous~l1 opposite~l1 spineless~l1 x00000001 )
( spiritless~l1 opposite~l1 spirited~l1 x00000001 )
( spirited~l1 opposite~l1 spiritless~l1 x00000001 )
( induced~l1 opposite~l1 self-generated~l1 x00000001 )
( self-generated~l1 opposite~l1 induced~l1 x00000001 )
( written~l1 opposite~l1 spoken~l1 x00000001 )
( spoken~l1 opposite~l1 written~l1 x00000001 )
( voiceless~l1 opposite~l1 voiced~l1 x00000001 )
( voiced~l1 opposite~l1 voiceless~l1 x00000001 )
( unwritten~l1 opposite~l1 written~l1 x00000001 )
( written~l1 opposite~l1 unwritten~l1 x00000001 )
( consonantal~l1 opposite~l1 vocalic~l1 x00000001 )
( vocalic~l1 opposite~l1 consonantal~l1 x00000001 )
( unstoppable~l1 opposite~l1 stoppable~l1 x00000001 )
( stoppable~l1 opposite~l1 unstoppable~l1 x00000001 )
( nonsyllabic~l1 opposite~l1 syllabic~l1 x00000001 )
( syllabic~l1 opposite~l1 nonsyllabic~l1 x00000001 )
( accentual~l1 opposite~l1 syllabic~l1 x00000001 )
( syllabic~l1 opposite~l1 accentual~l1 x00000001 )
( quantitative~l1 opposite~l1 syllabic~l1 x00000001 )
( syllabic~l1 opposite~l1 quantitative~l1 x00000001 )
( quantitative~l1 opposite~l1 accentual~l1 x00000001 )
( accentual~l1 opposite~l1 quantitative~l1 x00000001 )
( unstable~l1 opposite~l1 stable~l1 x00000001 )
( stable~l1 opposite~l1 unstable~l1 x00000001 )
( legato~l1 opposite~l1 disconnected~l1 x00000001 )
( disconnected~l1 opposite~l1 legato~l1 x00000001 )
( unstaged~l1 opposite~l1 staged~l1 x00000001 )
( staged~l1 opposite~l1 unstaged~l1 x00000001 )
( nonstandard~l1 opposite~l1 standard~l1 x00000001 )
( standard~l1 opposite~l1 nonstandard~l1 x00000001 )
( starchless~l1 opposite~l1 starchy~l1 x00000001 )
( starchy~l1 opposite~l1 starchless~l1 x00000001 )
( starless~l1 opposite~l1 starry~l1 x00000001 )
( starry~l1 opposite~l1 starless~l1 x00000001 )
( malnourished~l1 opposite~l1 nourished~l1 x00000001 )
( nourished~l1 opposite~l1 malnourished~l1 x00000001 )
( unsteady~l1 opposite~l1 steady~l1 x00000001 )
( steady~l1 opposite~l1 unsteady~l1 x00000001 )
( stemless~l1 opposite~l1 stemmed~l1 x00000001 )
( stemmed~l1 opposite~l1 stemless~l1 x00000001 )
( unstimulating~l1 opposite~l1 stimulating~l1 x00000001 )
( stimulating~l1 opposite~l1 unstimulating~l1 x00000001 )
( stimulative~l1 opposite~l1 depressant~l1 x00000001 )
( depressant~l1 opposite~l1 stimulative~l1 x00000001 )
( astomatous~l1 opposite~l1 stomatous~l1 x00000001 )
( stomatous~l1 opposite~l1 astomatous~l1 x00000001 )
( crooked~l1 opposite~l1 straight~l1 x00000001 )
( straight~l1 opposite~l1 crooked~l1 x00000001 )
( curving~l1 opposite~l1 straight~l1 x00000001 )
( straight~l1 opposite~l1 curving~l1 x00000001 )
( uncoiled~l1 opposite~l1 coiled~l1 x00000001 )
( coiled~l1 opposite~l1 uncoiled~l1 x00000001 )
( unstressed~l1 opposite~l1 stressed~l1 x00000001 )
( stressed~l1 opposite~l1 unstressed~l1 x00000001 )
( unaccented~l1 opposite~l1 accented~l1 x00000001 )
( accented~l1 opposite~l1 unaccented~l1 x00000001 )
( weak~l1 opposite~l1 strong~l1 x00000001 )
( strong~l1 opposite~l1 weak~l1 x00000001 )
( docile~l1 opposite~l1 unregenerate~l1 x00000001 )
( unregenerate~l1 opposite~l1 docile~l1 x00000001 )
( insubordinate~l1 opposite~l1 subordinate~l1 x00000001 )
( subordinate~l1 opposite~l1 insubordinate~l1 x00000001 )
( unsuccessful~l1 opposite~l1 successful~l1 x00000001 )
( successful~l1 opposite~l1 unsuccessful~l1 x00000001 )
( insufficient~l1 opposite~l1 sufficient~l1 x00000001 )
( sufficient~l1 opposite~l1 insufficient~l1 x00000001 )
( sugarless~l1 opposite~l1 sugary~l1 x00000001 )
( sugary~l1 opposite~l1 sugarless~l1 x00000001 )
( inferior~l1 opposite~l1 superior~l1 x00000001 )
( superior~l1 opposite~l1 inferior~l1 x00000001 )
( subjacent~l1 opposite~l1 superjacent~l1 x00000001 )
( superjacent~l1 opposite~l1 subjacent~l1 x00000001 )
( adscript~l1 opposite~l1 superscript~l1 x00000001 )
( superscript~l1 opposite~l1 adscript~l1 x00000001 )
( adscript~l1 opposite~l1 subscript~l1 x00000001 )
( subscript~l1 opposite~l1 adscript~l1 x00000001 )
( unsupervised~l1 opposite~l1 supervised~l1 x00000001 )
( supervised~l1 opposite~l1 unsupervised~l1 x00000001 )
( unsupported~l1 opposite~l1 supported~l1 x00000001 )
( supported~l1 opposite~l1 unsupported~l1 x00000001 )
( unassisted~l1 opposite~l1 assisted~l1 x00000001 )
( assisted~l1 opposite~l1 unassisted~l1 x00000001 )
( unsupportive~l1 opposite~l1 supportive~l1 x00000001 )
( supportive~l1 opposite~l1 unsupportive~l1 x00000001 )
( insurmountable~l1 opposite~l1 surmountable~l1 x00000001 )
( surmountable~l1 opposite~l1 insurmountable~l1 x00000001 )
( not_surprised~l1 opposite~l1 surprised~l1 x00000001 )
( surprised~l1 opposite~l1 not_surprised~l1 x00000001 )
( unsurprising~l1 opposite~l1 surprising~l1 x00000001 )
( surprising~l1 opposite~l1 unsurprising~l1 x00000001 )
( unsusceptible~l1 opposite~l1 susceptible~l1 x00000001 )
( susceptible~l1 opposite~l1 unsusceptible~l1 x00000001 )
( unimpressionable~l1 opposite~l1 impressionable~l1 x00000001 )
( impressionable~l1 opposite~l1 unimpressionable~l1 x00000001 )
( nonexempt~l1 opposite~l1 exempt~l1 x00000001 )
( exempt~l1 opposite~l1 nonexempt~l1 x00000001 )
( unscheduled~l1 opposite~l1 scheduled~l1 x00000001 )
( scheduled~l1 opposite~l1 unscheduled~l1 x00000001 )
( dry~l1 opposite~l1 sweet~l1 x00000001 )
( sweet~l1 opposite~l1 dry~l1 x00000001 )
( sour~l1 opposite~l1 sweet~l1 x00000001 )
( sweet~l1 opposite~l1 sour~l1 x00000001 )
( unsoured~l1 opposite~l1 soured~l1 x00000001 )
( soured~l1 opposite~l1 unsoured~l1 x00000001 )
( unsuspected~l1 opposite~l1 suspected~l1 x00000001 )
( suspected~l1 opposite~l1 unsuspected~l1 x00000001 )
( unswept~l1 opposite~l1 swept~l1 x00000001 )
( swept~l1 opposite~l1 unswept~l1 x00000001 )
( unsworn~l1 opposite~l1 sworn~l1 x00000001 )
( sworn~l1 opposite~l1 unsworn~l1 x00000001 )
( asymmetrical~l1 opposite~l1 symmetrical~l1 x00000001 )
( symmetrical~l1 opposite~l1 asymmetrical~l1 x00000001 )
( bilaterally_symmetrical~l1 opposite~l1 actinomorphous~l1 x00000001 )
( actinomorphous~l1 opposite~l1 bilaterally_symmetrical~l1 x00000001 )
( unsympathetic~l1 opposite~l1 sympathetic~l1 x00000001 )
( sympathetic~l1 opposite~l1 unsympathetic~l1 x00000001 )
( allopatric~l1 opposite~l1 sympatric~l1 x00000001 )
( sympatric~l1 opposite~l1 allopatric~l1 x00000001 )
( diachronic~l1 opposite~l1 synchronic~l1 x00000001 )
( synchronic~l1 opposite~l1 diachronic~l1 x00000001 )
( asynchronous~l1 opposite~l1 synchronous~l1 x00000001 )
( synchronous~l1 opposite~l1 asynchronous~l1 x00000001 )
( asyndetic~l1 opposite~l1 syndetic~l1 x00000001 )
( syndetic~l1 opposite~l1 asyndetic~l1 x00000001 )
( antonymous~l1 opposite~l1 synonymous~l1 x00000001 )
( synonymous~l1 opposite~l1 antonymous~l1 x00000001 )
( unsystematic~l1 opposite~l1 systematic~l1 x00000001 )
( systematic~l1 opposite~l1 unsystematic~l1 x00000001 )
( voluble~l1 opposite~l1 taciturn~l1 x00000001 )
( taciturn~l1 opposite~l1 voluble~l1 x00000001 )
( untactful~l1 opposite~l1 tactful~l1 x00000001 )
( tactful~l1 opposite~l1 untactful~l1 x00000001 )
( little~l1 opposite~l1 tall~l1 x00000001 )
( tall~l1 opposite~l1 little~l1 x00000001 )
( untamed~l1 opposite~l1 tamed~l1 x00000001 )
( tamed~l1 opposite~l1 untamed~l1 x00000001 )
( wild~l1 opposite~l1 tame~l1 x00000001 )
( tame~l1 opposite~l1 wild~l1 x00000001 )
( intangible~l1 opposite~l1 touchable~l1 x00000001 )
( touchable~l1 opposite~l1 intangible~l1 x00000001 )
( intangible~l1 opposite~l1 tangible~l1 x00000001 )
( tangible~l1 opposite~l1 intangible~l1 x00000001 )
( tasteless~l1 opposite~l1 tasteful~l1 x00000001 )
( tasteful~l1 opposite~l1 tasteless~l1 x00000001 )
( tasteless~l1 opposite~l1 tasty~l1 x00000001 )
( tasty~l1 opposite~l1 tasteless~l1 x00000001 )
( nontaxable~l1 opposite~l1 nonexempt~l1 x00000001 )
( nonexempt~l1 opposite~l1 nontaxable~l1 x00000001 )
( intemperate~l1 opposite~l1 temperate~l1 x00000001 )
( temperate~l1 opposite~l1 intemperate~l1 x00000001 )
( lax~l1 opposite~l1 tense~l1 x00000001 )
( tense~l1 opposite~l1 lax~l1 x00000001 )
( relaxed~l1 opposite~l1 tense~l1 x00000001 )
( tense~l1 opposite~l1 relaxed~l1 x00000001 )
( extraterritorial~l1 opposite~l1 territorial~l1 x00000001 )
( territorial~l1 opposite~l1 extraterritorial~l1 x00000001 )
( nonterritorial~l1 opposite~l1 territorial~l1 x00000001 )
( territorial~l1 opposite~l1 nonterritorial~l1 x00000001 )
( thermosetting~l1 opposite~l1 thermoplastic~l1 x00000001 )
( thermoplastic~l1 opposite~l1 thermosetting~l1 x00000001 )
( thin~l1 opposite~l1 thick~l1 x00000001 )
( thick~l1 opposite~l1 thin~l1 x00000001 )
( unthinkable~l1 opposite~l1 thinkable~l1 x00000001 )
( thinkable~l1 opposite~l1 unthinkable~l1 x00000001 )
( thoughtless~l1 opposite~l1 thoughtful~l1 x00000001 )
( thoughtful~l1 opposite~l1 thoughtless~l1 x00000001 )
( wasteful~l1 opposite~l1 thrifty~l1 x00000001 )
( thrifty~l1 opposite~l1 wasteful~l1 x00000001 )
( untidy~l1 opposite~l1 tidy~l1 x00000001 )
( tidy~l1 opposite~l1 untidy~l1 x00000001 )
( ungroomed~l1 opposite~l1 groomed~l1 x00000001 )
( groomed~l1 opposite~l1 ungroomed~l1 x00000001 )
( uncombed~l1 opposite~l1 combed~l1 x00000001 )
( combed~l1 opposite~l1 uncombed~l1 x00000001 )
( untimbered~l1 opposite~l1 timbered~l1 x00000001 )
( timbered~l1 opposite~l1 untimbered~l1 x00000001 )
( toneless~l1 opposite~l1 toned~l1 x00000001 )
( toned~l1 opposite~l1 toneless~l1 x00000001 )
( tongueless~l1 opposite~l1 tongued~l1 x00000001 )
( tongued~l1 opposite~l1 tongueless~l1 x00000001 )
( untipped~l1 opposite~l1 tipped~l1 x00000001 )
( tipped~l1 opposite~l1 untipped~l1 x00000001 )
( rested~l1 opposite~l1 tired~l1 x00000001 )
( tired~l1 opposite~l1 rested~l1 x00000001 )
( intolerable~l1 opposite~l1 tolerable~l1 x00000001 )
( tolerable~l1 opposite~l1 intolerable~l1 x00000001 )
( intolerant~l1 opposite~l1 tolerant~l1 x00000001 )
( tolerant~l1 opposite~l1 intolerant~l1 x00000001 )
( unkeyed~l1 opposite~l1 tonal~l1 x00000001 )
( tonal~l1 opposite~l1 unkeyed~l1 x00000001 )
( toothless~l1 opposite~l1 toothed~l1 x00000001 )
( toothed~l1 opposite~l1 toothless~l1 x00000001 )
( bottom~l1 opposite~l1 top~l1 x00000001 )
( top~l1 opposite~l1 bottom~l1 x00000001 )
( side~l1 opposite~l1 top~l1 x00000001 )
( top~l1 opposite~l1 side~l1 x00000001 )
( side~l1 opposite~l1 bottom~l1 x00000001 )
( bottom~l1 opposite~l1 side~l1 x00000001 )
( topless~l1 opposite~l1 topped~l1 x00000001 )
( topped~l1 opposite~l1 topless~l1 x00000001 )
( bottomless~l1 opposite~l1 bottomed~l1 x00000001 )
( bottomed~l1 opposite~l1 bottomless~l1 x00000001 )
( bottom-up~l1 opposite~l1 top-down~l1 x00000001 )
( top-down~l1 opposite~l1 bottom-up~l1 x00000001 )
( polar~l1 opposite~l1 equatorial~l1 x00000001 )
( equatorial~l1 opposite~l1 polar~l1 x00000001 )
( intestate~l1 opposite~l1 testate~l1 x00000001 )
( testate~l1 opposite~l1 intestate~l1 x00000001 )
( untouched~l1 opposite~l1 touched~l1 x00000001 )
( touched~l1 opposite~l1 untouched~l1 x00000001 )
( tender~l1 opposite~l1 tough~l1 x00000001 )
( tough~l1 opposite~l1 tender~l1 x00000001 )
( untoughened~l1 opposite~l1 toughened~l1 x00000001 )
( toughened~l1 opposite~l1 untoughened~l1 x00000001 )
( nontoxic~l1 opposite~l1 toxic~l1 x00000001 )
( toxic~l1 opposite~l1 nontoxic~l1 x00000001 )
( intractable~l1 opposite~l1 manipulable~l1 x00000001 )
( manipulable~l1 opposite~l1 intractable~l1 x00000001 )
( a_la_carte~l1 opposite~l1 table_d'hote~l1 x00000001 )
( table_d'hote~l1 opposite~l1 a_la_carte~l1 x00000001 )
( untraceable~l1 opposite~l1 traceable~l1 x00000001 )
( traceable~l1 opposite~l1 untraceable~l1 x00000001 )
( trackless~l1 opposite~l1 tracked~l1 x00000001 )
( tracked~l1 opposite~l1 trackless~l1 x00000001 )
( untravelled~l1 opposite~l1 traveled~l1 x00000001 )
( traveled~l1 opposite~l1 untravelled~l1 x00000001 )
( untrimmed~l1 opposite~l1 trimmed~l1 x00000001 )
( trimmed~l1 opposite~l1 untrimmed~l1 x00000001 )
( untroubled~l1 opposite~l1 troubled~l1 x00000001 )
( troubled~l1 opposite~l1 untroubled~l1 x00000001 )
( false~l1 opposite~l1 true~l1 x00000001 )
( true~l1 opposite~l1 false~l1 x00000001 )
( distrustful~l1 opposite~l1 trustful~l1 x00000001 )
( trustful~l1 opposite~l1 distrustful~l1 x00000001 )
( untrustworthy~l1 opposite~l1 trustworthy~l1 x00000001 )
( trustworthy~l1 opposite~l1 untrustworthy~l1 x00000001 )
( tubeless~l1 opposite~l1 tubed~l1 x00000001 )
( tubed~l1 opposite~l1 tubeless~l1 x00000001 )
( untucked~l1 opposite~l1 tucked~l1 x00000001 )
( tucked~l1 opposite~l1 untucked~l1 x00000001 )
( unturned~l1 opposite~l1 turned~l1 x00000001 )
( turned~l1 opposite~l1 unturned~l1 x00000001 )
( untypical~l1 opposite~l1 typical~l1 x00000001 )
( typical~l1 opposite~l1 untypical~l1 x00000001 )
( overhanded~l1 opposite~l1 underhanded~l1 x00000001 )
( underhanded~l1 opposite~l1 overhanded~l1 x00000001 )
( subsurface~l1 opposite~l1 surface~l1 x00000001 )
( surface~l1 opposite~l1 subsurface~l1 x00000001 )
( overhead~l1 opposite~l1 surface~l1 x00000001 )
( surface~l1 opposite~l1 overhead~l1 x00000001 )
( overhead~l1 opposite~l1 subsurface~l1 x00000001 )
( subsurface~l1 opposite~l1 overhead~l1 x00000001 )
( nonsubmersible~l1 opposite~l1 submersible~l1 x00000001 )
( submersible~l1 opposite~l1 nonsubmersible~l1 x00000001 )
( tearless~l1 opposite~l1 tearful~l1 x00000001 )
( tearful~l1 opposite~l1 tearless~l1 x00000001 )
( nonunion~l1 opposite~l1 union~l1 x00000001 )
( union~l1 opposite~l1 nonunion~l1 x00000001 )
( multiparous~l1 opposite~l1 uniparous~l1 x00000001 )
( uniparous~l1 opposite~l1 multiparous~l1 x00000001 )
( bipolar~l1 opposite~l1 unipolar~l1 x00000001 )
( unipolar~l1 opposite~l1 bipolar~l1 x00000001 )
( divided~l1 opposite~l1 united~l1 x00000001 )
( united~l1 opposite~l1 divided~l1 x00000001 )
( connate~l1 opposite~l1 adnate~l1 x00000001 )
( adnate~l1 opposite~l1 connate~l1 x00000001 )
( bivalved~l1 opposite~l1 univalve~l1 x00000001 )
( univalve~l1 opposite~l1 bivalved~l1 x00000001 )
( descending~l1 opposite~l1 ascending~l1 x00000001 )
( ascending~l1 opposite~l1 descending~l1 x00000001 )
( falling~l1 opposite~l1 rising~l1 x00000001 )
( rising~l1 opposite~l1 falling~l1 x00000001 )
( anticlimactic~l1 opposite~l1 climactic~l1 x00000001 )
( climactic~l1 opposite~l1 anticlimactic~l1 x00000001 )
( downmarket~l1 opposite~l1 upmarket~l1 x00000001 )
( upmarket~l1 opposite~l1 downmarket~l1 x00000001 )
( intransitive~l1 opposite~l1 transitive~l1 x00000001 )
( transitive~l1 opposite~l1 intransitive~l1 x00000001 )
( untranslatable~l1 opposite~l1 translatable~l1 x00000001 )
( translatable~l1 opposite~l1 untranslatable~l1 x00000001 )
( unguiculated~l1 opposite~l1 ungulated~l1 x00000001 )
( ungulated~l1 opposite~l1 unguiculated~l1 x00000001 )
( downstairs~l1 opposite~l1 upstairs~l1 x00000001 )
( upstairs~l1 opposite~l1 downstairs~l1 x00000001 )
( misused~l1 opposite~l1 used~l1 x00000001 )
( used~l1 opposite~l1 misused~l1 x00000001 )
( useless~l1 opposite~l1 useful~l1 x00000001 )
( useful~l1 opposite~l1 useless~l1 x00000001 )
( dystopian~l1 opposite~l1 utopian~l1 x00000001 )
( utopian~l1 opposite~l1 dystopian~l1 x00000001 )
( invalid~l1 opposite~l1 valid~l1 x00000001 )
( valid~l1 opposite~l1 invalid~l1 x00000001 )
( worthless~l1 opposite~l1 valuable~l1 x00000001 )
( valuable~l1 opposite~l1 worthless~l1 x00000001 )
( invariable~l1 opposite~l1 variable~l1 x00000001 )
( variable~l1 opposite~l1 invariable~l1 x00000001 )
( unvarying~l1 opposite~l1 varied~l1 x00000001 )
( varied~l1 opposite~l1 unvarying~l1 x00000001 )
( unveiled~l1 opposite~l1 veiled~l1 x00000001 )
( veiled~l1 opposite~l1 unveiled~l1 x00000001 )
( unventilated~l1 opposite~l1 ventilated~l1 x00000001 )
( ventilated~l1 opposite~l1 unventilated~l1 x00000001 )
( invertebrate~l1 opposite~l1 vertebrate~l1 x00000001 )
( vertebrate~l1 opposite~l1 invertebrate~l1 x00000001 )
( inviolable~l1 opposite~l1 violable~l1 x00000001 )
( violable~l1 opposite~l1 inviolable~l1 x00000001 )
( nonviolent~l1 opposite~l1 violent~l1 x00000001 )
( violent~l1 opposite~l1 nonviolent~l1 x00000001 )
( wicked~l1 opposite~l1 virtuous~l1 x00000001 )
( virtuous~l1 opposite~l1 wicked~l1 x00000001 )
( invisible~l1 opposite~l1 visible~l1 x00000001 )
( visible~l1 opposite~l1 invisible~l1 x00000001 )
( oviparous~l1 opposite~l1 live-bearing~l1 x00000001 )
( live-bearing~l1 opposite~l1 oviparous~l1 x00000001 )
( ovoviviparous~l1 opposite~l1 live-bearing~l1 x00000001 )
( live-bearing~l1 opposite~l1 ovoviviparous~l1 x00000001 )
( ovoviviparous~l1 opposite~l1 oviparous~l1 x00000001 )
( oviparous~l1 opposite~l1 ovoviviparous~l1 x00000001 )
( nonvolatilizable~l1 opposite~l1 volatile~l1 x00000001 )
( volatile~l1 opposite~l1 nonvolatilizable~l1 x00000001 )
( nonvoluntary~l1 opposite~l1 voluntary~l1 x00000001 )
( voluntary~l1 opposite~l1 nonvoluntary~l1 x00000001 )
( involuntary~l1 opposite~l1 voluntary~l1 x00000001 )
( voluntary~l1 opposite~l1 involuntary~l1 x00000001 )
( invulnerable~l1 opposite~l1 vulnerable~l1 x00000001 )
( vulnerable~l1 opposite~l1 invulnerable~l1 x00000001 )
( unwanted~l1 opposite~l1 wanted~l1 x00000001 )
( wanted~l1 opposite~l1 unwanted~l1 x00000001 )
( cool~l1 opposite~l1 warm~l1 x00000001 )
( warm~l1 opposite~l1 cool~l1 x00000001 )
( cold-blooded~l1 opposite~l1 warm-blooded~l1 x00000001 )
( warm-blooded~l1 opposite~l1 cold-blooded~l1 x00000001 )
( coldhearted~l1 opposite~l1 warmhearted~l1 x00000001 )
( warmhearted~l1 opposite~l1 coldhearted~l1 x00000001 )
( nonwashable~l1 opposite~l1 washable~l1 x00000001 )
( washable~l1 opposite~l1 nonwashable~l1 x00000001 )
( unwaxed~l1 opposite~l1 waxed~l1 x00000001 )
( waxed~l1 opposite~l1 unwaxed~l1 x00000001 )
( decreasing~l1 opposite~l1 increasing~l1 x00000001 )
( increasing~l1 opposite~l1 decreasing~l1 x00000001 )
( deflationary~l1 opposite~l1 inflationary~l1 x00000001 )
( inflationary~l1 opposite~l1 deflationary~l1 x00000001 )
( unweaned~l1 opposite~l1 weaned~l1 x00000001 )
( weaned~l1 opposite~l1 unweaned~l1 x00000001 )
( unwearable~l1 opposite~l1 wearable~l1 x00000001 )
( wearable~l1 opposite~l1 unwearable~l1 x00000001 )
( weedless~l1 opposite~l1 weedy~l1 x00000001 )
( weedy~l1 opposite~l1 weedless~l1 x00000001 )
( unwelcome~l1 opposite~l1 welcome~l1 x00000001 )
( welcome~l1 opposite~l1 unwelcome~l1 x00000001 )
( sick~l1 opposite~l1 well~l1 x00000001 )
( well~l1 opposite~l1 sick~l1 x00000001 )
( dry~l1 opposite~l1 wet~l1 x00000001 )
( wet~l1 opposite~l1 dry~l1 x00000001 )
( dry~l1 opposite~l1 lactating~l1 x00000001 )
( lactating~l1 opposite~l1 dry~l1 x00000001 )
( anhydrous~l1 opposite~l1 hydrated~l1 x00000001 )
( hydrated~l1 opposite~l1 anhydrous~l1 x00000001 )
( wheelless~l1 opposite~l1 wheeled~l1 x00000001 )
( wheeled~l1 opposite~l1 wheelless~l1 x00000001 )
( blue-collar~l1 opposite~l1 white-collar~l1 x00000001 )
( white-collar~l1 opposite~l1 blue-collar~l1 x00000001 )
( unwholesome~l1 opposite~l1 wholesome~l1 x00000001 )
( wholesome~l1 opposite~l1 unwholesome~l1 x00000001 )
( narrow~l1 opposite~l1 broad~l1 x00000001 )
( broad~l1 opposite~l1 narrow~l1 x00000001 )
( narrow~l1 opposite~l1 wide~l1 x00000001 )
( wide~l1 opposite~l1 narrow~l1 x00000001 )
( unmanageable~l1 opposite~l1 wieldy~l1 x00000001 )
( wieldy~l1 opposite~l1 unmanageable~l1 x00000001 )
( wigless~l1 opposite~l1 wigged~l1 x00000001 )
( wigged~l1 opposite~l1 wigless~l1 x00000001 )
( unwilling~l1 opposite~l1 willing~l1 x00000001 )
( willing~l1 opposite~l1 unwilling~l1 x00000001 )
( wingless~l1 opposite~l1 winged~l1 x00000001 )
( winged~l1 opposite~l1 wingless~l1 x00000001 )
( wireless~l1 opposite~l1 wired~l1 x00000001 )
( wired~l1 opposite~l1 wireless~l1 x00000001 )
( foolish~l1 opposite~l1 wise~l1 x00000001 )
( wise~l1 opposite~l1 foolish~l1 x00000001 )
( unwooded~l1 opposite~l1 wooded~l1 x00000001 )
( wooded~l1 opposite~l1 unwooded~l1 x00000001 )
( nonwoody~l1 opposite~l1 woody~l1 x00000001 )
( woody~l1 opposite~l1 nonwoody~l1 x00000001 )
( unworldly~l1 opposite~l1 temporal~l1 x00000001 )
( temporal~l1 opposite~l1 unworldly~l1 x00000001 )
( unwoven~l1 opposite~l1 woven~l1 x00000001 )
( woven~l1 opposite~l1 unwoven~l1 x00000001 )
( new~l1 opposite~l1 worn~l1 x00000001 )
( worn~l1 opposite~l1 new~l1 x00000001 )
( unworthy~l1 opposite~l1 worthy~l1 x00000001 )
( worthy~l1 opposite~l1 unworthy~l1 x00000001 )
( hydric~l1 opposite~l1 xeric~l1 x00000001 )
( xeric~l1 opposite~l1 hydric~l1 x00000001 )
( mesic~l1 opposite~l1 xeric~l1 x00000001 )
( xeric~l1 opposite~l1 mesic~l1 x00000001 )
( mesic~l1 opposite~l1 hydric~l1 x00000001 )
( hydric~l1 opposite~l1 mesic~l1 x00000001 )
( azonal~l1 opposite~l1 zonal~l1 x00000001 )
( zonal~l1 opposite~l1 azonal~l1 x00000001 )
( pleurocarpous~l1 opposite~l1 acrocarpous~l1 x00000001 )
( acrocarpous~l1 opposite~l1 pleurocarpous~l1 x00000001 )
( fossorial~l1 opposite~l1 cursorial~l1 x00000001 )
( cursorial~l1 opposite~l1 fossorial~l1 x00000001 )
( heterocercal~l1 opposite~l1 homocercal~l1 x00000001 )
( homocercal~l1 opposite~l1 heterocercal~l1 x00000001 )
( unwebbed~l1 opposite~l1 webbed~l1 x00000001 )
( webbed~l1 opposite~l1 unwebbed~l1 x00000001 )
( unfaceted~l1 opposite~l1 faceted~l1 x00000001 )
( faceted~l1 opposite~l1 unfaceted~l1 x00000001 )
( contralateral~l1 opposite~l1 ipsilateral~l1 x00000001 )
( ipsilateral~l1 opposite~l1 contralateral~l1 x00000001 )
( re-entrant~l1 opposite~l1 salient~l1 x00000001 )
( salient~l1 opposite~l1 re-entrant~l1 x00000001 )
( retroactive~l1 opposite~l1 proactive~l1 x00000001 )
( proactive~l1 opposite~l1 retroactive~l1 x00000001 )
( rh-negative~l1 opposite~l1 rh-positive~l1 x00000001 )
( rh-positive~l1 opposite~l1 rh-negative~l1 x00000001 )
( syncategorematic~l1 opposite~l1 categorematic~l1 x00000001 )
( categorematic~l1 opposite~l1 syncategorematic~l1 x00000001 )
( nomothetic~l1 opposite~l1 idiographic~l1 x00000001 )
( idiographic~l1 opposite~l1 nomothetic~l1 x00000001 )
( pro-life~l1 opposite~l1 pro-choice~l1 x00000001 )
( pro-choice~l1 opposite~l1 pro-life~l1 x00000001 )
( unbaptized~l1 opposite~l1 baptized~l1 x00000001 )
( baptized~l1 opposite~l1 unbaptized~l1 x00000001 )
( malignant~l1 opposite~l1 benign~l1 x00000001 )
( benign~l1 opposite~l1 malignant~l1 x00000001 )
( calcifugous~l1 opposite~l1 calcicolous~l1 x00000001 )
( calcicolous~l1 opposite~l1 calcifugous~l1 x00000001 )
( non-invertible~l1 opposite~l1 invertible~l1 x00000001 )
( invertible~l1 opposite~l1 non-invertible~l1 x00000001 )
( immunodeficient~l1 opposite~l1 immunocompetent~l1 x00000001 )
( immunocompetent~l1 opposite~l1 immunodeficient~l1 x00000001 )
( xenogeneic~l1 opposite~l1 allogeneic~l1 x00000001 )
( allogeneic~l1 opposite~l1 xenogeneic~l1 x00000001 )
( short-spurred~l1 opposite~l1 long-spurred~l1 x00000001 )
( long-spurred~l1 opposite~l1 short-spurred~l1 x00000001 )
( shell-less~l1 opposite~l1 shelled~l1 x00000001 )
( shelled~l1 opposite~l1 shell-less~l1 x00000001 )
( jawless~l1 opposite~l1 jawed~l1 x00000001 )
( jawed~l1 opposite~l1 jawless~l1 x00000001 )
( skinless~l1 opposite~l1 skinned~l1 x00000001 )
( skinned~l1 opposite~l1 skinless~l1 x00000001 )
( nonflowering~l1 opposite~l1 flowering~l1 x00000001 )
( flowering~l1 opposite~l1 nonflowering~l1 x00000001 )
( adient~l1 opposite~l1 abient~l1 x00000001 )
( abient~l1 opposite~l1 adient~l1 x00000001 )
( cathodic~l1 opposite~l1 anodic~l1 x00000001 )
( anodic~l1 opposite~l1 cathodic~l1 x00000001 )
( heterotrophic~l1 opposite~l1 autotrophic~l1 x00000001 )
( autotrophic~l1 opposite~l1 heterotrophic~l1 x00000001 )
( ebracteate~l1 opposite~l1 bracteate~l1 x00000001 )
( bracteate~l1 opposite~l1 ebracteate~l1 x00000001 )
( intracellular~l1 opposite~l1 extracellular~l1 x00000001 )
( extracellular~l1 opposite~l1 intracellular~l1 x00000001 )
( eremitical~l1 opposite~l1 coenobitical~l1 x00000001 )
( coenobitical~l1 opposite~l1 eremitical~l1 x00000001 )
( palingenetic~l1 opposite~l1 cenogenetic~l1 x00000001 )
( cenogenetic~l1 opposite~l1 palingenetic~l1 x00000001 )
( achromatinic~l1 opposite~l1 chromatinic~l1 x00000001 )
( chromatinic~l1 opposite~l1 achromatinic~l1 x00000001 )
( omnidirectional~l1 opposite~l1 directional~l1 x00000001 )
( directional~l1 opposite~l1 omnidirectional~l1 x00000001 )
( eugenic~l1 opposite~l1 cacogenic~l1 x00000001 )
( cacogenic~l1 opposite~l1 eugenic~l1 x00000001 )
( afebrile~l1 opposite~l1 feverish~l1 x00000001 )
( feverish~l1 opposite~l1 afebrile~l1 x00000001 )
( nonfictional~l1 opposite~l1 fictional~l1 x00000001 )
( fictional~l1 opposite~l1 nonfictional~l1 x00000001 )
( unfretted~l1 opposite~l1 fretted~l1 x00000001 )
( fretted~l1 opposite~l1 unfretted~l1 x00000001 )
( nonharmonic~l1 opposite~l1 harmonic~l1 x00000001 )
( harmonic~l1 opposite~l1 nonharmonic~l1 x00000001 )
( nonionic~l1 opposite~l1 ionic~l1 x00000001 )
( ionic~l1 opposite~l1 nonionic~l1 x00000001 )
( unmyelinated~l1 opposite~l1 myelinated~l1 x00000001 )
( myelinated~l1 opposite~l1 unmyelinated~l1 x00000001 )
( syntagmatic~l1 opposite~l1 paradigmatic~l1 x00000001 )
( paradigmatic~l1 opposite~l1 syntagmatic~l1 x00000001 )
( nonpasserine~l1 opposite~l1 passerine~l1 x00000001 )
( passerine~l1 opposite~l1 nonpasserine~l1 x00000001 )
( nonphotosynthetic~l1 opposite~l1 photosynthetic~l1 x00000001 )
( photosynthetic~l1 opposite~l1 nonphotosynthetic~l1 x00000001 )
( nonruminant~l1 opposite~l1 ruminant~l1 x00000001 )
( ruminant~l1 opposite~l1 nonruminant~l1 x00000001 )
( nonspherical~l1 opposite~l1 spherical~l1 x00000001 )
( spherical~l1 opposite~l1 nonspherical~l1 x00000001 )
( nonsteroidal~l1 opposite~l1 steroidal~l1 x00000001 )
( steroidal~l1 opposite~l1 nonsteroidal~l1 x00000001 )
( nonsuppurative~l1 opposite~l1 suppurative~l1 x00000001 )
( suppurative~l1 opposite~l1 nonsuppurative~l1 x00000001 )
( thematic~l1 opposite~l1 unthematic~l1 x00000001 )
( unthematic~l1 opposite~l1 thematic~l1 x00000001 )
( nonthermal~l1 opposite~l1 thermal~l1 x00000001 )
( thermal~l1 opposite~l1 nonthermal~l1 x00000001 )
( instrumental~l1 opposite~l1 vocal~l1 x00000001 )
( vocal~l1 opposite~l1 instrumental~l1 x00000001 )
( hydrokinetic~l1 opposite~l1 hydrostatic~l1 x00000001 )
( hydrostatic~l1 opposite~l1 hydrokinetic~l1 x00000001 )
( nonspatial~l1 opposite~l1 spatial~l1 x00000001 )
( spatial~l1 opposite~l1 nonspatial~l1 x00000001 )
( nonlinguistic~l1 opposite~l1 linguistic~l1 x00000001 )
( linguistic~l1 opposite~l1 nonlinguistic~l1 x00000001 )
( cephalic~l1 opposite~l1 caudal~l1 x00000001 )
( caudal~l1 opposite~l1 cephalic~l1 x00000001 )
( nonfinancial~l1 opposite~l1 financial~l1 x00000001 )
( financial~l1 opposite~l1 nonfinancial~l1 x00000001 )
( prokaryotic~l1 opposite~l1 eukaryotic~l1 x00000001 )
( eukaryotic~l1 opposite~l1 prokaryotic~l1 x00000001 )
( avascular~l1 opposite~l1 vascular~l1 x00000001 )
( vascular~l1 opposite~l1 avascular~l1 x00000001 )
( multinucleate~l1 opposite~l1 uninucleate~l1 x00000001 )
( uninucleate~l1 opposite~l1 multinucleate~l1 x00000001 )
( nonsurgical~l1 opposite~l1 surgical~l1 x00000001 )
( surgical~l1 opposite~l1 nonsurgical~l1 x00000001 )
( exocrine~l1 opposite~l1 endocrinal~l1 x00000001 )
( endocrinal~l1 opposite~l1 exocrine~l1 x00000001 )
( ahistorical~l1 opposite~l1 historical~l1 x00000001 )
( historical~l1 opposite~l1 ahistorical~l1 x00000001 )
( pro-American~l1 opposite~l1 anti-American~l1 x00000001 )
( anti-American~l1 opposite~l1 pro-American~l1 x00000001 )
( cationic~l1 opposite~l1 anionic~l1 x00000001 )
( anionic~l1 opposite~l1 cationic~l1 x00000001 )
( inquisitorial~l1 opposite~l1 accusatorial~l1 x00000001 )
( accusatorial~l1 opposite~l1 inquisitorial~l1 x00000001 )
( postnuptial~l1 opposite~l1 antenuptial~l1 x00000001 )
( antenuptial~l1 opposite~l1 postnuptial~l1 x00000001 )
( intradepartmental~l1 opposite~l1 interdepartmental~l1 x00000001 )
( interdepartmental~l1 opposite~l1 intradepartmental~l1 x00000001 )
( allopathic~l1 opposite~l1 homeopathic~l1 x00000001 )
( homeopathic~l1 opposite~l1 allopathic~l1 x00000001 )
( translational~l1 opposite~l1 nontranslational~l1 x00000001 )
( nontranslational~l1 opposite~l1 translational~l1 x00000001 )
( unavenged~l1 opposite~l1 avenged~l1 x00000001 )
( avenged~l1 opposite~l1 unavenged~l1 x00000001 )
( uncollected~l1 opposite~l1 collected~l1 x00000001 )
( collected~l1 opposite~l1 uncollected~l1 x00000001 )
( uncontested~l1 opposite~l1 contested~l1 x00000001 )
( contested~l1 opposite~l1 uncontested~l1 x00000001 )
( unfilled~l1 opposite~l1 filled~l1 x00000001 )
( filled~l1 opposite~l1 unfilled~l1 x00000001 )
( unmalted~l1 opposite~l1 malted~l1 x00000001 )
( malted~l1 opposite~l1 unmalted~l1 x00000001 )
( unposed~l1 opposite~l1 posed~l1 x00000001 )
( posed~l1 opposite~l1 unposed~l1 x00000001 )
( unsaponified~l1 opposite~l1 saponified~l1 x00000001 )
( saponified~l1 opposite~l1 unsaponified~l1 x00000001 )
( hatred~l1 opposite~l1 love~l1 x00000001 )
( love~l1 opposite~l1 hatred~l1 x00000001 )
( adult~l1 opposite~l1 child~l1 x00000001 )
( child~l1 opposite~l1 adult~l1 x00000001 )
( emit~l1 opposite~l1 absorb~l1 x00000001 )
( absorb~l1 opposite~l1 emit~l1 x00000001 )
( refrain~l1 opposite~l1 act~l1 x00000001 )
( act~l1 opposite~l1 refrain~l1 x00000001 )
( disagree~l1 opposite~l1 agree~l1 x00000001 )
( agree~l1 opposite~l1 disagree~l1 x00000001 )
( postdate~l1 opposite~l1 predate~l1 x00000001 )
( predate~l1 opposite~l1 postdate~l1 x00000001 )
( defy~l1 opposite~l1 lend_oneself~l1 x00000001 )
( lend_oneself~l1 opposite~l1 defy~l1 x00000001 )
( yield~l1 opposite~l1 stand~l1 x00000001 )
( stand~l1 opposite~l1 yield~l1 x00000001 )
( unbalance~l1 opposite~l1 balance~l1 x00000001 )
( balance~l1 opposite~l1 unbalance~l1 x00000001 )
( satisfy~l1 opposite~l1 fall_short_of~l1 x00000001 )
( fall_short_of~l1 opposite~l1 satisfy~l1 x00000001 )
( conform_to~l1 opposite~l1 violate~l1 x00000001 )
( violate~l1 opposite~l1 conform_to~l1 x00000001 )
( miss~l1 opposite~l1 have~l1 x00000001 )
( have~l1 opposite~l1 miss~l1 x00000001 )
( have~l1 opposite~l1 lack~l1 x00000001 )
( lack~l1 opposite~l1 have~l1 x00000001 )
( obviate~l1 opposite~l1 necessitate~l1 x00000001 )
( necessitate~l1 opposite~l1 obviate~l1 x00000001 )
( succumb~l1 opposite~l1 survive~l1 x00000001 )
( survive~l1 opposite~l1 succumb~l1 x00000001 )
( end~l1 opposite~l1 begin~l1 x00000001 )
( begin~l1 opposite~l1 end~l1 x00000001 )
( fail~l1 opposite~l1 manage~l1 x00000001 )
( manage~l1 opposite~l1 fail~l1 x00000001 )
( decolonise~l1 opposite~l1 colonise~l1 x00000001 )
( colonise~l1 opposite~l1 decolonise~l1 x00000001 )
( defend~l1 opposite~l1 prosecute~l1 x00000001 )
( prosecute~l1 opposite~l1 defend~l1 x00000001 )
( keep~l1 opposite~l1 keep~l1 x00000001 )
( exempt~l1 opposite~l1 enforce~l1 x00000001 )
( enforce~l1 opposite~l1 exempt~l1 x00000001 )
( dishonor~l1 opposite~l1 honor~l1 x00000001 )
( honor~l1 opposite~l1 dishonor~l1 x00000001 )
( fail~l1 opposite~l1 succeed~l1 x00000001 )
( succeed~l1 opposite~l1 fail~l1 x00000001 )
( behave~l1 opposite~l1 misbehave~l1 x00000001 )
( misbehave~l1 opposite~l1 behave~l1 x00000001 )
( deregulate~l1 opposite~l1 regulate~l1 x00000001 )
( regulate~l1 opposite~l1 deregulate~l1 x00000001 )
( reject~l1 opposite~l1 admit~l1 x00000001 )
( admit~l1 opposite~l1 reject~l1 x00000001 )
( confine~l1 opposite~l1 free~l1 x00000001 )
( free~l1 opposite~l1 confine~l1 x00000001 )
( legalize~l1 opposite~l1 outlaw~l1 x00000001 )
( outlaw~l1 opposite~l1 legalize~l1 x00000001 )
( legalise~l1 opposite~l1 outlaw~l1 x00000001 )
( outlaw~l1 opposite~l1 legalise~l1 x00000001 )
( decriminalise~l1 opposite~l1 criminalise~l1 x00000001 )
( criminalise~l1 opposite~l1 decriminalise~l1 x00000001 )
( recall~l1 opposite~l1 issue~l1 x00000001 )
( issue~l1 opposite~l1 recall~l1 x00000001 )
( unite~l1 opposite~l1 divide~l1 x00000001 )
( divide~l1 opposite~l1 unite~l1 x00000001 )
( patronise~l1 opposite~l1 boycott~l1 x00000001 )
( boycott~l1 opposite~l1 patronise~l1 x00000001 )
( prevent~l1 opposite~l1 let~l1 x00000001 )
( let~l1 opposite~l1 prevent~l1 x00000001 )
( admit~l1 opposite~l1 exclude~l0 x00000001 )
( exclude~l0 opposite~l1 admit~l1 x00000001 )
( decertify~l1 opposite~l1 certify~l1 x00000001 )
( certify~l1 opposite~l1 decertify~l1 x00000001 )
( disorganise~l1 opposite~l1 organise~l1 x00000001 )
( organise~l1 opposite~l1 disorganise~l1 x00000001 )
( abolish~l1 opposite~l1 establish~l1 x00000001 )
( establish~l1 opposite~l1 abolish~l1 x00000001 )
( idle~l1 opposite~l1 work~l1 x00000001 )
( work~l1 opposite~l1 idle~l1 x00000001 )
( hire~l1 opposite~l1 fire~l1 x00000001 )
( fire~l1 opposite~l1 hire~l1 x00000001 )
( precede~l1 opposite~l1 succeed~l1 x00000001 )
( succeed~l1 opposite~l1 precede~l1 x00000001 )
( demote~l1 opposite~l1 promote~l1 x00000001 )
( promote~l1 opposite~l1 demote~l1 x00000001 )
( invest~l1 opposite~l1 divest~l1 x00000001 )
( divest~l1 opposite~l1 invest~l1 x00000001 )
( forfeit~l1 opposite~l1 claim~l1 x00000001 )
( claim~l1 opposite~l1 forfeit~l1 x00000001 )
( lose~l1 opposite~l1 break_even~l1 x00000001 )
( break_even~l1 opposite~l1 lose~l1 x00000001 )
( lose~l1 opposite~l1 profit~l1 x00000001 )
( profit~l1 opposite~l1 lose~l1 x00000001 )
( lose~l1 opposite~l1 keep~l1 x00000001 )
( keep~l1 opposite~l1 lose~l1 x00000001 )
( lose~l1 opposite~l1 find~l1 x00000001 )
( find~l1 opposite~l1 lose~l1 x00000001 )
( break_even~l1 opposite~l1 profit~l1 x00000001 )
( profit~l1 opposite~l1 break_even~l1 x00000001 )
( conserve~l1 opposite~l1 waste~l1 x00000001 )
( waste~l1 opposite~l1 conserve~l1 x00000001 )
( allow~l1 opposite~l1 deny~l1 x00000001 )
( deny~l1 opposite~l1 allow~l1 x00000001 )
( default~l1 opposite~l1 pay_up~l1 x00000001 )
( pay_up~l1 opposite~l1 default~l1 x00000001 )
( sell~l1 opposite~l1 buy~l1 x00000001 )
( buy~l1 opposite~l1 sell~l1 x00000001 )
( refuse~l1 opposite~l1 accept~l1 x00000001 )
( accept~l1 opposite~l1 refuse~l1 x00000001 )
( sour~l1 opposite~l1 sweeten~l1 x00000001 )
( sweeten~l1 opposite~l1 sour~l1 x00000001 )
( disorient~l1 opposite~l1 orient~l1 x00000001 )
( orient~l1 opposite~l1 disorient~l1 x00000001 )
( hide~l1 opposite~l1 show~l1 x00000001 )
( show~l1 opposite~l1 hide~l1 x00000001 )
( deodorize~l1 opposite~l1 odorize~l1 x00000001 )
( odorize~l1 opposite~l1 deodorize~l1 x00000001 )
( sensitise~l1 opposite~l1 desensitise~l1 x00000001 )
( desensitise~l1 opposite~l1 sensitise~l1 x00000001 )
( expand~l1 opposite~l1 contract~l1 x00000001 )
( contract~l1 opposite~l1 expand~l1 x00000001 )
( rush~l1 opposite~l1 linger~l1 x00000001 )
( linger~l1 opposite~l1 rush~l1 x00000001 )
( enter~l1 opposite~l1 exit~l1 x00000001 )
( exit~l1 opposite~l1 enter~l1 x00000001 )
( leave~l1 opposite~l1 arrive~l1 x00000001 )
( arrive~l1 opposite~l1 leave~l1 x00000001 )
( stay~l1 opposite~l1 depart~l1 x00000001 )
( depart~l1 opposite~l1 stay~l1 x00000001 )
( back~l1 opposite~l1 advance~l1 x00000001 )
( advance~l1 opposite~l1 back~l1 x00000001 )
( recede~l1 opposite~l1 advance~l1 x00000001 )
( advance~l1 opposite~l1 recede~l1 x00000001 )
( sink~l1 opposite~l1 float~l1 x00000001 )
( float~l1 opposite~l1 sink~l1 x00000001 )
( lie_down~l1 opposite~l1 arise~l1 x00000001 )
( arise~l1 opposite~l1 lie_down~l1 x00000001 )
( sit_down~l1 opposite~l1 arise~l1 x00000001 )
( arise~l1 opposite~l1 sit_down~l1 x00000001 )
( raise~l1 opposite~l1 lower~l1 x00000001 )
( lower~l1 opposite~l1 raise~l1 x00000001 )
( descend~l1 opposite~l1 ascend~l1 x00000001 )
( ascend~l1 opposite~l1 descend~l1 x00000001 )
( fall~l1 opposite~l1 rise~l1 x00000001 )
( rise~l1 opposite~l1 fall~l1 x00000001 )
( set~l1 opposite~l1 rise~l1 x00000001 )
( rise~l1 opposite~l1 set~l1 x00000001 )
( hop_out~l1 opposite~l1 hop_on~l1 x00000001 )
( hop_on~l1 opposite~l1 hop_out~l1 x00000001 )
( ebb~l1 opposite~l1 tide~l1 x00000001 )
( tide~l1 opposite~l1 ebb~l1 x00000001 )
( push~l1 opposite~l1 pull~l1 x00000001 )
( pull~l1 opposite~l1 push~l1 x00000001 )
( start~l1 opposite~l1 stop~l1 x00000001 )
( stop~l1 opposite~l1 start~l1 x00000001 )
( stay~l1 opposite~l1 move~l1 x00000001 )
( move~l1 opposite~l1 stay~l1 x00000001 )
( come~l1 opposite~l1 go~l1 x00000001 )
( go~l1 opposite~l1 come~l1 x00000001 )
( stay_in_place~l1 opposite~l1 travel~l1 x00000001 )
( travel~l1 opposite~l1 stay_in_place~l1 x00000001 )
( look_down_on~l1 opposite~l1 admire~l1 x00000001 )
( admire~l1 opposite~l1 look_down_on~l1 x00000001 )
( begrudge~l1 opposite~l1 wish~l1 x00000001 )
( wish~l1 opposite~l1 begrudge~l1 x00000001 )
( dishearten~l1 opposite~l1 hearten~l1 x00000001 )
( hearten~l1 opposite~l1 dishearten~l1 x00000001 )
( disenchant~l1 opposite~l1 enchant~l1 x00000001 )
( enchant~l1 opposite~l1 disenchant~l1 x00000001 )
( displease~l1 opposite~l1 please~l1 x00000001 )
( please~l1 opposite~l1 displease~l1 x00000001 )
( depress~l1 opposite~l1 elate~l1 x00000001 )
( elate~l1 opposite~l1 depress~l1 x00000001 )
( weigh_down~l1 opposite~l1 lighten~l1 x00000001 )
( lighten~l1 opposite~l1 weigh_down~l1 x00000001 )
( repel~l1 opposite~l1 attract~l1 x00000001 )
( attract~l1 opposite~l1 repel~l1 x00000001 )
( calm~l1 opposite~l1 agitate~l1 x00000001 )
( agitate~l1 opposite~l1 calm~l1 x00000001 )
( underact~l1 opposite~l1 overact~l1 x00000001 )
( overact~l1 opposite~l1 underact~l1 x00000001 )
( level~l1 opposite~l1 raise~l1 x00000001 )
( raise~l1 opposite~l1 level~l1 x00000001 )
( disassemble~l1 opposite~l1 assemble~l1 x00000001 )
( assemble~l1 opposite~l1 disassemble~l1 x00000001 )
( unfold~l1 opposite~l1 fold~l1 x00000001 )
( fold~l1 opposite~l1 unfold~l1 x00000001 )
( lie~l1 opposite~l1 sit~l1 x00000001 )
( sit~l1 opposite~l1 lie~l1 x00000001 )
( lie~l1 opposite~l1 stand~l1 x00000001 )
( stand~l1 opposite~l1 lie~l1 x00000001 )
( stand~l1 opposite~l1 sit~l1 x00000001 )
( sit~l1 opposite~l1 stand~l1 x00000001 )
( machine_wash~l1 opposite~l1 handwash~l1 x00000001 )
( handwash~l1 opposite~l1 machine_wash~l1 x00000001 )
( dirty~l1 opposite~l1 clean~l1 x00000001 )
( clean~l1 opposite~l1 dirty~l1 x00000001 )
( dislodge~l1 opposite~l1 lodge~l1 x00000001 )
( lodge~l1 opposite~l1 dislodge~l1 x00000001 )
( go_off~l1 opposite~l1 go_on~l1 x00000001 )
( go_on~l1 opposite~l1 go_off~l1 x00000001 )
( idle~l1 opposite~l1 run~l1 x00000001 )
( run~l1 opposite~l1 idle~l1 x00000001 )
( unwind~l1 opposite~l1 wind~l1 x00000001 )
( wind~l1 opposite~l1 unwind~l1 x00000001 )
( unravel~l1 opposite~l1 ravel~l1 x00000001 )
( ravel~l1 opposite~l1 unravel~l1 x00000001 )
( knot~l1 opposite~l1 unknot~l1 x00000001 )
( unknot~l1 opposite~l1 knot~l1 x00000001 )
( unbraid~l1 opposite~l1 braid~l1 x00000001 )
( braid~l1 opposite~l1 unbraid~l1 x00000001 )
( unweave~l1 opposite~l1 weave~l1 x00000001 )
( weave~l1 opposite~l1 unweave~l1 x00000001 )
( untwine~l1 opposite~l1 twine~l1 x00000001 )
( twine~l1 opposite~l1 untwine~l1 x00000001 )
( unsaddle~l1 opposite~l1 saddle~l1 x00000001 )
( saddle~l1 opposite~l1 unsaddle~l1 x00000001 )
( unburden~l1 opposite~l1 burden~l1 x00000001 )
( burden~l1 opposite~l1 unburden~l1 x00000001 )
( unpack~l1 opposite~l1 pack~l1 x00000001 )
( pack~l1 opposite~l1 unpack~l1 x00000001 )
( unbox~l1 opposite~l1 box~l1 x00000001 )
( box~l1 opposite~l1 unbox~l1 x00000001 )
( unstuff~l1 opposite~l1 stuff~l1 x00000001 )
( stuff~l1 opposite~l1 unstuff~l1 x00000001 )
( unclog~l1 opposite~l1 clog~l1 x00000001 )
( clog~l1 opposite~l1 unclog~l1 x00000001 )
( obstruct~l1 opposite~l1 free~l1 x00000001 )
( free~l1 opposite~l1 obstruct~l1 x00000001 )
( let_go_of~l1 opposite~l1 hold~l1 x00000001 )
( hold~l1 opposite~l1 let_go_of~l1 x00000001 )
( disentangle~l1 opposite~l1 entangle~l1 x00000001 )
( entangle~l1 opposite~l1 disentangle~l1 x00000001 )
( unsnarl~l1 opposite~l1 snarl~l1 x00000001 )
( snarl~l1 opposite~l1 unsnarl~l1 x00000001 )
( take_away~l1 opposite~l1 bring~l1 x00000001 )
( bring~l1 opposite~l1 take_away~l1 x00000001 )
( uncork~l1 opposite~l1 cork~l1 x00000001 )
( cork~l1 opposite~l1 uncork~l1 x00000001 )
( unplug~l1 opposite~l1 plug_in~l1 x00000001 )
( plug_in~l1 opposite~l1 unplug~l1 x00000001 )
( decompress~l1 opposite~l1 compress~l1 x00000001 )
( compress~l1 opposite~l1 decompress~l1 x00000001 )
( gather~l1 opposite~l1 spread~l1 x00000001 )
( spread~l1 opposite~l1 gather~l1 x00000001 )
( break~l1 opposite~l1 repair~l1 x00000001 )
( repair~l1 opposite~l1 break~l1 x00000001 )
( uncouple~l1 opposite~l1 couple~l1 x00000001 )
( couple~l1 opposite~l1 uncouple~l1 x00000001 )
( join~l1 opposite~l1 disjoin~l1 x00000001 )
( disjoin~l1 opposite~l1 join~l1 x00000001 )
( tie~l1 opposite~l1 untie~l1 x00000001 )
( untie~l1 opposite~l1 tie~l1 x00000001 )
( unwrap~l1 opposite~l1 wrap~l1 x00000001 )
( wrap~l1 opposite~l1 unwrap~l1 x00000001 )
( unbend~l1 opposite~l1 bend~l1 x00000001 )
( bend~l1 opposite~l1 unbend~l1 x00000001 )
( roughen~l1 opposite~l1 smooth~l1 x00000001 )
( smooth~l1 opposite~l1 roughen~l1 x00000001 )
( sharpen~l1 opposite~l1 dull~l1 x00000001 )
( dull~l1 opposite~l1 sharpen~l1 x00000001 )
( miss~l1 opposite~l1 hit~l1 x00000001 )
( hit~l1 opposite~l1 miss~l1 x00000001 )
( untwist~l1 opposite~l1 twist~l1 x00000001 )
( twist~l1 opposite~l1 untwist~l1 x00000001 )
( live_out~l1 opposite~l1 live_in~l1 x00000001 )
( live_in~l1 opposite~l1 live_out~l1 x00000001 )
( eat_out~l1 opposite~l1 eat_in~l1 x00000001 )
( eat_in~l1 opposite~l1 eat_out~l1 x00000001 )
( resist~l1 opposite~l1 surrender~l1 x00000001 )
( surrender~l1 opposite~l1 resist~l1 x00000001 )
( fall_back~l1 opposite~l1 gain~l1 x00000001 )
( gain~l1 opposite~l1 fall_back~l1 x00000001 )
( demilitarise~l1 opposite~l1 militarise~l1 x00000001 )
( militarise~l1 opposite~l1 demilitarise~l1 x00000001 )
( discharge~l1 opposite~l1 enlist~l1 x00000001 )
( enlist~l1 opposite~l1 discharge~l1 x00000001 )
( mobilise~l1 opposite~l1 demobilise~l1 x00000001 )
( demobilise~l1 opposite~l1 mobilise~l1 x00000001 )
( disarm~l1 opposite~l1 arm~l1 x00000001 )
( arm~l1 opposite~l1 disarm~l1 x00000001 )
( drop_out~l1 opposite~l1 enter~l1 x00000001 )
( enter~l1 opposite~l1 drop_out~l1 x00000001 )
( open_up~l1 opposite~l1 close_up~l1 x00000001 )
( close_up~l1 opposite~l1 open_up~l1 x00000001 )
( generalize~l1 opposite~l1 specify~l1 x00000001 )
( specify~l1 opposite~l1 generalize~l1 x00000001 )
( erase~l1 opposite~l1 record~l1 x00000001 )
( record~l1 opposite~l1 erase~l1 x00000001 )
( decode~l1 opposite~l1 encode~l1 x00000001 )
( encode~l1 opposite~l1 decode~l1 x00000001 )
( punch_out~l1 opposite~l1 punch_in~l1 x00000001 )
( punch_in~l1 opposite~l1 punch_out~l1 x00000001 )
( voice~l1 opposite~l1 devoice~l1 x00000001 )
( devoice~l1 opposite~l1 voice~l1 x00000001 )
( obfuscate~l1 opposite~l1 clarify~l1 x00000001 )
( clarify~l1 opposite~l1 obfuscate~l1 x00000001 )
( keep_quiet~l1 opposite~l1 talk~l1 x00000001 )
( talk~l1 opposite~l1 keep_quiet~l1 x00000001 )
( complain~l1 opposite~l1 cheer~l1 x00000001 )
( cheer~l1 opposite~l1 complain~l1 x00000001 )
( convict~l1 opposite~l1 acquit~l1 x00000001 )
( acquit~l1 opposite~l1 convict~l1 x00000001 )
( disoblige~l1 opposite~l1 oblige~l1 x00000001 )
( oblige~l1 opposite~l1 disoblige~l1 x00000001 )
( flatter~l1 opposite~l1 disparage~l1 x00000001 )
( disparage~l1 opposite~l1 flatter~l1 x00000001 )
( desecrate~l1 opposite~l1 consecrate~l1 x00000001 )
( consecrate~l1 opposite~l1 desecrate~l1 x00000001 )
( bless~l1 opposite~l1 curse~l1 x00000001 )
( curse~l1 opposite~l1 bless~l1 x00000001 )
( boo~l1 opposite~l1 applaud~l1 x00000001 )
( applaud~l1 opposite~l1 boo~l1 x00000001 )
( praise~l1 opposite~l1 criticize~l1 x00000001 )
( criticize~l1 opposite~l1 praise~l1 x00000001 )
( undeceive~l1 opposite~l1 deceive~l1 x00000001 )
( deceive~l1 opposite~l1 undeceive~l1 x00000001 )
( understate~l1 opposite~l1 overstate~l1 x00000001 )
( overstate~l1 opposite~l1 understate~l1 x00000001 )
( disavow~l1 opposite~l1 avow~l1 x00000001 )
( avow~l1 opposite~l1 disavow~l1 x00000001 )
( admit~l1 opposite~l1 deny~l1 x00000001 )
( deny~l1 opposite~l1 admit~l1 x00000001 )
( dissent~l1 opposite~l1 assent~l1 x00000001 )
( assent~l1 opposite~l1 dissent~l1 x00000001 )
( permit~l1 opposite~l1 forbid~l1 x00000001 )
( forbid~l1 opposite~l1 permit~l1 x00000001 )
( allow~l1 opposite~l1 disallow~l1 x00000001 )
( disallow~l1 opposite~l1 allow~l1 x00000001 )
( undervalue~l1 opposite~l1 overvalue~l1 x00000001 )
( overvalue~l1 opposite~l1 undervalue~l1 x00000001 )
( disesteem~l1 opposite~l1 esteem~l1 x00000001 )
( esteem~l1 opposite~l1 disesteem~l1 x00000001 )
( trust~l1 opposite~l1 mistrust~l1 x00000001 )
( mistrust~l1 opposite~l1 trust~l1 x00000001 )
( indispose~l1 opposite~l1 dispose~l1 x00000001 )
( dispose~l1 opposite~l1 indispose~l1 x00000001 )
( disprove~l1 opposite~l1 prove~l1 x00000001 )
( prove~l1 opposite~l1 disprove~l1 x00000001 )
( negate~l1 opposite~l1 affirm~l1 x00000001 )
( affirm~l1 opposite~l1 negate~l1 x00000001 )
( synthesize~l1 opposite~l1 analyze~l1 x00000001 )
( analyze~l1 opposite~l1 synthesize~l1 x00000001 )
( divide~l1 opposite~l1 multiply~l1 x00000001 )
( multiply~l1 opposite~l1 divide~l1 x00000001 )
( subtract~l1 opposite~l1 add~l1 x00000001 )
( add~l1 opposite~l1 subtract~l1 x00000001 )
( attend_to~l1 opposite~l1 neglect~l1 x00000001 )
( neglect~l1 opposite~l1 attend_to~l1 x00000001 )
( forget~l1 opposite~l1 mind~l1 x00000001 )
( mind~l1 opposite~l1 forget~l1 x00000001 )
( ignore~l1 opposite~l1 know~l1 x00000001 )
( know~l1 opposite~l1 ignore~l1 x00000001 )
( orientalise~l1 opposite~l1 occidentalise~l1 x00000001 )
( occidentalise~l1 opposite~l1 orientalise~l1 x00000001 )
( play_up~l1 opposite~l1 play_down~l1 x00000001 )
( play_down~l1 opposite~l1 play_up~l1 x00000001 )
( enable~l1 opposite~l1 disable~l1 x00000001 )
( disable~l1 opposite~l1 enable~l1 x00000001 )
( integrate~l1 opposite~l1 disintegrate~l1 x00000001 )
( disintegrate~l1 opposite~l1 integrate~l1 x00000001 )
( skew~l1 opposite~l1 align~l1 x00000001 )
( align~l1 opposite~l1 skew~l1 x00000001 )
( delay~l1 opposite~l1 rush~l1 x00000001 )
( rush~l1 opposite~l1 delay~l1 x00000001 )
( curdle~l1 opposite~l1 homogenise~l1 x00000001 )
( homogenise~l1 opposite~l1 curdle~l1 x00000001 )
( curdle~l1 opposite~l1 homogenize~l1 x00000001 )
( homogenize~l1 opposite~l1 curdle~l1 x00000001 )
( fill~l1 opposite~l1 empty~l1 x00000001 )
( empty~l1 opposite~l1 fill~l1 x00000001 )
( harden~l1 opposite~l1 soften~l1 x00000001 )
( soften~l1 opposite~l1 harden~l1 x00000001 )
( specialize~l1 opposite~l1 diversify~l1 x00000001 )
( diversify~l1 opposite~l1 specialize~l1 x00000001 )
( specialise~l1 opposite~l1 diversify~l1 x00000001 )
( diversify~l1 opposite~l1 specialise~l1 x00000001 )
( wane~l1 opposite~l1 wax~l1 x00000001 )
( wax~l1 opposite~l1 wane~l1 x00000001 )
( thicken~l1 opposite~l1 thin~l1 x00000001 )
( thin~l1 opposite~l1 thicken~l1 x00000001 )
( maximise~l1 opposite~l1 minimise~l1 x00000001 )
( minimise~l1 opposite~l1 maximise~l1 x00000001 )
( denationalise~l1 opposite~l1 nationalise~l1 x00000001 )
( nationalise~l1 opposite~l1 denationalise~l1 x00000001 )
( decentralize~l1 opposite~l1 centralise~l1 x00000001 )
( centralise~l1 opposite~l1 decentralize~l1 x00000001 )
( decentralize~l1 opposite~l1 centralize~l1 x00000001 )
( centralize~l1 opposite~l1 decentralize~l1 x00000001 )
( centralise~l1 opposite~l1 decentralise~l1 x00000001 )
( decentralise~l1 opposite~l1 centralise~l1 x00000001 )
( depressurise~l1 opposite~l1 pressurise~l1 x00000001 )
( pressurise~l1 opposite~l1 depressurise~l1 x00000001 )
( demagnetise~l1 opposite~l1 magnetise~l1 x00000001 )
( magnetise~l1 opposite~l1 demagnetise~l1 x00000001 )
( desynchronise~l1 opposite~l1 synchronise~l1 x00000001 )
( synchronise~l1 opposite~l1 desynchronise~l1 x00000001 )
( depersonalize~l1 opposite~l1 personalize~l1 x00000001 )
( personalize~l1 opposite~l1 depersonalize~l1 x00000001 )
( depersonalise~l1 opposite~l1 personalise~l1 x00000001 )
( personalise~l1 opposite~l1 depersonalise~l1 x00000001 )
( heat~l1 opposite~l1 cool~l1 x00000001 )
( cool~l1 opposite~l1 heat~l1 x00000001 )
( disunify~l1 opposite~l1 unify~l1 x00000001 )
( unify~l1 opposite~l1 disunify~l1 x00000001 )
( be_born~l1 opposite~l1 die~l1 x00000001 )
( die~l1 opposite~l1 be_born~l1 x00000001 )
( dematerialise~l1 opposite~l1 materialise~l1 x00000001 )
( materialise~l1 opposite~l1 dematerialise~l1 x00000001 )
( brighten~l1 opposite~l1 darken~l1 x00000001 )
( darken~l1 opposite~l1 brighten~l1 x00000001 )
( darken~l1 opposite~l1 lighten~l1 x00000001 )
( lighten~l1 opposite~l1 darken~l1 x00000001 )
( narrow~l1 opposite~l1 widen~l1 x00000001 )
( widen~l1 opposite~l1 narrow~l1 x00000001 )
( untune~l1 opposite~l1 tune~l1 x00000001 )
( tune~l1 opposite~l1 untune~l1 x00000001 )
( uglify~l1 opposite~l1 beautify~l1 x00000001 )
( beautify~l1 opposite~l1 uglify~l1 x00000001 )
( de-escalate~l1 opposite~l1 escalate~l1 x00000001 )
( escalate~l1 opposite~l1 de-escalate~l1 x00000001 )
( color~l1 opposite~l1 discolor~l1 x00000001 )
( discolor~l1 opposite~l1 color~l1 x00000001 )
( blacken~l1 opposite~l1 whiten~l1 x00000001 )
( whiten~l1 opposite~l1 blacken~l1 x00000001 )
( destabilise~l1 opposite~l1 stabilize~l1 x00000001 )
( stabilize~l1 opposite~l1 destabilise~l1 x00000001 )
( destabilise~l1 opposite~l1 stabilise~l1 x00000001 )
( stabilise~l1 opposite~l1 destabilise~l1 x00000001 )
( unblock~l1 opposite~l1 block~l1 x00000001 )
( block~l1 opposite~l1 unblock~l1 x00000001 )
( unfreeze~l1 opposite~l1 freeze~l1 x00000001 )
( freeze~l1 opposite~l1 unfreeze~l1 x00000001 )
( get_worse~l1 opposite~l1 get_well~l1 x00000001 )
( get_well~l1 opposite~l1 get_worse~l1 x00000001 )
( regress~l1 opposite~l1 progress~l1 x00000001 )
( progress~l1 opposite~l1 regress~l1 x00000001 )
( stretch~l1 opposite~l1 shrink~l1 x00000001 )
( shrink~l1 opposite~l1 stretch~l1 x00000001 )
( blow_up~l1 opposite~l1 reduce~l1 x00000001 )
( reduce~l1 opposite~l1 blow_up~l1 x00000001 )
( oxidise~l1 opposite~l1 deoxidise~l1 x00000001 )
( deoxidise~l1 opposite~l1 oxidise~l1 x00000001 )
( dehumidify~l1 opposite~l1 humidify~l1 x00000001 )
( humidify~l1 opposite~l1 dehumidify~l1 x00000001 )
( hydrate~l1 opposite~l1 dehydrate~l1 x00000001 )
( dehydrate~l1 opposite~l1 hydrate~l1 x00000001 )
( worsen~l1 opposite~l1 better~l1 x00000001 )
( better~l1 opposite~l1 worsen~l1 x00000001 )
( enliven~l1 opposite~l1 deaden~l1 x00000001 )
( deaden~l1 opposite~l1 enliven~l1 x00000001 )
( clutter~l1 opposite~l1 unclutter~l1 x00000001 )
( unclutter~l1 opposite~l1 clutter~l1 x00000001 )
( deprive~l1 opposite~l1 enrich~l1 x00000001 )
( enrich~l1 opposite~l1 deprive~l1 x00000001 )
( stay~l1 opposite~l1 change~l1 x00000001 )
( change~l1 opposite~l1 stay~l1 x00000001 )
( keep_down~l1 opposite~l1 vomit~l1 x00000001 )
( vomit~l1 opposite~l1 keep_down~l1 x00000001 )
( tire~l1 opposite~l1 refresh~l1 x00000001 )
( refresh~l1 opposite~l1 tire~l1 x00000001 )
( cry~l1 opposite~l1 laugh~l1 x00000001 )
( laugh~l1 opposite~l1 cry~l1 x00000001 )
( undress~l1 opposite~l1 dress~l1 x00000001 )
( dress~l1 opposite~l1 undress~l1 x00000001 )
( underdress~l1 opposite~l1 overdress~l1 x00000001 )
( overdress~l1 opposite~l1 underdress~l1 x00000001 )
( gain~l1 opposite~l1 reduce~l1 x00000001 )
( reduce~l1 opposite~l1 gain~l1 x00000001 )
( dress_down~l1 opposite~l1 dress_up~l1 x00000001 )
( dress_up~l1 opposite~l1 dress_down~l1 x00000001 )
( relax~l1 opposite~l1 tense~l1 x00000001 )
( tense~l1 opposite~l1 relax~l1 x00000001 )
( unstrain~l1 opposite~l1 strain~l1 x00000001 )
( strain~l1 opposite~l1 unstrain~l1 x00000001 )
( de-energize~l1 opposite~l1 energize~l1 x00000001 )
( energize~l1 opposite~l1 de-energize~l1 x00000001 )
( de-energise~l1 opposite~l1 energise~l1 x00000001 )
( energise~l1 opposite~l1 de-energise~l1 x00000001 )
( stimulate~l1 opposite~l1 sedate~l1 x00000001 )
( sedate~l1 opposite~l1 stimulate~l1 x00000001 )
( bring_to~l1 opposite~l1 anesthetize~l1 x00000001 )
( anesthetize~l1 opposite~l1 bring_to~l1 x00000001 )
( wake~l1 opposite~l1 sleep~l1 x00000001 )
( sleep~l1 opposite~l1 wake~l1 x00000001 )
( cause_to_sleep~l1 opposite~l1 awaken~l1 x00000001 )
( awaken~l1 opposite~l1 cause_to_sleep~l1 x00000001 )
( wake_up~l1 opposite~l1 fall_asleep~l1 x00000001 )
( fall_asleep~l1 opposite~l1 wake_up~l1 x00000001 )
( get_up~l1 opposite~l1 go_to_bed~l1 x00000001 )
( go_to_bed~l1 opposite~l1 get_up~l1 x00000001 )
( turn_out~l1 opposite~l1 turn_in~l1 x00000001 )
( turn_in~l1 opposite~l1 turn_out~l1 x00000001 )
( estivate~l1 opposite~l1 hibernate~l1 x00000001 )
( hibernate~l1 opposite~l1 estivate~l1 x00000001 )
( inhale~l1 opposite~l1 exhale~l1 x00000001 )
( exhale~l1 opposite~l1 inhale~l1 x00000001 )
( reverently~l1 opposite~l1 irreverently~l1 x00000001 )
( irreverently~l1 opposite~l1 reverently~l1 x00000001 )
( truthfully~l1 opposite~l1 untruthfully~l1 x00000001 )
( untruthfully~l1 opposite~l1 truthfully~l1 x00000001 )
( unmemorably~l1 opposite~l1 memorably~l1 x00000001 )
( memorably~l1 opposite~l1 unmemorably~l1 x00000001 )
( amply~l1 opposite~l1 meagerly~l1 x00000001 )
( meagerly~l1 opposite~l1 amply~l1 x00000001 )
( insincerely~l1 opposite~l1 sincerely~l1 x00000001 )
( sincerely~l1 opposite~l1 insincerely~l1 x00000001 )
( uninstructively~l1 opposite~l1 instructively~l1 x00000001 )
( instructively~l1 opposite~l1 uninstructively~l1 x00000001 )
( imprudently~l1 opposite~l1 prudently~l1 x00000001 )
( prudently~l1 opposite~l1 imprudently~l1 x00000001 )
( imprecisely~l1 opposite~l1 precisely~l1 x00000001 )
( precisely~l1 opposite~l1 imprecisely~l1 x00000001 )
( inexactly~l1 opposite~l1 exactly~l1 x00000001 )
( exactly~l1 opposite~l1 inexactly~l1 x00000001 )
( penitently~l1 opposite~l1 impenitently~l1 x00000001 )
( impenitently~l1 opposite~l1 penitently~l1 x00000001 )
( repentantly~l1 opposite~l1 unrepentantly~l1 x00000001 )
( unrepentantly~l1 opposite~l1 repentantly~l1 x00000001 )
( immorally~l1 opposite~l1 morally~l1 x00000001 )
( morally~l1 opposite~l1 immorally~l1 x00000001 )
( lawfully~l1 opposite~l1 lawlessly~l1 x00000001 )
( lawlessly~l1 opposite~l1 lawfully~l1 x00000001 )
( licitly~l1 opposite~l1 illicitly~l1 x00000001 )
( illicitly~l1 opposite~l1 licitly~l1 x00000001 )
( illegibly~l1 opposite~l1 legibly~l1 x00000001 )
( legibly~l1 opposite~l1 illegibly~l1 x00000001 )
( humorlessly~l1 opposite~l1 humorously~l1 x00000001 )
( humorously~l1 opposite~l1 humorlessly~l1 x00000001 )
( joylessly~l1 opposite~l1 joyfully~l1 x00000001 )
( joyfully~l1 opposite~l1 joylessly~l1 x00000001 )
( fortissimo~l1 opposite~l1 pianissimo~l1 x00000001 )
( pianissimo~l1 opposite~l1 fortissimo~l1 x00000001 )
( cheaply~l1 opposite~l1 expensively~l1 x00000001 )
( expensively~l1 opposite~l1 cheaply~l1 x00000001 )
( inexcusably~l1 opposite~l1 excusably~l1 x00000001 )
( excusably~l1 opposite~l1 inexcusably~l1 x00000001 )
( unpardonably~l1 opposite~l1 pardonably~l1 x00000001 )
( pardonably~l1 opposite~l1 unpardonably~l1 x00000001 )
( unforgivably~l1 opposite~l1 forgivably~l1 x00000001 )
( forgivably~l1 opposite~l1 unforgivably~l1 x00000001 )
( ineloquently~l1 opposite~l1 eloquently~l1 x00000001 )
( eloquently~l1 opposite~l1 ineloquently~l1 x00000001 )
( unselfishly~l1 opposite~l1 selfishly~l1 x00000001 )
( selfishly~l1 opposite~l1 unselfishly~l1 x00000001 )
( ineffectively~l1 opposite~l1 effectively~l1 x00000001 )
( effectively~l1 opposite~l1 ineffectively~l1 x00000001 )
( trustfully~l1 opposite~l1 distrustfully~l1 x00000001 )
( distrustfully~l1 opposite~l1 trustfully~l1 x00000001 )
( dishonestly~l1 opposite~l1 honestly~l1 x00000001 )
( honestly~l1 opposite~l1 dishonestly~l1 x00000001 )
( disagreeably~l1 opposite~l1 agreeably~l1 x00000001 )
( agreeably~l1 opposite~l1 disagreeably~l1 x00000001 )
( harmlessly~l1 opposite~l1 harmfully~l1 x00000001 )
( harmfully~l1 opposite~l1 harmlessly~l1 x00000001 )
( unwillingly~l1 opposite~l1 willingly~l1 x00000001 )
( willingly~l1 opposite~l1 unwillingly~l1 x00000001 )
( credulously~l1 opposite~l1 incredulously~l1 x00000001 )
( incredulously~l1 opposite~l1 credulously~l1 x00000001 )
( believingly~l1 opposite~l1 unbelievingly~l1 x00000001 )
( unbelievingly~l1 opposite~l1 believingly~l1 x00000001 )
( credibly~l1 opposite~l1 incredibly~l1 x00000001 )
( incredibly~l1 opposite~l1 credibly~l1 x00000001 )
( unfairly~l1 opposite~l1 fairly~l1 x00000001 )
( fairly~l1 opposite~l1 unfairly~l1 x00000001 )
( carelessly~l1 opposite~l1 carefully~l1 x00000001 )
( carefully~l1 opposite~l1 carelessly~l1 x00000001 )
( ungratefully~l1 opposite~l1 gratefully~l1 x00000001 )
( gratefully~l1 opposite~l1 ungratefully~l1 x00000001 )
( unambitiously~l1 opposite~l1 ambitiously~l1 x00000001 )
( ambitiously~l1 opposite~l1 unambitiously~l1 x00000001 )
( unknowingly~l1 opposite~l1 knowingly~l1 x00000001 )
( knowingly~l1 opposite~l1 unknowingly~l1 x00000001 )
( unwittingly~l1 opposite~l1 wittingly~l1 x00000001 )
( wittingly~l1 opposite~l1 unwittingly~l1 x00000001 )
( inefficiently~l1 opposite~l1 efficiently~l1 x00000001 )
( efficiently~l1 opposite~l1 inefficiently~l1 x00000001 )
( unfavorably~l1 opposite~l1 favorably~l1 x00000001 )
( favorably~l1 opposite~l1 unfavorably~l1 x00000001 )
( undependably~l1 opposite~l1 dependably~l1 x00000001 )
( dependably~l1 opposite~l1 undependably~l1 x00000001 )
( unreliably~l1 opposite~l1 reliably~l1 x00000001 )
( reliably~l1 opposite~l1 unreliably~l1 x00000001 )
( broadly~l1 opposite~l1 narrowly~l1 x00000001 )
( narrowly~l1 opposite~l1 broadly~l1 x00000001 )
( impolitely~l1 opposite~l1 politely~l1 x00000001 )
( politely~l1 opposite~l1 impolitely~l1 x00000001 )
( unpropitiously~l1 opposite~l1 propitiously~l1 x00000001 )
( propitiously~l1 opposite~l1 unpropitiously~l1 x00000001 )
( amateurishly~l1 opposite~l1 expertly~l1 x00000001 )
( expertly~l1 opposite~l1 amateurishly~l1 x00000001 )
( fruitlessly~l1 opposite~l1 fruitfully~l1 x00000001 )
( fruitfully~l1 opposite~l1 fruitlessly~l1 x00000001 )
( unprofitably~l1 opposite~l1 profitably~l1 x00000001 )
( profitably~l1 opposite~l1 unprofitably~l1 x00000001 )
( monaurally~l1 opposite~l1 binaurally~l1 x00000001 )
( binaurally~l1 opposite~l1 monaurally~l1 x00000001 )
( unjustly~l1 opposite~l1 justly~l1 x00000001 )
( justly~l1 opposite~l1 unjustly~l1 x00000001 )
( wrongly~l1 opposite~l1 right~l1 x00000001 )
( right~l1 opposite~l1 wrongly~l1 x00000001 )
( unintelligibly~l1 opposite~l1 intelligibly~l1 x00000001 )
( intelligibly~l1 opposite~l1 unintelligibly~l1 x00000001 )
( fearlessly~l1 opposite~l1 fearfully~l1 x00000001 )
( fearfully~l1 opposite~l1 fearlessly~l1 x00000001 )
( properly~l1 opposite~l1 improperly~l1 x00000001 )
( improperly~l1 opposite~l1 properly~l1 x00000001 )
( ungracefully~l1 opposite~l1 gracefully~l1 x00000001 )
( gracefully~l1 opposite~l1 ungracefully~l1 x00000001 )
( incompetently~l1 opposite~l1 competently~l1 x00000001 )
( competently~l1 opposite~l1 incompetently~l1 x00000001 )
( lightly~l1 opposite~l1 heavily~l1 x00000001 )
( heavily~l1 opposite~l1 lightly~l1 x00000001 )
( asymmetrically~l1 opposite~l1 symmetrically~l1 x00000001 )
( symmetrically~l1 opposite~l1 asymmetrically~l1 x00000001 )
( steadily~l1 opposite~l1 unsteadily~l1 x00000001 )
( unsteadily~l1 opposite~l1 steadily~l1 x00000001 )
( theoretically~l1 opposite~l1 empirically~l1 x00000001 )
( empirically~l1 opposite~l1 theoretically~l1 x00000001 )
( slowly~l1 opposite~l1 quickly~l1 x00000001 )
( quickly~l1 opposite~l1 slowly~l1 x00000001 )
( unmindfully~l1 opposite~l1 mindfully~l1 x00000001 )
( mindfully~l1 opposite~l1 unmindfully~l1 x00000001 )
( out_of_hand~l1 opposite~l1 in_hand~l1 x00000001 )
( in_hand~l1 opposite~l1 out_of_hand~l1 x00000001 )
( hesitantly~l1 opposite~l1 unhesitatingly~l1 x00000001 )
( unhesitatingly~l1 opposite~l1 hesitantly~l1 x00000001 )
( artificially~l1 opposite~l1 naturally~l1 x00000001 )
( naturally~l1 opposite~l1 artificially~l1 x00000001 )
( unsuitably~l1 opposite~l1 suitably~l1 x00000001 )
( suitably~l1 opposite~l1 unsuitably~l1 x00000001 )
( primarily~l1 opposite~l1 secondarily~l1 x00000001 )
( secondarily~l1 opposite~l1 primarily~l1 x00000001 )
( atypically~l1 opposite~l1 typically~l1 x00000001 )
( typically~l1 opposite~l1 atypically~l1 x00000001 )
( inconsistently~l1 opposite~l1 consistently~l1 x00000001 )
( consistently~l1 opposite~l1 inconsistently~l1 x00000001 )
( least~l1 opposite~l1 to_the_highest_degree~l1 x00000001 )
( to_the_highest_degree~l1 opposite~l1 least~l1 x00000001 )
( outdoors~l1 opposite~l1 indoors~l1 x00000001 )
( indoors~l1 opposite~l1 outdoors~l1 x00000001 )
( remarkably~l1 opposite~l1 unremarkably~l1 x00000001 )
( unremarkably~l1 opposite~l1 remarkably~l1 x00000001 )
( at_worst~l1 opposite~l1 at_best~l1 x00000001 )
( at_best~l1 opposite~l1 at_worst~l1 x00000001 )
( at_most~l1 opposite~l1 at_least~l1 x00000001 )
( at_least~l1 opposite~l1 at_most~l1 x00000001 )
( less~l1 opposite~l1 less~l1 x00000001 )
( less~l1 opposite~l1 to_a_greater_extent~l1 x00000001 )
( to_a_greater_extent~l1 opposite~l1 less~l1 x00000001 )
( downriver~l1 opposite~l1 upriver~l1 x00000001 )
( upriver~l1 opposite~l1 downriver~l1 x00000001 )
( upwards~l1 opposite~l1 downwards~l1 x00000001 )
( downwards~l1 opposite~l1 upwards~l1 x00000001 )
( upward~l1 opposite~l1 downward~l1 x00000001 )
( downward~l1 opposite~l1 upward~l1 x00000001 )
( upwind~l1 opposite~l1 downwind~l1 x00000001 )
( downwind~l1 opposite~l1 upwind~l1 x00000001 )
( inconclusively~l1 opposite~l1 conclusively~l1 x00000001 )
( conclusively~l1 opposite~l1 inconclusively~l1 x00000001 )
( sanely~l1 opposite~l1 insanely~l1 x00000001 )
( insanely~l1 opposite~l1 sanely~l1 x00000001 )
( ahead~l1 opposite~l1 back~l1 x00000001 )
( back~l1 opposite~l1 ahead~l1 x00000001 )
( accidentally~l1 opposite~l1 deliberately~l1 x00000001 )
( deliberately~l1 opposite~l1 accidentally~l1 x00000001 )
( by_no_means~l1 opposite~l1 by_all_means~l1 x00000001 )
( by_all_means~l1 opposite~l1 by_no_means~l1 x00000001 )
( intolerably~l1 opposite~l1 tolerably~l1 x00000001 )
( tolerably~l1 opposite~l1 intolerably~l1 x00000001 )
( unfortunately~l1 opposite~l1 fortunately~l1 x00000001 )
( fortunately~l1 opposite~l1 unfortunately~l1 x00000001 )
( unluckily~l1 opposite~l1 luckily~l1 x00000001 )
( luckily~l1 opposite~l1 unluckily~l1 x00000001 )
( sadly~l1 opposite~l1 happily~l1 x00000001 )
( happily~l1 opposite~l1 sadly~l1 x00000001 )
( generally~l1 opposite~l1 specifically~l1 x00000001 )
( specifically~l1 opposite~l1 generally~l1 x00000001 )
( rarely~l1 opposite~l1 often~l1 x00000001 )
( often~l1 opposite~l1 rarely~l1 x00000001 )
( never~l1 opposite~l1 ever~l1 x00000001 )
( ever~l1 opposite~l1 never~l1 x00000001 )
( ill~l1 opposite~l1 well~l1 x00000001 )
( well~l1 opposite~l1 ill~l1 x00000001 )
( wholly~l1 opposite~l1 partly~l1 x00000001 )
( partly~l1 opposite~l1 wholly~l1 x00000001 )
( ungathered~l1 opposite~l1 gathered~l1 x00000001 )
( gathered~l1 opposite~l1 ungathered~l1 x00000001 )
( postnuptial~l1 opposite~l1 prenuptial~l1 x00000001 )
( prenuptial~l1 opposite~l1 postnuptial~l1 x00000001 )
( exocrine~l1 opposite~l1 endocrine~l1 x00000001 )
( endocrine~l1 opposite~l1 exocrine~l1 x00000001 )
( procaryotic~l1 opposite~l1 eucaryotic~l1 x00000001 )
( eucaryotic~l1 opposite~l1 procaryotic~l1 x00000001 )
( afebrile~l1 opposite~l1 febrile~l1 x00000001 )
( febrile~l1 opposite~l1 afebrile~l1 x00000001 )
( eugenic~l1 opposite~l1 dysgenic~l1 x00000001 )
( dysgenic~l1 opposite~l1 eugenic~l1 x00000001 )
( eremitic~l1 opposite~l1 cenobitic~l1 x00000001 )
( cenobitic~l1 opposite~l1 eremitic~l1 x00000001 )
( analphabetic~l1 opposite~l1 alphabetic~l1 x00000001 )
( alphabetic~l1 opposite~l1 analphabetic~l1 x00000001 )
( flowerless~l1 opposite~l1 flowering~l1 x00000001 )
( flowering~l1 opposite~l1 flowerless~l1 x00000001 )
( unshelled~l1 opposite~l1 shelled~l1 x00000001 )
( shelled~l1 opposite~l1 unshelled~l1 x00000001 )
( unworldly~l1 opposite~l1 worldly~l1 x00000001 )
( worldly~l1 opposite~l1 unworldly~l1 x00000001 )
( unwieldy~l1 opposite~l1 wieldy~l1 x00000001 )
( wieldy~l1 opposite~l1 unwieldy~l1 x00000001 )
( anhydrous~l1 opposite~l1 hydrous~l1 x00000001 )
( hydrous~l1 opposite~l1 anhydrous~l1 x00000001 )
( nonvolatile~l1 opposite~l1 volatile~l1 x00000001 )
( volatile~l1 opposite~l1 nonvolatile~l1 x00000001 )
( ovoviviparous~l1 opposite~l1 viviparous~l1 x00000001 )
( viviparous~l1 opposite~l1 ovoviviparous~l1 x00000001 )
( oviparous~l1 opposite~l1 viviparous~l1 x00000001 )
( viviparous~l1 opposite~l1 oviparous~l1 x00000001 )
( unvaried~l1 opposite~l1 varied~l1 x00000001 )
( varied~l1 opposite~l1 unvaried~l1 x00000001 )
( unguiculate~l1 opposite~l1 ungulate~l1 x00000001 )
( ungulate~l1 opposite~l1 unguiculate~l1 x00000001 )
( bivalve~l1 opposite~l1 univalve~l1 x00000001 )
( univalve~l1 opposite~l1 bivalve~l1 x00000001 )
( overhand~l1 opposite~l1 underhand~l1 x00000001 )
( underhand~l1 opposite~l1 overhand~l1 x00000001 )
( atypical~l1 opposite~l1 typical~l1 x00000001 )
( typical~l1 opposite~l1 atypical~l1 x00000001 )
( untraveled~l1 opposite~l1 traveled~l1 x00000001 )
( traveled~l1 opposite~l1 untraveled~l1 x00000001 )
( intractable~l1 opposite~l1 tractable~l1 x00000001 )
( tractable~l1 opposite~l1 intractable~l1 x00000001 )
( atonal~l1 opposite~l1 tonal~l1 x00000001 )
( tonal~l1 opposite~l1 atonal~l1 x00000001 )
( nontaxable~l1 opposite~l1 taxable~l1 x00000001 )
( taxable~l1 opposite~l1 nontaxable~l1 x00000001 )
( tactless~l1 opposite~l1 tactful~l1 x00000001 )
( tactful~l1 opposite~l1 tactless~l1 x00000001 )
( zygomorphic~l1 opposite~l1 actinomorphic~l1 x00000001 )
( actinomorphic~l1 opposite~l1 zygomorphic~l1 x00000001 )
( unsurprised~l1 opposite~l1 surprised~l1 x00000001 )
( surprised~l1 opposite~l1 unsurprised~l1 x00000001 )
( docile~l1 opposite~l1 stubborn~l1 x00000001 )
( stubborn~l1 opposite~l1 docile~l1 x00000001 )
( atonic~l1 opposite~l1 tonic~l1 x00000001 )
( tonic~l1 opposite~l1 atonic~l1 x00000001 )
( curved~l1 opposite~l1 straight~l1 x00000001 )
( straight~l1 opposite~l1 curved~l1 x00000001 )
( unvoiced~l1 opposite~l1 voiced~l1 x00000001 )
( voiced~l1 opposite~l1 unvoiced~l1 x00000001 )
( induced~l1 opposite~l1 spontaneous~l1 x00000001 )
( spontaneous~l1 opposite~l1 induced~l1 x00000001 )
( still~l1 opposite~l1 sparkling~l1 x00000001 )
( sparkling~l1 opposite~l1 still~l1 x00000001 )
( unsolved~l1 opposite~l1 solved~l1 x00000001 )
( solved~l1 opposite~l1 unsolved~l1 x00000001 )
( unrifled~l1 opposite~l1 rifled~l1 x00000001 )
( rifled~l1 opposite~l1 unrifled~l1 x00000001 )
( numerical~l1 opposite~l1 verbal~l1 x00000001 )
( verbal~l1 opposite~l1 numerical~l1 x00000001 )
( compound~l1 opposite~l1 simple~l1 x00000001 )
( simple~l1 opposite~l1 compound~l1 x00000001 )
( blind~l1 opposite~l1 sighted~l1 x00000001 )
( sighted~l1 opposite~l1 blind~l1 x00000001 )
( farsighted~l1 opposite~l1 nearsighted~l1 x00000001 )
( nearsighted~l1 opposite~l1 farsighted~l1 x00000001 )
( discalced~l1 opposite~l1 calced~l1 x00000001 )
( calced~l1 opposite~l1 discalced~l1 x00000001 )
( unshod~l1 opposite~l1 shod~l1 x00000001 )
( shod~l1 opposite~l1 unshod~l1 x00000001 )
( unshockable~l1 opposite~l1 shockable~l1 x00000001 )
( shockable~l1 opposite~l1 unshockable~l1 x00000001 )
( anaphrodisiac~l1 opposite~l1 aphrodisiac~l1 x00000001 )
( aphrodisiac~l1 opposite~l1 anaphrodisiac~l1 x00000001 )
( asexual~l1 opposite~l1 sexual~l1 x00000001 )
( sexual~l1 opposite~l1 asexual~l1 x00000001 )
( antiseptic~l1 opposite~l1 septic~l1 x00000001 )
( septic~l1 opposite~l1 antiseptic~l1 x00000001 )
( unsanitary~l1 opposite~l1 sanitary~l1 x00000001 )
( sanitary~l1 opposite~l1 unsanitary~l1 x00000001 )
( extrasensory~l1 opposite~l1 sensory~l1 x00000001 )
( sensory~l1 opposite~l1 extrasensory~l1 x00000001 )
( insensible~l1 opposite~l1 sensible~l1 x00000001 )
( sensible~l1 opposite~l1 insensible~l1 x00000001 )
( unscalable~l1 opposite~l1 scalable~l1 x00000001 )
( scalable~l1 opposite~l1 unscalable~l1 x00000001 )
( insatiate~l1 opposite~l1 satiate~l1 x00000001 )
( satiate~l1 opposite~l1 insatiate~l1 x00000001 )
( unsalable~l1 opposite~l1 salable~l1 x00000001 )
( salable~l1 opposite~l1 unsalable~l1 x00000001 )
( unholy~l1 opposite~l1 holy~l1 x00000001 )
( holy~l1 opposite~l1 unholy~l1 x00000001 )
( prolate~l1 opposite~l1 oblate~l1 x00000001 )
( oblate~l1 opposite~l1 prolate~l1 x00000001 )
( angular~l1 opposite~l1 rounded~l1 x00000001 )
( rounded~l1 opposite~l1 angular~l1 x00000001 )
( square~l1 opposite~l1 round~l1 x00000001 )
( round~l1 opposite~l1 square~l1 x00000001 )
( unawed~l1 opposite~l1 awed~l1 x00000001 )
( awed~l1 opposite~l1 unawed~l1 x00000001 )
( nonretractile~l1 opposite~l1 retractile~l1 x00000001 )
( retractile~l1 opposite~l1 nonretractile~l1 x00000001 )
( unretentive~l1 opposite~l1 retentive~l1 x00000001 )
( retentive~l1 opposite~l1 unretentive~l1 x00000001 )
( aperiodic~l1 opposite~l1 periodic~l1 x00000001 )
( periodic~l1 opposite~l1 aperiodic~l1 x00000001 )
( multiform~l1 opposite~l1 uniform~l1 x00000001 )
( uniform~l1 opposite~l1 multiform~l1 x00000001 )
( unrhymed~l1 opposite~l1 rhymed~l1 x00000001 )
( rhymed~l1 opposite~l1 unrhymed~l1 x00000001 )
( nonrepetitive~l1 opposite~l1 repetitive~l1 x00000001 )
( repetitive~l1 opposite~l1 nonrepetitive~l1 x00000001 )
( unquotable~l1 opposite~l1 quotable~l1 x00000001 )
( quotable~l1 opposite~l1 unquotable~l1 x00000001 )
( irreparable~l1 opposite~l1 reparable~l1 x00000001 )
( reparable~l1 opposite~l1 irreparable~l1 x00000001 )
( unrenewable~l1 opposite~l1 renewable~l1 x00000001 )
( renewable~l1 opposite~l1 unrenewable~l1 x00000001 )
( unregenerate~l1 opposite~l1 regenerate~l1 x00000001 )
( regenerate~l1 opposite~l1 unregenerate~l1 x00000001 )
( cerebral~l1 opposite~l1 emotional~l1 x00000001 )
( emotional~l1 opposite~l1 cerebral~l1 x00000001 )
( restless~l1 opposite~l1 restful~l1 x00000001 )
( restful~l1 opposite~l1 restless~l1 x00000001 )
( unprophetic~l1 opposite~l1 prophetic~l1 x00000001 )
( prophetic~l1 opposite~l1 unprophetic~l1 x00000001 )
( opisthognathous~l1 opposite~l1 prognathous~l1 x00000001 )
( prognathous~l1 opposite~l1 opisthognathous~l1 x00000001 )
( nonprescription~l1 opposite~l1 prescription~l1 x00000001 )
( prescription~l1 opposite~l1 nonprescription~l1 x00000001 )
( unplowed~l1 opposite~l1 plowed~l1 x00000001 )
( plowed~l1 opposite~l1 unplowed~l1 x00000001 )
( unstudied~l1 opposite~l1 studied~l1 x00000001 )
( studied~l1 opposite~l1 unstudied~l1 x00000001 )
( patterned~l1 opposite~l1 plain~l1 x00000001 )
( plain~l1 opposite~l1 patterned~l1 x00000001 )
( impervious~l1 opposite~l1 pervious~l1 x00000001 )
( pervious~l1 opposite~l1 impervious~l1 x00000001 )
( preventive~l1 opposite~l1 permissive~l1 x00000001 )
( permissive~l1 opposite~l1 preventive~l1 x00000001 )
( impenitent~l1 opposite~l1 penitent~l1 x00000001 )
( penitent~l1 opposite~l1 impenitent~l1 x00000001 )
( unrepentant~l1 opposite~l1 repentant~l1 x00000001 )
( repentant~l1 opposite~l1 unrepentant~l1 x00000001 )
( unpeaceful~l1 opposite~l1 peaceful~l1 x00000001 )
( peaceful~l1 opposite~l1 unpeaceful~l1 x00000001 )
( husbandly~l1 opposite~l1 wifely~l1 x00000001 )
( wifely~l1 opposite~l1 husbandly~l1 x00000001 )
( undelineated~l1 opposite~l1 delineated~l1 x00000001 )
( delineated~l1 opposite~l1 undelineated~l1 x00000001 )
( lipless~l1 opposite~l1 lipped~l1 x00000001 )
( lipped~l1 opposite~l1 lipless~l1 x00000001 )
( indoor~l1 opposite~l1 outdoor~l1 x00000001 )
( outdoor~l1 opposite~l1 indoor~l1 x00000001 )
( disorienting~l1 opposite~l1 orienting~l1 x00000001 )
( orienting~l1 opposite~l1 disorienting~l1 x00000001 )
( unoriented~l1 opposite~l1 oriented~l1 x00000001 )
( oriented~l1 opposite~l1 unoriented~l1 x00000001 )
( atomistic~l1 opposite~l1 holistic~l1 x00000001 )
( holistic~l1 opposite~l1 atomistic~l1 x00000001 )
( shut~l1 opposite~l1 open~l1 x00000001 )
( open~l1 opposite~l1 shut~l1 x00000001 )
( offside~l1 opposite~l1 onside~l1 x00000001 )
( onside~l1 opposite~l1 offside~l1 x00000001 )
( off~l1 opposite~l1 off~l1 x00000001 )
( unsavory~l1 opposite~l1 savory~l1 x00000001 )
( savory~l1 opposite~l1 unsavory~l1 x00000001 )
( subjective~l1 opposite~l1 objective~l1 x00000001 )
( objective~l1 opposite~l1 subjective~l1 x00000001 )
( unobtrusive~l1 opposite~l1 obtrusive~l1 x00000001 )
( obtrusive~l1 opposite~l1 unobtrusive~l1 x00000001 )
( unneurotic~l1 opposite~l1 neurotic~l1 x00000001 )
( neurotic~l1 opposite~l1 unneurotic~l1 x00000001 )
( gross~l1 opposite~l1 net~l1 x00000001 )
( net~l1 opposite~l1 gross~l1 x00000001 )
( unmoved~l1 opposite~l1 moved~l1 x00000001 )
( moved~l1 opposite~l1 unmoved~l1 x00000001 )
( fewest~l1 opposite~l1 fewest~l1 x00000001 )
( fewer~l1 opposite~l1 fewer~l1 x00000001 )
( least~l1 opposite~l1 least~l1 x00000001 )
( polyphonic~l1 opposite~l1 monophonic~l1 x00000001 )
( monophonic~l1 opposite~l1 polyphonic~l1 x00000001 )
( unmilitary~l1 opposite~l1 military~l1 x00000001 )
( military~l1 opposite~l1 unmilitary~l1 x00000001 )
( ametabolic~l1 opposite~l1 metabolic~l1 x00000001 )
( metabolic~l1 opposite~l1 ametabolic~l1 x00000001 )
( merciless~l1 opposite~l1 merciful~l1 x00000001 )
( merciful~l1 opposite~l1 merciless~l1 x00000001 )
( unmelted~l1 opposite~l1 melted~l1 x00000001 )
( melted~l1 opposite~l1 unmelted~l1 x00000001 )
( unmusical~l1 opposite~l1 musical~l1 x00000001 )
( musical~l1 opposite~l1 unmusical~l1 x00000001 )
( tuneless~l1 opposite~l1 tuneful~l1 x00000001 )
( tuneful~l1 opposite~l1 tuneless~l1 x00000001 )
( meaningless~l1 opposite~l1 meaningful~l1 x00000001 )
( meaningful~l1 opposite~l1 meaningless~l1 x00000001 )
( year-round~l1 opposite~l1 seasonal~l1 x00000001 )
( seasonal~l1 opposite~l1 year-round~l1 x00000001 )
( green~l1 opposite~l1 ripe~l1 x00000001 )
( ripe~l1 opposite~l1 green~l1 x00000001 )
( unwomanly~l1 opposite~l1 womanly~l1 x00000001 )
( womanly~l1 opposite~l1 unwomanly~l1 x00000001 )
( unmanned~l1 opposite~l1 manned~l1 x00000001 )
( manned~l1 opposite~l1 unmanned~l1 x00000001 )
( unmanly~l1 opposite~l1 manly~l1 x00000001 )
( manly~l1 opposite~l1 unmanly~l1 x00000001 )
( minuscule~l1 opposite~l1 majuscule~l1 x00000001 )
( majuscule~l1 opposite~l1 minuscule~l1 x00000001 )
( geographic~l1 opposite~l1 magnetic~l1 x00000001 )
( magnetic~l1 opposite~l1 geographic~l1 x00000001 )
( antimagnetic~l1 opposite~l1 magnetic~l1 x00000001 )
( magnetic~l1 opposite~l1 antimagnetic~l1 x00000001 )
( unlucky~l1 opposite~l1 lucky~l1 x00000001 )
( lucky~l1 opposite~l1 unlucky~l1 x00000001 )
( hateful~l1 opposite~l1 lovable~l1 x00000001 )
( lovable~l1 opposite~l1 hateful~l1 x00000001 )
( endemic~l1 opposite~l1 ecdemic~l1 x00000001 )
( ecdemic~l1 opposite~l1 endemic~l1 x00000001 )
( endemic~l1 opposite~l1 epidemic~l1 x00000001 )
( epidemic~l1 opposite~l1 endemic~l1 x00000001 )
( unlivable~l1 opposite~l1 livable~l1 x00000001 )
( livable~l1 opposite~l1 unlivable~l1 x00000001 )
( recorded~l1 opposite~l1 live~l1 x00000001 )
( live~l1 opposite~l1 recorded~l1 x00000001 )
( nonlinear~l1 opposite~l1 linear~l1 x00000001 )
( linear~l1 opposite~l1 nonlinear~l1 x00000001 )
( unalike~l1 opposite~l1 alike~l1 x00000001 )
( alike~l1 opposite~l1 unalike~l1 x00000001 )
( platyrrhine~l1 opposite~l1 leptorrhine~l1 x00000001 )
( leptorrhine~l1 opposite~l1 platyrrhine~l1 x00000001 )
( platyrrhine~l1 opposite~l1 catarrhine~l1 x00000001 )
( catarrhine~l1 opposite~l1 platyrrhine~l1 x00000001 )
( catarrhine~l1 opposite~l1 leptorrhine~l1 x00000001 )
( leptorrhine~l1 opposite~l1 catarrhine~l1 x00000001 )
( small~l1 opposite~l1 large~l1 x00000001 )
( large~l1 opposite~l1 small~l1 x00000001 )
( little~l1 opposite~l1 big~l1 x00000001 )
( big~l1 opposite~l1 little~l1 x00000001 )
( unlaureled~l1 opposite~l1 laureled~l1 x00000001 )
( laureled~l1 opposite~l1 unlaureled~l1 x00000001 )
( unlabeled~l1 opposite~l1 labeled~l1 x00000001 )
( labeled~l1 opposite~l1 unlabeled~l1 x00000001 )
( unknowable~l1 opposite~l1 knowable~l1 x00000001 )
( knowable~l1 opposite~l1 unknowable~l1 x00000001 )
( unmerited~l1 opposite~l1 merited~l1 x00000001 )
( merited~l1 opposite~l1 unmerited~l1 x00000001 )
( anisotropic~l1 opposite~l1 isotropic~l1 x00000001 )
( isotropic~l1 opposite~l1 anisotropic~l1 x00000001 )
( unwrinkled~l1 opposite~l1 wrinkled~l1 x00000001 )
( wrinkled~l1 opposite~l1 unwrinkled~l1 x00000001 )
( aqueous~l1 opposite~l1 igneous~l1 x00000001 )
( igneous~l1 opposite~l1 aqueous~l1 x00000001 )
( unintrusive~l1 opposite~l1 intrusive~l1 x00000001 )
( intrusive~l1 opposite~l1 unintrusive~l1 x00000001 )
( extrospective~l1 opposite~l1 introspective~l1 x00000001 )
( introspective~l1 opposite~l1 extrospective~l1 x00000001 )
( extrinsic~l1 opposite~l1 intrinsic~l1 x00000001 )
( intrinsic~l1 opposite~l1 extrinsic~l1 x00000001 )
( intraspecies~l1 opposite~l1 interspecies~l1 x00000001 )
( interspecies~l1 opposite~l1 intraspecies~l1 x00000001 )
( undesigned~l1 opposite~l1 designed~l1 x00000001 )
( designed~l1 opposite~l1 undesigned~l1 x00000001 )
( segregated~l1 opposite~l1 integrated~l1 x00000001 )
( integrated~l1 opposite~l1 segregated~l1 x00000001 )
( unedifying~l1 opposite~l1 edifying~l1 x00000001 )
( edifying~l1 opposite~l1 unedifying~l1 x00000001 )
( guilty~l1 opposite~l1 innocent~l1 x00000001 )
( innocent~l1 opposite~l1 guilty~l1 x00000001 )
( agnostic~l1 opposite~l1 gnostic~l1 x00000001 )
( gnostic~l1 opposite~l1 agnostic~l1 x00000001 )
( transeunt~l1 opposite~l1 immanent~l1 x00000001 )
( immanent~l1 opposite~l1 transeunt~l1 x00000001 )
( humorless~l1 opposite~l1 humorous~l1 x00000001 )
( humorous~l1 opposite~l1 humorless~l1 x00000001 )
( wintry~l1 opposite~l1 autumnal~l1 x00000001 )
( autumnal~l1 opposite~l1 wintry~l1 x00000001 )
( wintry~l1 opposite~l1 summery~l1 x00000001 )
( summery~l1 opposite~l1 wintry~l1 x00000001 )
( wintry~l1 opposite~l1 vernal~l1 x00000001 )
( vernal~l1 opposite~l1 wintry~l1 x00000001 )
( seated~l1 opposite~l1 standing~l1 x00000001 )
( standing~l1 opposite~l1 seated~l1 x00000001 )
( unerect~l1 opposite~l1 erect~l1 x00000001 )
( erect~l1 opposite~l1 unerect~l1 x00000001 )
( inclined~l1 opposite~l1 vertical~l1 x00000001 )
( vertical~l1 opposite~l1 inclined~l1 x00000001 )
( vertical~l1 opposite~l1 horizontal~l1 x00000001 )
( horizontal~l1 opposite~l1 vertical~l1 x00000001 )
( dishonest~l1 opposite~l1 honest~l1 x00000001 )
( honest~l1 opposite~l1 dishonest~l1 x00000001 )
( analogous~l1 opposite~l1 heterologous~l1 x00000001 )
( heterologous~l1 opposite~l1 analogous~l1 x00000001 )
( lowland~l1 opposite~l1 upland~l1 x00000001 )
( upland~l1 opposite~l1 lowland~l1 x00000001 )
( nonechoic~l1 opposite~l1 echoic~l1 x00000001 )
( echoic~l1 opposite~l1 nonechoic~l1 x00000001 )
( disabling~l1 opposite~l1 enabling~l1 x00000001 )
( enabling~l1 opposite~l1 disabling~l1 x00000001 )
( heedful~l1 opposite~l1 heedless~l1 x00000001 )
( heedless~l1 opposite~l1 heedful~l1 x00000001 )
( surgical~l1 opposite~l1 medical~l1 x00000001 )
( medical~l1 opposite~l1 surgical~l1 x00000001 )
( unregretful~l1 opposite~l1 regretful~l1 x00000001 )
( regretful~l1 opposite~l1 unregretful~l1 x00000001 )
( polyploid~l1 opposite~l1 haploid~l1 x00000001 )
( haploid~l1 opposite~l1 polyploid~l1 x00000001 )
( diploid~l1 opposite~l1 haploid~l1 x00000001 )
( haploid~l1 opposite~l1 diploid~l1 x00000001 )
( stingy~l1 opposite~l1 generous~l1 x00000001 )
( generous~l1 opposite~l1 stingy~l1 x00000001 )
( endemic~l1 opposite~l1 cosmopolitan~l1 x00000001 )
( cosmopolitan~l1 opposite~l1 endemic~l1 x00000001 )
( odorless~l1 opposite~l1 odorous~l1 x00000001 )
( odorous~l1 opposite~l1 odorless~l1 x00000001 )
( malodorous~l1 opposite~l1 fragrant~l1 x00000001 )
( fragrant~l1 opposite~l1 malodorous~l1 x00000001 )
( nonnative~l1 opposite~l1 native~l1 x00000001 )
( native~l1 opposite~l1 nonnative~l1 x00000001 )
( adopted~l1 opposite~l1 native~l1 x00000001 )
( native~l1 opposite~l1 adopted~l1 x00000001 )
( backhand~l1 opposite~l1 forehand~l1 x00000001 )
( forehand~l1 opposite~l1 backhand~l1 x00000001 )
( sterile~l1 opposite~l1 fertile~l1 x00000001 )
( fertile~l1 opposite~l1 sterile~l1 x00000001 )
( unfavorable~l1 opposite~l1 favorable~l1 x00000001 )
( favorable~l1 opposite~l1 unfavorable~l1 x00000001 )
( nonfat~l1 opposite~l1 fatty~l1 x00000001 )
( fatty~l1 opposite~l1 nonfat~l1 x00000001 )
( styleless~l1 opposite~l1 stylish~l1 x00000001 )
( stylish~l1 opposite~l1 styleless~l1 x00000001 )
( nonextensile~l1 opposite~l1 extensile~l1 x00000001 )
( extensile~l1 opposite~l1 nonextensile~l1 x00000001 )
( implicit~l1 opposite~l1 explicit~l1 x00000001 )
( explicit~l1 opposite~l1 implicit~l1 x00000001 )
( inexplicable~l1 opposite~l1 explicable~l1 x00000001 )
( explicable~l1 opposite~l1 inexplicable~l1 x00000001 )
( cheap~l1 opposite~l1 expensive~l1 x00000001 )
( expensive~l1 opposite~l1 cheap~l1 x00000001 )
( extinct~l1 opposite~l1 extant~l1 x00000001 )
( extant~l1 opposite~l1 extinct~l1 x00000001 )
( inconvertible~l1 opposite~l1 convertible~l1 x00000001 )
( convertible~l1 opposite~l1 inconvertible~l1 x00000001 )
( odd~l1 opposite~l1 even~l1 x00000001 )
( even~l1 opposite~l1 odd~l1 x00000001 )
( dysphoric~l1 opposite~l1 euphoric~l1 x00000001 )
( euphoric~l1 opposite~l1 dysphoric~l1 x00000001 )
( unflattering~l1 opposite~l1 flattering~l1 x00000001 )
( flattering~l1 opposite~l1 unflattering~l1 x00000001 )
( hypotonic~l1 opposite~l1 isotonic~l1 x00000001 )
( isotonic~l1 opposite~l1 hypotonic~l1 x00000001 )
( hypertonic~l1 opposite~l1 isotonic~l1 x00000001 )
( isotonic~l1 opposite~l1 hypertonic~l1 x00000001 )
( unenterprising~l1 opposite~l1 enterprising~l1 x00000001 )
( enterprising~l1 opposite~l1 unenterprising~l1 x00000001 )
( uninquiring~l1 opposite~l1 inquiring~l1 x00000001 )
( inquiring~l1 opposite~l1 uninquiring~l1 x00000001 )
( lethargic~l1 opposite~l1 energetic~l1 x00000001 )
( energetic~l1 opposite~l1 lethargic~l1 x00000001 )
( exogenic~l1 opposite~l1 endogenic~l1 x00000001 )
( endogenic~l1 opposite~l1 exogenic~l1 x00000001 )
( exothermic~l1 opposite~l1 endothermic~l1 x00000001 )
( endothermic~l1 opposite~l1 exothermic~l1 x00000001 )
( exoergic~l1 opposite~l1 endoergic~l1 x00000001 )
( endoergic~l1 opposite~l1 exoergic~l1 x00000001 )
( freelance~l1 opposite~l1 salaried~l1 x00000001 )
( salaried~l1 opposite~l1 freelance~l1 x00000001 )
( forceless~l1 opposite~l1 forceful~l1 x00000001 )
( forceful~l1 opposite~l1 forceless~l1 x00000001 )
( ineffective~l1 opposite~l1 effective~l1 x00000001 )
( effective~l1 opposite~l1 ineffective~l1 x00000001 )
( inedible~l1 opposite~l1 edible~l1 x00000001 )
( edible~l1 opposite~l1 inedible~l1 x00000001 )
( undynamic~l1 opposite~l1 dynamic~l1 x00000001 )
( dynamic~l1 opposite~l1 undynamic~l1 x00000001 )
( double-barreled~l1 opposite~l1 single-barreled~l1 x00000001 )
( single-barreled~l1 opposite~l1 double-barreled~l1 x00000001 )
( unservile~l1 opposite~l1 servile~l1 x00000001 )
( servile~l1 opposite~l1 unservile~l1 x00000001 )
( unfocused~l1 opposite~l1 focused~l1 x00000001 )
( focused~l1 opposite~l1 unfocused~l1 x00000001 )
( undiplomatic~l1 opposite~l1 diplomatic~l1 x00000001 )
( diplomatic~l1 opposite~l1 undiplomatic~l1 x00000001 )
( unreliable~l1 opposite~l1 reliable~l1 x00000001 )
( reliable~l1 opposite~l1 unreliable~l1 x00000001 )
( compliant~l1 opposite~l1 defiant~l1 x00000001 )
( defiant~l1 opposite~l1 compliant~l1 x00000001 )
( interrogatory~l1 opposite~l1 declaratory~l1 x00000001 )
( declaratory~l1 opposite~l1 interrogatory~l1 x00000001 )
( undatable~l1 opposite~l1 datable~l1 x00000001 )
( datable~l1 opposite~l1 undatable~l1 x00000001 )
( perennial~l1 opposite~l1 annual~l1 x00000001 )
( annual~l1 opposite~l1 perennial~l1 x00000001 )
( biennial~l1 opposite~l1 annual~l1 x00000001 )
( annual~l1 opposite~l1 biennial~l1 x00000001 )
( noncyclic~l1 opposite~l1 cyclic~l1 x00000001 )
( cyclic~l1 opposite~l1 noncyclic~l1 x00000001 )
( machine-made~l1 opposite~l1 handmade~l1 x00000001 )
( handmade~l1 opposite~l1 machine-made~l1 x00000001 )
( multidimensional~l1 opposite~l1 unidimensional~l1 x00000001 )
( unidimensional~l1 opposite~l1 multidimensional~l1 x00000001 )
( planar~l1 opposite~l1 linear~l1 x00000001 )
( linear~l1 opposite~l1 planar~l1 x00000001 )
( planar~l1 opposite~l1 cubic~l1 x00000001 )
( cubic~l1 opposite~l1 planar~l1 x00000001 )
( linear~l1 opposite~l1 cubic~l1 x00000001 )
( cubic~l1 opposite~l1 linear~l1 x00000001 )
( noncrucial~l1 opposite~l1 crucial~l1 x00000001 )
( crucial~l1 opposite~l1 noncrucial~l1 x00000001 )
( incredible~l1 opposite~l1 credible~l1 x00000001 )
( credible~l1 opposite~l1 incredible~l1 x00000001 )
( uncreative~l1 opposite~l1 creative~l1 x00000001 )
( creative~l1 opposite~l1 uncreative~l1 x00000001 )
( uncivil~l1 opposite~l1 civil~l1 x00000001 )
( civil~l1 opposite~l1 uncivil~l1 x00000001 )
( uncontroversial~l1 opposite~l1 controversial~l1 x00000001 )
( controversial~l1 opposite~l1 uncontroversial~l1 x00000001 )
( unpriestly~l1 opposite~l1 priestly~l1 x00000001 )
( priestly~l1 opposite~l1 unpriestly~l1 x00000001 )
( uncongenial~l1 opposite~l1 congenial~l1 x00000001 )
( congenial~l1 opposite~l1 uncongenial~l1 x00000001 )
( nonconductive~l1 opposite~l1 conductive~l1 x00000001 )
( conductive~l1 opposite~l1 nonconductive~l1 x00000001 )
( unenforced~l1 opposite~l1 enforced~l1 x00000001 )
( enforced~l1 opposite~l1 unenforced~l1 x00000001 )
( hypertrophied~l1 opposite~l1 atrophied~l1 x00000001 )
( atrophied~l1 opposite~l1 hypertrophied~l1 x00000001 )
( eccentric~l1 opposite~l1 concentric~l1 x00000001 )
( concentric~l1 opposite~l1 eccentric~l1 x00000001 )
( convex~l1 opposite~l1 concave~l1 x00000001 )
( concave~l1 opposite~l1 convex~l1 x00000001 )
( uncomplaining~l1 opposite~l1 complaining~l1 x00000001 )
( complaining~l1 opposite~l1 uncomplaining~l1 x00000001 )
( immiscible~l1 opposite~l1 miscible~l1 x00000001 )
( miscible~l1 opposite~l1 immiscible~l1 x00000001 )
( offshore~l1 opposite~l1 inshore~l1 x00000001 )
( inshore~l1 opposite~l1 offshore~l1 x00000001 )
( near~l1 opposite~l1 far~l1 x00000001 )
( far~l1 opposite~l1 near~l1 x00000001 )
( confused~l1 opposite~l1 clearheaded~l1 x00000001 )
( clearheaded~l1 opposite~l1 confused~l1 x00000001 )
( radiopaque~l1 opposite~l1 radiolucent~l1 x00000001 )
( radiolucent~l1 opposite~l1 radiopaque~l1 x00000001 )
( tramontane~l1 opposite~l1 cismontane~l1 x00000001 )
( cismontane~l1 opposite~l1 tramontane~l1 x00000001 )
( colorless~l1 opposite~l1 colorful~l1 x00000001 )
( colorful~l1 opposite~l1 colorless~l1 x00000001 )
( uncolored~l1 opposite~l1 colored~l1 x00000001 )
( colored~l1 opposite~l1 uncolored~l1 x00000001 )
( black-and-white~l1 opposite~l1 color~l1 x00000001 )
( color~l1 opposite~l1 black-and-white~l1 x00000001 )
( unowned~l1 opposite~l1 owned~l1 x00000001 )
( owned~l1 opposite~l1 unowned~l1 x00000001 )
( immutable~l1 opposite~l1 mutable~l1 x00000001 )
( mutable~l1 opposite~l1 immutable~l1 x00000001 )
( evitable~l1 opposite~l1 inevitable~l1 x00000001 )
( inevitable~l1 opposite~l1 evitable~l1 x00000001 )
( unsure~l1 opposite~l1 sure~l1 x00000001 )
( sure~l1 opposite~l1 unsure~l1 x00000001 )
( nonporous~l1 opposite~l1 porous~l1 x00000001 )
( porous~l1 opposite~l1 nonporous~l1 x00000001 )
( acaudate~l1 opposite~l1 caudate~l1 x00000001 )
( caudate~l1 opposite~l1 acaudate~l1 x00000001 )
( clinker-built~l1 opposite~l1 carvel-built~l1 x00000001 )
( carvel-built~l1 opposite~l1 clinker-built~l1 x00000001 )
( acarpelous~l1 opposite~l1 carpellate~l1 x00000001 )
( carpellate~l1 opposite~l1 acarpelous~l1 x00000001 )
( boneless~l1 opposite~l1 bony~l1 x00000001 )
( bony~l1 opposite~l1 boneless~l1 x00000001 )
( unburied~l1 opposite~l1 buried~l1 x00000001 )
( buried~l1 opposite~l1 unburied~l1 x00000001 )
( sisterly~l1 opposite~l1 brotherly~l1 x00000001 )
( brotherly~l1 opposite~l1 sisterly~l1 x00000001 )
( unprejudiced~l1 opposite~l1 prejudiced~l1 x00000001 )
( prejudiced~l1 opposite~l1 unprejudiced~l1 x00000001 )
( gutless~l1 opposite~l1 gutsy~l1 x00000001 )
( gutsy~l1 opposite~l1 gutless~l1 x00000001 )
( cowardly~l1 opposite~l1 brave~l1 x00000001 )
( brave~l1 opposite~l1 cowardly~l1 x00000001 )
( untied~l1 opposite~l1 tied~l1 x00000001 )
( tied~l1 opposite~l1 untied~l1 x00000001 )
( brunet~l1 opposite~l1 blond~l1 x00000001 )
( blond~l1 opposite~l1 brunet~l1 x00000001 )
( quadrupedal~l1 opposite~l1 bipedal~l1 x00000001 )
( bipedal~l1 opposite~l1 quadrupedal~l1 x00000001 )
( quadruped~l1 opposite~l1 biped~l1 x00000001 )
( biped~l1 opposite~l1 quadruped~l1 x00000001 )
( trinucleate~l1 opposite~l1 binucleate~l1 x00000001 )
( binucleate~l1 opposite~l1 trinucleate~l1 x00000001 )
( trinucleate~l1 opposite~l1 mononuclear~l1 x00000001 )
( mononuclear~l1 opposite~l1 trinucleate~l1 x00000001 )
( mononuclear~l1 opposite~l1 binucleate~l1 x00000001 )
( binucleate~l1 opposite~l1 mononuclear~l1 x00000001 )
( malign~l1 opposite~l1 benign~l1 x00000001 )
( benign~l1 opposite~l1 malign~l1 x00000001 )
( bellyless~l1 opposite~l1 bellied~l1 x00000001 )
( bellied~l1 opposite~l1 bellyless~l1 x00000001 )
( hairy~l1 opposite~l1 hairless~l1 x00000001 )
( hairless~l1 opposite~l1 hairy~l1 x00000001 )
( unbarreled~l1 opposite~l1 barreled~l1 x00000001 )
( barreled~l1 opposite~l1 unbarreled~l1 x00000001 )
( unaware~l1 opposite~l1 aware~l1 x00000001 )
( aware~l1 opposite~l1 unaware~l1 x00000001 )
( heterogenous~l1 opposite~l1 autogenous~l1 x00000001 )
( autogenous~l1 opposite~l1 heterogenous~l1 x00000001 )
( supersonic~l1 opposite~l1 sonic~l1 x00000001 )
( sonic~l1 opposite~l1 supersonic~l1 x00000001 )
( subsonic~l1 opposite~l1 sonic~l1 x00000001 )
( sonic~l1 opposite~l1 subsonic~l1 x00000001 )
( inaudible~l1 opposite~l1 audible~l1 x00000001 )
( audible~l1 opposite~l1 inaudible~l1 x00000001 )
( pedunculate~l1 opposite~l1 sessile~l1 x00000001 )
( sessile~l1 opposite~l1 pedunculate~l1 x00000001 )
( unattached~l1 opposite~l1 attached~l1 x00000001 )
( attached~l1 opposite~l1 unattached~l1 x00000001 )
( unassertive~l1 opposite~l1 assertive~l1 x00000001 )
( assertive~l1 opposite~l1 unassertive~l1 x00000001 )
( unarmored~l1 opposite~l1 armored~l1 x00000001 )
( armored~l1 opposite~l1 unarmored~l1 x00000001 )
( nonarboreal~l1 opposite~l1 arboreal~l1 x00000001 )
( arboreal~l1 opposite~l1 nonarboreal~l1 x00000001 )
( postnatal~l1 opposite~l1 perinatal~l1 x00000001 )
( perinatal~l1 opposite~l1 postnatal~l1 x00000001 )
( postnatal~l1 opposite~l1 prenatal~l1 x00000001 )
( prenatal~l1 opposite~l1 postnatal~l1 x00000001 )
( perinatal~l1 opposite~l1 prenatal~l1 x00000001 )
( prenatal~l1 opposite~l1 perinatal~l1 x00000001 )
( synthetic~l1 opposite~l1 analytic~l1 x00000001 )
( analytic~l1 opposite~l1 synthetic~l1 x00000001 )
( oral~l1 opposite~l1 anal~l1 x00000001 )
( anal~l1 opposite~l1 oral~l1 x00000001 )
( meager~l1 opposite~l1 ample~l1 x00000001 )
( ample~l1 opposite~l1 meager~l1 x00000001 )
( unambitious~l1 opposite~l1 ambitious~l1 x00000001 )
( ambitious~l1 opposite~l1 unambitious~l1 x00000001 )
( egoistic~l1 opposite~l1 altruistic~l1 x00000001 )
( altruistic~l1 opposite~l1 egoistic~l1 x00000001 )
( unalert~l1 opposite~l1 alert~l1 x00000001 )
( alert~l1 opposite~l1 unalert~l1 x00000001 )
( unaggressive~l1 opposite~l1 aggressive~l1 x00000001 )
( aggressive~l1 opposite~l1 unaggressive~l1 x00000001 )
( inaesthetic~l1 opposite~l1 aesthetic~l1 x00000001 )
( aesthetic~l1 opposite~l1 inaesthetic~l1 x00000001 )
( unadventurous~l1 opposite~l1 adventurous~l1 x00000001 )
( adventurous~l1 opposite~l1 unadventurous~l1 x00000001 )
( unadorned~l1 opposite~l1 adorned~l1 x00000001 )
( adorned~l1 opposite~l1 unadorned~l1 x00000001 )
( substantive~l1 opposite~l1 adjective~l1 x00000001 )
( adjective~l1 opposite~l1 substantive~l1 x00000001 )
( nonaddictive~l1 opposite~l1 addictive~l1 x00000001 )
( addictive~l1 opposite~l1 nonaddictive~l1 x00000001 )
( maladaptive~l1 opposite~l1 adaptive~l1 x00000001 )
( adaptive~l1 opposite~l1 maladaptive~l1 x00000001 )
( potential~l1 opposite~l1 actual~l1 x00000001 )
( actual~l1 opposite~l1 potential~l1 x00000001 )
( stative~l1 opposite~l1 active~l1 x00000001 )
( active~l1 opposite~l1 stative~l1 x00000001 )
( dormant~l1 opposite~l1 active~l1 x00000001 )
( active~l1 opposite~l1 dormant~l1 x00000001 )
( amphoteric~l1 opposite~l1 alkaline~l1 x00000001 )
( alkaline~l1 opposite~l1 amphoteric~l1 x00000001 )
( amphoteric~l1 opposite~l1 acidic~l1 x00000001 )
( acidic~l1 opposite~l1 amphoteric~l1 x00000001 )
( unabused~l1 opposite~l1 abused~l1 x00000001 )
( abused~l1 opposite~l1 unabused~l1 x00000001 )
( nonadsorbent~l1 opposite~l1 adsorbent~l1 x00000001 )
( adsorbent~l1 opposite~l1 nonadsorbent~l1 x00000001 )
( nonabsorbent~l1 opposite~l1 absorbent~l1 x00000001 )
( absorbent~l1 opposite~l1 nonabsorbent~l1 x00000001 )
( relative~l1 opposite~l1 absolute~l1 x00000001 )
( absolute~l1 opposite~l1 relative~l1 x00000001 )
( adducent~l1 opposite~l1 abducent~l1 x00000001 )
( abducent~l1 opposite~l1 adducent~l1 x00000001 )
( overtime~l1 opposite~l1 regulation_time~l1 x00000001 )
( regulation_time~l1 opposite~l1 overtime~l1 x00000001 )
( autumnal_equinox~l1 opposite~l1 vernal_equinox~l1 x00000001 )
( vernal_equinox~l1 opposite~l1 autumnal_equinox~l1 x00000001 )
( sunset~l1 opposite~l1 sunrise~l1 x00000001 )
( sunrise~l1 opposite~l1 sunset~l1 x00000001 )
( night~l1 opposite~l1 day~l1 x00000001 )
( day~l1 opposite~l1 night~l1 x00000001 )
( death~l1 opposite~l1 birth~l1 x00000001 )
( birth~l1 opposite~l1 death~l1 x00000001 )
( rest_day~l1 opposite~l1 workday~l1 x00000001 )
( workday~l1 opposite~l1 rest_day~l1 x00000001 )
( intron~l1 opposite~l1 exon~l1 x00000001 )
( exon~l1 opposite~l1 intron~l1 x00000001 )
( insulator~l1 opposite~l1 conductor~l1 x00000001 )
( conductor~l1 opposite~l1 insulator~l1 x00000001 )
( anticatalyst~l1 opposite~l1 catalyst~l1 x00000001 )
( catalyst~l1 opposite~l1 anticatalyst~l1 x00000001 )
( hypotonia~l1 opposite~l1 hypertonia~l1 x00000001 )
( hypertonia~l1 opposite~l1 hypotonia~l1 x00000001 )
( hypotonus~l1 opposite~l1 hypertonus~l1 x00000001 )
( hypertonus~l1 opposite~l1 hypotonus~l1 x00000001 )
( hyperopia~l1 opposite~l1 myopia~l1 x00000001 )
( myopia~l1 opposite~l1 hyperopia~l1 x00000001 )
( unfitness~l1 opposite~l1 fitness~l1 x00000001 )
( fitness~l1 opposite~l1 unfitness~l1 x00000001 )
( dryness~l1 opposite~l1 wetness~l1 x00000001 )
( wetness~l1 opposite~l1 dryness~l1 x00000001 )
( susceptibility~l1 opposite~l1 unsusceptibility~l1 x00000001 )
( unsusceptibility~l1 opposite~l1 susceptibility~l1 x00000001 )
( bad_weather~l1 opposite~l1 good_weather~l1 x00000001 )
( good_weather~l1 opposite~l1 bad_weather~l1 x00000001 )
( atypicality~l1 opposite~l1 typicality~l1 x00000001 )
( typicality~l1 opposite~l1 atypicality~l1 x00000001 )
( dirtiness~l1 opposite~l1 cleanness~l1 x00000001 )
( cleanness~l1 opposite~l1 dirtiness~l1 x00000001 )
( poverty~l1 opposite~l1 wealth~l1 x00000001 )
( wealth~l1 opposite~l1 poverty~l1 x00000001 )
( impurity~l1 opposite~l1 purity~l1 x00000001 )
( purity~l1 opposite~l1 impurity~l1 x00000001 )
( impossibility~l1 opposite~l1 possibility~l1 x00000001 )
( possibility~l1 opposite~l1 impossibility~l1 x00000001 )
( bad_luck~l1 opposite~l1 good_luck~l1 x00000001 )
( good_luck~l1 opposite~l1 bad_luck~l1 x00000001 )
( imperfection~l1 opposite~l1 perfection~l1 x00000001 )
( perfection~l1 opposite~l1 imperfection~l1 x00000001 )
( wellness~l1 opposite~l1 illness~l1 x00000001 )
( illness~l1 opposite~l1 wellness~l1 x00000001 )
( discomfort~l1 opposite~l1 comfort~l1 x00000001 )
( comfort~l1 opposite~l1 discomfort~l1 x00000001 )
( disrepute~l1 opposite~l1 repute~l1 x00000001 )
( repute~l1 opposite~l1 disrepute~l1 x00000001 )
( immaturity~l1 opposite~l1 maturity~l1 x00000001 )
( maturity~l1 opposite~l1 immaturity~l1 x00000001 )
( decline~l1 opposite~l1 improvement~l1 x00000001 )
( improvement~l1 opposite~l1 decline~l1 x00000001 )
( coherence~l1 opposite~l1 incoherence~l1 x00000001 )
( incoherence~l1 opposite~l1 coherence~l1 x00000001 )
( union~l1 opposite~l1 separation~l1 x00000001 )
( separation~l1 opposite~l1 union~l1 x00000001 )
( insanity~l1 opposite~l1 sanity~l1 x00000001 )
( sanity~l1 opposite~l1 insanity~l1 x00000001 )
( hypoglycemia~l1 opposite~l1 hyperglycemia~l1 x00000001 )
( hyperglycemia~l1 opposite~l1 hypoglycemia~l1 x00000001 )
( hypocalcemia~l1 opposite~l1 hypercalcemia~l1 x00000001 )
( hypercalcemia~l1 opposite~l1 hypocalcemia~l1 x00000001 )
( hypovolemia~l1 opposite~l1 hypervolemia~l1 x00000001 )
( hypervolemia~l1 opposite~l1 hypovolemia~l1 x00000001 )
( hypotension~l1 opposite~l1 hypertension~l1 x00000001 )
( hypertension~l1 opposite~l1 hypotension~l1 x00000001 )
( ill_health~l1 opposite~l1 good_health~l1 x00000001 )
( good_health~l1 opposite~l1 ill_health~l1 x00000001 )
( potency~l1 opposite~l1 impotency~l1 x00000001 )
( impotency~l1 opposite~l1 potency~l1 x00000001 )
( potence~l1 opposite~l1 impotence~l1 x00000001 )
( impotence~l1 opposite~l1 potence~l1 x00000001 )
( anestrus~l1 opposite~l1 estrus~l1 x00000001 )
( estrus~l1 opposite~l1 anestrus~l1 x00000001 )
( sleepiness~l1 opposite~l1 wakefulness~l1 x00000001 )
( wakefulness~l1 opposite~l1 sleepiness~l1 x00000001 )
( soberness~l1 opposite~l1 drunkenness~l1 x00000001 )
( drunkenness~l1 opposite~l1 soberness~l1 x00000001 )
( inaction~l1 opposite~l1 action~l1 x00000001 )
( action~l1 opposite~l1 inaction~l1 x00000001 )
( imbalance~l1 opposite~l1 balance~l1 x00000001 )
( balance~l1 opposite~l1 imbalance~l1 x00000001 )
( guilt~l1 opposite~l1 innocence~l1 x00000001 )
( innocence~l1 opposite~l1 guilt~l1 x00000001 )
( war~l1 opposite~l1 peace~l1 x00000001 )
( peace~l1 opposite~l1 war~l1 x00000001 )
( exogamy~l1 opposite~l1 endogamy~l1 x00000001 )
( endogamy~l1 opposite~l1 exogamy~l1 x00000001 )
( falsity~l1 opposite~l1 truth~l1 x00000001 )
( truth~l1 opposite~l1 falsity~l1 x00000001 )
( nonexistence~l1 opposite~l1 existence~l1 x00000001 )
( existence~l1 opposite~l1 nonexistence~l1 x00000001 )
( nonbeing~l1 opposite~l1 being~l1 x00000001 )
( being~l1 opposite~l1 nonbeing~l1 x00000001 )
( salient_angle~l1 opposite~l1 reentrant_angle~l1 x00000001 )
( reentrant_angle~l1 opposite~l1 salient_angle~l1 x00000001 )
( right_triangle~l1 opposite~l1 oblique_triangle~l1 x00000001 )
( oblique_triangle~l1 opposite~l1 right_triangle~l1 x00000001 )
( straight_line~l1 opposite~l1 curve~l1 x00000001 )
( curve~l1 opposite~l1 straight_line~l1 x00000001 )
( negativity~l1 opposite~l1 positivity~l1 x00000001 )
( positivity~l1 opposite~l1 negativity~l1 x00000001 )
( asynchronism~l1 opposite~l1 synchronism~l1 x00000001 )
( synchronism~l1 opposite~l1 asynchronism~l1 x00000001 )
( desynchronizing~l1 opposite~l1 synchronizing~l1 x00000001 )
( synchronizing~l1 opposite~l1 desynchronizing~l1 x00000001 )
( intransitivity~l1 opposite~l1 transitivity~l1 x00000001 )
( transitivity~l1 opposite~l1 intransitivity~l1 x00000001 )
( aliquant~l1 opposite~l1 aliquot~l1 x00000001 )
( aliquot~l1 opposite~l1 aliquant~l1 x00000001 )
( widening~l1 opposite~l1 narrowing~l1 x00000001 )
( narrowing~l1 opposite~l1 widening~l1 x00000001 )
( serial_operation~l1 opposite~l1 parallel_operation~l1 x00000001 )
( parallel_operation~l1 opposite~l1 serial_operation~l1 x00000001 )
( proliferation~l1 opposite~l1 nonproliferation~l1 x00000001 )
( nonproliferation~l1 opposite~l1 proliferation~l1 x00000001 )
( peristalsis~l1 opposite~l1 anastalsis~l1 x00000001 )
( anastalsis~l1 opposite~l1 peristalsis~l1 x00000001 )
( palingenesis~l1 opposite~l1 cenogenesis~l1 x00000001 )
( cenogenesis~l1 opposite~l1 palingenesis~l1 x00000001 )
( outflow~l1 opposite~l1 inflow~l1 x00000001 )
( inflow~l1 opposite~l1 outflow~l1 x00000001 )
( efflux~l1 opposite~l1 influx~l1 x00000001 )
( influx~l1 opposite~l1 efflux~l1 x00000001 )
( inflation~l1 opposite~l1 disinflation~l1 x00000001 )
( disinflation~l1 opposite~l1 inflation~l1 x00000001 )
( evolution~l1 opposite~l1 devolution~l1 x00000001 )
( devolution~l1 opposite~l1 evolution~l1 x00000001 )
( catabolism~l1 opposite~l1 anabolism~l1 x00000001 )
( anabolism~l1 opposite~l1 catabolism~l1 x00000001 )
( unlisted_security~l1 opposite~l1 listed_security~l1 x00000001 )
( listed_security~l1 opposite~l1 unlisted_security~l1 x00000001 )
( cash~l1 opposite~l1 credit~l1 x00000001 )
( credit~l1 opposite~l1 cash~l1 x00000001 )
( loss~l1 opposite~l1 gain~l1 x00000001 )
( gain~l1 opposite~l1 loss~l1 x00000001 )
( nonpayment~l1 opposite~l1 payment~l1 x00000001 )
( payment~l1 opposite~l1 nonpayment~l1 x00000001 )
( outgo~l1 opposite~l1 income~l1 x00000001 )
( income~l1 opposite~l1 outgo~l1 x00000001 )
( pleurocarp~l1 opposite~l1 acrocarp~l1 x00000001 )
( acrocarp~l1 opposite~l1 pleurocarp~l1 x00000001 )
( direct_current~l1 opposite~l1 alternating_current~l1 x00000001 )
( alternating_current~l1 opposite~l1 direct_current~l1 x00000001 )
( repulsion~l1 opposite~l1 attraction~l1 x00000001 )
( attraction~l1 opposite~l1 repulsion~l1 x00000001 )
( wife~l1 opposite~l1 husband~l1 x00000001 )
( husband~l1 opposite~l1 wife~l1 x00000001 )
( volunteer~l1 opposite~l1 draftee~l1 x00000001 )
( draftee~l1 opposite~l1 volunteer~l1 x00000001 )
( general_agent~l1 opposite~l1 special_agent~l1 x00000001 )
( special_agent~l1 opposite~l1 general_agent~l1 x00000001 )
( uncle~l1 opposite~l1 aunt~l1 x00000001 )
( aunt~l1 opposite~l1 uncle~l1 x00000001 )
( thin_person~l1 opposite~l1 fat_person~l1 x00000001 )
( fat_person~l1 opposite~l1 thin_person~l1 x00000001 )
( square_shooter~l1 opposite~l1 liar~l1 x00000001 )
( liar~l1 opposite~l1 square_shooter~l1 x00000001 )
( specialist~l1 opposite~l1 generalist~l1 x00000001 )
( generalist~l1 opposite~l1 specialist~l1 x00000001 )
( boy~l1 opposite~l1 girl~l1 x00000001 )
( girl~l1 opposite~l1 boy~l1 x00000001 )
( smoker~l1 opposite~l1 nonsmoker~l1 x00000001 )
( nonsmoker~l1 opposite~l1 smoker~l1 x00000001 )
( sister~l1 opposite~l1 brother~l1 x00000001 )
( brother~l1 opposite~l1 sister~l1 x00000001 )
( serviceman~l1 opposite~l1 civilian~l1 x00000001 )
( civilian~l1 opposite~l1 serviceman~l1 x00000001 )
( cenobite~l1 opposite~l1 eremite~l1 x00000001 )
( eremite~l1 opposite~l1 cenobite~l1 x00000001 )
( queen~l1 opposite~l1 king~l1 x00000001 )
( king~l1 opposite~l1 queen~l1 x00000001 )
( plaintiff~l1 opposite~l1 defendant~l1 x00000001 )
( defendant~l1 opposite~l1 plaintiff~l1 x00000001 )
( mother~l1 opposite~l1 father~l1 x00000001 )
( father~l1 opposite~l1 mother~l1 x00000001 )
( nonmember~l1 opposite~l1 member x00000001 )
( member opposite~l1 nonmember~l1 x00000001 )
( loser~l1 opposite~l1 achiever~l1 x00000001 )
( achiever~l1 opposite~l1 loser~l1 x00000001 )
( Lord~l1 opposite~l1 Lady~l1 x00000001 )
( Lady~l1 opposite~l1 Lord~l1 x00000001 )
( liberator~l1 opposite~l1 captor~l1 x00000001 )
( captor~l1 opposite~l1 liberator~l1 x00000001 )
( layman~l1 opposite~l1 clergyman~l1 x00000001 )
( clergyman~l1 opposite~l1 layman~l1 x00000001 )
( hawk~l1 opposite~l1 dove~l1 x00000001 )
( dove~l1 opposite~l1 hawk~l1 x00000001 )
( foe~l1 opposite~l1 friend~l1 x00000001 )
( friend~l1 opposite~l1 foe~l1 x00000001 )
( elitist~l1 opposite~l1 egalitarian~l1 x00000001 )
( egalitarian~l1 opposite~l1 elitist~l1 x00000001 )
( descendant~l1 opposite~l1 ancestor~l1 x00000001 )
( ancestor~l1 opposite~l1 descendant~l1 x00000001 )
( debtor~l1 opposite~l1 creditor~l1 x00000001 )
( creditor~l1 opposite~l1 debtor~l1 x00000001 )
( juvenile~l1 opposite~l1 adult~l1 x00000001 )
( adult~l1 opposite~l1 juvenile~l1 x00000001 )
( eudemon~l1 opposite~l1 cacodemon~l1 x00000001 )
( cacodemon~l1 opposite~l1 eudemon~l1 x00000001 )
( territorial_waters~l1 opposite~l1 high_sea~l1 x00000001 )
( high_sea~l1 opposite~l1 territorial_waters~l1 x00000001 )
( descent~l1 opposite~l1 ascent~l1 x00000001 )
( ascent~l1 opposite~l1 descent~l1 x00000001 )
( disincentive~l1 opposite~l1 incentive~l1 x00000001 )
( incentive~l1 opposite~l1 disincentive~l1 x00000001 )
( urban_area~l1 opposite~l1 rural_area~l1 x00000001 )
( rural_area~l1 opposite~l1 urban_area~l1 x00000001 )
( perilune~l1 opposite~l1 apolune~l1 x00000001 )
( apolune~l1 opposite~l1 perilune~l1 x00000001 )
( periapsis~l1 opposite~l1 apoapsis~l1 x00000001 )
( apoapsis~l1 opposite~l1 periapsis~l1 x00000001 )
( antapex~l1 opposite~l1 apex~l1 x00000001 )
( apex~l1 opposite~l1 antapex~l1 x00000001 )
( flora~l1 opposite~l1 fauna~l1 x00000001 )
( fauna~l1 opposite~l1 flora~l1 x00000001 )
( socialism~l1 opposite~l1 capitalism~l1 x00000001 )
( capitalism~l1 opposite~l1 socialism~l1 x00000001 )
( non-market_economy~l1 opposite~l1 market_economy~l1 x00000001 )
( market_economy~l1 opposite~l1 non-market_economy~l1 x00000001 )
( nonalignment~l1 opposite~l1 alignment~l1 x00000001 )
( alignment~l1 opposite~l1 nonalignment~l1 x00000001 )
( laity~l1 opposite~l1 clergy~l1 x00000001 )
( clergy~l1 opposite~l1 laity~l1 x00000001 )
( defense~l1 opposite~l1 offense~l1 x00000001 )
( offense~l1 opposite~l1 defense~l1 x00000001 )
( defence~l1 opposite~l1 offence~l1 x00000001 )
( offence~l1 opposite~l1 defence~l1 x00000001 )
( prosecution~l1 opposite~l1 defense~l1 x00000001 )
( defense~l1 opposite~l1 prosecution~l1 x00000001 )
( uninitiate~l1 opposite~l1 initiate~l1 x00000001 )
( initiate~l1 opposite~l1 uninitiate~l1 x00000001 )
( timid~l1 opposite~l1 brave~l1 x00000001 )
( brave~l1 opposite~l1 timid~l1 x00000001 )
( young~l1 opposite~l1 aged~l1 x00000001 )
( aged~l1 opposite~l1 young~l1 x00000001 )
( varietal~l1 opposite~l1 generic~l1 x00000001 )
( generic~l1 opposite~l1 varietal~l1 x00000001 )
( whole_milk~l1 opposite~l1 skim_milk~l1 x00000001 )
( skim_milk~l1 opposite~l1 whole_milk~l1 x00000001 )
( cooking_apple~l1 opposite~l1 eating_apple~l1 x00000001 )
( eating_apple~l1 opposite~l1 cooking_apple~l1 x00000001 )
( ill_humor~l1 opposite~l1 good_humor~l1 x00000001 )
( good_humor~l1 opposite~l1 ill_humor~l1 x00000001 )
( misogyny~l1 opposite~l1 philogyny~l1 x00000001 )
( philogyny~l1 opposite~l1 misogyny~l1 x00000001 )
( discontentment~l1 opposite~l1 contentment~l1 x00000001 )
( contentment~l1 opposite~l1 discontentment~l1 x00000001 )
( cheerlessness~l1 opposite~l1 cheerfulness~l1 x00000001 )
( cheerfulness~l1 opposite~l1 cheerlessness~l1 x00000001 )
( sorrow~l1 opposite~l1 joy~l1 x00000001 )
( joy~l1 opposite~l1 sorrow~l1 x00000001 )
( sadness~l1 opposite~l1 happiness~l1 x00000001 )
( happiness~l1 opposite~l1 sadness~l1 x00000001 )
( confidence~l1 opposite~l1 diffidence~l1 x00000001 )
( diffidence~l1 opposite~l1 confidence~l1 x00000001 )
( fearlessness~l1 opposite~l1 fear~l1 x00000001 )
( fear~l1 opposite~l1 fearlessness~l1 x00000001 )
( gravity~l1 opposite~l1 levity~l1 x00000001 )
( levity~l1 opposite~l1 gravity~l1 x00000001 )
( humility~l1 opposite~l1 pride~l1 x00000001 )
( pride~l1 opposite~l1 humility~l1 x00000001 )
( ingratitude~l1 opposite~l1 gratitude~l1 x00000001 )
( gratitude~l1 opposite~l1 ingratitude~l1 x00000001 )
( pain~l1 opposite~l1 pleasure~l1 x00000001 )
( pleasure~l1 opposite~l1 pain~l1 x00000001 )
( defeat~l1 opposite~l1 victory~l1 x00000001 )
( victory~l1 opposite~l1 defeat~l1 x00000001 )
( levorotation~l1 opposite~l1 dextrorotation~l1 x00000001 )
( dextrorotation~l1 opposite~l1 levorotation~l1 x00000001 )
( flood_tide~l1 opposite~l1 ebbtide~l1 x00000001 )
( ebbtide~l1 opposite~l1 flood_tide~l1 x00000001 )
( low_tide~l1 opposite~l1 high_tide~l1 x00000001 )
( high_tide~l1 opposite~l1 low_tide~l1 x00000001 )
( ingress~l1 opposite~l1 egress~l1 x00000001 )
( egress~l1 opposite~l1 ingress~l1 x00000001 )
( live_birth~l1 opposite~l1 stillbirth~l1 x00000001 )
( stillbirth~l1 opposite~l1 live_birth~l1 x00000001 )
( ending~l1 opposite~l1 beginning~l1 x00000001 )
( beginning~l1 opposite~l1 ending~l1 x00000001 )
( answer~l1 opposite~l1 question~l1 x00000001 )
( question~l1 opposite~l1 answer~l1 x00000001 )
( continuant_consonant~l1 opposite~l1 stop_consonant~l1 x00000001 )
( stop_consonant~l1 opposite~l1 continuant_consonant~l1 x00000001 )
( consonant~l1 opposite~l1 vowel~l1 x00000001 )
( vowel~l1 opposite~l1 consonant~l1 x00000001 )
( polyphony~l1 opposite~l1 monophony~l1 x00000001 )
( monophony~l1 opposite~l1 polyphony~l1 x00000001 )
( old_style~l1 opposite~l1 modern~l1 x00000001 )
( modern~l1 opposite~l1 old_style~l1 x00000001 )
( proportional_font~l1 opposite~l1 fixed-width_font~l1 x00000001 )
( fixed-width_font~l1 opposite~l1 proportional_font~l1 x00000001 )
( Roman_numeral~l1 opposite~l1 Arabic_numeral~l1 x00000001 )
( Arabic_numeral~l1 opposite~l1 Roman_numeral~l1 x00000001 )
( falsehood~l1 opposite~l1 truth~l1 x00000001 )
( truth~l1 opposite~l1 falsehood~l1 x00000001 )
( syncategorem~l1 opposite~l1 categorem~l1 x00000001 )
( categorem~l1 opposite~l1 syncategorem~l1 x00000001 )
( universal~l1 opposite~l1 particular~l1 x00000001 )
( particular~l1 opposite~l1 universal~l1 x00000001 )
( noninterference~l1 opposite~l1 interference~l1 x00000001 )
( interference~l1 opposite~l1 noninterference~l1 x00000001 )
( inhospitality~l1 opposite~l1 hospitality~l1 x00000001 )
( hospitality~l1 opposite~l1 inhospitality~l1 x00000001 )
( software~l1 opposite~l1 hardware~l1 x00000001 )
( hardware~l1 opposite~l1 software~l1 x00000001 )
( misconstruction~l1 opposite~l1 construction~l1 x00000001 )
( construction~l1 opposite~l1 misconstruction~l1 x00000001 )
( oblique~l1 opposite~l1 nominative~l1 x00000001 )
( nominative~l1 opposite~l1 oblique~l1 x00000001 )
( synonym~l1 opposite~l1 antonym~l1 x00000001 )
( antonym~l1 opposite~l1 synonym~l1 x00000001 )
( e-mail~l1 opposite~l1 snail_mail~l1 x00000001 )
( snail_mail~l1 opposite~l1 e-mail~l1 x00000001 )
( email~l1 opposite~l1 snail_mail~l1 x00000001 )
( snail_mail~l1 opposite~l1 email~l1 x00000001 )
( theism~l1 opposite~l1 atheism~l1 x00000001 )
( atheism~l1 opposite~l1 theism~l1 x00000001 )
( nonconformity~l1 opposite~l1 conformity~l1 x00000001 )
( conformity~l1 opposite~l1 nonconformity~l1 x00000001 )
( nonconformism~l1 opposite~l1 conformism~l1 x00000001 )
( conformism~l1 opposite~l1 nonconformism~l1 x00000001 )
( impartiality~l1 opposite~l1 partiality~l1 x00000001 )
( partiality~l1 opposite~l1 impartiality~l1 x00000001 )
( Romanticism~l1 opposite~l1 classicism~l1 x00000001 )
( classicism~l1 opposite~l1 Romanticism~l1 x00000001 )
( corpuscular_theory~l1 opposite~l1 wave_theory~l1 x00000001 )
( wave_theory~l1 opposite~l1 corpuscular_theory~l1 x00000001 )
( holism~l1 opposite~l1 atomism~l1 x00000001 )
( atomism~l1 opposite~l1 holism~l1 x00000001 )
( dysgenics~l1 opposite~l1 eugenics~l1 x00000001 )
( eugenics~l1 opposite~l1 dysgenics~l1 x00000001 )
( open_interval~l1 opposite~l1 closed_interval~l1 x00000001 )
( closed_interval~l1 opposite~l1 open_interval~l1 x00000001 )
( unbelief~l1 opposite~l1 belief~l1 x00000001 )
( belief~l1 opposite~l1 unbelief~l1 x00000001 )
( reality_principle~l1 opposite~l1 pleasure_principle~l1 x00000001 )
( pleasure_principle~l1 opposite~l1 reality_principle~l1 x00000001 )
( divergency~l1 opposite~l1 convergency~l1 x00000001 )
( convergency~l1 opposite~l1 divergency~l1 x00000001 )
( divergent_thinking~l1 opposite~l1 convergent_thinking~l1 x00000001 )
( convergent_thinking~l1 opposite~l1 divergent_thinking~l1 x00000001 )
( synthesis~l1 opposite~l1 analysis~l1 x00000001 )
( analysis~l1 opposite~l1 synthesis~l1 x00000001 )
( uncertainty~l1 opposite~l1 certainty~l1 x00000001 )
( certainty~l1 opposite~l1 uncertainty~l1 x00000001 )
( incognizance~l1 opposite~l1 cognizance~l1 x00000001 )
( cognizance~l1 opposite~l1 incognizance~l1 x00000001 )
( kinanesthesia~l1 opposite~l1 kinesthesia~l1 x00000001 )
( kinesthesia~l1 opposite~l1 kinanesthesia~l1 x00000001 )
( uncreativeness~l1 opposite~l1 creativeness~l1 x00000001 )
( creativeness~l1 opposite~l1 uncreativeness~l1 x00000001 )
( illiteracy~l1 opposite~l1 literacy~l1 x00000001 )
( literacy~l1 opposite~l1 illiteracy~l1 x00000001 )
( incapability~l1 opposite~l1 capability~l1 x00000001 )
( capability~l1 opposite~l1 incapability~l1 x00000001 )
( Hell~l1 opposite~l1 Heaven~l1 x00000001 )
( Heaven~l1 opposite~l1 Hell~l1 x00000001 )
( receptor~l1 opposite~l1 effector~l1 x00000001 )
( effector~l1 opposite~l1 receptor~l1 x00000001 )
( flexor~l1 opposite~l1 extensor~l1 x00000001 )
( extensor~l1 opposite~l1 flexor~l1 x00000001 )
( finiteness~l1 opposite~l1 infiniteness~l1 x00000001 )
( infiniteness~l1 opposite~l1 finiteness~l1 x00000001 )
( inefficacy~l1 opposite~l1 efficacy~l1 x00000001 )
( efficacy~l1 opposite~l1 inefficacy~l1 x00000001 )
( powerlessness~l1 opposite~l1 power~l1 x00000001 )
( power~l1 opposite~l1 powerlessness~l1 x00000001 )
( purposelessness~l1 opposite~l1 purposefulness~l1 x00000001 )
( purposefulness~l1 opposite~l1 purposelessness~l1 x00000001 )
( dispensability~l1 opposite~l1 indispensability~l1 x00000001 )
( indispensability~l1 opposite~l1 dispensability~l1 x00000001 )
( inessentiality~l1 opposite~l1 essentiality~l1 x00000001 )
( essentiality~l1 opposite~l1 inessentiality~l1 x00000001 )
( unprofitability~l1 opposite~l1 profitability~l1 x00000001 )
( profitability~l1 opposite~l1 unprofitability~l1 x00000001 )
( inexpediency~l1 opposite~l1 expediency~l1 x00000001 )
( expediency~l1 opposite~l1 inexpediency~l1 x00000001 )
( penalty~l1 opposite~l1 reward~l1 x00000001 )
( reward~l1 opposite~l1 penalty~l1 x00000001 )
( unpropitiousness~l1 opposite~l1 propitiousness~l1 x00000001 )
( propitiousness~l1 opposite~l1 unpropitiousness~l1 x00000001 )
( unfavorableness~l1 opposite~l1 favorableness~l1 x00000001 )
( favorableness~l1 opposite~l1 unfavorableness~l1 x00000001 )
( infeasibility~l1 opposite~l1 feasibility~l1 x00000001 )
( feasibility~l1 opposite~l1 infeasibility~l1 x00000001 )
( impracticability~l1 opposite~l1 practicability~l1 x00000001 )
( practicability~l1 opposite~l1 impracticability~l1 x00000001 )
( inutility~l1 opposite~l1 utility~l1 x00000001 )
( utility~l1 opposite~l1 inutility~l1 x00000001 )
( uselessness~l1 opposite~l1 usefulness~l1 x00000001 )
( usefulness~l1 opposite~l1 uselessness~l1 x00000001 )
( undesirability~l1 opposite~l1 desirability~l1 x00000001 )
( desirability~l1 opposite~l1 undesirability~l1 x00000001 )
( demerit~l1 opposite~l1 merit~l1 x00000001 )
( merit~l1 opposite~l1 demerit~l1 x00000001 )
( lowness~l1 opposite~l1 highness~l1 x00000001 )
( highness~l1 opposite~l1 lowness~l1 x00000001 )
( narrowness~l1 opposite~l1 wideness~l1 x00000001 )
( wideness~l1 opposite~l1 narrowness~l1 x00000001 )
( shallowness~l1 opposite~l1 deepness~l1 x00000001 )
( deepness~l1 opposite~l1 shallowness~l1 x00000001 )
( immoderation~l1 opposite~l1 moderation~l1 x00000001 )
( moderation~l1 opposite~l1 immoderation~l1 x00000001 )
( scarcity~l1 opposite~l1 abundance~l1 x00000001 )
( abundance~l1 opposite~l1 scarcity~l1 x00000001 )
( inadequacy~l1 opposite~l1 adequacy~l1 x00000001 )
( adequacy~l1 opposite~l1 inadequacy~l1 x00000001 )
( smallness~l1 opposite~l1 largeness~l1 x00000001 )
( largeness~l1 opposite~l1 smallness~l1 x00000001 )
( littleness~l1 opposite~l1 bigness~l1 x00000001 )
( bigness~l1 opposite~l1 littleness~l1 x00000001 )
( superficiality~l1 opposite~l1 profundity~l1 x00000001 )
( profundity~l1 opposite~l1 superficiality~l1 x00000001 )
( nearness~l1 opposite~l1 farness~l1 x00000001 )
( farness~l1 opposite~l1 nearness~l1 x00000001 )
( gradualness~l1 opposite~l1 abruptness~l1 x00000001 )
( abruptness~l1 opposite~l1 gradualness~l1 x00000001 )
( asymmetry~l1 opposite~l1 symmetry~l1 x00000001 )
( symmetry~l1 opposite~l1 asymmetry~l1 x00000001 )
( untimeliness~l1 opposite~l1 timeliness~l1 x00000001 )
( timeliness~l1 opposite~l1 untimeliness~l1 x00000001 )
( posteriority~l1 opposite~l1 priority~l1 x00000001 )
( priority~l1 opposite~l1 posteriority~l1 x00000001 )
( lightness~l1 opposite~l1 heaviness~l1 x00000001 )
( heaviness~l1 opposite~l1 lightness~l1 x00000001 )
( inflexibility~l1 opposite~l1 flexibility~l1 x00000001 )
( flexibility~l1 opposite~l1 inflexibility~l1 x00000001 )
( inaudibility~l1 opposite~l1 audibility~l1 x00000001 )
( audibility~l1 opposite~l1 inaudibility~l1 x00000001 )
( invisibility~l1 opposite~l1 visibility~l1 x00000001 )
( visibility~l1 opposite~l1 invisibility~l1 x00000001 )
( hotness~l1 opposite~l1 coldness~l1 x00000001 )
( coldness~l1 opposite~l1 hotness~l1 x00000001 )
( femaleness~l1 opposite~l1 maleness~l1 x00000001 )
( maleness~l1 opposite~l1 femaleness~l1 x00000001 )
( leanness~l1 opposite~l1 fatness~l1 x00000001 )
( fatness~l1 opposite~l1 leanness~l1 x00000001 )
( indigestibility~l1 opposite~l1 digestibility~l1 x00000001 )
( digestibility~l1 opposite~l1 indigestibility~l1 x00000001 )
( unpalatability~l1 opposite~l1 palatability~l1 x00000001 )
( palatability~l1 opposite~l1 unpalatability~l1 x00000001 )
( softness~l1 opposite~l1 loudness~l1 x00000001 )
( loudness~l1 opposite~l1 softness~l1 x00000001 )
( low_pitch~l1 opposite~l1 high_pitch~l1 x00000001 )
( high_pitch~l1 opposite~l1 low_pitch~l1 x00000001 )
( achromatic_color~l1 opposite~l1 chromatic_color~l1 x00000001 )
( chromatic_color~l1 opposite~l1 achromatic_color~l1 x00000001 )
( colorlessness~l1 opposite~l1 color~l1 x00000001 )
( color~l1 opposite~l1 colorlessness~l1 x00000001 )
( roughness~l1 opposite~l1 smoothness~l1 x00000001 )
( smoothness~l1 opposite~l1 roughness~l1 x00000001 )
( imperviousness~l1 opposite~l1 perviousness~l1 x00000001 )
( perviousness~l1 opposite~l1 imperviousness~l1 x00000001 )
( impermeability~l1 opposite~l1 permeability~l1 x00000001 )
( permeability~l1 opposite~l1 impermeability~l1 x00000001 )
( solidity~l1 opposite~l1 porosity~l1 x00000001 )
( porosity~l1 opposite~l1 solidity~l1 x00000001 )
( reduced_instruction_set_computer~l1 opposite~l1 complex_instruction_set_computer~l1 x00000001 )
( complex_instruction_set_computer~l1 opposite~l1 reduced_instruction_set_computer~l1 x00000001 )
( RISC~l1 opposite~l1 CISC~l1 x00000001 )
( CISC~l1 opposite~l1 RISC~l1 x00000001 )
( mediacy~l1 opposite~l1 immediacy~l1 x00000001 )
( immediacy~l1 opposite~l1 mediacy~l1 x00000001 )
( indirectness~l1 opposite~l1 directness~l1 x00000001 )
( directness~l1 opposite~l1 indirectness~l1 x00000001 )
( discourtesy~l1 opposite~l1 courtesy~l1 x00000001 )
( courtesy~l1 opposite~l1 discourtesy~l1 x00000001 )
( informality~l1 opposite~l1 formality~l1 x00000001 )
( formality~l1 opposite~l1 informality~l1 x00000001 )
( wildness~l1 opposite~l1 tameness~l1 x00000001 )
( tameness~l1 opposite~l1 wildness~l1 x00000001 )
( intractability~l1 opposite~l1 tractability~l1 x00000001 )
( tractability~l1 opposite~l1 intractability~l1 x00000001 )
( discomposure~l1 opposite~l1 composure~l1 x00000001 )
( composure~l1 opposite~l1 discomposure~l1 x00000001 )
( immodesty~l1 opposite~l1 modesty~l1 x00000001 )
( modesty~l1 opposite~l1 immodesty~l1 x00000001 )
( indecorum~l1 opposite~l1 decorum~l1 x00000001 )
( decorum~l1 opposite~l1 indecorum~l1 x00000001 )
( political_incorrectness~l1 opposite~l1 political_correctness~l1 x00000001 )
( political_correctness~l1 opposite~l1 political_incorrectness~l1 x00000001 )
( impropriety~l1 opposite~l1 propriety~l1 x00000001 )
( propriety~l1 opposite~l1 impropriety~l1 x00000001 )
( improperness~l1 opposite~l1 properness~l1 x00000001 )
( properness~l1 opposite~l1 improperness~l1 x00000001 )
( improvidence~l1 opposite~l1 providence~l1 x00000001 )
( providence~l1 opposite~l1 improvidence~l1 x00000001 )
( folly~l1 opposite~l1 wisdom~l1 x00000001 )
( wisdom~l1 opposite~l1 folly~l1 x00000001 )
( humility~l1 opposite~l1 conceit~l1 x00000001 )
( conceit~l1 opposite~l1 humility~l1 x00000001 )
( naivete~l1 opposite~l1 sophistication~l1 x00000001 )
( sophistication~l1 opposite~l1 naivete~l1 x00000001 )
( disloyalty~l1 opposite~l1 loyalty~l1 x00000001 )
( loyalty~l1 opposite~l1 disloyalty~l1 x00000001 )
( infidelity~l1 opposite~l1 fidelity~l1 x00000001 )
( fidelity~l1 opposite~l1 infidelity~l1 x00000001 )
( dishonesty~l1 opposite~l1 honesty~l1 x00000001 )
( honesty~l1 opposite~l1 dishonesty~l1 x00000001 )
( disreputability~l1 opposite~l1 reputability~l1 x00000001 )
( reputability~l1 opposite~l1 disreputability~l1 x00000001 )
( dishonorableness~l1 opposite~l1 honorableness~l1 x00000001 )
( honorableness~l1 opposite~l1 dishonorableness~l1 x00000001 )
( indecision~l1 opposite~l1 decision~l1 x00000001 )
( decision~l1 opposite~l1 indecision~l1 x00000001 )
( irresoluteness~l1 opposite~l1 resoluteness~l1 x00000001 )
( resoluteness~l1 opposite~l1 irresoluteness~l1 x00000001 )
( gutlessness~l1 opposite~l1 gutsiness~l1 x00000001 )
( gutsiness~l1 opposite~l1 gutlessness~l1 x00000001 )
( timidity~l1 opposite~l1 boldness~l1 x00000001 )
( boldness~l1 opposite~l1 timidity~l1 x00000001 )
( cowardice~l1 opposite~l1 courage~l1 x00000001 )
( courage~l1 opposite~l1 cowardice~l1 x00000001 )
( incurability~l1 opposite~l1 curability~l1 x00000001 )
( curability~l1 opposite~l1 incurability~l1 x00000001 )
( unholiness~l1 opposite~l1 holiness~l1 x00000001 )
( holiness~l1 opposite~l1 unholiness~l1 x00000001 )
( injustice~l1 opposite~l1 justice~l1 x00000001 )
( justice~l1 opposite~l1 injustice~l1 x00000001 )
( inconsideration~l1 opposite~l1 consideration~l1 x00000001 )
( consideration~l1 opposite~l1 inconsideration~l1 x00000001 )
( thoughtlessness~l1 opposite~l1 thoughtfulness~l1 x00000001 )
( thoughtfulness~l1 opposite~l1 thoughtlessness~l1 x00000001 )
( insensitivity~l1 opposite~l1 sensitivity~l1 x00000001 )
( sensitivity~l1 opposite~l1 insensitivity~l1 x00000001 )
( malignity~l1 opposite~l1 benignity~l1 x00000001 )
( benignity~l1 opposite~l1 malignity~l1 x00000001 )
( malignancy~l1 opposite~l1 benignancy~l1 x00000001 )
( benignancy~l1 opposite~l1 malignancy~l1 x00000001 )
( inequity~l1 opposite~l1 equity~l1 x00000001 )
( equity~l1 opposite~l1 inequity~l1 x00000001 )
( egoism~l1 opposite~l1 altruism~l1 x00000001 )
( altruism~l1 opposite~l1 egoism~l1 x00000001 )
( illiberality~l1 opposite~l1 liberality~l1 x00000001 )
( liberality~l1 opposite~l1 illiberality~l1 x00000001 )
( stinginess~l1 opposite~l1 generosity~l1 x00000001 )
( generosity~l1 opposite~l1 stinginess~l1 x00000001 )
( mercilessness~l1 opposite~l1 mercifulness~l1 x00000001 )
( mercifulness~l1 opposite~l1 mercilessness~l1 x00000001 )
( impiety~l1 opposite~l1 piety~l1 x00000001 )
( piety~l1 opposite~l1 impiety~l1 x00000001 )
( polysemy~l1 opposite~l1 monosemy~l1 x00000001 )
( monosemy~l1 opposite~l1 polysemy~l1 x00000001 )
( ambiguity~l1 opposite~l1 unambiguity~l1 x00000001 )
( unambiguity~l1 opposite~l1 ambiguity~l1 x00000001 )
( unclearness~l1 opposite~l1 clearness~l1 x00000001 )
( clearness~l1 opposite~l1 unclearness~l1 x00000001 )
( obscurity~l1 opposite~l1 clarity~l1 x00000001 )
( clarity~l1 opposite~l1 obscurity~l1 x00000001 )
( illegibility~l1 opposite~l1 legibility~l1 x00000001 )
( legibility~l1 opposite~l1 illegibility~l1 x00000001 )
( imprecision~l1 opposite~l1 precision~l1 x00000001 )
( precision~l1 opposite~l1 imprecision~l1 x00000001 )
( inexactness~l1 opposite~l1 exactness~l1 x00000001 )
( exactness~l1 opposite~l1 inexactness~l1 x00000001 )
( uncommonness~l1 opposite~l1 commonness~l1 x00000001 )
( commonness~l1 opposite~l1 uncommonness~l1 x00000001 )
( unacceptability~l1 opposite~l1 acceptability~l1 x00000001 )
( acceptability~l1 opposite~l1 unacceptability~l1 x00000001 )
( insalubrity~l1 opposite~l1 salubrity~l1 x00000001 )
( salubrity~l1 opposite~l1 insalubrity~l1 x00000001 )
( illogicality~l1 opposite~l1 logicality~l1 x00000001 )
( logicality~l1 opposite~l1 illogicality~l1 x00000001 )
( implausibility~l1 opposite~l1 plausibility~l1 x00000001 )
( plausibility~l1 opposite~l1 implausibility~l1 x00000001 )
( incredibility~l1 opposite~l1 credibility~l1 x00000001 )
( credibility~l1 opposite~l1 incredibility~l1 x00000001 )
( looseness~l1 opposite~l1 fixedness~l1 x00000001 )
( fixedness~l1 opposite~l1 looseness~l1 x00000001 )
( immovability~l1 opposite~l1 movability~l1 x00000001 )
( movability~l1 opposite~l1 immovability~l1 x00000001 )
( complexity~l1 opposite~l1 simplicity~l1 x00000001 )
( simplicity~l1 opposite~l1 complexity~l1 x00000001 )
( insubstantiality~l1 opposite~l1 substantiality~l1 x00000001 )
( substantiality~l1 opposite~l1 insubstantiality~l1 x00000001 )
( incorporeality~l1 opposite~l1 corporeality~l1 x00000001 )
( corporeality~l1 opposite~l1 incorporeality~l1 x00000001 )
( intangibility~l1 opposite~l1 tangibility~l1 x00000001 )
( tangibility~l1 opposite~l1 intangibility~l1 x00000001 )
( impalpability~l1 opposite~l1 palpability~l1 x00000001 )
( palpability~l1 opposite~l1 impalpability~l1 x00000001 )
( counterfactuality~l1 opposite~l1 factuality~l1 x00000001 )
( factuality~l1 opposite~l1 counterfactuality~l1 x00000001 )
( unlikeliness~l1 opposite~l1 likeliness~l1 x00000001 )
( likeliness~l1 opposite~l1 unlikeliness~l1 x00000001 )
( improbability~l1 opposite~l1 probability~l1 x00000001 )
( probability~l1 opposite~l1 improbability~l1 x00000001 )
( heterogeneity~l1 opposite~l1 homogeneity~l1 x00000001 )
( homogeneity~l1 opposite~l1 heterogeneity~l1 x00000001 )
( nonuniformity~l1 opposite~l1 uniformity~l1 x00000001 )
( uniformity~l1 opposite~l1 nonuniformity~l1 x00000001 )
( unlikeness~l1 opposite~l1 likeness~l1 x00000001 )
( likeness~l1 opposite~l1 unlikeness~l1 x00000001 )
( immutability~l1 opposite~l1 mutability~l1 x00000001 )
( mutability~l1 opposite~l1 immutability~l1 x00000001 )
( unexchangeability~l1 opposite~l1 exchangeability~l1 x00000001 )
( exchangeability~l1 opposite~l1 unexchangeability~l1 x00000001 )
( constancy~l1 opposite~l1 inconstancy~l1 x00000001 )
( inconstancy~l1 opposite~l1 constancy~l1 x00000001 )
( changelessness~l1 opposite~l1 changeableness~l1 x00000001 )
( changeableness~l1 opposite~l1 changelessness~l1 x00000001 )
( inferiority~l1 opposite~l1 superiority~l1 x00000001 )
( superiority~l1 opposite~l1 inferiority~l1 x00000001 )
( low_quality~l1 opposite~l1 high_quality~l1 x00000001 )
( high_quality~l1 opposite~l1 low_quality~l1 x00000001 )
( unavailability~l1 opposite~l1 availability~l1 x00000001 )
( availability~l1 opposite~l1 unavailability~l1 x00000001 )
( infelicity~l1 opposite~l1 felicity~l1 x00000001 )
( felicity~l1 opposite~l1 infelicity~l1 x00000001 )
( inaptness~l1 opposite~l1 aptness~l1 x00000001 )
( aptness~l1 opposite~l1 inaptness~l1 x00000001 )
( unsuitability~l1 opposite~l1 suitability~l1 x00000001 )
( suitability~l1 opposite~l1 unsuitability~l1 x00000001 )
( incongruity~l1 opposite~l1 congruity~l1 x00000001 )
( congruity~l1 opposite~l1 incongruity~l1 x00000001 )
( difficulty~l1 opposite~l1 ease~l1 x00000001 )
( ease~l1 opposite~l1 difficulty~l1 x00000001 )
( dullness~l1 opposite~l1 sharpness~l1 x00000001 )
( sharpness~l1 opposite~l1 dullness~l1 x00000001 )
( softness~l1 opposite~l1 sharpness~l1 x00000001 )
( sharpness~l1 opposite~l1 softness~l1 x00000001 )
( opacity~l1 opposite~l1 clarity~l1 x00000001 )
( clarity~l1 opposite~l1 opacity~l1 x00000001 )
( undependability~l1 opposite~l1 dependability~l1 x00000001 )
( dependability~l1 opposite~l1 undependability~l1 x00000001 )
( unreliability~l1 opposite~l1 reliability~l1 x00000001 )
( reliability~l1 opposite~l1 unreliability~l1 x00000001 )
( unreliableness~l1 opposite~l1 reliableness~l1 x00000001 )
( reliableness~l1 opposite~l1 unreliableness~l1 x00000001 )
( irresponsibility~l1 opposite~l1 responsibility~l1 x00000001 )
( responsibility~l1 opposite~l1 irresponsibility~l1 x00000001 )
( untrustiness~l1 opposite~l1 trustiness~l1 x00000001 )
( trustiness~l1 opposite~l1 untrustiness~l1 x00000001 )
( heedlessness~l1 opposite~l1 heedfulness~l1 x00000001 )
( heedfulness~l1 opposite~l1 heedlessness~l1 x00000001 )
( unwariness~l1 opposite~l1 wariness~l1 x00000001 )
( wariness~l1 opposite~l1 unwariness~l1 x00000001 )
( incaution~l1 opposite~l1 caution~l1 x00000001 )
( caution~l1 opposite~l1 incaution~l1 x00000001 )
( unneighborliness~l1 opposite~l1 neighborliness~l1 x00000001 )
( neighborliness~l1 opposite~l1 unneighborliness~l1 x00000001 )
( closeness~l1 opposite~l1 openness~l1 x00000001 )
( openness~l1 opposite~l1 closeness~l1 x00000001 )
( unsociability~l1 opposite~l1 sociability~l1 x00000001 )
( sociability~l1 opposite~l1 unsociability~l1 x00000001 )
( frivolity~l1 opposite~l1 seriousness~l1 x00000001 )
( seriousness~l1 opposite~l1 frivolity~l1 x00000001 )
( unwillingness~l1 opposite~l1 willingness~l1 x00000001 )
( willingness~l1 opposite~l1 unwillingness~l1 x00000001 )
( impatience~l1 opposite~l1 patience~l1 x00000001 )
( patience~l1 opposite~l1 impatience~l1 x00000001 )
( unemotionality~l1 opposite~l1 emotionality~l1 x00000001 )
( emotionality~l1 opposite~l1 unemotionality~l1 x00000001 )
( voltaic_cell~l1 opposite~l1 electrolytic_cell~l1 x00000001 )
( electrolytic_cell~l1 opposite~l1 voltaic_cell~l1 x00000001 )
( volatile_storage~l1 opposite~l1 nonvolatile_storage~l1 x00000001 )
( nonvolatile_storage~l1 opposite~l1 volatile_storage~l1 x00000001 )
( undergarment~l1 opposite~l1 overgarment~l1 x00000001 )
( overgarment~l1 opposite~l1 undergarment~l1 x00000001 )
( surface_ship~l1 opposite~l1 submersible~l1 x00000001 )
( submersible~l1 opposite~l1 surface_ship~l1 x00000001 )
( stator~l1 opposite~l1 rotor~l1 x00000001 )
( rotor~l1 opposite~l1 stator~l1 x00000001 )
( smart_bomb~l1 opposite~l1 dumb_bomb~l1 x00000001 )
( dumb_bomb~l1 opposite~l1 smart_bomb~l1 x00000001 )
( prescription_drug~l1 opposite~l1 over-the-counter_drug~l1 x00000001 )
( over-the-counter_drug~l1 opposite~l1 prescription_drug~l1 x00000001 )
( outfield~l1 opposite~l1 infield~l1 x00000001 )
( infield~l1 opposite~l1 outfield~l1 x00000001 )
( generic_drug~l1 opposite~l1 brand-name_drug~l1 x00000001 )
( brand-name_drug~l1 opposite~l1 generic_drug~l1 x00000001 )
( low_relief~l1 opposite~l1 high_relief~l1 x00000001 )
( high_relief~l1 opposite~l1 low_relief~l1 x00000001 )
( even-toed_ungulate~l1 opposite~l1 odd-toed_ungulate~l1 x00000001 )
( odd-toed_ungulate~l1 opposite~l1 even-toed_ungulate~l1 x00000001 )
( diapsid~l1 opposite~l1 anapsid~l1 x00000001 )
( anapsid~l1 opposite~l1 diapsid~l1 x00000001 )
( carinate~l1 opposite~l1 ratite~l1 x00000001 )
( ratite~l1 opposite~l1 carinate~l1 x00000001 )
( non-engagement~l1 opposite~l1 engagement~l1 x00000001 )
( engagement~l1 opposite~l1 non-engagement~l1 x00000001 )
( non-involvement~l1 opposite~l1 involvement~l1 x00000001 )
( involvement~l1 opposite~l1 non-involvement~l1 x00000001 )
( assembly~l1 opposite~l1 disassembly~l1 x00000001 )
( disassembly~l1 opposite~l1 assembly~l1 x00000001 )
( disservice~l1 opposite~l1 service~l1 x00000001 )
( service~l1 opposite~l1 disservice~l1 x00000001 )
( compliance~l1 opposite~l1 noncompliance~l1 x00000001 )
( noncompliance~l1 opposite~l1 compliance~l1 x00000001 )
( integration~l1 opposite~l1 segregation~l1 x00000001 )
( segregation~l1 opposite~l1 integration~l1 x00000001 )
( acquittal~l1 opposite~l1 conviction~l1 x00000001 )
( conviction~l1 opposite~l1 acquittal~l1 x00000001 )
( judgment_in_rem~l1 opposite~l1 judgment_in_personam~l1 x00000001 )
( judgment_in_personam~l1 opposite~l1 judgment_in_rem~l1 x00000001 )
( destabilisation~l1 opposite~l1 stabilisation~l1 x00000001 )
( stabilisation~l1 opposite~l1 destabilisation~l1 x00000001 )
( demobilization~l1 opposite~l1 mobilization~l1 x00000001 )
( mobilization~l1 opposite~l1 demobilization~l1 x00000001 )
( disarming~l1 opposite~l1 arming~l1 x00000001 )
( arming~l1 opposite~l1 disarming~l1 x00000001 )
( disarmament~l1 opposite~l1 armament~l1 x00000001 )
( armament~l1 opposite~l1 disarmament~l1 x00000001 )
( decriminalisation~l1 opposite~l1 criminalisation~l1 x00000001 )
( criminalisation~l1 opposite~l1 decriminalisation~l1 x00000001 )
( discontinuance~l1 opposite~l1 continuance~l1 x00000001 )
( continuance~l1 opposite~l1 discontinuance~l1 x00000001 )
( homeopathy~l1 opposite~l1 allopathy~l1 x00000001 )
( allopathy~l1 opposite~l1 homeopathy~l1 x00000001 )
( softball~l1 opposite~l1 hardball~l1 x00000001 )
( hardball~l1 opposite~l1 softball~l1 x00000001 )
( disunion~l1 opposite~l1 union~l1 x00000001 )
( union~l1 opposite~l1 disunion~l1 x00000001 )
( detribalisation~l1 opposite~l1 tribalisation~l1 x00000001 )
( tribalisation~l1 opposite~l1 detribalisation~l1 x00000001 )
( expansion~l1 opposite~l1 contraction~l1 x00000001 )
( contraction~l1 opposite~l1 expansion~l1 x00000001 )
( advance~l1 opposite~l1 retreat~l1 x00000001 )
( retreat~l1 opposite~l1 advance~l1 x00000001 )
( start~l1 opposite~l1 finish~l1 x00000001 )
( finish~l1 opposite~l1 start~l1 x00000001 )
( failing~l1 opposite~l1 passing~l1 x00000001 )
( passing~l1 opposite~l1 failing~l1 x00000001 )
( all~l1 opposite~l1 nothing~l1 x00000001 )
( nothing~l1 opposite~l1 all~l1 x00000001 )
( before~l1 opposite~l1 after~l1 x00000001 )
( after~l1 opposite~l1 before~l1 x00000001 )
( create~l1 opposite~l1 destroy~l1 x00000001 )
( destroy~l1 opposite~l1 create~l1 x00000001 )
( happy~l1 opposite~l1 sad~l1 x00000001 )
( sad~l1 opposite~l1 happy~l1 x00000001 )
( in~l1 opposite~l1 out~l1 x00000001 )
( out~l1 opposite~l1 in~l1 x00000001 )
( loud~l1 opposite~l1 quiet~l1 x00000001 )
( quiet~l1 opposite~l1 loud~l1 x00000001 )
( neat~l1 opposite~l1 messy~l1 x00000001 )
( messy~l1 opposite~l1 neat~l1 x00000001 )
( over~l1 opposite~l1 under~l1 x00000001 )
( under~l1 opposite~l1 over~l1 x00000001 )
( real~l1 opposite~l1 fake~l1 x00000001 )
( fake~l1 opposite~l1 real~l1 x00000001 )
( right-side-up~l1 opposite~l1 upside-down~l1 x00000001 )
( upside-down~l1 opposite~l1 right-side-up~l1 x00000001 )
( tough~l1 opposite~l1 easy~l1 x00000001 )
( easy~l1 opposite~l1 tough~l1 x00000001 )
( ancient~l1 opposite~l1 modern~l1 x00000001 )
( modern~l1 opposite~l1 ancient~l1 x00000001 )
( every~l1 opposite~l1 none~l1 x00000001 )
( none~l1 opposite~l1 every~l1 x00000001 )
( dumb~l1 opposite~l1 smart~l1 x00000001 )
( smart~l1 opposite~l1 dumb~l1 x00000001 )
( crazy~l1 opposite~l1 sane~l1 x00000001 )
( sane~l1 opposite~l1 crazy~l1 x00000001 )
( calf~l1 child~l1 cow~l1 x00000001 )
( puppy~l1 child~l1 dog~l1 x00000001 )
( kitten~l1 child~l1 cat~l1 x00000001 )
( hatchling~l1 child~l1 alligator~l1 x00000001 )
( cub~l1 child~l1 bear~l1 x00000001 )
( larva~l1 child~l1 bee~l1 x00000001 )
( larva~l1 child~l1 insect~l1 x00000001 )
( chick~l1 child~l1 bird~l1 x00000001 )
( hatchling~l1 child~l1 bird~l1 x00000001 )
( chick~l1 child~l1 chicken~l1 x00000001 )
( hatchling~l1 child~l1 chicken~l1 x00000001 )
( piglet~l1 child~l1 boar~l1 x00000001 )
( piglet~l1 child~l1 pig~l1 x00000001 )
( caterpillar~l1 child~l1 butterfly~l1 x00000001 )
( fawn~l1 child~l1 deer~l1 x00000001 )
( colt~l1 child~l1 donkey~l1 x00000001 )
( colt~l1 child~l1 horse~l1 x00000001 )
( foal~l1 child~l1 donkey~l1 x00000001 )
( foal~l1 child~l1 horse~l1 x00000001 )
( duckling~l1 child~l1 duck~l1 x00000001 )
( eaglet~l1 child~l1 eagle~l1 x00000001 )
( maggot~l1 child~l1 fly~l1 x00000001 )
( kid~l1 child~l1 goat~l1 x00000001 )
( gosling~l1 child~l1 goose~l1 x00000001 )
( baby~l1 child~l1 human~l1 x00000001 )
( infant~l1 child~l1 human~l1 x00000001 )
( toddler~l1 child~l1 human~l1 x00000001 )
( baby~l1 child~l1 person~l1 x00000001 )
( infant~l1 child~l1 person~l1 x00000001 )
( toddler~l1 child~l1 person~l1 x00000001 )
( joey~l1 child~l1 koala~l1 x00000001 )
( joey~l1 child~l1 kangaroo~l1 x00000001 )
( cub~l1 child~l1 tiger~l1 x00000001 )
( cub~l1 child~l1 leopard~l1 x00000001 )
( cub~l1 child~l1 lion~l1 x00000001 )
( bunny~l1 child~l1 rabbit~l1 x00000001 )
( lamb~l1 child~l1 sheep~l1 x00000001 )
( larva~l1 child~l1 termite~l1 x00000001 )
( tadpole~l1 child~l1 toad~l1 x00000001 )
( larva~l1 child~l1 wasp~l1 x00000001 )
( boar~l1 male~l1 bear~l1 x00000001 )
( sow~l1 female~l1 bear~l1 x00000001 )
( stallion~l1 male~l1 horse~l1 x00000001 )
( mare~l1 female~l1 horse~l1 x00000001 )
( reynard~l1 male~l1 fox~l1 x00000001 )
( vixen~l1 female~l1 fox~l1 x00000001 )
( cub~l1 child~l1 fox~l1 x00000001 )
( drake~l1 male~l1 duck~l1 x00000001 )
( duck~l1 female~l1 duck~l1 x00000001 )
( tercel~l1 male~l1 hawk~l1 x00000001 )
( hen~l1 female~l1 hawk~l1 x00000001 )
( eyas~l1 child~l1 hawk~l1 x00000001 )
( tiger~l1 male~l1 tiger~l1 x00000001 )
( tigress~l1 female~l1 tiger~l1 x00000001 )
( bull~l1 male~l1 alligator~l1 x00000001 )
( cow~l1 female~l1 alligator~l1 x00000001 )
( bull~l1 male~l1 cow~l1 x00000001 )
( cow~l1 female~l1 cow~l1 x00000001 )
( dog~l1 male~l1 dog~l1 x00000001 )
( bitch~l1 female~l1 dog~l1 x00000001 )
( stag~l1 male~l1 red_deer~l1 x00000001 )
( hind~l1 female~l1 red_deer~l1 x00000001 )
( fawn~l1 child~l1 red_deer~l1 x00000001 )
( cob~l1 male~l1 swan~l1 x00000001 )
( pen~l1 female~l1 swan~l1 x00000001 )
( cygnet~l1 child~l1 swan~l1 x00000001 )
( pack~l1 group~l1 wolf~l1 x00000001 )
( skulk~l1 group~l1 fox~l1 x00000001 )
( trip~l1 group~l1 goat~l1 x00000001 )
( murder~l1 group~l1 crow~l1 x00000001 )
( knot~l1 group~l1 toad~l1 x00000001 )
( colony~l1 group~l1 bat~l1 x00000001 )
( band~l1 group~l1 gorilla~l1 x00000001 )
( army~l1 group~l1 caterpillar~l1 x00000001 )
( school~l1 group~l1 fish~n~l1 x00000001 )
( smack~l1 group~l1 jellyfish~l1 x00000001 )
( pride~l1 group~l1 lion~l1 x00000001 )
( harvest~l1 group~l1 mouse~l1 x00000001 )
( labor~l1 group~l1 mole~l1 x00000001 )
( gaggle~l1 group~l1 goose~l1 x00000001 )
( mob~l1 group~l1 kangaroo~l1 x00000001 )
( pod~l1 group~l1 whale~l1 x00000001 )
( parliament~l1 group~l1 owl~l1 x00000001 )
( crash~l1 group~l1 rhinoceros~l1 x00000001 )
( hutch~l1 habitat~l1 rabbit~l1 x00000001 )
( nest~l1 habitat~l1 ~bird x00000001 )
( birdhouse~l1 habitat~l1 ~bird x00000001 )
( birdcage~l1 habitat~l1 ~bird x00000001 )
( bird-house~l1 habitat~l1 ~bird x00000001 )
( aviary~l1 habitat~l1 ~bird x00000001 )
( coop~l1 habitat~l1 chicken~l1 x00000001 )
( aquarium~l1 habitat~l1 ~fishes x00000001 )
( fish_tank~l1 habitat~l1 ~fishes x00000001 )
( terrarium~l1 habitat~l1 snake~l1 x00000001 )
( terrarium~l1 habitat~l1 lizard~l1 x00000001 )
( terrarium~l1 habitat~l1 turtle~l1 x00000001 )
( vivarium~l1 habitat~l1 snake~l1 x00000001 )
( vivarium~l1 habitat~l1 lizard~l1 x00000001 )
( vivarium~l1 habitat~l1 turtle~l1 x00000001 )
( aquarium~l1 habitat~l1 sea_horse~l1 x00000001 )
( doghouse~l1 habitat~l1 dog~l1 x00000001 )
( kennel~l1 habitat~l1 dog~l1 x00000001 )
( dog-house~l1 habitat~l1 ~dog_breeds x00000001 )
( doghouse~l1 habitat~l1 ~dog_breeds x00000001 )
( kennel~l1 habitat~l1 ~dog_breeds x00000001 )
( den~l1 habitat~l1 lion~l1 x00000001 )
( lodge~l1 habitat~l1 beaver~l1 x00000001 )
( lodge~l1 habitat~l1 otter~l1 x00000001 )
( anthill~l1 habitat~l1 ant~l1 x00000001 )
( cave~l1 habitat~l1 bat~l1 x00000001 )
( cage~l1 habitat~l1 lion~l1 x00000001 )
( cage~l1 habitat~l1 tiger~l1 x00000001 )
( cage~l1 habitat~l1 bear~l1 x00000001 )
( cage~l1 habitat~l1 wolf~l1 x00000001 )
( den~l1 habitat~l1 tiger~l1 x00000001 )
( den~l1 habitat~l1 bear~l1 x00000001 )
( den~l1 habitat~l1 wolf~l1 x00000001 )
( hive~l1 habitat~l1 bee~l1 x00000001 )
( eyrie~l1 habitat~l1 vulture~l1 x00000001 )
( eyrie~l1 habitat~l1 eagle~l1 x00000001 )
( lair~l1 habitat~l1 fox~l1 x00000001 )
( lair~l1 habitat~l1 cat~l1 x00000001 )
( barn~l1 habitat~l1 cow~l1 x00000001 )
( barn~l1 habitat~l1 cattle~l1 x00000001 )
( barn~l1 habitat~l1 steer~l1 x00000001 )
( stable~l1 habitat~l1 horse~l1 x00000001 )
( burrow~l1 habitat~l1 mole~l1 x00000001 )
( sty~l1 habitat~l1 pig~l1 x00000001 )
( pen~l1 habitat~l1 sheep~l1 x00000001 )
( web~l1 habitat~l1 spider~l1 x00000001 )
( mound~l1 habitat~l1 termite~l1 x00000001 )
( nest~l1 habitat~l1 wasp~l1 x00000001 )
( Samoan~l1 languagename~l1 Samoan~l1 x00000001 )
( Francais~l1 languagename~l1 Francais~l1 x00000001 )
( Deutsch~l1 languagename~l1 Deutsch~l1 x00000001 )
( Espanol~l1 languagename~l1 Espanol~l1 x00000001 )
( Magyar~l1 languagename~l1 Magyar~l1 x00000001 )
( Suomi~l1 languagename~l1 Suomi~l1 x00000001 )
( Nederlands~l1 languagename~l1 Nederlands~l1 x00000001 )
( Svenska~l1 languagename~l1 Svenska~l1 x00000001 )
( Cesky~l1 languagename~l1 Cesky~l1 x00000001 )
( Slovensky~l1 languagename~l1 Slovensky~l1 x00000001 )
( Dansk~l1 languagename~l1 Dansk~l1 x00000001 )
( Italiano~l1 languagename~l1 Italiano~l1 x00000001 )
( Portugues~l1 languagename~l1 Portugues~l1 x00000001 )
( Polski~l1 languagename~l1 Polski~l1 x00000001 )
( Norsk~l1 languagename~l1 Norsk~l1 x00000001 )
( English~l1 languagename~l1 English~l1 x00000001 )
( Africa~l1 languagename~l1 Africa~l1 x00000001 )
( Albanian~l1 language~l1 Albania~l1 x00000001 )
( Arabic~l1 language~l1 Algeria~l1 x00000001 )
( Spanish~l1 language~l1 Argentina~l1 x00000001 )
( Armenian~l1 language~l1 Armenia~l1 x00000001 )
( English~l1 language~l1 Australia~l1 x00000001 )
( German~l1 language~l1 Austria~l1 x00000001 )
( Azerbaijani~l1 language~l1 Azerbaijan~l1 x00000001 )
( English~l1 language~l1 Bahamas~l1 x00000001 )
( Arabic~l1 language~l1 Bahrain~l1 x00000001 )
( Byelorussian~l1 language~l1 Belarus~l1 x00000001 )
( Dutch~l1 language~l1 Belgium~l1 x00000001 )
( French~l1 language~l1 Belgium~l1 x00000001 )
( German~l1 language~l1 Belgium~l1 x00000001 )
( Spanish~l1 language~l1 Bolivia~l1 x00000001 )
( Serbo-Croatian~l1 language~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Portuguese~l1 language~l1 Brazil~l1 x00000001 )
( Bulgarian~l1 language~l1 Bulgaria~l1 x00000001 )
( Cambodian~l1 language~l1 Kingdom_of_Cambodia~l1 x00000001 )
( English~l1 language~l1 Canada~l1 x00000001 )
( French~l1 language~l1 Canada~l1 x00000001 )
( Spanish~l1 language~l1 Chile~l1 x00000001 )
( Chinese~l1 language~l1 People_'s_Republic_of_China~l1 x00000001 )
( Spanish~l1 language~l1 Republic_of_Colombia~l1 x00000001 )
( Spanish~l1 language~l1 Costa_Rica~l1 x00000001 )
( Serbo-Croatian~l1 language~l1 Croatia~l1 x00000001 )
( Spanish~l1 language~l1 Cuba~l1 x00000001 )
( Greek~l1 language~l1 Cyprus~l1 x00000001 )
( Czech~l1 language~l1 Czech_Republic~l1 x00000001 )
( Danish~l1 language~l1 Denmark~l1 x00000001 )
( Spanish~l1 language~l1 Ecuador~l1 x00000001 )
( Arabic~l1 language~l1 Egypt~l1 x00000001 )
( Spanish~l1 language~l1 El_Salvador~l1 x00000001 )
( Estonian~l1 language~l1 Republic_of_Estonia~l1 x00000001 )
( Finnish~l1 language~l1 Finland~l1 x00000001 )
( Swedish~l1 language~l1 Finland~l1 x00000001 )
( French~l1 language~l1 France~l1 x00000001 )
( Georgian~l1 language~l1 Georgia~l1 x00000001 )
( German~l1 language~l1 Germany~l1 x00000001 )
( Greek~l1 language~l1 Greece~l1 x00000001 )
( Spanish~l1 language~l1 Guatemala~l1 x00000001 )
( Spanish~l1 language~l1 Honduras~l1 x00000001 )
( Hungarian~l1 language~l1 Hungary~l1 x00000001 )
( Icelandic~l1 language~l1 Iceland~l1 x00000001 )
( English~l1 language~l1 India~l1 x00000001 )
( Urdu~l1 language~l1 India~l1 x00000001 )
( Indonesian~l1 language~l1 Indonesia~l1 x00000001 )
( Persian~l1 language~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Arabic~l1 language~l1 Iraq~l1 x00000001 )
( English~l1 language~l1 Republic_of_Ireland~l1 x00000001 )
( Irish~l1 language~l1 Republic_of_Ireland~l1 x00000001 )
( Hebrew~l1 language~l1 Israel~l1 x00000001 )
( Arabic~l1 language~l1 Israel~l1 x00000001 )
( Italian~l1 language~l1 Italy~l1 x00000001 )
( Japanese~l1 language~l1 Japan~l1 x00000001 )
( Arabic~l1 language~l1 Jordan~l1 x00000001 )
( Kazakh~l1 language~l1 Kazakhstan~l1 x00000001 )
( English~l1 language~l1 Republic_of_Kenya~l1 x00000001 )
( Arabic~l1 language~l1 Kuwait~l1 x00000001 )
( Kirghiz~l1 language~l1 Kyrgyzstan~l1 x00000001 )
( Laothian~l1 language~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Latvian~l1 language~l1 Republic_of_Latvia~l1 x00000001 )
( Arabic~l1 language~l1 Lebanon~l1 x00000001 )
( Arabic~l1 language~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Lithuanian~l1 language~l1 Republic_of_Lithuania~l1 x00000001 )
( French~l1 language~l1 Luxembourg~l1 x00000001 )
( Malay~l1 language~l1 Malaysia~l1 x00000001 )
( Maltese~l1 language~l1 Malta~l1 x00000001 )
( English~l1 language~l1 Malta~l1 x00000001 )
( Spanish~l1 language~l1 Mexico~l1 x00000001 )
( Moldavian~l1 language~l1 Republic_of_Moldova~l1 x00000001 )
( French~l1 language~l1 Monaco~l1 x00000001 )
( Mongolian~l1 language~l1 Mongolia~l1 x00000001 )
( Serbo-Croatian~l1 language~l1 Montenegro~l1 x00000001 )
( Arabic~l1 language~l1 Morocco~l1 x00000001 )
( French~l1 language~l1 Morocco~l1 x00000001 )
( Spanish~l1 language~l1 Morocco~l1 x00000001 )
( Dutch~l1 language~l1 Netherlands~l1 x00000001 )
( English~l1 language~l1 New_zealand~l1 x00000001 )
( Spanish~l1 language~l1 Nicaragua~l1 x00000001 )
( English~l1 language~l1 Nigeria~l1 x00000001 )
( Korean~l1 language~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Norwegian~l1 language~l1 Norway~l1 x00000001 )
( English~l1 language~l1 Pakistan~l1 x00000001 )
( Spanish~l1 language~l1 Panama~l1 x00000001 )
( Spanish~l1 language~l1 Paraguay~l1 x00000001 )
( Sindhi~l1 language~l1 Pakistan~l1 x00000001 )
( Spanish~l1 language~l1 Peru~l1 x00000001 )
( English~l1 language~l1 Philippines~l1 x00000001 )
( Polish~l1 language~l1 Poland~l1 x00000001 )
( Portuguese~l1 language~l1 Portugal~l1 x00000001 )
( Arabic~l1 language~l1 Qatar~l1 x00000001 )
( Romanian~l1 language~l1 Romania~l1 x00000001 )
( Russian~l1 language~l1 Russian_Federation~l1 x00000001 )
( Italian~l1 language~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( Arabic~l1 language~l1 Saudi_Arabia~l1 x00000001 )
( Serbo-Croatian~l1 language~l1 Serbia~l1 x00000001 )
( English~l1 language~l1 Republic_of_Singapore~l1 x00000001 )
( Slovak~l1 language~l1 Slovakia~l1 x00000001 )
( Slovenian~l1 language~l1 Slovenia~l1 x00000001 )
( Korean~l1 language~l1 Republic_of_Korea~l1 x00000001 )
( Spanish~l1 language~l1 Spain~l1 x00000001 )
( Swedish~l1 language~l1 Sweden~l1 x00000001 )
( German~l1 language~l1 Switzerland~l1 x00000001 )
( French~l1 language~l1 Switzerland~l1 x00000001 )
( Italian~l1 language~l1 Switzerland~l1 x00000001 )
( Rhaeto-Romance~l1 language~l1 Switzerland~l1 x00000001 )
( Arabic~l1 language~l1 Syrian_Arab_Republic~l1 x00000001 )
( Chinese~l1 language~l1 Republic_of_China~l1 x00000001 )
( English~l1 language~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Thai~l1 language~l1 Thailand~l1 x00000001 )
( Arabic~l1 language~l1 Tunisia~l1 x00000001 )
( Turkish~l1 language~l1 Turkey~l1 x00000001 )
( English~l1 language~l1 Uganda~l1 x00000001 )
( Ukrainian~l1 language~l1 Ukraine~l1 x00000001 )
( Russian~l1 language~l1 Ukraine~l1 x00000001 )
( Arabic~l1 language~l1 United_Arab_Emirates~l1 x00000001 )
( English~l1 language~l1 United_Kingdom~l1 x00000001 )
( Spanish~l1 language~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( English~l1 language~l1 United_States_of_America~l1 x00000001 )
( Uzbek~l1 language~l1 Uzbekistan~l1 x00000001 )
( Spanish~l1 language~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Vietnamese~l1 language~l1 Vietnam~l1 x00000001 )
( English~l1 language~l1 Republic_of_Zimbabwe~l1 x00000001 )
( Frenchy~l1 nationality~l1 France~l1 x00000001 )
( Samoan~l1 nationality~l1 Samoa~l1 x00000001 )
( French~l1 nationality~l1 France~l1 x00000001 )
( German~l1 nationality~l1 Germany~l1 x00000001 )
( Spanish~l1 nationality~l1 Spain~l1 x00000001 )
( Hungarian~l1 nationality~l1 Hungary~l1 x00000001 )
( Finnish~l1 nationality~l1 Finland~l1 x00000001 )
( Dutch~l1 nationality~l1 The_Nederlands~l1 x00000001 )
( Swedish~l1 nationality~l1 Sweden~l1 x00000001 )
( Czech~l1 nationality~l1 Czechoslovakia~l1 x00000001 )
( Slovak~l1 nationality~l1 Slovakia~l1 x00000001 )
( Slovakian~l1 nationality~l1 Slovakia~l1 x00000001 )
( Danish~l1 nationality~l1 Denmark~l1 x00000001 )
( Italian~l1 nationality~l1 Italy~l1 x00000001 )
( Portuguese~l1 nationality~l1 Portugal~l1 x00000001 )
( Polish~l1 nationality~l1 Poland~l1 x00000001 )
( Norwegian~l1 nationality~l1 Norway~l1 x00000001 )
( English~l1 nationality~l1 England~l1 x00000001 )
( Irish~l1 nationality~l1 Ireland~l1 x00000001 )
( American~l1 nationality~l1 United_States_of_America~l1 x00000001 )
( Scottish~l1 nationality~l1 Scotland~l1 x00000001 )
( Welsh~l1 nationality~l1 Wales~l1 x00000001 )
( Swiss~l1 nationality~l1 Switerland~l1 x00000001 )
( Greek~l1 nationality~l1 Greece~l1 x00000001 )
( Turkish~l1 nationality~l1 Turkey~l1 x00000001 )
( Indian~l1 nationality~l1 India~l1 x00000001 )
( Romulan~l1 nationality~l1 Romulus~l1 x00000001 )
( Klingon~l1 nationality~l1 Klingon~l1 x00000001 )
( Martian~l1 nationality~l1 Mars~l1 x00000001 )
( Venusian~l1 nationality~l1 Venus~l1 x00000001 )
( Earthling~l1 nationality~l1 Earth~l1 x00000001 )
( Vulcan~l1 nationality~l1 Vulcan~l1 x00000001 )
( Terran~l1 nationality~l1 Earth~l1 x00000001 )
( Ferengi~l1 nationality~l1 Ferenginar~l1 x00000001 )
( Abkhaz~l1 adjective~l1 Abkhazia~l1 x00000001 )
( Abkhazian~l1 adjective~l1 Abkhazia~l1 x00000001 )
( Afghan~l1 adjective~l1 Afghanistan~l1 x00000001 )
( African~l1 adjective~l1 Africa~l1 x00000001 )
( Åland_Island~l1 adjective~l1 Åland_Islands~l1 x00000001 )
( Albanian~l1 adjective~l1 Albania~l1 x00000001 )
( Algerian~l1 adjective~l1 Algeria~l1 x00000001 )
( American_Samoan~l1 adjective~l1 American_Samoa~l1 x00000001 )
( Andorran~l1 adjective~l1 Andorra~l1 x00000001 )
( Angolan~l1 adjective~l1 Angola~l1 x00000001 )
( Anguillan~l1 adjective~l1 Anguilla~l1 x00000001 )
( Antarctic~l1 adjective~l1 Antarctica~l1 x00000001 )
( Antiguan_or_Barbudan~l1 adjective~l1 Antigua_and_Barbuda~l1 x00000001 )
( Argentine~l1 adjective~l1 Argentina~l1 x00000001 )
( Armenian~l1 adjective~l1 Armenia~l1 x00000001 )
( Aruban~l1 adjective~l1 Aruba~l1 x00000001 )
( Australian~l1 adjective~l1 Australia~l1 x00000001 )
( Austrian~l1 adjective~l1 Austria~l1 x00000001 )
( Azerbaijani~l1 adjective~l1 Azerbaijan~l1 x00000001 )
( Azeri~l1 adjective~l1 Azerbaijan~l1 x00000001 )
( Bahamian~l1 adjective~l1 Bahamas~l1 x00000001 )
( Bahraini~l1 adjective~l1 Bahrain~l1 x00000001 )
( Bangladeshi~l1 adjective~l1 Bangladesh~l1 x00000001 )
( Barbadian~l1 adjective~l1 Barbados~l1 x00000001 )
( Belarusian~l1 adjective~l1 Belarus~l1 x00000001 )
( Belgian~l1 adjective~l1 Belgium~l1 x00000001 )
( Belizean~l1 adjective~l1 Belize~l1 x00000001 )
( Beninese~l1 adjective~l1 Benin~l1 x00000001 )
( Beninois~l1 adjective~l1 Benin~l1 x00000001 )
( Bermudian~l1 adjective~l1 Bermuda~l1 x00000001 )
( Bermudan~l1 adjective~l1 Bermuda~l1 x00000001 )
( Bhutanese~l1 adjective~l1 Bhutan~l1 x00000001 )
( Bolivian~l1 adjective~l1 Bolivia~l1 x00000001 )
( Bonaire~l1 adjective~l1 Bonaire~l1 x00000001 )
( Bosnian_or_Herzegovinian~l1 adjective~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Bosnia~l1 adjective~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Herzegovina~l1 adjective~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Motswana~l1 adjective~l1 Botswana~l1 x00000001 )
( Botswanan~l1 adjective~l1 Botswana~l1 x00000001 )
( Bouvet_Island~l1 adjective~l1 Bouvet_Island~l1 x00000001 )
( Brazilian~l1 adjective~l1 Brazil~l1 x00000001 )
( BIOT~l1 adjective~l1 British_Indian_Ocean_Territory~l1 x00000001 )
( Bruneian~l1 adjective~l1 Brunei~l1 x00000001 )
( Bulgarian~l1 adjective~l1 Bulgaria~l1 x00000001 )
( Burkinabé~l1 adjective~l1 Burkina_Faso~l1 x00000001 )
( Burmese~l1 adjective~l1 Burma~l1 x00000001 )
( Burundian~l1 adjective~l1 Burundi~l1 x00000001 )
( Cabo_Verdean~l1 adjective~l1 Cabo_Verde~l1 x00000001 )
( Cambodian~l1 adjective~l1 Cambodia~l1 x00000001 )
( Cameroonian~l1 adjective~l1 Cameroon~l1 x00000001 )
( Canadian~l1 adjective~l1 Canada~l1 x00000001 )
( Caymanian~l1 adjective~l1 Cayman_Islands~l1 x00000001 )
( Central_African~l1 adjective~l1 Central_African_Republic~l1 x00000001 )
( Chadian~l1 adjective~l1 Chad~l1 x00000001 )
( Chilean~l1 adjective~l1 Chile~l1 x00000001 )
( Chinese~l1 adjective~l1 People_'s_Republic_of_China~l1 x00000001 )
( Taiwanese~l1 adjective~l1 Republic_of_China~l1 x00000001 )
( Chinese~l1 adjective~l1 China~l1 x00000001 )
( Christmas_Island~l1 adjective~l1 Christmas_Island~l1 x00000001 )
( Cocos_Island~l1 adjective~l1 Cocos_Islands~l1 x00000001 )
( Cocos_Island~l1 adjective~l1 Keeling_Islands~l1 x00000001 )
( Colombian~l1 adjective~l1 Colombia~l1 x00000001 )
( Comorian~l1 adjective~l1 Comoros_Comoran~l1 x00000001 )
( Congolese~l1 adjective~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Congolese~l1 adjective~l1 Republic_of_the_Congo~l1 x00000001 )
( Congolese~l1 adjective~l1 Congo~l1 x00000001 )
( Cook_Island~l1 adjective~l1 Cook_Islands~l1 x00000001 )
( Costa_Rican~l1 adjective~l1 Costa_Rica~l1 x00000001 )
( Ivorian~l1 adjective~l1 Côte_d'Ivoire~l1 x00000001 )
( Croatian~l1 adjective~l1 Croatia~l1 x00000001 )
( Cuban~l1 adjective~l1 Cuba~l1 x00000001 )
( Curaçaoan~l1 adjective~l1 Curaçao~l1 x00000001 )
( Cypriot~l1 adjective~l1 Cyprus~l1 x00000001 )
( Czech~l1 adjective~l1 Czech_Republic~l1 x00000001 )
( Danish~l1 adjective~l1 Denmark~l1 x00000001 )
( Djiboutian~l1 adjective~l1 Djibouti~l1 x00000001 )
( Dominican~l1 adjective~l1 Dominica~l1 x00000001 )
( Dominican~l1 adjective~l1 Dominican_Republic~l1 x00000001 )
( Timorese~l1 adjective~l1 East_Timor~l1 x00000001 )
( Ecuadorian~l1 adjective~l1 Ecuador~l1 x00000001 )
( Egyptian~l1 adjective~l1 Egypt~l1 x00000001 )
( Salvadoran~l1 adjective~l1 El_Salvador~l1 x00000001 )
( Equatorial_Guinean~l1 adjective~l1 Equatorial_Guinea~l1 x00000001 )
( Eritrean~l1 adjective~l1 Eritrea~l1 x00000001 )
( Estonian~l1 adjective~l1 Estonia~l1 x00000001 )
( Ethiopian~l1 adjective~l1 Ethiopia~l1 x00000001 )
( European~l1 adjective~l1 European_Union~l1 x00000001 )
( Falkland_Island~l1 adjective~l1 Falkland_Islands~l1 x00000001 )
( Faroese~l1 adjective~l1 Faroe_Islands~l1 x00000001 )
( Fijian~l1 adjective~l1 Fiji~l1 x00000001 )
( Finnish~l1 adjective~l1 Finland~l1 x00000001 )
( French~l1 adjective~l1 France~l1 x00000001 )
( French_Guianese~l1 adjective~l1 French_Guiana~l1 x00000001 )
( French_Polynesian~l1 adjective~l1 French_Polynesia~l1 x00000001 )
( French_Southern_Territories~l1 adjective~l1 French_Southern_Territories~l1 x00000001 )
( Gabonese~l1 adjective~l1 Gabon~l1 x00000001 )
( Gambian~l1 adjective~l1 Gambia~l1 x00000001 )
( Georgian~l1 adjective~l1 Georgia~l1 x00000001 )
( German~l1 adjective~l1 Germany~l1 x00000001 )
( Ghanaian~l1 adjective~l1 Ghana~l1 x00000001 )
( Gibraltar~l1 adjective~l1 Gibraltar~l1 x00000001 )
( Greek~l1 adjective~l1 Greece~l1 x00000001 )
( Greenlandic~l1 adjective~l1 Greenland~l1 x00000001 )
( Grenadian~l1 adjective~l1 Grenada~l1 x00000001 )
( Guadeloupe~l1 adjective~l1 Guadeloupe~l1 x00000001 )
( Guamanian~l1 adjective~l1 Guam~l1 x00000001 )
( Guambat~l1 adjective~l1 Guam~l1 x00000001 )
( Guatemalan~l1 adjective~l1 Guatemala~l1 x00000001 )
( Channel_Island~l1 adjective~l1 Guernsey~l1 x00000001 )
( Guinean~l1 adjective~l1 Guinea~l1 x00000001 )
( Bissau-Guinean~l1 adjective~l1 Guinea-Bissau~l1 x00000001 )
( Guyanese~l1 adjective~l1 Guyana~l1 x00000001 )
( Haitian~l1 adjective~l1 Haiti~l1 x00000001 )
( Heard_Island_or_McDonald_Islands~l1 adjective~l1 Heard_Island_and_McDonald_Islands~l1 x00000001 )
( Honduran~l1 adjective~l1 Honduras~l1 x00000001 )
( Hong_Kong~l1 adjective~l1 Hong_Kong~l1 x00000001 )
( Hong_Kongese~l1 adjective~l1 Hong_Kong~l1 x00000001 )
( Hungarian~l1 adjective~l1 Hungary~l1 x00000001 )
( Magyar~l1 adjective~l1 Hungary~l1 x00000001 )
( Icelandic~l1 adjective~l1 Iceland~l1 x00000001 )
( Indian~l1 adjective~l1 India~l1 x00000001 )
( Indonesian~l1 adjective~l1 Indonesia~l1 x00000001 )
( Iranian~l1 adjective~l1 Iran~l1 x00000001 )
( Persian~l1 adjective~l1 Iran~l1 x00000001 )
( Iraqi~l1 adjective~l1 Iraq~l1 x00000001 )
( Irish~l1 adjective~l1 Ireland~l1 x00000001 )
( Manx~l1 adjective~l1 Isle_of_Man~l1 x00000001 )
( Israeli~l1 adjective~l1 Israel~l1 x00000001 )
( Italian~l1 adjective~l1 Italy~l1 x00000001 )
( Ivorian~l1 adjective~l1 Ivory_Coast~l1 x00000001 )
( Jamaican~l1 adjective~l1 Jamaica~l1 x00000001 )
( Jan_Mayen~l1 adjective~l1 Jan_Mayen~l1 x00000001 )
( Japanese~l1 adjective~l1 Japan~l1 x00000001 )
( Channel_Island~l1 adjective~l1 Jersey~l1 x00000001 )
( Jordanian~l1 adjective~l1 Jordan~l1 x00000001 )
( Kazakhstani~l1 adjective~l1 Kazakhstan~l1 x00000001 )
( Kazakh~l1 adjective~l1 Kazakhstan~l1 x00000001 )
( Kenyan~l1 adjective~l1 Kenya~l1 x00000001 )
( I-Kiribati~l1 adjective~l1 Kiribati~l1 x00000001 )
( North_Korean~l1 adjective~l1 North_Korea~l1 x00000001 )
( South_Korean~l1 adjective~l1 South_Korea~l1 x00000001 )
( Kosovar~l1 adjective~l1 Kosovo~l1 x00000001 )
( Kosovan~l1 adjective~l1 Kosovo~l1 x00000001 )
( Kuwaiti~l1 adjective~l1 Kuwait~l1 x00000001 )
( Kyrgyzstani~l1 adjective~l1 Kyrgyzstan~l1 x00000001 )
( Kyrgyz~l1 adjective~l1 Kyrgyzstan~l1 x00000001 )
( Kirgiz~l1 adjective~l1 Kyrgyzstan~l1 x00000001 )
( Kirghiz~l1 adjective~l1 Kyrgyzstan~l1 x00000001 )
( Lao~l1 adjective~l1 Laos~l1 x00000001 )
( Laotian~l1 adjective~l1 Laos~l1 x00000001 )
( Latvian~l1 adjective~l1 Latvia~l1 x00000001 )
( Lettish~l1 adjective~l1 Latvia~l1 x00000001 )
( Lebanese~l1 adjective~l1 Lebanon~l1 x00000001 )
( Basotho~l1 adjective~l1 Lesotho~l1 x00000001 )
( Liberian~l1 adjective~l1 Liberia~l1 x00000001 )
( Libyan~l1 adjective~l1 Libya~l1 x00000001 )
( Liechtensteiner~l1 adjective~l1 Liechtenstein~l1 x00000001 )
( Lithuanian~l1 adjective~l1 Lithuania~l1 x00000001 )
( Luxembourg~l1 adjective~l1 Luxembourg~l1 x00000001 )
( Luxembourgish~l1 adjective~l1 Luxembourg~l1 x00000001 )
( Macanese~l1 adjective~l1 Macau~l1 x00000001 )
( Macedonian~l1 adjective~l1 Macedonia~l1 x00000001 )
( Malagasy~l1 adjective~l1 Madagascar~l1 x00000001 )
( Malawian~l1 adjective~l1 Malawi~l1 x00000001 )
( Malaysian~l1 adjective~l1 Malaysia~l1 x00000001 )
( Maldivian~l1 adjective~l1 Maldives~l1 x00000001 )
( Malian~l1 adjective~l1 Mali~l1 x00000001 )
( Malinese~l1 adjective~l1 Mali~l1 x00000001 )
( Maltese~l1 adjective~l1 Malta~l1 x00000001 )
( Marshallese~l1 adjective~l1 Marshall_Islands~l1 x00000001 )
( Martiniquais~l1 adjective~l1 Martinique~l1 x00000001 )
( Martinican~l1 adjective~l1 Martinique~l1 x00000001 )
( Mauritanian~l1 adjective~l1 Mauritania~l1 x00000001 )
( Mauritian~l1 adjective~l1 Mauritius~l1 x00000001 )
( Mahoran~l1 adjective~l1 Mayotte~l1 x00000001 )
( Mexican~l1 adjective~l1 Mexico~l1 x00000001 )
( Micronesian~l1 adjective~l1 Micronesia~l1 x00000001 )
( Moldovan~l1 adjective~l1 Moldova~l1 x00000001 )
( Monégasque~l1 adjective~l1 Monaco~l1 x00000001 )
( Monacan~l1 adjective~l1 Monaco~l1 x00000001 )
( Mongolian~l1 adjective~l1 Mongolia~l1 x00000001 )
( Montenegrin~l1 adjective~l1 Montenegro~l1 x00000001 )
( Montserratian~l1 adjective~l1 Montserrat~l1 x00000001 )
( Moroccan~l1 adjective~l1 Morocco~l1 x00000001 )
( Mozambican~l1 adjective~l1 Mozambique~l1 x00000001 )
( Burmese~l1 adjective~l1 Myanmar~l1 x00000001 )
( Namibian~l1 adjective~l1 Namibia~l1 x00000001 )
( Nauruan~l1 adjective~l1 Nauru~l1 x00000001 )
( Nepali~l1 adjective~l1 Nepal~l1 x00000001 )
( Nepalese~l1 adjective~l1 Nepal~l1 x00000001 )
( Dutch~l1 adjective~l1 Netherlands~l1 x00000001 )
( Netherlandic~l1 adjective~l1 Netherlands~l1 x00000001 )
( New_Caledonian~l1 adjective~l1 New_Caledonia~l1 x00000001 )
( New_Zealand~l1 adjective~l1 New_Zealand~l1 x00000001 )
( Nicaraguan~l1 adjective~l1 Nicaragua~l1 x00000001 )
( Nigerien~l1 adjective~l1 Niger~l1 x00000001 )
( Nigerian~l1 adjective~l1 Nigeria~l1 x00000001 )
( Niuean~l1 adjective~l1 Niue~l1 x00000001 )
( Norfolk_Island~l1 adjective~l1 Norfolk_Island~l1 x00000001 )
( Northern_Irish~l1 adjective~l1 Northern_Ireland~l1 x00000001 )
( Northern_Marianan~l1 adjective~l1 Northern_Mariana_Islands~l1 x00000001 )
( Norwegian~l1 adjective~l1 Norway~l1 x00000001 )
( Omani~l1 adjective~l1 Oman~l1 x00000001 )
( Pakistani~l1 adjective~l1 Pakistan~l1 x00000001 )
( Palauan~l1 adjective~l1 Palau~l1 x00000001 )
( Palestinian~l1 adjective~l1 Palestine~l1 x00000001 )
( Panamanian~l1 adjective~l1 Panama~l1 x00000001 )
( Papua_New_Guinean~l1 adjective~l1 Papua_New_Guinea~l1 x00000001 )
( Papuan~l1 adjective~l1 Papua_New_Guinea~l1 x00000001 )
( Paraguayan~l1 adjective~l1 Paraguay~l1 x00000001 )
( Peruvian~l1 adjective~l1 Peru~l1 x00000001 )
( Filipino~l1 adjective~l1 Philippines~l1 x00000001 )
( Philippine~l1 adjective~l1 Philippines~l1 x00000001 )
( Pitcairn_Island~l1 adjective~l1 Pitcairn_Islands~l1 x00000001 )
( Polish~l1 adjective~l1 Poland~l1 x00000001 )
( Portuguese~l1 adjective~l1 Portugal~l1 x00000001 )
( Puerto_Rican~l1 adjective~l1 Puerto_Rico~l1 x00000001 )
( Qatari~l1 adjective~l1 Qatar~l1 x00000001 )
( Réunionese~l1 adjective~l1 Réunion~l1 x00000001 )
( Réunionnais~l1 adjective~l1 Réunion~l1 x00000001 )
( Romanian~l1 adjective~l1 Romania~l1 x00000001 )
( Russian~l1 adjective~l1 Russia~l1 x00000001 )
( Rwandan~l1 adjective~l1 Rwanda~l1 x00000001 )
( Saba~l1 adjective~l1 Saba~l1 x00000001 )
( Barthélemois~l1 adjective~l1 Saint_Barthélemy~l1 x00000001 )
( Saint_Helenian~l1 adjective~l1 Saint_Helena,_Ascension_and_Tristan_da_Cunha~l1 x00000001 )
( Kittitian_or_Nevisian~l1 adjective~l1 Saint_Kitts_and_Nevis~l1 x00000001 )
( Saint_Lucian~l1 adjective~l1 Saint_Lucia~l1 x00000001 )
( Saint-Martinoise~l1 adjective~l1 Saint_Martin~l1 x00000001 )
( Saint-Pierrais_or_Miquelonnais~l1 adjective~l1 Saint_Pierre_and_Miquelon~l1 x00000001 )
( Saint_Vincentian~l1 adjective~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( Vincentian~l1 adjective~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( Samoan~l1 adjective~l1 Samoa~l1 x00000001 )
( Sammarinese~l1 adjective~l1 San_Marino~l1 x00000001 )
( São_Toméan~l1 adjective~l1 São_Tomé_and_Príncipe~l1 x00000001 )
( Saudi~l1 adjective~l1 Saudi_Arabia~l1 x00000001 )
( Saudi_Arabian~l1 adjective~l1 Saudi_Arabia~l1 x00000001 )
( Scottish~l1 adjective~l1 Scotland~l1 x00000001 )
( Senegalese~l1 adjective~l1 Senegal~l1 x00000001 )
( Serbian~l1 adjective~l1 Serbia~l1 x00000001 )
( Seychellois~l1 adjective~l1 Seychelles~l1 x00000001 )
( Sierra_Leonean~l1 adjective~l1 Sierra_Leone~l1 x00000001 )
( Singapore~l1 adjective~l1 Singapore~l1 x00000001 )
( Singaporean~l1 adjective~l1 Singapore~l1 x00000001 )
( Sint_Eustatius~l1 adjective~l1 Sint_Eustatius~l1 x00000001 )
( Sint_Maarten~l1 adjective~l1 Sint_Maarten~l1 x00000001 )
( Slovak~l1 adjective~l1 Slovakia~l1 x00000001 )
( Slovenian~l1 adjective~l1 Slovenia~l1 x00000001 )
( Slovene~l1 adjective~l1 Slovenia~l1 x00000001 )
( Solomon_Island~l1 adjective~l1 Solomon_Islands~l1 x00000001 )
( Somali~l1 adjective~l1 Somalia~l1 x00000001 )
( Somalilander~l1 adjective~l1 Somaliland~l1 x00000001 )
( South_African~l1 adjective~l1 South_Africa~l1 x00000001 )
( South_Georgia_or_South_Sandwich_Islands~l1 adjective~l1 South_Georgia_and_the_South_Sandwich_Islands~l1 x00000001 )
( South_Ossetian~l1 adjective~l1 South_Ossetia~l1 x00000001 )
( South_Sudanese~l1 adjective~l1 South_Sudan~l1 x00000001 )
( Spanish~l1 adjective~l1 Spain~l1 x00000001 )
( Sri_Lankan~l1 adjective~l1 Sri_Lanka~l1 x00000001 )
( Sudanese~l1 adjective~l1 Sudan~l1 x00000001 )
( Surinamese~l1 adjective~l1 Surinam~l1 x00000001 )
( Svalbard~l1 adjective~l1 Svalbard~l1 x00000001 )
( Swazi~l1 adjective~l1 Swaziland~l1 x00000001 )
( Swedish~l1 adjective~l1 Sweden~l1 x00000001 )
( Swiss~l1 adjective~l1 Switzerland~l1 x00000001 )
( Syrian~l1 adjective~l1 Syria~l1 x00000001 )
( Tajikistani~l1 adjective~l1 Tajikistan~l1 x00000001 )
( Tanzanian~l1 adjective~l1 Tanzania~l1 x00000001 )
( Thai~l1 adjective~l1 Thailand~l1 x00000001 )
( Timorese~l1 adjective~l1 Timor-Leste~l1 x00000001 )
( Togolese~l1 adjective~l1 Togo~l1 x00000001 )
( Tokelauan~l1 adjective~l1 Tokelau~l1 x00000001 )
( Tongan~l1 adjective~l1 Tonga~l1 x00000001 )
( Trinidadian_or_Tobagonian~l1 adjective~l1 Trinidad_and_Tobago~l1 x00000001 )
( Tunisian~l1 adjective~l1 Tunisia~l1 x00000001 )
( Turkish~l1 adjective~l1 Turkey~l1 x00000001 )
( Turkmen~l1 adjective~l1 Turkmenistan~l1 x00000001 )
( Turks_and_Caicos_Island~l1 adjective~l1 Turks_and_Caicos_Islands~l1 x00000001 )
( Tuvaluan~l1 adjective~l1 Tuvalu~l1 x00000001 )
( Ugandan~l1 adjective~l1 Uganda~l1 x00000001 )
( Ukrainian~l1 adjective~l1 Ukraine~l1 x00000001 )
( Emirati~l1 adjective~l1 United_Arab_Emirates~l1 x00000001 )
( Emirian~l1 adjective~l1 United_Arab_Emirates~l1 x00000001 )
( Emiri~l1 adjective~l1 United_Arab_Emirates~l1 x00000001 )
( British~l1 adjective~l1 United_Kingdom_of_Great_Britain_and_Northern_Ireland~l1 x00000001 )
( American~l1 adjective~l1 United_States_of_America~l1 x00000001 )
( Uruguayan~l1 adjective~l1 Uruguay~l1 x00000001 )
( Uzbekistani~l1 adjective~l1 Uzbekistan~l1 x00000001 )
( Uzbek~l1 adjective~l1 Uzbekistan~l1 x00000001 )
( Ni-Vanuatu~l1 adjective~l1 Vanuatu~l1 x00000001 )
( Vanuatuan~l1 adjective~l1 Vanuatu~l1 x00000001 )
( Vatican~l1 adjective~l1 Vatican_City_State~l1 x00000001 )
( Venezuelan~l1 adjective~l1 Venezuela~l1 x00000001 )
( Vietnamese~l1 adjective~l1 Vietnam~l1 x00000001 )
( Wallis_and_Futuna~l1 adjective~l1 Wallis_and_Futuna~l1 x00000001 )
( Welsh~l1 adjective~l1 Wales~l1 x00000001 )
( Sahrawi~l1 adjective~l1 Western_Sahara~l1 x00000001 )
( Sahrawian~l1 adjective~l1 Western_Sahara~l1 x00000001 )
( Yemeni~l1 adjective~l1 Yemen~l1 x00000001 )
( Zambian~l1 adjective~l1 Zambia~l1 x00000001 )
( Zimbabwean~l1 adjective~l1 Zimbabwe~l1 x00000001 )
( Emerald_City~l1 part~l1 Oz~l1 x00000001 )
( Salt_Lake_City~l1 part~l1 Utah~l1 x00000001 )
( Montpelier~l1 part~l1 Vermont~l1 x00000001 )
( Richmond~l1 part~l1 Virginia~l1 x00000001 )
( Olympia~l1 part~l1 Washington~l1 x00000001 )
( Charleston~l1 part~l1 West_Virginia~l1 x00000001 )
( Madison~l1 part~l1 Wisconsin~l1 x00000001 )
( Cheyenne~l1 part~l1 Wyoming~l1 x00000001 )
( Columbia~l1 part~l1 South_Carolina~l1 x00000001 )
( Nashville~l1 part~l1 Tennessee~l1 x00000001 )
( Montgomery~l1 part~l1 Alabama~l1 x00000001 )
( Juneau~l1 part~l1 Alaska~l1 x00000001 )
( Phoenix~l1 part~l1 Arizona~l1 x00000001 )
( Little_Rock~l1 part~l1 Arkansas~l1 x00000001 )
( Austin~l1 part~l1 Texas~l1 x00000001 )
( Sacramento~l1 part~l1 California~l1 x00000001 )
( Denver~l1 part~l1 Colorado~l1 x00000001 )
( Hartford~l1 part~l1 Connecticut~l1 x00000001 )
( Tallahassee~l1 part~l1 Florida~l1 x00000001 )
( Atlanta~l1 part~l1 Georgia~l1 x00000001 )
( Dover~l1 part~l1 Delaware~l1 x00000001 )
( Honolulu~l1 part~l1 Hawaii~l1 x00000001 )
( Boise~l1 part~l1 Idaho~l1 x00000001 )
( Springfield~l1 part~l1 Illinois~l1 x00000001 )
( Des_Moines~l1 part~l1 Iowa~l1 x00000001 )
( Topeka~l1 part~l1 Kansas~l1 x00000001 )
( Frankfort~l1 part~l1 Kentucky~l1 x00000001 )
( Baton_Rouge~l1 part~l1 Louisiana~l1 x00000001 )
( Annapolis~l1 part~l1 Maryland~l1 x00000001 )
( Boston~l1 part~l1 Massachusetts~l1 x00000001 )
( Lansing~l1 part~l1 Michigan~l1 x00000001 )
( St._Paul~l1 part~l1 Minnesota~l1 x00000001 )
( Jackson~l1 part~l1 Mississippi~l1 x00000001 )
( Jefferson~l1 part~l1 Missouri~l1 x00000001 )
( Helena~l1 part~l1 Montana~l1 x00000001 )
( Lincoln~l1 part~l1 Nebraska~l1 x00000001 )
( Carson~l1 part~l1 Nevada~l1 x00000001 )
( Concord~l1 part~l1 New_Hampshire~l1 x00000001 )
( Trenton~l1 part~l1 New_Jersey~l1 x00000001 )
( Santa_Fe~l1 part~l1 New_Mexico~l1 x00000001 )
( Albany~l1 part~l1 New_York~l1 x00000001 )
( Bismarck~l1 part~l1 North_Dakota~l1 x00000001 )
( Raleigh~l1 part~l1 North_Carolina~l1 x00000001 )
( Columbus~l1 part~l1 Ohio~l1 x00000001 )
( Oklahoma_City~l1 part~l1 Oklahoma~l1 x00000001 )
( Salem~l1 part~l1 Oregon~l1 x00000001 )
( Harrisburg~l1 part~l1 Pennsylvania~l1 x00000001 )
( Providence~l1 part~l1 Rhode_Island~l1 x00000001 )
( Kabul~l1 part~l1 Afghanistan~l1 x00000001 )
( Tirana~l1 part~l1 Albania~l1 x00000001 )
( Algiers~l1 part~l1 Algeria~l1 x00000001 )
( Andorra_la_Vella~l1 part~l1 Andorra~l1 x00000001 )
( Luanda~l1 part~l1 Angola~l1 x00000001 )
( Buenos_Aires~l1 part~l1 Argentina~l1 x00000001 )
( Yerevan~l1 part~l1 Armenia~l1 x00000001 )
( Canberra~l1 part~l1 Australia~l1 x00000001 )
( Vienna~l1 part~l1 Austria~l1 x00000001 )
( Baku~l1 part~l1 Azerbaijan~l1 x00000001 )
( Nassau~l1 part~l1 Bahamas~l1 x00000001 )
( Manama~l1 part~l1 Bahrain~l1 x00000001 )
( Dhaka~l1 part~l1 Bangladesh~l1 x00000001 )
( Bridgetown~l1 part~l1 Barbados~l1 x00000001 )
( Minsk~l1 part~l1 Belarus~l1 x00000001 )
( Brussels~l1 part~l1 Belgium~l1 x00000001 )
( Belmopan~l1 part~l1 Belize~l1 x00000001 )
( Porto-Novo~l1 part~l1 Republic_of_Benin~l1 x00000001 )
( Thimphu~l1 part~l1 Kingdom_of_Bhutan~l1 x00000001 )
( Nova_Scotian~l1 part~l1 Nova_Scotia~l1 x00000001 )
( Gaborone~l1 part~l1 Botswana~l1 x00000001 )
( Brasilia~l1 part~l1 Brazil~l1 x00000001 )
( Sofia~l1 part~l1 Bulgaria~l1 x00000001 )
( Bujumbura~l1 part~l1 Republic_of_Burundi~l1 x00000001 )
( Phnom_Penh~l1 part~l1 Kingdom_of_Cambodia~l1 x00000001 )
( Yaounde~l1 part~l1 Cameroon~l1 x00000001 )
( Ottawa~l1 part~l1 Canada~l1 x00000001 )
( Praia~l1 part~l1 Republic_of_Cape_Verde~l1 x00000001 )
( Bangui~l1 part~l1 Central_African_Republic~l1 x00000001 )
( N'Djamena~l1 part~l1 Republic_of_Chad~l1 x00000001 )
( Santiago~l1 part~l1 Chile~l1 x00000001 )
( Beijing~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Bogota~l1 part~l1 Republic_of_Colombia~l1 x00000001 )
( Moroni~l1 part~l1 Union_of_the_Comoros~l1 x00000001 )
( San_Jose~l1 part~l1 Costa_Rica~l1 x00000001 )
( Zagreb~l1 part~l1 Croatia~l1 x00000001 )
( Havana~l1 part~l1 Cuba~l1 x00000001 )
( Nicosia~l1 part~l1 Cyprus~l1 x00000001 )
( Prague~l1 part~l1 Czech_Republic~l1 x00000001 )
( Copenhagen~l1 part~l1 Denmark~l1 x00000001 )
( Roseau~l1 part~l1 Commonwealth_of_Dominica~l1 x00000001 )
( Santo_Domingo~l1 part~l1 Dominican_Republic~l1 x00000001 )
( Dili~l1 part~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( Quito~l1 part~l1 Ecuador~l1 x00000001 )
( Cairo~l1 part~l1 Egypt~l1 x00000001 )
( San_Salvador~l1 part~l1 El_Salvador~l1 x00000001 )
( Malabo~l1 part~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( Asmara~l1 part~l1 Eritrea~l1 x00000001 )
( Tallinn~l1 part~l1 Republic_of_Estonia~l1 x00000001 )
( Addis_Ababa~l1 part~l1 Ethiopia~l1 x00000001 )
( Suva~l1 part~l1 Fiji~l1 x00000001 )
( Helsinki~l1 part~l1 Finland~l1 x00000001 )
( Paris~l1 part~l1 France~l1 x00000001 )
( Libreville~l1 part~l1 Gabon~l1 x00000001 )
( The_Banjul~l1 part~l1 Gambia~l1 x00000001 )
( Tbilisi~l1 part~l1 Georgia~l1 x00000001 )
( Berlin~l1 part~l1 Germany~l1 x00000001 )
( Accra~l1 part~l1 Ghana~l1 x00000001 )
( Athens~l1 part~l1 Greece~l1 x00000001 )
( St._George's~l1 part~l1 Grenada~l1 x00000001 )
( Guatemala_City~l1 part~l1 Guatemala~l1 x00000001 )
( Conakry~l1 part~l1 Republic_of_Guinea~l1 x00000001 )
( Bissau~l1 part~l1 Guinea-Bissau~l1 x00000001 )
( Georgetown~l1 part~l1 Guyana~l1 x00000001 )
( Port-au-Prince~l1 part~l1 Haiti~l1 x00000001 )
( Tegucigalpa~l1 part~l1 Honduras~l1 x00000001 )
( Budapest~l1 part~l1 Hungary~l1 x00000001 )
( Reykjavik~l1 part~l1 Iceland~l1 x00000001 )
( New_Delhi~l1 part~l1 India~l1 x00000001 )
( Jakarta~l1 part~l1 Indonesia~l1 x00000001 )
( Tehran~l1 part~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Baghdad~l1 part~l1 Iraq~l1 x00000001 )
( Dublin~l1 part~l1 Republic_of_Ireland~l1 x00000001 )
( Jerusalem~l1 part~l1 Israel~l1 x00000001 )
( Rome~l1 part~l1 Italy~l1 x00000001 )
( Kingston~l1 part~l1 Jamaica~l1 x00000001 )
( Tokyo~l1 part~l1 Japan~l1 x00000001 )
( Amman~l1 part~l1 Jordan~l1 x00000001 )
( Astana~l1 part~l1 Kazakhstan~l1 x00000001 )
( Nairobi~l1 part~l1 Republic_of_Kenya~l1 x00000001 )
( South_Tarawa~l1 part~l1 Kiribati~l1 x00000001 )
( Kuwait_City~l1 part~l1 Kuwait~l1 x00000001 )
( Bishkek~l1 part~l1 Kyrgyzstan~l1 x00000001 )
( Vientiane~l1 part~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Riga~l1 part~l1 Republic_of_Latvia~l1 x00000001 )
( Beirut~l1 part~l1 Lebanon~l1 x00000001 )
( Maseru~l1 part~l1 Kingdom_of_Lesotho~l1 x00000001 )
( Monrovia~l1 part~l1 Liberia~l1 x00000001 )
( Tripoli~l1 part~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Vaduz~l1 part~l1 Principality_of_Liechtenstein~l1 x00000001 )
( Vilnius~l1 part~l1 Republic_of_Lithuania~l1 x00000001 )
( Luxembourg~l1 part~l1 Luxembourg~l1 x00000001 )
( Skopje~l1 part~l1 Republic_of_Macedonia~l1 x00000001 )
( Antananarivo~l1 part~l1 Madagascar~l1 x00000001 )
( Lilongwe~l1 part~l1 Malawi~l1 x00000001 )
( Kuala_Lumpur~l1 part~l1 Malaysia~l1 x00000001 )
( Malee~l1 part~l1 Republic_of_Maldives~l1 x00000001 )
( Bamako~l1 part~l1 Mali~l1 x00000001 )
( Valletta~l1 part~l1 Malta~l1 x00000001 )
( Majuro~l1 part~l1 Marshall_Islands~l1 x00000001 )
( Nouakchott~l1 part~l1 Mauritania~l1 x00000001 )
( Port_Louis~l1 part~l1 Mauritius~l1 x00000001 )
( Mexico_City~l1 part~l1 Mexico~l1 x00000001 )
( Palikir~l1 part~l1 Micronesia~l1 x00000001 )
( Chisinau~l1 part~l1 Republic_of_Moldova~l1 x00000001 )
( Monaco~l1 part~l1 Monaco~l1 x00000001 )
( Ulan_Bator~l1 part~l1 Mongolia~l1 x00000001 )
( Podgorica~l1 part~l1 Montenegro~l1 x00000001 )
( Rabat~l1 part~l1 Morocco~l1 x00000001 )
( Maputo~l1 part~l1 Mozambique~l1 x00000001 )
( Naypyidaw~l1 part~l1 Union_of_Myanmar~l1 x00000001 )
( Windhoek~l1 part~l1 Namibia~l1 x00000001 )
( Kathmandu~l1 part~l1 Nepal~l1 x00000001 )
( Amsterdam~l1 part~l1 Netherlands~l1 x00000001 )
( Wellington~l1 part~l1 New_Zealand~l1 x00000001 )
( Managua~l1 part~l1 Nicaragua~l1 x00000001 )
( Niamey~l1 part~l1 Republic_of_Niger~l1 x00000001 )
( Abuja~l1 part~l1 Nigeria~l1 x00000001 )
( Pyongyang~l1 part~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Belfast~l1 part~l1 Northern_Ireland~l1 x00000001 )
( Oslo~l1 part~l1 Norway~l1 x00000001 )
( Muscat~l1 part~l1 Sultanate_of_Oman~l1 x00000001 )
( Islamabad~l1 part~l1 Pakistan~l1 x00000001 )
( Melekeok~l1 part~l1 Republic_of_Palau~l1 x00000001 )
( Panama_City~l1 part~l1 Panama~l1 x00000001 )
( Port_Moresby~l1 part~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( Asuncion~l1 part~l1 Paraguay~l1 x00000001 )
( Lima~l1 part~l1 Peru~l1 x00000001 )
( Manila~l1 part~l1 Philippines~l1 x00000001 )
( Warsaw~l1 part~l1 Poland~l1 x00000001 )
( Lisbon~l1 part~l1 Portugal~l1 x00000001 )
( Doha~l1 part~l1 Qatar~l1 x00000001 )
( Bucharest~l1 part~l1 Romania~l1 x00000001 )
( Moscow~l1 part~l1 Russian_Federation~l1 x00000001 )
( Kigali~l1 part~l1 Rwanda~l1 x00000001 )
( Apia~l1 part~l1 Samoa~l1 x00000001 )
( Riyadh~l1 part~l1 Saudi_Arabia~l1 x00000001 )
( Dakar~l1 part~l1 Senegal~l1 x00000001 )
( Belgrade~l1 part~l1 Serbia~l1 x00000001 )
( Victoria~l1 part~l1 Republic_of_Seychelles~l1 x00000001 )
( Freetown~l1 part~l1 Sierra_Leone~l1 x00000001 )
( Singapore_City~l1 part~l1 Republic_of_Singapore~l1 x00000001 )
( Bratislava~l1 part~l1 Slovakia~l1 x00000001 )
( Ljubljana~l1 part~l1 Slovenia~l1 x00000001 )
( Honiara~l1 part~l1 Solomon_Islands~l1 x00000001 )
( Mogadishu~l1 part~l1 Somalia~l1 x00000001 )
( Pretoria~l1 part~l1 South_Africa~l1 x00000001 )
( Seoul~l1 part~l1 Republic_of_Korea~l1 x00000001 )
( Madrid~l1 part~l1 Spain~l1 x00000001 )
( Colombo~l1 part~l1 Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( Khartoum~l1 part~l1 Sudan~l1 x00000001 )
( Paramaribo~l1 part~l1 Republic_of_Suriname~l1 x00000001 )
( Mbabane~l1 part~l1 Swaziland~l1 x00000001 )
( Stockholm~l1 part~l1 Sweden~l1 x00000001 )
( Bern~l1 part~l1 Switzerland~l1 x00000001 )
( Damascus~l1 part~l1 Syrian_Arab_Republic~l1 x00000001 )
( Dushanbe~l1 part~l1 Tajikistan~l1 x00000001 )
( Dodoma~l1 part~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Bangkok~l1 part~l1 Thailand~l1 x00000001 )
( Lome~l1 part~l1 Togo~l1 x00000001 )
( Nuku'alofa~l1 part~l1 Tonga~l1 x00000001 )
( Tunis~l1 part~l1 Tunisia~l1 x00000001 )
( Ankara~l1 part~l1 Turkey~l1 x00000001 )
( Ashgabat~l1 part~l1 Turkmenistan~l1 x00000001 )
( Funafuti~l1 part~l1 Tuvalu~l1 x00000001 )
( Kampala~l1 part~l1 Uganda~l1 x00000001 )
( Kiev~l1 part~l1 Ukraine~l1 x00000001 )
( Abu_Dhabi~l1 part~l1 United_Arab_Emirates~l1 x00000001 )
( London~l1 part~l1 United_Kingdom~l1 x00000001 )
( Washington_D.C.~l1 part~l1 United_States_of_America~l1 x00000001 )
( Montevideo~l1 part~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( Tashkent~l1 part~l1 Uzbekistan~l1 x00000001 )
( Port_Vila~l1 part~l1 Republic_of_Vanuatu~l1 x00000001 )
( Vatican_City~l1 part~l1 Vatican_City~l1 x00000001 )
( Caracas~l1 part~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Hanoi~l1 part~l1 Vietnam~l1 x00000001 )
( Sanaa~l1 part~l1 Yemen~l1 x00000001 )
( Lusaka~l1 part~l1 Zambia~l1 x00000001 )
( Harare~l1 part~l1 Republic_of_Zimbabwe~l1 x00000001 )
( Pago_Pago~l1 part~l1 American_Samoa~l1 x00000001 )
( The_Valley~l1 part~l1 Anguilla~l1 x00000001 )
( Oranjestad~l1 part~l1 Aruba~l1 x00000001 )
( Georgetown~l1 part~l1 Ascension_Island~l1 x00000001 )
( Hamilton~l1 part~l1 Bermuda~l1 x00000001 )
( George_Town~l1 part~l1 Cayman_Islands~l1 x00000001 )
( The_Settlement~l1 part~l1 Christmas_Island~l1 x00000001 )
( West_Island~l1 part~l1 Cocos_Islands~l1 x00000001 )
( Avarua~l1 part~l1 Cook_Islands~l1 x00000001 )
( Stanley~l1 part~l1 Falkland_Islands~l1 x00000001 )
( Torshavn~l1 part~l1 Faroe_Islands~l1 x00000001 )
( Papeete~l1 part~l1 French_Polynesia~l1 x00000001 )
( Gibraltar~l1 part~l1 Gibraltar~l1 x00000001 )
( Nuuk~l1 part~l1 Greenland~l1 x00000001 )
( Hagatna~l1 part~l1 Guam~l1 x00000001 )
( St_Peter_Port~l1 part~l1 Guernsey~l1 x00000001 )
( Mamoudzou~l1 part~l1 Mayotte~l1 x00000001 )
( Brades~l1 part~l1 Montserrat~l1 x00000001 )
( Willemstad~l1 part~l1 Netherlands_Antilles~l1 x00000001 )
( Noumea~l1 part~l1 New_Caledonia~l1 x00000001 )
( Alofi~l1 part~l1 Niue~l1 x00000001 )
( Kingston~l1 part~l1 Norfolk_Island~l1 x00000001 )
( Saipan~l1 part~l1 Northern_Mariana_Islands~l1 x00000001 )
( Adamstown~l1 part~l1 Pitcairn_Island~l1 x00000001 )
( San_Juan~l1 part~l1 Puerto_Rico~l1 x00000001 )
( Gustavia~l1 part~l1 Saint-Barthelemy~l1 x00000001 )
( Jamestown~l1 part~l1 Saint_Helena~l1 x00000001 )
( Marigot~l1 part~l1 Saint-Martin~l1 x00000001 )
( Edinburgh_of_the_Seven_Seas~l1 part~l1 Tristan_da_Cunha~l1 x00000001 )
( Milky_Way~l1 member Milky_Way_Galaxy~l1 x00000001 )
( Milky_Way_Galaxy~l1 part~l1 Universe~l1 x00000001 )
( Great_Andromeda_Nebula~l1 member Andromeda_Galaxy~l1 x00000001 )
( Andromeda_Galaxy~l1 part~l1 Universe~l1 x00000001 )
( Large_Magellenic_Cloud~l1 part~l1 Universe~l1 x00000001 )
( Small_Magellenic_Cloud~l1 part~l1 Universe~l1 x00000001 )
( Solar_System~l1 part~l1 Milky_Way_Galaxy~l1 x00000001 )
( Sun~l1 part~l1 Solar_System~l1 x00000001 )
( Mercury~l1 part~l1 Solar_System~l1 x00000001 )
( Venus~l1 part~l1 Solar_System~l1 x00000001 )
( Earth~l1 part~l1 Solar_System~l1 x00000001 )
( Mars~l1 part~l1 Solar_System~l1 x00000001 )
( Jupiter~l1 part~l1 Solar_System~l1 x00000001 )
( Saturn~l1 part~l1 Solar_System~l1 x00000001 )
( Uranus~l1 part~l1 Solar_System~l1 x00000001 )
( Neptune~l1 part~l1 Solar_System~l1 x00000001 )
( Pluto~l1 part~l1 Solar_System~l1 x00000001 )
( Moon~l1 exemplar~l1 Earth~l1 x00000001 )
( Deimos~l1 exemplar~l1 Mars~l1 x00000001 )
( Phobos~l1 exemplar~l1 Mars~l1 x00000001 )
( Ganymede~l1 exemplar~l1 Jupiter~l1 x00000001 )
( Callisto~l1 exemplar~l1 Jupiter~l1 x00000001 )
( Io~l1 exemplar~l1 Jupiter~l1 x00000001 )
( Europa~l1 exemplar~l1 Jupiter~l1 x00000001 )
( Titan~l1 exemplar~l1 Jupiter~l1 x00000001 )
( Titan~l1 exemplar~l1 Saturn~l1 x00000001 )
( Charon~l1 exemplar~l1 Pluto~l1 x00000001 )
( Arctic~l1 part~l1 Earth~l1 x00000001 )
( North_Pole~l1 part~l1 Arctic~l1 x00000001 )
( Asia~l1 part~l1 Earth~l1 x00000001 )
( Europe~l1 part~l1 Earth~l1 x00000001 )
( North_America~l1 part~l1 Earth~l1 x00000001 )
( South_America~l1 part~l1 Earth~l1 x00000001 )
( Africa~l1 part~l1 Earth~l1 x00000001 )
( Antarctica~l1 part~l1 Earth~l1 x00000001 )
( Austrialasia~l1 part~l1 Earth~l1 x00000001 )
( South_Pole~l1 part~l1 Antarctica~l1 x00000001 )
( Middle_East~l1 part~l1 Earth~l1 x00000001 )
( Central_America~l1 part~l1 North_America~l1 x00000001 )
( North_American_Mainland~l1 part~l1 North_America~l1 x00000001 )
( Canada~l1 part~l1 North_American_Mainland~l1 x00000001 )
( United_States~l1 member United_States_of_America~l1 x00000001 )
( US~l1 member United_States_of_America~l1 x00000001 )
( U.S.~l1 member United_States_of_America~l1 x00000001 )
( USA~l1 member United_States_of_America~l1 x00000001 )
( America~l1 member United_States_of_America~l1 x00000001 )
( U.S.A.~l1 member United_States_of_America~l1 x00000001 )
( United_States_of_America~l1 part~l1 North_American_Mainland~l1 x00000001 )
( United_States~l1 part~l1 North_American_Mainland~l1 x00000001 )
( Switzerland~l1 part~l1 Europe~l1 x00000001 )
( Norway~l1 part~l1 Europe~l1 x00000001 )
( Iceland~l1 part~l1 Europe~l1 x00000001 )
( Andorra~l1 part~l1 Europe~l1 x00000001 )
( Catican~l1 member Vatican_City~l1 x00000001 )
( "Holy_See"~l1 member Vatican_City~l1 x00000001 )
( Vatican_City~l1 part~l1 Europe~l1 x00000001 )
( Monaco~l1 part~l1 Europe~l1 x00000001 )
( San_Marino~l1 member Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( Most_Serene_Republic_of_San_Marino~l1 part~l1 Europe~l1 x00000001 )
( Belarus~l1 part~l1 Europe~l1 x00000001 )
( Ukraine~l1 part~l1 Europe~l1 x00000001 )
( Moldova~l1 member Republic_of_Moldova~l1 x00000001 )
( Republic_of_Moldova~l1 part~l1 Europe~l1 x00000001 )
( Serbia~l1 part~l1 Europe~l1 x00000001 )
( Croatia~l1 part~l1 Europe~l1 x00000001 )
( Albania~l1 part~l1 Europe~l1 x00000001 )
( Macedonia~l1 member Republic_of_Macedonia~l1 x00000001 )
( Republic_of_Macedonia~l1 part~l1 Europe~l1 x00000001 )
( Montenegro~l1 part~l1 Europe~l1 x00000001 )
( Georgia~l1 part~l1 Europe~l1 x00000001 )
( Russia~l1 member Russian_Federation~l1 x00000001 )
( Russian_Federation~l1 part~l1 Europe~l1 x00000001 )
( Azerbaijan~l1 part~l1 Europe~l1 x00000001 )
( Kazakhstan~l1 part~l1 Europe~l1 x00000001 )
( Ireland~l1 member Republic_of_Ireland~l1 x00000001 )
( Republic_of_Ireland~l1 part~l1 Europe~l1 x00000001 )
( Estonia~l1 member Republic_of_Estonia~l1 x00000001 )
( Republic_of_Estonia~l1 part~l1 Europe~l1 x00000001 )
( Lithuania~l1 member Republic_of_Lithuania~l1 x00000001 )
( Republic_of_Lithuania~l1 part~l1 Europe~l1 x00000001 )
( Latvia~l1 member Republic_of_Latvia~l1 x00000001 )
( Republic_of_Latvia~l1 part~l1 Europe~l1 x00000001 )
( Bosnia_and_Herzegovina~l1 part~l1 Europe~l1 x00000001 )
( Slovakia~l1 part~l1 Europe~l1 x00000001 )
( Malta~l1 part~l1 Europe~l1 x00000001 )
( Faroe_Islands~l1 part~l1 Europe~l1 x00000001 )
( Czechoslovakia~l1 member Czech_Republic~l1 x00000001 )
( Czech_Republic~l1 part~l1 Europe~l1 x00000001 )
( Slovenia~l1 part~l1 Europe~l1 x00000001 )
( European_Union~l1 part~l1 Europe~l1 x00000001 )
( Liechtenstein~l1 member Principality_of_Liechtenstein~l1 x00000001 )
( Principality_of_Liechtenstein~l1 part~l1 European_Union~l1 x00000001 )
( Great_Britain~l1 member United_Kingdom~l1 x00000001 )
( Britain~l1 member United_Kingdom~l1 x00000001 )
( UK~l1 member United_Kingdom~l1 x00000001 )
( United_Kingdom~l1 part~l1 European_Union~l1 x00000001 )
( Germany~l1 part~l1 European_Union~l1 x00000001 )
( France~l1 part~l1 European_Union~l1 x00000001 )
( Italy~l1 part~l1 European_Union~l1 x00000001 )
( Spain~l1 part~l1 European_Union~l1 x00000001 )
( Portugal~l1 part~l1 European_Union~l1 x00000001 )
( Belgium~l1 part~l1 European_Union~l1 x00000001 )
( Holland~l1 member Netherlands~l1 x00000001 )
( Netherlands~l1 part~l1 European_Union~l1 x00000001 )
( Poland~l1 part~l1 European_Union~l1 x00000001 )
( Denmark~l1 part~l1 European_Union~l1 x00000001 )
( Sweden~l1 part~l1 European_Union~l1 x00000001 )
( Greece~l1 part~l1 European_Union~l1 x00000001 )
( Finland~l1 part~l1 European_Union~l1 x00000001 )
( Austria~l1 part~l1 European_Union~l1 x00000001 )
( Hungary~l1 part~l1 European_Union~l1 x00000001 )
( Romania~l1 part~l1 European_Union~l1 x00000001 )
( Bulgaria~l1 part~l1 European_Union~l1 x00000001 )
( Near_East~l1 member Middle_East_Asia~l1 x00000001 )
( Middle_East_Asia~l1 part~l1 Asia~l1 x00000001 )
( Far_East~l1 part~l1 Asia~l1 x00000001 )
( Laos~l1 member Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Lao_People_'s_Democratic_Republic~l1 part~l1 Far_East~l1 x00000001 )
( "East_Timor"~l1 member Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( "Timor-Leste"~l1 member Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( Democratic_Republic_of_Timor-Leste~l1 part~l1 Far_East~l1 x00000001 )
( ROC~l1 member Republic_of_China~l1 x00000001 )
( Taiwan~l1 member Republic_of_China~l1 x00000001 )
( Republic_of_China~l1 part~l1 Far_East~l1 x00000001 )
( Singapore~l1 member Republic_of_Singapore~l1 x00000001 )
( Republic_of_Singapore~l1 part~l1 Far_East~l1 x00000001 )
( Bhutan~l1 member Kingdom_of_Bhutan~l1 x00000001 )
( Kingdom_of_Bhutan~l1 part~l1 Far_East~l1 x00000001 )
( Uzbekistan~l1 part~l1 Far_East~l1 x00000001 )
( Turkmenistan~l1 part~l1 Far_East~l1 x00000001 )
( Bangladesh~l1 part~l1 Far_East~l1 x00000001 )
( Burma~l1 member Union_of_Myanmar~l1 x00000001 )
( Myanmar~l1 member Union_of_Myanmar~l1 x00000001 )
( Union_of_Myanmar~l1 part~l1 Far_East~l1 x00000001 )
( Cambodia~l1 member Kingdom_of_Cambodia~l1 x00000001 )
( Kingdom_of_Cambodia~l1 part~l1 Far_East~l1 x00000001 )
( Indonesia~l1 part~l1 Far_East~l1 x00000001 )
( Philippines~l1 part~l1 Far_East~l1 x00000001 )
( "Sri_Lanka"~l1 member Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( Ceylon~l1 member Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( Democratic_Socialist_Republic_of_Sri_Lanka~l1 part~l1 Far_East~l1 x00000001 )
( Tajikistan~l1 part~l1 Far_East~l1 x00000001 )
( Pakistan~l1 part~l1 Far_East~l1 x00000001 )
( Kyrgyzstan~l1 part~l1 Far_East~l1 x00000001 )
( Japan~l1 part~l1 Far_East~l1 x00000001 )
( South_Korea~l1 member Republic_of_Korea~l1 x00000001 )
( Republic_of_Korea~l1 part~l1 Far_East~l1 x00000001 )
( North_Korea~l1 member Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Democratic_People_'s_Republic_of_Korea~l1 part~l1 Far_East~l1 x00000001 )
( China~l1 member People_'s_Republic_of_China~l1 x00000001 )
( People_'s_Republic_of_China~l1 part~l1 Far_East~l1 x00000001 )
( Thailand~l1 part~l1 Far_East~l1 x00000001 )
( "Viet_Nam"~l1 member Vietnam~l1 x00000001 )
( Vietnam~l1 part~l1 Far_East~l1 x00000001 )
( Malaysia~l1 part~l1 Far_East~l1 x00000001 )
( India~l1 part~l1 Far_East~l1 x00000001 )
( Russian_Federation~l1 part~l1 Far_East~l1 x00000001 )
( Mongolia~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Tibet~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Hong_Kong~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Turkey~l1 part~l1 Middle_East~l1 x00000001 )
( Egypt~l1 part~l1 Middle_East~l1 x00000001 )
( Lebanon~l1 part~l1 Middle_East~l1 x00000001 )
( Jordan~l1 part~l1 Middle_East~l1 x00000001 )
( Israel~l1 part~l1 Middle_East~l1 x00000001 )
( Syria~l1 member Syrian_Arab_Republic~l1 x00000001 )
( Syrian_Arab_Republic~l1 part~l1 Middle_East~l1 x00000001 )
( Afghanistan~l1 part~l1 Middle_East~l1 x00000001 )
( Armenia~l1 part~l1 Middle_East~l1 x00000001 )
( Cyprus~l1 part~l1 Middle_East~l1 x00000001 )
( Iraq~l1 part~l1 Middle_East~l1 x00000001 )
( Iran~l1 member Islamic_Republic_of_Iran~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 part~l1 Middle_East~l1 x00000001 )
( Kuwait~l1 part~l1 Middle_East~l1 x00000001 )
( Bahrain~l1 part~l1 Middle_East~l1 x00000001 )
( Oman~l1 member Sultanate_of_Oman~l1 x00000001 )
( Sultanate_of_Oman~l1 part~l1 Middle_East~l1 x00000001 )
( Qatar~l1 part~l1 Middle_East~l1 x00000001 )
( K.S.A.~l1 member Saudi_Arabia~l1 x00000001 )
( Saudi_Arabia~l1 part~l1 Middle_East~l1 x00000001 )
( Yemen~l1 part~l1 Middle_East~l1 x00000001 )
( UAE~l1 member United_Arab_Emirates~l1 x00000001 )
( United_Arab_Emirates~l1 part~l1 Middle_East~l1 x00000001 )
( Palestine~l1 part~l1 Middle_East~l1 x00000001 )
( Brazil~l1 part~l1 South_America~l1 x00000001 )
( Mexico~l1 part~l1 South_America~l1 x00000001 )
( Peru~l1 part~l1 South_America~l1 x00000001 )
( Ecuador~l1 part~l1 South_America~l1 x00000001 )
( Colombia~l1 member Republic_of_Colombia~l1 x00000001 )
( Republic_of_Colombia~l1 part~l1 South_America~l1 x00000001 )
( Bolivia~l1 part~l1 South_America~l1 x00000001 )
( Uruguay~l1 member Republica_Oriental_del_Uruguay~l1 x00000001 )
( Republica_Oriental_del_Uruguay~l1 part~l1 South_America~l1 x00000001 )
( Paraguay~l1 part~l1 South_America~l1 x00000001 )
( Chile~l1 part~l1 South_America~l1 x00000001 )
( Argentina~l1 part~l1 South_America~l1 x00000001 )
( Suriname~l1 member Republic_of_Suriname~l1 x00000001 )
( Republic_of_Suriname~l1 part~l1 South_America~l1 x00000001 )
( Venezuela~l1 member Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Bolivarian_Republic_of_Venezuela~l1 part~l1 South_America~l1 x00000001 )
( Australia~l1 part~l1 Austrialasia~l1 x00000001 )
( New_Zealand~l1 part~l1 Austrialasia~l1 x00000001 )
( "Papua_New_Guinea"~l1 member Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( Independent_State_of_Papua_New_Guinea~l1 part~l1 Austrialasia~l1 x00000001 )
( Ivory_Coast~l1 member Cote_d'Ivoire~l1 x00000001 )
( Cote_d'Ivoire~l1 part~l1 Africa~l1 x00000001 )
( Comoros~l1 member Union_of_the_Comoros~l1 x00000001 )
( Union_of_the_Comoros~l1 part~l1 Africa~l1 x00000001 )
( Chad~l1 member Republic_of_Chad~l1 x00000001 )
( Republic_of_Chad~l1 part~l1 Africa~l1 x00000001 )
( Nigeria~l1 part~l1 Africa~l1 x00000001 )
( Liberia~l1 part~l1 Africa~l1 x00000001 )
( Somalia~l1 part~l1 Africa~l1 x00000001 )
( Malawi~l1 part~l1 Africa~l1 x00000001 )
( Djibouti~l1 member Republic_of_Djibouti~l1 x00000001 )
( Republic_of_Djibouti~l1 part~l1 Africa~l1 x00000001 )
( Angola~l1 part~l1 Africa~l1 x00000001 )
( Botswana~l1 part~l1 Africa~l1 x00000001 )
( Benin~l1 member Republic_of_Benin~l1 x00000001 )
( Republic_of_Benin~l1 part~l1 Africa~l1 x00000001 )
( Zimbabwe~l1 member Republic_of_Zimbabwe~l1 x00000001 )
( Southern_Rhodesia~l1 member Republic_of_Zimbabwe~l1 x00000001 )
( Republic_of_Zimbabwe~l1 part~l1 Africa~l1 x00000001 )
( Kenya~l1 member Republic_of_Kenya~l1 x00000001 )
( Republic_of_Kenya~l1 part~l1 Africa~l1 x00000001 )
( Lesotho~l1 member Kingdom_of_Lesotho~l1 x00000001 )
( Kingdom_of_Lesotho~l1 part~l1 Africa~l1 x00000001 )
( Niger~l1 member Republic_of_Niger~l1 x00000001 )
( Republic_of_Niger~l1 part~l1 Africa~l1 x00000001 )
( Senegal~l1 part~l1 Africa~l1 x00000001 )
( Madagascar~l1 part~l1 Africa~l1 x00000001 )
( Namibia~l1 part~l1 Africa~l1 x00000001 )
( Sierra_Leone~l1 part~l1 Africa~l1 x00000001 )
( "DR_Congo"~l1 member Democratic_Republic_of_the_Congo~l1 x00000001 )
( DRC~l1 member Democratic_Republic_of_the_Congo~l1 x00000001 )
( RDC~l1 member Democratic_Republic_of_the_Congo~l1 x00000001 )
( Congo-Kinshasa~l1 member Democratic_Republic_of_the_Congo~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 part~l1 Africa~l1 x00000001 )
( Cape-Verde~l1 member Republic_of_Cape_Verde~l1 x00000001 )
( "Cape_Verde"~l1 member Republic_of_Cape_Verde~l1 x00000001 )
( Republic_of_Cape_Verde~l1 part~l1 Africa~l1 x00000001 )
( Congo~l1 member Republic_of_the_Congo~l1 x00000001 )
( Congo-Brazzaville~l1 member Republic_of_the_Congo~l1 x00000001 )
( Republic_of_the_Congo~l1 part~l1 Africa~l1 x00000001 )
( Burundi~l1 member Republic_of_Burundi~l1 x00000001 )
( Republic_of_Burundi~l1 part~l1 Africa~l1 x00000001 )
( Equatorial_Guinea~l1 member Republic_of_Equatorial_Guinea~l1 x00000001 )
( Republic_of_Equatorial_Guinea~l1 part~l1 Africa~l1 x00000001 )
( Burkina~l1 member Burkina_Faso~l1 x00000001 )
( Burkina_Faso~l1 part~l1 Africa~l1 x00000001 )
( Tanzania~l1 member United_Republic_of_Tanzania~l1 x00000001 )
( United_Republic_of_Tanzania~l1 part~l1 Africa~l1 x00000001 )
( Egypt~l1 part~l1 Africa~l1 x00000001 )
( South_Africa~l1 part~l1 Africa~l1 x00000001 )
( Morocco~l1 part~l1 Africa~l1 x00000001 )
( Algeria~l1 part~l1 Africa~l1 x00000001 )
( Tunisia~l1 part~l1 Africa~l1 x00000001 )
( Uganda~l1 part~l1 Africa~l1 x00000001 )
( Ghana~l1 part~l1 Africa~l1 x00000001 )
( Gambia~l1 part~l1 Africa~l1 x00000001 )
( Mauritania~l1 part~l1 Africa~l1 x00000001 )
( Mali~l1 part~l1 Africa~l1 x00000001 )
( Guyana~l1 part~l1 Africa~l1 x00000001 )
( Cameroon~l1 part~l1 Africa~l1 x00000001 )
( Central_African_Republic~l1 part~l1 Africa~l1 x00000001 )
( Eritrea~l1 part~l1 Africa~l1 x00000001 )
( Gabon~l1 part~l1 Africa~l1 x00000001 )
( Mauritius~l1 part~l1 Africa~l1 x00000001 )
( Guinea-Bissau~l1 part~l1 Africa~l1 x00000001 )
( Libya~l1 member Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 part~l1 Africa~l1 x00000001 )
( Mozambique~l1 part~l1 Africa~l1 x00000001 )
( Sudan~l1 part~l1 Africa~l1 x00000001 )
( Ethiopia~l1 part~l1 Africa~l1 x00000001 )
( Togo~l1 part~l1 Africa~l1 x00000001 )
( Rwanda~l1 part~l1 Africa~l1 x00000001 )
( Swaziland~l1 part~l1 Africa~l1 x00000001 )
( Guinea~l1 member Republic_of_Guinea~l1 x00000001 )
( Republic_of_Guinea~l1 part~l1 Africa~l1 x00000001 )
( Nicaragua~l1 part~l1 Central_America~l1 x00000001 )
( Belize~l1 part~l1 Central_America~l1 x00000001 )
( Costa_Rica~l1 part~l1 Central_America~l1 x00000001 )
( Guatemala~l1 part~l1 Central_America~l1 x00000001 )
( Panama~l1 part~l1 Central_America~l1 x00000001 )
( Honduras~l1 part~l1 Central_America~l1 x00000001 )
( El_Salvador~l1 part~l1 Central_America~l1 x00000001 )
( Sahara~l1 member Sahara_Desert~l1 x00000001 )
( Sahara_Desert~l1 part~l1 Africa~l1 x00000001 )
( Australian_Desert~l1 part~l1 Australia~l1 x00000001 )
( Gobi~l1 member Gobi_Desert~l1 x00000001 )
( Gobi_Desert~l1 part~l1 Asia~l1 x00000001 )
( Kalahari~l1 member Kalahari_Desert~l1 x00000001 )
( Kalahari_Desert~l1 part~l1 Asia~l1 x00000001 )
( Atlantic~l1 member Atlantic_Ocean~l1 x00000001 )
( Atlantic_Ocean~l1 part~l1 Earth~l1 x00000001 )
( Pacfic~l1 member Pacific_Ocean~l1 x00000001 )
( Pacific_Ocean~l1 part~l1 Earth~l1 x00000001 )
( Indian_Ocean~l1 part~l1 Earth~l1 x00000001 )
( Arctic_Ocean~l1 part~l1 Earth~l1 x00000001 )
( Southern_Ocean~l1 part~l1 Earth~l1 x00000001 )
( Brunei_Darussalam~l1 member Brunei_Abode_of_Peace~l1 x00000001 )
( Brunei~l1 member Brunei_Abode_of_Peace~l1 x00000001 )
( Brunei_Abode_of_Peace~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Samoa~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( New_Zealand~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Federated_States_of_Micronesia~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Palau~l1 member Republic_of_Palau~l1 x00000001 )
( Republic_of_Palau~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Vanuatu~l1 member Republic_of_Vanuatu~l1 x00000001 )
( Republic_of_Vanuatu~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Tonga~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Black_Sea~l1 part~l1 Earth~l1 x00000001 )
( Caspian_Sea~l1 part~l1 Earth~l1 x00000001 )
( Persian_Gulf~l1 part~l1 Earth~l1 x00000001 )
( Red_Sea~l1 part~l1 Earth~l1 x00000001 )
( Mediterranean~l1 member Mediterranean_Sea~l1 x00000001 )
( Mediterranean_Sea~l1 part~l1 Earth~l1 x00000001 )
( Arabian_Sea~l1 part~l1 Earth~l1 x00000001 )
( Dead_Sea~l1 part~l1 Earth~l1 x00000001 )
( Gulf_of_Adan~l1 part~l1 Arabian_Sea~l1 x00000001 )
( Arabian_Sea~l1 part~l1 Indian_Ocean~l1 x00000001 )
( Persian_Gulf~l1 part~l1 Indian_Ocean~l1 x00000001 )
( Seychelles~l1 member Republic_of_Seychelles~l1 x00000001 )
( Republic_of_Seychelles~l1 part~l1 Indian_Ocean~l1 x00000001 )
( Maldives~l1 member Republic_of_Maldives~l1 x00000001 )
( Republic_of_Maldives~l1 part~l1 Indian_Ocean~l1 x00000001 )
( Adriatic~l1 member Adriatic_Sea~l1 x00000001 )
( Adriatic_Sea~l1 part~l1 Mediterranean_Sea~l1 x00000001 )
( Aegean~l1 member Aegean_Sea~l1 x00000001 )
( Aegean_Sea~l1 part~l1 Mediterranean_Sea~l1 x00000001 )
( West_Indies~l1 part~l1 Caribbean_Sea~l1 x00000001 )
( Bahamas~l1 part~l1 West_Indies~l1 x00000001 )
( Barbados~l1 part~l1 West_Indies~l1 x00000001 )
( Dominican_Republic~l1 part~l1 West_Indies~l1 x00000001 )
( Trinidad_and_Tobago~l1 part~l1 West_Indies~l1 x00000001 )
( Saint_Lucia~l1 part~l1 West_Indies~l1 x00000001 )
( Saint_Vincent_and_the_Grenadines~l1 part~l1 West_Indies~l1 x00000001 )
( Jamaica~l1 part~l1 West_Indies~l1 x00000001 )
( "Saint_Kitts_and_Nevis"~l1 member Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( Federation_of_Saint_Kitts_and_Nevis~l1 part~l1 West_Indies~l1 x00000001 )
( Puerto_Rico~l1 part~l1 West_Indies~l1 x00000001 )
( Antigua_and_Barbuda~l1 part~l1 West_Indies~l1 x00000001 )
( Cuba~l1 part~l1 West_Indies~l1 x00000001 )
( Dominica~l1 member Commonwealth_of_Dominica~l1 x00000001 )
( Commonwealth_of_Dominica~l1 part~l1 West_Indies~l1 x00000001 )
( Haiti~l1 part~l1 West_Indies~l1 x00000001 )
( Grenada~l1 part~l1 West_Indies~l1 x00000001 )
( Micronesia~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Melanesia~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( "Sea_of_Cortez"~l1 member Gulf_of_California~l1 x00000001 )
( Gulf_of_California~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Tuvalu~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Niue~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Fiji~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Gulf_of_Mexico~l1 part~l1 Atlantic_Ocean~l1 x00000001 )
( Gulf_of_Guinea~l1 part~l1 Atlantic_Ocean~l1 x00000001 )
( Bermuda~l1 part~l1 Atlantic_Ocean~l1 x00000001 )
( Greenland~l1 part~l1 Atlantic_Ocean~l1 x00000001 )
( Nauru~l1 member Republic_of_Nauru~l1 x00000001 )
( Republic_of_Nauru~l1 part~l1 Micronesia~l1 x00000001 )
( Kiribati~l1 part~l1 Micronesia~l1 x00000001 )
( Gulf_of_Guinea~l1 part~l1 Earth~l1 x00000001 )
( Sao_Tome_and_Principe~l1 member Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( Democratic_Republic_of_Sao_Tome_and_Principe~l1 part~l1 Gulf_of_Guinea~l1 x00000001 )
( Oz~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Atlantis~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Country_of_the_Blind~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Erewhon~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Lilliput~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Utopia~l1 part~l1 Pacific_Ocean~l1 x00000001 )
( Shangri-La~l1 part~l1 Tibet~l1 x00000001 )
( Aruba~l1 part~l1 Mediterranean_Sea~l1 x00000001 )
( Alabama~l1 part~l1 United_States_of_America~l1 x00000001 )
( Alaska~l1 part~l1 United_States_of_America~l1 x00000001 )
( Arizona~l1 part~l1 United_States_of_America~l1 x00000001 )
( Arkansas~l1 part~l1 United_States_of_America~l1 x00000001 )
( California~l1 part~l1 United_States_of_America~l1 x00000001 )
( Connecticut~l1 part~l1 United_States_of_America~l1 x00000001 )
( Colorado~l1 part~l1 United_States_of_America~l1 x00000001 )
( Delaware~l1 part~l1 United_States_of_America~l1 x00000001 )
( Florida~l1 part~l1 United_States_of_America~l1 x00000001 )
( Georgia~l1 part~l1 United_States_of_America~l1 x00000001 )
( Hawaii~l1 part~l1 United_States_of_America~l1 x00000001 )
( Idaho~l1 part~l1 United_States_of_America~l1 x00000001 )
( Illinois~l1 part~l1 United_States_of_America~l1 x00000001 )
( Indiana~l1 part~l1 United_States_of_America~l1 x00000001 )
( Iowa~l1 part~l1 United_States_of_America~l1 x00000001 )
( Kansas~l1 part~l1 United_States_of_America~l1 x00000001 )
( Kentucky~l1 part~l1 United_States_of_America~l1 x00000001 )
( Louisiana~l1 part~l1 United_States_of_America~l1 x00000001 )
( Maine~l1 part~l1 United_States_of_America~l1 x00000001 )
( Maryland~l1 part~l1 United_States_of_America~l1 x00000001 )
( Massachusetts~l1 part~l1 United_States_of_America~l1 x00000001 )
( Michigan~l1 part~l1 United_States_of_America~l1 x00000001 )
( Minnesota~l1 part~l1 United_States_of_America~l1 x00000001 )
( Mississippi~l1 part~l1 United_States_of_America~l1 x00000001 )
( Missouri~l1 part~l1 United_States_of_America~l1 x00000001 )
( Montana~l1 part~l1 United_States_of_America~l1 x00000001 )
( Nebraska~l1 part~l1 United_States_of_America~l1 x00000001 )
( Nevada~l1 part~l1 United_States_of_America~l1 x00000001 )
( New_Hampshire~l1 part~l1 United_States_of_America~l1 x00000001 )
( New_Jersey~l1 part~l1 United_States_of_America~l1 x00000001 )
( New_Mexico~l1 part~l1 United_States_of_America~l1 x00000001 )
( New_York~l1 part~l1 United_States_of_America~l1 x00000001 )
( North_Carolina~l1 part~l1 United_States_of_America~l1 x00000001 )
( North_Dakota~l1 part~l1 United_States_of_America~l1 x00000001 )
( Ohio~l1 part~l1 United_States_of_America~l1 x00000001 )
( Oklahoma~l1 part~l1 United_States_of_America~l1 x00000001 )
( Oregon~l1 part~l1 United_States_of_America~l1 x00000001 )
( Pennsylvania~l1 part~l1 United_States_of_America~l1 x00000001 )
( Rhode_Island~l1 part~l1 United_States_of_America~l1 x00000001 )
( South_Carolina~l1 part~l1 United_States_of_America~l1 x00000001 )
( South_Dakota~l1 part~l1 United_States_of_America~l1 x00000001 )
( Tennessee~l1 part~l1 United_States_of_America~l1 x00000001 )
( Texas~l1 part~l1 United_States_of_America~l1 x00000001 )
( Utah~l1 part~l1 United_States_of_America~l1 x00000001 )
( Vermont~l1 part~l1 United_States_of_America~l1 x00000001 )
( Virginia~l1 part~l1 United_States_of_America~l1 x00000001 )
( Washington~l1 part~l1 United_States_of_America~l1 x00000001 )
( West_Virginia~l1 part~l1 United_States_of_America~l1 x00000001 )
( Wisconsin~l1 part~l1 United_States_of_America~l1 x00000001 )
( Wyoming~l1 part~l1 United_States_of_America~l1 x00000001 )
( England~l1 part~l1 United_Kingdom~l1 x00000001 )
( Scotland~l1 part~l1 United_Kingdom~l1 x00000001 )
( Wales~l1 part~l1 United_Kingdom~l1 x00000001 )
( Northern_Ireland~l1 part~l1 United_Kingdom~l1 x00000001 )
( Aberdeen~l1 part~l1 England~l1 x00000001 )
( Basildon~l1 part~l1 England~l1 x00000001 )
( Belfast~l1 part~l1 England~l1 x00000001 )
( Birmingham~l1 part~l1 England~l1 x00000001 )
( Blackburn~l1 part~l1 England~l1 x00000001 )
( Blackpool~l1 part~l1 England~l1 x00000001 )
( Bolton~l1 part~l1 England~l1 x00000001 )
( Bournemouth~l1 part~l1 England~l1 x00000001 )
( Bradford~l1 part~l1 England~l1 x00000001 )
( Brighton~l1 part~l1 England~l1 x00000001 )
( Bristol~l1 part~l1 England~l1 x00000001 )
( Cambridge~l1 part~l1 England~l1 x00000001 )
( Cardiff~l1 part~l1 England~l1 x00000001 )
( Colchester~l1 part~l1 England~l1 x00000001 )
( Coventry~l1 part~l1 England~l1 x00000001 )
( Crawley~l1 part~l1 England~l1 x00000001 )
( Derby~l1 part~l1 England~l1 x00000001 )
( Dudley~l1 part~l1 England~l1 x00000001 )
( Dundee~l1 part~l1 England~l1 x00000001 )
( Eastbourne~l1 part~l1 England~l1 x00000001 )
( Edinburgh~l1 part~l1 England~l1 x00000001 )
( Exeter~l1 part~l1 England~l1 x00000001 )
( Glasgow~l1 part~l1 England~l1 x00000001 )
( Gloucester~l1 part~l1 England~l1 x00000001 )
( Huddersfield~l1 part~l1 England~l1 x00000001 )
( Ipswich~l1 part~l1 England~l1 x00000001 )
( Kingston_upon_Hull~l1 part~l1 England~l1 x00000001 )
( Leeds~l1 part~l1 England~l1 x00000001 )
( Leicester~l1 part~l1 England~l1 x00000001 )
( Liverpool~l1 part~l1 England~l1 x00000001 )
( London~l1 part~l1 England~l1 x00000001 )
( Luton~l1 part~l1 England~l1 x00000001 )
( Manchester~l1 part~l1 England~l1 x00000001 )
( Middlesbrough~l1 part~l1 England~l1 x00000001 )
( Milton_Keynes~l1 part~l1 England~l1 x00000001 )
( Newcastle_upon_Tyne~l1 part~l1 England~l1 x00000001 )
( Newport~l1 part~l1 England~l1 x00000001 )
( Northampton~l1 part~l1 England~l1 x00000001 )
( Norwich~l1 part~l1 England~l1 x00000001 )
( Nottingham~l1 part~l1 England~l1 x00000001 )
( Oldbury~l1 part~l1 England~l1 x00000001 )
( Smethwick~l1 part~l1 England~l1 x00000001 )
( Oldham~l1 part~l1 England~l1 x00000001 )
( Oxford~l1 part~l1 England~l1 x00000001 )
( Peterborough~l1 part~l1 England~l1 x00000001 )
( Plymouth~l1 part~l1 England~l1 x00000001 )
( Poole~l1 part~l1 England~l1 x00000001 )
( Portsmouth~l1 part~l1 England~l1 x00000001 )
( Preston~l1 part~l1 England~l1 x00000001 )
( Rotherham~l1 part~l1 England~l1 x00000001 )
( Sheffield~l1 part~l1 England~l1 x00000001 )
( Slough~l1 part~l1 England~l1 x00000001 )
( Southampton~l1 part~l1 England~l1 x00000001 )
( Southend-on-Sea~l1 part~l1 England~l1 x00000001 )
( St._Helens~l1 part~l1 England~l1 x00000001 )
( Stockport~l1 part~l1 England~l1 x00000001 )
( Stoke-on-Trent~l1 part~l1 England~l1 x00000001 )
( Sunderland~l1 part~l1 England~l1 x00000001 )
( Sutton_Coldfield~l1 part~l1 England~l1 x00000001 )
( Swansea~l1 part~l1 England~l1 x00000001 )
( Swindon~l1 part~l1 England~l1 x00000001 )
( Walsall~l1 part~l1 England~l1 x00000001 )
( Watford~l1 part~l1 England~l1 x00000001 )
( West_Bromwich~l1 part~l1 England~l1 x00000001 )
( Woking~l1 part~l1 England~l1 x00000001 )
( Byfleet~l1 part~l1 England~l1 x00000001 )
( Wolverhampton~l1 part~l1 England~l1 x00000001 )
( Dead_Sea~l1 part~l1 Jordan~l1 x00000001 )
( O'ahu~l1 part~l1 Hawaii~l1 x00000001 )
( Big_Island~l1 part~l1 Hawaii~l1 x00000001 )
( Maui~l1 part~l1 Hawaii~l1 x00000001 )
( Kaua'i~l1 part~l1 Hawaii~l1 x00000001 )
( Lana'i~l1 part~l1 Hawaii~l1 x00000001 )
( Ala_Moana~l1 part~l1 O'ahu~l1 x00000001 )
( Waikiki~l1 part~l1 O'ahu~l1 x00000001 )
( Hokkaido~l1 part~l1 Japan~l1 x00000001 )
( Honshu~l1 part~l1 Japan~l1 x00000001 )
( Shikoku~l1 part~l1 Japan~l1 x00000001 )
( Kyushu~l1 part~l1 Japan~l1 x00000001 )
( Awaji~l1 part~l1 Japan~l1 x00000001 )
( Bishop_Museum~l1 part~l1 O'ahu~l1 x00000001 )
( Dole_Plantation~l1 part~l1 O'ahu~l1 x00000001 )
( Waikiki_Aquarium~l1 part~l1 O'ahu~l1 x00000001 )
( Hawaiian_Waters_Adventure_Park~l1 part~l1 O'ahu~l1 x00000001 )
( Pearl_Harbor~l1 part~l1 O'ahu~l1 x00000001 )
( Hanauma_Bay~l1 part~l1 O'ahu~l1 x00000001 )
( Diamond_Head~l1 member Diamond_Head_Crater~l1 x00000001 )
( Diamond_Head_Crater~l1 part~l1 O'ahu~l1 x00000001 )
( North_Shore~l1 part~l1 O'ahu~l1 x00000001 )
( Polynesian_Cultural_Center~l1 part~l1 O'ahu~l1 x00000001 )
( Waikiki_Beach~l1 part~l1 O'ahu~l1 x00000001 )
( Arizona_Memorial~l1 part~l1 O'ahu~l1 x00000001 )
( Honolulu_Airport~l1 part~l1 O'ahu~l1 x00000001 )
( Aloha_Stadium~l1 part~l1 O'ahu~l1 x00000001 )
( Punchbowl_Cemetery~l1 part~l1 O'ahu~l1 x00000001 )
( Pali_Lookout~l1 part~l1 O'ahu~l1 x00000001 )
( Iolani_Palace~l1 part~l1 O'ahu~l1 x00000001 )
( Kailua_Beach_Park~l1 part~l1 O'ahu~l1 x00000001 )
( Honolulu_Zoo~l1 part~l1 O'ahu~l1 x00000001 )
( Waimea_Bay~l1 part~l1 O'ahu~l1 x00000001 )
( Shark_'s_Cove~l1 part~l1 O'ahu~l1 x00000001 )
( Atlantis_Submarines~l1 part~l1 O'ahu~l1 x00000001 )
( International_Market~l1 part~l1 O'ahu~l1 x00000001 )
( University_of_Hawaii~l1 part~l1 O'ahu~l1 x00000001 )
( Sea_Life_Park~l1 part~l1 O'ahu~l1 x00000001 )
( Kailua~l1 part~l1 Hawaii~l1 x00000001 )
( Kaneohe~l1 part~l1 Hawaii~l1 x00000001 )
( Pearl_City~l1 part~l1 Hawaii~l1 x00000001 )
( Aiea~l1 part~l1 Hawaii~l1 x00000001 )
( Hawaii_Kai~l1 part~l1 Hawaii~l1 x00000001 )
( Kona~l1 part~l1 Hawaii~l1 x00000001 )
( Hilo~l1 part~l1 Hawaii~l1 x00000001 )
( Haleiwa~l1 part~l1 Hawaii~l1 x00000001 )
( Ewa~l1 part~l1 Hawaii~l1 x00000001 )
( Mililani~l1 part~l1 Hawaii~l1 x00000001 )
( Fresno~l1 part~l1 California~l1 x00000001 )
( Oakland~l1 part~l1 California~l1 x00000001 )
( San_Francisco~l1 part~l1 California~l1 x00000001 )
( Los_Angeles~l1 part~l1 California~l1 x00000001 )
( San_Jose~l1 part~l1 California~l1 x00000001 )
( Sacremento~l1 part~l1 California~l1 x00000001 )
( San_Diego~l1 part~l1 California~l1 x00000001 )
( San_Luis_Obispo~l1 part~l1 California~l1 x00000001 )
( Seattle~l1 part~l1 Washington~l1 x00000001 )
( Baltimore~l1 part~l1 Maryland~l1 x00000001 )
( Portland~l1 part~l1 Oregon~l1 x00000001 )
( Chicago~l1 part~l1 Illinois~l1 x00000001 )
( Miami~l1 part~l1 Florida~l1 x00000001 )
( Tampa~l1 part~l1 Florida~l1 x00000001 )
( Jacksonville~l1 part~l1 Florida~l1 x00000001 )
( Orlando~l1 part~l1 Florida~l1 x00000001 )
( Savannah~l1 part~l1 Georgia~l1 x00000001 )
( New_Orleans~l1 part~l1 Louisiana~l1 x00000001 )
( Dallas~l1 part~l1 Texas~l1 x00000001 )
( Houston~l1 part~l1 Texas~l1 x00000001 )
( San_Antonio~l1 part~l1 Texas~l1 x00000001 )
( Fort_Worth~l1 part~l1 Texas~l1 x00000001 )
( El_Paso~l1 part~l1 Texas~l1 x00000001 )
( New_York_City~l1 part~l1 New_York~l1 x00000001 )
( New_York~l1 part~l1 New_York~l1 x00000001 )
( Las_Vegas~l1 part~l1 Nevada~l1 x00000001 )
( Reno~l1 part~l1 Nevada~l1 x00000001 )
( Detroit~l1 part~l1 Michigan~l1 x00000001 )
( Pittsburgh~l1 part~l1 Pennsylvania~l1 x00000001 )
( Philadelphia~l1 part~l1 Pennsylvania~l1 x00000001 )
( Indianapolis~l1 part~l1 Indiana~l1 x00000001 )
( Colorado_Springs~l1 part~l1 Colorado~l1 x00000001 )
( Tucson~l1 part~l1 Arizona~l1 x00000001 )
( Tulsa~l1 part~l1 Oklahoma~l1 x00000001 )
( Jefferson_City~l1 part~l1 Missouri~l1 x00000001 )
( Carson_City~l1 part~l1 Nevada~l1 x00000001 )
( Albuquerque~l1 part~l1 New_Mexico~l1 x00000001 )
( Grand_Canyon~l1 part~l1 Arizona~l1 x00000001 )
( Statue_of_Liberty~l1 part~l1 New_York_City~l1 x00000001 )
( Golden_Gate_Bridge~l1 part~l1 San_Francisco~l1 x00000001 )
( Coit_Tower~l1 part~l1 San_Francisco~l1 x00000001 )
( cable_car~l1 part~l1 San_Francisco~l1 x00000001 )
( Fisherman_'s_Wharf~l1 part~l1 San_Francisco~l1 x00000001 )
( Space_Needle~l1 part~l1 Seattle~l1 x00000001 )
( Washington_Monument~l1 part~l1 Washington_D.C.~l1 x00000001 )
( Lincoln_Memorial~l1 part~l1 Washington_D.C.~l1 x00000001 )
( Library_of_Congress~l1 part~l1 Washington_D.C.~l1 x00000001 )
( Smithsonian~l1 member Smithsonian_Museum~l1 x00000001 )
( Smithsonian_Museum~l1 part~l1 Washington_D.C.~l1 x00000001 )
( National_Zoo~l1 part~l1 Washington_D.C.~l1 x00000001 )
( White_House~l1 part~l1 Washington_D.C.~l1 x00000001 )
( Leaning_Tower_of_Pisa~l1 part~l1 Italy~l1 x00000001 )
( Empire_State_Building~l1 part~l1 New_York_City~l1 x00000001 )
( Stonehenge~l1 part~l1 England~l1 x00000001 )
( Versailles~l1 part~l1 France~l1 x00000001 )
( Great_Wall_of_China~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Mount_Rushmore~l1 part~l1 Washington~l1 x00000001 )
( Musee_d'Orsay~l1 part~l1 Paris~l1 x00000001 )
( Notre_Dame~l1 part~l1 Paris~l1 x00000001 )
( Eiffel_Tower~l1 part~l1 Paris~l1 x00000001 )
( University_of_Paris~l1 part~l1 Paris~l1 x00000001 )
( Taj_Mahal~l1 part~l1 India~l1 x00000001 )
( Colosseum~l1 part~l1 Rome~l1 x00000001 )
( Coliseum~l1 part~l1 Rome~l1 x00000001 )
( Tower_of_London~l1 part~l1 London~l1 x00000001 )
( Pyramids~l1 member Great_Pyramids~l1 x00000001 )
( Great_Pyramids~l1 part~l1 Cairo~l1 x00000001 )
( John_Hancock_Center~l1 part~l1 Chicago~l1 x00000001 )
( CN_Tower~l1 part~l1 Montreal~l1 x00000001 )
( Eiffel_Tower~l1 part~l1 Paris,_France~l1 x00000001 )
( Windsor_Castle~l1 part~l1 Windsor~l1 x00000001 )
( Hadrians_Wall~l1 part~l1 United_Kingdom~l1 x00000001 )
( White_Cliffs_of_Dover~l1 part~l1 England~l1 x00000001 )
( Blackpool_Tower~l1 part~l1 Blackpool~l1 x00000001 )
( Buckingham_Palace~l1 part~l1 London~l1 x00000001 )
( Houses_of_Parliament~l1 member Palace_of_Westminster~l1 x00000001 )
( Palace_of_Westminster~l1 part~l1 London~l1 x00000001 )
( London_Eye~l1 part~l1 London~l1 x00000001 )
( St._Paul_'s_Cathedral~l1 part~l1 Rome~l1 x00000001 )
( Great_Barrier_Reef~l1 part~l1 Australia~l1 x00000001 )
( Niagara_Falls~l1 part~l1 New_York~l1 x00000001 )
( Victoria_Falls~l1 part~l1 Zambia~l1 x00000001 )
( Mount_Everest~l1 part~l1 Nepal~l1 x00000001 )
( Tokyo_Tower~l1 part~l1 Tokyo~l1 x00000001 )
( Sydney_Opera_House~l1 part~l1 Sydney~l1 x00000001 )
( Sky_Tower~l1 part~l1 Auckland~l1 x00000001 )
( Parthenon~l1 part~l1 Athens~l1 x00000001 )
( Arc_de_Triomphe~l1 part~l1 Paris,_France~l1 x00000001 )
( Big_Ben~l1 part~l1 London~l1 x00000001 )
( Wembley_Stadium~l1 part~l1 London~l1 x00000001 )
( Tower_Bridge~l1 part~l1 London~l1 x00000001 )
( Red_Square~l1 part~l1 Moscow~l1 x00000001 )
( Brandenburg_Gate~l1 part~l1 Berlin~l1 x00000001 )
( Alhambra~l1 part~l1 Granada~l1 x00000001 )
( St._Peter_'s_Basilica~l1 part~l1 Vatican_City~l1 x00000001 )
( Olympic_Stadium~l1 part~l1 Montreal~l1 x00000001 )
( Gateway_Arch~l1 part~l1 St._Louis~l1 x00000001 )
( Hoover_Dam~l1 part~l1 Arizona~l1 x00000001 )
( USS_Arizona~l1 part~l1 Honolulu~l1 x00000001 )
( Iolani_Palace~l1 part~l1 Honolulu~l1 x00000001 )
( Alcatraz~l1 member Alcatraz_Island~l1 x00000001 )
( Alcatraz_Island~l1 part~l1 San_Francisco~l1 x00000001 )
( Perth~l1 part~l1 Australia~l1 x00000001 )
( Brisbane~l1 part~l1 Australia~l1 x00000001 )
( Darwin~l1 part~l1 Australia~l1 x00000001 )
( Adelaide~l1 part~l1 Australia~l1 x00000001 )
( Melbourne~l1 part~l1 Australia~l1 x00000001 )
( Toronto~l1 part~l1 Canada~l1 x00000001 )
( Shanghai~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Calais~l1 part~l1 France~l1 x00000001 )
( Rouen~l1 part~l1 France~l1 x00000001 )
( Marseille~l1 part~l1 France~l1 x00000001 )
( Lyon~l1 part~l1 France~l1 x00000001 )
( Toulouse~l1 part~l1 France~l1 x00000001 )
( Strasbourg~l1 part~l1 France~l1 x00000001 )
( Nantes~l1 part~l1 France~l1 x00000001 )
( Bordeaux~l1 part~l1 France~l1 x00000001 )
( Montpellier~l1 part~l1 France~l1 x00000001 )
( Rennes~l1 part~l1 France~l1 x00000001 )
( Saint-Etienne~l1 part~l1 France~l1 x00000001 )
( Le_Havre~l1 part~l1 France~l1 x00000001 )
( Reims~l1 part~l1 France~l1 x00000001 )
( Lille~l1 part~l1 France~l1 x00000001 )
( Toulon~l1 part~l1 France~l1 x00000001 )
( Genoble~l1 part~l1 France~l1 x00000001 )
( Hamburg~l1 part~l1 Germany~l1 x00000001 )
( Nurenburg~l1 part~l1 Germany~l1 x00000001 )
( Munich~l1 part~l1 Germany~l1 x00000001 )
( Bonn~l1 part~l1 Germany~l1 x00000001 )
( Wiesbaden~l1 part~l1 Germany~l1 x00000001 )
( Calcutta~l1 part~l1 India~l1 x00000001 )
( Delhi~l1 part~l1 India~l1 x00000001 )
( Mumbai~l1 part~l1 India~l1 x00000001 )
( Chennai~l1 part~l1 India~l1 x00000001 )
( Bangalore~l1 part~l1 India~l1 x00000001 )
( Hyderabad~l1 part~l1 India~l1 x00000001 )
( Ahmadabad~l1 part~l1 India~l1 x00000001 )
( Pune~l1 part~l1 India~l1 x00000001 )
( Surat~l1 part~l1 India~l1 x00000001 )
( Kanpur~l1 part~l1 India~l1 x00000001 )
( Jaipur~l1 part~l1 India~l1 x00000001 )
( Genoa~l1 part~l1 Italy~l1 x00000001 )
( Naples~l1 part~l1 Italy~l1 x00000001 )
( Venice~l1 part~l1 Italy~l1 x00000001 )
( Milan~l1 part~l1 Italy~l1 x00000001 )
( Timbuktu~l1 part~l1 Mali~l1 x00000001 )
( Karachi~l1 part~l1 Pakistan~l1 x00000001 )
( Jerusalem~l1 part~l1 Palestine~l1 x00000001 )
( Barcelona~l1 part~l1 Spain~l1 x00000001 )
( Sapporo~l1 part~l1 Japan~l1 x00000001 )
( Aomori~l1 part~l1 Japan~l1 x00000001 )
( Sendai~l1 part~l1 Japan~l1 x00000001 )
( Niigata~l1 part~l1 Japan~l1 x00000001 )
( Shizuoka~l1 part~l1 Japan~l1 x00000001 )
( Osaka~l1 part~l1 Japan~l1 x00000001 )
( Nagoya~l1 part~l1 Japan~l1 x00000001 )
( Fukuoka~l1 part~l1 Japan~l1 x00000001 )
( Kobe~l1 part~l1 Japan~l1 x00000001 )
( Kyoto~l1 part~l1 Japan~l1 x00000001 )
( Nara~l1 part~l1 Japan~l1 x00000001 )
( Kamakura~l1 part~l1 Japan~l1 x00000001 )
( Nagasaki~l1 part~l1 Japan~l1 x00000001 )
( Hiroshima~l1 part~l1 Japan~l1 x00000001 )
( Akita~l1 part~l1 Japan~l1 x00000001 )
( Morioka~l1 part~l1 Japan~l1 x00000001 )
( Wakayam~l1 part~l1 Japan~l1 x00000001 )
( Matsuyama~l1 part~l1 Japan~l1 x00000001 )
( Kumamoto~l1 part~l1 Japan~l1 x00000001 )
( Kagoshima~l1 part~l1 Japan~l1 x00000001 )
( Fukushima~l1 part~l1 Japan~l1 x00000001 )
( Rockies~l1 member Rocky_Mountains~l1 x00000001 )
( Rocky_Mountains~l1 part~l1 United_States_of_America~l1 x00000001 )
( Appalachian_Mountains~l1 part~l1 United_States_of_America~l1 x00000001 )
( Pyrennes~l1 part~l1 France~l1 x00000001 )
( Alps~l1 part~l1 Switzerland~l1 x00000001 )
( Himalayas~l1 part~l1 Tibet~l1 x00000001 )
( Urals~l1 part~l1 Ukraine~l1 x00000001 )
( Lake_Erie~l1 part~l1 United_States_of_America~l1 x00000001 )
( Lake_Superior~l1 part~l1 United_States_of_America~l1 x00000001 )
( Lake_Michigan~l1 part~l1 United_States_of_America~l1 x00000001 )
( Lake_Ontario~l1 part~l1 United_States_of_America~l1 x00000001 )
( Great_Salt_Lake~l1 part~l1 United_States_of_America~l1 x00000001 )
( Lake_Huron~l1 part~l1 United_States_of_America~l1 x00000001 )
( Seine~l1 part~l1 France~l1 x00000001 )
( Loire~l1 part~l1 France~l1 x00000001 )
( Nile~l1 part~l1 Egypt~l1 x00000001 )
( Yangtze~l1 part~l1 People_'s_Republic_of_China~l1 x00000001 )
( Volga~l1 part~l1 Europe~l1 x00000001 )
( Amazon~l1 part~l1 South_America~l1 x00000001 )
( Rhine~l1 part~l1 Germany~l1 x00000001 )
( Rhone~l1 part~l1 Germany~l1 x00000001 )
( Sagrada_Familia~l1 part~l1 Barcelona~l1 x00000001 )
( Capitol_Hill~l1 part~l1 Washington,_D.C.~l1 x00000001 )
( White_House~l1 part~l1 Washington,_D.C.~l1 x00000001 )
( Library_of_Congress~l1 part~l1 Washington,_D.C.~l1 x00000001 )
( Niagra_Falls~l1 part~l1 New_York~l1 x00000001 )
( Acropolis~l1 part~l1 Athens~l1 x00000001 )
( Loch_Ness~l1 part~l1 Scotland~l1 x00000001 )
( Mecca~l1 part~l1 Saudi_Arabia~l1 x00000001 )
( Versailles~l1 member Palace_of_Versailles~l1 x00000001 )
( Palace_of_Versailles~l1 part~l1 France~l1 x00000001 )
( Tivoli~l1 part~l1 Denmark~l1 x00000001 )
( Colosseum~l1 part~l1 Italy~l1 x00000001 )
( Roman_Colosseum~l1 part~l1 Italy~l1 x00000001 )
( Tower_of_Pisa~l1 part~l1 Italy~l1 x00000001 )
( The_London_Eye~l1 part~l1 England~l1 x00000001 )
( Big_Ben~l1 part~l1 England~l1 x00000001 )
( Tower_of_London~l1 part~l1 England~l1 x00000001 )
( London_Bridge~l1 part~l1 England~l1 x00000001 )
( Buckingham_Palace~l1 part~l1 England~l1 x00000001 )
( Great_Wall~l1 member Great_Wall_of_China~l1 x00000001 )
( Great_Sphinx~l1 part~l1 Egypt~l1 x00000001 )
( Pyramids~l1 member The_Pyramids~l1 x00000001 )
( The_Pyramids~l1 part~l1 Egypt~l1 x00000001 )
( Little_Mermaid~l1 part~l1 Copenhagen~l1 x00000001 )
( Mount_Rushmore~l1 part~l1 South_Dakota~l1 x00000001 )
( Museum_of_Dog_Collars~l1 part~l1 United_Kingdom~l1 x00000001 )
( Musuem_of_the_Mousetrap~l1 part~l1 United_Kingdom~l1 x00000001 )
( Apple_and_Pear_Museum~l1 part~l1 France~l1 x00000001 )
( Musee_d'Orsay~l1 part~l1 France~l1 x00000001 )
( Smithsonion~l1 member Smithsonion_Museum~l1 x00000001 )
( Smithsonion_Museum~l1 part~l1 Washington,_D.C.~l1 x00000001 )
( Circus_World_Museum~l1 part~l1 Wisconsin~l1 x00000001 )
( Barbie_Doll_Museum~l1 part~l1 Palo_Alto,_California~l1 x00000001 )
( Serbian_dinar~l1 currency~l1 Serbia~l1 x00000001 )
( 0.02 exchange_rate~l1 Serbia~l1 x00000001 )
( Aruban_florin~l1 currency~l1 Aruba~l1 x00000001 )
( 1.79 exchange_rate~l1 Aruba~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Antigua_and_Barbuda~l1 x00000001 )
( 2.70 exchange_rate~l1 Antigua_and_Barbuda~l1 x00000001 )
( Emirati_dirham~l1 currency~l1 United_Arab_Emirates~l1 x00000001 )
( 3.67 exchange_rate~l1 United_Arab_Emirates~l1 x00000001 )
( afghani~l1 currency~l1 Afghanistan~l1 x00000001 )
( 46 exchange_rate~l1 Afghanistan~l1 x00000001 )
( Algerian_dinar~l1 currency~l1 Algeria~l1 x00000001 )
( 72.65 exchange_rate~l1 Algeria~l1 x00000001 )
( Azerbaijani_manat~l1 currency~l1 Azerbaijan~l1 x00000001 )
( 0.89 exchange_rate~l1 Azerbaijan~l1 x00000001 )
( leke~l1 currency~l1 Albania~l1 x00000001 )
( 98.38 exchange_rate~l1 Albania~l1 x00000001 )
( dram~l1 currency~l1 Armenia~l1 x00000001 )
( 414.69 exchange_rate~l1 Armenia~l1 x00000001 )
( euro~l1 currency~l1 Andorra~l1 x00000001 )
( 0.80 exchange_rate~l1 Andorra~l1 x00000001 )
( kwanza~l1 currency~l1 Angola~l1 x00000001 )
( 80.40 exchange_rate~l1 Angola~l1 x00000001 )
( Argentine_peso~l1 currency~l1 Argentina~l1 x00000001 )
( 3.05 exchange_rate~l1 Argentina~l1 x00000001 )
( Australian_dollar~l1 currency~l1 Australia~l1 x00000001 )
( 1.33 exchange_rate~l1 Australia~l1 x00000001 )
( euro~l1 currency~l1 Austria~l1 x00000001 )
( 0.80 exchange_rate~l1 Austria~l1 x00000001 )
( Bahraini_dinar~l1 currency~l1 Bahrain~l1 x00000001 )
( 0.38 exchange_rate~l1 Bahrain~l1 x00000001 )
( Barbadian_dollar~l1 currency~l1 Barbados~l1 x00000001 )
( 2 exchange_rate~l1 Barbados~l1 x00000001 )
( pula~l1 currency~l1 Botswana~l1 x00000001 )
( 5.84 exchange_rate~l1 Botswana~l1 x00000001 )
( Bermudian_dollar~l1 currency~l1 Bermuda~l1 x00000001 )
( 1 exchange_rate~l1 Bermuda~l1 x00000001 )
( euro~l1 currency~l1 Belgium~l1 x00000001 )
( 0.80 exchange_rate~l1 Belgium~l1 x00000001 )
( Bahamian_dollar~l1 currency~l1 Bahamas~l1 x00000001 )
( 1 exchange_rate~l1 Bahamas~l1 x00000001 )
( taka~l1 currency~l1 Bangladesh~l1 x00000001 )
( 69.03 exchange_rate~l1 Bangladesh~l1 x00000001 )
( Belizean_dollar~l1 currency~l1 Belize~l1 x00000001 )
( 2 exchange_rate~l1 Belize~l1 x00000001 )
( Konvertibilna_maraka~l1 currency~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( 1.56 exchange_rate~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( boliviano~l1 currency~l1 Bolivia~l1 x00000001 )
( 8.02 exchange_rate~l1 Bolivia~l1 x00000001 )
( kyat~l1 currency~l1 Union_of_Myanmar~l1 x00000001 )
( 1280 exchange_rate~l1 Union_of_Myanmar~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Republic_of_Benin~l1 x00000001 )
( 522.59 exchange_rate~l1 Republic_of_Benin~l1 x00000001 )
( Belarusian_ruble~l1 currency~l1 Belarus~l1 x00000001 )
( 2144.60 exchange_rate~l1 Belarus~l1 x00000001 )
( real~l1 currency~l1 Brazil~l1 x00000001 )
( 0.55 exchange_rate~l1 Brazil~l1 x00000001 )
( ngultrum~l1 currency~l1 Kingdom_of_Bhutan~l1 x00000001 )
( 45.28 exchange_rate~l1 Kingdom_of_Bhutan~l1 x00000001 )
( leva~l1 currency~l1 Bulgaria~l1 x00000001 )
( 1.56 exchange_rate~l1 Bulgaria~l1 x00000001 )
( Bruneian_dollar~l1 currency~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( 1.59 exchange_rate~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( Burundi_franc~l1 currency~l1 Republic_of_Burundi~l1 x00000001 )
( 1030 exchange_rate~l1 Republic_of_Burundi~l1 x00000001 )
( Canadian_dollar~l1 currency~l1 Canada~l1 x00000001 )
( 1.13 exchange_rate~l1 Canada~l1 x00000001 )
( riel~l1 currency~l1 Kingdom_of_Cambodia~l1 x00000001 )
( 4103 exchange_rate~l1 Kingdom_of_Cambodia~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Republic_of_Chad~l1 x00000001 )
( 522.59 exchange_rate~l1 Republic_of_Chad~l1 x00000001 )
( Sri_Lankan_rupee~l1 currency~l1 Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( 103.99 exchange_rate~l1 Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Republic_of_the_Congo~l1 x00000001 )
( 522.59 exchange_rate~l1 Republic_of_the_Congo~l1 x00000001 )
( Congolese_franc~l1 currency~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( 464.69 exchange_rate~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( yuan~l1 currency~l1 People_'s_Republic_of_China~l1 x00000001 )
( 7.97 exchange_rate~l1 People_'s_Republic_of_China~l1 x00000001 )
( Chilean_peso~l1 currency~l1 Chile~l1 x00000001 )
( 530.29 exchange_rate~l1 Chile~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Cameroon~l1 x00000001 )
( 522.59 exchange_rate~l1 Cameroon~l1 x00000001 )
( Comoran_franc~l1 currency~l1 Union_of_the_Comoros~l1 x00000001 )
( 392.03 exchange_rate~l1 Union_of_the_Comoros~l1 x00000001 )
( Colombian_peso~l1 currency~l1 Republic_of_Colombia~l1 x00000001 )
( 2358.60 exchange_rate~l1 Republic_of_Colombia~l1 x00000001 )
( Costa_Rican_colone~l1 currency~l1 Costa_Rica~l1 x00000001 )
( 511.30 exchange_rate~l1 Costa_Rica~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Central_African_Republic~l1 x00000001 )
( 522.59 exchange_rate~l1 Central_African_Republic~l1 x00000001 )
( Convertible_peso~l1 currency~l1 Cuba~l1 x00000001 )
( 0.92 exchange_rate~l1 Cuba~l1 x00000001 )
( Cape_Verdean_escudos~l1 currency~l1 Republic_of_Cape_Verde~l1 x00000001 )
( 87.95 exchange_rate~l1 Republic_of_Cape_Verde~l1 x00000001 )
( Cypriot_pound~l1 currency~l1 Cyprus~l1 x00000001 )
( 0.46 exchange_rate~l1 Cyprus~l1 x00000001 )
( Danish_kroner~l1 currency~l1 Denmark~l1 x00000001 )
( 5.95 exchange_rate~l1 Denmark~l1 x00000001 )
( Djiboutian_franc~l1 currency~l1 Republic_of_Djibouti~l1 x00000001 )
( 174.75 exchange_rate~l1 Republic_of_Djibouti~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Commonwealth_of_Dominica~l1 x00000001 )
( 2.70 exchange_rate~l1 Commonwealth_of_Dominica~l1 x00000001 )
( Dominican_peso~l1 currency~l1 Dominican_Republic~l1 x00000001 )
( 33.41 exchange_rate~l1 Dominican_Republic~l1 x00000001 )
( euro~l1 currency~l1 European_Union~l1 x00000001 )
( 0.80 exchange_rate~l1 European_Union~l1 x00000001 )
( Egyptian_pound~l1 currency~l1 Egypt~l1 x00000001 )
( 5.72 exchange_rate~l1 Egypt~l1 x00000001 )
( euro~l1 currency~l1 Republic_of_Ireland~l1 x00000001 )
( 0.80 exchange_rate~l1 Republic_of_Ireland~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( 522.40 exchange_rate~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( krooni~l1 currency~l1 Republic_of_Estonia~l1 x00000001 )
( 12.47 exchange_rate~l1 Republic_of_Estonia~l1 x00000001 )
( nakfa~l1 currency~l1 Eritrea~l1 x00000001 )
( 15.40 exchange_rate~l1 Eritrea~l1 x00000001 )
( birr~l1 currency~l1 Ethiopia~l1 x00000001 )
( 8.69 exchange_rate~l1 Ethiopia~l1 x00000001 )
( koruny~l1 currency~l1 Czech_Republic~l1 x00000001 )
( 22.60 exchange_rate~l1 Czech_Republic~l1 x00000001 )
( euro~l1 currency~l1 Finland~l1 x00000001 )
( 0.80 exchange_rate~l1 Finland~l1 x00000001 )
( Fijian_dollar~l1 currency~l1 Fiji~l1 x00000001 )
( 1.73 exchange_rate~l1 Fiji~l1 x00000001 )
( Danish_kroner~l1 currency~l1 Faroe_Islands~l1 x00000001 )
( 5.95 exchange_rate~l1 Faroe_Islands~l1 x00000001 )
( euro~l1 currency~l1 France~l1 x00000001 )
( 0.80 exchange_rate~l1 France~l1 x00000001 )
( dalasi~l1 currency~l1 Gambia~l1 x00000001 )
( 28.30 exchange_rate~l1 Gambia~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Gabon~l1 x00000001 )
( 522.89 exchange_rate~l1 Gabon~l1 x00000001 )
( lari~l1 currency~l1 Georgia~l1 x00000001 )
( 1.78 exchange_rate~l1 Georgia~l1 x00000001 )
( cedi~l1 currency~l1 Ghana~l1 x00000001 )
( 9174.80 exchange_rate~l1 Ghana~l1 x00000001 )
( Gibraltar_pound~l1 currency~l1 Gibraltar~l1 x00000001 )
( 0.54 exchange_rate~l1 Gibraltar~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Grenada~l1 x00000001 )
( 2.70 exchange_rate~l1 Grenada~l1 x00000001 )
( Danish_kroner~l1 currency~l1 Greenland~l1 x00000001 )
( 5.95 exchange_rate~l1 Greenland~l1 x00000001 )
( euro~l1 currency~l1 Germany~l1 x00000001 )
( 0.80 exchange_rate~l1 Germany~l1 x00000001 )
( euro~l1 currency~l1 Greece~l1 x00000001 )
( 0.80 exchange_rate~l1 Greece~l1 x00000001 )
( quetzale~l1 currency~l1 Guatemala~l1 x00000001 )
( 7.60 exchange_rate~l1 Guatemala~l1 x00000001 )
( Guinean_franc~l1 currency~l1 Republic_of_Guinea~l1 x00000001 )
( 5350 exchange_rate~l1 Republic_of_Guinea~l1 x00000001 )
( Guyanese_dollar~l1 currency~l1 Guyana~l1 x00000001 )
( 200.28 exchange_rate~l1 Guyana~l1 x00000001 )
( gourde~l1 currency~l1 Haiti~l1 x00000001 )
( 40.23 exchange_rate~l1 Haiti~l1 x00000001 )
( Hong_Kong_dollar~l1 currency~l1 Hong_Kong~l1 x00000001 )
( 7.77 exchange_rate~l1 Hong_Kong~l1 x00000001 )
( lempira~l1 currency~l1 Honduras~l1 x00000001 )
( 18.89 exchange_rate~l1 Honduras~l1 x00000001 )
( kuna~l1 currency~l1 Croatia~l1 x00000001 )
( 5.86 exchange_rate~l1 Croatia~l1 x00000001 )
( forint~l1 currency~l1 Hungary~l1 x00000001 )
( 210.39 exchange_rate~l1 Hungary~l1 x00000001 )
( Icelandic_kronur~l1 currency~l1 Iceland~l1 x00000001 )
( 70.19 exchange_rate~l1 Iceland~l1 x00000001 )
( Indonesian_rupiah~l1 currency~l1 Indonesia~l1 x00000001 )
( 9159.30 exchange_rate~l1 Indonesia~l1 x00000001 )
( Indian_rupee~l1 currency~l1 India~l1 x00000001 )
( 45.30 exchange_rate~l1 India~l1 x00000001 )
( rial~l1 currency~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( 9227.10 exchange_rate~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( New_Israeli_shekel~l1 currency~l1 Israel~l1 x00000001 )
( 4.46 exchange_rate~l1 Israel~l1 x00000001 )
( euro~l1 currency~l1 Italy~l1 x00000001 )
( 0.80 exchange_rate~l1 Italy~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Cote_d'Ivoire~l1 x00000001 )
( 522.89 exchange_rate~l1 Cote_d'Ivoire~l1 x00000001 )
( New_Iraqi_dinar~l1 currency~l1 Iraq~l1 x00000001 )
( 1466 exchange_rate~l1 Iraq~l1 x00000001 )
( yen currency~l1 Japan~l1 x00000001 )
( 116.18 exchange_rate~l1 Japan~l1 x00000001 )
( Jamaican_dollar~l1 currency~l1 Jamaica~l1 x00000001 )
( 65.77 exchange_rate~l1 Jamaica~l1 x00000001 )
( Jordanian_dinar~l1 currency~l1 Jordan~l1 x00000001 )
( 0.71 exchange_rate~l1 Jordan~l1 x00000001 )
( Kenyan_shilling~l1 currency~l1 Republic_of_Kenya~l1 x00000001 )
( 72.10 exchange_rate~l1 Republic_of_Kenya~l1 x00000001 )
( som~l1 currency~l1 Kyrgyzstan~l1 x00000001 )
( 40.15 exchange_rate~l1 Kyrgyzstan~l1 x00000001 )
( North_Korean_won~l1 currency~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( 141 exchange_rate~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Bustralian_dollar~l1 currency~l1 Kiribati~l1 x00000001 )
( 1.33 exchange_rate~l1 Kiribati~l1 x00000001 )
( South_Korean_won~l1 currency~l1 Republic_of_Korea~l1 x00000001 )
( 955.30 exchange_rate~l1 Republic_of_Korea~l1 x00000001 )
( Kuwaiti_dinar~l1 currency~l1 Kuwait~l1 x00000001 )
( 0.29 exchange_rate~l1 Kuwait~l1 x00000001 )
( tenge~l1 currency~l1 Kazakhstan~l1 x00000001 )
( 126.09 exchange_rate~l1 Kazakhstan~l1 x00000001 )
( kip~l1 currency~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( 10235 exchange_rate~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Lebanese_pound~l1 currency~l1 Lebanon~l1 x00000001 )
( 1507.50 exchange_rate~l1 Lebanon~l1 x00000001 )
( lats~l1 member lati~l1 x00000001 )
( lati~l1 currency~l1 Republic_of_Latvia~l1 x00000001 )
( 0.56 exchange_rate~l1 Republic_of_Latvia~l1 x00000001 )
( litai~l1 currency~l1 Republic_of_Lithuania~l1 x00000001 )
( 2.75 exchange_rate~l1 Republic_of_Lithuania~l1 x00000001 )
( Liberian_dollar~l1 currency~l1 Liberia~l1 x00000001 )
( 59.43 exchange_rate~l1 Liberia~l1 x00000001 )
( koruny~l1 currency~l1 Slovakia~l1 x00000001 )
( 29.61 exchange_rate~l1 Slovakia~l1 x00000001 )
( Swiss_franc~l1 currency~l1 Principality_of_Liechtenstein~l1 x00000001 )
( 1.25 exchange_rate~l1 Principality_of_Liechtenstein~l1 x00000001 )
( maloti~l1 currency~l1 Kingdom_of_Lesotho~l1 x00000001 )
( 6.85 exchange_rate~l1 Kingdom_of_Lesotho~l1 x00000001 )
( euro~l1 currency~l1 Luxembourg~l1 x00000001 )
( 0.80 exchange_rate~l1 Luxembourg~l1 x00000001 )
( Libyan_dinar~l1 currency~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( 1.31 exchange_rate~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Malagasy_ariary~l1 currency~l1 Madagascar~l1 x00000001 )
( 2161.40 exchange_rate~l1 Madagascar~l1 x00000001 )
( lei~l1 currency~l1 Republic_of_Moldova~l1 x00000001 )
( 13.13 exchange_rate~l1 Republic_of_Moldova~l1 x00000001 )
( togrog~l1 currency~l1 Mongolia~l1 x00000001 )
( 1179.60 exchange_rate~l1 Mongolia~l1 x00000001 )
( Malawian_kwacha~l1 currency~l1 Malawi~l1 x00000001 )
( 135.96 exchange_rate~l1 Malawi~l1 x00000001 )
( euro~l1 currency~l1 Montenegro~l1 x00000001 )
( 0.80 exchange_rate~l1 Montenegro~l1 x00000001 )
( Macedonian_denar~l1 currency~l1 Republic_of_Macedonia~l1 x00000001 )
( 48.98 exchange_rate~l1 Republic_of_Macedonia~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Mali~l1 x00000001 )
( 522.59 exchange_rate~l1 Mali~l1 x00000001 )
( euro~l1 currency~l1 Monaco~l1 x00000001 )
( 0.80 exchange_rate~l1 Monaco~l1 x00000001 )
( Moroccan_dirham~l1 currency~l1 Morocco~l1 x00000001 )
( 8.77 exchange_rate~l1 Morocco~l1 x00000001 )
( Mauritian_rupee~l1 currency~l1 Mauritius~l1 x00000001 )
( 31.66 exchange_rate~l1 Mauritius~l1 x00000001 )
( Ouguiya~l1 currency~l1 Mauritania~l1 x00000001 )
( 271.30 exchange_rate~l1 Mauritania~l1 x00000001 )
( Maltese_liri~l1 currency~l1 Malta~l1 x00000001 )
( 0.37 exchange_rate~l1 Malta~l1 x00000001 )
( Omani_rial~l1 currency~l1 Sultanate_of_Oman~l1 x00000001 )
( 0.38 exchange_rate~l1 Sultanate_of_Oman~l1 x00000001 )
( rufiyaa~l1 currency~l1 Republic_of_Maldives~l1 x00000001 )
( 12.80 exchange_rate~l1 Republic_of_Maldives~l1 x00000001 )
( Mexican_peso~l1 currency~l1 Mexico~l1 x00000001 )
( 10.90 exchange_rate~l1 Mexico~l1 x00000001 )
( peso~l1 currency~l1 Mexico~l1 x00000001 )
( ringgit~l1 currency~l1 Malaysia~l1 x00000001 )
( 3.67 exchange_rate~l1 Malaysia~l1 x00000001 )
( meticai~l1 currency~l1 Mozambique~l1 x00000001 )
( 25.40 exchange_rate~l1 Mozambique~l1 x00000001 )
( New_Zealand_dollar~l1 currency~l1 Niue~l1 x00000001 )
( 1.54 exchange_rate~l1 Niue~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Republic_of_Niger~l1 x00000001 )
( 522.59 exchange_rate~l1 Republic_of_Niger~l1 x00000001 )
( vatu~l1 currency~l1 Republic_of_Vanuatu~l1 x00000001 )
( 111.93 exchange_rate~l1 Republic_of_Vanuatu~l1 x00000001 )
( naira~l1 currency~l1 Nigeria~l1 x00000001 )
( 127.38 exchange_rate~l1 Nigeria~l1 x00000001 )
( euro~l1 currency~l1 Netherlands~l1 x00000001 )
( 0.80 exchange_rate~l1 Netherlands~l1 x00000001 )
( Norwegian_kroner~l1 currency~l1 Norway~l1 x00000001 )
( 6.41 exchange_rate~l1 Norway~l1 x00000001 )
( Nepalese_rupee~l1 currency~l1 Nepal~l1 x00000001 )
( 72.45 exchange_rate~l1 Nepal~l1 x00000001 )
( Bustralian_dollar~l1 currency~l1 Republic_of_Nauru~l1 x00000001 )
( 1.33 exchange_rate~l1 Republic_of_Nauru~l1 x00000001 )
( Surinamese_dollar~l1 currency~l1 Republic_of_Suriname~l1 x00000001 )
( 2.73 exchange_rate~l1 Republic_of_Suriname~l1 x00000001 )
( Gold_cordoba~l1 currency~l1 Nicaragua~l1 x00000001 )
( 17.58 exchange_rate~l1 Nicaragua~l1 x00000001 )
( New_Zealand_dollar~l1 currency~l1 New_Zealand~l1 x00000001 )
( 1.54 exchange_rate~l1 New_Zealand~l1 x00000001 )
( guarani~l1 currency~l1 Paraguay~l1 x00000001 )
( 5672.80 exchange_rate~l1 Paraguay~l1 x00000001 )
( nuevo_sol~l1 currency~l1 Peru~l1 x00000001 )
( 3.27 exchange_rate~l1 Peru~l1 x00000001 )
( Pakistani_rupee~l1 currency~l1 Pakistan~l1 x00000001 )
( 60.35 exchange_rate~l1 Pakistan~l1 x00000001 )
( zlotych~l1 currency~l1 Poland~l1 x00000001 )
( 3.10 exchange_rate~l1 Poland~l1 x00000001 )
( balboa~l1 currency~l1 Panama~l1 x00000001 )
( 1 exchange_rate~l1 Panama~l1 x00000001 )
( euro~l1 currency~l1 Portugal~l1 x00000001 )
( 0.80 exchange_rate~l1 Portugal~l1 x00000001 )
( kina~l1 currency~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( 3.06 exchange_rate~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Guinea-Bissau~l1 x00000001 )
( 522.59 exchange_rate~l1 Guinea-Bissau~l1 x00000001 )
( Qatari_rial~l1 currency~l1 Qatar~l1 x00000001 )
( 3.64 exchange_rate~l1 Qatar~l1 x00000001 )
( lei~l1 currency~l1 Romania~l1 x00000001 )
( 2.81 exchange_rate~l1 Romania~l1 x00000001 )
( Philippine_peso~l1 currency~l1 Philippines~l1 x00000001 )
( 51.25 exchange_rate~l1 Philippines~l1 x00000001 )
( Russian_ruble~l1 currency~l1 Russian_Federation~l1 x00000001 )
( 27.20 exchange_rate~l1 Russian_Federation~l1 x00000001 )
( Rwandan_franc~l1 currency~l1 Rwanda~l1 x00000001 )
( 560 exchange_rate~l1 Rwanda~l1 x00000001 )
( Saudi_riyal~l1 currency~l1 Saudi_Arabia~l1 x00000001 )
( 3.75 exchange_rate~l1 Saudi_Arabia~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( 2.70 exchange_rate~l1 Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( Seychelles_rupee~l1 currency~l1 Republic_of_Seychelles~l1 x00000001 )
( 5.50 exchange_rate~l1 Republic_of_Seychelles~l1 x00000001 )
( rand~l1 currency~l1 South_Africa~l1 x00000001 )
( 6.76 exchange_rate~l1 South_Africa~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Senegal~l1 x00000001 )
( 522.89 exchange_rate~l1 Senegal~l1 x00000001 )
( tolar~l1 currency~l1 Slovenia~l1 x00000001 )
( 190.85 exchange_rate~l1 Slovenia~l1 x00000001 )
( leone~l1 currency~l1 Sierra_Leone~l1 x00000001 )
( 2961.70 exchange_rate~l1 Sierra_Leone~l1 x00000001 )
( euro~l1 currency~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( 0.80 exchange_rate~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( Singapore_dollar~l1 currency~l1 Republic_of_Singapore~l1 x00000001 )
( 1.59 exchange_rate~l1 Republic_of_Singapore~l1 x00000001 )
( Somali_shilling~l1 currency~l1 Somalia~l1 x00000001 )
( 1438.30 exchange_rate~l1 Somalia~l1 x00000001 )
( euro~l1 currency~l1 Spain~l1 x00000001 )
( 0.80 exchange_rate~l1 Spain~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Saint_Lucia~l1 x00000001 )
( 2.70 exchange_rate~l1 Saint_Lucia~l1 x00000001 )
( Sudanese_dinar~l1 currency~l1 Sudan~l1 x00000001 )
( 217.20 exchange_rate~l1 Sudan~l1 x00000001 )
( Swedish_kronor~l1 currency~l1 Sweden~l1 x00000001 )
( 7.37 exchange_rate~l1 Sweden~l1 x00000001 )
( Syrian_pound~l1 currency~l1 Syrian_Arab_Republic~l1 x00000001 )
( 51.69 exchange_rate~l1 Syrian_Arab_Republic~l1 x00000001 )
( Swiss_franc~l1 currency~l1 Switzerland~l1 x00000001 )
( 1.25 exchange_rate~l1 Switzerland~l1 x00000001 )
( Trinidad_and_Tobago_dollar~l1 currency~l1 Trinidad_and_Tobago~l1 x00000001 )
( 6.31 exchange_rate~l1 Trinidad_and_Tobago~l1 x00000001 )
( baht~l1 currency~l1 Thailand~l1 x00000001 )
( 37.88 exchange_rate~l1 Thailand~l1 x00000001 )
( Tajikistani_somoni~l1 currency~l1 Tajikistan~l1 x00000001 )
( 3.30 exchange_rate~l1 Tajikistan~l1 x00000001 )
( pa'anga~l1 currency~l1 Tonga~l1 x00000001 )
( 2.03 exchange_rate~l1 Tonga~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Togo~l1 x00000001 )
( 522.59 exchange_rate~l1 Togo~l1 x00000001 )
( dobra~l1 currency~l1 Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( 12050 exchange_rate~l1 Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( Tunisian_dinar~l1 currency~l1 Tunisia~l1 x00000001 )
( 1.33 exchange_rate~l1 Tunisia~l1 x00000001 )
( Turkish_lira~l1 currency~l1 Turkey~l1 x00000001 )
( 1.43 exchange_rate~l1 Turkey~l1 x00000001 )
( Tuvaluan_dollars_or_Australian_dollar~l1 currency~l1 Tuvalu~l1 x00000001 )
( 1.33 exchange_rate~l1 Tuvalu~l1 x00000001 )
( New_Taiwan_dollar~l1 currency~l1 Republic_of_China~l1 x00000001 )
( 32.53 exchange_rate~l1 Republic_of_China~l1 x00000001 )
( Tanzanian_shilling~l1 currency~l1 United_Republic_of_Tanzania~l1 x00000001 )
( 1251.90 exchange_rate~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Ugandan_shilling~l1 currency~l1 Uganda~l1 x00000001 )
( 1834.90 exchange_rate~l1 Uganda~l1 x00000001 )
( British_pound~l1 currency~l1 United_Kingdom~l1 x00000001 )
( 0.54 exchange_rate~l1 United_Kingdom~l1 x00000001 )
( British_pound~l1 currency~l1 Scotland~l1 x00000001 )
( 0.54 exchange_rate~l1 Scotland~l1 x00000001 )
( British_pound~l1 currency~l1 England~l1 x00000001 )
( 0.54 exchange_rate~l1 England~l1 x00000001 )
( British_pound~l1 currency~l1 Wales~l1 x00000001 )
( 0.54 exchange_rate~l1 Wales~l1 x00000001 )
( hryvnia~l1 currency~l1 Ukraine~l1 x00000001 )
( 5.05 exchange_rate~l1 Ukraine~l1 x00000001 )
( dollar~l1 currency~l1 United_States_of_America~l1 x00000001 )
( 1 exchange_rate~l1 United_States_of_America~l1 x00000001 )
( Communaute_Financiere_Africaine_franc~l1 currency~l1 Burkina_Faso~l1 x00000001 )
( 522.59 exchange_rate~l1 Burkina_Faso~l1 x00000001 )
( Uruguayan_peso~l1 currency~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( 24.05 exchange_rate~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( Uzbekistani_soum~l1 currency~l1 Uzbekistan~l1 x00000001 )
( 1219.80 exchange_rate~l1 Uzbekistan~l1 x00000001 )
( East_Caribbean_dollar~l1 currency~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( 2.70 exchange_rate~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( bolivare~l1 currency~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( 2147 exchange_rate~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( dong~l1 currency~l1 Vietnam~l1 x00000001 )
( 15983 exchange_rate~l1 Vietnam~l1 x00000001 )
( euro~l1 currency~l1 Vatican_City~l1 x00000001 )
( 0.80 exchange_rate~l1 Vatican_City~l1 x00000001 )
( Namibian_dollar~l1 currency~l1 Namibia~l1 x00000001 )
( 6.76 exchange_rate~l1 Namibia~l1 x00000001 )
( tala~l1 currency~l1 Samoa~l1 x00000001 )
( 2.76 exchange_rate~l1 Samoa~l1 x00000001 )
( emalangeni~l1 currency~l1 Swaziland~l1 x00000001 )
( 6.85 exchange_rate~l1 Swaziland~l1 x00000001 )
( Yemeni_rial~l1 currency~l1 Yemen~l1 x00000001 )
( 197.18 exchange_rate~l1 Yemen~l1 x00000001 )
( Zambian_kwacha~l1 currency~l1 Zambia~l1 x00000001 )
( 3601.50 exchange_rate~l1 Zambia~l1 x00000001 )
( Zimbabwean_dollar~l1 currency~l1 Republic_of_Zimbabwe~l1 x00000001 )
( 162.07 exchange_rate~l1 Republic_of_Zimbabwe~l1 x00000001 )
( dollar~l1 currency~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( 1 exchange_rate~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( dollar~l1 currency~l1 Ecuador~l1 x00000001 )
( 1 exchange_rate~l1 Ecuador~l1 x00000001 )
( dollar~l1 currency~l1 El_Salvador~l1 x00000001 )
( 1 exchange_rate~l1 El_Salvador~l1 x00000001 )
( dollar~l1 currency~l1 Federated_States_of_Micronesia~l1 x00000001 )
( 1 exchange_rate~l1 Federated_States_of_Micronesia~l1 x00000001 )
( dollar~l1 currency~l1 Puerto_Rico~l1 x00000001 )
( 4.46 exchange_rate~l1 Puerto_Rico~l1 x00000001 )
( New_Israeli_shekel~l1 currency~l1 Palestine~l1 x00000001 )
( 1 exchange_rate~l1 Palestine~l1 x00000001 )
( Turkmen_manat~l1 currency~l1 Turkmenistan~l1 x00000001 )
( 11100 exchange_rate~l1 Turkmenistan~l1 x00000001 )
( dollar~l1 currency~l1 Republic_of_Palau~l1 x00000001 )
( 1 exchange_rate~l1 Republic_of_Palau~l1 x00000001 )
( Pacific_Ocean~l1 adjacent~l1 Southern_Ocean~l1 x00000001 )
( Atlantic_Ocean~l1 adjacent~l1 Southern_Ocean~l1 x00000001 )
( Pacific_Ocean~l1 adjacent~l1 Arctic_Ocean~l1 x00000001 )
( Atlantic_Ocean~l1 adjacent~l1 Arctic_Ocean~l1 x00000001 )
( Sultanate_of_Oman~l1 adjacent~l1 United_Arab_Emirates~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 United_Arab_Emirates~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Pakistan~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Tajikistan~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Turkmenistan~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Uzbekistan~l1 adjacent~l1 Afghanistan~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Algeria~l1 x00000001 )
( Mali~l1 adjacent~l1 Algeria~l1 x00000001 )
( Mauritania~l1 adjacent~l1 Algeria~l1 x00000001 )
( Morocco~l1 adjacent~l1 Algeria~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Algeria~l1 x00000001 )
( Tunisia~l1 adjacent~l1 Algeria~l1 x00000001 )
( Western_Sahara~l1 adjacent~l1 Algeria~l1 x00000001 )
( Armenia~l1 adjacent~l1 Azerbaijan~l1 x00000001 )
( Georgia~l1 adjacent~l1 Azerbaijan~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Azerbaijan~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Azerbaijan~l1 x00000001 )
( Turkey~l1 adjacent~l1 Azerbaijan~l1 x00000001 )
( Greece~l1 adjacent~l1 Albania~l1 x00000001 )
( Republic_of_Macedonia~l1 adjacent~l1 Albania~l1 x00000001 )
( Montenegro~l1 adjacent~l1 Albania~l1 x00000001 )
( Serbia~l1 adjacent~l1 Albania~l1 x00000001 )
( Azerbaijan~l1 adjacent~l1 Armenia~l1 x00000001 )
( Georgia~l1 adjacent~l1 Armenia~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Armenia~l1 x00000001 )
( Turkey~l1 adjacent~l1 Armenia~l1 x00000001 )
( France~l1 adjacent~l1 Andorra~l1 x00000001 )
( Spain~l1 adjacent~l1 Andorra~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Angola~l1 x00000001 )
( Namibia~l1 adjacent~l1 Angola~l1 x00000001 )
( Zambia~l1 adjacent~l1 Angola~l1 x00000001 )
( Bolivia~l1 adjacent~l1 Argentina~l1 x00000001 )
( Brazil~l1 adjacent~l1 Argentina~l1 x00000001 )
( Chile~l1 adjacent~l1 Argentina~l1 x00000001 )
( Paraguay~l1 adjacent~l1 Argentina~l1 x00000001 )
( Republica_Oriental_del_Uruguay~l1 adjacent~l1 Argentina~l1 x00000001 )
( Czech_Republic~l1 adjacent~l1 Austria~l1 x00000001 )
( Germany~l1 adjacent~l1 Austria~l1 x00000001 )
( Hungary~l1 adjacent~l1 Austria~l1 x00000001 )
( Italy~l1 adjacent~l1 Austria~l1 x00000001 )
( Principality_of_Liechtenstein~l1 adjacent~l1 Austria~l1 x00000001 )
( Slovakia~l1 adjacent~l1 Austria~l1 x00000001 )
( Slovenia~l1 adjacent~l1 Austria~l1 x00000001 )
( Switzerland~l1 adjacent~l1 Austria~l1 x00000001 )
( Namibia~l1 adjacent~l1 Botswana~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Botswana~l1 x00000001 )
( Republic_of_Zimbabwe~l1 adjacent~l1 Botswana~l1 x00000001 )
( France~l1 adjacent~l1 Belgium~l1 x00000001 )
( Germany~l1 adjacent~l1 Belgium~l1 x00000001 )
( Luxembourg~l1 adjacent~l1 Belgium~l1 x00000001 )
( NDetherlands~l1 adjacent~l1 Belgium~l1 x00000001 )
( Union_of_Myanmar~l1 adjacent~l1 Bangladesh~l1 x00000001 )
( India~l1 adjacent~l1 Bangladesh~l1 x00000001 )
( Guatemala~l1 adjacent~l1 Belize~l1 x00000001 )
( Mexico~l1 adjacent~l1 Belize~l1 x00000001 )
( Croatia~l1 adjacent~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Montenegro~l1 adjacent~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Serbia~l1 adjacent~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( Srgentina~l1 adjacent~l1 Bolivia~l1 x00000001 )
( Brazil~l1 adjacent~l1 Bolivia~l1 x00000001 )
( Chile~l1 adjacent~l1 Bolivia~l1 x00000001 )
( Paraguay~l1 adjacent~l1 Bolivia~l1 x00000001 )
( Peru~l1 adjacent~l1 Bolivia~l1 x00000001 )
( Bangladesh~l1 adjacent~l1 Union_of_Myanmar~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Union_of_Myanmar~l1 x00000001 )
( India~l1 adjacent~l1 Union_of_Myanmar~l1 x00000001 )
( Lao_People_'s_Democratic_Republic~l1 adjacent~l1 Union_of_Myanmar~l1 x00000001 )
( Thailand~l1 adjacent~l1 Union_of_Myanmar~l1 x00000001 )
( Burkina_faso~l1 adjacent~l1 Republic_of_benin~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Republic_of_benin~l1 x00000001 )
( Nigeria~l1 adjacent~l1 Republic_of_benin~l1 x00000001 )
( Togo~l1 adjacent~l1 Republic_of_benin~l1 x00000001 )
( Republic_of_latvia~l1 adjacent~l1 Belarus~l1 x00000001 )
( Republic_of_lithuania~l1 adjacent~l1 Belarus~l1 x00000001 )
( Poland~l1 adjacent~l1 Belarus~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Belarus~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Belarus~l1 x00000001 )
( Argentina~l1 adjacent~l1 Brazil~l1 x00000001 )
( Bolivia~l1 adjacent~l1 Brazil~l1 x00000001 )
( Republic_of_Colombia~l1 adjacent~l1 Brazil~l1 x00000001 )
( Guyana~l1 adjacent~l1 Brazil~l1 x00000001 )
( Paraguay~l1 adjacent~l1 Brazil~l1 x00000001 )
( Peru~l1 adjacent~l1 Brazil~l1 x00000001 )
( Republic_of_Suriname~l1 adjacent~l1 Brazil~l1 x00000001 )
( Republica_Oriental_del_Uruguay~l1 adjacent~l1 Brazil~l1 x00000001 )
( Bolivarian_Republic_of_Venezuela~l1 adjacent~l1 Brazil~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Kingdom_of_Bhutan~l1 x00000001 )
( India~l1 adjacent~l1 Kingdom_of_Bhutan~l1 x00000001 )
( Greece~l1 adjacent~l1 Bulgaria~l1 x00000001 )
( Republic_of_macedonia~l1 adjacent~l1 Bulgaria~l1 x00000001 )
( Romania~l1 adjacent~l1 Bulgaria~l1 x00000001 )
( Serbia~l1 adjacent~l1 Bulgaria~l1 x00000001 )
( Turkey~l1 adjacent~l1 Bulgaria~l1 x00000001 )
( Malaysia~l1 adjacent~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Republic_of_Burundi~l1 x00000001 )
( Rwanda~l1 adjacent~l1 Republic_of_Burundi~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Republic_of_Burundi~l1 x00000001 )
( United_States_of_America~l1 adjacent~l1 Canada~l1 x00000001 )
( Lao_People_'s_Semocratic_Republic~l1 adjacent~l1 Kingdom_of_Cambodia~l1 x00000001 )
( Thailand~l1 adjacent~l1 Kingdom_of_Cambodia~l1 x00000001 )
( Vietnam~l1 adjacent~l1 Kingdom_of_Cambodia~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Central_African_Republic~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Nigeria~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Sudan~l1 adjacent~l1 Republic_of_Chad~l1 x00000001 )
( Angola~l1 adjacent~l1 Republic_of_the_Congo~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Republic_of_the_Congo~l1 x00000001 )
( Central_African_Republic~l1 adjacent~l1 Republic_of_the_Congo~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Republic_of_the_Congo~l1 x00000001 )
( Gabon~l1 adjacent~l1 Republic_of_the_Congo~l1 x00000001 )
( Angola~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Central_African_Republic~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Republic_of_the_Congo~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Rwanda~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Sudan~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Uganda~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Zambia~l1 adjacent~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Kingdom_of_Bhutan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Union_of_Myanmar~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( India~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Kazakhstan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Democratic_People_'s_Republic_of_Korea~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Kyrgyzstan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Lao_People_'s_Democratic_Republic~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Mongolia~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Nepal~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Pakistan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Tajikistan~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Vietnam~l1 adjacent~l1 People_'s_Republic_of_China~l1 x00000001 )
( Argentina~l1 adjacent~l1 Chile~l1 x00000001 )
( Bolivia~l1 adjacent~l1 Chile~l1 x00000001 )
( Peru~l1 adjacent~l1 Chile~l1 x00000001 )
( Central_African_Republic~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Republic_of_the_Congo~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Republic_of_Equatorial_Guinea~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Gabon~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Nigeria~l1 adjacent~l1 Cameroon~l1 x00000001 )
( Brazil~l1 adjacent~l1 Republic_of_Colombia~l1 x00000001 )
( Ecuador~l1 adjacent~l1 Republic_of_Colombia~l1 x00000001 )
( Panama~l1 adjacent~l1 Republic_of_Colombia~l1 x00000001 )
( Peru~l1 adjacent~l1 Republic_of_Colombia~l1 x00000001 )
( Bolivarian_Republic_of_Venezuela~l1 adjacent~l1 Republic_of_Colombia~l1 x00000001 )
( Nicaragua~l1 adjacent~l1 Costa_Rica~l1 x00000001 )
( Panama~l1 adjacent~l1 Costa_Rica~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Central_African_Republic~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Central_African_Republic~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Central_African_Republic~l1 x00000001 )
( Republic_of_the_Congo~l1 adjacent~l1 Central_African_Republic~l1 x00000001 )
( Sudan~l1 adjacent~l1 Central_African_Republic~l1 x00000001 )
( Akrotiri~l1 adjacent~l1 Cyprus~l1 x00000001 )
( Dhekelia_Na~l1 adjacent~l1 Cyprus~l1 x00000001 )
( Germany~l1 adjacent~l1 Denmark~l1 x00000001 )
( Eritrea~l1 adjacent~l1 Republic_of_Djibouti~l1 x00000001 )
( Ethiopia~l1 adjacent~l1 Republic_of_Djibouti~l1 x00000001 )
( Somalia~l1 adjacent~l1 Republic_of_Djibouti~l1 x00000001 )
( Haiti~l1 adjacent~l1 Dominican_Republic~l1 x00000001 )
( Republic_of_Colombia~l1 adjacent~l1 Ecuador~l1 x00000001 )
( Peru~l1 adjacent~l1 Ecuador~l1 x00000001 )
( Gaza_Strip~l1 adjacent~l1 Egypt~l1 x00000001 )
( Israel~l1 adjacent~l1 Egypt~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Egypt~l1 x00000001 )
( Sudan~l1 adjacent~l1 Egypt~l1 x00000001 )
( United_Kingdom~l1 adjacent~l1 Republic_of_Ireland~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( Gabon~l1 adjacent~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( Republic_of_Latvia~l1 adjacent~l1 Republic_of_Estonia~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Republic_of_Estonia~l1 x00000001 )
( Republic_of_djibouti~l1 adjacent~l1 Eritrea~l1 x00000001 )
( Ethiopia~l1 adjacent~l1 Eritrea~l1 x00000001 )
( Sudan~l1 adjacent~l1 Eritrea~l1 x00000001 )
( Guatemala~l1 adjacent~l1 El_Salvador~l1 x00000001 )
( Honduras~l1 adjacent~l1 El_Salvador~l1 x00000001 )
( Republic_of_Djibouti~l1 adjacent~l1 Ethiopia~l1 x00000001 )
( Eritrea~l1 adjacent~l1 Ethiopia~l1 x00000001 )
( Republic_of_kenya~l1 adjacent~l1 Ethiopia~l1 x00000001 )
( Somalia~l1 adjacent~l1 Ethiopia~l1 x00000001 )
( Sudan~l1 adjacent~l1 Ethiopia~l1 x00000001 )
( Austria~l1 adjacent~l1 Czech_Republic~l1 x00000001 )
( Germany~l1 adjacent~l1 Czech_Republic~l1 x00000001 )
( Poland~l1 adjacent~l1 Czech_Republic~l1 x00000001 )
( Slovakia~l1 adjacent~l1 Czech_Republic~l1 x00000001 )
( Norway~l1 adjacent~l1 Finland~l1 x00000001 )
( Sweden~l1 adjacent~l1 Finland~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Finland~l1 x00000001 )
( Andorra~l1 adjacent~l1 France~l1 x00000001 )
( Belgium~l1 adjacent~l1 France~l1 x00000001 )
( Germany~l1 adjacent~l1 France~l1 x00000001 )
( Italy~l1 adjacent~l1 France~l1 x00000001 )
( Luxembourg~l1 adjacent~l1 France~l1 x00000001 )
( Monaco~l1 adjacent~l1 France~l1 x00000001 )
( Spain~l1 adjacent~l1 France~l1 x00000001 )
( Switzerland~l1 adjacent~l1 France~l1 x00000001 )
( Senegal~l1 adjacent~l1 Gambia~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Gabon~l1 x00000001 )
( Republic_of_the_congo~l1 adjacent~l1 Gabon~l1 x00000001 )
( Republic_of_Equatorial_Guinea~l1 adjacent~l1 Gabon~l1 x00000001 )
( Armenia~l1 adjacent~l1 Georgia~l1 x00000001 )
( Azerbaijan~l1 adjacent~l1 Georgia~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Georgia~l1 x00000001 )
( Turkey~l1 adjacent~l1 Georgia~l1 x00000001 )
( Burkina_Faso~l1 adjacent~l1 Ghana~l1 x00000001 )
( Cote_d'Ivoire~l1 adjacent~l1 Ghana~l1 x00000001 )
( Togo~l1 adjacent~l1 Ghana~l1 x00000001 )
( Spain~l1 adjacent~l1 Gibraltar~l1 x00000001 )
( Austria~l1 adjacent~l1 Germany~l1 x00000001 )
( Belgium~l1 adjacent~l1 Germany~l1 x00000001 )
( Czech_Republic~l1 adjacent~l1 Germany~l1 x00000001 )
( Denmark~l1 adjacent~l1 Germany~l1 x00000001 )
( France~l1 adjacent~l1 Germany~l1 x00000001 )
( Luxembourg~l1 adjacent~l1 Germany~l1 x00000001 )
( Netherlands~l1 adjacent~l1 Germany~l1 x00000001 )
( Poland~l1 adjacent~l1 Germany~l1 x00000001 )
( Switzerland~l1 adjacent~l1 Germany~l1 x00000001 )
( Albania~l1 adjacent~l1 Greece~l1 x00000001 )
( Bulgaria~l1 adjacent~l1 Greece~l1 x00000001 )
( Turkey~l1 adjacent~l1 Greece~l1 x00000001 )
( Republic_of_Msacedonia~l1 adjacent~l1 Greece~l1 x00000001 )
( Belize~l1 adjacent~l1 Guatemala~l1 x00000001 )
( El_Salvador~l1 adjacent~l1 Guatemala~l1 x00000001 )
( Honduras~l1 adjacent~l1 Guatemala~l1 x00000001 )
( Mexico~l1 adjacent~l1 Guatemala~l1 x00000001 )
( Cote_d'Ivoire~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Guinea-Bissau~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Liberia~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Mali~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Senegal~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Sierra_Leone~l1 adjacent~l1 Republic_of_Guinea~l1 x00000001 )
( Brazil~l1 adjacent~l1 Guyana~l1 x00000001 )
( Republic_of_Suriname~l1 adjacent~l1 Guyana~l1 x00000001 )
( Bolivarian_Republic_of_Venezuela~l1 adjacent~l1 Guyana~l1 x00000001 )
( Dominican_Republic~l1 adjacent~l1 Haiti~l1 x00000001 )
( Guatemala~l1 adjacent~l1 Honduras~l1 x00000001 )
( El_Salvador~l1 adjacent~l1 Honduras~l1 x00000001 )
( Nicaragua~l1 adjacent~l1 Honduras~l1 x00000001 )
( Bosnia_and_Herzegovina~l1 adjacent~l1 Croatia~l1 x00000001 )
( Hungary~l1 adjacent~l1 Croatia~l1 x00000001 )
( Serbia~l1 adjacent~l1 Croatia~l1 x00000001 )
( Montenegro~l1 adjacent~l1 Croatia~l1 x00000001 )
( Slovenia~l1 adjacent~l1 Croatia~l1 x00000001 )
( Austria~l1 adjacent~l1 Hungary~l1 x00000001 )
( Croatia~l1 adjacent~l1 Hungary~l1 x00000001 )
( Romania~l1 adjacent~l1 Hungary~l1 x00000001 )
( Serbia~l1 adjacent~l1 Hungary~l1 x00000001 )
( Slovakia~l1 adjacent~l1 Hungary~l1 x00000001 )
( Slovenia~l1 adjacent~l1 Hungary~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Hungary~l1 x00000001 )
( Democratic_Republic_of_Timor-Leste~l1 adjacent~l1 Indonesia~l1 x00000001 )
( Malaysia~l1 adjacent~l1 Indonesia~l1 x00000001 )
( Independent_State_of_Papua_New_Guinea~l1 adjacent~l1 Indonesia~l1 x00000001 )
( Bangladesh~l1 adjacent~l1 India~l1 x00000001 )
( Kingdom_of_Bhutan~l1 adjacent~l1 India~l1 x00000001 )
( Union_of_Myanmar~l1 adjacent~l1 India~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 India~l1 x00000001 )
( Nepal~l1 adjacent~l1 India~l1 x00000001 )
( Pakistan~l1 adjacent~l1 India~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Armenia~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Azerbaijan-Proper~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Azerbaijan-Naxcivan_Exclave~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Iraq~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Pakistan~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Turkey~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Turkmenistan~l1 adjacent~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( Egypt~l1 adjacent~l1 Israel~l1 x00000001 )
( Gaza_Strip~l1 adjacent~l1 Israel~l1 x00000001 )
( Jordan~l1 adjacent~l1 Israel~l1 x00000001 )
( Lebanon~l1 adjacent~l1 Israel~l1 x00000001 )
( Syrian_Arab_Republic~l1 adjacent~l1 Israel~l1 x00000001 )
( West_Bank~l1 adjacent~l1 Israel~l1 x00000001 )
( Austria~l1 adjacent~l1 Italy~l1 x00000001 )
( France~l1 adjacent~l1 Italy~l1 x00000001 )
( Vatican_City~l1 adjacent~l1 Italy~l1 x00000001 )
( Most_Serene_Republic_of_san_marino~l1 adjacent~l1 Italy~l1 x00000001 )
( Slovenia~l1 adjacent~l1 Italy~l1 x00000001 )
( Switzerland~l1 adjacent~l1 Italy~l1 x00000001 )
( Burkina_Faso~l1 adjacent~l1 Cote_d'Ivoire~l1 x00000001 )
( Ghana~l1 adjacent~l1 Cote_d'Ivoire~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Cote_d'Ivoire~l1 x00000001 )
( Liberia~l1 adjacent~l1 Cote_d'Ivoire~l1 x00000001 )
( Mali~l1 adjacent~l1 Cote_d'Ivoire~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Iraq~l1 x00000001 )
( Jordan~l1 adjacent~l1 Iraq~l1 x00000001 )
( Kuwait~l1 adjacent~l1 Iraq~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Iraq~l1 x00000001 )
( Syrian_Arab_Republic~l1 adjacent~l1 Iraq~l1 x00000001 )
( Turkey~l1 adjacent~l1 Iraq~l1 x00000001 )
( Iraq~l1 adjacent~l1 Jordan~l1 x00000001 )
( Israel~l1 adjacent~l1 Jordan~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Jordan~l1 x00000001 )
( Syrian_Arab_Republic~l1 adjacent~l1 Jordan~l1 x00000001 )
( West_Bank~l1 adjacent~l1 Jordan~l1 x00000001 )
( Ethiopia~l1 adjacent~l1 Republic_of_Kenya~l1 x00000001 )
( Somalia~l1 adjacent~l1 Republic_of_Kenya~l1 x00000001 )
( Sudan~l1 adjacent~l1 Republic_of_Kenya~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Republic_of_Kenya~l1 x00000001 )
( Uganda~l1 adjacent~l1 Republic_of_Kenya~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Kyrgyzstan~l1 x00000001 )
( Kazakhstan~l1 adjacent~l1 Kyrgyzstan~l1 x00000001 )
( Tajikistan~l1 adjacent~l1 Kyrgyzstan~l1 x00000001 )
( Uzbekistan~l1 adjacent~l1 Kyrgyzstan~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Republic_of_Korea~l1 adjacent~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( Democratic_People_'s_Republic_of_Korea~l1 adjacent~l1 Republic_of_Korea~l1 x00000001 )
( Iraq~l1 adjacent~l1 Kuwait~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Kuwait~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Kazakhstan~l1 x00000001 )
( Kyrgyzstan~l1 adjacent~l1 Kazakhstan~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Kazakhstan~l1 x00000001 )
( Turkmenistan~l1 adjacent~l1 Kazakhstan~l1 x00000001 )
( Uzbekistan~l1 adjacent~l1 Kazakhstan~l1 x00000001 )
( Union_of_Myanmar~l1 adjacent~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Kingdom_of_Cambodia~l1 adjacent~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Thailand~l1 adjacent~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Vietnam~l1 adjacent~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( Israel~l1 adjacent~l1 Lebanon~l1 x00000001 )
( Syrian_Arab_Republic~l1 adjacent~l1 Lebanon~l1 x00000001 )
( Belarus~l1 adjacent~l1 Republic_of_Latvia~l1 x00000001 )
( Republic_of_Estonia~l1 adjacent~l1 Republic_of_Latvia~l1 x00000001 )
( Republic_of_Lithuania~l1 adjacent~l1 Republic_of_Latvia~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Republic_of_Latvia~l1 x00000001 )
( Belarus~l1 adjacent~l1 Republic_of_Lithuania~l1 x00000001 )
( Republic_of_latvia~l1 adjacent~l1 Republic_of_Lithuania~l1 x00000001 )
( Poland~l1 adjacent~l1 Republic_of_Lithuania~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Republic_of_Lithuania~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Liberia~l1 x00000001 )
( Cote_d'Ivoire~l1 adjacent~l1 Liberia~l1 x00000001 )
( Sierra_Leone~l1 adjacent~l1 Liberia~l1 x00000001 )
( Austria~l1 adjacent~l1 Slovakia~l1 x00000001 )
( Czech_Republic~l1 adjacent~l1 Slovakia~l1 x00000001 )
( Hungary~l1 adjacent~l1 Slovakia~l1 x00000001 )
( Poland~l1 adjacent~l1 Slovakia~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Slovakia~l1 x00000001 )
( Austria~l1 adjacent~l1 Principality_of_Liechtenstein~l1 x00000001 )
( Switzerland~l1 adjacent~l1 Principality_of_Liechtenstein~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Kingdom_of_Lesotho~l1 x00000001 )
( Belgium~l1 adjacent~l1 Luxembourg~l1 x00000001 )
( France~l1 adjacent~l1 Luxembourg~l1 x00000001 )
( Germany~l1 adjacent~l1 Luxembourg~l1 x00000001 )
( Algeria~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Egypt~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Sudan~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Tunisia~l1 adjacent~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( Romania~l1 adjacent~l1 Republic_of_Moldova~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Republic_of_Moldova~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Mongolia~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Mongolia~l1 x00000001 )
( Mozambique~l1 adjacent~l1 Malawi~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Malawi~l1 x00000001 )
( Zambia~l1 adjacent~l1 Malawi~l1 x00000001 )
( Albania~l1 adjacent~l1 Montenegro~l1 x00000001 )
( Bosnia_and_Herzegovina~l1 adjacent~l1 Montenegro~l1 x00000001 )
( Croatia~l1 adjacent~l1 Montenegro~l1 x00000001 )
( Serbia~l1 adjacent~l1 Montenegro~l1 x00000001 )
( Albania~l1 adjacent~l1 Republic_of_Macedonia~l1 x00000001 )
( Bulgaria~l1 adjacent~l1 Republic_of_Macedonia~l1 x00000001 )
( Greece~l1 adjacent~l1 Republic_of_Macedonia~l1 x00000001 )
( Serbia~l1 adjacent~l1 Republic_of_Macedonia~l1 x00000001 )
( Algeria~l1 adjacent~l1 Mali~l1 x00000001 )
( Burkina_faso~l1 adjacent~l1 Mali~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Mali~l1 x00000001 )
( Cote_d'Ivoire~l1 adjacent~l1 Mali~l1 x00000001 )
( Mauritania~l1 adjacent~l1 Mali~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Mali~l1 x00000001 )
( Senegal~l1 adjacent~l1 Mali~l1 x00000001 )
( France~l1 adjacent~l1 Monaco~l1 x00000001 )
( Algeria~l1 adjacent~l1 Morocco~l1 x00000001 )
( Western_Sahara~l1 adjacent~l1 Morocco~l1 x00000001 )
( Spain~l1 adjacent~l1 Morocco~l1 x00000001 )
( Algeria~l1 adjacent~l1 Mauritania~l1 x00000001 )
( Mali~l1 adjacent~l1 Mauritania~l1 x00000001 )
( Senegal~l1 adjacent~l1 Mauritania~l1 x00000001 )
( Western_Sahara~l1 adjacent~l1 Mauritania~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Sultanate_of_Oman~l1 x00000001 )
( United_Arab_Emirates~l1 adjacent~l1 Sultanate_of_Oman~l1 x00000001 )
( Yemen~l1 adjacent~l1 Sultanate_of_Oman~l1 x00000001 )
( Belize~l1 adjacent~l1 Mexico~l1 x00000001 )
( Guatemala~l1 adjacent~l1 Mexico~l1 x00000001 )
( United_States_of_America~l1 adjacent~l1 Mexico~l1 x00000001 )
( Brunei_Abode_of_Peace~l1 adjacent~l1 Malaysia~l1 x00000001 )
( Indonesia~l1 adjacent~l1 Malaysia~l1 x00000001 )
( Thailand~l1 adjacent~l1 Malaysia~l1 x00000001 )
( Malawi~l1 adjacent~l1 Mozambique~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Mozambique~l1 x00000001 )
( Swaziland~l1 adjacent~l1 Mozambique~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Mozambique~l1 x00000001 )
( Zambia~l1 adjacent~l1 Mozambique~l1 x00000001 )
( Republic_of_Zimbabwe~l1 adjacent~l1 Mozambique~l1 x00000001 )
( Algeria~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Republic_of_Benin~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Burkina_Faso~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Mali~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Nigeria~l1 adjacent~l1 Republic_of_Niger~l1 x00000001 )
( Republic_of_Benin~l1 adjacent~l1 Nigeria~l1 x00000001 )
( Cameroon~l1 adjacent~l1 Nigeria~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Nigeria~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Nigeria~l1 x00000001 )
( Belgium~l1 adjacent~l1 Netherlands~l1 x00000001 )
( Germany~l1 adjacent~l1 Netherlands~l1 x00000001 )
( Finland~l1 adjacent~l1 Norway~l1 x00000001 )
( Sweden~l1 adjacent~l1 Norway~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Norway~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Nepal~l1 x00000001 )
( India~l1 adjacent~l1 Nepal~l1 x00000001 )
( Brazil~l1 adjacent~l1 Republic_of_Suriname~l1 x00000001 )
( Guyana~l1 adjacent~l1 Republic_of_Suriname~l1 x00000001 )
( Costa_Rica~l1 adjacent~l1 Nicaragua~l1 x00000001 )
( Honduras~l1 adjacent~l1 Nicaragua~l1 x00000001 )
( Argentina~l1 adjacent~l1 Paraguay~l1 x00000001 )
( Bolivia~l1 adjacent~l1 Paraguay~l1 x00000001 )
( Brazil~l1 adjacent~l1 Paraguay~l1 x00000001 )
( Bolivia~l1 adjacent~l1 Peru~l1 x00000001 )
( Brazil~l1 adjacent~l1 Peru~l1 x00000001 )
( Chile~l1 adjacent~l1 Peru~l1 x00000001 )
( Republic_of_Colombia~l1 adjacent~l1 Peru~l1 x00000001 )
( Ecuador~l1 adjacent~l1 Peru~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 Pakistan~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Pakistan~l1 x00000001 )
( India~l1 adjacent~l1 Pakistan~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Pakistan~l1 x00000001 )
( Belarus~l1 adjacent~l1 Poland~l1 x00000001 )
( Czech_Republic~l1 adjacent~l1 Poland~l1 x00000001 )
( Germany~l1 adjacent~l1 Poland~l1 x00000001 )
( Republic_of_Lithuania~l1 adjacent~l1 Poland~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Poland~l1 x00000001 )
( Slovakia~l1 adjacent~l1 Poland~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Poland~l1 x00000001 )
( Republic_of_Colombia~l1 adjacent~l1 Panama~l1 x00000001 )
( Costa_Rica~l1 adjacent~l1 Panama~l1 x00000001 )
( Spain~l1 adjacent~l1 Portugal~l1 x00000001 )
( Indonesia~l1 adjacent~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Guinea-Bissau~l1 x00000001 )
( Senegal~l1 adjacent~l1 Guinea-Bissau~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Qatar~l1 x00000001 )
( Albania~l1 adjacent~l1 Serbia~l1 x00000001 )
( Bosnia_and_Herzegovina~l1 adjacent~l1 Serbia~l1 x00000001 )
( Bulgaria~l1 adjacent~l1 Serbia~l1 x00000001 )
( Croatia~l1 adjacent~l1 Serbia~l1 x00000001 )
( Hungary~l1 adjacent~l1 Serbia~l1 x00000001 )
( Republic_of_Macedonia~l1 adjacent~l1 Serbia~l1 x00000001 )
( Montenegro~l1 adjacent~l1 Serbia~l1 x00000001 )
( Romania~l1 adjacent~l1 Serbia~l1 x00000001 )
( Bulgaria~l1 adjacent~l1 Romania~l1 x00000001 )
( Hungary~l1 adjacent~l1 Romania~l1 x00000001 )
( Republic_of_Moldova~l1 adjacent~l1 Romania~l1 x00000001 )
( Serbia~l1 adjacent~l1 Romania~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Romania~l1 x00000001 )
( Azerbaijan~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Belarus~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Republic_of_Estonia~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Finland~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Georgia~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Kazakhstan~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Democratic_People_'s_Republic_of_Korea~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Republic_of_Latvia~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Republic_of_Lithuania~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Mongolia~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Norway~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Poland~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Ukraine~l1 adjacent~l1 Russian_Federation~l1 x00000001 )
( Republic_of_Burundi~l1 adjacent~l1 Rwanda~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Rwanda~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Rwanda~l1 x00000001 )
( Uganda~l1 adjacent~l1 Rwanda~l1 x00000001 )
( Iraq~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Jordan~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Kuwait~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Sultanate_of_Oman~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Qatar~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( United_Arab_Emirates~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Yemen~l1 adjacent~l1 Saudi_Arabia~l1 x00000001 )
( Botswana~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Kingdom_of_Lesotho~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Mozambique~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Namibia~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Swaziland~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Republic_of_Zimbabwe~l1 adjacent~l1 South_Africa~l1 x00000001 )
( Gambia~l1 adjacent~l1 Senegal~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Senegal~l1 x00000001 )
( Guinea-Bissau~l1 adjacent~l1 Senegal~l1 x00000001 )
( Mali~l1 adjacent~l1 Senegal~l1 x00000001 )
( Mauritania~l1 adjacent~l1 Senegal~l1 x00000001 )
( Austria~l1 adjacent~l1 Slovenia~l1 x00000001 )
( Croatia~l1 adjacent~l1 Slovenia~l1 x00000001 )
( Hungary~l1 adjacent~l1 Slovenia~l1 x00000001 )
( Italy~l1 adjacent~l1 Slovenia~l1 x00000001 )
( Republic_of_Guinea~l1 adjacent~l1 Sierra_Leone~l1 x00000001 )
( Liberia~l1 adjacent~l1 Sierra_Leone~l1 x00000001 )
( Italy~l1 adjacent~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( Republic_of_djibouti~l1 adjacent~l1 Somalia~l1 x00000001 )
( Ethiopia~l1 adjacent~l1 Somalia~l1 x00000001 )
( Republic_of_Kenya~l1 adjacent~l1 Somalia~l1 x00000001 )
( Andorra~l1 adjacent~l1 Spain~l1 x00000001 )
( France~l1 adjacent~l1 Spain~l1 x00000001 )
( Gibraltar~l1 adjacent~l1 Spain~l1 x00000001 )
( Portugal~l1 adjacent~l1 Spain~l1 x00000001 )
( Morocco~l1 adjacent~l1 Spain~l1 x00000001 )
( Central_African_Republic~l1 adjacent~l1 Sudan~l1 x00000001 )
( Republic_of_Chad~l1 adjacent~l1 Sudan~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Sudan~l1 x00000001 )
( Egypt~l1 adjacent~l1 Sudan~l1 x00000001 )
( Eritrea~l1 adjacent~l1 Sudan~l1 x00000001 )
( Ethiopia~l1 adjacent~l1 Sudan~l1 x00000001 )
( Republic_of_Kenya~l1 adjacent~l1 Sudan~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Sudan~l1 x00000001 )
( Uganda~l1 adjacent~l1 Sudan~l1 x00000001 )
( Finland~l1 adjacent~l1 Sweden~l1 x00000001 )
( Norway~l1 adjacent~l1 Sweden~l1 x00000001 )
( Iraq~l1 adjacent~l1 Syrian_Arab_Republic~l1 x00000001 )
( Israel~l1 adjacent~l1 Syrian_Arab_Republic~l1 x00000001 )
( Jordan~l1 adjacent~l1 Syrian_Arab_Republic~l1 x00000001 )
( Lebanon~l1 adjacent~l1 Syrian_Arab_Republic~l1 x00000001 )
( Turkey~l1 adjacent~l1 Syrian_Arab_Republic~l1 x00000001 )
( Austria~l1 adjacent~l1 Switzerland~l1 x00000001 )
( France~l1 adjacent~l1 Switzerland~l1 x00000001 )
( Italy~l1 adjacent~l1 Switzerland~l1 x00000001 )
( Principality_of_Liechtenstein~l1 adjacent~l1 Switzerland~l1 x00000001 )
( Germany~l1 adjacent~l1 Switzerland~l1 x00000001 )
( Union_of_Myanmar~l1 adjacent~l1 Thailand~l1 x00000001 )
( Kingdom_of_Cambodia~l1 adjacent~l1 Thailand~l1 x00000001 )
( Lao_People_'s_Democratic_Republic~l1 adjacent~l1 Thailand~l1 x00000001 )
( Malaysia~l1 adjacent~l1 Thailand~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 Tajikistan~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Tajikistan~l1 x00000001 )
( Kyrgyzstan~l1 adjacent~l1 Tajikistan~l1 x00000001 )
( Uzbekistan~l1 adjacent~l1 Tajikistan~l1 x00000001 )
( Republic_of_Benin~l1 adjacent~l1 Togo~l1 x00000001 )
( Burkina_Faso~l1 adjacent~l1 Togo~l1 x00000001 )
( Ghana~l1 adjacent~l1 Togo~l1 x00000001 )
( Algeria~l1 adjacent~l1 Tunisia~l1 x00000001 )
( Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 adjacent~l1 Tunisia~l1 x00000001 )
( Indonesia~l1 adjacent~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( Armenia~l1 adjacent~l1 Turkey~l1 x00000001 )
( Azerbaijan~l1 adjacent~l1 Turkey~l1 x00000001 )
( Bulgaria~l1 adjacent~l1 Turkey~l1 x00000001 )
( Georgia~l1 adjacent~l1 Turkey~l1 x00000001 )
( Greece~l1 adjacent~l1 Turkey~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Turkey~l1 x00000001 )
( Iraq~l1 adjacent~l1 Turkey~l1 x00000001 )
( Syrian_Arab_Republic~l1 adjacent~l1 Turkey~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 Turkmenistan~l1 x00000001 )
( Islamic_Republic_of_Iran~l1 adjacent~l1 Turkmenistan~l1 x00000001 )
( Kazakhstan~l1 adjacent~l1 Turkmenistan~l1 x00000001 )
( Uzbekistan~l1 adjacent~l1 Turkmenistan~l1 x00000001 )
( Republic_of_Burundi~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Republic_of_Kenya~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Malawi~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Mozambique~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Rwanda~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Uganda~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Zambia~l1 adjacent~l1 United_Republic_of_Tanzania~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Uganda~l1 x00000001 )
( Republic_of_kenya~l1 adjacent~l1 Uganda~l1 x00000001 )
( Rwanda~l1 adjacent~l1 Uganda~l1 x00000001 )
( Sudan~l1 adjacent~l1 Uganda~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Uganda~l1 x00000001 )
( Republic_of_Ireland~l1 adjacent~l1 United_Kingdom~l1 x00000001 )
( Belarus~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Hungary~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Republic_of_Moldova~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Poland~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Romania~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Russian_Federation~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Slovakia~l1 adjacent~l1 Ukraine~l1 x00000001 )
( Canada~l1 adjacent~l1 United_States_of_America~l1 x00000001 )
( Republic_of_Benin~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Cote_d'Ivoire~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Ghana~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Mali~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Republic_of_Niger~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Togo~l1 adjacent~l1 Burkina_Faso~l1 x00000001 )
( Argentina~l1 adjacent~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( Brazil~l1 adjacent~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( Afghanistan~l1 adjacent~l1 Uzbekistan~l1 x00000001 )
( Kazakhstan~l1 adjacent~l1 Uzbekistan~l1 x00000001 )
( Kyrgyzstan~l1 adjacent~l1 Uzbekistan~l1 x00000001 )
( Tajikistan~l1 adjacent~l1 Uzbekistan~l1 x00000001 )
( Turkmenistan~l1 adjacent~l1 Uzbekistan~l1 x00000001 )
( Brazil~l1 adjacent~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Republic_of_Colombia~l1 adjacent~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Guyana~l1 adjacent~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( Kingdom_of_Cambodia~l1 adjacent~l1 Vietnam~l1 x00000001 )
( People_'s_Republic_of_China~l1 adjacent~l1 Vietnam~l1 x00000001 )
( Lao_People_'s_Democratic_Republic~l1 adjacent~l1 Vietnam~l1 x00000001 )
( Italy~l1 adjacent~l1 Vatican_City~l1 x00000001 )
( Angola~l1 adjacent~l1 Namibia~l1 x00000001 )
( Botswana~l1 adjacent~l1 Namibia~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Namibia~l1 x00000001 )
( Zambia~l1 adjacent~l1 Namibia~l1 x00000001 )
( Mozambique~l1 adjacent~l1 Swaziland~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Swaziland~l1 x00000001 )
( Sultanate_of_Oman~l1 adjacent~l1 Yemen~l1 x00000001 )
( Saudi_Arabia~l1 adjacent~l1 Yemen~l1 x00000001 )
( Angola~l1 adjacent~l1 Zambia~l1 x00000001 )
( Democratic_Republic_of_the_Congo~l1 adjacent~l1 Zambia~l1 x00000001 )
( Malawi~l1 adjacent~l1 Zambia~l1 x00000001 )
( Mozambique~l1 adjacent~l1 Zambia~l1 x00000001 )
( Namibia~l1 adjacent~l1 Zambia~l1 x00000001 )
( United_Republic_of_Tanzania~l1 adjacent~l1 Zambia~l1 x00000001 )
( Republic_of_Zimbabwe~l1 adjacent~l1 Zambia~l1 x00000001 )
( Botswana~l1 adjacent~l1 Republic_of_Zimbabwe~l1 x00000001 )
( Mozambique~l1 adjacent~l1 Republic_of_Zimbabwe~l1 x00000001 )
( South_Africa~l1 adjacent~l1 Republic_of_Zimbabwe~l1 x00000001 )
( Zambia~l1 adjacent~l1 Republic_of_Zimbabwe~l1 x00000001 )
( grass~l1 color~l1 green~l1 x00000001 )
( leaf~l1 color~l1 green~l1 x00000001 )
( plant~l1 color~l1 green~l1 x00000001 )
( emerald~l1 color~l1 green~l1 x00000001 )
( ~plants color~l1 green~l1 x00000001 )
( turtle~l1 color~l1 green~l1 x00000001 )
( parsley~l1 color~l1 green~l1 x00000001 )
( topaz~l1 color~l1 green~l1 x00000001 )
( lettuce~l1 color~l1 green~l1 x00000001 )
( lime~l1 color~l1 green~l1 x00000001 )
( spinach~l1 color~l1 green~l1 x00000001 )
( celery~l1 color~l1 green~l1 x00000001 )
( pear~l1 color~l1 green~l1 x00000001 )
( broccoli~l1 color~l1 green~l1 x00000001 )
( apple~l1 color~l1 green~l1 x00000001 )
( shamrock~l1 color~l1 green~l1 x00000001 )
( artichoke~l1 color~l1 green~l1 x00000001 )
( arugula~l1 color~l1 green~l1 x00000001 )
( asparagus~l1 color~l1 green~l1 x00000001 )
( avacado~l1 color~l1 green~l1 x00000001 )
( brussel_sprout~l1 color~l1 green~l1 x00000001 )
( chinese_cabbage~l1 color~l1 green~l1 x00000001 )
( cucumber~l1 color~l1 green~l1 x00000001 )
( endive~l1 color~l1 green~l1 x00000001 )
( green_apple~l1 color~l1 green~l1 x00000001 )
( green_bean~l1 color~l1 green~l1 x00000001 )
( bean~l1 color~l1 green~l1 x00000001 )
( cabbage~l1 color~l1 green~l1 x00000001 )
( green_onion~l1 color~l1 green~l1 x00000001 )
( green_pepper~l1 color~l1 green~l1 x00000001 )
( honeydew~l1 color~l1 green~l1 x00000001 )
( kiwi~l1 color~l1 green~l1 x00000001 )
( kiwifruit~l1 color~l1 green~l1 x00000001 )
( leek~l1 color~l1 green~l1 x00000001 )
( okra~l1 color~l1 green~l1 x00000001 )
( pea~l1 color~l1 green~l1 x00000001 )
( snow_pea~l1 color~l1 green~l1 x00000001 )
( watercress~l1 color~l1 green~l1 x00000001 )
( zucchini~l1 color~l1 green~l1 x00000001 )
( bread~l1 color~l1 brown~l1 x00000001 )
( tree_trunk~l1 color~l1 brown~l1 x00000001 )
( tree~l1 color~l1 brown~l1 x00000001 )
( soil~l1 color~l1 brown~l1 x00000001 )
( dirt~l1 color~l1 brown~l1 x00000001 )
( earth~l1 color~l1 brown~l1 x00000001 )
( mud~l1 color~l1 brown~l1 x00000001 )
( chocolate~l1 color~l1 brown~l1 x00000001 )
( bark~l1 color~l1 brown~l1 x00000001 )
( beaver~l1 color~l1 brown~l1 x00000001 )
( coffee~l1 color~l1 brown~l1 x00000001 )
( toast~l1 color~l1 brown~l1 x00000001 )
( root_beer~l1 color~l1 brown~l1 x00000001 )
( eye~l1 color~l1 brown~l1 x00000001 )
( raisin~l1 color~l1 brown~l1 x00000001 )
( shit~l1 color~l1 brown~l1 x00000001 )
( feces~l1 color~l1 brown~l1 x00000001 )
( crap~l1 color~l1 brown~l1 x00000001 )
( wood~l1 color~l1 brown~l1 x00000001 )
( furniture~l1 color~l1 brown~l1 x00000001 )
( floor~l1 color~l1 brown~l1 x00000001 )
( floorboard~l1 color~l1 brown~l1 x00000001 )
( orange~l1 color~l1 orange~l1 x00000001 )
( marigold~l1 color~l1 orange~l1 x00000001 )
( goldfish~l1 color~l1 orange~l1 x00000001 )
( pumpkin~l1 color~l1 orange~l1 x00000001 )
( carrot~l1 color~l1 orange~l1 x00000001 )
( tangerine~l1 color~l1 orange~l1 x00000001 )
( cantaloupe~l1 color~l1 orange~l1 x00000001 )
( mango~l1 color~l1 orange~l1 x00000001 )
( opal~l1 color~l1 orange~l1 x00000001 )
( sky~l1 color~l1 blue~l1 x00000001 )
( water~l1 color~l1 blue~l1 x00000001 )
( bluebell~l1 color~l1 blue~l1 x00000001 )
( blue_screen_of_death~l1 color~l1 blue~l1 x00000001 )
( blue_jeans~l1 color~l1 blue~l1 x00000001 )
( jeans~l1 color~l1 blue~l1 x00000001 )
( blueberry~l1 color~l1 blue~l1 x00000001 )
( gulf~l1 color~l1 blue~l1 x00000001 )
( pond~l1 color~l1 blue~l1 x00000001 )
( river~l1 color~l1 blue~l1 x00000001 )
( creek~l1 color~l1 blue~l1 x00000001 )
( stream~l1 color~l1 blue~l1 x00000001 )
( ocean~l1 color~l1 blue~l1 x00000001 )
( sea~l1 color~l1 blue~l1 x00000001 )
( lake~l1 color~l1 blue~l1 x00000001 )
( ink~l1 color~l1 blue~l1 x00000001 )
( blue_jay~l1 color~l1 blue~l1 x00000001 )
( eye~l1 color~l1 blue~l1 x00000001 )
( lollipop~l1 color~l1 purple~l1 x00000001 )
( grape~l1 color~l1 purple~l1 x00000001 )
( violet~l1 color~l1 purple~l1 x00000001 )
( plum~l1 color~l1 purple~l1 x00000001 )
( lilacs~l1 color~l1 purple~l1 x00000001 )
( black_currant~l1 color~l1 purple~l1 x00000001 )
( blackberry~l1 color~l1 purple~l1 x00000001 )
( eggplant~l1 color~l1 purple~l1 x00000001 )
( prune~l1 color~l1 purple~l1 x00000001 )
( fire~l1 color~l1 red~l1 x00000001 )
( fire_engine~l1 color~l1 red~l1 x00000001 )
( ruby~l1 color~l1 red~l1 x00000001 )
( robin_'s_breast~l1 color~l1 red~l1 x00000001 )
( rose~l1 color~l1 red~l1 x00000001 )
( apple~l1 color~l1 red~l1 x00000001 )
( hair~l1 color~l1 red~l1 x00000001 )
( steak~l1 color~l1 red~l1 x00000001 )
( beef~l1 color~l1 red~l1 x00000001 )
( cherry~l1 color~l1 red~l1 x00000001 )
( heart~l1 color~l1 red~l1 x00000001 )
( lip~l1 color~l1 red~l1 x00000001 )
( lipstick~l1 color~l1 red~l1 x00000001 )
( stop_sign~l1 color~l1 red~l1 x00000001 )
( stop_light~l1 color~l1 red~l1 x00000001 )
( cardinal~l1 color~l1 red~l1 x00000001 )
( blood~l1 color~l1 red~l1 x00000001 )
( garnet~l1 color~l1 red~l1 x00000001 )
( beet~l1 color~l1 red~l1 x00000001 )
( cranberry~l1 color~l1 red~l1 x00000001 )
( guava~l1 color~l1 red~l1 x00000001 )
( pink_grapefruit~l1 color~l1 red~l1 x00000001 )
( pomegranate~l1 color~l1 red~l1 x00000001 )
( radish~l1 color~l1 red~l1 x00000001 )
( red_apple~l1 color~l1 red~l1 x00000001 )
( red_grape~l1 color~l1 red~l1 x00000001 )
( grape~l1 color~l1 red~l1 x00000001 )
( red_onion~l1 color~l1 red~l1 x00000001 )
( onion~l1 color~l1 red~l1 x00000001 )
( red_pepper~l1 color~l1 red~l1 x00000001 )
( potato~l1 color~l1 red~l1 x00000001 )
( rhubarb~l1 color~l1 red~l1 x00000001 )
( strawberry~l1 color~l1 red~l1 x00000001 )
( tomato~l1 color~l1 red~l1 x00000001 )
( watermelon~l1 color~l1 red~l1 x00000001 )
( dawn~l1 color~l1 rosy~l1 x00000001 )
( sunset~l1 color~l1 rosy~l1 x00000001 )
( sun~l1 color~l1 yellow~l1 x00000001 )
( daffodil~l1 color~l1 yellow~l1 x00000001 )
( primrose~l1 color~l1 yellow~l1 x00000001 )
( lemon~l1 color~l1 yellow~l1 x00000001 )
( dandelion~l1 color~l1 yellow~l1 x00000001 )
( egg_yolk~l1 color~l1 yellow~l1 x00000001 )
( yolk~l1 color~l1 yellow~l1 x00000001 )
( pineapple~l1 color~l1 yellow~l1 x00000001 )
( apricot~l1 color~l1 yellow~l1 x00000001 )
( banana~l1 color~l1 yellow~l1 x00000001 )
( cheese~l1 color~l1 yellow~l1 x00000001 )
( papaya~l1 color~l1 yellow~l1 x00000001 )
( coin~l1 color~l1 gold~l1 x00000001 )
( nugget~l1 color~l1 gold~l1 x00000001 )
( watch~l1 color~l1 gold~l1 x00000001 )
( filling~l1 color~l1 gold~l1 x00000001 )
( tooth~l1 color~l1 gold~l1 x00000001 )
( earring~l1 color~l1 gold~l1 x00000001 )
( necklace~l1 color~l1 gold~l1 x00000001 )
( bracelet~l1 color~l1 gold~l1 x00000001 )
( medal~l1 color~l1 gold~l1 x00000001 )
( crown~l1 color~l1 gold~l1 x00000001 )
( jewelry~l1 color~l1 gold~l1 x00000001 )
( ring~l1 color~l1 gold~l1 x00000001 )
( coin~l1 color~l1 silver~l1 x00000001 )
( teaspoon~l1 color~l1 silver~l1 x00000001 )
( fork~l1 color~l1 silver~l1 x00000001 )
( knife~l1 color~l1 silver~l1 x00000001 )
( spoon~l1 color~l1 silver~l1 x00000001 )
( watch~l1 color~l1 silver~l1 x00000001 )
( pocketwatch~l1 color~l1 silver~l1 x00000001 )
( dime~l1 color~l1 silver~l1 x00000001 )
( quarter~l1 color~l1 silver~l1 x00000001 )
( dollar_coin~l1 color~l1 silver~l1 x00000001 )
( medal~l1 color~l1 silver~l1 x00000001 )
( filling~l1 color~l1 silver~l1 x00000001 )
( penny~l1 color~l1 copper~l1 x00000001 )
( wire~l1 color~l1 copper~l1 x00000001 )
( statue~l1 color~l1 bronze~l1 x00000001 )
( medal~l1 color~l1 bronze~l1 x00000001 )
( night~l1 color~l1 black~l1 x00000001 )
( darkness~l1 color~l1 black~l1 x00000001 )
( death~l1 color~l1 black~l1 x00000001 )
( dead~l1 color~l1 black~l1 x00000001 )
( corpse~l1 color~l1 black~l1 x00000001 )
( computer~l1 color~l1 black~l1 x00000001 )
( speaker~l1 color~l1 black~l1 x00000001 )
( electronic_equipment~l1 color~l1 black~l1 x00000001 )
( Tivo~l1 color~l1 black~l1 x00000001 )
( TV~l1 color~l1 black~l1 x00000001 )
( pavement~l1 color~l1 black~l1 x00000001 )
( magnet~l1 color~l1 black~l1 x00000001 )
( tire~l1 color~l1 black~l1 x00000001 )
( smoke~l1 color~l1 black~l1 x00000001 )
( panther~l1 color~l1 black~l1 x00000001 )
( opal~l1 color~l1 black~l1 x00000001 )
( zebra~l1 color~l1 black~l1 x00000001 )
( charcoal~l1 color~l1 black~l1 x00000001 )
( bread~l1 color~l1 white~l1 x00000001 )
( snow~l1 color~l1 white~l1 x00000001 )
( snowman~l1 color~l1 white~l1 x00000001 )
( sheet~l1 color~l1 white~l1 x00000001 )
( pillowcase~l1 color~l1 white~l1 x00000001 )
( cloud~l1 color~l1 white~l1 x00000001 )
( lamb~l1 color~l1 white~l1 x00000001 )
( cotton_ball~l1 color~l1 white~l1 x00000001 )
( cotton~l1 color~l1 white~l1 x00000001 )
( milk~l1 color~l1 white~l1 x00000001 )
( cream~l1 color~l1 white~l1 x00000001 )
( polar_bear~l1 color~l1 white~l1 x00000001 )
( tooth~l1 color~l1 white~l1 x00000001 )
( bride~l1 color~l1 white~l1 x00000001 )
( zebra~l1 color~l1 white~l1 x00000001 )
( fog~l1 color~l1 white~l1 x00000001 )
( egg~l1 color~l1 white~l1 x00000001 )
( moon~l1 color~l1 white~l1 x00000001 )
( chicken~l1 color~l1 white~l1 x00000001 )
( pigeon~l1 color~l1 white~l1 x00000001 )
( dove~l1 color~l1 white~l1 x00000001 )
( ginger~l1 color~l1 white~l1 x00000001 )
( cauliflower~l1 color~l1 white~l1 x00000001 )
( garlic~l1 color~l1 white~l1 x00000001 )
( jicama~l1 color~l1 white~l1 x00000001 )
( kohlrabi~l1 color~l1 white~l1 x00000001 )
( onion~l1 color~l1 white~l1 x00000001 )
( parsnip~l1 color~l1 white~l1 x00000001 )
( potato~l1 color~l1 white~l1 x00000001 )
( shallot~l1 color~l1 white~l1 x00000001 )
( turnip~l1 color~l1 white~l1 x00000001 )
( white_corn~l1 color~l1 white~l1 x00000001 )
( raincloud~l1 color~l1 grey~l1 x00000001 )
( building~l1 color~l1 grey~l1 x00000001 )
( ~building color~l1 grey~l1 x00000001 )
( elephant~l1 color~l1 grey~l1 x00000001 )
( ash~l1 color~l1 grey~l1 x00000001 )
( turkey~l1 color~l1 grey~l1 x00000001 )
( computer~l1 color~l1 grey~l1 x00000001 )
( peony~l1 color~l1 pink~l1 x00000001 )
( skin~l1 color~l1 pink~l1 x00000001 )
( flesh~l1 color~l1 pink~l1 x00000001 )
( nipple~l1 color~l1 pink~l1 x00000001 )
( sausage~l1 color~l1 pink~l1 x00000001 )
( cheek~l1 color~l1 pink~l1 x00000001 )
( cream_soda~l1 color~l1 pink~l1 x00000001 )
( flamingo~l1 color~l1 pink~l1 x00000001 )
( cotton_candy~l1 color~l1 pink~l1 x00000001 )
( shrimp~l1 color~l1 pink~l1 x00000001 )
( grapefruit~l1 color~l1 pink~l1 x00000001 )
( piglet~l1 color~l1 pink~l1 x00000001 )
( rose~l1 color~l1 pink~l1 x00000001 )
( tongue~l1 color~l1 pink~l1 x00000001 )
( glass~l1 color~l1 transparent~l1 x00000001 )
( window~l1 color~l1 transparent~l1 x00000001 )
( air~l1 color~l1 transparent~l1 x00000001 )
( mirror~l1 color~l1 reflective~l1 x00000001 )
( fountain_pen~l1 expected_contain~l1 ink~l1 x00000001 )
( pen~l1 expected_contain~l1 ink~l1 x00000001 )
( pencil~l1 expected_contain~l1 lead~l1 x00000001 )
( pencil~l1 expected_contain~l1 graphite~l1 x00000001 )
( tea_cup~l1 expected_contain~l1 tea~l1 x00000001 )
( tea_chest~l1 expected_contain~l1 tea~l1 x00000001 )
( coffee_cup~l1 expected_contain~l1 coffee~l1 x00000001 )
( vase~l1 expected_contain~l1 flower~l1 x00000001 )
( saltshaker~l1 expected_contain~l1 salt~l1 x00000001 )
( ~liquid_container expected_contain~l1 ~liquid x00000001 )
( shoebox~l1 expected_contain~l1 shoe~l1 x00000001 )
( cookie_jar~l1 expected_contain~l1 cookie~l1 x00000001 )
( muffin_pan~l1 expected_contain~l1 muffin~l1 x00000001 )
( muffin_tin~l1 expected_contain~l1 muffin~l1 x00000001 )
( biscuit_tin~l1 expected_contain~l1 bisquit~l1 x00000001 )
( jewelry_box~l1 expected_contain~l1 jewelry~l1 x00000001 )
( gas_tank~l1 expected_contain~l1 gas~l1 x00000001 )
( gas_tank~l1 expected_contain~l1 gasoline~l1 x00000001 )
( gas_tank~l1 expected_contain~l1 diesel~l1 x00000001 )
( ~food_container expected_contain~l1 ~nutrient x00000001 )
( ~food_container expected_contain~l1 food~l1 x00000001 )
( dryer~l1 expected_contain~l1 clothes~l1 x00000001 )
( clothes_dryer~l1 expected_contain~l1 clothes~l1 x00000001 )
( tumble_dryer~l1 expected_contain~l1 clothes~l1 x00000001 )
( dryer~l1 expected_contain~l1 ~clothes x00000001 )
( clothes_dryer~l1 expected_contain~l1 ~clothes x00000001 )
( tumble_dryer~l1 expected_contain~l1 ~clothes x00000001 )
( bath~l1 expected_contain~l1 water~l1 x00000001 )
( bathtub~l1 expected_contain~l1 water~l1 x00000001 )
( tub~l1 expected_contain~l1 water~l1 x00000001 )
( fount~l1 expected_contain~l1 water~l1 x00000001 )
( fountain~l1 expected_contain~l1 water~l1 x00000001 )
( river~l1 expected_contain~l1 water~l1 x00000001 )
( ocean~l1 expected_contain~l1 water~l1 x00000001 )
( sea~l1 expected_contain~l1 water~l1 x00000001 )
( gulf~l1 expected_contain~l1 water~l1 x00000001 )
( stream~l1 expected_contain~l1 water~l1 x00000001 )
( spring~l1 expected_contain~l1 water~l1 x00000001 )
( pigpen~l1 expected_contain~l1 pig~l1 x00000001 )
( pigpen~l1 expected_contain~l1 piglet~l1 x00000001 )
( treat_bag~l1 expected_contain~l1 ~candy x00000001 )
( trick_or_treat_bag~l1 expected_contain~l1 ~candy x00000001 )
( Leyden_jar~l1 expected_contain~l1 electricity~l1 x00000001 )
( phone_case~l1 expected_contain~l1 phone~l1 x00000001 )
( phone_case~l1 expected_contain~l1 telephone~l1 x00000001 )
( phone_case~l1 expected_contain~l1 iPhone~l1 x00000001 )
( phone_case~l1 expected_contain~l1 cell-phone~l1 x00000001 )
( sardine_can~l1 expected_contain~l1 sardine~l1 x00000001 )
( mail~l1 expected_contain~l1 envelope~l1 x00000001 )
( mail~l1 expected_contain~l1 letter~l1 x00000001 )
( mail~l1 expected_contain~l1 postcard~l1 x00000001 )
( mail~l1 expected_contain~l1 magazine~l1 x00000001 )
( sick_bag~l1 expected_contain~l1 vomit~l1 x00000001 )
( sickbag~l1 expected_contain~l1 vomit~l1 x00000001 )
( ~money_container expected_contain~l1 money~l1 x00000001 )
( ~money_container expected_contain~l1 coin~l1 x00000001 )
( ~money_container expected_contain~l1 bill~l1 x00000001 )
( egg_cup~l1 expected_contain~l1 egg~l1 x00000001 )
( egg_server~l1 expected_contain~l1 egg~l1 x00000001 )
( ant_hill~l1 expected_contain~l1 ant~l1 x00000001 )
( wasp_nest~l1 expected_contain~l1 wasp~l1 x00000001 )
( bee_hive~l1 expected_contain~l1 bee~l1 x00000001 )
( bee_hive~l1 expected_contain~l1 honey~l1 x00000001 )
( toaster~l1 expected_contain~l1 toast~l1 x00000001 )
( toaster~l1 expected_contain~l1 bread~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 urine~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 pee~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 crap~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 shit~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 feces~l1 x00000001 )
( chamber_pot~l1 expected_contain~l1 turd~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 dish~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 plate~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 cup~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 glass~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 silverware~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 knife~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 fork~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 spoon~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 pot~l1 x00000001 )
( dishwasher~l1 expected_contain~l1 pan~l1 x00000001 )
( ~body_container expected_contain~l1 body~l1 x00000001 )
( ~body_container expected_contain~l1 corpse~l1 x00000001 )
( ~body_container expected_contain~l1 dead~l1 x00000001 )
( ~body_container expected_contain~l1 mummy~l1 x00000001 )
( parking_space~l1 expected_contain~l1 ~car x00000001 )
( parking_spot~l1 expected_contain~l1 ~car x00000001 )
( garage~l1 expected_contain~l1 ~car x00000001 )
( parking_lot~l1 expected_contain~l1 ~car x00000001 )
( birdcage~l1 expected_contain~l1 bird~l1 x00000001 )
( aquarium~l1 expected_contain~l1 fish~l1 x00000001 )
( fish_tank~l1 expected_contain~l1 fish~l1 x00000001 )
( aquarium~l1 expected_contain~l1 ~fish x00000001 )
( fish_tank~l1 expected_contain~l1 ~fish x00000001 )
( 2 size~l1 saltshaker~l1 x00000001 )
( 3 size~l1 bowl~l1 x00000001 )
( 3 size~l1 mixing_bowl~l1 x00000001 )
( 3 size~l1 canister~l1 x00000001 )
( 3 size~l1 vacuum_flask~l1 x00000001 )
( 3 size~l1 thermos~l1 x00000001 )
( 3 size~l1 tumbler~l1 x00000001 )
( 3 size~l1 shoebox~l1 x00000001 )
( 3 size~l1 tea_chest~l1 x00000001 )
( 3 size~l1 jar~l1 x00000001 )
( 3 size~l1 biscuit_jar~l1 x00000001 )
( 3 size~l1 cookie_jar~l1 x00000001 )
( 3 size~l1 biscuit_tin~l1 x00000001 )
( 4 size~l1 almery~l1 x00000001 )
( 4 size~l1 ambry~l1 x00000001 )
( 4 size~l1 atjmery~l1 x00000001 )
( 4 size~l1 aumbrie~l1 x00000001 )
( 4 size~l1 jewellery_box~l1 x00000001 )
( 4 size~l1 jewelry_box~l1 x00000001 )
( 4 size~l1 keepsake_box~l1 x00000001 )
( 4 size~l1 aluminum_bottle~l1 x00000001 )
( 4 size~l1 can~n~l1 x00000001 )
( 4 size~l1 aluminum_can~l1 x00000001 )
( 4 size~l1 purse~l1 x00000001 )
( 4 size~l1 bum_bag~l1 x00000001 )
( 4 size~l1 money_belt~l1 x00000001 )
( 4 size~l1 musette~l1 x00000001 )
( 4 size~l1 fanny_pack~l1 x00000001 )
( 4 size~l1 hip_pack~l1 x00000001 )
( 4 size~l1 sporran~l1 x00000001 )
( 4 size~l1 carrier_bag~l1 x00000001 )
( 4 size~l1 doggy_bag~l1 x00000001 )
( 4 size~l1 gift_bag~l1 x00000001 )
( 4 size~l1 paper_bag~l1 x00000001 )
( 4 size~l1 shopping_bag~l1 x00000001 )
( 4 size~l1 treat_bag~l1 x00000001 )
( 4 size~l1 trick_or_treat_bag~l1 x00000001 )
( 4 size~l1 package~l1 x00000001 )
( 4 size~l1 care_package~l1 x00000001 )
( 4 size~l1 Leyden_jar~l1 x00000001 )
( 4 size~l1 phone_case~l1 x00000001 )
( 4 size~l1 sardine_can~l1 x00000001 )
( 5 size~l1 bolthead~l1 x00000001 )
( 5 size~l1 bota_bag~l1 x00000001 )
( 5 size~l1 tetsubin~l1 x00000001 )
( 5 size~l1 bear_canister~l1 x00000001 )
( 5 size~l1 zahato~l1 x00000001 )
( 5 size~l1 kamandal~l1 x00000001 )
( 5 size~l1 kamandalam~l1 x00000001 )
( 5 size~l1 kamandalu~l1 x00000001 )
( 5 size~l1 tiene~l1 x00000001 )
( 5 size~l1 tine~l1 x00000001 )
( 5 size~l1 censer~l1 x00000001 )
( 5 size~l1 thurible~l1 x00000001 )
( 5 size~l1 mail~l1 x00000001 )
( 5 size~l1 parcel~l1 x00000001 )
( 5 size~l1 post~l1 x00000001 )
( 5 size~l1 sick_bag~l1 x00000001 )
( 5 size~l1 sickbag~l1 x00000001 )
( 5 size~l1 coin_purse~l1 x00000001 )
( 5 size~l1 measuring_cup~l1 x00000001 )
( 6 size~l1 alms_box~l1 x00000001 )
( 6 size~l1 donation_box~l1 x00000001 )
( 6 size~l1 mite_box~l1 x00000001 )
( 6 size~l1 money_box~l1 x00000001 )
( 6 size~l1 penny_bank~l1 x00000001 )
( 6 size~l1 piggy_bank~l1 x00000001 )
( 6 size~l1 poor_box~l1 x00000001 )
( 6 size~l1 basket~l1 x00000001 )
( 6 size~l1 gift_basket~l1 x00000001 )
( 6 size~l1 picnic_basket~l1 x00000001 )
( 6 size~l1 diaper_bag~l1 x00000001 )
( 6 size~l1 tote_bag~l1 x00000001 )
( 6 size~l1 tote~l1 x00000001 )
( 6 size~l1 dry_bag~l1 x00000001 )
( 6 size~l1 duffel_bag~l1 x00000001 )
( 6 size~l1 gym_bag~l1 x00000001 )
( 6 size~l1 egg_cup~l1 x00000001 )
( 6 size~l1 jigger~l1 x00000001 )
( 6 size~l1 egg_server~l1 x00000001 )
( 6 size~l1 gift_box~l1 x00000001 )
( 6 size~l1 gift~l1 x00000001 )
( 6 size~l1 present~l1 x00000001 )
( 6 size~l1 muffin_pan~l1 x00000001 )
( 6 size~l1 muffin_tin~l1 x00000001 )
( 6 size~l1 pack~l1 x00000001 )
( 6 size~l1 back_pack~l1 x00000001 )
( 6 size~l1 backpack~l1 x00000001 )
( 6 size~l1 travel_pack~l1 x00000001 )
( 6 size~l1 packsack~l1 x00000001 )
( 6 size~l1 ant_hill~l1 x00000001 )
( 6 size~l1 pot~l1 x00000001 )
( 6 size~l1 pottery~l1 x00000001 )
( 6 size~l1 purse~l1 x00000001 )
( 6 size~l1 tiffin_carrier~l1 x00000001 )
( 6 size~l1 tinderbox~l1 x00000001 )
( 6 size~l1 toaster~l1 x00000001 )
( 7 size~l1 chamber_pot~l1 x00000001 )
( 7 size~l1 potty~l1 x00000001 )
( 7 size~l1 bag~l1 x00000001 )
( 7 size~l1 pouch~l1 x00000001 )
( 7 size~l1 sack~l1 x00000001 )
( 7 size~l1 ceramic~l1 x00000001 )
( 7 size~l1 lacquer~l1 x00000001 )
( 7 size~l1 terra_cotta~l1 x00000001 )
( 7 size~l1 earthenware~l1 x00000001 )
( 7 size~l1 lacquerware~l1 x00000001 )
( 7 size~l1 stoneware~l1 x00000001 )
( 7 size~l1 glove_box~l1 x00000001 )
( 7 size~l1 toolbox~l1 x00000001 )
( 7 size~l1 tool_box~l1 x00000001 )
( 7 size~l1 workbox~l1 x00000001 )
( 7 size~l1 tool_chest~l1 x00000001 )
( 7 size~l1 moneybag~l1 x00000001 )
( 7 size~l1 pocket~l1 x00000001 )
( 7 size~l1 pill_box~l1 x00000001 )
( 7 size~l1 pillbox~l1 x00000001 )
( 7 size~l1 etui~l1 x00000001 )
( 7 size~l1 hamper~l1 x00000001 )
( 8 size~l1 bin_bag~l1 x00000001 )
( 8 size~l1 trash_bag~l1 x00000001 )
( 8 size~l1 bin_liner~l1 x00000001 )
( 8 size~l1 refuse_sack~l1 x00000001 )
( 8 size~l1 swag_sack~l1 x00000001 )
( 8 size~l1 Dumpster~l1 x00000001 )
( 8 size~l1 waste_receptacle~l1 x00000001 )
( 8 size~l1 mouse_hole~l1 x00000001 )
( 8 size~l1 mound~l1 x00000001 )
( 9 size~l1 lock_box~l1 x00000001 )
( 9 size~l1 lockbox~l1 x00000001 )
( 9 size~l1 safe~l1 x00000001 )
( 9 size~l1 vault~l1 x00000001 )
( 9 size~l1 log_box~l1 x00000001 )
( 9 size~l1 logbox~l1 x00000001 )
( 9 size~l1 manger~l1 x00000001 )
( 9 size~l1 trough~l1 x00000001 )
( 9 size~l1 lunch_box~l1 x00000001 )
( 9 size~l1 tin_box~l1 x00000001 )
( 9 size~l1 lunch_pail~l1 x00000001 )
( 9 size~l1 media_console~l1 x00000001 )
( 9 size~l1 media_stand~l1 x00000001 )
( 9 size~l1 TV_stand~l1 x00000001 )
( 9 size~l1 memento~l1 x00000001 )
( 9 size~l1 trophy~l1 x00000001 )
( 9 size~l1 rice_cooker~l1 x00000001 )
( 9 size~l1 rice_steamer~l1 x00000001 )
( 9 size~l1 blender~l1 x00000001 )
( 9 size~l1 dishwasher~l1 x00000001 )
( 9 size~l1 slow_cooker~l1 x00000001 )
( 10 size~l1 courier_bag~l1 x00000001 )
( 10 size~l1 manbag~l1 x00000001 )
( 10 size~l1 sling_bag~l1 x00000001 )
( 10 size~l1 murse~l1 x00000001 )
( 10 size~l1 haversack~l1 x00000001 )
( 10 size~l1 quiver~l1 x00000001 )
( 10 size~l1 vasculum~l1 x00000001 )
( 11 size~l1 chilly_bin~l1 x00000001 )
( 11 size~l1 ice_chest~l1 x00000001 )
( 11 size~l1 cooler~l1 x00000001 )
( 11 size~l1 road_case~l1 x00000001 )
( 11 size~l1 tea_glass_holder~l1 x00000001 )
( 11 size~l1 toy_chest~l1 x00000001 )
( 11 size~l1 transport_bag~l1 x00000001 )
( 12 size~l1 basin~l1 x00000001 )
( 12 size~l1 washbasin~l1 x00000001 )
( 12 size~l1 sink~l1 x00000001 )
( 12 size~l1 bathroom_sink~l1 x00000001 )
( 12 size~l1 kitchen_sink~l1 x00000001 )
( 12 size~l1 cesta_basket~l1 x00000001 )
( 12 size~l1 cesta~l1 x00000001 )
( 12 size~l1 xistera~l1 x00000001 )
( 12 size~l1 dryer~l1 x00000001 )
( 12 size~l1 clothes_dryer~l1 x00000001 )
( 12 size~l1 tumble_dryer~l1 x00000001 )
( 12 size~l1 file_cabinet~l1 x00000001 )
( 12 size~l1 filing_cabinet~l1 x00000001 )
( 12 size~l1 glory_box~l1 x00000001 )
( 12 size~l1 chest~l1 x00000001 )
( 12 size~l1 treasure_chest~l1 x00000001 )
( 12 size~l1 kist~l1 x00000001 )
( 12 size~l1 trunk~l1 x00000001 )
( 12 size~l1 side_board~l1 x00000001 )
( 12 size~l1 sideboard~l1 x00000001 )
( 12 size~l1 linen_press~l1 x00000001 )
( 12 size~l1 night_stand~l1 x00000001 )
( 12 size~l1 nightstand~l1 x00000001 )
( 12 size~l1 stand~l1 x00000001 )
( 12 size~l1 night_table~l1 x00000001 )
( 12 size~l1 side_table~l1 x00000001 )
( 12 size~l1 travel_bag~l1 x00000001 )
( 12 size~l1 case~l1 x00000001 )
( 12 size~l1 attachz_case~l1 x00000001 )
( 12 size~l1 briefcase~l1 x00000001 )
( 12 size~l1 suitcase~l1 x00000001 )
( 12 size~l1 luggage~l1 x00000001 )
( 12 size~l1 port~l1 x00000001 )
( 12 size~l1 portmanteau~l1 x00000001 )
( 12 size~l1 portmanteaux~l1 x00000001 )
( 12 size~l1 cabinet~l1 x00000001 )
( 12 size~l1 kyathos~l1 x00000001 )
( 12 size~l1 locker~l1 x00000001 )
( 14 size~l1 burlap_sack~l1 x00000001 )
( 14 size~l1 gunny_sack~l1 x00000001 )
( 14 size~l1 potato_sack~l1 x00000001 )
( 15 size~l1 amalgamator~l1 x00000001 )
( 15 size~l1 autoclave~l1 x00000001 )
( 15 size~l1 cavitron_scale~l1 x00000001 )
( 15 size~l1 sterilizer~l1 x00000001 )
( 15 size~l1 bird_feeder~l1 x00000001 )
( 15 size~l1 birdhouse~l1 x00000001 )
( 15 size~l1 box~l1 x00000001 )
( 15 size~l1 packing_case~l1 x00000001 )
( 15 size~l1 container~l1 x00000001 )
( 15 size~l1 crate~l1 x00000001 )
( 15 size~l1 shipment~l1 x00000001 )
( 16 size~l1 display_case~l1 x00000001 )
( 16 size~l1 curio~l1 x00000001 )
( 16 size~l1 letter_box~l1 x00000001 )
( 16 size~l1 mailbox~l1 x00000001 )
( 16 size~l1 postbox~l1 x00000001 )
( 16 size~l1 mail_slot~l1 x00000001 )
( 16 size~l1 rubbish_barrel~l1 x00000001 )
( 16 size~l1 bin~l1 x00000001 )
( 16 size~l1 dustbin~l1 x00000001 )
( 16 size~l1 rubbish_bin~l1 x00000001 )
( 16 size~l1 trash_bin~l1 x00000001 )
( 16 size~l1 trash_can~l1 x00000001 )
( 16 size~l1 wastebasket~l1 x00000001 )
( 16 size~l1 waste_container~l1 x00000001 )
( 16 size~l1 dispenser~l1 x00000001 )
( 16 size~l1 steel_box~l1 x00000001 )
( 16 size~l1 steel_boxes~l1 x00000001 )
( 16 size~l1 metal_crate~l1 x00000001 )
( 16 size~l1 mini-fridge~l1 x00000001 )
( 16 size~l1 mini_fridge~l1 x00000001 )
( 16 size~l1 big_steel_box~l1 x00000001 )
( 18 size~l1 guitar_case~l1 x00000001 )
( 19 size~l1 birdcage~l1 x00000001 )
( 19 size~l1 cage~l1 x00000001 )
( 19 size~l1 hutch~l1 x00000001 )
( 19 size~l1 drum_can~l1 x00000001 )
( 19 size~l1 drum~l1 x00000001 )
( 19 size~l1 tent~l1 x00000001 )
( 20 size~l1 carrel~l1 x00000001 )
( 20 size~l1 desk~l1 x00000001 )
( 20 size~l1 escritoire~l1 x00000001 )
( 20 size~l1 writing_table~l1 x00000001 )
( 20 size~l1 cat_carrier~l1 x00000001 )
( 20 size~l1 dog_carrier~l1 x00000001 )
( 20 size~l1 pet_carrier~l1 x00000001 )
( 20 size~l1 cooker~l1 x00000001 )
( 20 size~l1 cooktop~l1 x00000001 )
( 20 size~l1 oven~l1 x00000001 )
( 20 size~l1 range~l1 x00000001 )
( 20 size~l1 stove~l1 x00000001 )
( 20 size~l1 kitchen_stove~l1 x00000001 )
( 20 size~l1 ice_box~l1 x00000001 )
( 20 size~l1 icebox~l1 x00000001 )
( 20 size~l1 freezer~l1 x00000001 )
( 20 size~l1 bat_house~l1 x00000001 )
( 20 size~l1 sarcophagus~l1 x00000001 )
( 25 size~l1 casket~l1 x00000001 )
( 25 size~l1 coffin~l1 x00000001 )
( 25 size~l1 wind_energy_converter~l1 x00000001 )
( 25 size~l1 wind_generator~l1 x00000001 )
( 25 size~l1 wind_turbine~l1 x00000001 )
( 25 size~l1 wind_power_unit~l1 x00000001 )
( 26 size~l1 portable_closet~l1 x00000001 )
( 28 size~l1 iron_maiden~l1 x00000001 )
( 30 size~l1 chest_of_drawers~l1 x00000001 )
( 30 size~l1 drawers~l1 x00000001 )
( 30 size~l1 dresser~l1 x00000001 )
( 30 size~l1 tallboy~l1 x00000001 )
( 30 size~l1 cryochamber~l1 x00000001 )
( 31 size~l1 cage~l1 x00000001 )
( 31 size~l1 hamster_cage~l1 x00000001 )
( 31 size~l1 kennel~l1 x00000001 )
( 35 size~l1 stereo_console~l1 x00000001 )
( 35 size~l1 vending_machine~l1 x00000001 )
( 36 size~l1 phone_booth~l1 x00000001 )
( 36 size~l1 telephone_booth~l1 x00000001 )
( 36 size~l1 police_box~l1 x00000001 )
( 36 size~l1 telephone_box~l1 x00000001 )
( 36 size~l1 telephone_kiosk~l1 x00000001 )
( 42 size~l1 fridge~l1 x00000001 )
( 42 size~l1 refrigerator~l1 x00000001 )
( 46 size~l1 closet~l1 x00000001 )
( 46 size~l1 shifferobe~l1 x00000001 )
( 46 size~l1 wardrobe~l1 x00000001 )
( 46 size~l1 cupboard~l1 x00000001 )
( 46 size~l1 china_cabinet~l1 x00000001 )
( 46 size~l1 almira~l1 x00000001 )
( 46 size~l1 press~l1 x00000001 )
( 46 size~l1 parking_space~l1 x00000001 )
( 46 size~l1 parking_spot~l1 x00000001 )
( 48 size~l1 metal_cage~l1 x00000001 )
( 48 size~l1 steel_cage~l1 x00000001 )
( 48 size~l1 pen~l1 x00000001 )
( 48 size~l1 pigpen~l1 x00000001 )
( 48 size~l1 sty~l1 x00000001 )
( 48 size~l1 locker_room~l1 x00000001 )
( 48 size~l1 wooden_cage~l1 x00000001 )
( 50 size~l1 escape_pod~l1 x00000001 )
( 51 size~l1 giant_metal_box~l1 x00000001 )
( 51 size~l1 giant_metal_crate~l1 x00000001 )
( 51 size~l1 giant_steel_box~l1 x00000001 )
( 56 size~l1 casemate~l1 x00000001 )
( 56 size~l1 shelter~l1 x00000001 )
( 56 size~l1 a-bomb_shelter~l1 x00000001 )
( 56 size~l1 bomb_shelter~l1 x00000001 )
( 56 size~l1 fallout_shelter~l1 x00000001 )
( 225 size~l1 large_steel_cage~l1 x00000001 )
( 225 size~l1 shark_cage~l1 x00000001 )
( 245 size~l1 large_wooden_cage~l1 x00000001 )
( 260 size~l1 garage~l1 x00000001 )
( 1 size~l1 chemical_dropper~l1 x00000001 )
( 1 size~l1 eye_dropper~l1 x00000001 )
( 1 size~l1 eyedropper~l1 x00000001 )
( 1 size~l1 pipette~l1 x00000001 )
( 2 size~l1 baby_bottle~l1 x00000001 )
( 2 size~l1 sippy_cup~l1 x00000001 )
( 2 size~l1 beverage_carrier~l1 x00000001 )
( 2 size~l1 cup_carrier~l1 x00000001 )
( 2 size~l1 drink_carrier~l1 x00000001 )
( 2 size~l1 cup_holder~l1 x00000001 )
( 2 size~l1 hot_cup_jacket~l1 x00000001 )
( 2 size~l1 cup_sleeve~l1 x00000001 )
( 2 size~l1 coffee_sleeve~l1 x00000001 )
( 2 size~l1 burette~l1 x00000001 )
( 2 size~l1 cuvette~l1 x00000001 )
( 2 size~l1 graduated_cylinder~l1 x00000001 )
( 2 size~l1 test_flute~l1 x00000001 )
( 2 size~l1 incubator~l1 x00000001 )
( 2 size~l1 phial~l1 x00000001 )
( 2 size~l1 boiling_tube~l1 x00000001 )
( 2 size~l1 culture_tube~l1 x00000001 )
( 2 size~l1 flaccid_tube~l1 x00000001 )
( 2 size~l1 glass_tube~l1 x00000001 )
( 2 size~l1 nMR_tube~l1 x00000001 )
( 2 size~l1 sample_tube~l1 x00000001 )
( 2 size~l1 test_tube~l1 x00000001 )
( 2 size~l1 glass_tubing~l1 x00000001 )
( 2 size~l1 vial~l1 x00000001 )
( 3 size~l1 cup~l1 x00000001 )
( 3 size~l1 glass~l1 x00000001 )
( 3 size~l1 beverageware~l1 x00000001 )
( 3 size~l1 drinkware~l1 x00000001 )
( 3 size~l1 glassware~l1 x00000001 )
( 3 size~l1 specific_gravity_bottle~l1 x00000001 )
( 3 size~l1 decanter~l1 x00000001 )
( 4 size~l1 bottle~l1 x00000001 )
( 4 size~l1 carboy~l1 x00000001 )
( 4 size~l1 coffee_cup~l1 x00000001 )
( 4 size~l1 teacup~l1 x00000001 )
( 4 size~l1 mug~l1 x00000001 )
( 5 size~l1 beaker~l1 x00000001 )
( 5 size~l1 flask~l1 x00000001 )
( 5 size~l1 water_bottle~l1 x00000001 )
( 5 size~l1 bear_can~l1 x00000001 )
( 5 size~l1 canteen~l1 x00000001 )
( 5 size~l1 bear_resistant~l1 x00000001 )
( 5 size~l1 bear-resistant~l1 x00000001 )
( 5 size~l1 supply~l1 x00000001 )
( 5 size~l1 bucket~l1 x00000001 )
( 5 size~l1 pail~l1 x00000001 )
( 5 size~l1 urn~l1 x00000001 )
( 5 size~l1 chalice~l1 x00000001 )
( 5 size~l1 goblet~l1 x00000001 )
( 5 size~l1 grail~l1 x00000001 )
( 5 size~l1 Holy_Grail~l1 x00000001 )
( 5 size~l1 flagon~l1 x00000001 )
( 5 size~l1 jug~l1 x00000001 )
( 5 size~l1 pitcher~l1 x00000001 )
( 5 size~l1 spray_bottle~l1 x00000001 )
( 6 size~l1 alfet~l1 x00000001 )
( 6 size~l1 cauldron~l1 x00000001 )
( 6 size~l1 wash_bottle~l1 x00000001 )
( 7 size~l1 barrel~l1 x00000001 )
( 7 size~l1 wood_barrel~l1 x00000001 )
( 7 size~l1 wooden_barrel~l1 x00000001 )
( 7 size~l1 cask~l1 x00000001 )
( 7 size~l1 hogshead~l1 x00000001 )
( 7 size~l1 keg~l1 x00000001 )
( 7 size~l1 kettle~l1 x00000001 )
( 7 size~l1 tea_kettle~l1 x00000001 )
( 7 size~l1 teakettle~l1 x00000001 )
( 7 size~l1 tea_pot~l1 x00000001 )
( 7 size~l1 teapot~l1 x00000001 )
( 7 size~l1 Klein_bottle~l1 x00000001 )
( 7 size~l1 tankard~l1 x00000001 )
( 11 size~l1 aquarium~l1 x00000001 )
( 11 size~l1 fish_tank~l1 x00000001 )
( 11 size~l1 village_pump~l1 x00000001 )
( 11 size~l1 wellspring~l1 x00000001 )
( 11 size~l1 well~l1 x00000001 )
( 11 size~l1 water_well~l1 x00000001 )
( 11 size~l1 wishing_well~l1 x00000001 )
( 12 size~l1 grace_cup~l1 x00000001 )
( 12 size~l1 loving_cup~l1 x00000001 )
( 12 size~l1 toxic_barrel~l1 x00000001 )
( 12 size~l1 toxic_waste_barrel~l1 x00000001 )
( 12 size~l1 waste_barrel~l1 x00000001 )
( 12 size~l1 toxic_waste~l1 x00000001 )
( 13 size~l1 beverage_crate~l1 x00000001 )
( 13 size~l1 bottle_crate~l1 x00000001 )
( 13 size~l1 milk_crate~l1 x00000001 )
( 15 size~l1 wine_box~l1 x00000001 )
( 16 size~l1 wine_cooler~l1 x00000001 )
( 18 size~l1 water_cooler~l1 x00000001 )
( 20 size~l1 bath~l1 x00000001 )
( 20 size~l1 bathtub~l1 x00000001 )
( 20 size~l1 tub~l1 x00000001 )
( 36 size~l1 fount~l1 x00000001 )
( 36 size~l1 fountain~l1 x00000001 )
( 510000000 area~l1 Earth~l1 x00000001 )
( 14000000 area~l1 Arctic_Ocean~l1 x00000001 )
( 155557000 area~l1 Pacific_Ocean~l1 x00000001 )
( 76762000 area~l1 Atlantic_Ocean~l1 x00000001 )
( 68556000 area~l1 Indian_Ocean~l1 x00000001 )
( 20327000 area~l1 Southern_Ocean~l1 x00000001 )
( 193 area~l1 Aruba~l1 x00000001 )
( 442 area~l1 Antigua_and_Barbuda~l1 x00000001 )
( 83600 area~l1 United_Arab_Emirates~l1 x00000001 )
( 647500 area~l1 Afghanistan~l1 x00000001 )
( 2381740 area~l1 Algeria~l1 x00000001 )
( 86600 area~l1 Azerbaijan~l1 x00000001 )
( 28748 area~l1 Albania~l1 x00000001 )
( 29800 area~l1 Armenia~l1 x00000001 )
( 468 area~l1 Andorra~l1 x00000001 )
( 1246700 area~l1 Angola~l1 x00000001 )
( 2766890 area~l1 Argentina~l1 x00000001 )
( 7686850 area~l1 Australia~l1 x00000001 )
( 83870 area~l1 Austria~l1 x00000001 )
( 14 area~l1 Antarctica~l1 x00000001 )
( 665 area~l1 Bahrain~l1 x00000001 )
( 431 area~l1 Barbados~l1 x00000001 )
( 600370 area~l1 Botswana~l1 x00000001 )
( 53 area~l1 Bermuda~l1 x00000001 )
( 30528 area~l1 Belgium~l1 x00000001 )
( 13940 area~l1 Bahamas~l1 x00000001 )
( 144000 area~l1 Bangladesh~l1 x00000001 )
( 22966 area~l1 Belize~l1 x00000001 )
( 51129 area~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( 1098580 area~l1 Bolivia~l1 x00000001 )
( 678500 area~l1 Union_of_Myanmar~l1 x00000001 )
( 112620 area~l1 Republic_of_Benin~l1 x00000001 )
( 207600 area~l1 Belarus~l1 x00000001 )
( 8511965 area~l1 Brazil~l1 x00000001 )
( 47000 area~l1 Kingdom_of_Bhutan~l1 x00000001 )
( 110910 area~l1 Bulgaria~l1 x00000001 )
( 5770 area~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( 27830 area~l1 Republic_of_Burundi~l1 x00000001 )
( 9984670 area~l1 Canada~l1 x00000001 )
( 80823 area~l1 Great_Britain~l1 x00000001 )
( 30414 area~l1 Scotland~l1 x00000001 )
( 20779 area~l1 Wales~l1 x00000001 )
( 130395 area~l1 England~l1 x00000001 )
( 181040 area~l1 Kingdom_of_Cambodia~l1 x00000001 )
( 1284000 area~l1 Republic_of_Chad~l1 x00000001 )
( 65610 area~l1 Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( 342000 area~l1 Republic_of_the_Congo~l1 x00000001 )
( 2345410 area~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( 9596960 area~l1 People_'s_Republic_of_China~l1 x00000001 )
( 756950 area~l1 Chile~l1 x00000001 )
( 475440 area~l1 Cameroon~l1 x00000001 )
( 2170 area~l1 Union_of_the_Comoros~l1 x00000001 )
( 1138910 area~l1 Republic_of_Colombia~l1 x00000001 )
( 51100 area~l1 Costa_Rica~l1 x00000001 )
( 622984 area~l1 Central_African_Republic~l1 x00000001 )
( 110860 area~l1 Cuba~l1 x00000001 )
( 4033 area~l1 Republic_of_Cape_Verde~l1 x00000001 )
( 9250 area~l1 Cyprus~l1 x00000001 )
( 43094 area~l1 Denmark~l1 x00000001 )
( 23000 area~l1 Republic_of_Djibouti~l1 x00000001 )
( 754 area~l1 Commonwealth_of_Dominica~l1 x00000001 )
( 48730 area~l1 Dominican_Republic~l1 x00000001 )
( 283560 area~l1 Ecuador~l1 x00000001 )
( 4324782 area~l1 European_Union~l1 x00000001 )
( 1001450 area~l1 Egypt~l1 x00000001 )
( 70280 area~l1 Republic_of_Ireland~l1 x00000001 )
( 28051 area~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( 45226 area~l1 Republic_of_Estonia~l1 x00000001 )
( 121320 area~l1 Eritrea~l1 x00000001 )
( 21040 area~l1 El_Salvador~l1 x00000001 )
( 1127127 area~l1 Ethiopia~l1 x00000001 )
( 78866 area~l1 Czech_Republic~l1 x00000001 )
( 338145 area~l1 Finland~l1 x00000001 )
( 18270 area~l1 Fiji~l1 x00000001 )
( 702 area~l1 Federated_States_of_Micronesia~l1 x00000001 )
( 1399 area~l1 Faroe_Islands~l1 x00000001 )
( 643427 area~l1 France~l1 x00000001 )
( 11300 area~l1 Gambia~l1 x00000001 )
( 267667 area~l1 Gabon~l1 x00000001 )
( 69700 area~l1 Georgia~l1 x00000001 )
( 239460 area~l1 Ghana~l1 x00000001 )
( 6 area~l1 Gibraltar~l1 x00000001 )
( 344 area~l1 Grenada~l1 x00000001 )
( 2166086 area~l1 Greenland~l1 x00000001 )
( 357021 area~l1 Germany~l1 x00000001 )
( 131940 area~l1 Greece~l1 x00000001 )
( 108890 area~l1 Guatemala~l1 x00000001 )
( 245857 area~l1 Republic_of_Guinea~l1 x00000001 )
( 214970 area~l1 Guyana~l1 x00000001 )
( 27750 area~l1 Haiti~l1 x00000001 )
( 1092 area~l1 Hong_Kong~l1 x00000001 )
( 112090 area~l1 Honduras~l1 x00000001 )
( 56542 area~l1 Croatia~l1 x00000001 )
( 93030 area~l1 Hungary~l1 x00000001 )
( 103000 area~l1 Iceland~l1 x00000001 )
( 1919440 area~l1 Indonesia~l1 x00000001 )
( 3287590 area~l1 India~l1 x00000001 )
( 1648000 area~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( 20770 area~l1 Israel~l1 x00000001 )
( 301230 area~l1 Italy~l1 x00000001 )
( 322460 area~l1 Cote_d'Ivoire~l1 x00000001 )
( 437072 area~l1 Iraq~l1 x00000001 )
( 377835 area~l1 Japan~l1 x00000001 )
( 10991 area~l1 Jamaica~l1 x00000001 )
( 92300 area~l1 Jordan~l1 x00000001 )
( 582650 area~l1 Republic_of_Kenya~l1 x00000001 )
( 198500 area~l1 Kyrgyzstan~l1 x00000001 )
( 120540 area~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( 811 area~l1 Kiribati~l1 x00000001 )
( 98480 area~l1 Republic_of_Korea~l1 x00000001 )
( 17820 area~l1 Kuwait~l1 x00000001 )
( 2717300 area~l1 Kazakhstan~l1 x00000001 )
( 236800 area~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( 10400 area~l1 Lebanon~l1 x00000001 )
( 64589 area~l1 Republic_of_Latvia~l1 x00000001 )
( 65200 area~l1 Republic_of_Lithuania~l1 x00000001 )
( 111370 area~l1 Liberia~l1 x00000001 )
( 48845 area~l1 Slovakia~l1 x00000001 )
( 160 area~l1 Principality_of_Liechtenstein~l1 x00000001 )
( 30355 area~l1 Kingdom_of_Lesotho~l1 x00000001 )
( 2586 area~l1 Luxembourg~l1 x00000001 )
( 1759540 area~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( 587040 area~l1 Madagascar~l1 x00000001 )
( 33843 area~l1 Republic_of_Moldova~l1 x00000001 )
( 1564116 area~l1 Mongolia~l1 x00000001 )
( 118480 area~l1 Malawi~l1 x00000001 )
( 14026 area~l1 Montenegro~l1 x00000001 )
( 25333 area~l1 Republic_of_Macedonia~l1 x00000001 )
( 124000 area~l1 Mali~l1 x00000001 )
( 1 area~l1 Monaco~l1 x00000001 )
( 446550 area~l1 Morocco~l1 x00000001 )
( 2040 area~l1 Mauritius~l1 x00000001 )
( 1030700 area~l1 Mauritania~l1 x00000001 )
( 316 area~l1 Malta~l1 x00000001 )
( 212460 area~l1 Sultanate_of_Oman~l1 x00000001 )
( 300 area~l1 Republic_of_Maldives~l1 x00000001 )
( 1972550 area~l1 Mexico~l1 x00000001 )
( 329750 area~l1 Malaysia~l1 x00000001 )
( 801590 area~l1 Mozambique~l1 x00000001 )
( 260 area~l1 Niue~l1 x00000001 )
( 1267000 area~l1 Republic_of_Niger~l1 x00000001 )
( 12200 area~l1 Republic_of_Vanuatu~l1 x00000001 )
( 923768 area~l1 Nigeria~l1 x00000001 )
( 41526 area~l1 Netherlands~l1 x00000001 )
( 323802 area~l1 Norway~l1 x00000001 )
( 147181 area~l1 Nepal~l1 x00000001 )
( 21 area~l1 Republic_of_Nauru~l1 x00000001 )
( 163270 area~l1 Republic_of_Suriname~l1 x00000001 )
( 129494 area~l1 Nicaragua~l1 x00000001 )
( 268680 area~l1 New_Zealand~l1 x00000001 )
( 406750 area~l1 Paraguay~l1 x00000001 )
( 1285220 area~l1 Peru~l1 x00000001 )
( 803940 area~l1 Pakistan~l1 x00000001 )
( 312685 area~l1 Poland~l1 x00000001 )
( 78200 area~l1 Panama~l1 x00000001 )
( 92391 area~l1 Portugal~l1 x00000001 )
( 462840 area~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( 458 area~l1 Republic_of_Palau~l1 x00000001 )
( 36120 area~l1 Guinea-Bissau~l1 x00000001 )
( 11437 area~l1 Qatar~l1 x00000001 )
( 88361 area~l1 Serbia~l1 x00000001 )
( 237500 area~l1 Romania~l1 x00000001 )
( 300000 area~l1 Philippines~l1 x00000001 )
( 13790 area~l1 Puerto_Rico~l1 x00000001 )
( 17075200 area~l1 Russian_Federation~l1 x00000001 )
( 26338 area~l1 Rwanda~l1 x00000001 )
( 2149690 area~l1 Saudi_Arabia~l1 x00000001 )
( 261 area~l1 Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( 455 area~l1 Republic_of_Seychelles~l1 x00000001 )
( 1219912 area~l1 South_Africa~l1 x00000001 )
( 196190 area~l1 Senegal~l1 x00000001 )
( 20273 area~l1 Slovenia~l1 x00000001 )
( 71740 area~l1 Sierra_Leone~l1 x00000001 )
( 61 area~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( 692 area~l1 Republic_of_Singapore~l1 x00000001 )
( 637657 area~l1 Somalia~l1 x00000001 )
( 504782 area~l1 Spain~l1 x00000001 )
( 616 area~l1 Saint_Lucia~l1 x00000001 )
( 2505810 area~l1 Sudan~l1 x00000001 )
( 449964 area~l1 Sweden~l1 x00000001 )
( 185180 area~l1 Syrian_Arab_Republic~l1 x00000001 )
( 41290 area~l1 Switzerland~l1 x00000001 )
( 5128 area~l1 Trinidad_and_Tobago~l1 x00000001 )
( 514000 area~l1 Thailand~l1 x00000001 )
( 143100 area~l1 Tajikistan~l1 x00000001 )
( 748 area~l1 Tonga~l1 x00000001 )
( 56785 area~l1 Togo~l1 x00000001 )
( 1001 area~l1 Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( 163610 area~l1 Tunisia~l1 x00000001 )
( 15007 area~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( 780580 area~l1 Turkey~l1 x00000001 )
( 26 area~l1 Tuvalu~l1 x00000001 )
( 35980 area~l1 Republic_of_China~l1 x00000001 )
( 488100 area~l1 Turkmenistan~l1 x00000001 )
( 945087 area~l1 United_Republic_of_Tanzania~l1 x00000001 )
( 236040 area~l1 Uganda~l1 x00000001 )
( 244820 area~l1 United_Kingdom~l1 x00000001 )
( 603700 area~l1 Ukraine~l1 x00000001 )
( 9826630 area~l1 United_States_of_America~l1 x00000001 )
( 274200 area~l1 Burkina_Faso~l1 x00000001 )
( 176220 area~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( 447400 area~l1 Uzbekistan~l1 x00000001 )
( 389 area~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( 912050 area~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( 329560 area~l1 Vietnam~l1 x00000001 )
( 0 area~l1 Vatican_City~l1 x00000001 )
( 825418 area~l1 Namibia~l1 x00000001 )
( 2944 area~l1 Samoa~l1 x00000001 )
( 17363 area~l1 Swaziland~l1 x00000001 )
( 527970 area~l1 Yemen~l1 x00000001 )
( 752614 area~l1 Zambia~l1 x00000001 )
( 390580 area~l1 Republic_of_Zimbabwe~l1 x00000001 )
( 78772 area~l1 Scotland~l1 x00000001 )
( 3031 diameter~l1 Mercury~l1 x00000001 )
( 7521 diameter~l1 Venus~l1 x00000001 )
( 7927 diameter~l1 Earth~l1 x00000001 )
( 4222 diameter~l1 Mars~l1 x00000001 )
( 88700 diameter~l1 Jupiter~l1 x00000001 )
( 74900 diameter~l1 Saturn~l1 x00000001 )
( 31765 diameter~l1 Uranus~l1 x00000001 )
( 30764 diameter~l1 Neptune~l1 x00000001 )
( 1429 diameter~l1 Pluto~l1 x00000001 )
( 6602224175 population~l1 Earth~l1 x00000001 )
( 4148000 population~l1 Palestine~l1 x00000001 )
( 69481 population~l1 Antigua_and_Barbuda~l1 x00000001 )
( 31889923 population~l1 Afghanistan~l1 x00000001 )
( 33333216 population~l1 Algeria~l1 x00000001 )
( 8120247 population~l1 Azerbaijan~l1 x00000001 )
( 3600523 population~l1 Albania~l1 x00000001 )
( 2971650 population~l1 Armenia~l1 x00000001 )
( 71822 population~l1 Andorra~l1 x00000001 )
( 12263596 population~l1 Angola~l1 x00000001 )
( 40301927 population~l1 Argentina~l1 x00000001 )
( 20434176 population~l1 Australia~l1 x00000001 )
( 8199783 population~l1 Austria~l1 x00000001 )
( 280946 population~l1 Barbados~l1 x00000001 )
( 66163 population~l1 Bermuda~l1 x00000001 )
( 10392226 population~l1 Belgium~l1 x00000001 )
( 150448339 population~l1 Bangladesh~l1 x00000001 )
( 294385 population~l1 Belize~l1 x00000001 )
( 4552198 population~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( 9119152 population~l1 Bolivia~l1 x00000001 )
( 9724723 population~l1 Belarus~l1 x00000001 )
( 191908598 population~l1 Brazil~l1 x00000001 )
( 7322858 population~l1 Bulgaria~l1 x00000001 )
( 374577 population~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( 33390141 population~l1 Canada~l1 x00000001 )
( 9885661 population~l1 Republic_of_Chad~l1 x00000001 )
( 1321851888 population~l1 People_'s_Republic_of_China~l1 x00000001 )
( 61538322 population~l1 France~l1 x00000001 )
( 16284741 population~l1 Chile~l1 x00000001 )
( 711417 population~l1 Union_of_the_Comoros~l1 x00000001 )
( 44379598 population~l1 Republic_of_Colombia~l1 x00000001 )
( 4133884 population~l1 Costa_Rica~l1 x00000001 )
( 11394043 population~l1 Cuba~l1 x00000001 )
( 423613 population~l1 Republic_of_Cape_Verde~l1 x00000001 )
( 788457 population~l1 Cyprus~l1 x00000001 )
( 5468120 population~l1 Denmark~l1 x00000001 )
( 496374 population~l1 Republic_of_Djibouti~l1 x00000001 )
( 72386 population~l1 Commonwealth_of_Dominica~l1 x00000001 )
( 9365818 population~l1 Dominican_Republic~l1 x00000001 )
( 13755680 population~l1 Ecuador~l1 x00000001 )
( 490426060 population~l1 European_Union~l1 x00000001 )
( 80335036 population~l1 Egypt~l1 x00000001 )
( 4109086 population~l1 Republic_of_Ireland~l1 x00000001 )
( 551201 population~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( 1315912 population~l1 Republic_of_Estonia~l1 x00000001 )
( 4906585 population~l1 Eritrea~l1 x00000001 )
( 6948073 population~l1 El_Salvador~l1 x00000001 )
( 10228744 population~l1 Czech_Republic~l1 x00000001 )
( 5238460 population~l1 Finland~l1 x00000001 )
( 918675 population~l1 Fiji~l1 x00000001 )
( 107862 population~l1 Federated_States_of_Micronesia~l1 x00000001 )
( 47511 population~l1 Faroe_Islands~l1 x00000001 )
( 1688359 population~l1 Gambia~l1 x00000001 )
( 4646003 population~l1 Georgia~l1 x00000001 )
( 27967 population~l1 Gibraltar~l1 x00000001 )
( 89971 population~l1 Grenada~l1 x00000001 )
( 56344 population~l1 Greenland~l1 x00000001 )
( 82400996 population~l1 Germany~l1 x00000001 )
( 10706290 population~l1 Greece~l1 x00000001 )
( 12728111 population~l1 Guatemala~l1 x00000001 )
( 9947814 population~l1 Republic_of_Guinea~l1 x00000001 )
( 6980412 population~l1 Hong_Kong~l1 x00000001 )
( 4493312 population~l1 Croatia~l1 x00000001 )
( 9956108 population~l1 Hungary~l1 x00000001 )
( 301931 population~l1 Iceland~l1 x00000001 )
( 234693997 population~l1 Indonesia~l1 x00000001 )
( 1129866154 population~l1 India~l1 x00000001 )
( 65397521 population~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( 58147733 population~l1 Italy~l1 x00000001 )
( 27499638 population~l1 Iraq~l1 x00000001 )
( 127433494 population~l1 Japan~l1 x00000001 )
( 2780132 population~l1 Jamaica~l1 x00000001 )
( 6053193 population~l1 Jordan~l1 x00000001 )
( 5284149 population~l1 Kyrgyzstan~l1 x00000001 )
( 23301725 population~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( 107817 population~l1 Kiribati~l1 x00000001 )
( 49044790 population~l1 Republic_of_Korea~l1 x00000001 )
( 15284929 population~l1 Kazakhstan~l1 x00000001 )
( 6521998 population~l1 Lao_People_'s_Democratic_Republic~l1 x00000001 )
( 3925502 population~l1 Lebanon~l1 x00000001 )
( 2259810 population~l1 Republic_of_Latvia~l1 x00000001 )
( 3575439 population~l1 Republic_of_Lithuania~l1 x00000001 )
( 3195931 population~l1 Liberia~l1 x00000001 )
( 5447502 population~l1 Slovakia~l1 x00000001 )
( 34247 population~l1 Principality_of_Liechtenstein~l1 x00000001 )
( 480222 population~l1 Luxembourg~l1 x00000001 )
( 19448815 population~l1 Madagascar~l1 x00000001 )
( 4320490 population~l1 Republic_of_Moldova~l1 x00000001 )
( 2951786 population~l1 Mongolia~l1 x00000001 )
( 684736 population~l1 Montenegro~l1 x00000001 )
( 2055915 population~l1 Republic_of_Macedonia~l1 x00000001 )
( 11995402 population~l1 Mali~l1 x00000001 )
( 32671 population~l1 Monaco~l1 x00000001 )
( 33757175 population~l1 Morocco~l1 x00000001 )
( 1250882 population~l1 Mauritius~l1 x00000001 )
( 3270065 population~l1 Mauritania~l1 x00000001 )
( 401880 population~l1 Malta~l1 x00000001 )
( 369031 population~l1 Republic_of_Maldives~l1 x00000001 )
( 108700891 population~l1 Mexico~l1 x00000001 )
( 24821286 population~l1 Malaysia~l1 x00000001 )
( 12894865 population~l1 Republic_of_Niger~l1 x00000001 )
( 211971 population~l1 Republic_of_Vanuatu~l1 x00000001 )
( 16570613 population~l1 Netherlands~l1 x00000001 )
( 4627926 population~l1 Norway~l1 x00000001 )
( 28901790 population~l1 Nepal~l1 x00000001 )
( 13528 population~l1 Republic_of_Nauru~l1 x00000001 )
( 470784 population~l1 Republic_of_Suriname~l1 x00000001 )
( 5675356 population~l1 Nicaragua~l1 x00000001 )
( 4115771 population~l1 New_Zealand~l1 x00000001 )
( 6669086 population~l1 Paraguay~l1 x00000001 )
( 28674757 population~l1 Peru~l1 x00000001 )
( 164741924 population~l1 Pakistan~l1 x00000001 )
( 38518241 population~l1 Poland~l1 x00000001 )
( 3242173 population~l1 Panama~l1 x00000001 )
( 10642836 population~l1 Portugal~l1 x00000001 )
( 5795887 population~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( 20842 population~l1 Republic_of_Palau~l1 x00000001 )
( 1472780 population~l1 Guinea-Bissau~l1 x00000001 )
( 907229 population~l1 Qatar~l1 x00000001 )
( 10150265 population~l1 Serbia~l1 x00000001 )
( 22276056 population~l1 Romania~l1 x00000001 )
( 91077287 population~l1 Philippines~l1 x00000001 )
( 3944259 population~l1 Puerto_Rico~l1 x00000001 )
( 141377752 population~l1 Russian_Federation~l1 x00000001 )
( 39349 population~l1 Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( 81895 population~l1 Republic_of_Seychelles~l1 x00000001 )
( 12521851 population~l1 Senegal~l1 x00000001 )
( 2009245 population~l1 Slovenia~l1 x00000001 )
( 6144562 population~l1 Sierra_Leone~l1 x00000001 )
( 29615 population~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( 4553009 population~l1 Republic_of_Singapore~l1 x00000001 )
( 40448191 population~l1 Spain~l1 x00000001 )
( 170649 population~l1 Saint_Lucia~l1 x00000001 )
( 39379358 population~l1 Sudan~l1 x00000001 )
( 9031088 population~l1 Sweden~l1 x00000001 )
( 7554661 population~l1 Switzerland~l1 x00000001 )
( 1056608 population~l1 Trinidad_and_Tobago~l1 x00000001 )
( 7076598 population~l1 Tajikistan~l1 x00000001 )
( 116921 population~l1 Tonga~l1 x00000001 )
( 199579 population~l1 Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( 10276158 population~l1 Tunisia~l1 x00000001 )
( 71158647 population~l1 Turkey~l1 x00000001 )
( 11992 population~l1 Tuvalu~l1 x00000001 )
( 22858872 population~l1 Republic_of_China~l1 x00000001 )
( 5097028 population~l1 Turkmenistan~l1 x00000001 )
( 60776238 population~l1 United_Kingdom~l1 x00000001 )
( 46299862 population~l1 Ukraine~l1 x00000001 )
( 301139947 population~l1 United_States_of_America~l1 x00000001 )
( 3460607 population~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( 27780059 population~l1 Uzbekistan~l1 x00000001 )
( 118149 population~l1 Saint_Vincent_and_the_Grenadines~l1 x00000001 )
( 26023528 population~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( 3004600 population~l1 Wales~l1 x00000001 )
( 5168500 population~l1 Scotland~l1 x00000001 )
( 85262356 population~l1 Vietnam~l1 x00000001 )
( 821 population~l1 Vatican_City~l1 x00000001 )
( 22230531 population~l1 Yemen~l1 x00000001 )
( 35,197,000 population~l1 Tokyo~l1 x00000001 )
( 19,411,000 population~l1 Mexico_City~l1 x00000001 )
( 18,718,000 population~l1 New_York_City~l1 x00000001 )
( 18,333,000 population~l1 Sao_Paulo~l1 x00000001 )
( 18,215,000 population~l1 Jakarta~l1 x00000001 )
( Bombay~l1 member Mumbai~l1 x00000001 )
( 18,196,000 population~l1 Mumbai~l1 x00000001 )
( 15,048,000 population~l1 Delhi~l1 x00000001 )
( 15,503,000 population~l1 Shanghai~l1 x00000001 )
( 14,277,000 population~l1 Calcutta~l1 x00000001 )
( 12,550,000 population~l1 Buenos_Aires~l1 x00000001 )
( 12,430,000 population~l1 Dhaka~l1 x00000001 )
( 12,550,000 population~l1 Los_Angeles~l1 x00000001 )
( 11,608,000 population~l1 Karachi~l1 x00000001 )
( 11,469,000 population~l1 Rio_de_Janeiro~l1 x00000001 )
( 1500 GDP~l1 Palestine~l1 x00000001 )
( 25500 GDP~l1 Vatican_City~l1 x00000001 )
( 39680 GDP~l1 Scotland~l1 x00000001 )
( 30546 GDP~l1 Wales~l1 x00000001 )
( 38000 GDP~l1 England~l1 x00000001 )
( 21800 GDP~l1 Aruba~l1 x00000001 )
( 10900 GDP~l1 Antigua_and_Barbuda~l1 x00000001 )
( 49700 GDP~l1 United_Arab_Emirates~l1 x00000001 )
( 800 GDP~l1 Afghanistan~l1 x00000001 )
( 13600 gpd~l1 Grenada~l1 x00000001 )
( 7600 GDP~l1 Algeria~l1 x00000001 )
( 7500 GDP~l1 Azerbaijan~l1 x00000001 )
( 5700 GDP~l1 Albania~l1 x00000001 )
( 5700 GDP~l1 Armenia~l1 x00000001 )
( 38800 GDP~l1 Andorra~l1 x00000001 )
( 4500 GDP~l1 Angola~l1 x00000001 )
( 15200 GDP~l1 Argentina~l1 x00000001 )
( 33300 GDP~l1 Australia~l1 x00000001 )
( 34700 GDP~l1 Austria~l1 x00000001 )
( 25600 GDP~l1 Bahrain~l1 x00000001 )
( 18400 GDP~l1 Barbados~l1 x00000001 )
( 10900 GDP~l1 Botswana~l1 x00000001 )
( 69900 GDP~l1 Bermuda~l1 x00000001 )
( 33000 GDP~l1 Belgium~l1 x00000001 )
( 21600 GDP~l1 Bahamas~l1 x00000001 )
( 2300 GDP~l1 Bangladesh~l1 x00000001 )
( 8400 GDP~l1 Belize~l1 x00000001 )
( 5600 GDP~l1 Bosnia_and_Herzegovina~l1 x00000001 )
( 3100 GDP~l1 Bolivia~l1 x00000001 )
( 1800 GDP~l1 Union_of_Myanmar~l1 x00000001 )
( 1100 GDP~l1 Republic_of_benin~l1 x00000001 )
( 8100 GDP~l1 Belarus~l1 x00000001 )
( 8800 GDP~l1 Brazil~l1 x00000001 )
( 1400 GDP~l1 Kingdom_of_Bhutan~l1 x00000001 )
( 10700 GDP~l1 Bulgaria~l1 x00000001 )
( 25600 GDP~l1 Brunei_Abode_of_Peace~l1 x00000001 )
( 700 GDP~l1 Republic_of_burundi~l1 x00000001 )
( 35700 GDP~l1 Canada~l1 x00000001 )
( 2800 GDP~l1 Kingdom_of_Cambodia~l1 x00000001 )
( 1500 GDP~l1 Republic_of_Chad~l1 x00000001 )
( 4700 GDP~l1 Democratic_Socialist_Republic_of_Sri_Lanka~l1 x00000001 )
( 1400 GDP~l1 Republic_of_the_Congo~l1 x00000001 )
( 700 GDP~l1 Democratic_Republic_of_the_Congo~l1 x00000001 )
( 7800 GDP~l1 People_'s_Republic_of_China~l1 x00000001 )
( 12600 GDP~l1 Chile~l1 x00000001 )
( 2500 GDP~l1 Cameroon~l1 x00000001 )
( 600 GDP~l1 Union_of_the_Comoros~l1 x00000001 )
( 8600 GDP~l1 Republic_of_Colombia~l1 x00000001 )
( 12500 GDP~l1 Costa_Rica~l1 x00000001 )
( 1200 GDP~l1 Central_African_Republic~l1 x00000001 )
( 4100 GDP~l1 Cuba~l1 x00000001 )
( 6000 GDP~l1 Republic_of_Cape_Verde~l1 x00000001 )
( 23000 GDP~l1 Cyprus~l1 x00000001 )
( 37100 GDP~l1 Denmark~l1 x00000001 )
( 1000 GDP~l1 Republic_of_Djibouti~l1 x00000001 )
( 3800 GDP~l1 Commonwealth_of_Dominica~l1 x00000001 )
( 8400 GDP~l1 Dominican_Republic~l1 x00000001 )
( 4500 GDP~l1 Ecuador~l1 x00000001 )
( 29900 GDP~l1 European_Union~l1 x00000001 )
( 4200 GDP~l1 Egypt~l1 x00000001 )
( 44500 GDP~l1 Republic_of_Ireland~l1 x00000001 )
( 50200 GDP~l1 Republic_of_Equatorial_Guinea~l1 x00000001 )
( 20300 GDP~l1 Republic_of_Estonia~l1 x00000001 )
( 1000 GDP~l1 Eritrea~l1 x00000001 )
( 4900 GDP~l1 El_Salvador~l1 x00000001 )
( 1000 GDP~l1 Ethiopia~l1 x00000001 )
( 22000 GDP~l1 Czech_Republic~l1 x00000001 )
( 33500 GDP~l1 Finland~l1 x00000001 )
( 6200 GDP~l1 Fiji~l1 x00000001 )
( 2300 GDP~l1 Federated_States_of_Micronesia~l1 x00000001 )
( 31000 GDP~l1 Faroe_Islands~l1 x00000001 )
( 31200 GDP~l1 France~l1 x00000001 )
( 2000 GDP~l1 Gambia~l1 x00000001 )
( 7100 GDP~l1 Gabon~l1 x00000001 )
( 3900 GDP~l1 Georgia~l1 x00000001 )
( 2700 GDP~l1 Ghana~l1 x00000001 )
( 27900 GDP~l1 Gibraltar~l1 x00000001 )
( 3900 GDP~l1 Grenada~l1 x00000001 )
( 20000 GDP~l1 Greenland~l1 x00000001 )
( 31900 GDP~l1 Germany~l1 x00000001 )
( 24000 GDP~l1 Greece~l1 x00000001 )
( 5000 GDP~l1 Guatemala~l1 x00000001 )
( 2100 GDP~l1 Republic_of_Guinea~l1 x00000001 )
( 4900 GDP~l1 Guyana~l1 x00000001 )
( 1800 GDP~l1 Haiti~l1 x00000001 )
( 37300 GDP~l1 Hong_Kong~l1 x00000001 )
( 3100 GDP~l1 Honduras~l1 x00000001 )
( 13400 GDP~l1 Croatia~l1 x00000001 )
( 17500 GDP~l1 Hungary~l1 x00000001 )
( 38000 GDP~l1 Iceland~l1 x00000001 )
( 3900 GDP~l1 Indonesia~l1 x00000001 )
( 3800 GDP~l1 India~l1 x00000001 )
( 8700 GDP~l1 Islamic_Republic_of_Iran~l1 x00000001 )
( 26800 GDP~l1 Israel~l1 x00000001 )
( 30200 GDP~l1 Italy~l1 x00000001 )
( 1600 GDP~l1 Cote_d'Ivoire~l1 x00000001 )
( 1900 GDP~l1 Iraq~l1 x00000001 )
( 33100 GDP~l1 Japan~l1 x00000001 )
( 4700 GDP~l1 Jamaica~l1 x00000001 )
( 5100 GDP~l1 Jordan~l1 x00000001 )
( 1200 GDP~l1 Republic_of_Kenya~l1 x00000001 )
( 2100 GDP~l1 Kyrgyzstan~l1 x00000001 )
( 1800 GDP~l1 Democratic_People_'s_Republic_of_Korea~l1 x00000001 )
( 2800 GDP~l1 Kiribati~l1 x00000001 )
( 24500 GDP~l1 Republic_of_Korea~l1 x00000001 )
( 23100 GDP~l1 Kuwait~l1 x00000001 )
( 9400 GDP~l1 Kazakhstan~l1 x00000001 )
( 2200 GDP~l1 Lao_people_'s_Democratic_Republic~l1 x00000001 )
( 5900 GDP~l1 Lebanon~l1 x00000001 )
( 16000 GDP~l1 Republic_of_Latvia~l1 x00000001 )
( 15300 GDP~l1 Republic_of_Lithuania~l1 x00000001 )
( 900 GDP~l1 Liberia~l1 x00000001 )
( 18200 GDP~l1 Slovakia~l1 x00000001 )
( 25000 GDP~l1 Principality_of_Liechtenstein~l1 x00000001 )
( 2700 GDP~l1 Kingdom_of_Lesotho~l1 x00000001 )
( 71400 GDP~l1 Luxembourg~l1 x00000001 )
( 12300 GDP~l1 Great_Socialist_People_'s_Libyan_Arab_Jamahiriya~l1 x00000001 )
( 900 GDP~l1 Madagascar~l1 x00000001 )
( 2000 GDP~l1 Republic_of_Moldova~l1 x00000001 )
( 2100 GDP~l1 Mongolia~l1 x00000001 )
( 600 GDP~l1 Malawi~l1 x00000001 )
( 3800 GDP~l1 Montenegro~l1 x00000001 )
( 8300 GDP~l1 Republic_of_Macedonia~l1 x00000001 )
( 1300 GDP~l1 Mali~l1 x00000001 )
( 30000 GDP~l1 Monaco~l1 x00000001 )
( 4600 GDP~l1 Morocco~l1 x00000001 )
( 13700 GDP~l1 Mauritius~l1 x00000001 )
( 2600 GDP~l1 Mauritania~l1 x00000001 )
( 21300 GDP~l1 Malta~l1 x00000001 )
( 14400 GDP~l1 Sultanate_of_Oman~l1 x00000001 )
( 3900 GDP~l1 Republic_of_Maldives~l1 x00000001 )
( 10700 GDP~l1 Mexico~l1 x00000001 )
( 12800 GDP~l1 Malaysia~l1 x00000001 )
( 1500 GDP~l1 Mozambique~l1 x00000001 )
( 5800 GDP~l1 Niue~l1 x00000001 )
( 1000 GDP~l1 Republic_of_Niger~l1 x00000001 )
( 2900 GDP~l1 Republic_of_Vanuatu~l1 x00000001 )
( 1500 GDP~l1 Nigeria~l1 x00000001 )
( 32100 GDP~l1 Netherlands~l1 x00000001 )
( 46300 GDP~l1 Norway~l1 x00000001 )
( 1500 GDP~l1 Nepal~l1 x00000001 )
( 5000 GDP~l1 Republic_of_Nauru~l1 x00000001 )
( 7100 GDP~l1 Republic_of_Suriname~l1 x00000001 )
( 3100 GDP~l1 Nicaragua~l1 x00000001 )
( 26200 GDP~l1 New_zealand~l1 x00000001 )
( 4800 GDP~l1 Paraguay~l1 x00000001 )
( 6600 GDP~l1 Peru~l1 x00000001 )
( 2600 GDP~l1 Pakistan~l1 x00000001 )
( 14400 GDP~l1 Poland~l1 x00000001 )
( 8200 GDP~l1 Panama~l1 x00000001 )
( 19800 GDP~l1 Portugal~l1 x00000001 )
( 2700 GDP~l1 Independent_State_of_Papua_New_Guinea~l1 x00000001 )
( 7600 GDP~l1 Republic_of_Palau~l1 x00000001 )
( 900 GDP~l1 Guinea-Bissau~l1 x00000001 )
( 29800 GDP~l1 Qatar~l1 x00000001 )
( 4400 GDP~l1 Serbia~l1 x00000001 )
( 9100 GDP~l1 Romania~l1 x00000001 )
( 5000 GDP~l1 Philippines~l1 x00000001 )
( 19300 GDP~l1 Puerto_Rico~l1 x00000001 )
( 12200 GDP~l1 Russian_Federation~l1 x00000001 )
( 1600 GDP~l1 Rwanda~l1 x00000001 )
( 13800 GDP~l1 Saudi_Arabia~l1 x00000001 )
( 8200 GDP~l1 Federation_of_Saint_Kitts_and_Nevis~l1 x00000001 )
( 7800 GDP~l1 Republic_of_Seychelles~l1 x00000001 )
( 13300 GDP~l1 South_Africa~l1 x00000001 )
( 1800 GDP~l1 Senegal~l1 x00000001 )
( 23400 GDP~l1 Slovenia~l1 x00000001 )
( 900 GDP~l1 Sierra_Leone~l1 x00000001 )
( 34100 GDP~l1 Most_Serene_Republic_of_San_Marino~l1 x00000001 )
( 31400 GDP~l1 Republic_of_Singapore~l1 x00000001 )
( 600 GDP~l1 Somalia~l1 x00000001 )
( 27400 GDP~l1 Spain~l1 x00000001 )
( 4800 GDP~l1 Saint_Lucia~l1 x00000001 )
( 2400 GDP~l1 Sudan~l1 x00000001 )
( 32200 GDP~l1 Sweden~l1 x00000001 )
( 4100 GDP~l1 Syrian_Arab_Fepublic~l1 x00000001 )
( 34000 GDP~l1 Switzerland~l1 x00000001 )
( 19800 GDP~l1 Trinidad_and_Tobago~l1 x00000001 )
( 9200 GDP~l1 Thailand~l1 x00000001 )
( 1300 GDP~l1 Tajikistan~l1 x00000001 )
( 2200 GDP~l1 Tonga~l1 x00000001 )
( 1700 GDP~l1 Togo~l1 x00000001 )
( 1200 GDP~l1 Democratic_Republic_of_Sao_Tome_and_Principe~l1 x00000001 )
( 8900 GDP~l1 Tunisia~l1 x00000001 )
( 800 GDP~l1 Democratic_Republic_of_Timor-Leste~l1 x00000001 )
( 9100 GDP~l1 Turkey~l1 x00000001 )
( 1600 GDP~l1 Tuvalu~l1 x00000001 )
( 29600 GDP~l1 Republic_of_China~l1 x00000001 )
( 8500 GDP~l1 Turkmenistan~l1 x00000001 )
( 800 GDP~l1 United_Republic_of_Tanzania~l1 x00000001 )
( 1900 GDP~l1 Uganda~l1 x00000001 )
( 31800 GDP~l1 United_Kingdom~l1 x00000001 )
( 7800 GDP~l1 Ukraine~l1 x00000001 )
( 43800 GDP~l1 United_States_of_America~l1 x00000001 )
( 1400 GDP~l1 Burkina_faso~l1 x00000001 )
( 10900 GDP~l1 Republica_Oriental_del_Uruguay~l1 x00000001 )
( 2000 GDP~l1 Uzbekistan~l1 x00000001 )
( 3600 GDP~l1 Saint_Cincent_and_the_Grenadines~l1 x00000001 )
( 7200 GDP~l1 Bolivarian_Republic_of_Venezuela~l1 x00000001 )
( 3100 GDP~l1 Vietnam~l1 x00000001 )
( 7500 GDP~l1 Namibia~l1 x00000001 )
( 2100 GDP~l1 Samoa~l1 x00000001 )
( 5300 GDP~l1 Swaziland~l1 x00000001 )
( 1000 GDP~l1 Yemen~l1 x00000001 )
( 1000 GDP~l1 Zambia~l1 x00000001 )
( 2100 GDP~l1 Republic_of_Zimbabwe~l1 x00000001 )
( 0.50 lifespan~l1 worker_ant~l1 x00000001 )
( 0.50 lifespan~l1 ant~l1 x00000001 )
( 3 lifespan~l1 ant_queen~l1 x00000001 )
( 3 lifespan~l1 queen_ant~l1 x00000001 )
( 68 lifespan~l1 alligator~l1 x00000001 )
( 15 lifespan~l1 angleworm~l1 x00000001 )
( 3 lifespan~l1 anole~l1 x00000001 )
( 24 lifespan~l1 bat~l1 x00000001 )
( 13 lifespan~l1 beagle~l1 x00000001 )
( 40 lifespan~l1 bear~l1 x00000001 )
( 20 lifespan~l1 beaver~l1 x00000001 )
( 1 lifespan~l1 worker_bee~l1 x00000001 )
( 1 lifespan~l1 bee~l1 x00000001 )
( 18 lifespan~l1 binturong~l1 x00000001 )
( 30 lifespan~l1 bison~l1 x00000001 )
( 15 lifespan~l1 blackbird~l1 x00000001 )
( 23 lifespan~l1 boa_constrictor~l1 x00000001 )
( 13 lifespan~l1 boston_terrier~l1 x00000001 )
( 123 lifespan~l1 box_turtle~l1 x00000001 )
( 10.50 lifespan~l1 boxer~l1 x00000001 )
( 28 lifespan~l1 bull~l1 x00000001 )
( 7 lifespan~l1 bulldog~l1 x00000001 )
( 30 lifespan~l1 bullfrog~l1 x00000001 )
( 50 lifespan~l1 camel~l1 x00000001 )
( 24 lifespan~l1 canary~l1 x00000001 )
( 22 lifespan~l1 canary~l1 x00000001 )
( 100 lifespan~l1 carp~l1 x00000001 )
( 47 lifespan~l1 carp~l1 x00000001 )
( 25 lifespan~l1 cat~l1 x00000001 )
( 15 lifespan~l1 cat~l1 x00000001 )
( 60 lifespan~l1 catfish~l1 x00000001 )
( 14 lifespan~l1 chicken~l1 x00000001 )
( 13.50 lifespan~l1 chihuahua~l1 x00000001 )
( 40 lifespan~l1 chimpanzee~l1 x00000001 )
( 40 lifespan~l1 chimp~l1 x00000001 )
( 20 lifespan~l1 chinchilla~l1 x00000001 )
( 12 lifespan~l1 chipmunk~l1 x00000001 )
( 17 lifespan~l1 cicada~l1 x00000001 )
( 13 lifespan~l1 civet~l1 x00000001 )
( 400 lifespan~l1 clam~l1 x00000001 )
( 28 lifespan~l1 cobra~l1 x00000001 )
( 35 lifespan~l1 cockatiel~l1 x00000001 )
( 29 lifespan~l1 cockatoo~l1 x00000001 )
( 12 lifespan~l1 cocker_spaniel~l1 x00000001 )
( 13 lifespan~l1 corgi~l1 x00000001 )
( 21 lifespan~l1 cottonmouth~l1 x00000001 )
( 10 lifespan~l1 cottontail~l1 x00000001 )
( 22 lifespan~l1 cow~l1 x00000001 )
( 45 lifespan~l1 crocodile~l1 x00000001 )
( 15.50 lifespan~l1 dachshund~l1 x00000001 )
( 26 lifespan~l1 deer~l1 x00000001 )
( 10 lifespan~l1 Doberman_pinscher~l1 x00000001 )
( 10 lifespan~l1 Doberman~l1 x00000001 )
( 11 lifespan~l1 dog~l1 x00000001 )
( 45 lifespan~l1 donkey~l1 x00000001 )
( 10 lifespan~l1 duck~l1 x00000001 )
( 55 lifespan~l1 eagle~l1 x00000001 )
( 27 lifespan~l1 eel~l1 x00000001 )
( 55 lifespan~l1 eel~l1 x00000001 )
( 70 lifespan~l1 elephant~l1 x00000001 )
( 69 lifespan~l1 elephant~l1 x00000001 )
( 22 lifespan~l1 elk~l1 x00000001 )
( 23 lifespan~l1 English_Sparrow~l1 x00000001 )
( 12 lifespan~l1 ferret~l1 x00000001 )
( 14 lifespan~l1 finch~l1 x00000001 )
( 14 lifespan~l1 fox~l1 x00000001 )
( 3 lifespan~l1 frog~l1 x00000001 )
( 3 lifespan~l1 bull_frog~l1 x00000001 )
( 5 lifespan~l1 gerbil~l1 x00000001 )
( 11 lifespan~l1 german_shepherd~l1 x00000001 )
( 55 lifespan~l1 giant_salamander~l1 x00000001 )
( 152 lifespan~l1 giant_tortoise~l1 x00000001 )
( 25 lifespan~l1 giraffe~l1 x00000001 )
( 15 lifespan~l1 goat~l1 x00000001 )
( 12 lifespan~l1 golden_retriever~l1 x00000001 )
( 25 lifespan~l1 goose~l1 x00000001 )
( 24.30 lifespan~l1 goose~l1 x00000001 )
( 8.50 lifespan~l1 Great_Dane~l1 x00000001 )
( 68 lifespan~l1 great_horned_owl~l1 x00000001 )
( 10 lifespan~l1 green_frog~l1 x00000001 )
( 32 lifespan~l1 grizzly_bear~l1 x00000001 )
( 14 lifespan~l1 grouse~l1 x00000001 )
( 5 lifespan~l1 guinea_pig~l1 x00000001 )
( 4 lifespan~l1 hamster~l1 x00000001 )
( 45 lifespan~l1 hippopotamus~l1 x00000001 )
( 45 lifespan~l1 hippo~l1 x00000001 )
( 18 lifespan~l1 hog~l1 x00000001 )
( 40 lifespan~l1 horse~l1 x00000001 )
( 50 lifespan~l1 horse~l1 x00000001 )
( 70 lifespan~l1 human~l1 x00000001 )
( 70 lifespan~l1 person~l1 x00000001 )
( 8 lifespan~l1 hummingbird~l1 x00000001 )
( 1 lifespan~l1 ~insect x00000001 )
( 9 lifespan~l1 kangaroo~l1 x00000001 )
( 8 lifespan~l1 koala~l1 x00000001 )
( 12.50 lifespan~l1 Labrador_retriever~l1 x00000001 )
( 35 lifespan~l1 lion~l1 x00000001 )
( 30 lifespan~l1 lion~l1 x00000001 )
( 4 lifespan~l1 lizard~l1 x00000001 )
( 64 lifespan~l1 macaw~l1 x00000001 )
( 29 lifespan~l1 mallard~l1 x00000001 )
( 15 lifespan~l1 miniature_poodle~l1 x00000001 )
( 14 lifespan~l1 miniature_schnauzer~l1 x00000001 )
( 12 lifespan~l1 mongoose~l1 x00000001 )
( 25 lifespan~l1 monkey~l1 x00000001 )
( 2 lifespan~l1 mosquitofish~l1 x00000001 )
( 20 lifespan~l1 mountain_lion~l1 x00000001 )
( 4 lifespan~l1 mouse~l1 x00000001 )
( 23 lifespan~l1 mud_puppy~l1 x00000001 )
( 6 lifespan~l1 muscrat~l1 x00000001 )
( 25 lifespan~l1 mynah~l1 x00000001 )
( 7 lifespan~l1 newt~l1 x00000001 )
( 3 lifespan~l1 newt~l1 x00000001 )
( 4 lifespan~l1 opossum~l1 x00000001 )
( 20 lifespan~l1 ox~l1 x00000001 )
( 80 lifespan~l1 parrot~l1 x00000001 )
( 30 lifespan~l1 parrot~l1 x00000001 )
( 104 lifespan~l1 parrot~l1 x00000001 )
( 27 lifespan~l1 pheasant~l1 x00000001 )
( 25 lifespan~l1 pig~l1 x00000001 )
( 18 lifespan~l1 pigeon~l1 x00000001 )
( 10 lifespan~l1 platypus~l1 x00000001 )
( 15 lifespan~l1 pomeranian~l1 x00000001 )
( 12 lifespan~l1 poodle~l1 x00000001 )
( 20 lifespan~l1 porcupine~l1 x00000001 )
( 10 lifespan~l1 prarie_og~l1 x00000001 )
( 13.50 lifespan~l1 pug~l1 x00000001 )
( 6.90 lifespan~l1 quail~l1 x00000001 )
( 15 lifespan~l1 queen_ant~l1 x00000001 )
( 5 lifespan~l1 queen_bee~l1 x00000001 )
( 5 lifespan~l1 bee_queen~l1 x00000001 )
( 10 lifespan~l1 rabbit~l1 x00000001 )
( 10 lifespan~l1 hare~l1 x00000001 )
( 4 lifespan~l1 rat~l1 x00000001 )
( 22 lifespan~l1 rattlesnake~l1 x00000001 )
( 40 lifespan~l1 rhinoceros~l1 x00000001 )
( 40 lifespan~l1 rhino~l1 x00000001 )
( 10 lifespan~l1 rottweiler~l1 x00000001 )
( 11 lifespan~l1 salamander~l1 x00000001 )
( 15 lifespan~l1 sheep~l1 x00000001 )
( 13.50 lifespan~l1 sheepdog~l1 x00000001 )
( 13 lifespan~l1 Shih_Tzu~l1 x00000001 )
( 12 lifespan~l1 siberian_husky~l1 x00000001 )
( 12 lifespan~l1 husky~l1 x00000001 )
( 18 lifespan~l1 snake~l1 x00000001 )
( 10 lifespan~l1 snake~l1 x00000001 )
( 57 lifespan~l1 snapping_turtle~l1 x00000001 )
( 1 lifespan~l1 spider~l1 x00000001 )
( 16 lifespan~l1 squirrel~l1 x00000001 )
( 14 lifespan~l1 squirrel~l1 x00000001 )
( 102 lifespan~l1 swan~l1 x00000001 )
( 33 lifespan~l1 swan~l1 x00000001 )
( 30 lifespan~l1 tapir~l1 x00000001 )
( 22 lifespan~l1 tiger~l1 x00000001 )
( 25 lifespan~l1 tiger~l1 x00000001 )
( 36 lifespan~l1 toad~l1 x00000001 )
( 15 lifespan~l1 toad~l1 x00000001 )
( 20 lifespan~l1 toucan~l1 x00000001 )
( 5 lifespan~l1 turkey~l1 x00000001 )
( 118 lifespan~l1 turkey_buzzard~l1 x00000001 )
( 123 lifespan~l1 turtle~l1 x00000001 )
( 18 lifespan~l1 wolf~l1 x00000001 )
( 15 lifespan~l1 wombat~l1 x00000001 )
( 15 lifespan~l1 woodchuck~l1 x00000001 )
( 14 lifespan~l1 yorkshire_terrier~l1 x00000001 )
( plastic~l1 constituent~l1 pill_jar~l1 x00000001 )
( plastic~l1 constituent~l1 phone~l1 x00000001 )
( plastic~l1 constituent~l1 cellphone~l1 x00000001 )
( plastic~l1 constituent~l1 doll~l1 x00000001 )
( rubber~l1 constituent~l1 ball~l1 x00000001 )
( rubber~l1 constituent~l1 eraser~l1 x00000001 )
( rubber~l1 constituent~l1 hose~l1 x00000001 )
( concrete~l1 constituent~l1 sidewalk~l1 x00000001 )
( concrete~l1 constituent~l1 building~l1 x00000001 )
( plaster~n~l1 constituent~l1 wall~l1 x00000001 )
( plaster~n~l1 constituent~l1 ceiling~l1 x00000001 )
( wood~l1 constituent~l1 ~furniture x00000001 )
( wood~l1 constituent~l1 oar~l1 x00000001 )
( wood~l1 constituent~l1 desk~l1 x00000001 )
( wood~l1 constituent~l1 chair~l1 x00000001 )
( wood~l1 constituent~l1 sofa~l1 x00000001 )
( wood~l1 constituent~l1 bed~l1 x00000001 )
( wood~l1 constituent~l1 house~l1 x00000001 )
( wood~l1 constituent~l1 bookcase~l1 x00000001 )
( wood~l1 constituent~l1 door~l1 x00000001 )
( wood~l1 constituent~l1 table~l1 x00000001 )
( wood~l1 constituent~l1 hatstand~l1 x00000001 )
( wood~l1 constituent~l1 mousetrap~l1 x00000001 )
( wood~l1 constituent~l1 rattrap~l1 x00000001 )
( glass~n~l1 constituent~l1 window~l1 x00000001 )
( glass~n~l1 constituent~l1 TV~l1 x00000001 )
( glass~n~l1 constituent~l1 television~l1 x00000001 )
( glass~n~l1 constituent~l1 monitor~l1 x00000001 )
( glass~n~l1 constituent~l1 jar~l1 x00000001 )
( glass~n~l1 constituent~l1 drinking_glass~l1 x00000001 )
( glass~n~l1 constituent~l1 glass~l1 x00000001 )
( glass~n~l1 constituent~l1 vase~l1 x00000001 )
( glass~n~l1 constituent~l1 mirror~l1 x00000001 )
( glass~n~l1 constituent~l1 carafe~l1 x00000001 )
( glass~n~l1 constituent~l1 lightbulb~l1 x00000001 )
( glass~n~l1 constituent~l1 bulb~l1 x00000001 )
( cloth~l1 constituent~l1 sheet~l1 x00000001 )
( cloth~l1 constituent~l1 pillowcase~l1 x00000001 )
( cloth~l1 constituent~l1 ~clothes x00000001 )
( cloth~l1 constituent~l1 curtain~l1 x00000001 )
( cloth~l1 constituent~l1 sofa~l1 x00000001 )
( cloth~l1 constituent~l1 hat~l1 x00000001 )
( wool~l1 constituent~l1 sweater~l1 x00000001 )
( wool~l1 constituent~l1 blanket~l1 x00000001 )
( wool~l1 constituent~l1 rug~l1 x00000001 )
( wool~l1 constituent~l1 throw~l1 x00000001 )
( ceramic~l1 constituent~l1 cup~l1 x00000001 )
( ceramic~l1 constituent~l1 mug~l1 x00000001 )
( ceramic~l1 constituent~l1 plate~l1 x00000001 )
( ceramic~l1 constituent~l1 saucer~l1 x00000001 )
( ceramic~l1 constituent~l1 vase~l1 x00000001 )
( ceramic~l1 constituent~l1 teacup~l1 x00000001 )
( leather~l1 constituent~l1 shoe~l1 x00000001 )
( leather~l1 constituent~l1 belt~l1 x00000001 )
( leather~l1 constituent~l1 jacket~l1 x00000001 )
( paper~n~l1 constituent~l1 book~l1 x00000001 )
( paper~n~l1 constituent~l1 magazine~l1 x00000001 )
( paper~n~l1 constituent~l1 newspaper~l1 x00000001 )
( paper~n~l1 constituent~l1 paperback~l1 x00000001 )
( brick~n~l1 constituent~l1 fireplace~l1 x00000001 )
( leather~l1 constituent~l1 chair~l1 x00000001 )
( leather~l1 constituent~l1 sofa~l1 x00000001 )
( leather~l1 constituent~l1 wallet~l1 x00000001 )
( leather~l1 constituent~l1 coinpurse~l1 x00000001 )
( foam~n~l1 constituent~l1 mattress~l1 x00000001 )
( foam~n~l1 constituent~l1 pillow~l1 x00000001 )
( metal~l1 constituent~l1 car~l1 x00000001 )
( metal~l1 constituent~l1 automobile~l1 x00000001 )
( metal~l1 constituent~l1 TV~l1 x00000001 )
( metal~l1 constituent~l1 stereo~l1 x00000001 )
( metal~l1 constituent~l1 nail~l1 x00000001 )
( metal~l1 constituent~l1 staple~l1 x00000001 )
( metal~l1 constituent~l1 truck~l1 x00000001 )
( metal~l1 constituent~l1 pot~l1 x00000001 )
( metal~l1 constituent~l1 pan~l1 x00000001 )
( metal~l1 constituent~l1 saucepan~l1 x00000001 )
( metal~l1 constituent~l1 spoon~l1 x00000001 )
( metal~l1 constituent~l1 fork~l1 x00000001 )
( metal~l1 constituent~l1 knife~l1 x00000001 )
( aluminum~l1 constituent~l1 siding~l1 x00000001 )
( aluminum~l1 constituent~l1 pan~l1 x00000001 )
( aluminum~l1 constituent~l1 pot~l1 x00000001 )
( aluminum~l1 constituent~l1 saucepan~l1 x00000001 )
( steel~l1 constituent~l1 skyscraper~l1 x00000001 )
( steel~l1 constituent~l1 car~l1 x00000001 )
( steel~l1 constituent~l1 automobile~l1 x00000001 )
( steel~l1 constituent~l1 truck~l1 x00000001 )
( copper~l1 constituent~l1 pipe~l1 x00000001 )
( copper~l1 constituent~l1 penny~l1 x00000001 )
( gold~l1 constituent~l1 jewelry~l1 x00000001 )
( gold~l1 constituent~l1 tooth_filling~l1 x00000001 )
( gold~l1 constituent~l1 crown~l1 x00000001 )
( silver~l1 constituent~l1 dime~l1 x00000001 )
( silver~l1 constituent~l1 flatware~l1 x00000001 )
( silver~l1 constituent~l1 spoon~l1 x00000001 )
( silver~l1 constituent~l1 mirror~l1 x00000001 )
( nickel~l1 constituent~l1 nickel~l1 x00000001 )
( electronic_component~l1 constituent~l1 modem~l1 x00000001 )
( electronic_component~l1 constituent~l1 router~l1 x00000001 )
( electronic_component~l1 constituent~l1 phone~l1 x00000001 )
( electronic_component~l1 constituent~l1 cellphone~l1 x00000001 )
( electronic_component~l1 constituent~l1 television~l1 x00000001 )
( electronic_component~l1 constituent~l1 stereo~l1 x00000001 )
( electronic_component~l1 constituent~l1 iPhone~l1 x00000001 )
( electronic_component~l1 constituent~l1 iPad~l1 x00000001 )
( electronic_component~l1 constituent~l1 iPod~l1 x00000001 )
( electronic_component~l1 constituent~l1 radio~l1 x00000001 )
( electronic_component~l1 constituent~l1 TV~l1 x00000001 )
( chemical~l1 constituent~l1 pill~l1 x00000001 )
( chemical~l1 constituent~l1 medicine~l1 x00000001 )
( chemical~l1 constituent~l1 ~chemicals x00000001 )
( chemical~l1 constituent~l1 ~cleaning_substances x00000001 )
( chemical~l1 constituent~l1 ~explosive x00000001 )
( chemical~l1 constituent~l1 ~fertilizer x00000001 )
( chemical~l1 constituent~l1 ~harmful_substance x00000001 )
( diamond~l1 constituent~l1 ring~l1 x00000001 )
( diamond~l1 constituent~l1 pendant~l1 x00000001 )
( diamond~l1 constituent~l1 jewelry~l1 x00000001 )
( chitin~l1 constituent~l1 ~insects x00000001 )
( flesh~n~l1 constituent~l1 cat~l1 x00000001 )
( flesh~n~l1 constituent~l1 human~l1 x00000001 )
( flesh~n~l1 constituent~l1 person~l1 x00000001 )
( flesh~n~l1 constituent~l1 ~mammals x00000001 )
( flesh~n~l1 constituent~l1 ~fishes x00000001 )
( flesh~n~l1 constituent~l1 ~bird x00000001 )
( cellulose~l1 constituent~l1 plant~l1 x00000001 )
( cellulose~l1 constituent~l1 ~plants x00000001 )
( cellulose~l1 constituent~l1 rose~l1 x00000001 )
( cellulose~l1 constituent~l1 tree~l1 x00000001 )
( cellulose~l1 constituent~l1 ~grains x00000001 )
( water~n~l1 constituent~l1 body~l1 x00000001 )
( water~n~l1 constituent~l1 person~l1 x00000001 )
( water~n~l1 constituent~l1 ice_cube~l1 x00000001 )
( water~n~l1 constituent~l1 ~scenery_water_bodies x00000001 )
( air~6~l1 constituent~l1 cloud~l1 x00000001 )
( plasma~l1 constituent~l1 sun~l1 x00000001 )
( plasma~l1 constituent~l1 star~l1 x00000001 )
( plasma~l1 constituent~l1 nova~l1 x00000001 )
( plasma~l1 constituent~l1 supernova~l1 x00000001 )
( rock~l1 constituent~l1 meteor~l1 x00000001 )
( rock~l1 constituent~l1 planet~l1 x00000001 )
( rock~l1 constituent~l1 Earth~l1 x00000001 )
( dirt~l1 constituent~l1 Earth~l1 x00000001 )
( Abbie~l1 nickname~l1 Abigail~l1 x00000001 )
( Abby~l1 nickname~l1 Abigail~l1 x00000001 )
( Abe~l1 nickname~l1 Abraham~l1 x00000001 )
( Abe~l1 nickname~l1 Abram~l1 x00000001 )
( Ada~l1 nickname~l1 Adaline~l1 x00000001 )
( Addy~l1 nickname~l1 Adaline~l1 x00000001 )
( Aggy~l1 nickname~l1 Agatha~l1 x00000001 )
( Aggy~l1 nickname~l1 Agnes~l1 x00000001 )
( Aggy~l1 nickname~l1 Augusta~l1 x00000001 )
( Aggy~l1 nickname~l1 Augustina~l1 x00000001 )
( Al~l1 nickname~l1 Alan~l1 x00000001 )
( Al~l1 nickname~l1 Albert~l1 x00000001 )
( Al~l1 nickname~l1 Aldo~l1 x00000001 )
( Al~l1 nickname~l1 Alexander~l1 x00000001 )
( Al~l1 nickname~l1 Alfonse~l1 x00000001 )
( Al~l1 nickname~l1 Alfred~l1 x00000001 )
( Al~l1 nickname~l1 Allan~l1 x00000001 )
( Al~l1 nickname~l1 Allen~l1 x00000001 )
( Al~l1 nickname~l1 Alonzo~l1 x00000001 )
( Alex~l1 nickname~l1 Alexander~l1 x00000001 )
( Alex~l1 nickname~l1 Alexandra~l1 x00000001 )
( Allie~l1 nickname~l1 Alice~l1 x00000001 )
( Allie~l1 nickname~l1 Alicia~l1 x00000001 )
( Allie~l1 nickname~l1 Almena~l1 x00000001 )
( Andy~l1 nickname~l1 Anderson~l1 x00000001 )
( Andy~l1 nickname~l1 Andrew~l1 x00000001 )
( Ann~l1 nickname~l1 Antoinette~l1 x00000001 )
( Ann~l1 nickname~l1 Antonia~l1 x00000001 )
( Ann~l1 nickname~l1 Rosaenn~l1 x00000001 )
( Ann~l1 nickname~l1 Rosaenna~l1 x00000001 )
( Ann~l1 nickname~l1 Roxanne~l1 x00000001 )
( Ann~l1 nickname~l1 Roxanna~l1 x00000001 )
( Annie~l1 nickname~l1 Ann~l1 x00000001 )
( Annie~l1 nickname~l1 Anne~l1 x00000001 )
( Ara~l1 nickname~l1 Arabella~l1 x00000001 )
( Ara~l1 nickname~l1 Arabelle~l1 x00000001 )
( Archie~l1 nickname~l1 Archibald~l1 x00000001 )
( Arly~l1 nickname~l1 Arlene~l1 x00000001 )
( Art~l1 nickname~l1 Arthur~l1 x00000001 )
( Babs~l1 nickname~l1 Barbara~l1 x00000001 )
( Barbie~l1 nickname~l1 Barbara~l1 x00000001 )
( Barney~l1 nickname~l1 Barnabas~l1 x00000001 )
( Barney~l1 nickname~l1 Bernard~l1 x00000001 )
( Bart~l1 nickname~l1 Bartholomew~l1 x00000001 )
( Bea~l1 nickname~l1 Beatrice~l1 x00000001 )
( Becca~l1 nickname~l1 Rebecca~l1 x00000001 )
( Becky~l1 nickname~l1 Rebecca~l1 x00000001 )
( Bella~l1 nickname~l1 Arabella~l1 x00000001 )
( Bella~l1 nickname~l1 Isabella~l1 x00000001 )
( Bella~l1 nickname~l1 Rosabella~l1 x00000001 )
( Belle~l1 nickname~l1 Arabella~l1 x00000001 )
( Belle~l1 nickname~l1 Belinda~l1 x00000001 )
( Belle~l1 nickname~l1 Isabel~l1 x00000001 )
( Belle~l1 nickname~l1 Isabelle~l1 x00000001 )
( Belle~l1 nickname~l1 Rosabel~l1 x00000001 )
( Ben~l1 nickname~l1 Benedict~l1 x00000001 )
( Ben~l1 nickname~l1 Benjamin~l1 x00000001 )
( Benjy~l1 nickname~l1 Benjamin~l1 x00000001 )
( Bennie~l1 nickname~l1 Benedict~l1 x00000001 )
( Berny~l1 nickname~l1 Bernard~l1 x00000001 )
( Bert~l1 nickname~l1 Albert~l1 x00000001 )
( Bert~l1 nickname~l1 Delbert~l1 x00000001 )
( Bert~l1 nickname~l1 Elbert~l1 x00000001 )
( Bert~l1 nickname~l1 Gilbert~l1 x00000001 )
( Bert~l1 nickname~l1 Herbert~l1 x00000001 )
( Bert~l1 nickname~l1 Hubert~l1 x00000001 )
( Bert~l1 nickname~l1 Norbert~l1 x00000001 )
( Bess~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Beth~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Betsy~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Betty~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Bill~l1 nickname~l1 Robert~l1 x00000001 )
( Bill~l1 nickname~l1 William~l1 x00000001 )
( Billy~l1 nickname~l1 Robert~l1 x00000001 )
( Billy~l1 nickname~l1 William~l1 x00000001 )
( Birdie~l1 nickname~l1 Bertha~l1 x00000001 )
( Birdie~l1 nickname~l1 Roberta~l1 x00000001 )
( Birtie~l1 nickname~l1 Roberta~l1 x00000001 )
( Bob~l1 nickname~l1 Robert~l1 x00000001 )
( Bobbie~l1 nickname~l1 Barbara~l1 x00000001 )
( Bobbie~l1 nickname~l1 Roberta~l1 x00000001 )
( Bobby~l1 nickname~l1 Robert~l1 x00000001 )
( Brad~l1 nickname~l1 Bradford~l1 x00000001 )
( Brody~l1 nickname~l1 Broderick~l1 x00000001 )
( Cal~l1 nickname~l1 Calvin~l1 x00000001 )
( Cammie~l1 nickname~l1 Camile~l1 x00000001 )
( Carl~l1 nickname~l1 Charles~l1 x00000001 )
( Carol~l1 nickname~l1 Carolann~l1 x00000001 )
( Carol~l1 nickname~l1 Caroline~l1 x00000001 )
( Cassie~l1 nickname~l1 Caroline~l1 x00000001 )
( Cassie~l1 nickname~l1 Cassandra~l1 x00000001 )
( Cassie~l1 nickname~l1 Catherine~l1 x00000001 )
( Cassie~l1 nickname~l1 Cathleen~l1 x00000001 )
( Cathy~l1 nickname~l1 Catherine~l1 x00000001 )
( Cathy~l1 nickname~l1 Cathleen~l1 x00000001 )
( Charlie~l1 nickname~l1 Charles~l1 x00000001 )
( Chet~l1 nickname~l1 Chester~l1 x00000001 )
( Chris~l1 nickname~l1 Christa~l1 x00000001 )
( Chris~l1 nickname~l1 Christian~l1 x00000001 )
( Chris~l1 nickname~l1 Christina~l1 x00000001 )
( Chris~l1 nickname~l1 Christine~l1 x00000001 )
( Chris~l1 nickname~l1 Christopher~l1 x00000001 )
( Chris~l1 nickname~l1 Kristen~l1 x00000001 )
( Chris~l1 nickname~l1 Kristin~l1 x00000001 )
( Chris~l1 nickname~l1 Kristy~l1 x00000001 )
( Chuck~l1 nickname~l1 Charles~l1 x00000001 )
( Cindy~l1 nickname~l1 Cinderlla~l1 x00000001 )
( Cindy~l1 nickname~l1 Cynthia~l1 x00000001 )
( Clara~l1 nickname~l1 Clarissa~l1 x00000001 )
( Cliff~l1 nickname~l1 Clifford~l1 x00000001 )
( Cliff~l1 nickname~l1 Clifton~l1 x00000001 )
( Connie~l1 nickname~l1 Constance~l1 x00000001 )
( Crissy~l1 nickname~l1 Chrintina~l1 x00000001 )
( Crissy~l1 nickname~l1 Chrintine~l1 x00000001 )
( Curt~l1 nickname~l1 Curtis~l1 x00000001 )
( Cy~l1 nickname~l1 Cyrus~l1 x00000001 )
( Dan~l1 nickname~l1 Daniel~l1 x00000001 )
( Danny~l1 nickname~l1 Daniel~l1 x00000001 )
( Dave~l1 nickname~l1 David~l1 x00000001 )
( Davey~l1 nickname~l1 David~l1 x00000001 )
( Deb~l1 nickname~l1 Deborah~l1 x00000001 )
( Deb~l1 nickname~l1 Debra~l1 x00000001 )
( Debbie~l1 nickname~l1 Deborah~l1 x00000001 )
( Debbie~l1 nickname~l1 Debra~l1 x00000001 )
( Dee~l1 nickname~l1 Delores~l1 x00000001 )
( Del~l1 nickname~l1 Delbert~l1 x00000001 )
( Della~l1 nickname~l1 Delores~l1 x00000001 )
( Dennie~l1 nickname~l1 Dennis~l1 x00000001 )
( Dennis~l1 nickname~l1 Dennison~l1 x00000001 )
( Denny~l1 nickname~l1 Dennis~l1 x00000001 )
( Dick~l1 nickname~l1 Richard~l1 x00000001 )
( Dolly~l1 nickname~l1 Dorothy~l1 x00000001 )
( Dom~l1 nickname~l1 Domenic~l1 x00000001 )
( Dom~l1 nickname~l1 Dominico~l1 x00000001 )
( Don~l1 nickname~l1 Donald~l1 x00000001 )
( Don~l1 nickname~l1 Donato~l1 x00000001 )
( Donnie~l1 nickname~l1 Donald~l1 x00000001 )
( Donny~l1 nickname~l1 Donald~l1 x00000001 )
( Dora~l1 nickname~l1 Dorothy~l1 x00000001 )
( Dora~l1 nickname~l1 Eldora~l1 x00000001 )
( Dora~l1 nickname~l1 Isadora~l1 x00000001 )
( Dot~l1 nickname~l1 Dorothy~l1 x00000001 )
( Dottie~l1 nickname~l1 Dorothy~l1 x00000001 )
( Dotty~l1 nickname~l1 Dorothy~l1 x00000001 )
( Drew~l1 nickname~l1 Andrew~l1 x00000001 )
( Ed~l1 nickname~l1 Edgar~l1 x00000001 )
( Ed~l1 nickname~l1 Edmond~l1 x00000001 )
( Ed~l1 nickname~l1 Edmund~l1 x00000001 )
( Ed~l1 nickname~l1 Eduardo~l1 x00000001 )
( Ed~l1 nickname~l1 Edward~l1 x00000001 )
( Ed~l1 nickname~l1 Edwin~l1 x00000001 )
( Eddie~l1 nickname~l1 Edgar~l1 x00000001 )
( Eddie~l1 nickname~l1 Edmond~l1 x00000001 )
( Eddie~l1 nickname~l1 Edmund~l1 x00000001 )
( Eddie~l1 nickname~l1 Eduardo~l1 x00000001 )
( Eddie~l1 nickname~l1 Edward~l1 x00000001 )
( Eddie~l1 nickname~l1 Edwin~l1 x00000001 )
( Eddy~l1 nickname~l1 Edgar~l1 x00000001 )
( Eddy~l1 nickname~l1 Edmond~l1 x00000001 )
( Eddy~l1 nickname~l1 Edmund~l1 x00000001 )
( Eddy~l1 nickname~l1 Eduardo~l1 x00000001 )
( Eddy~l1 nickname~l1 Edward~l1 x00000001 )
( Eddy~l1 nickname~l1 Edwin~l1 x00000001 )
( Edie~l1 nickname~l1 Edith~l1 x00000001 )
( Edie~l1 nickname~l1 Edyth~l1 x00000001 )
( Edie~l1 nickname~l1 Edythe~l1 x00000001 )
( Edye~l1 nickname~l1 Edyth~l1 x00000001 )
( Edye~l1 nickname~l1 Edythe~l1 x00000001 )
( Elaine~l1 nickname~l1 Eleanor~l1 x00000001 )
( Ella~l1 nickname~l1 Gabriella~l1 x00000001 )
( Ellen~l1 nickname~l1 Eleanor~l1 x00000001 )
( Emily~l1 nickname~l1 Amelia~l1 x00000001 )
( Emily~l1 nickname~l1 Emeline~l1 x00000001 )
( Emma~l1 nickname~l1 Emeline~l1 x00000001 )
( Emma~l1 nickname~l1 Emily~l1 x00000001 )
( Eve~l1 nickname~l1 Genevieve~l1 x00000001 )
( Fay~l1 nickname~l1 Faith~l1 x00000001 )
( Flo~l1 nickname~l1 Florence~l1 x00000001 )
( Flora~l1 nickname~l1 Florence~l1 x00000001 )
( Fran~l1 nickname~l1 Frances~l1 x00000001 )
( Fran~l1 nickname~l1 Francine~l1 x00000001 )
( Fran~l1 nickname~l1 Francis~l1 x00000001 )
( Francie~l1 nickname~l1 Frances~l1 x00000001 )
( Francie~l1 nickname~l1 Francine~l1 x00000001 )
( Frank~l1 nickname~l1 Francis~l1 x00000001 )
( Frank~l1 nickname~l1 Franklin~l1 x00000001 )
( Frankie~l1 nickname~l1 Francis~l1 x00000001 )
( Frannie~l1 nickname~l1 Frances~l1 x00000001 )
( Frannie~l1 nickname~l1 Francine~l1 x00000001 )
( Franny~l1 nickname~l1 Frances~l1 x00000001 )
( Franny~l1 nickname~l1 Francine~l1 x00000001 )
( Fred~l1 nickname~l1 Alfred~l1 x00000001 )
( Fred~l1 nickname~l1 Ferdinand~l1 x00000001 )
( Fred~l1 nickname~l1 Frederick~l1 x00000001 )
( Fred~l1 nickname~l1 Frieda~l1 x00000001 )
( Fred~l1 nickname~l1 Winnifred~l1 x00000001 )
( Freda~l1 nickname~l1 Alfreda~l1 x00000001 )
( Freda~l1 nickname~l1 Fredericka~l1 x00000001 )
( Freddie~l1 nickname~l1 Ferdinand~l1 x00000001 )
( Freddie~l1 nickname~l1 Frederick~l1 x00000001 )
( Freddie~l1 nickname~l1 Frieda~l1 x00000001 )
( Freddie~l1 nickname~l1 Winnifred~l1 x00000001 )
( Freddy~l1 nickname~l1 Alfreda~l1 x00000001 )
( Freddy~l1 nickname~l1 Ferdinand~l1 x00000001 )
( Freddy~l1 nickname~l1 Frederick~l1 x00000001 )
( Freddy~l1 nickname~l1 Frieda~l1 x00000001 )
( Freddy~l1 nickname~l1 Winnifred~l1 x00000001 )
( Gabby~l1 nickname~l1 Gabriella~l1 x00000001 )
( Gabby~l1 nickname~l1 Gabrielle~l1 x00000001 )
( Gabe~l1 nickname~l1 Gabriel~l1 x00000001 )
( Gail~l1 nickname~l1 Abigail~l1 x00000001 )
( Gene~l1 nickname~l1 Eugene~l1 x00000001 )
( Geoff~l1 nickname~l1 Geoffrey~l1 x00000001 )
( Geoff~l1 nickname~l1 Jeffrey~l1 x00000001 )
( George~l1 nickname~l1 Georgine~l1 x00000001 )
( Gerrie~l1 nickname~l1 Geraldine~l1 x00000001 )
( Gerry~l1 nickname~l1 Gerald~l1 x00000001 )
( Gerry~l1 nickname~l1 Geraldine~l1 x00000001 )
( Gertie~l1 nickname~l1 Gertrude~l1 x00000001 )
( Gil~l1 nickname~l1 Gilbert~l1 x00000001 )
( Gina~l1 nickname~l1 Regina~l1 x00000001 )
( Gretta~l1 nickname~l1 Margaretta~l1 x00000001 )
( Gus~l1 nickname~l1 Augustine~l1 x00000001 )
( Gus~l1 nickname~l1 Augustus~l1 x00000001 )
( Gwen~l1 nickname~l1 Gwendolyn~l1 x00000001 )
( Hal~l1 nickname~l1 Harold~l1 x00000001 )
( Hal~l1 nickname~l1 Henry~l1 x00000001 )
( Hank~l1 nickname~l1 Henry~l1 x00000001 )
( Hannah~l1 nickname~l1 Johannah~l1 x00000001 )
( Harry~l1 nickname~l1 Harold~l1 x00000001 )
( Harry~l1 nickname~l1 Henry~l1 x00000001 )
( Hattie~l1 nickname~l1 Harriet~l1 x00000001 )
( Henny~l1 nickname~l1 Henrietta~l1 x00000001 )
( Herb~l1 nickname~l1 Herbert~l1 x00000001 )
( Hetty~l1 nickname~l1 Hester~l1 x00000001 )
( Hipsie~l1 nickname~l1 Hipsbibah~l1 x00000001 )
( Hugh~l1 nickname~l1 Hubert~l1 x00000001 )
( Iggy~l1 nickname~l1 Ignatius~l1 x00000001 )
( Issy~l1 nickname~l1 Isabel~l1 x00000001 )
( Issy~l1 nickname~l1 Isabella~l1 x00000001 )
( Issy~l1 nickname~l1 Isabelle~l1 x00000001 )
( Issy~l1 nickname~l1 Isadora~l1 x00000001 )
( Izzy~l1 nickname~l1 Isadore~l1 x00000001 )
( Jake~l1 nickname~l1 Jacob~l1 x00000001 )
( Jamie~l1 nickname~l1 Benjamin~l1 x00000001 )
( Jamie~l1 nickname~l1 James~l1 x00000001 )
( Jan~l1 nickname~l1 Janet~l1 x00000001 )
( Jay~l1 nickname~l1 Jacob~l1 x00000001 )
( Jean~l1 nickname~l1 Genevieve~l1 x00000001 )
( Jeb~l1 nickname~l1 Jebadiah~l1 x00000001 )
( Jeff~l1 nickname~l1 Geoffrey~l1 x00000001 )
( Jeff~l1 nickname~l1 Jefferson~l1 x00000001 )
( Jeff~l1 nickname~l1 Jeffrey~l1 x00000001 )
( Jennie~l1 nickname~l1 Jennifer~l1 x00000001 )
( Jenny~l1 nickname~l1 Jennifer~l1 x00000001 )
( Jenny~l1 nickname~l1 Genevieve~l1 x00000001 )
( Jerry~l1 nickname~l1 Gerald~l1 x00000001 )
( Jerry~l1 nickname~l1 Geraldine~l1 x00000001 )
( Jerry~l1 nickname~l1 Jeremiah~l1 x00000001 )
( Jessie~l1 nickname~l1 Jessica~l1 x00000001 )
( Jim~l1 nickname~l1 James~l1 x00000001 )
( Jimmie~l1 nickname~l1 James~l1 x00000001 )
( Jimmy~l1 nickname~l1 James~l1 x00000001 )
( Jo~l1 nickname~l1 Joan~l1 x00000001 )
( Jo~l1 nickname~l1 Joann~l1 x00000001 )
( Jo~l1 nickname~l1 Joanna~l1 x00000001 )
( Jo~l1 nickname~l1 Joanne~l1 x00000001 )
( Jo~l1 nickname~l1 Johanna~l1 x00000001 )
( Jo~l1 nickname~l1 Johannah~l1 x00000001 )
( Jo~l1 nickname~l1 Josophine~l1 x00000001 )
( Jody~l1 nickname~l1 Joseph~l1 x00000001 )
( Joe~l1 nickname~l1 Joseph~l1 x00000001 )
( Joe~l1 nickname~l1 Joshua~l1 x00000001 )
( Joey~l1 nickname~l1 Joseph~l1 x00000001 )
( Joey~l1 nickname~l1 Josophine~l1 x00000001 )
( John~l1 nickname~l1 Johann~l1 x00000001 )
( John~l1 nickname~l1 Jonathan~l1 x00000001 )
( Jon~l1 nickname~l1 Jonathan~l1 x00000001 )
( Josey~l1 nickname~l1 Josophine~l1 x00000001 )
( Josh~l1 nickname~l1 Joshua~l1 x00000001 )
( Joy~l1 nickname~l1 Joyce~l1 x00000001 )
( Judy~l1 nickname~l1 Judith~l1 x00000001 )
( Julie~l1 nickname~l1 Julia~l1 x00000001 )
( Kate~l1 nickname~l1 Katelin~l1 x00000001 )
( Kate~l1 nickname~l1 Katelyn~l1 x00000001 )
( Kate~l1 nickname~l1 Katherine~l1 x00000001 )
( Kathy~l1 nickname~l1 Katherine~l1 x00000001 )
( Kathy~l1 nickname~l1 Kathleen~l1 x00000001 )
( Kathy~l1 nickname~l1 Kathryn~l1 x00000001 )
( Katy~l1 nickname~l1 Katherine~l1 x00000001 )
( Katy~l1 nickname~l1 Kathleen~l1 x00000001 )
( Kay~l1 nickname~l1 Katelin~l1 x00000001 )
( Kay~l1 nickname~l1 Katelyn~l1 x00000001 )
( Kay~l1 nickname~l1 Katherine~l1 x00000001 )
( Kaye~l1 nickname~l1 Katelin~l1 x00000001 )
( Kaye~l1 nickname~l1 Katelyn~l1 x00000001 )
( Kaye~l1 nickname~l1 Katherine~l1 x00000001 )
( Ken~l1 nickname~l1 Kenneth~l1 x00000001 )
( Kenny~l1 nickname~l1 Kenneth~l1 x00000001 )
( Kim~l1 nickname~l1 Kimberley~l1 x00000001 )
( Kim~l1 nickname~l1 Kimberly~l1 x00000001 )
( Larry~l1 nickname~l1 Laurence~l1 x00000001 )
( Larry~l1 nickname~l1 Lawrence~l1 x00000001 )
( Lee~l1 nickname~l1 Elias~l1 x00000001 )
( Lena~l1 nickname~l1 Aileen~l1 x00000001 )
( Lena~l1 nickname~l1 Arlene~l1 x00000001 )
( Lena~l1 nickname~l1 Cathleen~l1 x00000001 )
( Lena~l1 nickname~l1 Darlene~l1 x00000001 )
( Lena~l1 nickname~l1 Kathleen~l1 x00000001 )
( Lena~l1 nickname~l1 Magdelina~l1 x00000001 )
( Lenny~l1 nickname~l1 Leonard~l1 x00000001 )
( Leo~l1 nickname~l1 Leonard~l1 x00000001 )
( Leon~l1 nickname~l1 Leonard~l1 x00000001 )
( Leon~l1 nickname~l1 Napoleon~l1 x00000001 )
( Les~l1 nickname~l1 Lester~l1 x00000001 )
( Libby~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Lilly~l1 nickname~l1 Lillian~l1 x00000001 )
( Linda~l1 nickname~l1 Belinda~l1 x00000001 )
( Linda~l1 nickname~l1 Melinda~l1 x00000001 )
( Lisa~l1 nickname~l1 Melissa~l1 x00000001 )
( Liz~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Lizzie~l1 nickname~l1 Elizabeth~l1 x00000001 )
( Lois~l1 nickname~l1 Louise~l1 x00000001 )
( Lorie~l1 nickname~l1 Loretta~l1 x00000001 )
( Lorie~l1 nickname~l1 Lorraine~l1 x00000001 )
( Lou~l1 nickname~l1 Louis~l1 x00000001 )
( Lou~l1 nickname~l1 Louise~l1 x00000001 )
( Lou~l1 nickname~l1 Lucinda~l1 x00000001 )
( Lucy~l1 nickname~l1 Lucinda~l1 x00000001 )
( Luke~l1 nickname~l1 Lucas~l1 x00000001 )
( Luke~l1 nickname~l1 Lucias~l1 x00000001 )
( Lynn~l1 nickname~l1 Caroline~l1 x00000001 )
( Lynn~l1 nickname~l1 Carolyn~l1 x00000001 )
( Maddy~l1 nickname~l1 Madeline~l1 x00000001 )
( Maddy~l1 nickname~l1 Madelyn~l1 x00000001 )
( Madge~l1 nickname~l1 Magdelina~l1 x00000001 )
( Madge~l1 nickname~l1 Margaretta~l1 x00000001 )
( Madie~l1 nickname~l1 Madeline~l1 x00000001 )
( Madie~l1 nickname~l1 Madelyn~l1 x00000001 )
( Maggie~l1 nickname~l1 Madeline~l1 x00000001 )
( Maggie~l1 nickname~l1 Magdelina~l1 x00000001 )
( Maggie~l1 nickname~l1 Margaret~l1 x00000001 )
( Maggy~l1 nickname~l1 Margaret~l1 x00000001 )
( Mandy~l1 nickname~l1 Amanda~l1 x00000001 )
( Marge~l1 nickname~l1 Margaret~l1 x00000001 )
( Marge~l1 nickname~l1 Margaretta~l1 x00000001 )
( Margie~l1 nickname~l1 Margaret~l1 x00000001 )
( Margie~l1 nickname~l1 Marjorie~l1 x00000001 )
( Margy~l1 nickname~l1 Margaret~l1 x00000001 )
( Margy~l1 nickname~l1 Marjorie~l1 x00000001 )
( Mark~l1 nickname~l1 Marcus~l1 x00000001 )
( Marty~l1 nickname~l1 Martin~l1 x00000001 )
( Marv~l1 nickname~l1 Marvin~l1 x00000001 )
( Matt~l1 nickname~l1 Mathew~l1 x00000001 )
( Matt~l1 nickname~l1 Matthew~l1 x00000001 )
( Maud~l1 nickname~l1 Madeline~l1 x00000001 )
( Mel~l1 nickname~l1 Melinda~l1 x00000001 )
( Mel~l1 nickname~l1 Melissa~l1 x00000001 )
( Merv~l1 nickname~l1 Mervin~l1 x00000001 )
( Mick~l1 nickname~l1 Michael~l1 x00000001 )
( Mickey~l1 nickname~l1 Michael~l1 x00000001 )
( Mike~l1 nickname~l1 Michael~l1 x00000001 )
( Mindy~l1 nickname~l1 Melinda~l1 x00000001 )
( Minnie~l1 nickname~l1 Wilhelmina~l1 x00000001 )
( Missy~l1 nickname~l1 Melissa~l1 x00000001 )
( Mitch~l1 nickname~l1 Mitchell~l1 x00000001 )
( Monty~l1 nickname~l1 Lamont~l1 x00000001 )
( Nat~l1 nickname~l1 Nathaniel~l1 x00000001 )
( Nate~l1 nickname~l1 Nathan~l1 x00000001 )
( Nate~l1 nickname~l1 Nathaniel~l1 x00000001 )
( Nathan~l1 nickname~l1 Jonathan~l1 x00000001 )
( Neil~l1 nickname~l1 Cornelius~l1 x00000001 )
( Newt~l1 nickname~l1 Newton~l1 x00000001 )
( Nick~l1 nickname~l1 Nicholas~l1 x00000001 )
( Nickie~l1 nickname~l1 Nicholas~l1 x00000001 )
( Nora~l1 nickname~l1 Eleanor~l1 x00000001 )
( Nora~l1 nickname~l1 Lenora~l1 x00000001 )
( Obie~l1 nickname~l1 Obediah~l1 x00000001 )
( Ollie~l1 nickname~l1 Oliver~l1 x00000001 )
( Ozzy~l1 nickname~l1 Oswald~l1 x00000001 )
( Pat~l1 nickname~l1 Patricia~l1 x00000001 )
( Pat~l1 nickname~l1 Patrick~l1 x00000001 )
( Patsy~l1 nickname~l1 Patricia~l1 x00000001 )
( Patty~l1 nickname~l1 Patricia~l1 x00000001 )
( Peggy~l1 nickname~l1 Margaret~l1 x00000001 )
( Penny~l1 nickname~l1 Penelope~l1 x00000001 )
( Pete~l1 nickname~l1 Peter~l1 x00000001 )
( Phil~l1 nickname~l1 Philip~l1 x00000001 )
( Phil~l1 nickname~l1 Phillip~l1 x00000001 )
( Polly~l1 nickname~l1 Paulina~l1 x00000001 )
( Prissy~l1 nickname~l1 Priscilla~l1 x00000001 )
( Prudy~l1 nickname~l1 Prudence~l1 x00000001 )
( Randy~l1 nickname~l1 Randolph~l1 x00000001 )
( Ray~l1 nickname~l1 Raymond~l1 x00000001 )
( Reba~l1 nickname~l1 Rebecca~l1 x00000001 )
( Reggie~l1 nickname~l1 Reginald~l1 x00000001 )
( Rena~l1 nickname~l1 Irene~l1 x00000001 )
( Rich~l1 nickname~l1 Aldrich~l1 x00000001 )
( Rich~l1 nickname~l1 Richard~l1 x00000001 )
( Richie~l1 nickname~l1 Aldrich~l1 x00000001 )
( Richie~l1 nickname~l1 Richard~l1 x00000001 )
( Rick~l1 nickname~l1 Derick~l1 x00000001 )
( Rick~l1 nickname~l1 Ricardo~l1 x00000001 )
( Rick~l1 nickname~l1 Richard~l1 x00000001 )
( Ricky~l1 nickname~l1 Broderick~l1 x00000001 )
( Ricky~l1 nickname~l1 Derick~l1 x00000001 )
( Ricky~l1 nickname~l1 Richard~l1 x00000001 )
( Rob~l1 nickname~l1 Robert~l1 x00000001 )
( Rob~l1 nickname~l1 Roberto~l1 x00000001 )
( Robby~l1 nickname~l1 Robert~l1 x00000001 )
( Rod~l1 nickname~l1 Broderick~l1 x00000001 )
( Ron~l1 nickname~l1 Aaron~l1 x00000001 )
( Ron~l1 nickname~l1 Ronald~l1 x00000001 )
( Ron~l1 nickname~l1 Veronica~l1 x00000001 )
( Ronnie~l1 nickname~l1 Aaron~l1 x00000001 )
( Ronnie~l1 nickname~l1 Ronald~l1 x00000001 )
( Ronnie~l1 nickname~l1 Veronica~l1 x00000001 )
( Ronny~l1 nickname~l1 Ronald~l1 x00000001 )
( Ronny~l1 nickname~l1 Veronica~l1 x00000001 )
( Rose~l1 nickname~l1 Rosabel~l1 x00000001 )
( Rose~l1 nickname~l1 Rosabella~l1 x00000001 )
( Rose~l1 nickname~l1 Rosalyn~l1 x00000001 )
( Rose~l1 nickname~l1 Roseann~l1 x00000001 )
( Rose~l1 nickname~l1 Roseanna~l1 x00000001 )
( Rose~l1 nickname~l1 Roxanna~l1 x00000001 )
( Rose~l1 nickname~l1 Roxanne~l1 x00000001 )
( Roz~l1 nickname~l1 Rosabel~l1 x00000001 )
( Roz~l1 nickname~l1 Rosabella~l1 x00000001 )
( Roz~l1 nickname~l1 Rosalyn~l1 x00000001 )
( Rube~l1 nickname~l1 Reuben~l1 x00000001 )
( Rudy~l1 nickname~l1 Rudolph~l1 x00000001 )
( Russ~l1 nickname~l1 Russell~l1 x00000001 )
( Rusty~l1 nickname~l1 Russell~l1 x00000001 )
( Sal~l1 nickname~l1 Solomon~l1 x00000001 )
( Sam~l1 nickname~l1 Samuel~l1 x00000001 )
( Sammy~l1 nickname~l1 Samuel~l1 x00000001 )
( Sandra~l1 nickname~l1 Cassandra~l1 x00000001 )
( Sandy~l1 nickname~l1 Cassandra~l1 x00000001 )
( Sandy~l1 nickname~l1 Sandra~l1 x00000001 )
( Scott~l1 nickname~l1 Prescott~l1 x00000001 )
( Scotty~l1 nickname~l1 Prescott~l1 x00000001 )
( Shelly~l1 nickname~l1 Michelle~l1 x00000001 )
( Shelly~l1 nickname~l1 Rachel~l1 x00000001 )
( Shelly~l1 nickname~l1 Shelton~l1 x00000001 )
( Sherry~l1 nickname~l1 Shirley~l1 x00000001 )
( Sly~l1 nickname~l1 Sylvester~l1 x00000001 )
( Stella~l1 nickname~l1 Estella~l1 x00000001 )
( Steph~l1 nickname~l1 Stephen~l1 x00000001 )
( Steph~l1 nickname~l1 Steven~l1 x00000001 )
( Steve~l1 nickname~l1 Stephen~l1 x00000001 )
( Steve~l1 nickname~l1 Steven~l1 x00000001 )
( Sue~l1 nickname~l1 Susan~l1 x00000001 )
( Sue~l1 nickname~l1 Susannah~l1 x00000001 )
( Sully~l1 nickname~l1 Sullivan~l1 x00000001 )
( Susie~l1 nickname~l1 Susan~l1 x00000001 )
( Susie~l1 nickname~l1 Susannah~l1 x00000001 )
( Tabby~l1 nickname~l1 Tabitha~l1 x00000001 )
( Ted~l1 nickname~l1 Theodore~l1 x00000001 )
( Teddy~l1 nickname~l1 Theodore~l1 x00000001 )
( Terry~l1 nickname~l1 Terence~l1 x00000001 )
( Tess~l1 nickname~l1 Teresa~l1 x00000001 )
( Tess~l1 nickname~l1 Theresa~l1 x00000001 )
( Tessa~l1 nickname~l1 Teresa~l1 x00000001 )
( Tessa~l1 nickname~l1 Theresa~l1 x00000001 )
( Tessie~l1 nickname~l1 Teresa~l1 x00000001 )
( Tessie~l1 nickname~l1 Theresa~l1 x00000001 )
( Thad~l1 nickname~l1 Thaddeus~l1 x00000001 )
( Theo~l1 nickname~l1 Theodore~l1 x00000001 )
( Thom~l1 nickname~l1 Thomas~l1 x00000001 )
( Tilla~l1 nickname~l1 Matilda~l1 x00000001 )
( Tim~l1 nickname~l1 Timothy~l1 x00000001 )
( Timmy~l1 nickname~l1 Timothy~l1 x00000001 )
( Tina~l1 nickname~l1 Augustina~l1 x00000001 )
( Tina~l1 nickname~l1 Christina~l1 x00000001 )
( Tina~l1 nickname~l1 Martina~l1 x00000001 )
( Tish~l1 nickname~l1 Latisha~l1 x00000001 )
( Tish~l1 nickname~l1 Tisha~l1 x00000001 )
( Tisha~l1 nickname~l1 Latisha~l1 x00000001 )
( Toby~l1 nickname~l1 Tobias~l1 x00000001 )
( Tom~l1 nickname~l1 Thom~l1 x00000001 )
( Tom~l1 nickname~l1 Thomas~l1 x00000001 )
( Tommy~l1 nickname~l1 Thom~l1 x00000001 )
( Tommy~l1 nickname~l1 Thomas~l1 x00000001 )
( Tony~l1 nickname~l1 Anthony~l1 x00000001 )
( Tony~l1 nickname~l1 Shelton~l1 x00000001 )
( Tori~l1 nickname~l1 Victoria~l1 x00000001 )
( Torie~l1 nickname~l1 Victoria~l1 x00000001 )
( Torri~l1 nickname~l1 Victoria~l1 x00000001 )
( Torrie~l1 nickname~l1 Victoria~l1 x00000001 )
( Tory~l1 nickname~l1 Victoria~l1 x00000001 )
( Trisha~l1 nickname~l1 Patricia~l1 x00000001 )
( Trixie~l1 nickname~l1 Beatrice~l1 x00000001 )
( Trudy~l1 nickname~l1 Gertrude~l1 x00000001 )
( Val~l1 nickname~l1 Valeri~l1 x00000001 )
( Val~l1 nickname~l1 Valerie~l1 x00000001 )
( Van~l1 nickname~l1 Sullivan~l1 x00000001 )
( Vanna~l1 nickname~l1 Vanessa~l1 x00000001 )
( Vic~l1 nickname~l1 Victor~l1 x00000001 )
( Vic~l1 nickname~l1 Vincent~l1 x00000001 )
( Vic~l1 nickname~l1 Vincenzon~l1 x00000001 )
( Vicki~l1 nickname~l1 Victoria~l1 x00000001 )
( Vickie~l1 nickname~l1 Victoria~l1 x00000001 )
( Vicky~l1 nickname~l1 Victoria~l1 x00000001 )
( Vin~l1 nickname~l1 Vincent~l1 x00000001 )
( Vin~l1 nickname~l1 Vincenzo~l1 x00000001 )
( Vince~l1 nickname~l1 Vincent~l1 x00000001 )
( Vince~l1 nickname~l1 Vinson~l1 x00000001 )
( Vinnie~l1 nickname~l1 Vincent~l1 x00000001 )
( Vinnie~l1 nickname~l1 Vincenzo~l1 x00000001 )
( Waldo~l1 nickname~l1 Oswald~l1 x00000001 )
( Wendy~l1 nickname~l1 Gwendolyn~l1 x00000001 )
( Wilber~l1 nickname~l1 Gilbert~l1 x00000001 )
( Will~l1 nickname~l1 Wilbur~l1 x00000001 )
( Will~l1 nickname~l1 William~l1 x00000001 )
( Will~l1 nickname~l1 Wilson~l1 x00000001 )
( Willie~l1 nickname~l1 Wilbur~l1 x00000001 )
( Willie~l1 nickname~l1 William~l1 x00000001 )
( Willie~l1 nickname~l1 Wilson~l1 x00000001 )
( Wilma~l1 nickname~l1 Wilhelmina~l1 x00000001 )
( Winnie~l1 nickname~l1 Winnifred~l1 x00000001 )
( Winny~l1 nickname~l1 Winnifred~l1 x00000001 )
( Woody~l1 nickname~l1 Elwood~l1 x00000001 )
( Zach~l1 nickname~l1 Zachariah~l1 x00000001 )
( 30 speed~l1 ~bird x00000001 )
( 60 speed~l1 bird~l1 x00000001 )
( 56 speed~l1 swan~l1 x00000001 )
( 53 speed~l1 duck~l1 x00000001 )
( 30 speed~l1 hummingbird~l1 x00000001 )
( 24 speed~l1 sparrow~l1 x00000001 )
( 25 speed~l1 crow~l1 x00000001 )
( 9 speed~l1 chicken~l1 x00000001 )
( 25 speed~l1 ~animals x00000001 )
( 15 speed~l1 ~fishes x00000001 )
( 44 speed~l1 tuna~l1 x00000001 )
( 40 speed~l1 swordfish~l1 x00000001 )
( 0.18 speed~l1 ~insects x00000001 )
( 0.03 speed~l1 snail~l1 x00000001 )
( 0.18 speed~l1 ant~l1 x00000001 )
( 6 speed~l1 bee~l1 x00000001 )
( 6 speed~l1 bumblebee~l1 x00000001 )
( 1 speed~l1 spider~l1 x00000001 )
( 20 speed~l1 ~reptiles x00000001 )
( 200 speed~l1 peregrine_falcon~l1 x00000001 )
( 106 speed~l1 spin-tailed_swift~l1 x00000001 )
( 106 speed~l1 swift~l1 x00000001 )
( 95 speed~l1 frigate_bird~l1 x00000001 )
( 70 speed~l1 cheetah~l1 x00000001 )
( 68 speed~l1 sailfish~l1 x00000001 )
( 30 speed~l1 whale~l1 x00000001 )
( 61 speed~l1 pronghorn_antelope~l1 x00000001 )
( 50 speed~l1 lion~l1 x00000001 )
( 50 speed~l1 gazelle~l1 x00000001 )
( 50 speed~l1 thomson_'s_gazelle~l1 x00000001 )
( 50 speed~l1 wildebeest~l1 x00000001 )
( 50 speed~l1 horse~l1 x00000001 )
( 50 speed~l1 marlin~l1 x00000001 )
( 47 speed~l1 quarter_horse~l1 x00000001 )
( 45 speed~l1 cape_hunting_dog~l1 x00000001 )
( 45 speed~l1 elk~l1 x00000001 )
( 43 speed~l1 coyote~l1 x00000001 )
( 42 speed~l1 fox~l1 x00000001 )
( 42 speed~l1 gray_fox~l1 x00000001 )
( 40 speed~l1 dog~l1 x00000001 )
( 40 speed~l1 hyena~l1 x00000001 )
( 40 speed~l1 ostrich~l1 x00000001 )
( 40 speed~l1 zebra~l1 x00000001 )
( 40 speed~l1 Mongolian_wild_ass~l1 x00000001 )
( 39 speed~l1 greyhound~l1 x00000001 )
( 35 speed~l1 whippet~l1 x00000001 )
( 35 speed~l1 jackal~l1 x00000001 )
( 35 speed~l1 rabbit~l1 x00000001 )
( 32 speed~l1 giraffe~l1 x00000001 )
( 32 speed~l1 reindeer~l1 x00000001 )
( 30 speed~l1 cat~l1 x00000001 )
( 30 speed~l1 bear~l1 x00000001 )
( 30 speed~l1 grizzly_bear~l1 x00000001 )
( 30 speed~l1 wart_hog~l1 x00000001 )
( 30 speed~l1 deer~l1 x00000001 )
( 30 speed~l1 white-tailed_deer~l1 x00000001 )
( 30 speed~l1 tiger~l1 x00000001 )
( 30 speed~l1 kangaroo~l1 x00000001 )
( 25 speed~l1 elephant~l1 x00000001 )
( 25 speed~l1 human~l1 x00000001 )
( 25 speed~l1 person~l1 x00000001 )
( 25 speed~l1 man~l1 x00000001 )
( 25 speed~l1 woman~l1 x00000001 )
( 25 speed~l1 kid~l1 x00000001 )
( 25 speed~l1 child~l1 x00000001 )
( 20 speed~l1 turtle~l1 x00000001 )
( 20 speed~l1 snake~l1 x00000001 )
( 20 speed~l1 black_mamba_snake~l1 x00000001 )
( 12 speed~l1 squirrel~l1 x00000001 )
( 11 speed~l1 pig~l1 x00000001 )
( 10 speed~l1 gerbil~l1 x00000001 )
( 8 speed~l1 mouse~l1 x00000001 )
( 8 speed~l1 house_mouse~l1 x00000001 )
( 7 speed~l1 hamster~l1 x00000001 )
( 3 speed~l1 Green_Basilisk~l1 x00000001 )
( 3 speed~l1 Jesus_Christ_lizard~l1 x00000001 )
( 0.15 speed~l1 sloth~l1 x00000001 )
( 0.10 speed~l1 giant_tortoise~l1 x00000001 )
( 20 speed~l1 ~vehicles_sea x00000001 )
( 80 speed~l1 ~vehicles_land x00000001 )
( 300 speed~l1 ~vehicles_air x00000001 )
( 1000 speed~l1 ~vehicles_space x00000001 )
( 110,160,000 speed~l1 spaceship~l1 x00000001 )
( 110,160,000 speed~l1 flying_saucer~l1 x00000001 )
( 110,160,000 speed~l1 Starship_Enterprise~l1 x00000001 )
( 110,160,000 speed~l1 USS_Enterprise~l1 x00000001 )
( 110,160,000 speed~l1 Enterprise~l1 x00000001 )
( 18,000 speed~l1 space_shuttle~l1 x00000001 )
( 2300 speed~l1 fighter_jet~l1 x00000001 )
( 600 speed~l1 airplane~l1 x00000001 )
( 600 speed~l1 plane~l1 x00000001 )
( 600 speed~l1 jet~l1 x00000001 )
( 357 speed~l1 bullet_train~l1 x00000001 )
( 133 speed~l1 helicopter~l1 x00000001 )
( 100 speed~l1 automobile~l1 x00000001 )
( 100 speed~l1 car~l1 x00000001 )
( 100 speed~l1 auto~l1 x00000001 )
( 80 speed~l1 train~l1 x00000001 )
( 80 speed~l1 truck~l1 x00000001 )
( 70 speed~l1 motorcycle~l1 x00000001 )
( 60 speed~l1 speedboat~l1 x00000001 )
( 60 speed~l1 speed_boat~l1 x00000001 )
( 60 speed~l1 motorboat~l1 x00000001 )
( 60 speed~l1 racing_boat~l1 x00000001 )
( 35 speed~l1 aircraft_carrier~l1 x00000001 )
( 25 speed~l1 cruise_ship~l1 x00000001 )
( 20 speed~l1 bicycle~l1 x00000001 )
( 20 speed~l1 subway~l1 x00000001 )
( 16 speed~l1 tug~l1 x00000001 )
( 16 speed~l1 tugboat~l1 x00000001 )
( 16 speed~l1 towboat~l1 x00000001 )
( 5 speed~l1 elevator~l1 x00000001 )
( 3 speed~l1 canoe~l1 x00000001 )
( 2 speed~l1 paddleboat~l1 x00000001 )
( 1 speed~l1 escalator~l1 x00000001 )
( 11,160,000 speed~l1 speed_of_light~l1 x00000001 )
( 11,160,000 speed~l1 radio_wave~l1 x00000001 )
( 160,000 speed~l1 meteor~l1 x00000001 )
( 67,000 speed~l1 Earth~l1 x00000001 )
( 761 speed~l1 speed_of_sound~l1 x00000001 )
( 661 speed~l1 bullet~l1 x00000001 )
( 120 speed~l1 skydiver~l1 x00000001 )
( 20 speed~l1 wind~l1 x00000001 )
( 120 speed~l1 hurricane~l1 x00000001 )
( 120 speed~l1 tornado~l1 x00000001 )
( ice~l1 temperature~l1 cold~l1 x00000001 )
( snow~l1 temperature~l1 cold~l1 x00000001 )
( liquid_nitrogen~l1 temperature~l1 cold~l1 x00000001 )
( air_conditioner~l1 temperature~l1 cold~l1 x00000001 )
( milkshake~l1 temperature~l1 cold~l1 x00000001 )
( ice_cube~l1 temperature~l1 cold~l1 x00000001 )
( dry_ice~l1 temperature~l1 cold~l1 x00000001 )
( skating_rink~l1 temperature~l1 cold~l1 x00000001 )
( Pluto~l1 temperature~l1 cold~l1 x00000001 )
( Neptune~l1 temperature~l1 cold~l1 x00000001 )
( Uranus~l1 temperature~l1 cold~l1 x00000001 )
( liquid_oxygen~l1 temperature~l1 cold~l1 x00000001 )
( lemonade~l1 temperature~l1 cold~l1 x00000001 )
( cold_water~l1 temperature~l1 cold~l1 x00000001 )
( glacier~l1 temperature~l1 cold~l1 x00000001 )
( ice_cream~l1 temperature~l1 cold~l1 x00000001 )
( freezer~l1 temperature~l1 cold~l1 x00000001 )
( South_Pole~l1 temperature~l1 cold~l1 x00000001 )
( North_Pole~l1 temperature~l1 cold~l1 x00000001 )
( fridge~l1 temperature~l1 cold~l1 x00000001 )
( refrigerator~l1 temperature~l1 cold~l1 x00000001 )
( igloo~l1 temperature~l1 cold~l1 x00000001 )
( cold_pack~l1 temperature~l1 cold~l1 x00000001 )
( Antarctica~l1 temperature~l1 cold~l1 x00000001 )
( Arctic_Ocean~l1 temperature~l1 cold~l1 x00000001 )
( cold~l1 temperature~l1 cold~l1 x00000001 )
( ocean~l1 temperature~l1 cold~l1 x00000001 )
( sun~l1 temperature~l1 hot~l1 x00000001 )
( star~l1 temperature~l1 hot~l1 x00000001 )
( volcano~l1 temperature~l1 hot~l1 x00000001 )
( wildfire~l1 temperature~l1 hot~l1 x00000001 )
( coals~l1 temperature~l1 hot~l1 x00000001 )
( iron~l1 temperature~l1 hot~l1 x00000001 )
( toaster~l1 temperature~l1 hot~l1 x00000001 )
( steam~l1 temperature~l1 hot~l1 x00000001 )
( plasma~l1 temperature~l1 hot~l1 x00000001 )
( lava~l1 temperature~l1 hot~l1 x00000001 )
( furnace~l1 temperature~l1 hot~l1 x00000001 )
( hot_water~l1 temperature~l1 hot~l1 x00000001 )
( fire~l1 temperature~l1 hot~l1 x00000001 )
( heater~l1 temperature~l1 hot~l1 x00000001 )
( hot_spring~l1 temperature~l1 hot~l1 x00000001 )
( hot_chocolate~l1 temperature~l1 hot~l1 x00000001 )
( Mercury~l1 temperature~l1 hot~l1 x00000001 )
( Venus~l1 temperature~l1 hot~l1 x00000001 )
( desert~l1 temperature~l1 hot~l1 x00000001 )
( grill~l1 temperature~l1 hot~l1 x00000001 )
( oven~l1 temperature~l1 hot~l1 x00000001 )
( stove~l1 temperature~l1 hot~l1 x00000001 )
( hot_plate~l1 temperature~l1 hot~l1 x00000001 )
( fry_pan~l1 temperature~l1 hot~l1 x00000001 )
( burner~l1 temperature~l1 hot~l1 x00000001 )
( flame~l1 temperature~l1 hot~l1 x00000001 )
( rocket_engine~l1 temperature~l1 hot~l1 x00000001 )
( car_engine~l1 temperature~l1 hot~l1 x00000001 )
( equator~l1 temperature~l1 hot~l1 x00000001 )
( hot~l1 temperature~l1 hot~l1 x00000001 )
( cow~l1 source~l1 milk~l1 x00000001 )
( cow~l1 source~l1 beef~l1 x00000001 )
( sheep~l1 source~l1 wool~l1 x00000001 )
( sheep~l1 source~l1 lamb~l1 x00000001 )
( bee~l1 source~l1 honey~l1 x00000001 )
( silk_worm~l1 source~l1 silk~l1 x00000001 )
( spider~l1 source~l1 web~l1 x00000001 )
( bee~l1 source~l1 hive~l1 x00000001 )
( bird~l1 source~l1 feather~l1 x00000001 )
( bird~l1 source~l1 nest~l1 x00000001 )
( chicken~l1 source~l1 egg~l1 x00000001 )
( bird~l1 source~l1 egg~l1 x00000001 )
( duck~l1 source~l1 egg~l1 x00000001 )
( pig~l1 source~l1 bacon~l1 x00000001 )
( pig~l1 source~l1 sausage~l1 x00000001 )
( mine~l1 source~l1 silver~l1 x00000001 )
( mine~l1 source~l1 gold~l1 x00000001 )
( sun~l1 source~l1 light~l1 x00000001 )
( lamp~l1 source~l1 light~l1 x00000001 )
( battery~l1 source~l1 electricity~l1 x00000001 )
( generator~l1 source~l1 electricity~l1 x00000001 )
( faucet~l1 source~l1 water~l1 x00000001 )
( cow~l1 source~l1 leather~l1 x00000001 )
( mother~l1 source~l1 baby~l1 x00000001 )
( sheet~l1 shape~l1 rectangular~l1 x00000001 )
( window~l1 shape~l1 rectangular~l1 x00000001 )
( door~l1 shape~l1 rectangular~l1 x00000001 )
( sign~l1 shape~l1 rectangular~l1 x00000001 )
( picture~l1 shape~l1 rectangular~l1 x00000001 )
( flag~l1 shape~l1 rectangular~l1 x00000001 )
( parking_spot~l1 shape~l1 rectangular~l1 x00000001 )
( table~l1 shape~l1 rectangular~l1 x00000001 )
( house~l1 shape~l1 rectangular~l1 x00000001 )
( rug~l1 shape~l1 rectangular~l1 x00000001 )
( calendar~l1 shape~l1 rectangular~l1 x00000001 )
( TV~l1 shape~l1 rectangular~l1 x00000001 )
( television~l1 shape~l1 rectangular~l1 x00000001 )
( electrical_outlet~l1 shape~l1 rectangular~l1 x00000001 )
( blackboard~l1 shape~l1 rectangular~l1 x00000001 )
( wall~l1 shape~l1 rectangular~l1 x00000001 )
( ceiling~l1 shape~l1 rectangular~l1 x00000001 )
( facecloth~l1 shape~l1 rectangular~l1 x00000001 )
( curtain~l1 shape~l1 rectangular~l1 x00000001 )
( parking_space~l1 shape~l1 rectangular~l1 x00000001 )
( ruler~l1 shape~l1 rectangular~l1 x00000001 )
( drawer~l1 shape~l1 rectangular~l1 x00000001 )
( magazine~l1 shape~l1 rectangular~l1 x00000001 )
( newspaper~l1 shape~l1 rectangular~l1 x00000001 )
( dollar_bill~l1 shape~l1 rectangular~l1 x00000001 )
( money~l1 shape~l1 rectangular~l1 x00000001 )
( paper_towel~l1 shape~l1 rectangular~l1 x00000001 )
( towel~l1 shape~l1 rectangular~l1 x00000001 )
( book~l1 shape~l1 rectangular~l1 x00000001 )
( doormat~l1 shape~l1 rectangular~l1 x00000001 )
( board~l1 shape~l1 rectangular~l1 x00000001 )
( ladder~l1 shape~l1 rectangular~l1 x00000001 )
( tray~l1 shape~l1 rectangular~l1 x00000001 )
( monitor~l1 shape~l1 rectangular~l1 x00000001 )
( typewriter_paper~l1 shape~l1 rectangular~l1 x00000001 )
( paper~l1 shape~l1 rectangular~l1 x00000001 )
( mirror~l1 shape~l1 rectangular~l1 x00000001 )
( triangle~l1 shape~l1 triangular~l1 x00000001 )
( pie_slice~l1 shape~l1 triangular~l1 x00000001 )
( cheese_slice~l1 shape~l1 triangular~l1 x00000001 )
( Toblerone_chocolate~l1 shape~l1 triangular~l1 x00000001 )
( cake_slice~l1 shape~l1 triangular~l1 x00000001 )
( window~l1 shape~l1 square~l1 x00000001 )
( sign~l1 shape~l1 square~l1 x00000001 )
( floppy_disc~l1 shape~l1 square~l1 x00000001 )
( tile~l1 shape~l1 square~l1 x00000001 )
( chess_board~l1 shape~l1 square~l1 x00000001 )
( table~l1 shape~l1 square~l1 x00000001 )
( cd_case~l1 shape~l1 square~l1 x00000001 )
( DVD_case~l1 shape~l1 square~l1 x00000001 )
( tire~l1 shape~l1 round~l1 x00000001 )
( table~l1 shape~l1 round~l1 x00000001 )
( record~l1 shape~l1 round~l1 x00000001 )
( LP~l1 shape~l1 round~l1 x00000001 )
( CD~l1 shape~l1 round~l1 x00000001 )
( DVD~l1 shape~l1 round~l1 x00000001 )
( saucer~l1 shape~l1 round~l1 x00000001 )
( plate~l1 shape~l1 round~l1 x00000001 )
( lid~l1 shape~l1 round~l1 x00000001 )
( pie~l1 shape~l1 round~l1 x00000001 )
( pizza~l1 shape~l1 round~l1 x00000001 )
( rug~l1 shape~l1 round~l1 x00000001 )
( penny~l1 shape~l1 round~l1 x00000001 )
( dime~l1 shape~l1 round~l1 x00000001 )
( nickel~l1 shape~l1 round~l1 x00000001 )
( quarter~l1 shape~l1 round~l1 x00000001 )
( planet~l1 shape~l1 spherical~l1 x00000001 )
( star~l1 shape~l1 spherical~l1 x00000001 )
( moon~l1 shape~l1 spherical~l1 x00000001 )
( sun~l1 shape~l1 spherical~l1 x00000001 )
( Earth~l1 shape~l1 spherical~l1 x00000001 )
( blueberry~l1 shape~l1 spherical~l1 x00000001 )
( berry~l1 shape~l1 spherical~l1 x00000001 )
( doughnut~l1 shape~l1 spherical~l1 x00000001 )
( pebble~l1 shape~l1 spherical~l1 x00000001 )
( rock~l1 shape~l1 spherical~l1 x00000001 )
( stone~l1 shape~l1 spherical~l1 x00000001 )
( elderberry~l1 shape~l1 spherical~l1 x00000001 )
( gooseberry~l1 shape~l1 spherical~l1 x00000001 )
( huckleberry~l1 shape~l1 spherical~l1 x00000001 )
( raspberry~l1 shape~l1 spherical~l1 x00000001 )
( blackberry~l1 shape~l1 spherical~l1 x00000001 )
( grape~l1 shape~l1 spherical~l1 x00000001 )
( cherry~l1 shape~l1 spherical~l1 x00000001 )
( strawberry~l1 shape~l1 spherical~l1 x00000001 )
( apricot~l1 shape~l1 spherical~l1 x00000001 )
( lychee~l1 shape~l1 spherical~l1 x00000001 )
( plum~l1 shape~l1 spherical~l1 x00000001 )
( clementine~l1 shape~l1 spherical~l1 x00000001 )
( lemon~l1 shape~l1 spherical~l1 x00000001 )
( tangerine~l1 shape~l1 spherical~l1 x00000001 )
( lime~l1 shape~l1 spherical~l1 x00000001 )
( orange~l1 shape~l1 spherical~l1 x00000001 )
( tomato~l1 shape~l1 spherical~l1 x00000001 )
( satsuma~l1 shape~l1 spherical~l1 x00000001 )
( kiwi_fruit~l1 shape~l1 spherical~l1 x00000001 )
( kiwi~l1 shape~l1 spherical~l1 x00000001 )
( apple~l1 shape~l1 spherical~l1 x00000001 )
( peach~l1 shape~l1 spherical~l1 x00000001 )
( pear~l1 shape~l1 spherical~l1 x00000001 )
( mango~l1 shape~l1 spherical~l1 x00000001 )
( pomegranate~l1 shape~l1 spherical~l1 x00000001 )
( coconut~l1 shape~l1 spherical~l1 x00000001 )
( melon~l1 shape~l1 spherical~l1 x00000001 )
( pineapple~l1 shape~l1 spherical~l1 x00000001 )
( cantaloupe~l1 shape~l1 spherical~l1 x00000001 )
( honeydew_melon~l1 shape~l1 spherical~l1 x00000001 )
( watermelon~l1 shape~l1 spherical~l1 x00000001 )
( ball~l1 shape~l1 spherical~l1 x00000001 )
( beachball~l1 shape~l1 spherical~l1 x00000001 )
( baseball~l1 shape~l1 spherical~l1 x00000001 )
( marble~l1 shape~l1 spherical~l1 x00000001 )
( globe~l1 shape~l1 spherical~l1 x00000001 )
( bubble~l1 shape~l1 spherical~l1 x00000001 )
( eraser~l1 shape~l1 cylindrical~l1 x00000001 )
( pencil~l1 shape~l1 cylindrical~l1 x00000001 )
( pipe~l1 shape~l1 cylindrical~l1 x00000001 )
( bottle~l1 shape~l1 cylindrical~l1 x00000001 )
( arm~l1 shape~l1 cylindrical~l1 x00000001 )
( leg~l1 shape~l1 cylindrical~l1 x00000001 )
( finger~l1 shape~l1 cylindrical~l1 x00000001 )
( toe~l1 shape~l1 cylindrical~l1 x00000001 )
( glass~l1 shape~l1 cylindrical~l1 x00000001 )
( pen~l1 shape~l1 cylindrical~l1 x00000001 )
( chaulk~l1 shape~l1 cylindrical~l1 x00000001 )
( nail~l1 shape~l1 cylindrical~l1 x00000001 )
( crayon~l1 shape~l1 cylindrical~l1 x00000001 )
( toilet_paper~l1 shape~l1 cylindrical~l1 x00000001 )
( cork~l1 shape~l1 cylindrical~l1 x00000001 )
( telescope~l1 shape~l1 cylindrical~l1 x00000001 )
( wine_bottle~l1 shape~l1 cylindrical~l1 x00000001 )
( lamp~l1 shape~l1 cylindrical~l1 x00000001 )
( straw~l1 shape~l1 cylindrical~l1 x00000001 )
( human~l1 shape~l1 cylindrical~l1 x00000001 )
( person~l1 shape~l1 cylindrical~l1 x00000001 )
( can~l1 shape~l1 cylindrical~l1 x00000001 )
( trash_can~l1 shape~l1 cylindrical~l1 x00000001 )
( garbage_can~l1 shape~l1 cylindrical~l1 x00000001 )
( soda_can~l1 shape~l1 cylindrical~l1 x00000001 )
( pot~l1 shape~l1 cylindrical~l1 x00000001 )
( saucepan~l1 shape~l1 cylindrical~l1 x00000001 )
( pan~l1 shape~l1 cylindrical~l1 x00000001 )
( vial~l1 shape~l1 cylindrical~l1 x00000001 )
( toothbrush~l1 shape~l1 cylindrical~l1 x00000001 )
( egg~l1 shape~l1 ovoid~l1 x00000001 )
( head~l1 shape~l1 ovoid~l1 x00000001 )
( eggplant~l1 shape~l1 ovoid~l1 x00000001 )
( pineapple~l1 shape~l1 ovoid~l1 x00000001 )
( avocado~l1 shape~l1 ovoid~l1 x00000001 )
( pyramid~l1 shape~l1 pyramidal~l1 x00000001 )
( prism~l1 shape~l1 prismatic~l1 x00000001 )
( tent~l1 shape~l1 prismatic~l1 x00000001 )
( snowflake~l1 shape~l1 hexagonal~l1 x00000001 )
( honeycomb~l1 shape~l1 hexagonal~l1 x00000001 )
( crystal~l1 shape~l1 hexagonal~l1 x00000001 )
( bowl~l1 shape~l1 hemi-sphere~l1 x00000001 )
( teacup~l1 shape~l1 hemi-sphere~l1 x00000001 )
( cup~l1 shape~l1 hemi-sphere~l1 x00000001 )
( bowl~l1 shape~l1 hemispheric~l1 x00000001 )
( teacup~l1 shape~l1 hemispheric~l1 x00000001 )
( cup~l1 shape~l1 hemispheric~l1 x00000001 )
( bed~l1 shape~l1 cuboid~l1 x00000001 )
( refrigerator~l1 shape~l1 cuboid~l1 x00000001 )
( TV~l1 shape~l1 cuboid~l1 x00000001 )
( television~l1 shape~l1 cuboid~l1 x00000001 )
( DVD_player~l1 shape~l1 cuboid~l1 x00000001 )
( laptop~l1 shape~l1 cuboid~l1 x00000001 )
( modem~l1 shape~l1 cuboid~l1 x00000001 )
( Tivo~l1 shape~l1 cuboid~l1 x00000001 )
( box~l1 shape~l1 cuboid~l1 x00000001 )
( carton~l1 shape~l1 cuboid~l1 x00000001 )
( ottoman~l1 shape~l1 cuboid~l1 x00000001 )
( lumber~l1 shape~l1 cuboid~l1 x00000001 )
( speaker~l1 shape~l1 cuboid~l1 x00000001 )
( stereo~l1 shape~l1 cuboid~l1 x00000001 )
( record_player~l1 shape~l1 cuboid~l1 x00000001 )
( power_strip~l1 shape~l1 cuboid~l1 x00000001 )
( cushion~l1 shape~l1 cuboid~l1 x00000001 )
( brick~l1 shape~l1 cuboid~l1 x00000001 )
( step~l1 shape~l1 cuboid~l1 x00000001 )
( bookcase~l1 shape~l1 cuboid~l1 x00000001 )
( eraser~l1 shape~l1 cuboid~l1 x00000001 )
( door~l1 shape~l1 cuboid~l1 x00000001 )
( window~l1 shape~l1 cuboid~l1 x00000001 )
( chair~l1 shape~l1 cuboid~l1 x00000001 )
( sofa~l1 shape~l1 cuboid~l1 x00000001 )
( couch~l1 shape~l1 cuboid~l1 x00000001 )
( computer~l1 shape~l1 cuboid~l1 x00000001 )
( iPhone~l1 shape~l1 cuboid~l1 x00000001 )
( tablet~l1 shape~l1 cuboid~l1 x00000001 )
( iPad~l1 shape~l1 cuboid~l1 x00000001 )
( smartphone~l1 shape~l1 cuboid~l1 x00000001 )
( cellphone~l1 shape~l1 cuboid~l1 x00000001 )
( monitor~l1 shape~l1 cuboid~l1 x00000001 )
( keyboard~l1 shape~l1 cuboid~l1 x00000001 )
( aquarium~l1 shape~l1 cuboid~l1 x00000001 )
( car~l1 shape~l1 cuboid~l1 x00000001 )
( automobile~l1 shape~l1 cuboid~l1 x00000001 )
( train~l1 shape~l1 cuboid~l1 x00000001 )
( taxi~l1 shape~l1 cuboid~l1 x00000001 )
( truck~l1 shape~l1 cuboid~l1 x00000001 )
( van~l1 shape~l1 cuboid~l1 x00000001 )
( cabinet~l1 shape~l1 cuboid~l1 x00000001 )
( desk~l1 shape~l1 cuboid~l1 x00000001 )
( mattress~l1 shape~l1 cuboid~l1 x00000001 )
( air_conditioner~l1 shape~l1 cuboid~l1 x00000001 )
( butcher~l1 sell~l1 meat~l1 x00000001 )
( jeweler~l1 sell~l1 jewelry~l1 x00000001 )
( grocer~l1 sell~l1 grocery~l1 x00000001 )
( bartender~l1 sell~l1 alcohol~l1 x00000001 )
( shoemaker~l1 sell~l1 shoe~l1 x00000001 )
( postmaster~l1 sell~l1 stamp~l1 x00000001 )
( baker~l1 sell~l1 pastry~l1 x00000001 )
( barber~l1 sell~l1 hair_cut~l1 x00000001 )
( taxi_driver~l1 sell~l1 ride~l1 x00000001 )
( travel_agent~l1 sell~l1 vacation~l1 x00000001 )
( stock_broker~l1 sell~l1 stock~l1 x00000001 )
( realtor~l1 sell~l1 house~l1 x00000001 )
( optician~l1 sell~l1 glasses~l1 x00000001 )
( insurance_agent~l1 sell~l1 insurance~l1 x00000001 )
( cluck~l1 sound~l1 hen~l1 x00000001 )
( caw~l1 sound~l1 crow~n~l1 x00000001 )
( ribbit~l1 sound~l1 frog~l1 x00000001 )
( bang~l1 sound~l1 gun~l1 x00000001 )
( bang~l1 sound~l1 pistol~l1 x00000001 )
( zap~l1 sound~l1 laser~l1 x00000001 )
( honk~l1 sound~l1 goose~n~l1 x00000001 )
( honk~l1 sound~l1 horn~n~l1 x00000001 )
( bark_bark~l1 sound~l1 dog~n~l1 x00000001 )
( moo~l1 sound~l1 cow~l1 x00000001 )
( baa~l1 sound~l1 sheep~l1 x00000001 )
( vroom_vroom~l1 sound~l1 car~l1 x00000001 )
( tick_tock~l1 sound~l1 clock~l1 x00000001 )
( meow~l1 sound~l1 cat~l1 x00000001 )
( gibber~l1 sound~l1 ape~n~l1 x00000001 )
( woof~l1 sound~l1 dog~n~l1 x00000001 )
( bray~l1 sound~l1 donkey~l1 x00000001 )
( growl~l1 sound~l1 bear~l1 x00000001 )
( buzz~l1 sound~l1 bee~l1 x00000001 )
( chirp~l1 sound~l1 bird~l1 x00000001 )
( cheep~l1 sound~l1 chicken~l1 x00000001 )
( crow~l1 sound~l1 cock~n~l1 x00000001 )
( trumpet~l1 sound~l1 elephant~l1 x00000001 )
( buzz~l1 sound~l1 fly~n~l1 x00000001 )
( whinny~l1 sound~l1 horse~l1 x00000001 )
( laugh~l1 sound~l1 hyena~l1 x00000001 )
( mew~l1 sound~l1 kitten~l1 x00000001 )
( roar~l1 sound~l1 lion~l1 x00000001 )
( squeak~l1 sound~l1 mouse~l1 x00000001 )
( hoot~l1 sound~l1 owl~l1 x00000001 )
( coo~l1 sound~l1 pigeon~l1 x00000001 )
( oink~l1 sound~l1 pig~n~l1 x00000001 )
( hiss~l1 sound~l1 snake~l1 x00000001 )
( hiss~l1 sound~l1 rattlesnake~l1 x00000001 )
( growl~l1 sound~l1 tiger~l1 x00000001 )
( gobble~l1 sound~l1 turkey~l1 x00000001 )
( howl~l1 sound~l1 wolf~l1 x00000001 )
( Africa~l1 reside~l1 lion~l1 x00000001 )
( Africa~l1 reside~l1 tiger~l1 x00000001 )
( Africa~l1 reside~l1 gorilla~l1 x00000001 )
( Africa~l1 reside~l1 ape~l1 x00000001 )
( Africa~l1 reside~l1 monkey~l1 x00000001 )
( Africa~l1 reside~l1 elephant~l1 x00000001 )
( Africa~l1 reside~l1 zebra~l1 x00000001 )
( Africa~l1 reside~l1 leopard~l1 x00000001 )
( Africa~l1 reside~l1 hyena~l1 x00000001 )
( Africa~l1 reside~l1 hippopotamus~l1 x00000001 )
( house~l1 reside~l1 human~l1 x00000001 )
( pond~l1 reside~l1 frog~l1 x00000001 )
( ocean~l1 reside~l1 fish~n~l1 x00000001 )
( ocean~l1 reside~l1 coral~l1 x00000001 )
( ocean~l1 reside~l1 shark~l1 x00000001 )
( ocean~l1 reside~l1 jellyfish~l1 x00000001 )
( ocean~l1 reside~l1 starfish~l1 x00000001 )
( ocean~l1 reside~l1 oyster~l1 x00000001 )
( ocean~l1 reside~l1 clam~l1 x00000001 )
( ocean~l1 reside~l1 mussel~l1 x00000001 )
( ocean~l1 reside~l1 lobster~l1 x00000001 )
( henhouse~l1 reside~l1 hen~l1 x00000001 )
( henhouse~l1 reside~l1 chicken~l1 x00000001 )
( henhouse~l1 reside~l1 rooster~l1 x00000001 )
( nest~l1 reside~l1 bird~l1 x00000001 )
( hive~l1 reside~l1 bee~l1 x00000001 )
( forest~l1 reside~l1 bear~l1 x00000001 )
( barn~l1 reside~l1 owl~l1 x00000001 )
( field~l1 reside~l1 mouse~l1 x00000001 )
( forest~l1 reside~l1 wolf~l1 x00000001 )
( woods~l1 reside~l1 turkey~l1 x00000001 )
( sty~l1 reside~l1 pig~l1 x00000001 )
( stable~l1 reside~l1 horse~l1 x00000001 )
( stable~l1 reside~l1 donkey~l1 x00000001 )
( grass~l1 reside~l1 snake~l1 x00000001 )
( grass~l1 reside~l1 rattlesnake~l1 x00000001 )
( walls~l1 reside~l1 rat~l1 x00000001 )
( pond~l1 reside~l1 beaver~l1 x00000001 )
( Exeter,_England~l1 exemplar~l1 University_of_Exeter~l1 x00000001 )
( Honolulu,_Hawai'i~l1 exemplar~l1 University_of_Hawaii~l1 x00000001 )
( Amherst,_Massachusetts~l1 exemplar~l1 Amherst_College~l1 x00000001 )
( Brown~l1 member Brown_University~l1 x00000001 )
( Providence,_Rhode_Island~l1 exemplar~l1 Brown_University~l1 x00000001 )
( CMU~l1 member Carnegie_Mellon_University~l1 x00000001 )
( Pittsburgh,_Pennsylvania~l1 exemplar~l1 Carnegie_Mellon_University~l1 x00000001 )
( Columbia~l1 member Columbia_University~l1 x00000001 )
( New_York_City,_New_York~l1 exemplar~l1 Columbia_University~l1 x00000001 )
( Cornell~l1 member Cornell_University~l1 x00000001 )
( Ithica,_New_York~l1 exemplar~l1 Cornell_University~l1 x00000001 )
( Dartmouth~l1 member Dartmouth_College~l1 x00000001 )
( Hanover,_New_Hampshire~l1 exemplar~l1 Dartmouth_College~l1 x00000001 )
( Washington,_D.C.~l1 exemplar~l1 Georgetown_University~l1 x00000001 )
( Harvard~l1 member Harvard_University~l1 x00000001 )
( Boston,_Massachusetts~l1 exemplar~l1 Harvard_University~l1 x00000001 )
( MIT~l1 member Massachusetts_Institute_of_Technology~l1 x00000001 )
( M.I.T.~l1 member Massachusetts_Institute_of_Technology~l1 x00000001 )
( Cambridge,_Massachusetts~l1 exemplar~l1 Massachusetts_Institute_of_Technology~l1 x00000001 )
( NYU~l1 member New_York_University~l1 x00000001 )
( New_York_City,_New_York~l1 exemplar~l1 New_York_University~l1 x00000001 )
( Princeton~l1 member Princeton_University~l1 x00000001 )
( Princeton,_New_Jersey~l1 exemplar~l1 Princeton_University~l1 x00000001 )
( New_Brunswick,_New_York~l1 exemplar~l1 Rutgers_University~l1 x00000001 )
( Penn~l1 member University_of_Pennsylvania~l1 x00000001 )
( Philadelphia,_Pennsylvania~l1 exemplar~l1 University_of_Pennsylvania~l1 x00000001 )
( Williamstown,_Massachusetts~l1 exemplar~l1 Williams_College~l1 x00000001 )
( Yale~l1 member Yale_University~l1 x00000001 )
( New_Haven,_Connecticut~l1 exemplar~l1 Yale_University~l1 x00000001 )
( CalTech~l1 member California_Institute_of_Technology~l1 x00000001 )
( Pasadena,_California~l1 exemplar~l1 California_Institute_of_Technology~l1 x00000001 )
( Palo_Alto,_California~l1 exemplar~l1 Stanford_University~l1 x00000001 )
( UCBerkeley~l1 member University_of_California,_Berkeley~l1 x00000001 )
( Berkeley~l1 member University_of_California,_Berkeley~l1 x00000001 )
( Berkeley,_California~l1 exemplar~l1 University_of_California,_Berkeley~l1 x00000001 )
( UCLA~l1 member University_of_California,_Los_Angelese~l1 x00000001 )
( Los_Angeles,_California~l1 exemplar~l1 University_of_California,_Los_Angelese~l1 x00000001 )
( USC~l1 member University_of_Southern_California~l1 x00000001 )
( Los_Angeles~l1 exemplar~l1 University_of_Southern_California~l1 x00000001 )
( Evanston,_Illinois~l1 exemplar~l1 Northwestern_University~l1 x00000001 )
( Chicago,_Illinois~l1 exemplar~l1 University_of_Chicago~l1 x00000001 )
( UMICH~l1 member University_of_Michigan~l1 x00000001 )
( Ann_Arbor,_Michigan~l1 exemplar~l1 University_of_Michigan~l1 x00000001 )
( South_Bend,_Indiana~l1 exemplar~l1 University_of_Notre_Dame~l1 x00000001 )
( Williamsburg,_Virginia~l1 exemplar~l1 College_of_William_and_Mary~l1 x00000001 )
( Durham,_North_Carolina~l1 exemplar~l1 Duke_University~l1 x00000001 )
( RPI~l1 member Rensselaer_Polytechnic_Institute~l1 x00000001 )
( Honolulu,_Hawai'i~l1 exemplar~l1 Honolulu_Advertiser~l1 x00000001 )
( Honolulu,_Hawai'i~l1 exemplar~l1 Star_Bulletin~l1 x00000001 )
( Chicago,_Illinois~l1 exemplar~l1 Chicago_Tribune~l1 x00000001 )
( Chicago,_Illinois~l1 exemplar~l1 Chicago_Sun-Times~l1 x00000001 )
( Houston,_Texas~l1 exemplar~l1 Houston_Chronicle~l1 x00000001 )
( San_Francisco,_California~l1 exemplar~l1 San_Francisco_Chronicle~l1 x00000001 )
( Toronto,_Canada~l1 exemplar~l1 The_Toronto_Star~l1 x00000001 )
( Boston~l1 exemplar~l1 Boston_Globe~l1 x00000001 )
( Boston~l1 exemplar~l1 Boston_Herald~l1 x00000001 )
( Miami,_Florida~l1 exemplar~l1 Miami_Herald~l1 x00000001 )
( New_York_City,_New_York~l1 exemplar~l1 New_York_Daily_News~l1 x00000001 )
( New_York_City,_New_York~l1 exemplar~l1 New_York_Times~l1 x00000001 )
( Washington,_D.C.~l1 exemplar~l1 Washington_Post~l1 x00000001 )
( Atlanta,_Georgia~l1 exemplar~l1 Atlanta_Journal-Constitution~l1 x00000001 )
( Los_Angeles,_California~l1 exemplar~l1 Los_Angeles_Times~l1 x00000001 )
( Philadelphia,_Pennsylvania~l1 exemplar~l1 Phildelphia_Inquirer~l1 x00000001 )
( Detroit,_Michigan~l1 exemplar~l1 Detroit_Free_Press~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Continental~l1 x00000001 )
( UAL~l1 member United_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 United_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Hawaiian_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Delta~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Go_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Southwest_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Alaska_Air~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 Northwest_Airlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 American_AIrlines~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 US_AIR~l1 x00000001 )
( United_States_of_America~l1 exemplar~l1 JetBlue~l1 x00000001 )
( New_Zealand~l1 exemplar~l1 Air_New_Zealand~l1 x00000001 )
( Australia~l1 exemplar~l1 Quantas~l1 x00000001 )
( Switzerland~l1 exemplar~l1 Swiss_Air~l1 x00000001 )
( France~l1 exemplar~l1 Air_France~l1 x00000001 )
( JAL~l1 member Japan_Airlines~l1 x00000001 )
( Japan~l1 exemplar~l1 Japan_Airlines~l1 x00000001 )
( Virgin_Atlantic~l1 member Virgin_Airlines~l1 x00000001 )
( United_Kingdom~l1 exemplar~l1 Virgin_Airlines~l1 x00000001 )
( United_Kingdom~l1 exemplar~l1 British_Airways~l1 x00000001 )
( Germany~l1 exemplar~l1 Lufthansa~l1 x00000001 )
( Netherlands~l1 exemplar~l1 KLM~l1 x00000001 )
( People_'s_Republic_of_China~l1 exemplar~l1 China_Airlines~l1 x00000001 )
( Republic_of_Korea~l1 exemplar~l1 Korean_Air~l1 x00000001 )
( press~l1 exemplar~l1 Associated_Press~l1 x00000001 )
( EDS~l1 member Electronic_Data_Systems~l1 x00000001 )
( Ford~l1 member Ford_Motor_Company~l1 x00000001 )
( automobile~l1 exemplar~l1 Ford_Motor_Company~l1 x00000001 )
( GM~l1 member General_Motors~l1 x00000001 )
( automobile~l1 exemplar~l1 General_Motors~l1 x00000001 )
( automobile~l1 exemplar~l1 Toyota~l1 x00000001 )
( Nissan~l1 member Nissan_Motors~l1 x00000001 )
( automobile~l1 exemplar~l1 Nissan_Motors~l1 x00000001 )
( automobile~l1 exemplar~l1 Mazda~l1 x00000001 )
( automobile~l1 exemplar~l1 Kia~l1 x00000001 )
( automobile~l1 exemplar~l1 Hyundai~l1 x00000001 )
( Honda~l1 member Honda_Motors~l1 x00000001 )
( automobile~l1 exemplar~l1 Honda_Motors~l1 x00000001 )
( drugs~l1 exemplar~l1 Merck~l1 x00000001 )
( drugs~l1 exemplar~l1 Pfizer~l1 x00000001 )
( drugs~l1 exemplar~l1 Bayer~l1 x00000001 )
( cosmetics~l1 exemplar~l1 Lush~l1 x00000001 )
( cosmetic~l1 exemplar~l1 Mac_Cosmetics~l1 x00000001 )
( cosmetic~l1 exemplar~l1 Sephora~l1 x00000001 )
( cosmetic~l1 exemplar~l1 Origins~l1 x00000001 )
( cosmetic~l1 exemplar~l1 The_Body_Shop~l1 x00000001 )
( book~l1 exemplar~l1 Barnes_and_Noble~l1 x00000001 )
( books~l1 exemplar~l1 Borders~l1 x00000001 )
( GNC~l1 member General_Nutrition_Center~l1 x00000001 )
( vitamin~l1 exemplar~l1 General_Nutrition_Center~l1 x00000001 )
( Amazon~l1 member Amazon.com~l1 x00000001 )
( book~l1 exemplar~l1 Amazon.com~l1 x00000001 )
( lingerie~l1 exemplar~l1 Victoria_'s_Secret~l1 x00000001 )
( tobacco~l1 exemplar~l1 Phillip_Morris~l1 x00000001 )
( Dell~l1 member Dell_Computer~l1 x00000001 )
( computer~l1 exemplar~l1 Dell_Computer~l1 x00000001 )
( HP~l1 member Hewlett-Packard~l1 x00000001 )
( computer~l1 exemplar~l1 Hewlett-Packard~l1 x00000001 )
( computer~l1 exemplar~l1 Microsoft~l1 x00000001 )
( IBM~l1 member International_Business_Machines~l1 x00000001 )
( computer~l1 exemplar~l1 International_Business_Machines~l1 x00000001 )
( computer~l1 exemplar~l1 Apple_Computer~l1 x00000001 )
( computer~l1 exemplar~l1 Apple~l1 x00000001 )
( computer~l1 exemplar~l1 SAP_Labs~l1 x00000001 )
( computer~l1 exemplar~l1 SAP~l1 x00000001 )
( computer~l1 exemplar~l1 Intel~l1 x00000001 )
( computer~l1 exemplar~l1 Oracle~l1 x00000001 )
( aircraft~l1 exemplar~l1 Lockheed_Martin~l1 x00000001 )
( aircraft~l1 exemplar~l1 Boeing~l1 x00000001 )
( communication~l1 exemplar~l1 Motorola~l1 x00000001 )
( communication~l1 exemplar~l1 Lucent_Technologies~l1 x00000001 )
( communication~l1 exemplar~l1 Cisco_Systems~l1 x00000001 )
( AOL~l1 member AOL_Time_Warner~l1 x00000001 )
( Time_Warner~l1 member AOL_Time_Warner~l1 x00000001 )
( Internet~l1 exemplar~l1 AOL_Time_Warner~l1 x00000001 )
( Internet~l1 exemplar~l1 Google~l1 x00000001 )
( Internet~l1 exemplar~l1 Yahoo~l1 x00000001 )
( USPS~l1 member United_States_Postal_Service~l1 x00000001 )
( mail~l1 exemplar~l1 United_States_Postal_Service~l1 x00000001 )
( UPS~l1 member United_Parcel_Service~l1 x00000001 )
( mail~l1 exemplar~l1 United_Parcel_Service~l1 x00000001 )
( FEDEX~l1 member Federal_Express~l1 x00000001 )
( mail~l1 exemplar~l1 Federal_Express~l1 x00000001 )
( grocery~l1 exemplar~l1 Foodland~l1 x00000001 )
( grocery~l1 exemplar~l1 Albertson_'s~l1 x00000001 )
( grocery~l1 exemplar~l1 Albertsons~l1 x00000001 )
( grocery~l1 exemplar~l1 Whole_Foods~l1 x00000001 )
( grocery~l1 exemplar~l1 Kroger~l1 x00000001 )
( grocery~l1 exemplar~l1 Safeway~l1 x00000001 )
( New_York_Life~l1 member New_York_Life_Insurance~l1 x00000001 )
( insurance~l1 exemplar~l1 New_York_Life_Insurance~l1 x00000001 )
( insurance~l1 exemplar~l1 AllState~l1 x00000001 )
( MetLife~l1 member Metropolitan_Life~l1 x00000001 )
( insurance~l1 exemplar~l1 Metropolitan_Life~l1 x00000001 )
( USAA~l1 member United_States_Automobile_Association~l1 x00000001 )
( insurance~l1 exemplar~l1 United_States_Automobile_Association~l1 x00000001 )
( telephone~l1 exemplar~l1 Sprint~l1 x00000001 )
( telephone~l1 exemplar~l1 SBC_Communications~l1 x00000001 )
( telephone~l1 exemplar~l1 Verizon~l1 x00000001 )
( telephone~l1 exemplar~l1 Quest~l1 x00000001 )
( telephone~l1 exemplar~l1 TMobile~l1 x00000001 )
( telephone~l1 exemplar~l1 AT&T~l1 x00000001 )
( telephone~l1 exemplar~l1 at&t~l1 x00000001 )
( travel~l1 exemplar~l1 Expedia~l1 x00000001 )
( travel~l1 exemplar~l1 Orbitz~l1 x00000001 )
( travel~l1 exemplar~l1 Priceline~l1 x00000001 )
( videogame~l1 exemplar~l1 Sony~l1 x00000001 )
( videogame~l1 exemplar~l1 Nintendo~l1 x00000001 )
( videogame~l1 exemplar~l1 Avatar_Reality~l1 x00000001 )
( Sears~l1 member Sears_Roebuck~l1 x00000001 )
( department_store~l1 exemplar~l1 Sears_Roebuck~l1 x00000001 )
( department_store~l1 exemplar~l1 KMart~l1 x00000001 )
( department_store~l1 exemplar~l1 Wal-Mart~l1 x00000001 )
( department_store~l1 exemplar~l1 Target~l1 x00000001 )
( Nordstrom_Rack~l1 member Nordstrom~l1 x00000001 )
( department_store~l1 exemplar~l1 Nordstrom~l1 x00000001 )
( department_store~l1 exemplar~l1 Costco~l1 x00000001 )
( department_store~l1 exemplar~l1 Bloomingdale_'s~l1 x00000001 )
( electronic~l1 exemplar~l1 Radio_Shack~l1 x00000001 )
( eyeglass~l1 exemplar~l1 LensCrafters~l1 x00000001 )
( tech_gift~l1 exemplar~l1 Brookstone_'s~l1 x00000001 )
( tech_gift~l1 exemplar~l1 Sharper_Image~l1 x00000001 )
( J.C._Penney~l1 member JCPenney~l1 x00000001 )
( JC_Penny~l1 member JCPenney~l1 x00000001 )
( JC_Penney~l1 member JCPenney~l1 x00000001 )
( JCPenny~l1 member JCPenney~l1 x00000001 )
( department_store~l1 exemplar~l1 JCPenney~l1 x00000001 )
( department_store~l1 exemplar~l1 Macy~l1 x00000001 )
( department_store~l1 exemplar~l1 Shirokia~l1 x00000001 )
( credit_card~l1 exemplar~l1 American_Express~l1 x00000001 )
( credit_card~l1 exemplar~l1 Mastercard~l1 x00000001 )
( credit_card~l1 exemplar~l1 Visa~l1 x00000001 )
( PG&E~l1 member Pacific_Gas_and_Electric~l1 x00000001 )
( energy~l1 exemplar~l1 Pacific_Gas_and_Electric~l1 x00000001 )
( energy~l1 exemplar~l1 Exxon_Mobil~l1 x00000001 )
( energy~l1 exemplar~l1 Enron~l1 x00000001 )
( energy~l1 exemplar~l1 Conoco~l1 x00000001 )
( HECO~l1 member Hawaiian_Electric~l1 x00000001 )
( energy~l1 exemplar~l1 Hawaiian_Electric~l1 x00000001 )
( Coke~l1 member Coca-Cola~l1 x00000001 )
( soft_drink~l1 exemplar~l1 Coca-Cola~l1 x00000001 )
( Pepsi~l1 member Pepsi-Cola~l1 x00000001 )
( PepsiCo~l1 member Pepsi-Cola~l1 x00000001 )
( soft_drink~l1 exemplar~l1 Pepsi-Cola~l1 x00000001 )
( bank~l1 exemplar~l1 Wachovia~l1 x00000001 )
( BOA~l1 member Bank_of_America~l1 x00000001 )
( bank~l1 exemplar~l1 Bank_of_America~l1 x00000001 )
( bank~l1 exemplar~l1 Merrill_Lynch~l1 x00000001 )
( bank~l1 exemplar~l1 JPMorgan_Chase~l1 x00000001 )
( bank~l1 exemplar~l1 State_Street_Corporation~l1 x00000001 )
( bank~l1 exemplar~l1 Capital_One~l1 x00000001 )
( bank~l1 exemplar~l1 SunTrust~l1 x00000001 )
( bank~l1 exemplar~l1 FleetBoston~l1 x00000001 )
( bank~l1 exemplar~l1 Wells_Fargo~l1 x00000001 )
( bank~l1 exemplar~l1 HSBC~l1 x00000001 )
( bank~l1 exemplar~l1 Washington_Mutual~l1 x00000001 )
( bank~l1 exemplar~l1 Central_Pacific_Bank~l1 x00000001 )
( bank~l1 exemplar~l1 U.S._Bancorp~l1 x00000001 )
( bank~l1 exemplar~l1 Comerica~l1 x00000001 )
( bank~l1 exemplar~l1 Countrywide~l1 x00000001 )
( bank~l1 exemplar~l1 American_Savings~l1 x00000001 )
( BOH~l1 member Bank_of_Hawaii~l1 x00000001 )
( bank~l1 exemplar~l1 Bank_of_Hawaii~l1 x00000001 )
( Citi~l1 member Citibank~l1 x00000001 )
( Citigroup~l1 member Citibank~l1 x00000001 )
( bank~l1 exemplar~l1 Citibank~l1 x00000001 )
( videogame~l1 exemplar~l1 Electronic_Arts~l1 x00000001 )
( computer~l1 exemplar~l1 Kore~l1 x00000001 )
( amusement~l1 exemplar~l1 Disney~l1 x00000001 )
( grocery~l1 exemplar~l1 Sears~l1 x00000001 )
( computer~l1 exemplar~l1 Kony~l1 x00000001 )
( computer~l1 exemplar~l1 Kore_Inc~l1 x00000001 )
( computer~l1 exemplar~l1 EMC~l1 x00000001 )
( oil~l1 exemplar~l1 IOCL~l1 x00000001 )
( oil~l1 exemplar~l1 Indian_Oil~l1 x00000001 )
( lamp~l1 uses~l1 ~use_power x00000001 )
( flashlight~l1 uses~l1 ~use_power x00000001 )
( lantern~l1 uses~l1 ~use_power x00000001 )
( penlight~l1 uses~l1 ~use_power x00000001 )
( light_bulb~l1 uses~l1 ~use_power x00000001 )
( light~l1 uses~l1 ~use_power x00000001 )
( fluorescent_light~l1 uses~l1 ~use_power x00000001 )
( pole_lamp~l1 uses~l1 ~use_power x00000001 )
( table_lamp~l1 uses~l1 ~use_power x00000001 )
( desk_lamp~l1 uses~l1 ~use_power x00000001 )
( ~appliances uses~l1 ~use_power x00000001 )
( ~vehicles_air uses~l1 ~use_flight x00000001 )
( bird~1~l1 uses~l1 ~use_flight x00000001 )
( ~birds uses~l1 ~use_flight x00000001 )
( kite~l1 uses~l1 ~use_flight x00000001 )
( balloon~l1 uses~l1 ~use_flight x00000001 )
( ~mammals uses~l1 ~use_swim x00000001 )
( ~beings uses~l1 ~use_swim x00000001 )
( bird~l1 uses~l1 ~use_swim x00000001 )
( bird~1~l1 uses~l1 ~use_swim x00000001 )
( ~birds uses~l1 ~use_swim x00000001 )
( ~beings uses~l1 ~use_fooddrink x00000001 )
( ~beings uses~l1 ~use_movement x00000001 )
( ~beings uses~l1 ~use_intentionverbs x00000001 )
( lamp~l1 uses~l1 ~emitlight x00000001 )
( flashlight~l1 uses~l1 ~emitlight x00000001 )
( sun~l1 uses~l1 ~emitlight x00000001 )
( star~l1 uses~l1 ~emitlight x00000001 )
( lantern~l1 uses~l1 ~emitlight x00000001 )
( penlight~l1 uses~l1 ~emitlight x00000001 )
( light_bulb~l1 uses~l1 ~emitlight x00000001 )
( light~l1 uses~l1 ~emitlight x00000001 )
( fluorescent_light~l1 uses~l1 ~emitlight x00000001 )
( pole_lamp~l1 uses~l1 ~emitlight x00000001 )
( table_lamp~l1 uses~l1 ~emitlight x00000001 )
( desk_lamp~l1 uses~l1 ~emitlight x00000001 )
( fan~l1 uses~l1 ~blowing x00000001 )
( wind~l1 uses~l1 ~blowing x00000001 )
( hurricane~l1 uses~l1 ~blowing x00000001 )
( cyclone~l1 uses~l1 ~blowing x00000001 )
( tornado~l1 uses~l1 ~blowing x00000001 )
( witness~l1 uses~l1 testify~l1 x00000001 )
( witness~l1 uses~l1 answer~l1 x00000001 )
( lawyer~l1 uses~l1 ~interrogate x00000001 )
( attorney~l1 uses~l1 ~interrogate x00000001 )
( prosecutor~l1 uses~l1 ~interrogate x00000001 )
( judge~l1 uses~l1 ~interrogate x00000001 )
( cook~l1 uses~l1 ~cooking_verbs x00000001 )
( chef~l1 uses~l1 ~cooking_verbs x00000001 )
( sous-chef~l1 uses~l1 ~cooking_verbs x00000001 )
( ~beings uses~l1 grow~l1 x00000001 )
( being~1~l1 uses~l1 grow~l1 x00000001 )
( nutrient~l1 functionality~l1 ~food x00000001 )
( nourish~l1 use~l1 ~food x00000001 )
( ~food use_to~l1 nourish_living_beings~l1 x00000001 )
( living_beings~l1 object~l1 ~food x00000001 )
( help_avoid_starvation~l1 why~l1 ~food x00000001 )
( help_avoid_starvation~l1 ~tool verify~l1 x00000001 )
( nutrient~l1 functionality~l1 ~beverage x00000001 )
( nourish~l1 use~l1 ~beverage x00000001 )
( ~beverage use_to~l1 nourish_living_beings~l1 x00000001 )
( living_beings~l1 object~l1 ~beverage x00000001 )
( help_avoid_dehydration~l1 why~l1 ~beverage x00000001 )
( help_avoid_dehydration~l1 ~tool verify~l1 x00000001 )
( nutrient~l1 functionality~l1 ~herbspice x00000001 )
( improve~l1 use~l1 ~herbspice x00000001 )
( ~herbspice use_to~l1 improve_taste~l1 x00000001 )
( taste~l1 object~l1 ~herbspice x00000001 )
( spice_food~l1 why~l1 ~herbspice x00000001 )
( spice_food~l1 ~tool verify~l1 x00000001 )
( natural_object~l1 functionality~l1 ~scenery x00000001 )
( provide~l1 use~l1 ~scenery x00000001 )
( ~scenery use_to~l1 provide_landscape~l1 x00000001 )
( landscape~l1 object~l1 ~scenery x00000001 )
( be_appreciated_as_scenery~l1 why~l1 ~scenery x00000001 )
( be_appreciated_as_scenery~l1 ~tool verify~l1 x00000001 )
( play~l1 functionality~l1 ~toy x00000001 )
( provide~l1 use~l1 ~toy x00000001 )
( ~toy use_to~l1 provide_play~l1 x00000001 )
( play~l1 object~l1 ~toy x00000001 )
( child~l1 agent~l1 ~toy x00000001 )
( have_fun~l1 why~l1 ~toy x00000001 )
( have_fun~l1 ~tool verify~l1 x00000001 )
( natural_force~l1 functionality~l1 ~forces x00000001 )
( provide~l1 use~l1 ~forces x00000001 )
( ~forces use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 ~forces x00000001 )
( source_power~l1 why~l1 ~forces x00000001 )
( source_power~l1 ~tool verify~l1 x00000001 )
( create~l1 functionality~l1 copier~l1 x00000001 )
( make~l1 use~l1 copier~l1 x00000001 )
( copier~l1 use_to~l1 make_copies~l1 x00000001 )
( copies~l1 object~l1 copier~l1 x00000001 )
( copy_text~l1 why~l1 copier~l1 x00000001 )
( copy_text~l1 ~tool verify~l1 x00000001 )
( create~l1 functionality~l1 photocopier~l1 x00000001 )
( make~l1 use~l1 photocopier~l1 x00000001 )
( photocopier~l1 use_to~l1 make_copies~l1 x00000001 )
( copies~l1 object~l1 photocopier~l1 x00000001 )
( copy_text~l1 why~l1 photocopier~l1 x00000001 )
( create~l1 functionality~l1 replicator~l1 x00000001 )
( make~l1 use~l1 replicator~l1 x00000001 )
( replicator~l1 use_to~l1 make_objects~l1 x00000001 )
( objects~l1 object~l1 replicator~l1 x00000001 )
( create_an_object~l1 why~l1 replicator~l1 x00000001 )
( create_an_object~l1 ~tool verify~l1 x00000001 )
( decorate~l1 functionality~l1 paint~n~l1 x00000001 )
( color~l1 use~l1 paint~n~l1 x00000001 )
( paint~n~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 paint~n~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 paint~n~l1 x00000001 )
( make_a_surface_pretty~l1 ~tool verify~l1 x00000001 )
( decorate~l1 functionality~l1 dye~n~l1 x00000001 )
( color~l1 use~l1 dye~n~l1 x00000001 )
( dye~n~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 dye~n~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 dye~n~l1 x00000001 )
( decorate~l1 functionality~l1 crayon~n~l1 x00000001 )
( color~l1 use~l1 crayon~n~l1 x00000001 )
( crayon~n~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 crayon~n~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 crayon~n~l1 x00000001 )
( decorate~l1 functionality~l1 varnish~n~l1 x00000001 )
( color~l1 use~l1 varnish~n~l1 x00000001 )
( varnish~n~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 varnish~n~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 varnish~n~l1 x00000001 )
( decorate~l1 functionality~l1 plaster~l1 x00000001 )
( color~l1 use~l1 plaster~l1 x00000001 )
( plaster~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 plaster~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 plaster~l1 x00000001 )
( decorate~l1 functionality~l1 wallpaper~l1 x00000001 )
( color~l1 use~l1 wallpaper~l1 x00000001 )
( wallpaper~l1 use_to~l1 color_surfaces~l1 x00000001 )
( surfaces~l1 object~l1 wallpaper~l1 x00000001 )
( make_a_surface_pretty~l1 why~l1 wallpaper~l1 x00000001 )
( decorate~l1 functionality~l1 lipstick~l1 x00000001 )
( paint~l1 use~l1 lipstick~l1 x00000001 )
( lipstick~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 lipstick~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 lipstick~l1 x00000001 )
( make_a_woman_pretty~l1 ~tool verify~l1 x00000001 )
( decorate~l1 functionality~l1 mascara~l1 x00000001 )
( paint~l1 use~l1 mascara~l1 x00000001 )
( mascara~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 mascara~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 mascara~l1 x00000001 )
( decorate~l1 functionality~l1 glitter~l1 x00000001 )
( paint~l1 use~l1 glitter~l1 x00000001 )
( glitter~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 glitter~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 glitter~l1 x00000001 )
( decorate~l1 functionality~l1 gloss~l1 x00000001 )
( paint~l1 use~l1 gloss~l1 x00000001 )
( gloss~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 gloss~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 gloss~l1 x00000001 )
( decorate~l1 functionality~l1 eyeliner~l1 x00000001 )
( paint~l1 use~l1 eyeliner~l1 x00000001 )
( eyeliner~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 eyeliner~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 eyeliner~l1 x00000001 )
( decorate~l1 functionality~l1 eyeshadow~l1 x00000001 )
( paint~l1 use~l1 eyeshadow~l1 x00000001 )
( eyeshadow~l1 use_to~l1 paint_faces~l1 x00000001 )
( faces~l1 object~l1 eyeshadow~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 eyeshadow~l1 x00000001 )
( decorate~l1 functionality~l1 nail_polish~l1 x00000001 )
( paint~l1 use~l1 nail_polish~l1 x00000001 )
( nail_polish~l1 use_to~l1 paint_fingernails~l1 x00000001 )
( fingernails~l1 object~l1 nail_polish~l1 x00000001 )
( make_a_woman_pretty~l1 why~l1 nail_polish~l1 x00000001 )
( decorate~l1 functionality~l1 tinsel~l1 x00000001 )
( decorate~l1 use~l1 tinsel~l1 x00000001 )
( tinsel~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 tinsel~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 tinsel~l1 x00000001 )
( make_a_tree_pretty~l1 ~tool verify~l1 x00000001 )
( decorate~l1 functionality~l1 popcorn_string~l1 x00000001 )
( decorate~l1 use~l1 popcorn_string~l1 x00000001 )
( popcorn_string~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 popcorn_string~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 popcorn_string~l1 x00000001 )
( decorate~l1 functionality~l1 Christmas_tree_light~l1 x00000001 )
( decorate~l1 use~l1 Christmas_tree_light~l1 x00000001 )
( Christmas_tree_light~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 Christmas_tree_light~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 Christmas_tree_light~l1 x00000001 )
( decorate~l1 functionality~l1 Christmas_tree_ball~l1 x00000001 )
( decorate~l1 use~l1 Christmas_tree_ball~l1 x00000001 )
( Christmas_tree_ball~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 Christmas_tree_ball~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 Christmas_tree_ball~l1 x00000001 )
( decorate~l1 functionality~l1 ornament~l1 x00000001 )
( decorate~l1 use~l1 ornament~l1 x00000001 )
( ornament~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 ornament~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 ornament~l1 x00000001 )
( decorate~l1 functionality~l1 decoration~l1 x00000001 )
( decorate~l1 use~l1 decoration~l1 x00000001 )
( decoration~l1 use_to~l1 decorate_Christmas_trees~l1 x00000001 )
( Christmas_trees~l1 object~l1 decoration~l1 x00000001 )
( make_a_tree_pretty~l1 why~l1 decoration~l1 x00000001 )
( decorate~l1 functionality~l1 jewelry~l1 x00000001 )
( decorate~l1 use~l1 jewelry~l1 x00000001 )
( jewelry~l1 use_to~l1 decorate_bodies~l1 x00000001 )
( bodies~l1 object~l1 jewelry~l1 x00000001 )
( decorate_the_body~l1 why~l1 jewelry~l1 x00000001 )
( decorate_the_body~l1 ~tool verify~l1 x00000001 )
( decorate~l1 functionality~l1 ring~l1 x00000001 )
( decorate~l1 use~l1 ring~l1 x00000001 )
( ring~l1 use_to~l1 decorate_bodies~l1 x00000001 )
( bodies~l1 object~l1 ring~l1 x00000001 )
( decorate_the_body~l1 why~l1 ring~l1 x00000001 )
( decorate~l1 functionality~l1 bracelet~l1 x00000001 )
( decorate~l1 use~l1 bracelet~l1 x00000001 )
( bracelet~l1 use_to~l1 decorate_bodies~l1 x00000001 )
( bodies~l1 object~l1 bracelet~l1 x00000001 )
( decorate_the_body~l1 why~l1 bracelet~l1 x00000001 )
( decorate~l1 functionality~l1 earring~l1 x00000001 )
( decorate~l1 use~l1 earring~l1 x00000001 )
( earring~l1 use_to~l1 decorate_bodies~l1 x00000001 )
( bodies~l1 object~l1 earring~l1 x00000001 )
( decorate_the_body~l1 why~l1 earring~l1 x00000001 )
( decorate~l1 functionality~l1 nose_ring~l1 x00000001 )
( decorate~l1 use~l1 nose_ring~l1 x00000001 )
( nose_ring~l1 use_to~l1 decorate_bodies~l1 x00000001 )
( bodies~l1 object~l1 nose_ring~l1 x00000001 )
( decorate_the_body~l1 why~l1 nose_ring~l1 x00000001 )
( contain~l1 functionality~l1 watering_can~l1 x00000001 )
( water~l1 use~l1 watering_can~l1 x00000001 )
( watering_can~l1 use_to~l1 water_plants~l1 x00000001 )
( plants~l1 object~l1 watering_can~l1 x00000001 )
( gardening~l1 activity~l1 watering_can~l1 x00000001 )
( gardener~l1 agent~l1 watering_can~l1 x00000001 )
( garden~l1 where~l1 watering_can~l1 x00000001 )
( avoid_plants_drying_out~l1 why~l1 watering_can~l1 x00000001 )
( avoid_plants_drying_out~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 jug~l1 x00000001 )
( hold~l1 use~l1 jug~l1 x00000001 )
( jug~l1 use_to~l1 hold_liquid~l1 x00000001 )
( liquid~l1 object~l1 jug~l1 x00000001 )
( drinking~l1 activity~l1 jug~l1 x00000001 )
( dining_room~l1 where~l1 jug~l1 x00000001 )
( make_liquid_easier_to_drink~l1 why~l1 jug~l1 x00000001 )
( make_liquid_easier_to_drink~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 keg~l1 x00000001 )
( hold~l1 use~l1 keg~l1 x00000001 )
( keg~l1 use_to~l1 hold_liquid~l1 x00000001 )
( liquid~l1 object~l1 keg~l1 x00000001 )
( drinking~l1 activity~l1 keg~l1 x00000001 )
( dining_room~l1 where~l1 keg~l1 x00000001 )
( make_liquid_easier_to_drink~l1 why~l1 keg~l1 x00000001 )
( contain~l1 functionality~l1 cup~n~l1 x00000001 )
( hold~l1 use~l1 cup~n~l1 x00000001 )
( cup~n~l1 use_to~l1 hold_liquid~l1 x00000001 )
( liquid~l1 object~l1 cup~n~l1 x00000001 )
( drinking~l1 activity~l1 cup~n~l1 x00000001 )
( dining_room~l1 where~l1 cup~n~l1 x00000001 )
( make_liquid_easier_to_drink~l1 why~l1 cup~n~l1 x00000001 )
( contain~l1 functionality~l1 glass~l1 x00000001 )
( hold~l1 use~l1 glass~l1 x00000001 )
( glass~l1 use_to~l1 hold_liquid~l1 x00000001 )
( liquid~l1 object~l1 glass~l1 x00000001 )
( drinking~l1 activity~l1 glass~l1 x00000001 )
( dining_room~l1 where~l1 glass~l1 x00000001 )
( make_liquid_easier_to_drink~l1 why~l1 glass~l1 x00000001 )
( contain~l1 functionality~l1 wineglass~l1 x00000001 )
( hold~l1 use~l1 wineglass~l1 x00000001 )
( wineglass~l1 use_to~l1 hold_liquid~l1 x00000001 )
( liquid~l1 object~l1 wineglass~l1 x00000001 )
( drinking~l1 activity~l1 wineglass~l1 x00000001 )
( dining_room~l1 where~l1 wineglass~l1 x00000001 )
( make_liquid_easier_to_drink~l1 why~l1 wineglass~l1 x00000001 )
( contain~l1 functionality~l1 glue_gun~l1 x00000001 )
( dispense~l1 use~l1 glue_gun~l1 x00000001 )
( glue_gun~l1 use_to~l1 dispense_glue~l1 x00000001 )
( glue~l1 object~l1 glue_gun~l1 x00000001 )
( art~l1 activity~l1 glue_gun~l1 x00000001 )
( artist~l1 agent~l1 glue_gun~l1 x00000001 )
( studio~l1 where~l1 glue_gun~l1 x00000001 )
( paste_things_together~l1 why~l1 glue_gun~l1 x00000001 )
( paste_things_together~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 bin~l1 x00000001 )
( hold~l1 use~l1 bin~l1 x00000001 )
( bin~l1 use_to~l1 hold_trash~l1 x00000001 )
( trash~l1 object~l1 bin~l1 x00000001 )
( disposal~l1 activity~l1 bin~l1 x00000001 )
( get_rid_of_things~l1 why~l1 bin~l1 x00000001 )
( get_rid_of_things~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 waste_basket~l1 x00000001 )
( hold~l1 use~l1 waste_basket~l1 x00000001 )
( waste_basket~l1 use_to~l1 hold_trash~l1 x00000001 )
( trash~l1 object~l1 waste_basket~l1 x00000001 )
( disposal~l1 activity~l1 waste_basket~l1 x00000001 )
( get_rid_of_things~l1 why~l1 waste_basket~l1 x00000001 )
( contain~l1 functionality~l1 wastebasket~l1 x00000001 )
( hold~l1 use~l1 wastebasket~l1 x00000001 )
( wastebasket~l1 use_to~l1 hold_trash~l1 x00000001 )
( trash~l1 object~l1 wastebasket~l1 x00000001 )
( disposal~l1 activity~l1 wastebasket~l1 x00000001 )
( get_rid_of_things~l1 why~l1 wastebasket~l1 x00000001 )
( contain~l1 functionality~l1 garbage_can~l1 x00000001 )
( hold~l1 use~l1 garbage_can~l1 x00000001 )
( garbage_can~l1 use_to~l1 hold_trash~l1 x00000001 )
( trash~l1 object~l1 garbage_can~l1 x00000001 )
( disposal~l1 activity~l1 garbage_can~l1 x00000001 )
( get_rid_of_things~l1 why~l1 garbage_can~l1 x00000001 )
( contain~l1 functionality~l1 trash_can~l1 x00000001 )
( hold~l1 use~l1 trash_can~l1 x00000001 )
( trash_can~l1 use_to~l1 hold_trash~l1 x00000001 )
( trash~l1 object~l1 trash_can~l1 x00000001 )
( disposal~l1 activity~l1 trash_can~l1 x00000001 )
( get_rid_of_things~l1 why~l1 trash_can~l1 x00000001 )
( contain~l1 functionality~l1 toilet~l1 x00000001 )
( hold~l1 use~l1 toilet~l1 x00000001 )
( toilet~l1 use_to~l1 hold_feces~l1 x00000001 )
( feces~l1 object~l1 toilet~l1 x00000001 )
( defecation~l1 activity~l1 toilet~l1 x00000001 )
( bathroom~l1 where~l1 toilet~l1 x00000001 )
( remove_human_waste~l1 why~l1 toilet~l1 x00000001 )
( remove_human_waste~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 sink~l1 x00000001 )
( hold~l1 use~l1 sink~l1 x00000001 )
( sink~l1 use_to~l1 hold_water~l1 x00000001 )
( water~l1 object~l1 sink~l1 x00000001 )
( washing~l1 activity~l1 sink~l1 x00000001 )
( bathroom~l1 where~l1 sink~l1 x00000001 )
( clean_your_hands~l1 why~l1 sink~l1 x00000001 )
( clean_your_hands~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 wash_basin~l1 x00000001 )
( hold~l1 use~l1 wash_basin~l1 x00000001 )
( wash_basin~l1 use_to~l1 hold_water~l1 x00000001 )
( water~l1 object~l1 wash_basin~l1 x00000001 )
( washing~l1 activity~l1 wash_basin~l1 x00000001 )
( bathroom~l1 where~l1 wash_basin~l1 x00000001 )
( clean_your_hands~l1 why~l1 wash_basin~l1 x00000001 )
( contain~l1 functionality~l1 barrel~l1 x00000001 )
( hold~l1 use~l1 barrel~l1 x00000001 )
( barrel~l1 use_to~l1 hold_water~l1 x00000001 )
( water~l1 object~l1 barrel~l1 x00000001 )
( washing~l1 activity~l1 barrel~l1 x00000001 )
( bathroom~l1 where~l1 barrel~l1 x00000001 )
( clean_your_hands~l1 why~l1 barrel~l1 x00000001 )
( contain~l1 functionality~l1 bucket~l1 x00000001 )
( hold~l1 use~l1 bucket~l1 x00000001 )
( bucket~l1 use_to~l1 hold_water~l1 x00000001 )
( water~l1 object~l1 bucket~l1 x00000001 )
( washing~l1 activity~l1 bucket~l1 x00000001 )
( bathroom~l1 where~l1 bucket~l1 x00000001 )
( clean_your_hands~l1 why~l1 bucket~l1 x00000001 )
( contain~l1 functionality~l1 vase~l1 x00000001 )
( hold~l1 use~l1 vase~l1 x00000001 )
( vase~l1 use_to~l1 hold_flowers~l1 x00000001 )
( flowers~l1 object~l1 vase~l1 x00000001 )
( esthetics~l1 activity~l1 vase~l1 x00000001 )
( dining_room~l1 where~l1 vase~l1 x00000001 )
( make_a_pretty_environment~l1 why~l1 vase~l1 x00000001 )
( make_a_pretty_environment~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 staple_gun~l1 x00000001 )
( hold~l1 use~l1 staple_gun~l1 x00000001 )
( staple_gun~l1 use_to~l1 hold_staples~l1 x00000001 )
( staples~l1 object~l1 staple_gun~l1 x00000001 )
( fastening~l1 activity~l1 staple_gun~l1 x00000001 )
( clerk~l1 agent~l1 staple_gun~l1 x00000001 )
( office~l1 where~l1 staple_gun~l1 x00000001 )
( make_it_easy_to_join_paper~l1 why~l1 staple_gun~l1 x00000001 )
( make_it_easy_to_join_paper~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 stapler~l1 x00000001 )
( hold~l1 use~l1 stapler~l1 x00000001 )
( stapler~l1 use_to~l1 hold_staples~l1 x00000001 )
( staples~l1 object~l1 stapler~l1 x00000001 )
( fastening~l1 activity~l1 stapler~l1 x00000001 )
( clerk~l1 agent~l1 stapler~l1 x00000001 )
( office~l1 where~l1 stapler~l1 x00000001 )
( make_it_easy_to_join_paper~l1 why~l1 stapler~l1 x00000001 )
( contain~l1 functionality~l1 bag~l1 x00000001 )
( hold~l1 use~l1 bag~l1 x00000001 )
( bag~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 bag~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 bag~l1 x00000001 )
( hold_arbitrary_things~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 box~l1 x00000001 )
( hold~l1 use~l1 box~l1 x00000001 )
( box~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 box~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 box~l1 x00000001 )
( contain~l1 functionality~l1 container~l1 x00000001 )
( hold~l1 use~l1 container~l1 x00000001 )
( container~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 container~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 container~l1 x00000001 )
( contain~l1 functionality~l1 carton~l1 x00000001 )
( hold~l1 use~l1 carton~l1 x00000001 )
( carton~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 carton~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 carton~l1 x00000001 )
( contain~l1 functionality~l1 pouch~l1 x00000001 )
( hold~l1 use~l1 pouch~l1 x00000001 )
( pouch~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 pouch~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 pouch~l1 x00000001 )
( contain~l1 functionality~l1 sack~l1 x00000001 )
( hold~l1 use~l1 sack~l1 x00000001 )
( sack~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 sack~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 sack~l1 x00000001 )
( contain~l1 functionality~l1 shoulder_bag~l1 x00000001 )
( hold~l1 use~l1 shoulder_bag~l1 x00000001 )
( shoulder_bag~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 shoulder_bag~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 shoulder_bag~l1 x00000001 )
( contain~l1 functionality~l1 pocket~l1 x00000001 )
( hold~l1 use~l1 pocket~l1 x00000001 )
( pocket~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 pocket~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 pocket~l1 x00000001 )
( contain~l1 functionality~l1 basket~l1 x00000001 )
( hold~l1 use~l1 basket~l1 x00000001 )
( basket~l1 use_to~l1 hold_stuff~l1 x00000001 )
( stuff~l1 object~l1 basket~l1 x00000001 )
( hold_arbitrary_things~l1 why~l1 basket~l1 x00000001 )
( contain~l1 functionality~l1 can~n~l1 x00000001 )
( hold~l1 use~l1 can~n~l1 x00000001 )
( can~n~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 can~n~l1 x00000001 )
( cooking~l1 activity~l1 can~n~l1 x00000001 )
( kitchen~l1 where~l1 can~n~l1 x00000001 )
( contain_tomatoes~l1 why~l1 can~n~l1 x00000001 )
( contain_tomatoes~l1 ~tool verify~l1 x00000001 )
( carton~l1 use_to~l1 hold_drink~l1 x00000001 )
( drink~l1 object~l1 carton~l1 x00000001 )
( drinking~l1 activity~l1 carton~l1 x00000001 )
( kitchen~l1 where~l1 carton~l1 x00000001 )
( contain_milk~l1 why~l1 carton~l1 x00000001 )
( contain_milk~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 bottle~n~l1 x00000001 )
( hold~l1 use~l1 bottle~n~l1 x00000001 )
( bottle~n~l1 use_to~l1 hold_drink~l1 x00000001 )
( drink~l1 object~l1 bottle~n~l1 x00000001 )
( drinking~l1 activity~l1 bottle~n~l1 x00000001 )
( kitchen~l1 where~l1 bottle~n~l1 x00000001 )
( contain_milk~l1 why~l1 bottle~n~l1 x00000001 )
( contain~l1 functionality~l1 jar~n~l1 x00000001 )
( hold~l1 use~l1 jar~n~l1 x00000001 )
( jar~n~l1 use_to~l1 hold_drink~l1 x00000001 )
( drink~l1 object~l1 jar~n~l1 x00000001 )
( drinking~l1 activity~l1 jar~n~l1 x00000001 )
( kitchen~l1 where~l1 jar~n~l1 x00000001 )
( contain_milk~l1 why~l1 jar~n~l1 x00000001 )
( contain~l1 functionality~l1 money_bag~l1 x00000001 )
( hold~l1 use~l1 money_bag~l1 x00000001 )
( money_bag~l1 use_to~l1 hold_money~l1 x00000001 )
( money~l1 object~l1 money_bag~l1 x00000001 )
( keep_money~l1 why~l1 money_bag~l1 x00000001 )
( keep_money~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 purse~l1 x00000001 )
( hold~l1 use~l1 purse~l1 x00000001 )
( purse~l1 use_to~l1 hold_money~l1 x00000001 )
( money~l1 object~l1 purse~l1 x00000001 )
( keep_money~l1 why~l1 purse~l1 x00000001 )
( contain~l1 functionality~l1 wallet~l1 x00000001 )
( hold~l1 use~l1 wallet~l1 x00000001 )
( wallet~l1 use_to~l1 hold_money~l1 x00000001 )
( money~l1 object~l1 wallet~l1 x00000001 )
( keep_money~l1 why~l1 wallet~l1 x00000001 )
( contain~l1 functionality~l1 money_belt~l1 x00000001 )
( hold~l1 use~l1 money_belt~l1 x00000001 )
( money_belt~l1 use_to~l1 hold_money~l1 x00000001 )
( money~l1 object~l1 money_belt~l1 x00000001 )
( keep_money~l1 why~l1 money_belt~l1 x00000001 )
( contain~l1 functionality~l1 spool~l1 x00000001 )
( hold~l1 use~l1 spool~l1 x00000001 )
( spool~l1 use_to~l1 hold_thread~l1 x00000001 )
( thread~l1 object~l1 spool~l1 x00000001 )
( sewing~l1 activity~l1 spool~l1 x00000001 )
( seamstress~l1 agent~l1 spool~l1 x00000001 )
( supply_thread~l1 why~l1 spool~l1 x00000001 )
( supply_thread~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 bobbin~l1 x00000001 )
( hold~l1 use~l1 bobbin~l1 x00000001 )
( bobbin~l1 use_to~l1 hold_thread~l1 x00000001 )
( thread~l1 object~l1 bobbin~l1 x00000001 )
( sewing~l1 activity~l1 bobbin~l1 x00000001 )
( seamstress~l1 agent~l1 bobbin~l1 x00000001 )
( supply_thread~l1 why~l1 bobbin~l1 x00000001 )
( contain~l1 functionality~l1 seat_belt~l1 x00000001 )
( hold~l1 use~l1 seat_belt~l1 x00000001 )
( seat_belt~l1 use_to~l1 hold_passenger~l1 x00000001 )
( passenger~l1 object~l1 seat_belt~l1 x00000001 )
( driving~l1 activity~l1 seat_belt~l1 x00000001 )
( passenger~l1 agent~l1 seat_belt~l1 x00000001 )
( protect_people_from_crash~l1 why~l1 seat_belt~l1 x00000001 )
( protect_people_from_crash~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 pot~l1 x00000001 )
( hold~l1 use~l1 pot~l1 x00000001 )
( pot~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 pot~l1 x00000001 )
( cooking~l1 activity~l1 pot~l1 x00000001 )
( chef~l1 agent~l1 pot~l1 x00000001 )
( kitchen~l1 where~l1 pot~l1 x00000001 )
( hold_food_while_heating~l1 why~l1 pot~l1 x00000001 )
( hold_food_while_heating~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 pan~l1 x00000001 )
( hold~l1 use~l1 pan~l1 x00000001 )
( pan~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 pan~l1 x00000001 )
( cooking~l1 activity~l1 pan~l1 x00000001 )
( chef~l1 agent~l1 pan~l1 x00000001 )
( kitchen~l1 where~l1 pan~l1 x00000001 )
( hold_food_while_heating~l1 why~l1 pan~l1 x00000001 )
( contain~l1 functionality~l1 casserole_dish~l1 x00000001 )
( hold~l1 use~l1 casserole_dish~l1 x00000001 )
( casserole_dish~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 casserole_dish~l1 x00000001 )
( cooking~l1 activity~l1 casserole_dish~l1 x00000001 )
( chef~l1 agent~l1 casserole_dish~l1 x00000001 )
( kitchen~l1 where~l1 casserole_dish~l1 x00000001 )
( hold_food_while_heating~l1 why~l1 casserole_dish~l1 x00000001 )
( contain~l1 functionality~l1 baking_pan~l1 x00000001 )
( hold~l1 use~l1 baking_pan~l1 x00000001 )
( baking_pan~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 baking_pan~l1 x00000001 )
( cooking~l1 activity~l1 baking_pan~l1 x00000001 )
( chef~l1 agent~l1 baking_pan~l1 x00000001 )
( kitchen~l1 where~l1 baking_pan~l1 x00000001 )
( hold_food_while_heating~l1 why~l1 baking_pan~l1 x00000001 )
( contain~l1 functionality~l1 saucepan~l1 x00000001 )
( hold~l1 use~l1 saucepan~l1 x00000001 )
( saucepan~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 saucepan~l1 x00000001 )
( cooking~l1 activity~l1 saucepan~l1 x00000001 )
( chef~l1 agent~l1 saucepan~l1 x00000001 )
( kitchen~l1 where~l1 saucepan~l1 x00000001 )
( hold_food_while_heating~l1 why~l1 saucepan~l1 x00000001 )
( contain~l1 functionality~l1 library~l1 x00000001 )
( hold~l1 use~l1 library~l1 x00000001 )
( library~l1 use_to~l1 hold_books~l1 x00000001 )
( books~l1 object~l1 library~l1 x00000001 )
( keep_books~l1 why~l1 library~l1 x00000001 )
( keep_books~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 bookstore~l1 x00000001 )
( hold~l1 use~l1 bookstore~l1 x00000001 )
( bookstore~l1 use_to~l1 hold_books~l1 x00000001 )
( books~l1 object~l1 bookstore~l1 x00000001 )
( keep_books~l1 why~l1 bookstore~l1 x00000001 )
( contain~l1 functionality~l1 drawer~l1 x00000001 )
( hold~l1 use~l1 drawer~l1 x00000001 )
( drawer~l1 use_to~l1 hold_clothes~l1 x00000001 )
( clothes~l1 object~l1 drawer~l1 x00000001 )
( keep_clothes~l1 why~l1 drawer~l1 x00000001 )
( keep_clothes~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 closet~l1 x00000001 )
( hold~l1 use~l1 closet~l1 x00000001 )
( closet~l1 use_to~l1 hold_clothes~l1 x00000001 )
( clothes~l1 object~l1 closet~l1 x00000001 )
( keep_clothes~l1 why~l1 closet~l1 x00000001 )
( contain~l1 functionality~l1 mailbox~l1 x00000001 )
( hold~l1 use~l1 mailbox~l1 x00000001 )
( mailbox~l1 use_to~l1 hold_mail~l1 x00000001 )
( mail~l1 object~l1 mailbox~l1 x00000001 )
( hold_mail~l1 why~l1 mailbox~l1 x00000001 )
( hold_mail~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 shaker~l1 x00000001 )
( hold~l1 use~l1 shaker~l1 x00000001 )
( shaker~l1 use_to~l1 hold_spice~l1 x00000001 )
( spice~l1 object~l1 shaker~l1 x00000001 )
( give_out_salt_and_pepper~l1 why~l1 shaker~l1 x00000001 )
( give_out_salt_and_pepper~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 lunch_box~l1 x00000001 )
( hold~l1 use~l1 lunch_box~l1 x00000001 )
( lunch_box~l1 use_to~l1 hold_lunch~l1 x00000001 )
( lunch~l1 object~l1 lunch_box~l1 x00000001 )
( transport_lunch~l1 why~l1 lunch_box~l1 x00000001 )
( transport_lunch~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 sand_box~l1 x00000001 )
( hold~l1 use~l1 sand_box~l1 x00000001 )
( sand_box~l1 use_to~l1 hold_sand~l1 x00000001 )
( sand~l1 object~l1 sand_box~l1 x00000001 )
( play_with_sand~l1 why~l1 sand_box~l1 x00000001 )
( play_with_sand~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 feeder~l1 x00000001 )
( hold~l1 use~l1 feeder~l1 x00000001 )
( feeder~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 feeder~l1 x00000001 )
( feed_birds~l1 why~l1 feeder~l1 x00000001 )
( feed_birds~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 diaper~l1 x00000001 )
( hold~l1 use~l1 diaper~l1 x00000001 )
( diaper~l1 use_to~l1 hold_excrement~l1 x00000001 )
( excrement~l1 object~l1 diaper~l1 x00000001 )
( avoid_a_mess~l1 why~l1 diaper~l1 x00000001 )
( avoid_a_mess~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 syringe~l1 x00000001 )
( hold~l1 use~l1 syringe~l1 x00000001 )
( syringe~l1 use_to~l1 hold_medicine~l1 x00000001 )
( medicine~l1 object~l1 syringe~l1 x00000001 )
( treat_the_sick~l1 why~l1 syringe~l1 x00000001 )
( treat_the_sick~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 Kleenex~l1 x00000001 )
( hold~l1 use~l1 Kleenex~l1 x00000001 )
( Kleenex~l1 use_to~l1 hold_snot~l1 x00000001 )
( snot~l1 object~l1 Kleenex~l1 x00000001 )
( blow_nose_into_it~l1 why~l1 Kleenex~l1 x00000001 )
( blow_nose_into_it~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 tissue~l1 x00000001 )
( hold~l1 use~l1 tissue~l1 x00000001 )
( tissue~l1 use_to~l1 hold_snot~l1 x00000001 )
( snot~l1 object~l1 tissue~l1 x00000001 )
( blow_nose_into_it~l1 why~l1 tissue~l1 x00000001 )
( contain~l1 functionality~l1 prison~l1 x00000001 )
( hold~l1 use~l1 prison~l1 x00000001 )
( prison~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 prison~l1 x00000001 )
( prevent_repeated_crime~l1 why~l1 prison~l1 x00000001 )
( prevent_repeated_crime~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 jail~l1 x00000001 )
( hold~l1 use~l1 jail~l1 x00000001 )
( jail~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 jail~l1 x00000001 )
( prevent_repeated_crime~l1 why~l1 jail~l1 x00000001 )
( contain~l1 functionality~l1 Leyden_jar~l1 x00000001 )
( hold~l1 use~l1 Leyden_jar~l1 x00000001 )
( Leyden_jar~l1 use_to~l1 hold_electricity~l1 x00000001 )
( electricity~l1 object~l1 Leyden_jar~l1 x00000001 )
( provide_power~l1 why~l1 Leyden_jar~l1 x00000001 )
( provide_power~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 battery~l1 x00000001 )
( hold~l1 use~l1 battery~l1 x00000001 )
( battery~l1 use_to~l1 hold_electricity~l1 x00000001 )
( electricity~l1 object~l1 battery~l1 x00000001 )
( provide_power~l1 why~l1 battery~l1 x00000001 )
( contain~l1 functionality~l1 envelope~l1 x00000001 )
( hold~l1 use~l1 envelope~l1 x00000001 )
( envelope~l1 use_to~l1 hold_letter~l1 x00000001 )
( letter~l1 object~l1 envelope~l1 x00000001 )
( transport_a_letter~l1 why~l1 envelope~l1 x00000001 )
( transport_a_letter~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 armory~l1 x00000001 )
( hold~l1 use~l1 armory~l1 x00000001 )
( armory~l1 use_to~l1 hold_weapons~l1 x00000001 )
( weapons~l1 object~l1 armory~l1 x00000001 )
( provide_weaponry~l1 why~l1 armory~l1 x00000001 )
( provide_weaponry~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 church~l1 x00000001 )
( hold~l1 use~l1 church~l1 x00000001 )
( church~l1 use_to~l1 hold_worshipers~l1 x00000001 )
( worshipers~l1 object~l1 church~l1 x00000001 )
( provide_a_place_to_worship~l1 why~l1 church~l1 x00000001 )
( provide_a_place_to_worship~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 mosque~l1 x00000001 )
( hold~l1 use~l1 mosque~l1 x00000001 )
( mosque~l1 use_to~l1 hold_worshipers~l1 x00000001 )
( worshipers~l1 object~l1 mosque~l1 x00000001 )
( provide_a_place_to_worship~l1 why~l1 mosque~l1 x00000001 )
( contain~l1 functionality~l1 synagogue~l1 x00000001 )
( hold~l1 use~l1 synagogue~l1 x00000001 )
( synagogue~l1 use_to~l1 hold_worshipers~l1 x00000001 )
( worshipers~l1 object~l1 synagogue~l1 x00000001 )
( provide_a_place_to_worship~l1 why~l1 synagogue~l1 x00000001 )
( contain~l1 functionality~l1 house~n~l1 x00000001 )
( hold~l1 use~l1 house~n~l1 x00000001 )
( house~n~l1 use_to~l1 hold_residents~l1 x00000001 )
( residents~l1 object~l1 house~n~l1 x00000001 )
( person~l1 agent~l1 house~n~l1 x00000001 )
( provide_a_place_to_live~l1 why~l1 house~n~l1 x00000001 )
( provide_a_place_to_live~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 home~l1 x00000001 )
( hold~l1 use~l1 home~l1 x00000001 )
( home~l1 use_to~l1 hold_residents~l1 x00000001 )
( residents~l1 object~l1 home~l1 x00000001 )
( person~l1 agent~l1 home~l1 x00000001 )
( provide_a_place_to_live~l1 why~l1 home~l1 x00000001 )
( contain~l1 functionality~l1 apartment~l1 x00000001 )
( hold~l1 use~l1 apartment~l1 x00000001 )
( apartment~l1 use_to~l1 hold_residents~l1 x00000001 )
( residents~l1 object~l1 apartment~l1 x00000001 )
( person~l1 agent~l1 apartment~l1 x00000001 )
( provide_a_place_to_live~l1 why~l1 apartment~l1 x00000001 )
( contain~l1 functionality~l1 condo~l1 x00000001 )
( hold~l1 use~l1 condo~l1 x00000001 )
( condo~l1 use_to~l1 hold_residents~l1 x00000001 )
( residents~l1 object~l1 condo~l1 x00000001 )
( person~l1 agent~l1 condo~l1 x00000001 )
( provide_a_place_to_live~l1 why~l1 condo~l1 x00000001 )
( contain~l1 functionality~l1 parking_space~l1 x00000001 )
( hold~l1 use~l1 parking_space~l1 x00000001 )
( parking_space~l1 use_to~l1 hold_car~l1 x00000001 )
( car~l1 object~l1 parking_space~l1 x00000001 )
( person~l1 agent~l1 parking_space~l1 x00000001 )
( provide_a_place_to_leave_a_car~l1 why~l1 parking_space~l1 x00000001 )
( provide_a_place_to_leave_a_car~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 garage~l1 x00000001 )
( hold~l1 use~l1 garage~l1 x00000001 )
( garage~l1 use_to~l1 hold_car~l1 x00000001 )
( car~l1 object~l1 garage~l1 x00000001 )
( person~l1 agent~l1 garage~l1 x00000001 )
( provide_a_place_to_leave_a_car~l1 why~l1 garage~l1 x00000001 )
( contain~l1 functionality~l1 parking_garage~l1 x00000001 )
( hold~l1 use~l1 parking_garage~l1 x00000001 )
( parking_garage~l1 use_to~l1 hold_car~l1 x00000001 )
( car~l1 object~l1 parking_garage~l1 x00000001 )
( person~l1 agent~l1 parking_garage~l1 x00000001 )
( provide_a_place_to_leave_a_car~l1 why~l1 parking_garage~l1 x00000001 )
( contain~l1 functionality~l1 runway~l1 x00000001 )
( hold~l1 use~l1 runway~l1 x00000001 )
( runway~l1 use_to~l1 hold_airplane~l1 x00000001 )
( airplane~l1 object~l1 runway~l1 x00000001 )
( person~l1 agent~l1 runway~l1 x00000001 )
( provide_a_place_to_put_airplanes~l1 why~l1 runway~l1 x00000001 )
( provide_a_place_to_put_airplanes~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 landing_strip~l1 x00000001 )
( hold~l1 use~l1 landing_strip~l1 x00000001 )
( landing_strip~l1 use_to~l1 hold_airplane~l1 x00000001 )
( airplane~l1 object~l1 landing_strip~l1 x00000001 )
( person~l1 agent~l1 landing_strip~l1 x00000001 )
( provide_a_place_to_put_airplanes~l1 why~l1 landing_strip~l1 x00000001 )
( contain~l1 functionality~l1 airport~l1 x00000001 )
( hold~l1 use~l1 airport~l1 x00000001 )
( airport~l1 use_to~l1 hold_airplane~l1 x00000001 )
( airplane~l1 object~l1 airport~l1 x00000001 )
( person~l1 agent~l1 airport~l1 x00000001 )
( provide_a_place_to_put_airplanes~l1 why~l1 airport~l1 x00000001 )
( contain~l1 functionality~l1 ~building x00000001 )
( hold~l1 use~l1 ~building x00000001 )
( ~building use_to~l1 hold_person~l1 x00000001 )
( person~l1 object~l1 ~building x00000001 )
( person~l1 agent~l1 ~building x00000001 )
( provide_shelter_for_people~l1 why~l1 ~building x00000001 )
( provide_shelter_for_people~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 aquarium~l1 x00000001 )
( hold~l1 use~l1 aquarium~l1 x00000001 )
( aquarium~l1 use_to~l1 hold_fish~n~l1 x00000001 )
( fish~n~l1 object~l1 aquarium~l1 x00000001 )
( pets~l1 activity~l1 aquarium~l1 x00000001 )
( keep_fish_as_pets~l1 why~l1 aquarium~l1 x00000001 )
( keep_fish_as_pets~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 doghouse~l1 x00000001 )
( hold~l1 use~l1 doghouse~l1 x00000001 )
( doghouse~l1 use_to~l1 hold_dogs~l1 x00000001 )
( dogs~l1 object~l1 doghouse~l1 x00000001 )
( pets~l1 activity~l1 doghouse~l1 x00000001 )
( keep_dogs_as_pets~l1 why~l1 doghouse~l1 x00000001 )
( keep_dogs_as_pets~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 kennel~l1 x00000001 )
( hold~l1 use~l1 kennel~l1 x00000001 )
( kennel~l1 use_to~l1 hold_animals~l1 x00000001 )
( animals~l1 object~l1 kennel~l1 x00000001 )
( pets~l1 activity~l1 kennel~l1 x00000001 )
( keep_cats_and_dogs~l1 why~l1 kennel~l1 x00000001 )
( keep_cats_and_dogs~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 bird_cage~l1 x00000001 )
( hold~l1 use~l1 bird_cage~l1 x00000001 )
( bird_cage~l1 use_to~l1 hold_birds~l1 x00000001 )
( birds~l1 object~l1 bird_cage~l1 x00000001 )
( pets~l1 activity~l1 bird_cage~l1 x00000001 )
( keep_birds_as_pets~l1 why~l1 bird_cage~l1 x00000001 )
( keep_birds_as_pets~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 birdcage~l1 x00000001 )
( hold~l1 use~l1 birdcage~l1 x00000001 )
( birdcage~l1 use_to~l1 hold_birds~l1 x00000001 )
( birds~l1 object~l1 birdcage~l1 x00000001 )
( pets~l1 activity~l1 birdcage~l1 x00000001 )
( keep_birds_as_pets~l1 why~l1 birdcage~l1 x00000001 )
( contain~l1 functionality~l1 terrarium~l1 x00000001 )
( hold~l1 use~l1 terrarium~l1 x00000001 )
( terrarium~l1 use_to~l1 hold_reptiles~l1 x00000001 )
( reptiles~l1 object~l1 terrarium~l1 x00000001 )
( pets~l1 activity~l1 terrarium~l1 x00000001 )
( keep_turtles_as_pets~l1 why~l1 terrarium~l1 x00000001 )
( keep_turtles_as_pets~l1 ~tool verify~l1 x00000001 )
( contain~l1 functionality~l1 cage~n~l1 x00000001 )
( hold~l1 use~l1 cage~n~l1 x00000001 )
( cage~n~l1 use_to~l1 hold_birds~l1 x00000001 )
( birds~l1 object~l1 cage~n~l1 x00000001 )
( pets~l1 activity~l1 cage~n~l1 x00000001 )
( keep_birds_as_pets~l1 why~l1 cage~n~l1 x00000001 )
( contain~l1 functionality~l1 fire_station~l1 x00000001 )
( hold~l1 use~l1 fire_station~l1 x00000001 )
( fire_station~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 fire_station~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 fire_station~l1 x00000001 )
( protect_people_from_outside_forces~l1 ~tool verify~l1 x00000001 )
( house~n~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 house~n~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 house~n~l1 x00000001 )
( home~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 home~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 home~l1 x00000001 )
( contain~l1 functionality~l1 building~l1 x00000001 )
( hold~l1 use~l1 building~l1 x00000001 )
( building~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 building~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 building~l1 x00000001 )
( contain~l1 functionality~l1 cell~l1 x00000001 )
( hold~l1 use~l1 cell~l1 x00000001 )
( cell~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 cell~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 cell~l1 x00000001 )
( contain~l1 functionality~l1 prison_cell~l1 x00000001 )
( hold~l1 use~l1 prison_cell~l1 x00000001 )
( prison_cell~l1 use_to~l1 hold_people~l1 x00000001 )
( people~l1 object~l1 prison_cell~l1 x00000001 )
( protect_people_from_outside_forces~l1 why~l1 prison_cell~l1 x00000001 )
( contain~l1 functionality~l1 trap~n~l1 x00000001 )
( immobilize~l1 use~l1 trap~n~l1 x00000001 )
( trap~n~l1 use_to~l1 immobilize_animals~l1 x00000001 )
( animals~l1 object~l1 trap~n~l1 x00000001 )
( catch_an_animal~l1 why~l1 trap~n~l1 x00000001 )
( catch_an_animal~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 paper~n~l1 x00000001 )
( hold~l1 use~l1 paper~n~l1 x00000001 )
( paper~n~l1 use_to~l1 hold_writing~l1 x00000001 )
( writing~l1 object~l1 paper~n~l1 x00000001 )
( writing~l1 activity~l1 paper~n~l1 x00000001 )
( author~l1 agent~l1 paper~n~l1 x00000001 )
( office~l1 where~l1 paper~n~l1 x00000001 )
( provide_a_place_to_put_writing~l1 why~l1 paper~n~l1 x00000001 )
( provide_a_place_to_put_writing~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 chalkboard~l1 x00000001 )
( hold~l1 use~l1 chalkboard~l1 x00000001 )
( chalkboard~l1 use_to~l1 hold_writing~l1 x00000001 )
( writing~l1 object~l1 chalkboard~l1 x00000001 )
( presentation~l1 activity~l1 chalkboard~l1 x00000001 )
( teacher~l1 agent~l1 chalkboard~l1 x00000001 )
( classroom~l1 where~l1 chalkboard~l1 x00000001 )
( provide_a_place_to_write_in_chalk~l1 why~l1 chalkboard~l1 x00000001 )
( provide_a_place_to_write_in_chalk~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 whiteboard~l1 x00000001 )
( hold~l1 use~l1 whiteboard~l1 x00000001 )
( whiteboard~l1 use_to~l1 hold_writing~l1 x00000001 )
( writing~l1 object~l1 whiteboard~l1 x00000001 )
( presentation~l1 activity~l1 whiteboard~l1 x00000001 )
( teacher~l1 agent~l1 whiteboard~l1 x00000001 )
( classroom~l1 where~l1 whiteboard~l1 x00000001 )
( provide_a_place_to_write_in_marker~l1 why~l1 whiteboard~l1 x00000001 )
( provide_a_place_to_write_in_marker~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 photo_album~l1 x00000001 )
( hold~l1 use~l1 photo_album~l1 x00000001 )
( photo_album~l1 use_to~l1 hold_photos~l1 x00000001 )
( photos~l1 object~l1 photo_album~l1 x00000001 )
( scrapbooking~l1 activity~l1 photo_album~l1 x00000001 )
( provide_a_place_to_put_photos~l1 why~l1 photo_album~l1 x00000001 )
( provide_a_place_to_put_photos~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 saucer~l1 x00000001 )
( rest~l1 use~l1 saucer~l1 x00000001 )
( saucer~l1 use_to~l1 rest_cup~l1 x00000001 )
( cup~l1 object~l1 saucer~l1 x00000001 )
( dining_room~l1 where~l1 saucer~l1 x00000001 )
( place_to_rest_a_cup_of_tea~l1 why~l1 saucer~l1 x00000001 )
( place_to_rest_a_cup_of_tea~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 book~n~l1 x00000001 )
( hold~l1 use~l1 book~n~l1 x00000001 )
( book~n~l1 use_to~l1 hold_words~l1 x00000001 )
( words~l1 object~l1 book~n~l1 x00000001 )
( reading~l1 activity~l1 book~n~l1 x00000001 )
( library~l1 where~l1 book~n~l1 x00000001 )
( read_words_that_are_recorded~l1 why~l1 book~n~l1 x00000001 )
( read_words_that_are_recorded~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 pillow~l1 x00000001 )
( rest~l1 use~l1 pillow~l1 x00000001 )
( pillow~l1 use_to~l1 rest_head~l1 x00000001 )
( head~l1 object~l1 pillow~l1 x00000001 )
( sleeping~l1 activity~l1 pillow~l1 x00000001 )
( bedroom~l1 where~l1 pillow~l1 x00000001 )
( keep_head_comfortable~l1 why~l1 pillow~l1 x00000001 )
( keep_head_comfortable~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 plate~l1 x00000001 )
( hold~l1 use~l1 plate~l1 x00000001 )
( plate~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 plate~l1 x00000001 )
( hold_food_for_eating~l1 why~l1 plate~l1 x00000001 )
( hold_food_for_eating~l1 ~tool verify~l1 x00000001 )
( hold~l1 use~l1 saucer~l1 x00000001 )
( saucer~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 saucer~l1 x00000001 )
( hold_food_for_eating~l1 why~l1 saucer~l1 x00000001 )
( surface~l1 functionality~l1 tray~l1 x00000001 )
( hold~l1 use~l1 tray~l1 x00000001 )
( tray~l1 use_to~l1 hold_food~l1 x00000001 )
( food~l1 object~l1 tray~l1 x00000001 )
( hold_food_for_eating~l1 why~l1 tray~l1 x00000001 )
( surface~l1 functionality~l1 umbrella~l1 x00000001 )
( ward_off~l1 use~l1 umbrella~l1 x00000001 )
( umbrella~l1 use_to~l1 ward_off_rain~l1 x00000001 )
( rain~l1 object~l1 umbrella~l1 x00000001 )
( keep_dry~l1 why~l1 umbrella~l1 x00000001 )
( keep_dry~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 toilet_paper~l1 x00000001 )
( wipe~l1 use~l1 toilet_paper~l1 x00000001 )
( toilet_paper~l1 use_to~l1 wipe_ass~l1 x00000001 )
( ass~l1 object~l1 toilet_paper~l1 x00000001 )
( clean_off_one_'s_ass~l1 why~l1 toilet_paper~l1 x00000001 )
( clean_off_one_'s_ass~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 video~n~l1 x00000001 )
( hold~l1 use~l1 video~n~l1 x00000001 )
( video~n~l1 use_to~l1 hold_images~l1 x00000001 )
( images~l1 object~l1 video~n~l1 x00000001 )
( keep_images~l1 why~l1 video~n~l1 x00000001 )
( keep_images~l1 ~tool verify~l1 x00000001 )
( surface~l1 functionality~l1 videotape~l1 x00000001 )
( hold~l1 use~l1 videotape~l1 x00000001 )
( videotape~l1 use_to~l1 hold_images~l1 x00000001 )
( images~l1 object~l1 videotape~l1 x00000001 )
( keep_images~l1 why~l1 videotape~l1 x00000001 )
( surface~l1 functionality~l1 parking_space~l1 x00000001 )
( parking_space~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 parking_space~l1 x00000001 )
( store_a_car~l1 why~l1 parking_space~l1 x00000001 )
( store_a_car~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 pipe~n~l1 x00000001 )
( move~l1 use~l1 pipe~n~l1 x00000001 )
( pipe~n~l1 use_to~l1 move_water~l1 x00000001 )
( water~l1 object~l1 pipe~n~l1 x00000001 )
( city_services~l1 activity~l1 pipe~n~l1 x00000001 )
( person~l1 agent~l1 pipe~n~l1 x00000001 )
( provide_drinking_water~l1 why~l1 pipe~n~l1 x00000001 )
( provide_drinking_water~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 aqueduct~l1 x00000001 )
( move~l1 use~l1 aqueduct~l1 x00000001 )
( aqueduct~l1 use_to~l1 move_water~l1 x00000001 )
( water~l1 object~l1 aqueduct~l1 x00000001 )
( city_services~l1 activity~l1 aqueduct~l1 x00000001 )
( person~l1 agent~l1 aqueduct~l1 x00000001 )
( provide_drinking_water~l1 why~l1 aqueduct~l1 x00000001 )
( conduit~l1 functionality~l1 track~n~l1 x00000001 )
( move~l1 use~l1 track~n~l1 x00000001 )
( track~n~l1 use_to~l1 move_trains~l1 x00000001 )
( trains~l1 object~l1 track~n~l1 x00000001 )
( transport~l1 activity~l1 track~n~l1 x00000001 )
( train~l1 agent~l1 track~n~l1 x00000001 )
( outdoors~l1 where~l1 track~n~l1 x00000001 )
( allow_trains_to_move~l1 why~l1 track~n~l1 x00000001 )
( allow_trains_to_move~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 railroad_track~l1 x00000001 )
( move~l1 use~l1 railroad_track~l1 x00000001 )
( railroad_track~l1 use_to~l1 move_trains~l1 x00000001 )
( trains~l1 object~l1 railroad_track~l1 x00000001 )
( transport~l1 activity~l1 railroad_track~l1 x00000001 )
( train~l1 agent~l1 railroad_track~l1 x00000001 )
( outdoors~l1 where~l1 railroad_track~l1 x00000001 )
( allow_trains_to_move~l1 why~l1 railroad_track~l1 x00000001 )
( conduit~l1 functionality~l1 straw~l1 x00000001 )
( suck~l1 use~l1 straw~l1 x00000001 )
( straw~l1 use_to~l1 suck_liquid~l1 x00000001 )
( liquid~l1 object~l1 straw~l1 x00000001 )
( drinking~l1 activity~l1 straw~l1 x00000001 )
( dining_room~l1 where~l1 straw~l1 x00000001 )
( drink_a_milkshake~l1 why~l1 straw~l1 x00000001 )
( drink_a_milkshake~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 extension_cord~l1 x00000001 )
( provide~l1 use~l1 extension_cord~l1 x00000001 )
( extension_cord~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 extension_cord~l1 x00000001 )
( powering~l1 activity~l1 extension_cord~l1 x00000001 )
( office~l1 where~l1 extension_cord~l1 x00000001 )
( make_power_available~l1 why~l1 extension_cord~l1 x00000001 )
( make_power_available~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 cord~l1 x00000001 )
( provide~l1 use~l1 cord~l1 x00000001 )
( cord~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 cord~l1 x00000001 )
( powering~l1 activity~l1 cord~l1 x00000001 )
( office~l1 where~l1 cord~l1 x00000001 )
( make_power_available~l1 why~l1 cord~l1 x00000001 )
( conduit~l1 functionality~l1 wall_socket~l1 x00000001 )
( provide~l1 use~l1 wall_socket~l1 x00000001 )
( wall_socket~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 wall_socket~l1 x00000001 )
( powering~l1 activity~l1 wall_socket~l1 x00000001 )
( office~l1 where~l1 wall_socket~l1 x00000001 )
( make_power_available~l1 why~l1 wall_socket~l1 x00000001 )
( conduit~l1 functionality~l1 wall_outlet~l1 x00000001 )
( provide~l1 use~l1 wall_outlet~l1 x00000001 )
( wall_outlet~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 wall_outlet~l1 x00000001 )
( powering~l1 activity~l1 wall_outlet~l1 x00000001 )
( office~l1 where~l1 wall_outlet~l1 x00000001 )
( make_power_available~l1 why~l1 wall_outlet~l1 x00000001 )
( conduit~l1 functionality~l1 outlet~l1 x00000001 )
( provide~l1 use~l1 outlet~l1 x00000001 )
( outlet~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 outlet~l1 x00000001 )
( powering~l1 activity~l1 outlet~l1 x00000001 )
( office~l1 where~l1 outlet~l1 x00000001 )
( make_power_available~l1 why~l1 outlet~l1 x00000001 )
( conduit~l1 functionality~l1 socket~l1 x00000001 )
( provide~l1 use~l1 socket~l1 x00000001 )
( socket~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 socket~l1 x00000001 )
( powering~l1 activity~l1 socket~l1 x00000001 )
( office~l1 where~l1 socket~l1 x00000001 )
( make_power_available~l1 why~l1 socket~l1 x00000001 )
( conduit~l1 functionality~l1 electrical_plug~l1 x00000001 )
( provide~l1 use~l1 electrical_plug~l1 x00000001 )
( electrical_plug~l1 use_to~l1 provide_power~l1 x00000001 )
( power~l1 object~l1 electrical_plug~l1 x00000001 )
( powering~l1 activity~l1 electrical_plug~l1 x00000001 )
( office~l1 where~l1 electrical_plug~l1 x00000001 )
( make_power_available~l1 why~l1 electrical_plug~l1 x00000001 )
( conduit~l1 functionality~l1 driveway~l1 x00000001 )
( hold~l1 use~l1 driveway~l1 x00000001 )
( driveway~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 driveway~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 driveway~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 blacktop~l1 x00000001 )
( hold~l1 use~l1 blacktop~l1 x00000001 )
( blacktop~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 blacktop~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 blacktop~l1 x00000001 )
( conduit~l1 functionality~l1 road~l1 x00000001 )
( hold~l1 use~l1 road~l1 x00000001 )
( road~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 road~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 road~l1 x00000001 )
( conduit~l1 functionality~l1 street~l1 x00000001 )
( hold~l1 use~l1 street~l1 x00000001 )
( street~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 street~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 street~l1 x00000001 )
( conduit~l1 functionality~l1 avenue~l1 x00000001 )
( hold~l1 use~l1 avenue~l1 x00000001 )
( avenue~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 avenue~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 avenue~l1 x00000001 )
( conduit~l1 functionality~l1 roadway~l1 x00000001 )
( hold~l1 use~l1 roadway~l1 x00000001 )
( roadway~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 roadway~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 roadway~l1 x00000001 )
( conduit~l1 functionality~l1 expressway~l1 x00000001 )
( hold~l1 use~l1 expressway~l1 x00000001 )
( expressway~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 expressway~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 expressway~l1 x00000001 )
( conduit~l1 functionality~l1 highway~l1 x00000001 )
( hold~l1 use~l1 highway~l1 x00000001 )
( highway~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 highway~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 highway~l1 x00000001 )
( conduit~l1 functionality~l1 path~l1 x00000001 )
( hold~l1 use~l1 path~l1 x00000001 )
( path~l1 use_to~l1 hold_cars~l1 x00000001 )
( cars~l1 object~l1 path~l1 x00000001 )
( provide_place_for_cars_to_travel~l1 why~l1 path~l1 x00000001 )
( conduit~l1 functionality~l1 door~l1 x00000001 )
( provide~l1 use~l1 door~l1 x00000001 )
( door~l1 use_to~l1 provide_access~l1 x00000001 )
( access~l1 object~l1 door~l1 x00000001 )
( allow_entry_to_an_area~l1 why~l1 door~l1 x00000001 )
( allow_entry_to_an_area~l1 ~tool verify~l1 x00000001 )
( conduit~l1 functionality~l1 opening~l1 x00000001 )
( provide~l1 use~l1 opening~l1 x00000001 )
( opening~l1 use_to~l1 provide_access~l1 x00000001 )
( access~l1 object~l1 opening~l1 x00000001 )
( allow_entry_to_an_area~l1 why~l1 opening~l1 x00000001 )
( conduit~l1 functionality~l1 entrance~l1 x00000001 )
( provide~l1 use~l1 entrance~l1 x00000001 )
( entrance~l1 use_to~l1 provide_access~l1 x00000001 )
( access~l1 object~l1 entrance~l1 x00000001 )
( allow_entry_to_an_area~l1 why~l1 entrance~l1 x00000001 )
( conduit~l1 functionality~l1 entranceway~l1 x00000001 )
( provide~l1 use~l1 entranceway~l1 x00000001 )
( entranceway~l1 use_to~l1 provide_access~l1 x00000001 )
( access~l1 object~l1 entranceway~l1 x00000001 )
( allow_entry_to_an_area~l1 why~l1 entranceway~l1 x00000001 )
( move~l1 functionality~l1 parachute~n~l1 x00000001 )
( fall~l1 use~l1 parachute~n~l1 x00000001 )
( parachute~n~l1 use_to~l1 fall_*~l1 x00000001 )
( safely~l1 adverb~l1 parachute~n~l1 x00000001 )
( sky_diving~l1 activity~l1 parachute~n~l1 x00000001 )
( sky-diver~l1 agent~l1 parachute~n~l1 x00000001 )
( airplane~l1 where~l1 parachute~n~l1 x00000001 )
( avoid_harm_to_self_upon_landing~l1 why~l1 parachute~n~l1 x00000001 )
( avoid_harm_to_self_upon_landing~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 pry~n~l1 x00000001 )
( lever~l1 use~l1 pry~n~l1 x00000001 )
( pry~n~l1 use_to~l1 lever_objects~l1 x00000001 )
( objects~l1 object~l1 pry~n~l1 x00000001 )
( construction~l1 activity~l1 pry~n~l1 x00000001 )
( builder~l1 agent~l1 pry~n~l1 x00000001 )
( building_site~l1 where~l1 pry~n~l1 x00000001 )
( remove_wood~l1 why~l1 pry~n~l1 x00000001 )
( remove_wood~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 pry_bar~l1 x00000001 )
( lever~l1 use~l1 pry_bar~l1 x00000001 )
( pry_bar~l1 use_to~l1 lever_objects~l1 x00000001 )
( objects~l1 object~l1 pry_bar~l1 x00000001 )
( construction~l1 activity~l1 pry_bar~l1 x00000001 )
( builder~l1 agent~l1 pry_bar~l1 x00000001 )
( building_site~l1 where~l1 pry_bar~l1 x00000001 )
( remove_wood~l1 why~l1 pry_bar~l1 x00000001 )
( move~l1 functionality~l1 crowbar~l1 x00000001 )
( lever~l1 use~l1 crowbar~l1 x00000001 )
( crowbar~l1 use_to~l1 lever_objects~l1 x00000001 )
( objects~l1 object~l1 crowbar~l1 x00000001 )
( construction~l1 activity~l1 crowbar~l1 x00000001 )
( builder~l1 agent~l1 crowbar~l1 x00000001 )
( building_site~l1 where~l1 crowbar~l1 x00000001 )
( remove_wood~l1 why~l1 crowbar~l1 x00000001 )
( move~l1 functionality~l1 wrecking_bar~l1 x00000001 )
( lever~l1 use~l1 wrecking_bar~l1 x00000001 )
( wrecking_bar~l1 use_to~l1 lever_objects~l1 x00000001 )
( objects~l1 object~l1 wrecking_bar~l1 x00000001 )
( construction~l1 activity~l1 wrecking_bar~l1 x00000001 )
( builder~l1 agent~l1 wrecking_bar~l1 x00000001 )
( building_site~l1 where~l1 wrecking_bar~l1 x00000001 )
( remove_wood~l1 why~l1 wrecking_bar~l1 x00000001 )
( move~l1 functionality~l1 lever~l1 x00000001 )
( lever~l1 use~l1 lever~l1 x00000001 )
( lever~l1 use_to~l1 lever_objects~l1 x00000001 )
( objects~l1 object~l1 lever~l1 x00000001 )
( construction~l1 activity~l1 lever~l1 x00000001 )
( builder~l1 agent~l1 lever~l1 x00000001 )
( building_site~l1 where~l1 lever~l1 x00000001 )
( remove_wood~l1 why~l1 lever~l1 x00000001 )
( move~l1 functionality~l1 hammer~l1 x00000001 )
( hit~l1 use~l1 hammer~l1 x00000001 )
( hammer~l1 use_to~l1 hit_nails~l1 x00000001 )
( nails~l1 object~l1 hammer~l1 x00000001 )
( construction~l1 activity~l1 hammer~l1 x00000001 )
( builder~l1 agent~l1 hammer~l1 x00000001 )
( building_site~l1 where~l1 hammer~l1 x00000001 )
( fasten_wood_together~l1 why~l1 hammer~l1 x00000001 )
( fasten_wood_together~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 mallet~l1 x00000001 )
( hit~l1 use~l1 mallet~l1 x00000001 )
( mallet~l1 use_to~l1 hit_nails~l1 x00000001 )
( nails~l1 object~l1 mallet~l1 x00000001 )
( construction~l1 activity~l1 mallet~l1 x00000001 )
( builder~l1 agent~l1 mallet~l1 x00000001 )
( building_site~l1 where~l1 mallet~l1 x00000001 )
( fasten_wood_together~l1 why~l1 mallet~l1 x00000001 )
( move~l1 functionality~l1 pliers~l1 x00000001 )
( grip~l1 use~l1 pliers~l1 x00000001 )
( pliers~l1 use_to~l1 grip_object~l1 x00000001 )
( object~l1 object~l1 pliers~l1 x00000001 )
( construction~l1 activity~l1 pliers~l1 x00000001 )
( builder~l1 agent~l1 pliers~l1 x00000001 )
( building_site~l1 where~l1 pliers~l1 x00000001 )
( turn_nuts~l1 why~l1 pliers~l1 x00000001 )
( turn_nuts~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 screwdriver~l1 x00000001 )
( turn~l1 use~l1 screwdriver~l1 x00000001 )
( screwdriver~l1 use_to~l1 turn_screw~l1 x00000001 )
( screw~l1 object~l1 screwdriver~l1 x00000001 )
( construction~l1 activity~l1 screwdriver~l1 x00000001 )
( builder~l1 agent~l1 screwdriver~l1 x00000001 )
( building_site~l1 where~l1 screwdriver~l1 x00000001 )
( join_wood_to_wood~l1 why~l1 screwdriver~l1 x00000001 )
( join_wood_to_wood~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 fan~n~l1 x00000001 )
( move~l1 use~l1 fan~n~l1 x00000001 )
( fan~n~l1 use_to~l1 move_air~l1 x00000001 )
( air~l1 object~l1 fan~n~l1 x00000001 )
( cooling~l1 activity~l1 fan~n~l1 x00000001 )
( building~l1 where~l1 fan~n~l1 x00000001 )
( cool_off~l1 why~l1 fan~n~l1 x00000001 )
( cool_off~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 chopstick~l1 x00000001 )
( move~l1 use~l1 chopstick~l1 x00000001 )
( chopstick~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 chopstick~l1 x00000001 )
( eating~l1 activity~l1 chopstick~l1 x00000001 )
( dining_room~l1 where~l1 chopstick~l1 x00000001 )
( eat_solid_food~l1 why~l1 chopstick~l1 x00000001 )
( eat_solid_food~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 fork~n~l1 x00000001 )
( move~l1 use~l1 fork~n~l1 x00000001 )
( fork~n~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 fork~n~l1 x00000001 )
( eating~l1 activity~l1 fork~n~l1 x00000001 )
( dining_room~l1 where~l1 fork~n~l1 x00000001 )
( eat_solid_food~l1 why~l1 fork~n~l1 x00000001 )
( move~l1 functionality~l1 tong~l1 x00000001 )
( move~l1 use~l1 tong~l1 x00000001 )
( tong~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 tong~l1 x00000001 )
( eating~l1 activity~l1 tong~l1 x00000001 )
( dining_room~l1 where~l1 tong~l1 x00000001 )
( eat_solid_food~l1 why~l1 tong~l1 x00000001 )
( move~l1 functionality~l1 skewer~n~l1 x00000001 )
( move~l1 use~l1 skewer~n~l1 x00000001 )
( skewer~n~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 skewer~n~l1 x00000001 )
( eating~l1 activity~l1 skewer~n~l1 x00000001 )
( dining_room~l1 where~l1 skewer~n~l1 x00000001 )
( eat_solid_food~l1 why~l1 skewer~n~l1 x00000001 )
( move~l1 functionality~l1 spoon~n~l1 x00000001 )
( move~l1 use~l1 spoon~n~l1 x00000001 )
( spoon~n~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 spoon~n~l1 x00000001 )
( eating~l1 activity~l1 spoon~n~l1 x00000001 )
( dining_room~l1 where~l1 spoon~n~l1 x00000001 )
( eat_liquid_food~l1 why~l1 spoon~n~l1 x00000001 )
( eat_liquid_food~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 cooking_spoon~l1 x00000001 )
( move~l1 use~l1 cooking_spoon~l1 x00000001 )
( cooking_spoon~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 cooking_spoon~l1 x00000001 )
( eating~l1 activity~l1 cooking_spoon~l1 x00000001 )
( dining_room~l1 where~l1 cooking_spoon~l1 x00000001 )
( eat_liquid_food~l1 why~l1 cooking_spoon~l1 x00000001 )
( move~l1 functionality~l1 utensil~l1 x00000001 )
( move~l1 use~l1 utensil~l1 x00000001 )
( utensil~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 utensil~l1 x00000001 )
( eating~l1 activity~l1 utensil~l1 x00000001 )
( dining_room~l1 where~l1 utensil~l1 x00000001 )
( eat_food~l1 why~l1 utensil~l1 x00000001 )
( eat_food~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 silverware~l1 x00000001 )
( move~l1 use~l1 silverware~l1 x00000001 )
( silverware~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 silverware~l1 x00000001 )
( eating~l1 activity~l1 silverware~l1 x00000001 )
( dining_room~l1 where~l1 silverware~l1 x00000001 )
( eat_food~l1 why~l1 silverware~l1 x00000001 )
( move~l1 functionality~l1 ladle~n~l1 x00000001 )
( move~l1 use~l1 ladle~n~l1 x00000001 )
( ladle~n~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 ladle~n~l1 x00000001 )
( cooking~l1 activity~l1 ladle~n~l1 x00000001 )
( chef~l1 agent~l1 ladle~n~l1 x00000001 )
( dining_room~l1 where~l1 ladle~n~l1 x00000001 )
( serve_liquid_food~l1 why~l1 ladle~n~l1 x00000001 )
( serve_liquid_food~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 spatula~l1 x00000001 )
( move~l1 use~l1 spatula~l1 x00000001 )
( spatula~l1 use_to~l1 move_food~l1 x00000001 )
( food~l1 object~l1 spatula~l1 x00000001 )
( cooking~l1 activity~l1 spatula~l1 x00000001 )
( chef~l1 agent~l1 spatula~l1 x00000001 )
( kitchen~l1 where~l1 spatula~l1 x00000001 )
( lift_hot_food~l1 why~l1 spatula~l1 x00000001 )
( lift_hot_food~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 sifter~l1 x00000001 )
( move~l1 use~l1 sifter~l1 x00000001 )
( sifter~l1 use_to~l1 move_flour~l1 x00000001 )
( flour~l1 object~l1 sifter~l1 x00000001 )
( cooking~l1 activity~l1 sifter~l1 x00000001 )
( chef~l1 agent~l1 sifter~l1 x00000001 )
( kitchen~l1 where~l1 sifter~l1 x00000001 )
( unclump_flour~l1 why~l1 sifter~l1 x00000001 )
( unclump_flour~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 box_wrench~l1 x00000001 )
( turn~l1 use~l1 box_wrench~l1 x00000001 )
( box_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 box_wrench~l1 x00000001 )
( construction~l1 activity~l1 box_wrench~l1 x00000001 )
( builder~l1 agent~l1 box_wrench~l1 x00000001 )
( building_site~l1 where~l1 box_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 box_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 crescent_wrench~l1 x00000001 )
( turn~l1 use~l1 crescent_wrench~l1 x00000001 )
( crescent_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 crescent_wrench~l1 x00000001 )
( construction~l1 activity~l1 crescent_wrench~l1 x00000001 )
( builder~l1 agent~l1 crescent_wrench~l1 x00000001 )
( building_site~l1 where~l1 crescent_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 crescent_wrench~l1 x00000001 )
( move~l1 functionality~l1 flat-nosed_pliers~l1 x00000001 )
( turn~l1 use~l1 flat-nosed_pliers~l1 x00000001 )
( flat-nosed_pliers~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 flat-nosed_pliers~l1 x00000001 )
( construction~l1 activity~l1 flat-nosed_pliers~l1 x00000001 )
( builder~l1 agent~l1 flat-nosed_pliers~l1 x00000001 )
( building_site~l1 where~l1 flat-nosed_pliers~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 flat-nosed_pliers~l1 x00000001 )
( move~l1 functionality~l1 monkey_wrench~l1 x00000001 )
( turn~l1 use~l1 monkey_wrench~l1 x00000001 )
( monkey_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 monkey_wrench~l1 x00000001 )
( construction~l1 activity~l1 monkey_wrench~l1 x00000001 )
( builder~l1 agent~l1 monkey_wrench~l1 x00000001 )
( building_site~l1 where~l1 monkey_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 monkey_wrench~l1 x00000001 )
( move~l1 functionality~l1 needle-nosed_pliers~l1 x00000001 )
( turn~l1 use~l1 needle-nosed_pliers~l1 x00000001 )
( needle-nosed_pliers~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 needle-nosed_pliers~l1 x00000001 )
( construction~l1 activity~l1 needle-nosed_pliers~l1 x00000001 )
( builder~l1 agent~l1 needle-nosed_pliers~l1 x00000001 )
( building_site~l1 where~l1 needle-nosed_pliers~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 needle-nosed_pliers~l1 x00000001 )
( move~l1 functionality~l1 open-end_wrench~l1 x00000001 )
( turn~l1 use~l1 open-end_wrench~l1 x00000001 )
( open-end_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 open-end_wrench~l1 x00000001 )
( construction~l1 activity~l1 open-end_wrench~l1 x00000001 )
( builder~l1 agent~l1 open-end_wrench~l1 x00000001 )
( building_site~l1 where~l1 open-end_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 open-end_wrench~l1 x00000001 )
( move~l1 functionality~l1 pipe_wrench~l1 x00000001 )
( turn~l1 use~l1 pipe_wrench~l1 x00000001 )
( pipe_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 pipe_wrench~l1 x00000001 )
( construction~l1 activity~l1 pipe_wrench~l1 x00000001 )
( builder~l1 agent~l1 pipe_wrench~l1 x00000001 )
( building_site~l1 where~l1 pipe_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 pipe_wrench~l1 x00000001 )
( move~l1 functionality~l1 socket_wrench~l1 x00000001 )
( turn~l1 use~l1 socket_wrench~l1 x00000001 )
( socket_wrench~l1 use_to~l1 turn_objects~l1 x00000001 )
( objects~l1 object~l1 socket_wrench~l1 x00000001 )
( construction~l1 activity~l1 socket_wrench~l1 x00000001 )
( builder~l1 agent~l1 socket_wrench~l1 x00000001 )
( building_site~l1 where~l1 socket_wrench~l1 x00000001 )
( turn_objects_in_a_circle~l1 why~l1 socket_wrench~l1 x00000001 )
( move~l1 functionality~l1 plunger~l1 x00000001 )
( move~l1 use~l1 plunger~l1 x00000001 )
( plunger~l1 use_to~l1 move_waste~l1 x00000001 )
( waste~l1 object~l1 plunger~l1 x00000001 )
( plumbing~l1 activity~l1 plunger~l1 x00000001 )
( plumber~l1 agent~l1 plunger~l1 x00000001 )
( bathroom~l1 where~l1 plunger~l1 x00000001 )
( clear_blocks_in_a_drain~l1 why~l1 plunger~l1 x00000001 )
( clear_blocks_in_a_drain~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 dustpan~l1 x00000001 )
( move~l1 use~l1 dustpan~l1 x00000001 )
( dustpan~l1 use_to~l1 move_dirt~l1 x00000001 )
( dirt~l1 object~l1 dustpan~l1 x00000001 )
( housecleaning~l1 activity~l1 dustpan~l1 x00000001 )
( maid~l1 agent~l1 dustpan~l1 x00000001 )
( remove_dirt~l1 why~l1 dustpan~l1 x00000001 )
( remove_dirt~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 elevator~l1 x00000001 )
( move~l1 use~l1 elevator~l1 x00000001 )
( elevator~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 elevator~l1 x00000001 )
( lift_people_up~l1 why~l1 elevator~l1 x00000001 )
( lift_people_up~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 pump~n~l1 x00000001 )
( move~l1 use~l1 pump~n~l1 x00000001 )
( pump~n~l1 use_to~l1 move_liquid~l1 x00000001 )
( liquid~l1 object~l1 pump~n~l1 x00000001 )
( move_liquid_long_distances~l1 why~l1 pump~n~l1 x00000001 )
( move_liquid_long_distances~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 suction_pump~l1 x00000001 )
( move~l1 use~l1 suction_pump~l1 x00000001 )
( suction_pump~l1 use_to~l1 move_liquid~l1 x00000001 )
( liquid~l1 object~l1 suction_pump~l1 x00000001 )
( move_liquid_long_distances~l1 why~l1 suction_pump~l1 x00000001 )
( move~l1 functionality~l1 postage_stamp~l1 x00000001 )
( move~l1 use~l1 postage_stamp~l1 x00000001 )
( postage_stamp~l1 use_to~l1 move_letter~l1 x00000001 )
( letter~l1 object~l1 postage_stamp~l1 x00000001 )
( send_letter_to_someone~l1 why~l1 postage_stamp~l1 x00000001 )
( send_letter_to_someone~l1 ~tool verify~l1 x00000001 )
( move~l1 functionality~l1 stamp~l1 x00000001 )
( move~l1 use~l1 stamp~l1 x00000001 )
( stamp~l1 use_to~l1 move_letter~l1 x00000001 )
( letter~l1 object~l1 stamp~l1 x00000001 )
( send_letter_to_someone~l1 why~l1 stamp~l1 x00000001 )
( mail~l1 use~l1 postage_stamp~l1 x00000001 )
( postage_stamp~l1 use_to~l1 mail_letter~l1 x00000001 )
( mail~l1 use~l1 stamp~l1 x00000001 )
( stamp~l1 use_to~l1 mail_letter~l1 x00000001 )
( move~l1 functionality~l1 envelope~l1 x00000001 )
( mail~l1 use~l1 envelope~l1 x00000001 )
( envelope~l1 use_to~l1 mail_letter~l1 x00000001 )
( send_letter_to_someone~l1 why~l1 envelope~l1 x00000001 )
( record~l1 functionality~l1 camera~l1 x00000001 )
( record~l1 use~l1 camera~l1 x00000001 )
( camera~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 camera~l1 x00000001 )
( photography~l1 activity~l1 camera~l1 x00000001 )
( photographer~l1 agent~l1 camera~l1 x00000001 )
( capture_pictures~l1 why~l1 camera~l1 x00000001 )
( capture_pictures~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 tv_camera~l1 x00000001 )
( record~l1 use~l1 tv_camera~l1 x00000001 )
( tv_camera~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 tv_camera~l1 x00000001 )
( photography~l1 activity~l1 tv_camera~l1 x00000001 )
( photographer~l1 agent~l1 tv_camera~l1 x00000001 )
( capture_pictures~l1 why~l1 tv_camera~l1 x00000001 )
( record~l1 functionality~l1 SLR~l1 x00000001 )
( record~l1 use~l1 SLR~l1 x00000001 )
( SLR~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 SLR~l1 x00000001 )
( photography~l1 activity~l1 SLR~l1 x00000001 )
( photographer~l1 agent~l1 SLR~l1 x00000001 )
( capture_pictures~l1 why~l1 SLR~l1 x00000001 )
( record~l1 functionality~l1 digital_camera~l1 x00000001 )
( record~l1 use~l1 digital_camera~l1 x00000001 )
( digital_camera~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 digital_camera~l1 x00000001 )
( photography~l1 activity~l1 digital_camera~l1 x00000001 )
( photographer~l1 agent~l1 digital_camera~l1 x00000001 )
( capture_pictures~l1 why~l1 digital_camera~l1 x00000001 )
( record~l1 functionality~l1 camcorder~l1 x00000001 )
( record~l1 use~l1 camcorder~l1 x00000001 )
( camcorder~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 camcorder~l1 x00000001 )
( photography~l1 activity~l1 camcorder~l1 x00000001 )
( photographer~l1 agent~l1 camcorder~l1 x00000001 )
( capture_pictures~l1 why~l1 camcorder~l1 x00000001 )
( record~l1 functionality~l1 movie_camera~l1 x00000001 )
( record~l1 use~l1 movie_camera~l1 x00000001 )
( movie_camera~l1 use_to~l1 record_images~l1 x00000001 )
( images~l1 object~l1 movie_camera~l1 x00000001 )
( photography~l1 activity~l1 movie_camera~l1 x00000001 )
( photographer~l1 agent~l1 movie_camera~l1 x00000001 )
( capture_pictures~l1 why~l1 movie_camera~l1 x00000001 )
( record~l1 functionality~l1 DVD_burner~l1 x00000001 )
( record~l1 use~l1 DVD_burner~l1 x00000001 )
( DVD_burner~l1 use_to~l1 record_sound~l1 x00000001 )
( sound~l1 object~l1 DVD_burner~l1 x00000001 )
( capture_sound~l1 why~l1 DVD_burner~l1 x00000001 )
( capture_sound~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 tape_recorder~l1 x00000001 )
( record~l1 use~l1 tape_recorder~l1 x00000001 )
( tape_recorder~l1 use_to~l1 record_sound~l1 x00000001 )
( sound~l1 object~l1 tape_recorder~l1 x00000001 )
( capture_sound~l1 why~l1 tape_recorder~l1 x00000001 )
( record~l1 functionality~l1 CD_burner~l1 x00000001 )
( record~l1 use~l1 CD_burner~l1 x00000001 )
( CD_burner~l1 use_to~l1 record_sound~l1 x00000001 )
( sound~l1 object~l1 CD_burner~l1 x00000001 )
( capture_sound~l1 why~l1 CD_burner~l1 x00000001 )
( record~l1 functionality~l1 answering_machine~l1 x00000001 )
( record~l1 use~l1 answering_machine~l1 x00000001 )
( answering_machine~l1 use_to~l1 record_sound~l1 x00000001 )
( sound~l1 object~l1 answering_machine~l1 x00000001 )
( capture_sound~l1 why~l1 answering_machine~l1 x00000001 )
( record~l1 functionality~l1 typewriter~l1 x00000001 )
( record~l1 use~l1 typewriter~l1 x00000001 )
( typewriter~l1 use_to~l1 record_words~l1 x00000001 )
( words~l1 object~l1 typewriter~l1 x00000001 )
( capture_thoughts~l1 why~l1 typewriter~l1 x00000001 )
( capture_thoughts~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 Dictaphone~l1 x00000001 )
( record~l1 use~l1 Dictaphone~l1 x00000001 )
( Dictaphone~l1 use_to~l1 record_words~l1 x00000001 )
( words~l1 object~l1 Dictaphone~l1 x00000001 )
( capture_thoughts~l1 why~l1 Dictaphone~l1 x00000001 )
( record~l1 functionality~l1 seismograph~l1 x00000001 )
( record~l1 use~l1 seismograph~l1 x00000001 )
( seismograph~l1 use_to~l1 record_tremors~l1 x00000001 )
( tremors~l1 object~l1 seismograph~l1 x00000001 )
( track_earthquakes~l1 why~l1 seismograph~l1 x00000001 )
( track_earthquakes~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 EKG~l1 x00000001 )
( record~l1 use~l1 EKG~l1 x00000001 )
( EKG~l1 use_to~l1 record_heartrate~l1 x00000001 )
( heartrate~l1 object~l1 EKG~l1 x00000001 )
( track_heart_behavior~l1 why~l1 EKG~l1 x00000001 )
( track_heart_behavior~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 electrocardiograph~l1 x00000001 )
( record~l1 use~l1 electrocardiograph~l1 x00000001 )
( electrocardiograph~l1 use_to~l1 record_heartrate~l1 x00000001 )
( heartrate~l1 object~l1 electrocardiograph~l1 x00000001 )
( track_heart_behavior~l1 why~l1 electrocardiograph~l1 x00000001 )
( record~l1 functionality~l1 ECG~l1 x00000001 )
( record~l1 use~l1 ECG~l1 x00000001 )
( ECG~l1 use_to~l1 record_heartrate~l1 x00000001 )
( heartrate~l1 object~l1 ECG~l1 x00000001 )
( track_heart_behavior~l1 why~l1 ECG~l1 x00000001 )
( record~l1 functionality~l1 EEG~l1 x00000001 )
( record~l1 use~l1 EEG~l1 x00000001 )
( EEG~l1 use_to~l1 record_brainwaves~l1 x00000001 )
( brainwaves~l1 object~l1 EEG~l1 x00000001 )
( track_brain_behavior~l1 why~l1 EEG~l1 x00000001 )
( track_brain_behavior~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 electroencephalograph~l1 x00000001 )
( record~l1 use~l1 electroencephalograph~l1 x00000001 )
( electroencephalograph~l1 use_to~l1 record_brainwaves~l1 x00000001 )
( brainwaves~l1 object~l1 electroencephalograph~l1 x00000001 )
( track_brain_behavior~l1 why~l1 electroencephalograph~l1 x00000001 )
( record~l1 functionality~l1 diary~l1 x00000001 )
( record~l1 use~l1 diary~l1 x00000001 )
( diary~l1 use_to~l1 record_words~l1 x00000001 )
( words~l1 object~l1 diary~l1 x00000001 )
( write_one_'s_words~l1 why~l1 diary~l1 x00000001 )
( write_one_'s_words~l1 ~tool verify~l1 x00000001 )
( record~l1 functionality~l1 notebook~l1 x00000001 )
( record~l1 use~l1 notebook~l1 x00000001 )
( notebook~l1 use_to~l1 record_words~l1 x00000001 )
( words~l1 object~l1 notebook~l1 x00000001 )
( write_one_'s_words~l1 why~l1 notebook~l1 x00000001 )
( record~l1 functionality~l1 journal~l1 x00000001 )
( record~l1 use~l1 journal~l1 x00000001 )
( journal~l1 use_to~l1 record_words~l1 x00000001 )
( words~l1 object~l1 journal~l1 x00000001 )
( write_one_'s_words~l1 why~l1 journal~l1 x00000001 )
( clean~l1 functionality~l1 floss~l1 x00000001 )
( clean~l1 use~l1 floss~l1 x00000001 )
( floss~l1 use_to~l1 clean_teeth~l1 x00000001 )
( teeth~l1 object~l1 floss~l1 x00000001 )
( grooming~l1 activity~l1 floss~l1 x00000001 )
( bathroom~l1 where~l1 floss~l1 x00000001 )
( avoid_tooth_decay~l1 why~l1 floss~l1 x00000001 )
( avoid_tooth_decay~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 toothbrush~l1 x00000001 )
( clean~l1 use~l1 toothbrush~l1 x00000001 )
( toothbrush~l1 use_to~l1 clean_teeth~l1 x00000001 )
( teeth~l1 object~l1 toothbrush~l1 x00000001 )
( grooming~l1 activity~l1 toothbrush~l1 x00000001 )
( bathroom~l1 where~l1 toothbrush~l1 x00000001 )
( avoid_tooth_decay~l1 why~l1 toothbrush~l1 x00000001 )
( clean~l1 functionality~l1 dental_floss~l1 x00000001 )
( clean~l1 use~l1 dental_floss~l1 x00000001 )
( dental_floss~l1 use_to~l1 clean_teeth~l1 x00000001 )
( teeth~l1 object~l1 dental_floss~l1 x00000001 )
( grooming~l1 activity~l1 dental_floss~l1 x00000001 )
( bathroom~l1 where~l1 dental_floss~l1 x00000001 )
( avoid_tooth_decay~l1 why~l1 dental_floss~l1 x00000001 )
( clean~l1 functionality~l1 rake~n~l1 x00000001 )
( gather~l1 use~l1 rake~n~l1 x00000001 )
( rake~n~l1 use_to~l1 gather_leaves~l1 x00000001 )
( leaves~l1 object~l1 rake~n~l1 x00000001 )
( gardening~l1 activity~l1 rake~n~l1 x00000001 )
( gardener~l1 agent~l1 rake~n~l1 x00000001 )
( garden~l1 where~l1 rake~n~l1 x00000001 )
( make_a_compost_pile~l1 why~l1 rake~n~l1 x00000001 )
( make_a_compost_pile~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 towel~l1 x00000001 )
( dry~l1 use~l1 towel~l1 x00000001 )
( towel~l1 use_to~l1 dry_body~l1 x00000001 )
( body~l1 object~l1 towel~l1 x00000001 )
( grooming~l1 activity~l1 towel~l1 x00000001 )
( bathroom~l1 where~l1 towel~l1 x00000001 )
( remove_water_after_bath~l1 why~l1 towel~l1 x00000001 )
( remove_water_after_bath~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 washcloth~l1 x00000001 )
( wash~l1 use~l1 washcloth~l1 x00000001 )
( washcloth~l1 use_to~l1 wash_face~l1 x00000001 )
( face~l1 object~l1 washcloth~l1 x00000001 )
( grooming~l1 activity~l1 washcloth~l1 x00000001 )
( bathroom~l1 where~l1 washcloth~l1 x00000001 )
( look_clean~l1 why~l1 washcloth~l1 x00000001 )
( look_clean~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 face_cloth~l1 x00000001 )
( wash~l1 use~l1 face_cloth~l1 x00000001 )
( face_cloth~l1 use_to~l1 wash_face~l1 x00000001 )
( face~l1 object~l1 face_cloth~l1 x00000001 )
( grooming~l1 activity~l1 face_cloth~l1 x00000001 )
( bathroom~l1 where~l1 face_cloth~l1 x00000001 )
( look_clean~l1 why~l1 face_cloth~l1 x00000001 )
( clean~l1 functionality~l1 paper_towel~l1 x00000001 )
( dry~l1 use~l1 paper_towel~l1 x00000001 )
( paper_towel~l1 use_to~l1 dry_dishes~l1 x00000001 )
( dishes~l1 object~l1 paper_towel~l1 x00000001 )
( cleaning~l1 activity~l1 paper_towel~l1 x00000001 )
( kitchen~l1 where~l1 paper_towel~l1 x00000001 )
( remove_water_from_plates~l1 why~l1 paper_towel~l1 x00000001 )
( remove_water_from_plates~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 dish_towel~l1 x00000001 )
( dry~l1 use~l1 dish_towel~l1 x00000001 )
( dish_towel~l1 use_to~l1 dry_dishes~l1 x00000001 )
( dishes~l1 object~l1 dish_towel~l1 x00000001 )
( cleaning~l1 activity~l1 dish_towel~l1 x00000001 )
( kitchen~l1 where~l1 dish_towel~l1 x00000001 )
( remove_water_from_plates~l1 why~l1 dish_towel~l1 x00000001 )
( towel~l1 use_to~l1 dry_hands~l1 x00000001 )
( hands~l1 object~l1 towel~l1 x00000001 )
( remove_water_from_hands~l1 why~l1 towel~l1 x00000001 )
( remove_water_from_hands~l1 ~tool verify~l1 x00000001 )
( clean~l1 functionality~l1 napkin~l1 x00000001 )
( dry~l1 use~l1 napkin~l1 x00000001 )
( napkin~l1 use_to~l1 dry_hands~l1 x00000001 )
( hands~l1 object~l1 napkin~l1 x00000001 )
( grooming~l1 activity~l1 napkin~l1 x00000001 )
( bathroom~l1 where~l1 napkin~l1 x00000001 )
( remove_water_from_hands~l1 why~l1 napkin~l1 x00000001 )
( clean~l1 functionality~l1 hand_towel~l1 x00000001 )
( dry~l1 use~l1 hand_towel~l1 x00000001 )
( hand_towel~l1 use_to~l1 dry_hands~l1 x00000001 )
( hands~l1 object~l1 hand_towel~l1 x00000001 )
( grooming~l1 activity~l1 hand_towel~l1 x00000001 )
( bathroom~l1 where~l1 hand_towel~l1 x00000001 )
( remove_water_from_hands~l1 why~l1 hand_towel~l1 x00000001 )
( clean~l1 functionality~l1 rag~l1 x00000001 )
( dry~l1 use~l1 rag~l1 x00000001 )
( rag~l1 use_to~l1 dry_hands~l1 x00000001 )
( hands~l1 object~l1 rag~l1 x00000001 )
( grooming~l1 activity~l1 rag~l1 x00000001 )
( bathroom~l1 where~l1 rag~l1 x00000001 )
( remove_water_from_hands~l1 why~l1 rag~l1 x00000001 )
( clean~l1 functionality~l1 brush~n~l1 x00000001 )
( scrub~l1 use~l1 brush~n~l1 x00000001 )
( brush~n~l1 use_to~l1 scrub_something~l1 x00000001 )
( something~l1 object~l1 brush~n~l1 x00000001 )
( cleaning~l1 activity~l1 brush~n~l1 x00000001 )
( remove_dirt~l1 why~l1 brush~n~l1 x00000001 )
( clean~l1 functionality~l1 shower~l1 x00000001 )
( clean~l1 use~l1 shower~l1 x00000001 )
( shower~l1 use_to~l1 clean_body~l1 x00000001 )
( body~l1 object~l1 shower~l1 x00000001 )
( remove_dirt~l1 why~l1 shower~l1 x00000001 )
( clean~l1 functionality~l1 bidet~l1 x00000001 )
( clean~l1 use~l1 bidet~l1 x00000001 )
( bidet~l1 use_to~l1 clean_body~l1 x00000001 )
( body~l1 object~l1 bidet~l1 x00000001 )
( remove_dirt~l1 why~l1 bidet~l1 x00000001 )
( clean~l1 functionality~l1 sink~l1 x00000001 )
( clean~l1 use~l1 sink~l1 x00000001 )
( sink~l1 use_to~l1 clean_body~l1 x00000001 )
( body~l1 object~l1 sink~l1 x00000001 )
( remove_dirt~l1 why~l1 sink~l1 x00000001 )
( clean~l1 functionality~l1 tub~l1 x00000001 )
( clean~l1 use~l1 tub~l1 x00000001 )
( tub~l1 use_to~l1 clean_body~l1 x00000001 )
( body~l1 object~l1 tub~l1 x00000001 )
( remove_dirt~l1 why~l1 tub~l1 x00000001 )
( clean~l1 functionality~l1 bathtub~l1 x00000001 )
( clean~l1 use~l1 bathtub~l1 x00000001 )
( bathtub~l1 use_to~l1 clean_body~l1 x00000001 )
( body~l1 object~l1 bathtub~l1 x00000001 )
( remove_dirt~l1 why~l1 bathtub~l1 x00000001 )
( clean~l1 functionality~l1 broom~l1 x00000001 )
( clean~l1 use~l1 broom~l1 x00000001 )
( broom~l1 use_to~l1 clean_floor~l1 x00000001 )
( floor~l1 object~l1 broom~l1 x00000001 )
( cleaning~l1 activity~l1 broom~l1 x00000001 )
( maid~l1 agent~l1 broom~l1 x00000001 )
( remove_dirt~l1 why~l1 broom~l1 x00000001 )
( clean~l1 functionality~l1 mop~n~l1 x00000001 )
( clean~l1 use~l1 mop~n~l1 x00000001 )
( mop~n~l1 use_to~l1 clean_floor~l1 x00000001 )
( floor~l1 object~l1 mop~n~l1 x00000001 )
( cleaning~l1 activity~l1 mop~n~l1 x00000001 )
( maid~l1 agent~l1 mop~n~l1 x00000001 )
( remove_dirt~l1 why~l1 mop~n~l1 x00000001 )
( clean~l1 functionality~l1 scrub_brush~l1 x00000001 )
( clean~l1 use~l1 scrub_brush~l1 x00000001 )
( scrub_brush~l1 use_to~l1 clean_floor~l1 x00000001 )
( floor~l1 object~l1 scrub_brush~l1 x00000001 )
( cleaning~l1 activity~l1 scrub_brush~l1 x00000001 )
( maid~l1 agent~l1 scrub_brush~l1 x00000001 )
( remove_dirt~l1 why~l1 scrub_brush~l1 x00000001 )
( control~l1 functionality~l1 mouse~l1 x00000001 )
( control~l1 use~l1 mouse~l1 x00000001 )
( mouse~l1 use_to~l1 control_computers~l1 x00000001 )
( computers~l1 object~l1 mouse~l1 x00000001 )
( computing~l1 activity~l1 mouse~l1 x00000001 )
( office~l1 where~l1 mouse~l1 x00000001 )
( make_computers_useful~l1 why~l1 mouse~l1 x00000001 )
( make_computers_useful~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 straight_edge~l1 x00000001 )
( guide~l1 use~l1 straight_edge~l1 x00000001 )
( straight_edge~l1 use_to~l1 guide_pencil~l1 x00000001 )
( pencil~l1 object~l1 straight_edge~l1 x00000001 )
( drafting~l1 activity~l1 straight_edge~l1 x00000001 )
( architect~l1 agent~l1 straight_edge~l1 x00000001 )
( office~l1 where~l1 straight_edge~l1 x00000001 )
( make_a_straight_line~l1 why~l1 straight_edge~l1 x00000001 )
( make_a_straight_line~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 ruler~l1 x00000001 )
( guide~l1 use~l1 ruler~l1 x00000001 )
( ruler~l1 use_to~l1 guide_pencil~l1 x00000001 )
( pencil~l1 object~l1 ruler~l1 x00000001 )
( drafting~l1 activity~l1 ruler~l1 x00000001 )
( architect~l1 agent~l1 ruler~l1 x00000001 )
( office~l1 where~l1 ruler~l1 x00000001 )
( make_a_straight_line~l1 why~l1 ruler~l1 x00000001 )
( control~l1 functionality~l1 compass~l1 x00000001 )
( guide~l1 use~l1 compass~l1 x00000001 )
( compass~l1 use_to~l1 guide_pencil~l1 x00000001 )
( pencil~l1 object~l1 compass~l1 x00000001 )
( drafting~l1 activity~l1 compass~l1 x00000001 )
( architect~l1 agent~l1 compass~l1 x00000001 )
( office~l1 where~l1 compass~l1 x00000001 )
( draw_a_circle~l1 why~l1 compass~l1 x00000001 )
( draw_a_circle~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 brush~n~l1 x00000001 )
( align~l1 use~l1 brush~n~l1 x00000001 )
( brush~n~l1 use_to~l1 align_hair~l1 x00000001 )
( hair~l1 object~l1 brush~n~l1 x00000001 )
( grooming~l1 activity~l1 brush~n~l1 x00000001 )
( bathroom~l1 where~l1 brush~n~l1 x00000001 )
( create_an_attractive_appearance~l1 why~l1 brush~n~l1 x00000001 )
( create_an_attractive_appearance~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 comb~n~l1 x00000001 )
( align~l1 use~l1 comb~n~l1 x00000001 )
( comb~n~l1 use_to~l1 align_hair~l1 x00000001 )
( hair~l1 object~l1 comb~n~l1 x00000001 )
( grooming~l1 activity~l1 comb~n~l1 x00000001 )
( bathroom~l1 where~l1 comb~n~l1 x00000001 )
( create_an_attractive_appearance~l1 why~l1 comb~n~l1 x00000001 )
( control~l1 functionality~l1 hair_brush~l1 x00000001 )
( align~l1 use~l1 hair_brush~l1 x00000001 )
( hair_brush~l1 use_to~l1 align_hair~l1 x00000001 )
( hair~l1 object~l1 hair_brush~l1 x00000001 )
( grooming~l1 activity~l1 hair_brush~l1 x00000001 )
( bathroom~l1 where~l1 hair_brush~l1 x00000001 )
( create_an_attractive_appearance~l1 why~l1 hair_brush~l1 x00000001 )
( control~l1 functionality~l1 level~n~l1 x00000001 )
( guide~l1 use~l1 level~n~l1 x00000001 )
( level~n~l1 use_to~l1 guide_installation~l1 x00000001 )
( installation~l1 object~l1 level~n~l1 x00000001 )
( construction~l1 activity~l1 level~n~l1 x00000001 )
( builder~l1 agent~l1 level~n~l1 x00000001 )
( building~l1 where~l1 level~n~l1 x00000001 )
( align_things~l1 why~l1 level~n~l1 x00000001 )
( align_things~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 clamp~n~l1 x00000001 )
( hold~l1 use~l1 clamp~n~l1 x00000001 )
( clamp~n~l1 use_to~l1 hold_objects~l1 x00000001 )
( objects~l1 object~l1 clamp~n~l1 x00000001 )
( carpentry~l1 activity~l1 clamp~n~l1 x00000001 )
( carpenter~l1 agent~l1 clamp~n~l1 x00000001 )
( workshop~l1 where~l1 clamp~n~l1 x00000001 )
( keep_objects_immobile~l1 why~l1 clamp~n~l1 x00000001 )
( keep_objects_immobile~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 holdfast~l1 x00000001 )
( hold~l1 use~l1 holdfast~l1 x00000001 )
( holdfast~l1 use_to~l1 hold_objects~l1 x00000001 )
( objects~l1 object~l1 holdfast~l1 x00000001 )
( carpentry~l1 activity~l1 holdfast~l1 x00000001 )
( carpenter~l1 agent~l1 holdfast~l1 x00000001 )
( workshop~l1 where~l1 holdfast~l1 x00000001 )
( keep_objects_immobile~l1 why~l1 holdfast~l1 x00000001 )
( control~l1 functionality~l1 vise~l1 x00000001 )
( hold~l1 use~l1 vise~l1 x00000001 )
( vise~l1 use_to~l1 hold_objects~l1 x00000001 )
( objects~l1 object~l1 vise~l1 x00000001 )
( carpentry~l1 activity~l1 vise~l1 x00000001 )
( carpenter~l1 agent~l1 vise~l1 x00000001 )
( workshop~l1 where~l1 vise~l1 x00000001 )
( keep_objects_immobile~l1 why~l1 vise~l1 x00000001 )
( control~l1 functionality~l1 bridge~n~l1 x00000001 )
( guide~l1 use~l1 bridge~n~l1 x00000001 )
( bridge~n~l1 use_to~l1 guide_people~l1 x00000001 )
( people~l1 object~l1 bridge~n~l1 x00000001 )
( provide_path_over_obstructions_like_water~l1 why~l1 bridge~n~l1 x00000001 )
( provide_path_over_obstructions_like_water~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 footbridge~l1 x00000001 )
( guide~l1 use~l1 footbridge~l1 x00000001 )
( footbridge~l1 use_to~l1 guide_people~l1 x00000001 )
( people~l1 object~l1 footbridge~l1 x00000001 )
( provide_path_over_obstructions_like_water~l1 why~l1 footbridge~l1 x00000001 )
( control~l1 functionality~l1 brake~n~l1 x00000001 )
( stop~l1 use~l1 brake~n~l1 x00000001 )
( brake~n~l1 use_to~l1 stop_motion~l1 x00000001 )
( motion~l1 object~l1 brake~n~l1 x00000001 )
( stop_a_moving_vehicle~l1 why~l1 brake~n~l1 x00000001 )
( stop_a_moving_vehicle~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 handbrake~l1 x00000001 )
( stop~l1 use~l1 handbrake~l1 x00000001 )
( handbrake~l1 use_to~l1 stop_motion~l1 x00000001 )
( motion~l1 object~l1 handbrake~l1 x00000001 )
( stop_a_moving_vehicle~l1 why~l1 handbrake~l1 x00000001 )
( control~l1 functionality~l1 braces~l1 x00000001 )
( guide~l1 use~l1 braces~l1 x00000001 )
( braces~l1 use_to~l1 guide_teeth~l1 x00000001 )
( teeth~l1 object~l1 braces~l1 x00000001 )
( adjust_teeth_alignment~l1 why~l1 braces~l1 x00000001 )
( adjust_teeth_alignment~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 suspender~l1 x00000001 )
( hold~l1 use~l1 suspender~l1 x00000001 )
( suspender~l1 use_to~l1 hold_pants~l1 x00000001 )
( pants~l1 object~l1 suspender~l1 x00000001 )
( keep_pants_up~l1 why~l1 suspender~l1 x00000001 )
( keep_pants_up~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 cover~n~l1 x00000001 )
( restrict~l1 use~l1 cover~n~l1 x00000001 )
( cover~n~l1 use_to~l1 restrict_items~l1 x00000001 )
( items~l1 object~l1 cover~n~l1 x00000001 )
( keep_stuff_in~l1 why~l1 cover~n~l1 x00000001 )
( keep_stuff_in~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 lid~l1 x00000001 )
( restrict~l1 use~l1 lid~l1 x00000001 )
( lid~l1 use_to~l1 restrict_items~l1 x00000001 )
( items~l1 object~l1 lid~l1 x00000001 )
( keep_stuff_in~l1 why~l1 lid~l1 x00000001 )
( control~l1 functionality~l1 switch~n~l1 x00000001 )
( enable~l1 use~l1 switch~n~l1 x00000001 )
( switch~n~l1 use_to~l1 enable_power~l1 x00000001 )
( power~l1 object~l1 switch~n~l1 x00000001 )
( turn_something_on_or_off~l1 why~l1 switch~n~l1 x00000001 )
( turn_something_on_or_off~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 key~n~l1 x00000001 )
( control~l1 use~l1 key~n~l1 x00000001 )
( key~n~l1 use_to~l1 control_lock~l1 x00000001 )
( lock~l1 object~l1 key~n~l1 x00000001 )
( lock_or_unlock_a_door~l1 why~l1 key~n~l1 x00000001 )
( lock_or_unlock_a_door~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 handcuff~n~l1 x00000001 )
( secure~l1 use~l1 handcuff~n~l1 x00000001 )
( handcuff~n~l1 use_to~l1 secure_prisoner~l1 x00000001 )
( prisoner~l1 object~l1 handcuff~n~l1 x00000001 )
( police~l1 agent~l1 handcuff~n~l1 x00000001 )
( restrain_a_criminal~l1 why~l1 handcuff~n~l1 x00000001 )
( restrain_a_criminal~l1 ~tool verify~l1 x00000001 )
( control~l1 functionality~l1 harness~l1 x00000001 )
( guide~l1 use~l1 harness~l1 x00000001 )
( harness~l1 use_to~l1 guide_animal~l1 x00000001 )
( animal~l1 object~l1 harness~l1 x00000001 )
( control_an_animal~l1 why~l1 harness~l1 x00000001 )
( control_an_animal~l1 ~tool verify~l1 x00000001 )
( communicate~l1 functionality~l1 pen~n~l1 x00000001 )
( write~l1 use~l1 pen~n~l1 x00000001 )
( pen~n~l1 use_to~l1 write_words~l1 x00000001 )
( words~l1 object~l1 pen~n~l1 x00000001 )
( writing~l1 activity~l1 pen~n~l1 x00000001 )
( author~l1 agent~l1 pen~n~l1 x00000001 )
( study~l1 where~l1 pen~n~l1 x00000001 )
( communicate_ideas~l1 why~l1 pen~n~l1 x00000001 )
( communicate_ideas~l1 ~tool verify~l1 x00000001 )
( communicate~l1 functionality~l1 chalk~l1 x00000001 )
( write~l1 use~l1 chalk~l1 x00000001 )
( chalk~l1 use_to~l1 write_words~l1 x00000001 )
( words~l1 object~l1 chalk~l1 x00000001 )
( writing~l1 activity~l1 chalk~l1 x00000001 )
( author~l1 agent~l1 chalk~l1 x00000001 )
( study~l1 where~l1 chalk~l1 x00000001 )
( communicate_ideas~l1 why~l1 chalk~l1 x00000001 )
( communicate~l1 functionality~l1 pencil~l1 x00000001 )
( write~l1 use~l1 pencil~l1 x00000001 )
( pencil~l1 use_to~l1 write_words~l1 x00000001 )
( words~l1 object~l1 pencil~l1 x00000001 )
( writing~l1 activity~l1 pencil~l1 x00000001 )
( author~l1 agent~l1 pencil~l1 x00000001 )
( study~l1 where~l1 pencil~l1 x00000001 )
( communicate_ideas~l1 why~l1 pencil~l1 x00000001 )
( communicate~l1 functionality~l1 cellphone~l1 x00000001 )
( transmit~l1 use~l1 cellphone~l1 x00000001 )
( cellphone~l1 use_to~l1 transmit_speech~l1 x00000001 )
( speech~l1 object~l1 cellphone~l1 x00000001 )
( talking~l1 activity~l1 cellphone~l1 x00000001 )
( person~l1 agent~l1 cellphone~l1 x00000001 )
( converse~l1 why~l1 cellphone~l1 x00000001 )
( converse~l1 ~tool verify~l1 x00000001 )
( communicate~l1 functionality~l1 phone~l1 x00000001 )
( transmit~l1 use~l1 phone~l1 x00000001 )
( phone~l1 use_to~l1 transmit_speech~l1 x00000001 )
( speech~l1 object~l1 phone~l1 x00000001 )
( talking~l1 activity~l1 phone~l1 x00000001 )
( person~l1 agent~l1 phone~l1 x00000001 )
( converse~l1 why~l1 phone~l1 x00000001 )
( communicate~l1 functionality~l1 telephone~l1 x00000001 )
( transmit~l1 use~l1 telephone~l1 x00000001 )
( telephone~l1 use_to~l1 transmit_speech~l1 x00000001 )
( speech~l1 object~l1 telephone~l1 x00000001 )
( talking~l1 activity~l1 telephone~l1 x00000001 )
( person~l1 agent~l1 telephone~l1 x00000001 )
( converse~l1 why~l1 telephone~l1 x00000001 )
( communicate~l1 functionality~l1 computer~l1 x00000001 )
( surf~l1 use~l1 computer~l1 x00000001 )
( computer~l1 use_to~l1 surf_Internet~l1 x00000001 )
( Internet~l1 object~l1 computer~l1 x00000001 )
( researching~l1 activity~l1 computer~l1 x00000001 )
( office~l1 where~l1 computer~l1 x00000001 )
( find_out_information~l1 why~l1 computer~l1 x00000001 )
( find_out_information~l1 ~tool verify~l1 x00000001 )
( communicate~l1 functionality~l1 Google~l1 x00000001 )
( search~l1 use~l1 Google~l1 x00000001 )
( Google~l1 use_to~l1 search_Internet~l1 x00000001 )
( Internet~l1 object~l1 Google~l1 x00000001 )
( researching~l1 activity~l1 Google~l1 x00000001 )
( office~l1 where~l1 Google~l1 x00000001 )
( find_information~l1 why~l1 Google~l1 x00000001 )
( find_information~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 tape_measure~l1 x00000001 )
( measure~l1 use~l1 tape_measure~l1 x00000001 )
( tape_measure~l1 use_to~l1 measure_distance~l1 x00000001 )
( distance~l1 object~l1 tape_measure~l1 x00000001 )
( carpentry~l1 activity~l1 tape_measure~l1 x00000001 )
( carpenter~l1 agent~l1 tape_measure~l1 x00000001 )
( garage~l1 where~l1 tape_measure~l1 x00000001 )
( cut_something_to_a_particular_size~l1 why~l1 tape_measure~l1 x00000001 )
( cut_something_to_a_particular_size~l1 ~tool verify~l1 x00000001 )
( workshop~l1 where~l1 tape_measure~l1 x00000001 )
( measure~l1 functionality~l1 timer~l1 x00000001 )
( measure~l1 use~l1 timer~l1 x00000001 )
( timer~l1 use_to~l1 measure_time~l1 x00000001 )
( time~l1 object~l1 timer~l1 x00000001 )
( cooking~l1 activity~l1 timer~l1 x00000001 )
( chef~l1 agent~l1 timer~l1 x00000001 )
( kitchen~l1 where~l1 timer~l1 x00000001 )
( avoid_overcooking~l1 why~l1 timer~l1 x00000001 )
( avoid_overcooking~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 egg_timer~l1 x00000001 )
( measure~l1 use~l1 egg_timer~l1 x00000001 )
( egg_timer~l1 use_to~l1 measure_time~l1 x00000001 )
( time~l1 object~l1 egg_timer~l1 x00000001 )
( cooking~l1 activity~l1 egg_timer~l1 x00000001 )
( chef~l1 agent~l1 egg_timer~l1 x00000001 )
( kitchen~l1 where~l1 egg_timer~l1 x00000001 )
( avoid_overcooking~l1 why~l1 egg_timer~l1 x00000001 )
( measure~l1 functionality~l1 clock~n~l1 x00000001 )
( measure~l1 use~l1 clock~n~l1 x00000001 )
( clock~n~l1 use_to~l1 measure_time~l1 x00000001 )
( time~l1 object~l1 clock~n~l1 x00000001 )
( know_the_time~l1 why~l1 clock~n~l1 x00000001 )
( know_the_time~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 watch~n~l1 x00000001 )
( measure~l1 use~l1 watch~n~l1 x00000001 )
( watch~n~l1 use_to~l1 measure_time~l1 x00000001 )
( time~l1 object~l1 watch~n~l1 x00000001 )
( know_the_time~l1 why~l1 watch~n~l1 x00000001 )
( measure~l1 functionality~l1 thermometer~l1 x00000001 )
( measure~l1 use~l1 thermometer~l1 x00000001 )
( thermometer~l1 use_to~l1 measure_temperature~l1 x00000001 )
( temperature~l1 object~l1 thermometer~l1 x00000001 )
( cooking~l1 activity~l1 thermometer~l1 x00000001 )
( cook~l1 agent~l1 thermometer~l1 x00000001 )
( kitchen~l1 where~l1 thermometer~l1 x00000001 )
( cook_to_temperature~l1 why~l1 thermometer~l1 x00000001 )
( cook_to_temperature~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 caliper~l1 x00000001 )
( measure~l1 use~l1 caliper~l1 x00000001 )
( caliper~l1 use_to~l1 measure_distance~l1 x00000001 )
( distance~l1 object~l1 caliper~l1 x00000001 )
( carpentry~l1 activity~l1 caliper~l1 x00000001 )
( carpenter~l1 agent~l1 caliper~l1 x00000001 )
( workshop~l1 where~l1 caliper~l1 x00000001 )
( measure_small_distance~l1 why~l1 caliper~l1 x00000001 )
( measure_small_distance~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 gauge~l1 x00000001 )
( measure~l1 use~l1 gauge~l1 x00000001 )
( gauge~l1 use_to~l1 measure_distance~l1 x00000001 )
( distance~l1 object~l1 gauge~l1 x00000001 )
( carpentry~l1 activity~l1 gauge~l1 x00000001 )
( carpenter~l1 agent~l1 gauge~l1 x00000001 )
( workshop~l1 where~l1 gauge~l1 x00000001 )
( measure_small_distance~l1 why~l1 gauge~l1 x00000001 )
( measure~l1 functionality~l1 rule~n~l1 x00000001 )
( measure~l1 use~l1 rule~n~l1 x00000001 )
( rule~n~l1 use_to~l1 measure_distance~l1 x00000001 )
( distance~l1 object~l1 rule~n~l1 x00000001 )
( carpentry~l1 activity~l1 rule~n~l1 x00000001 )
( carpenter~l1 agent~l1 rule~n~l1 x00000001 )
( workshop~l1 where~l1 rule~n~l1 x00000001 )
( measure_small_distance~l1 why~l1 rule~n~l1 x00000001 )
( measure~l1 functionality~l1 ruler~l1 x00000001 )
( measure~l1 use~l1 ruler~l1 x00000001 )
( ruler~l1 use_to~l1 measure_distance~l1 x00000001 )
( distance~l1 object~l1 ruler~l1 x00000001 )
( carpentry~l1 activity~l1 ruler~l1 x00000001 )
( carpenter~l1 agent~l1 ruler~l1 x00000001 )
( workshop~l1 where~l1 ruler~l1 x00000001 )
( measure_small_distance~l1 why~l1 ruler~l1 x00000001 )
( measure~l1 functionality~l1 plumb_bob~l1 x00000001 )
( measure~l1 use~l1 plumb_bob~l1 x00000001 )
( plumb_bob~l1 use_to~l1 measure_angle~l1 x00000001 )
( angle~l1 object~l1 plumb_bob~l1 x00000001 )
( carpentry~l1 activity~l1 plumb_bob~l1 x00000001 )
( carpenter~l1 agent~l1 plumb_bob~l1 x00000001 )
( workshop~l1 where~l1 plumb_bob~l1 x00000001 )
( find_level_to_ground~l1 why~l1 plumb_bob~l1 x00000001 )
( find_level_to_ground~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 level~l1 x00000001 )
( measure~l1 use~l1 level~l1 x00000001 )
( level~l1 use_to~l1 measure_angle~l1 x00000001 )
( angle~l1 object~l1 level~l1 x00000001 )
( carpentry~l1 activity~l1 level~l1 x00000001 )
( carpenter~l1 agent~l1 level~l1 x00000001 )
( workshop~l1 where~l1 level~l1 x00000001 )
( find_level_to_ground~l1 why~l1 level~l1 x00000001 )
( measure~l1 functionality~l1 square~l1 x00000001 )
( measure~l1 use~l1 square~l1 x00000001 )
( square~l1 use_to~l1 measure_angle~l1 x00000001 )
( angle~l1 object~l1 square~l1 x00000001 )
( carpentry~l1 activity~l1 square~l1 x00000001 )
( carpenter~l1 agent~l1 square~l1 x00000001 )
( workshop~l1 where~l1 square~l1 x00000001 )
( find_level_to_ground~l1 why~l1 square~l1 x00000001 )
( measure~l1 functionality~l1 straight_edge~l1 x00000001 )
( draw~l1 use~l1 straight_edge~l1 x00000001 )
( straight_edge~l1 use_to~l1 draw_line~l1 x00000001 )
( line~l1 object~l1 straight_edge~l1 x00000001 )
( carpentry~l1 activity~l1 straight_edge~l1 x00000001 )
( carpenter~l1 agent~l1 straight_edge~l1 x00000001 )
( workshop~l1 where~l1 straight_edge~l1 x00000001 )
( draw_a_straight_line~l1 why~l1 straight_edge~l1 x00000001 )
( draw_a_straight_line~l1 ~tool verify~l1 x00000001 )
( measure~l1 functionality~l1 spectroscope~l1 x00000001 )
( measure~l1 use~l1 spectroscope~l1 x00000001 )
( spectroscope~l1 use_to~l1 measure_light~l1 x00000001 )
( light~l1 object~l1 spectroscope~l1 x00000001 )
( physics~l1 activity~l1 spectroscope~l1 x00000001 )
( physicist~l1 agent~l1 spectroscope~l1 x00000001 )
( laboratory~l1 where~l1 spectroscope~l1 x00000001 )
( measure_light_spectra~l1 why~l1 spectroscope~l1 x00000001 )
( measure_light_spectra~l1 ~tool verify~l1 x00000001 )
( mark~l1 functionality~l1 chalk_line~l1 x00000001 )
( mark~l1 use~l1 chalk_line~l1 x00000001 )
( chalk_line~l1 use_to~l1 mark_boundary~l1 x00000001 )
( boundary~l1 object~l1 chalk_line~l1 x00000001 )
( carpentry~l1 activity~l1 chalk_line~l1 x00000001 )
( carpenter~l1 agent~l1 chalk_line~l1 x00000001 )
( workshop~l1 where~l1 chalk_line~l1 x00000001 )
( note_where_to_cut~l1 why~l1 chalk_line~l1 x00000001 )
( note_where_to_cut~l1 ~tool verify~l1 x00000001 )
( mark~l1 functionality~l1 monument~l1 x00000001 )
( mark~l1 use~l1 monument~l1 x00000001 )
( monument~l1 use_to~l1 mark_event~l1 x00000001 )
( event~l1 object~l1 monument~l1 x00000001 )
( celebrate_an_event~l1 why~l1 monument~l1 x00000001 )
( celebrate_an_event~l1 ~tool verify~l1 x00000001 )
( mark~l1 functionality~l1 landmark~l1 x00000001 )
( mark~l1 use~l1 landmark~l1 x00000001 )
( landmark~l1 use_to~l1 mark_event~l1 x00000001 )
( event~l1 object~l1 landmark~l1 x00000001 )
( celebrate_an_event~l1 why~l1 landmark~l1 x00000001 )
( mark~l1 functionality~l1 memorial~l1 x00000001 )
( mark~l1 use~l1 memorial~l1 x00000001 )
( memorial~l1 use_to~l1 mark_event~l1 x00000001 )
( event~l1 object~l1 memorial~l1 x00000001 )
( celebrate_an_event~l1 why~l1 memorial~l1 x00000001 )
( marker~l1 functionality~l1 buoy~l1 x00000001 )
( guide~l1 use~l1 buoy~l1 x00000001 )
( buoy~l1 use_to~l1 guide_ships~l1 x00000001 )
( ships~l1 object~l1 buoy~l1 x00000001 )
( navigation~l1 activity~l1 buoy~l1 x00000001 )
( sailor~l1 agent~l1 buoy~l1 x00000001 )
( ship~l1 where~l1 buoy~l1 x00000001 )
( avoid_crashing_onto_shore~l1 why~l1 buoy~l1 x00000001 )
( avoid_crashing_onto_shore~l1 ~tool verify~l1 x00000001 )
( marker~l1 functionality~l1 lighthouse~l1 x00000001 )
( guide~l1 use~l1 lighthouse~l1 x00000001 )
( lighthouse~l1 use_to~l1 guide_ships~l1 x00000001 )
( ships~l1 object~l1 lighthouse~l1 x00000001 )
( navigation~l1 activity~l1 lighthouse~l1 x00000001 )
( sailor~l1 agent~l1 lighthouse~l1 x00000001 )
( ship~l1 where~l1 lighthouse~l1 x00000001 )
( avoid_crashing_onto_shore~l1 why~l1 lighthouse~l1 x00000001 )
( penetrate~l1 functionality~l1 scissors~l1 x00000001 )
( cut~l1 use~l1 scissors~l1 x00000001 )
( scissors~l1 use_to~l1 cut_paper~l1 x00000001 )
( paper~l1 object~l1 scissors~l1 x00000001 )
( art~l1 activity~l1 scissors~l1 x00000001 )
( child~l1 agent~l1 scissors~l1 x00000001 )
( classroom~l1 where~l1 scissors~l1 x00000001 )
( shape_paper_pieces~l1 why~l1 scissors~l1 x00000001 )
( shape_paper_pieces~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 back_saw~l1 x00000001 )
( cut~l1 use~l1 back_saw~l1 x00000001 )
( back_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 back_saw~l1 x00000001 )
( carpentry~l1 activity~l1 back_saw~l1 x00000001 )
( carpenter~l1 agent~l1 back_saw~l1 x00000001 )
( workshop~l1 where~l1 back_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 back_saw~l1 x00000001 )
( frame_a_building~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 band_saw~l1 x00000001 )
( cut~l1 use~l1 band_saw~l1 x00000001 )
( band_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 band_saw~l1 x00000001 )
( carpentry~l1 activity~l1 band_saw~l1 x00000001 )
( carpenter~l1 agent~l1 band_saw~l1 x00000001 )
( workshop~l1 where~l1 band_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 band_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 bandsaw~l1 x00000001 )
( cut~l1 use~l1 bandsaw~l1 x00000001 )
( bandsaw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 bandsaw~l1 x00000001 )
( carpentry~l1 activity~l1 bandsaw~l1 x00000001 )
( carpenter~l1 agent~l1 bandsaw~l1 x00000001 )
( workshop~l1 where~l1 bandsaw~l1 x00000001 )
( frame_a_building~l1 why~l1 bandsaw~l1 x00000001 )
( penetrate~l1 functionality~l1 table_saw~l1 x00000001 )
( cut~l1 use~l1 table_saw~l1 x00000001 )
( table_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 table_saw~l1 x00000001 )
( carpentry~l1 activity~l1 table_saw~l1 x00000001 )
( carpenter~l1 agent~l1 table_saw~l1 x00000001 )
( workshop~l1 where~l1 table_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 table_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 saw~n~l1 x00000001 )
( cut~l1 use~l1 saw~n~l1 x00000001 )
( saw~n~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 saw~n~l1 x00000001 )
( carpentry~l1 activity~l1 saw~n~l1 x00000001 )
( carpenter~l1 agent~l1 saw~n~l1 x00000001 )
( workshop~l1 where~l1 saw~n~l1 x00000001 )
( frame_a_building~l1 why~l1 saw~n~l1 x00000001 )
( penetrate~l1 functionality~l1 saber_saw~l1 x00000001 )
( cut~l1 use~l1 saber_saw~l1 x00000001 )
( saber_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 saber_saw~l1 x00000001 )
( carpentry~l1 activity~l1 saber_saw~l1 x00000001 )
( carpenter~l1 agent~l1 saber_saw~l1 x00000001 )
( workshop~l1 where~l1 saber_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 saber_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 router~l1 x00000001 )
( cut~l1 use~l1 router~l1 x00000001 )
( router~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 router~l1 x00000001 )
( carpentry~l1 activity~l1 router~l1 x00000001 )
( carpenter~l1 agent~l1 router~l1 x00000001 )
( workshop~l1 where~l1 router~l1 x00000001 )
( frame_a_building~l1 why~l1 router~l1 x00000001 )
( penetrate~l1 functionality~l1 chain_saw~l1 x00000001 )
( cut~l1 use~l1 chain_saw~l1 x00000001 )
( chain_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 chain_saw~l1 x00000001 )
( carpentry~l1 activity~l1 chain_saw~l1 x00000001 )
( carpenter~l1 agent~l1 chain_saw~l1 x00000001 )
( workshop~l1 where~l1 chain_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 chain_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 circular_saw~l1 x00000001 )
( cut~l1 use~l1 circular_saw~l1 x00000001 )
( circular_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 circular_saw~l1 x00000001 )
( carpentry~l1 activity~l1 circular_saw~l1 x00000001 )
( carpenter~l1 agent~l1 circular_saw~l1 x00000001 )
( workshop~l1 where~l1 circular_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 circular_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 coping_saw~l1 x00000001 )
( cut~l1 use~l1 coping_saw~l1 x00000001 )
( coping_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 coping_saw~l1 x00000001 )
( carpentry~l1 activity~l1 coping_saw~l1 x00000001 )
( carpenter~l1 agent~l1 coping_saw~l1 x00000001 )
( workshop~l1 where~l1 coping_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 coping_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 hack_saw~l1 x00000001 )
( cut~l1 use~l1 hack_saw~l1 x00000001 )
( hack_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 hack_saw~l1 x00000001 )
( carpentry~l1 activity~l1 hack_saw~l1 x00000001 )
( carpenter~l1 agent~l1 hack_saw~l1 x00000001 )
( workshop~l1 where~l1 hack_saw~l1 x00000001 )
( frame_a_building~l1 why~l1 hack_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 hacksaw~l1 x00000001 )
( cut~l1 use~l1 hacksaw~l1 x00000001 )
( hacksaw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 hacksaw~l1 x00000001 )
( carpentry~l1 activity~l1 hacksaw~l1 x00000001 )
( carpenter~l1 agent~l1 hacksaw~l1 x00000001 )
( workshop~l1 where~l1 hacksaw~l1 x00000001 )
( frame_a_building~l1 why~l1 hacksaw~l1 x00000001 )
( penetrate~l1 functionality~l1 knife~n~l1 x00000001 )
( cut~l1 use~l1 knife~n~l1 x00000001 )
( knife~n~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 knife~n~l1 x00000001 )
( eating~l1 activity~l1 knife~n~l1 x00000001 )
( person~l1 agent~l1 knife~n~l1 x00000001 )
( dining_room~l1 where~l1 knife~n~l1 x00000001 )
( make_food_fit_in_your_mouth~l1 why~l1 knife~n~l1 x00000001 )
( make_food_fit_in_your_mouth~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 blade~l1 x00000001 )
( cut~l1 use~l1 blade~l1 x00000001 )
( blade~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 blade~l1 x00000001 )
( cut_things~l1 why~l1 blade~l1 x00000001 )
( cut_things~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 jackknife~l1 x00000001 )
( cut~l1 use~l1 jackknife~l1 x00000001 )
( jackknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 jackknife~l1 x00000001 )
( cut_things~l1 why~l1 jackknife~l1 x00000001 )
( penetrate~l1 functionality~l1 switchblade~l1 x00000001 )
( cut~l1 use~l1 switchblade~l1 x00000001 )
( switchblade~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 switchblade~l1 x00000001 )
( cut_things~l1 why~l1 switchblade~l1 x00000001 )
( penetrate~l1 functionality~l1 rawknife~l1 x00000001 )
( cut~l1 use~l1 rawknife~l1 x00000001 )
( rawknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 rawknife~l1 x00000001 )
( cut_things~l1 why~l1 rawknife~l1 x00000001 )
( penetrate~l1 functionality~l1 drawknife~l1 x00000001 )
( cut~l1 use~l1 drawknife~l1 x00000001 )
( drawknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 drawknife~l1 x00000001 )
( cut_things~l1 why~l1 drawknife~l1 x00000001 )
( penetrate~l1 functionality~l1 paperknife~l1 x00000001 )
( cut~l1 use~l1 paperknife~l1 x00000001 )
( paperknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 paperknife~l1 x00000001 )
( cut_things~l1 why~l1 paperknife~l1 x00000001 )
( penetrate~l1 functionality~l1 penknife~l1 x00000001 )
( cut~l1 use~l1 penknife~l1 x00000001 )
( penknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 penknife~l1 x00000001 )
( cut_things~l1 why~l1 penknife~l1 x00000001 )
( penetrate~l1 functionality~l1 pocketknife~l1 x00000001 )
( cut~l1 use~l1 pocketknife~l1 x00000001 )
( pocketknife~l1 use_to~l1 cut_objects~l1 x00000001 )
( objects~l1 object~l1 pocketknife~l1 x00000001 )
( cut_things~l1 why~l1 pocketknife~l1 x00000001 )
( penetrate~l1 functionality~l1 sword~l1 x00000001 )
( cut~l1 use~l1 sword~l1 x00000001 )
( sword~l1 use_to~l1 cut_grain~l1 x00000001 )
( grain~l1 object~l1 sword~l1 x00000001 )
( farming~l1 activity~l1 sword~l1 x00000001 )
( farmer~l1 agent~l1 sword~l1 x00000001 )
( field~l1 where~l1 sword~l1 x00000001 )
( harvest_grain~l1 why~l1 sword~l1 x00000001 )
( harvest_grain~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 broadsword~l1 x00000001 )
( cut~l1 use~l1 broadsword~l1 x00000001 )
( broadsword~l1 use_to~l1 cut_grain~l1 x00000001 )
( grain~l1 object~l1 broadsword~l1 x00000001 )
( farming~l1 activity~l1 broadsword~l1 x00000001 )
( farmer~l1 agent~l1 broadsword~l1 x00000001 )
( field~l1 where~l1 broadsword~l1 x00000001 )
( harvest_grain~l1 why~l1 broadsword~l1 x00000001 )
( penetrate~l1 functionality~l1 scythe~l1 x00000001 )
( cut~l1 use~l1 scythe~l1 x00000001 )
( scythe~l1 use_to~l1 cut_grain~l1 x00000001 )
( grain~l1 object~l1 scythe~l1 x00000001 )
( farming~l1 activity~l1 scythe~l1 x00000001 )
( farmer~l1 agent~l1 scythe~l1 x00000001 )
( field~l1 where~l1 scythe~l1 x00000001 )
( harvest_grain~l1 why~l1 scythe~l1 x00000001 )
( penetrate~l1 functionality~l1 sickle~l1 x00000001 )
( cut~l1 use~l1 sickle~l1 x00000001 )
( sickle~l1 use_to~l1 cut_grain~l1 x00000001 )
( grain~l1 object~l1 sickle~l1 x00000001 )
( farming~l1 activity~l1 sickle~l1 x00000001 )
( farmer~l1 agent~l1 sickle~l1 x00000001 )
( field~l1 where~l1 sickle~l1 x00000001 )
( harvest_grain~l1 why~l1 sickle~l1 x00000001 )
( penetrate~l1 functionality~l1 cookie_cutter~l1 x00000001 )
( cut~l1 use~l1 cookie_cutter~l1 x00000001 )
( cookie_cutter~l1 use_to~l1 cut_dough~l1 x00000001 )
( dough~l1 object~l1 cookie_cutter~l1 x00000001 )
( cooking~l1 activity~l1 cookie_cutter~l1 x00000001 )
( cook~l1 agent~l1 cookie_cutter~l1 x00000001 )
( kitchen~l1 where~l1 cookie_cutter~l1 x00000001 )
( make_cookies~l1 why~l1 cookie_cutter~l1 x00000001 )
( make_cookies~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 ax~n~l1 x00000001 )
( cut~l1 use~l1 ax~n~l1 x00000001 )
( ax~n~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 ax~n~l1 x00000001 )
( lumbering~l1 activity~l1 ax~n~l1 x00000001 )
( lumberman~l1 agent~l1 ax~n~l1 x00000001 )
( woods~l1 where~l1 ax~n~l1 x00000001 )
( make_lumber~l1 why~l1 ax~n~l1 x00000001 )
( make_lumber~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 axe~l1 x00000001 )
( cut~l1 use~l1 axe~l1 x00000001 )
( axe~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 axe~l1 x00000001 )
( lumbering~l1 activity~l1 axe~l1 x00000001 )
( lumberman~l1 agent~l1 axe~l1 x00000001 )
( woods~l1 where~l1 axe~l1 x00000001 )
( make_lumber~l1 why~l1 axe~l1 x00000001 )
( penetrate~l1 functionality~l1 hatchet~l1 x00000001 )
( cut~l1 use~l1 hatchet~l1 x00000001 )
( hatchet~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 hatchet~l1 x00000001 )
( lumbering~l1 activity~l1 hatchet~l1 x00000001 )
( lumberman~l1 agent~l1 hatchet~l1 x00000001 )
( woods~l1 where~l1 hatchet~l1 x00000001 )
( make_lumber~l1 why~l1 hatchet~l1 x00000001 )
( penetrate~l1 functionality~l1 machete~l1 x00000001 )
( cut~l1 use~l1 machete~l1 x00000001 )
( machete~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 machete~l1 x00000001 )
( lumbering~l1 activity~l1 machete~l1 x00000001 )
( lumberman~l1 agent~l1 machete~l1 x00000001 )
( woods~l1 where~l1 machete~l1 x00000001 )
( make_lumber~l1 why~l1 machete~l1 x00000001 )
( penetrate~l1 functionality~l1 crosscut_saw~l1 x00000001 )
( cut~l1 use~l1 crosscut_saw~l1 x00000001 )
( crosscut_saw~l1 use_to~l1 cut_wood~l1 x00000001 )
( wood~l1 object~l1 crosscut_saw~l1 x00000001 )
( lumbering~l1 activity~l1 crosscut_saw~l1 x00000001 )
( lumberman~l1 agent~l1 crosscut_saw~l1 x00000001 )
( woods~l1 where~l1 crosscut_saw~l1 x00000001 )
( make_lumber~l1 why~l1 crosscut_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 baller~l1 x00000001 )
( cut~l1 use~l1 baller~l1 x00000001 )
( baller~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 baller~l1 x00000001 )
( cooking~l1 activity~l1 baller~l1 x00000001 )
( chef~l1 agent~l1 baller~l1 x00000001 )
( kitchen~l1 where~l1 baller~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 baller~l1 x00000001 )
( prepare_food_to_eat~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 chopper~l1 x00000001 )
( cut~l1 use~l1 chopper~l1 x00000001 )
( chopper~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 chopper~l1 x00000001 )
( cooking~l1 activity~l1 chopper~l1 x00000001 )
( chef~l1 agent~l1 chopper~l1 x00000001 )
( kitchen~l1 where~l1 chopper~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 chopper~l1 x00000001 )
( penetrate~l1 functionality~l1 cutter~l1 x00000001 )
( cut~l1 use~l1 cutter~l1 x00000001 )
( cutter~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 cutter~l1 x00000001 )
( cooking~l1 activity~l1 cutter~l1 x00000001 )
( chef~l1 agent~l1 cutter~l1 x00000001 )
( kitchen~l1 where~l1 cutter~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 cutter~l1 x00000001 )
( penetrate~l1 functionality~l1 cleaver~l1 x00000001 )
( cut~l1 use~l1 cleaver~l1 x00000001 )
( cleaver~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 cleaver~l1 x00000001 )
( cooking~l1 activity~l1 cleaver~l1 x00000001 )
( chef~l1 agent~l1 cleaver~l1 x00000001 )
( kitchen~l1 where~l1 cleaver~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 cleaver~l1 x00000001 )
( cookie_cutter~l1 use_to~l1 cut_cookie_dough~l1 x00000001 )
( cookie_dough~l1 object~l1 cookie_cutter~l1 x00000001 )
( baking~l1 activity~l1 cookie_cutter~l1 x00000001 )
( chef~l1 agent~l1 cookie_cutter~l1 x00000001 )
( prepare_cookies~l1 why~l1 cookie_cutter~l1 x00000001 )
( prepare_cookies~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 corer~l1 x00000001 )
( cut~l1 use~l1 corer~l1 x00000001 )
( corer~l1 use_to~l1 cut_fruit~l1 x00000001 )
( fruit~l1 object~l1 corer~l1 x00000001 )
( baking~l1 activity~l1 corer~l1 x00000001 )
( chef~l1 agent~l1 corer~l1 x00000001 )
( kitchen~l1 where~l1 corer~l1 x00000001 )
( prepare_apples~l1 why~l1 corer~l1 x00000001 )
( prepare_apples~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 needle~l1 x00000001 )
( puncture~l1 use~l1 needle~l1 x00000001 )
( needle~l1 use_to~l1 puncture_cloth~l1 x00000001 )
( cloth~l1 object~l1 needle~l1 x00000001 )
( sewing~l1 activity~l1 needle~l1 x00000001 )
( seamstress~l1 agent~l1 needle~l1 x00000001 )
( sew_with_thread~l1 why~l1 needle~l1 x00000001 )
( sew_with_thread~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 grater~l1 x00000001 )
( cut~l1 use~l1 grater~l1 x00000001 )
( grater~l1 use_to~l1 cut_cheese~l1 x00000001 )
( cheese~l1 object~l1 grater~l1 x00000001 )
( cooking~l1 activity~l1 grater~l1 x00000001 )
( chef~l1 agent~l1 grater~l1 x00000001 )
( kitchen~l1 where~l1 grater~l1 x00000001 )
( prepare_cheese~l1 why~l1 grater~l1 x00000001 )
( prepare_cheese~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 mandoline~l1 x00000001 )
( cut~l1 use~l1 mandoline~l1 x00000001 )
( mandoline~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 mandoline~l1 x00000001 )
( cooking~l1 activity~l1 mandoline~l1 x00000001 )
( chef~l1 agent~l1 mandoline~l1 x00000001 )
( kitchen~l1 where~l1 mandoline~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 mandoline~l1 x00000001 )
( penetrate~l1 functionality~l1 mincer~l1 x00000001 )
( cut~l1 use~l1 mincer~l1 x00000001 )
( mincer~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 mincer~l1 x00000001 )
( cooking~l1 activity~l1 mincer~l1 x00000001 )
( chef~l1 agent~l1 mincer~l1 x00000001 )
( kitchen~l1 where~l1 mincer~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 mincer~l1 x00000001 )
( penetrate~l1 functionality~l1 peeler~l1 x00000001 )
( cut~l1 use~l1 peeler~l1 x00000001 )
( peeler~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 peeler~l1 x00000001 )
( cooking~l1 activity~l1 peeler~l1 x00000001 )
( chef~l1 agent~l1 peeler~l1 x00000001 )
( kitchen~l1 where~l1 peeler~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 peeler~l1 x00000001 )
( penetrate~l1 functionality~l1 shredded~l1 x00000001 )
( cut~l1 use~l1 shredded~l1 x00000001 )
( shredded~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 shredded~l1 x00000001 )
( cooking~l1 activity~l1 shredded~l1 x00000001 )
( chef~l1 agent~l1 shredded~l1 x00000001 )
( kitchen~l1 where~l1 shredded~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 shredded~l1 x00000001 )
( penetrate~l1 functionality~l1 slicer~l1 x00000001 )
( cut~l1 use~l1 slicer~l1 x00000001 )
( slicer~l1 use_to~l1 cut_food~l1 x00000001 )
( food~l1 object~l1 slicer~l1 x00000001 )
( cooking~l1 activity~l1 slicer~l1 x00000001 )
( chef~l1 agent~l1 slicer~l1 x00000001 )
( kitchen~l1 where~l1 slicer~l1 x00000001 )
( prepare_food_to_eat~l1 why~l1 slicer~l1 x00000001 )
( penetrate~l1 functionality~l1 snip~n~l1 x00000001 )
( cut~l1 use~l1 snip~n~l1 x00000001 )
( snip~n~l1 use_to~l1 cut_metal~l1 x00000001 )
( metal~l1 object~l1 snip~n~l1 x00000001 )
( remove_a_chain~l1 why~l1 snip~n~l1 x00000001 )
( remove_a_chain~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 tin_snip~l1 x00000001 )
( cut~l1 use~l1 tin_snip~l1 x00000001 )
( tin_snip~l1 use_to~l1 cut_metal~l1 x00000001 )
( metal~l1 object~l1 tin_snip~l1 x00000001 )
( remove_a_chain~l1 why~l1 tin_snip~l1 x00000001 )
( penetrate~l1 functionality~l1 bolt_cutter~l1 x00000001 )
( cut~l1 use~l1 bolt_cutter~l1 x00000001 )
( bolt_cutter~l1 use_to~l1 cut_metal~l1 x00000001 )
( metal~l1 object~l1 bolt_cutter~l1 x00000001 )
( remove_a_chain~l1 why~l1 bolt_cutter~l1 x00000001 )
( penetrate~l1 functionality~l1 pipe_cutter~l1 x00000001 )
( cut~l1 use~l1 pipe_cutter~l1 x00000001 )
( pipe_cutter~l1 use_to~l1 cut_metal~l1 x00000001 )
( metal~l1 object~l1 pipe_cutter~l1 x00000001 )
( remove_a_chain~l1 why~l1 pipe_cutter~l1 x00000001 )
( penetrate~l1 functionality~l1 glass_cutter~l1 x00000001 )
( cut~l1 use~l1 glass_cutter~l1 x00000001 )
( glass_cutter~l1 use_to~l1 cut_glass~l1 x00000001 )
( glass~l1 object~l1 glass_cutter~l1 x00000001 )
( make_a_window~l1 why~l1 glass_cutter~l1 x00000001 )
( make_a_window~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 shear~n~l1 x00000001 )
( cut~l1 use~l1 shear~n~l1 x00000001 )
( shear~n~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 shear~n~l1 x00000001 )
( gardening~l1 activity~l1 shear~n~l1 x00000001 )
( gardener~l1 agent~l1 shear~n~l1 x00000001 )
( garden~l1 where~l1 shear~n~l1 x00000001 )
( cut_plants~l1 why~l1 shear~n~l1 x00000001 )
( cut_plants~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 loper~l1 x00000001 )
( cut~l1 use~l1 loper~l1 x00000001 )
( loper~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 loper~l1 x00000001 )
( gardening~l1 activity~l1 loper~l1 x00000001 )
( gardener~l1 agent~l1 loper~l1 x00000001 )
( garden~l1 where~l1 loper~l1 x00000001 )
( cut_plants~l1 why~l1 loper~l1 x00000001 )
( penetrate~l1 functionality~l1 pruner~l1 x00000001 )
( cut~l1 use~l1 pruner~l1 x00000001 )
( pruner~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 pruner~l1 x00000001 )
( gardening~l1 activity~l1 pruner~l1 x00000001 )
( gardener~l1 agent~l1 pruner~l1 x00000001 )
( garden~l1 where~l1 pruner~l1 x00000001 )
( cut_plants~l1 why~l1 pruner~l1 x00000001 )
( penetrate~l1 functionality~l1 tree_saw~l1 x00000001 )
( cut~l1 use~l1 tree_saw~l1 x00000001 )
( tree_saw~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 tree_saw~l1 x00000001 )
( gardening~l1 activity~l1 tree_saw~l1 x00000001 )
( gardener~l1 agent~l1 tree_saw~l1 x00000001 )
( garden~l1 where~l1 tree_saw~l1 x00000001 )
( cut_plants~l1 why~l1 tree_saw~l1 x00000001 )
( penetrate~l1 functionality~l1 trimmer~l1 x00000001 )
( cut~l1 use~l1 trimmer~l1 x00000001 )
( trimmer~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 trimmer~l1 x00000001 )
( gardening~l1 activity~l1 trimmer~l1 x00000001 )
( gardener~l1 agent~l1 trimmer~l1 x00000001 )
( garden~l1 where~l1 trimmer~l1 x00000001 )
( cut_plants~l1 why~l1 trimmer~l1 x00000001 )
( penetrate~l1 functionality~l1 edge~n~l1 x00000001 )
( cut~l1 use~l1 edge~n~l1 x00000001 )
( edge~n~l1 use_to~l1 cut_branches~l1 x00000001 )
( branches~l1 object~l1 edge~n~l1 x00000001 )
( gardening~l1 activity~l1 edge~n~l1 x00000001 )
( gardener~l1 agent~l1 edge~n~l1 x00000001 )
( garden~l1 where~l1 edge~n~l1 x00000001 )
( cut_plants~l1 why~l1 edge~n~l1 x00000001 )
( penetrate~l1 functionality~l1 shaver~l1 x00000001 )
( cut~l1 use~l1 shaver~l1 x00000001 )
( shaver~l1 use_to~l1 cut_hair~l1 x00000001 )
( hair~l1 object~l1 shaver~l1 x00000001 )
( grooming~l1 activity~l1 shaver~l1 x00000001 )
( bathroom~l1 where~l1 shaver~l1 x00000001 )
( cut_off_whiskers~l1 why~l1 shaver~l1 x00000001 )
( cut_off_whiskers~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 electric_razor~l1 x00000001 )
( cut~l1 use~l1 electric_razor~l1 x00000001 )
( electric_razor~l1 use_to~l1 cut_hair~l1 x00000001 )
( hair~l1 object~l1 electric_razor~l1 x00000001 )
( grooming~l1 activity~l1 electric_razor~l1 x00000001 )
( bathroom~l1 where~l1 electric_razor~l1 x00000001 )
( cut_off_whiskers~l1 why~l1 electric_razor~l1 x00000001 )
( penetrate~l1 functionality~l1 razor~l1 x00000001 )
( cut~l1 use~l1 razor~l1 x00000001 )
( razor~l1 use_to~l1 cut_hair~l1 x00000001 )
( hair~l1 object~l1 razor~l1 x00000001 )
( grooming~l1 activity~l1 razor~l1 x00000001 )
( bathroom~l1 where~l1 razor~l1 x00000001 )
( cut_off_whiskers~l1 why~l1 razor~l1 x00000001 )
( penetrate~l1 functionality~l1 tile_cutter~l1 x00000001 )
( cut~l1 use~l1 tile_cutter~l1 x00000001 )
( tile_cutter~l1 use_to~l1 cut_tile~l1 x00000001 )
( tile~l1 object~l1 tile_cutter~l1 x00000001 )
( construction~l1 activity~l1 tile_cutter~l1 x00000001 )
( buider~l1 agent~l1 tile_cutter~l1 x00000001 )
( buiding_site~l1 where~l1 tile_cutter~l1 x00000001 )
( lay_a_bathroom_floor~l1 why~l1 tile_cutter~l1 x00000001 )
( lay_a_bathroom_floor~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 wire_stripper~l1 x00000001 )
( cut~l1 use~l1 wire_stripper~l1 x00000001 )
( wire_stripper~l1 use_to~l1 cut_wire~l1 x00000001 )
( wire~l1 object~l1 wire_stripper~l1 x00000001 )
( wiring~l1 activity~l1 wire_stripper~l1 x00000001 )
( electrician~l1 agent~l1 wire_stripper~l1 x00000001 )
( buiding_site~l1 where~l1 wire_stripper~l1 x00000001 )
( prepare_wire_for_wiring~l1 why~l1 wire_stripper~l1 x00000001 )
( prepare_wire_for_wiring~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 shreader~l1 x00000001 )
( cut~l1 use~l1 shreader~l1 x00000001 )
( shreader~l1 use_to~l1 cut_paper~l1 x00000001 )
( paper~l1 object~l1 shreader~l1 x00000001 )
( destroy_documents~l1 why~l1 shreader~l1 x00000001 )
( destroy_documents~l1 ~tool verify~l1 x00000001 )
( cut~l1 functionality~l1 opener~l1 x00000001 )
( open~l1 use~l1 opener~l1 x00000001 )
( opener~l1 use_to~l1 open_bottle~l1 x00000001 )
( bottle~l1 object~l1 opener~l1 x00000001 )
( access_contents~l1 why~l1 opener~l1 x00000001 )
( access_contents~l1 ~tool verify~l1 x00000001 )
( cut~l1 functionality~l1 corkscrew~l1 x00000001 )
( open~l1 use~l1 corkscrew~l1 x00000001 )
( corkscrew~l1 use_to~l1 open_bottle~l1 x00000001 )
( bottle~l1 object~l1 corkscrew~l1 x00000001 )
( access_contents~l1 why~l1 corkscrew~l1 x00000001 )
( cut~l1 functionality~l1 churchkey~l1 x00000001 )
( open~l1 use~l1 churchkey~l1 x00000001 )
( churchkey~l1 use_to~l1 open_bottle~l1 x00000001 )
( bottle~l1 object~l1 churchkey~l1 x00000001 )
( access_contents~l1 why~l1 churchkey~l1 x00000001 )
( cut~l1 functionality~l1 point~n~l1 x00000001 )
( bore~l1 use~l1 point~n~l1 x00000001 )
( point~n~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 point~n~l1 x00000001 )
( builder~l1 activity~l1 point~n~l1 x00000001 )
( construction~l1 agent~l1 point~n~l1 x00000001 )
( building_site~l1 where~l1 point~n~l1 x00000001 )
( make_hole_in_material~l1 why~l1 point~n~l1 x00000001 )
( make_hole_in_material~l1 ~tool verify~l1 x00000001 )
( cut~l1 functionality~l1 press~n~l1 x00000001 )
( bore~l1 use~l1 press~n~l1 x00000001 )
( press~n~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 press~n~l1 x00000001 )
( builder~l1 activity~l1 press~n~l1 x00000001 )
( construction~l1 agent~l1 press~n~l1 x00000001 )
( building_site~l1 where~l1 press~n~l1 x00000001 )
( make_hole_in_material~l1 why~l1 press~n~l1 x00000001 )
( cut~l1 functionality~l1 punch~n~l1 x00000001 )
( bore~l1 use~l1 punch~n~l1 x00000001 )
( punch~n~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 punch~n~l1 x00000001 )
( builder~l1 activity~l1 punch~n~l1 x00000001 )
( construction~l1 agent~l1 punch~n~l1 x00000001 )
( building_site~l1 where~l1 punch~n~l1 x00000001 )
( make_hole_in_material~l1 why~l1 punch~n~l1 x00000001 )
( cut~l1 functionality~l1 reamer~l1 x00000001 )
( bore~l1 use~l1 reamer~l1 x00000001 )
( reamer~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 reamer~l1 x00000001 )
( builder~l1 activity~l1 reamer~l1 x00000001 )
( construction~l1 agent~l1 reamer~l1 x00000001 )
( building_site~l1 where~l1 reamer~l1 x00000001 )
( make_hole_in_material~l1 why~l1 reamer~l1 x00000001 )
( cut~l1 functionality~l1 adze~l1 x00000001 )
( bore~l1 use~l1 adze~l1 x00000001 )
( adze~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 adze~l1 x00000001 )
( builder~l1 activity~l1 adze~l1 x00000001 )
( construction~l1 agent~l1 adze~l1 x00000001 )
( building_site~l1 where~l1 adze~l1 x00000001 )
( make_hole_in_material~l1 why~l1 adze~l1 x00000001 )
( cut~l1 functionality~l1 awl~l1 x00000001 )
( bore~l1 use~l1 awl~l1 x00000001 )
( awl~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 awl~l1 x00000001 )
( builder~l1 activity~l1 awl~l1 x00000001 )
( construction~l1 agent~l1 awl~l1 x00000001 )
( building_site~l1 where~l1 awl~l1 x00000001 )
( make_hole_in_material~l1 why~l1 awl~l1 x00000001 )
( cut~l1 functionality~l1 brace~l1 x00000001 )
( bore~l1 use~l1 brace~l1 x00000001 )
( brace~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 brace~l1 x00000001 )
( builder~l1 activity~l1 brace~l1 x00000001 )
( construction~l1 agent~l1 brace~l1 x00000001 )
( building_site~l1 where~l1 brace~l1 x00000001 )
( make_hole_in_material~l1 why~l1 brace~l1 x00000001 )
( cut~l1 functionality~l1 chisel~l1 x00000001 )
( bore~l1 use~l1 chisel~l1 x00000001 )
( chisel~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 chisel~l1 x00000001 )
( builder~l1 activity~l1 chisel~l1 x00000001 )
( construction~l1 agent~l1 chisel~l1 x00000001 )
( building_site~l1 where~l1 chisel~l1 x00000001 )
( make_hole_in_material~l1 why~l1 chisel~l1 x00000001 )
( cut~l1 functionality~l1 drill~n~l1 x00000001 )
( bore~l1 use~l1 drill~n~l1 x00000001 )
( drill~n~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 drill~n~l1 x00000001 )
( builder~l1 activity~l1 drill~n~l1 x00000001 )
( construction~l1 agent~l1 drill~n~l1 x00000001 )
( building_site~l1 where~l1 drill~n~l1 x00000001 )
( make_hole_in_material~l1 why~l1 drill~n~l1 x00000001 )
( cut~l1 functionality~l1 driver~l1 x00000001 )
( bore~l1 use~l1 driver~l1 x00000001 )
( driver~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 driver~l1 x00000001 )
( builder~l1 activity~l1 driver~l1 x00000001 )
( construction~l1 agent~l1 driver~l1 x00000001 )
( building_site~l1 where~l1 driver~l1 x00000001 )
( make_hole_in_material~l1 why~l1 driver~l1 x00000001 )
( cut~l1 functionality~l1 gimlet~l1 x00000001 )
( bore~l1 use~l1 gimlet~l1 x00000001 )
( gimlet~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 gimlet~l1 x00000001 )
( builder~l1 activity~l1 gimlet~l1 x00000001 )
( construction~l1 agent~l1 gimlet~l1 x00000001 )
( building_site~l1 where~l1 gimlet~l1 x00000001 )
( make_hole_in_material~l1 why~l1 gimlet~l1 x00000001 )
( cut~l1 functionality~l1 gouge~l1 x00000001 )
( bore~l1 use~l1 gouge~l1 x00000001 )
( gouge~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 gouge~l1 x00000001 )
( builder~l1 activity~l1 gouge~l1 x00000001 )
( construction~l1 agent~l1 gouge~l1 x00000001 )
( building_site~l1 where~l1 gouge~l1 x00000001 )
( make_hole_in_material~l1 why~l1 gouge~l1 x00000001 )
( cut~l1 functionality~l1 jig~l1 x00000001 )
( bore~l1 use~l1 jig~l1 x00000001 )
( jig~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 jig~l1 x00000001 )
( builder~l1 activity~l1 jig~l1 x00000001 )
( construction~l1 agent~l1 jig~l1 x00000001 )
( building_site~l1 where~l1 jig~l1 x00000001 )
( make_hole_in_material~l1 why~l1 jig~l1 x00000001 )
( cut~l1 functionality~l1 mattock~l1 x00000001 )
( bore~l1 use~l1 mattock~l1 x00000001 )
( mattock~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 mattock~l1 x00000001 )
( builder~l1 activity~l1 mattock~l1 x00000001 )
( construction~l1 agent~l1 mattock~l1 x00000001 )
( building_site~l1 where~l1 mattock~l1 x00000001 )
( make_hole_in_material~l1 why~l1 mattock~l1 x00000001 )
( cut~l1 functionality~l1 pneumatic_drill~l1 x00000001 )
( bore~l1 use~l1 pneumatic_drill~l1 x00000001 )
( pneumatic_drill~l1 use_to~l1 bore_hole~l1 x00000001 )
( hole~l1 object~l1 pneumatic_drill~l1 x00000001 )
( builder~l1 activity~l1 pneumatic_drill~l1 x00000001 )
( construction~l1 agent~l1 pneumatic_drill~l1 x00000001 )
( building_site~l1 where~l1 pneumatic_drill~l1 x00000001 )
( make_hole_in_material~l1 why~l1 pneumatic_drill~l1 x00000001 )
( cut~l1 functionality~l1 pickax~l1 x00000001 )
( make~l1 use~l1 pickax~l1 x00000001 )
( pickax~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 pickax~l1 x00000001 )
( gardener~l1 activity~l1 pickax~l1 x00000001 )
( gardening~l1 agent~l1 pickax~l1 x00000001 )
( garden~l1 where~l1 pickax~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 pickax~l1 x00000001 )
( make_hole_in_ground~l1 ~tool verify~l1 x00000001 )
( cut~l1 functionality~l1 pickaxe~l1 x00000001 )
( make~l1 use~l1 pickaxe~l1 x00000001 )
( pickaxe~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 pickaxe~l1 x00000001 )
( gardener~l1 activity~l1 pickaxe~l1 x00000001 )
( gardening~l1 agent~l1 pickaxe~l1 x00000001 )
( garden~l1 where~l1 pickaxe~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 pickaxe~l1 x00000001 )
( cut~l1 functionality~l1 shovel~n~l1 x00000001 )
( make~l1 use~l1 shovel~n~l1 x00000001 )
( shovel~n~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 shovel~n~l1 x00000001 )
( gardener~l1 activity~l1 shovel~n~l1 x00000001 )
( gardening~l1 agent~l1 shovel~n~l1 x00000001 )
( garden~l1 where~l1 shovel~n~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 shovel~n~l1 x00000001 )
( cut~l1 functionality~l1 spade~l1 x00000001 )
( make~l1 use~l1 spade~l1 x00000001 )
( spade~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 spade~l1 x00000001 )
( gardener~l1 activity~l1 spade~l1 x00000001 )
( gardening~l1 agent~l1 spade~l1 x00000001 )
( garden~l1 where~l1 spade~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 spade~l1 x00000001 )
( cut~l1 functionality~l1 auger~l1 x00000001 )
( make~l1 use~l1 auger~l1 x00000001 )
( auger~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 auger~l1 x00000001 )
( gardener~l1 activity~l1 auger~l1 x00000001 )
( gardening~l1 agent~l1 auger~l1 x00000001 )
( garden~l1 where~l1 auger~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 auger~l1 x00000001 )
( cut~l1 functionality~l1 digger~l1 x00000001 )
( make~l1 use~l1 digger~l1 x00000001 )
( digger~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 digger~l1 x00000001 )
( gardener~l1 activity~l1 digger~l1 x00000001 )
( gardening~l1 agent~l1 digger~l1 x00000001 )
( garden~l1 where~l1 digger~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 digger~l1 x00000001 )
( cut~l1 functionality~l1 hoe~n~l1 x00000001 )
( make~l1 use~l1 hoe~n~l1 x00000001 )
( hoe~n~l1 use_to~l1 make_hole~l1 x00000001 )
( hole~l1 object~l1 hoe~n~l1 x00000001 )
( gardener~l1 activity~l1 hoe~n~l1 x00000001 )
( gardening~l1 agent~l1 hoe~n~l1 x00000001 )
( garden~l1 where~l1 hoe~n~l1 x00000001 )
( make_hole_in_ground~l1 why~l1 hoe~n~l1 x00000001 )
( penetrate~l1 functionality~l1 corkscrew~n~l1 x00000001 )
( open~l1 use~l1 corkscrew~n~l1 x00000001 )
( corkscrew~n~l1 use_to~l1 open_wine_bottle~l1 x00000001 )
( wine_bottle~l1 object~l1 corkscrew~n~l1 x00000001 )
( drinking~l1 activity~l1 corkscrew~n~l1 x00000001 )
( kitchen~l1 where~l1 corkscrew~n~l1 x00000001 )
( get_wine_to_drink~l1 why~l1 corkscrew~n~l1 x00000001 )
( get_wine_to_drink~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 can_opener~l1 x00000001 )
( open~l1 use~l1 can_opener~l1 x00000001 )
( can_opener~l1 use_to~l1 open_can~l1 x00000001 )
( can~l1 object~l1 can_opener~l1 x00000001 )
( cooking~l1 activity~l1 can_opener~l1 x00000001 )
( chef~l1 agent~l1 can_opener~l1 x00000001 )
( kitchen~l1 where~l1 can_opener~l1 x00000001 )
( access_contents_of_can~l1 why~l1 can_opener~l1 x00000001 )
( access_contents_of_can~l1 ~tool verify~l1 x00000001 )
( penetrate~l1 functionality~l1 drill~n~l1 x00000001 )
( repair~l1 use~l1 drill~n~l1 x00000001 )
( drill~n~l1 use_to~l1 repair_tooth~l1 x00000001 )
( tooth~l1 object~l1 drill~n~l1 x00000001 )
( dentistry~l1 activity~l1 drill~n~l1 x00000001 )
( dentist~l1 agent~l1 drill~n~l1 x00000001 )
( dental_office~l1 where~l1 drill~n~l1 x00000001 )
( remove_a_tooth~l1 why~l1 drill~n~l1 x00000001 )
( remove_a_tooth~l1 ~tool verify~l1 x00000001 )
( remove~l1 use~l1 drill~n~l1 x00000001 )
( drill~n~l1 use_to~l1 remove_tooth~l1 x00000001 )
( fix~l1 use~l1 drill~n~l1 x00000001 )
( drill~n~l1 use_to~l1 fix_tooth~l1 x00000001 )
( fasten~l1 functionality~l1 welder~l1 x00000001 )
( fuse~l1 use~l1 welder~l1 x00000001 )
( welder~l1 use_to~l1 fuse_metal~l1 x00000001 )
( metal~l1 object~l1 welder~l1 x00000001 )
( plumbing~l1 activity~l1 welder~l1 x00000001 )
( plumber~l1 agent~l1 welder~l1 x00000001 )
( wall~l1 where~l1 welder~l1 x00000001 )
( join_pipes_together~l1 why~l1 welder~l1 x00000001 )
( join_pipes_together~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 riveter~l1 x00000001 )
( fuse~l1 use~l1 riveter~l1 x00000001 )
( riveter~l1 use_to~l1 fuse_metal~l1 x00000001 )
( metal~l1 object~l1 riveter~l1 x00000001 )
( plumbing~l1 activity~l1 riveter~l1 x00000001 )
( plumber~l1 agent~l1 riveter~l1 x00000001 )
( wall~l1 where~l1 riveter~l1 x00000001 )
( join_metal_together~l1 why~l1 riveter~l1 x00000001 )
( join_metal_together~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 pin~n~l1 x00000001 )
( close~l1 use~l1 pin~n~l1 x00000001 )
( pin~n~l1 use_to~l1 close_shirt~l1 x00000001 )
( shirt~l1 object~l1 pin~n~l1 x00000001 )
( grooming~l1 activity~l1 pin~n~l1 x00000001 )
( secure_a_shirt~l1 why~l1 pin~n~l1 x00000001 )
( secure_a_shirt~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 button~n~l1 x00000001 )
( close~l1 use~l1 button~n~l1 x00000001 )
( button~n~l1 use_to~l1 close_shirt~l1 x00000001 )
( shirt~l1 object~l1 button~n~l1 x00000001 )
( grooming~l1 activity~l1 button~n~l1 x00000001 )
( secure_a_shirt~l1 why~l1 button~n~l1 x00000001 )
( fasten~l1 functionality~l1 safety_pin~l1 x00000001 )
( close~l1 use~l1 safety_pin~l1 x00000001 )
( safety_pin~l1 use_to~l1 close_shirt~l1 x00000001 )
( shirt~l1 object~l1 safety_pin~l1 x00000001 )
( grooming~l1 activity~l1 safety_pin~l1 x00000001 )
( secure_a_shirt~l1 why~l1 safety_pin~l1 x00000001 )
( fasten~l1 functionality~l1 glue~n~l1 x00000001 )
( join~l1 use~l1 glue~n~l1 x00000001 )
( glue~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 glue~n~l1 x00000001 )
( art~l1 activity~l1 glue~n~l1 x00000001 )
( artist~l1 agent~l1 glue~n~l1 x00000001 )
( studio~l1 where~l1 glue~n~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 glue~n~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 paste~n~l1 x00000001 )
( join~l1 use~l1 paste~n~l1 x00000001 )
( paste~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 paste~n~l1 x00000001 )
( art~l1 activity~l1 paste~n~l1 x00000001 )
( artist~l1 agent~l1 paste~n~l1 x00000001 )
( studio~l1 where~l1 paste~n~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 paste~n~l1 x00000001 )
( fasten~l1 functionality~l1 tape~n~l1 x00000001 )
( join~l1 use~l1 tape~n~l1 x00000001 )
( tape~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 tape~n~l1 x00000001 )
( art~l1 activity~l1 tape~n~l1 x00000001 )
( artist~l1 agent~l1 tape~n~l1 x00000001 )
( studio~l1 where~l1 tape~n~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 tape~n~l1 x00000001 )
( fasten~l1 functionality~l1 scotch_tape~l1 x00000001 )
( join~l1 use~l1 scotch_tape~l1 x00000001 )
( scotch_tape~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 scotch_tape~l1 x00000001 )
( art~l1 activity~l1 scotch_tape~l1 x00000001 )
( artist~l1 agent~l1 scotch_tape~l1 x00000001 )
( studio~l1 where~l1 scotch_tape~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 scotch_tape~l1 x00000001 )
( fasten~l1 functionality~l1 adhesive~l1 x00000001 )
( join~l1 use~l1 adhesive~l1 x00000001 )
( adhesive~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 adhesive~l1 x00000001 )
( art~l1 activity~l1 adhesive~l1 x00000001 )
( artist~l1 agent~l1 adhesive~l1 x00000001 )
( studio~l1 where~l1 adhesive~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 adhesive~l1 x00000001 )
( fasten~l1 functionality~l1 chain~n~l1 x00000001 )
( join~l1 use~l1 chain~n~l1 x00000001 )
( chain~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 chain~n~l1 x00000001 )
( art~l1 activity~l1 chain~n~l1 x00000001 )
( artist~l1 agent~l1 chain~n~l1 x00000001 )
( studio~l1 where~l1 chain~n~l1 x00000001 )
( put_pictures_in_a_photo_album~l1 why~l1 chain~n~l1 x00000001 )
( fasten~l1 functionality~l1 screw~n~l1 x00000001 )
( join~l1 use~l1 screw~n~l1 x00000001 )
( screw~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 screw~n~l1 x00000001 )
( construction~l1 activity~l1 screw~n~l1 x00000001 )
( builder~l1 agent~l1 screw~n~l1 x00000001 )
( building_site~l1 where~l1 screw~n~l1 x00000001 )
( frame_steel_girders~l1 why~l1 screw~n~l1 x00000001 )
( frame_steel_girders~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 nail~n~l1 x00000001 )
( join~l1 use~l1 nail~n~l1 x00000001 )
( nail~n~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 nail~n~l1 x00000001 )
( construction~l1 activity~l1 nail~n~l1 x00000001 )
( builder~l1 agent~l1 nail~n~l1 x00000001 )
( building_site~l1 where~l1 nail~n~l1 x00000001 )
( frame_steel_girders~l1 why~l1 nail~n~l1 x00000001 )
( fasten~l1 functionality~l1 rivot~l1 x00000001 )
( join~l1 use~l1 rivot~l1 x00000001 )
( rivot~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 rivot~l1 x00000001 )
( construction~l1 activity~l1 rivot~l1 x00000001 )
( builder~l1 agent~l1 rivot~l1 x00000001 )
( building_site~l1 where~l1 rivot~l1 x00000001 )
( frame_steel_girders~l1 why~l1 rivot~l1 x00000001 )
( fasten~l1 functionality~l1 staple~n~l1 x00000001 )
( join~l1 use~l1 staple~n~l1 x00000001 )
( staple~n~l1 use_to~l1 join_paper~l1 x00000001 )
( paper~l1 object~l1 staple~n~l1 x00000001 )
( clerk~l1 agent~l1 staple~n~l1 x00000001 )
( office~l1 where~l1 staple~n~l1 x00000001 )
( hold_pieces_of_paper_together~l1 why~l1 staple~n~l1 x00000001 )
( hold_pieces_of_paper_together~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 paperclip~l1 x00000001 )
( join~l1 use~l1 paperclip~l1 x00000001 )
( paperclip~l1 use_to~l1 join_paper~l1 x00000001 )
( paper~l1 object~l1 paperclip~l1 x00000001 )
( clerk~l1 agent~l1 paperclip~l1 x00000001 )
( office~l1 where~l1 paperclip~l1 x00000001 )
( hold_pieces_of_paper_together~l1 why~l1 paperclip~l1 x00000001 )
( fasten~l1 functionality~l1 string~l1 x00000001 )
( join~l1 use~l1 string~l1 x00000001 )
( string~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 string~l1 x00000001 )
( tie_things_together~l1 why~l1 string~l1 x00000001 )
( tie_things_together~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 twine~l1 x00000001 )
( join~l1 use~l1 twine~l1 x00000001 )
( twine~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 twine~l1 x00000001 )
( tie_things_together~l1 why~l1 twine~l1 x00000001 )
( fasten~l1 functionality~l1 rope~l1 x00000001 )
( join~l1 use~l1 rope~l1 x00000001 )
( rope~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 rope~l1 x00000001 )
( tie_things_together~l1 why~l1 rope~l1 x00000001 )
( fasten~l1 functionality~l1 strap~l1 x00000001 )
( join~l1 use~l1 strap~l1 x00000001 )
( strap~l1 use_to~l1 join_objects~l1 x00000001 )
( objects~l1 object~l1 strap~l1 x00000001 )
( tie_things_together~l1 why~l1 strap~l1 x00000001 )
( fasten~l1 functionality~l1 thread~n~l1 x00000001 )
( join~l1 use~l1 thread~n~l1 x00000001 )
( thread~n~l1 use_to~l1 join_fabric~l1 x00000001 )
( fabric~l1 object~l1 thread~n~l1 x00000001 )
( sewing~l1 activity~l1 thread~n~l1 x00000001 )
( seamstress~l1 agent~l1 thread~n~l1 x00000001 )
( create_fashion~l1 why~l1 thread~n~l1 x00000001 )
( create_fashion~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 clamp~n~l1 x00000001 )
( shop~l1 where~l1 clamp~n~l1 x00000001 )
( cut_pipe~l1 why~l1 clamp~n~l1 x00000001 )
( cut_pipe~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 clothespin~l1 x00000001 )
( hang~l1 use~l1 clothespin~l1 x00000001 )
( clothespin~l1 use_to~l1 hang_washing~l1 x00000001 )
( washing~l1 object~l1 clothespin~l1 x00000001 )
( maid~l1 agent~l1 clothespin~l1 x00000001 )
( hang_clothes_on_the_line~l1 why~l1 clothespin~l1 x00000001 )
( hang_clothes_on_the_line~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 peg~l1 x00000001 )
( hang~l1 use~l1 peg~l1 x00000001 )
( peg~l1 use_to~l1 hang_washing~l1 x00000001 )
( washing~l1 object~l1 peg~l1 x00000001 )
( maid~l1 agent~l1 peg~l1 x00000001 )
( hang_clothes_on_the_line~l1 why~l1 peg~l1 x00000001 )
( fasten~l1 functionality~l1 stake~n~l1 x00000001 )
( tie~l1 use~l1 stake~n~l1 x00000001 )
( stake~n~l1 use_to~l1 tie_*~l1 x00000001 )
( down~l1 adverb~l1 stake~n~l1 x00000001 )
( bind_something_to_the_ground~l1 why~l1 stake~n~l1 x00000001 )
( bind_something_to_the_ground~l1 ~tool verify~l1 x00000001 )
( fasten~l1 functionality~l1 tent_peg~l1 x00000001 )
( tie~l1 use~l1 tent_peg~l1 x00000001 )
( tent_peg~l1 use_to~l1 tie_*~l1 x00000001 )
( down~l1 adverb~l1 tent_peg~l1 x00000001 )
( bind_something_to_the_ground~l1 why~l1 tent_peg~l1 x00000001 )
( fasten~l1 functionality~l1 buckle~n~l1 x00000001 )
( join~l1 use~l1 buckle~n~l1 x00000001 )
( buckle~n~l1 use_to~l1 join_belt~l1 x00000001 )
( belt~l1 object~l1 buckle~n~l1 x00000001 )
( hold_up_pants~l1 why~l1 buckle~n~l1 x00000001 )
( hold_up_pants~l1 ~tool verify~l1 x00000001 )
( shape~l1 functionality~l1 mould~l1 x00000001 )
( shape~l1 use~l1 mould~l1 x00000001 )
( mould~l1 use_to~l1 shape_clay~l1 x00000001 )
( clay~l1 object~l1 mould~l1 x00000001 )
( art~l1 activity~l1 mould~l1 x00000001 )
( artist~l1 agent~l1 mould~l1 x00000001 )
( studio~l1 where~l1 mould~l1 x00000001 )
( create_clay_objects~l1 why~l1 mould~l1 x00000001 )
( create_clay_objects~l1 ~tool verify~l1 x00000001 )
( shape~l1 functionality~l1 file~l1 x00000001 )
( smooth~l1 use~l1 file~l1 x00000001 )
( file~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 file~l1 x00000001 )
( carpentry~l1 activity~l1 file~l1 x00000001 )
( carpenter~l1 agent~l1 file~l1 x00000001 )
( workshop~l1 where~l1 file~l1 x00000001 )
( smooth_items~l1 why~l1 file~l1 x00000001 )
( smooth_items~l1 ~tool verify~l1 x00000001 )
( shape~l1 functionality~l1 grinder~l1 x00000001 )
( smooth~l1 use~l1 grinder~l1 x00000001 )
( grinder~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 grinder~l1 x00000001 )
( carpentry~l1 activity~l1 grinder~l1 x00000001 )
( carpenter~l1 agent~l1 grinder~l1 x00000001 )
( workshop~l1 where~l1 grinder~l1 x00000001 )
( smooth_items~l1 why~l1 grinder~l1 x00000001 )
( shape~l1 functionality~l1 rasp~l1 x00000001 )
( smooth~l1 use~l1 rasp~l1 x00000001 )
( rasp~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 rasp~l1 x00000001 )
( carpentry~l1 activity~l1 rasp~l1 x00000001 )
( carpenter~l1 agent~l1 rasp~l1 x00000001 )
( workshop~l1 where~l1 rasp~l1 x00000001 )
( smooth_items~l1 why~l1 rasp~l1 x00000001 )
( shape~l1 functionality~l1 sander~l1 x00000001 )
( smooth~l1 use~l1 sander~l1 x00000001 )
( sander~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 sander~l1 x00000001 )
( carpentry~l1 activity~l1 sander~l1 x00000001 )
( carpenter~l1 agent~l1 sander~l1 x00000001 )
( workshop~l1 where~l1 sander~l1 x00000001 )
( smooth_items~l1 why~l1 sander~l1 x00000001 )
( shape~l1 functionality~l1 sanding_block~l1 x00000001 )
( smooth~l1 use~l1 sanding_block~l1 x00000001 )
( sanding_block~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 sanding_block~l1 x00000001 )
( carpentry~l1 activity~l1 sanding_block~l1 x00000001 )
( carpenter~l1 agent~l1 sanding_block~l1 x00000001 )
( workshop~l1 where~l1 sanding_block~l1 x00000001 )
( smooth_items~l1 why~l1 sanding_block~l1 x00000001 )
( shape~l1 functionality~l1 sharpener~l1 x00000001 )
( smooth~l1 use~l1 sharpener~l1 x00000001 )
( sharpener~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 sharpener~l1 x00000001 )
( carpentry~l1 activity~l1 sharpener~l1 x00000001 )
( carpenter~l1 agent~l1 sharpener~l1 x00000001 )
( workshop~l1 where~l1 sharpener~l1 x00000001 )
( smooth_items~l1 why~l1 sharpener~l1 x00000001 )
( shape~l1 functionality~l1 sandpaper~l1 x00000001 )
( smooth~l1 use~l1 sandpaper~l1 x00000001 )
( sandpaper~l1 use_to~l1 smooth_objects~l1 x00000001 )
( objects~l1 object~l1 sandpaper~l1 x00000001 )
( carpentry~l1 activity~l1 sandpaper~l1 x00000001 )
( carpenter~l1 agent~l1 sandpaper~l1 x00000001 )
( workshop~l1 where~l1 sandpaper~l1 x00000001 )
( smooth_items~l1 why~l1 sandpaper~l1 x00000001 )
( shape~l1 functionality~l1 rolling_pin~l1 x00000001 )
( shape~l1 use~l1 rolling_pin~l1 x00000001 )
( rolling_pin~l1 use_to~l1 shape_dough~l1 x00000001 )
( dough~l1 object~l1 rolling_pin~l1 x00000001 )
( cooking~l1 activity~l1 rolling_pin~l1 x00000001 )
( cook~l1 agent~l1 rolling_pin~l1 x00000001 )
( kitchen~l1 where~l1 rolling_pin~l1 x00000001 )
( make_cookies~l1 why~l1 rolling_pin~l1 x00000001 )
( shape~l1 functionality~l1 cookie_cutter~l1 x00000001 )
( shape~l1 use~l1 cookie_cutter~l1 x00000001 )
( cookie_cutter~l1 use_to~l1 shape_dough~l1 x00000001 )
( transport~l1 functionality~l1 wagon~l1 x00000001 )
( move~l1 use~l1 wagon~l1 x00000001 )
( wagon~l1 use_to~l1 move_objects~l1 x00000001 )
( objects~l1 object~l1 wagon~l1 x00000001 )
( trucking~l1 activity~l1 wagon~l1 x00000001 )
( trucker~l1 agent~l1 wagon~l1 x00000001 )
( road~l1 where~l1 wagon~l1 x00000001 )
( move_supplies_by_road~l1 why~l1 wagon~l1 x00000001 )
( move_supplies_by_road~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 truck~n~l1 x00000001 )
( move~l1 use~l1 truck~n~l1 x00000001 )
( truck~n~l1 use_to~l1 move_objects~l1 x00000001 )
( objects~l1 object~l1 truck~n~l1 x00000001 )
( trucking~l1 activity~l1 truck~n~l1 x00000001 )
( trucker~l1 agent~l1 truck~n~l1 x00000001 )
( road~l1 where~l1 truck~n~l1 x00000001 )
( move_supplies_by_road~l1 why~l1 truck~n~l1 x00000001 )
( transport~l1 functionality~l1 pickup~l1 x00000001 )
( move~l1 use~l1 pickup~l1 x00000001 )
( pickup~l1 use_to~l1 move_objects~l1 x00000001 )
( objects~l1 object~l1 pickup~l1 x00000001 )
( trucking~l1 activity~l1 pickup~l1 x00000001 )
( trucker~l1 agent~l1 pickup~l1 x00000001 )
( road~l1 where~l1 pickup~l1 x00000001 )
( move_supplies_by_road~l1 why~l1 pickup~l1 x00000001 )
( transport~l1 functionality~l1 horse~l1 x00000001 )
( move~l1 use~l1 horse~l1 x00000001 )
( horse~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 horse~l1 x00000001 )
( cycling~l1 activity~l1 horse~l1 x00000001 )
( cyclist~l1 agent~l1 horse~l1 x00000001 )
( outdoors~l1 where~l1 horse~l1 x00000001 )
( move_people_on_land~l1 why~l1 horse~l1 x00000001 )
( move_people_on_land~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 mule~l1 x00000001 )
( move~l1 use~l1 mule~l1 x00000001 )
( mule~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 mule~l1 x00000001 )
( cycling~l1 activity~l1 mule~l1 x00000001 )
( cyclist~l1 agent~l1 mule~l1 x00000001 )
( outdoors~l1 where~l1 mule~l1 x00000001 )
( move_people_on_land~l1 why~l1 mule~l1 x00000001 )
( transport~l1 functionality~l1 burro~l1 x00000001 )
( move~l1 use~l1 burro~l1 x00000001 )
( burro~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 burro~l1 x00000001 )
( cycling~l1 activity~l1 burro~l1 x00000001 )
( cyclist~l1 agent~l1 burro~l1 x00000001 )
( outdoors~l1 where~l1 burro~l1 x00000001 )
( move_people_on_land~l1 why~l1 burro~l1 x00000001 )
( transport~l1 functionality~l1 camel~l1 x00000001 )
( move~l1 use~l1 camel~l1 x00000001 )
( camel~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 camel~l1 x00000001 )
( cycling~l1 activity~l1 camel~l1 x00000001 )
( cyclist~l1 agent~l1 camel~l1 x00000001 )
( outdoors~l1 where~l1 camel~l1 x00000001 )
( move_people_on_land~l1 why~l1 camel~l1 x00000001 )
( transport~l1 functionality~l1 tricycle~l1 x00000001 )
( move~l1 use~l1 tricycle~l1 x00000001 )
( tricycle~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 tricycle~l1 x00000001 )
( cycling~l1 activity~l1 tricycle~l1 x00000001 )
( cyclist~l1 agent~l1 tricycle~l1 x00000001 )
( outdoors~l1 where~l1 tricycle~l1 x00000001 )
( move_people_on_land~l1 why~l1 tricycle~l1 x00000001 )
( transport~l1 functionality~l1 donkey~l1 x00000001 )
( move~l1 use~l1 donkey~l1 x00000001 )
( donkey~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 donkey~l1 x00000001 )
( cycling~l1 activity~l1 donkey~l1 x00000001 )
( cyclist~l1 agent~l1 donkey~l1 x00000001 )
( outdoors~l1 where~l1 donkey~l1 x00000001 )
( move_people_on_land~l1 why~l1 donkey~l1 x00000001 )
( transport~l1 functionality~l1 skateboard~l1 x00000001 )
( move~l1 use~l1 skateboard~l1 x00000001 )
( skateboard~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 skateboard~l1 x00000001 )
( cycling~l1 activity~l1 skateboard~l1 x00000001 )
( cyclist~l1 agent~l1 skateboard~l1 x00000001 )
( outdoors~l1 where~l1 skateboard~l1 x00000001 )
( move_people_on_land~l1 why~l1 skateboard~l1 x00000001 )
( transport~l1 functionality~l1 roller_skates~l1 x00000001 )
( move~l1 use~l1 roller_skates~l1 x00000001 )
( roller_skates~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 roller_skates~l1 x00000001 )
( cycling~l1 activity~l1 roller_skates~l1 x00000001 )
( cyclist~l1 agent~l1 roller_skates~l1 x00000001 )
( outdoors~l1 where~l1 roller_skates~l1 x00000001 )
( move_people_on_land~l1 why~l1 roller_skates~l1 x00000001 )
( transport~l1 functionality~l1 bicycle~l1 x00000001 )
( move~l1 use~l1 bicycle~l1 x00000001 )
( bicycle~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 bicycle~l1 x00000001 )
( cycling~l1 activity~l1 bicycle~l1 x00000001 )
( cyclist~l1 agent~l1 bicycle~l1 x00000001 )
( outdoors~l1 where~l1 bicycle~l1 x00000001 )
( move_people_on_land~l1 why~l1 bicycle~l1 x00000001 )
( transport~l1 functionality~l1 ~vehicles_land x00000001 )
( move~l1 use~l1 ~vehicles_land x00000001 )
( ~vehicles_land use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 ~vehicles_land x00000001 )
( driving~l1 activity~l1 ~vehicles_land x00000001 )
( driver~l1 agent~l1 ~vehicles_land x00000001 )
( road~l1 where~l1 ~vehicles_land x00000001 )
( move_people_by_road~l1 why~l1 ~vehicles_land x00000001 )
( move_people_by_road~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 ~vehicles_sea x00000001 )
( move~l1 use~l1 ~vehicles_sea x00000001 )
( ~vehicles_sea use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 ~vehicles_sea x00000001 )
( sailing~l1 activity~l1 ~vehicles_sea x00000001 )
( sailor~l1 agent~l1 ~vehicles_sea x00000001 )
( ocean~l1 where~l1 ~vehicles_sea x00000001 )
( move_people_by_water~l1 why~l1 ~vehicles_sea x00000001 )
( move_people_by_water~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 boat~l1 x00000001 )
( move~l1 use~l1 boat~l1 x00000001 )
( boat~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 boat~l1 x00000001 )
( sailing~l1 activity~l1 boat~l1 x00000001 )
( sailor~l1 agent~l1 boat~l1 x00000001 )
( ocean~l1 where~l1 boat~l1 x00000001 )
( move_people_by_water~l1 why~l1 boat~l1 x00000001 )
( transport~l1 functionality~l1 sailboat~l1 x00000001 )
( move~l1 use~l1 sailboat~l1 x00000001 )
( sailboat~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 sailboat~l1 x00000001 )
( sailing~l1 activity~l1 sailboat~l1 x00000001 )
( sailor~l1 agent~l1 sailboat~l1 x00000001 )
( ocean~l1 where~l1 sailboat~l1 x00000001 )
( move_people_by_water~l1 why~l1 sailboat~l1 x00000001 )
( transport~l1 functionality~l1 ship~l1 x00000001 )
( move~l1 use~l1 ship~l1 x00000001 )
( ship~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 ship~l1 x00000001 )
( sailing~l1 activity~l1 ship~l1 x00000001 )
( sailor~l1 agent~l1 ship~l1 x00000001 )
( ocean~l1 where~l1 ship~l1 x00000001 )
( move_people_by_water~l1 why~l1 ship~l1 x00000001 )
( transport~l1 functionality~l1 canoe~l1 x00000001 )
( move~l1 use~l1 canoe~l1 x00000001 )
( canoe~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 canoe~l1 x00000001 )
( sailing~l1 activity~l1 canoe~l1 x00000001 )
( sailor~l1 agent~l1 canoe~l1 x00000001 )
( ocean~l1 where~l1 canoe~l1 x00000001 )
( move_people_by_water~l1 why~l1 canoe~l1 x00000001 )
( transport~l1 functionality~l1 rowboat~l1 x00000001 )
( move~l1 use~l1 rowboat~l1 x00000001 )
( rowboat~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 rowboat~l1 x00000001 )
( sailing~l1 activity~l1 rowboat~l1 x00000001 )
( sailor~l1 agent~l1 rowboat~l1 x00000001 )
( ocean~l1 where~l1 rowboat~l1 x00000001 )
( move_people_by_water~l1 why~l1 rowboat~l1 x00000001 )
( transport~l1 functionality~l1 tug~l1 x00000001 )
( move~l1 use~l1 tug~l1 x00000001 )
( tug~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 tug~l1 x00000001 )
( sailing~l1 activity~l1 tug~l1 x00000001 )
( sailor~l1 agent~l1 tug~l1 x00000001 )
( ocean~l1 where~l1 tug~l1 x00000001 )
( move_people_by_water~l1 why~l1 tug~l1 x00000001 )
( transport~l1 functionality~l1 paddleboat~l1 x00000001 )
( move~l1 use~l1 paddleboat~l1 x00000001 )
( paddleboat~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 paddleboat~l1 x00000001 )
( sailing~l1 activity~l1 paddleboat~l1 x00000001 )
( sailor~l1 agent~l1 paddleboat~l1 x00000001 )
( ocean~l1 where~l1 paddleboat~l1 x00000001 )
( move_people_by_water~l1 why~l1 paddleboat~l1 x00000001 )
( transport~l1 functionality~l1 aircraft_carrier~l1 x00000001 )
( move~l1 use~l1 aircraft_carrier~l1 x00000001 )
( aircraft_carrier~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 aircraft_carrier~l1 x00000001 )
( sailing~l1 activity~l1 aircraft_carrier~l1 x00000001 )
( sailor~l1 agent~l1 aircraft_carrier~l1 x00000001 )
( ocean~l1 where~l1 aircraft_carrier~l1 x00000001 )
( move_people_by_water~l1 why~l1 aircraft_carrier~l1 x00000001 )
( transport~l1 functionality~l1 destroyer~l1 x00000001 )
( move~l1 use~l1 destroyer~l1 x00000001 )
( destroyer~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 destroyer~l1 x00000001 )
( sailing~l1 activity~l1 destroyer~l1 x00000001 )
( sailor~l1 agent~l1 destroyer~l1 x00000001 )
( ocean~l1 where~l1 destroyer~l1 x00000001 )
( move_people_by_water~l1 why~l1 destroyer~l1 x00000001 )
( transport~l1 functionality~l1 ~vehicles_air x00000001 )
( move~l1 use~l1 ~vehicles_air x00000001 )
( ~vehicles_air use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 ~vehicles_air x00000001 )
( aviation~l1 activity~l1 ~vehicles_air x00000001 )
( pilot~l1 agent~l1 ~vehicles_air x00000001 )
( air~l1 where~l1 ~vehicles_air x00000001 )
( move_people_by_air~l1 why~l1 ~vehicles_air x00000001 )
( move_people_by_air~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 aircraft~l1 x00000001 )
( move~l1 use~l1 aircraft~l1 x00000001 )
( aircraft~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 aircraft~l1 x00000001 )
( aviation~l1 activity~l1 aircraft~l1 x00000001 )
( pilot~l1 agent~l1 aircraft~l1 x00000001 )
( air~l1 where~l1 aircraft~l1 x00000001 )
( move_people_by_air~l1 why~l1 aircraft~l1 x00000001 )
( transport~l1 functionality~l1 blimp~l1 x00000001 )
( move~l1 use~l1 blimp~l1 x00000001 )
( blimp~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 blimp~l1 x00000001 )
( aviation~l1 activity~l1 blimp~l1 x00000001 )
( pilot~l1 agent~l1 blimp~l1 x00000001 )
( air~l1 where~l1 blimp~l1 x00000001 )
( move_people_by_air~l1 why~l1 blimp~l1 x00000001 )
( transport~l1 functionality~l1 airplane~l1 x00000001 )
( move~l1 use~l1 airplane~l1 x00000001 )
( airplane~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 airplane~l1 x00000001 )
( aviation~l1 activity~l1 airplane~l1 x00000001 )
( pilot~l1 agent~l1 airplane~l1 x00000001 )
( air~l1 where~l1 airplane~l1 x00000001 )
( move_people_by_air~l1 why~l1 airplane~l1 x00000001 )
( transport~l1 functionality~l1 jet~l1 x00000001 )
( move~l1 use~l1 jet~l1 x00000001 )
( jet~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 jet~l1 x00000001 )
( aviation~l1 activity~l1 jet~l1 x00000001 )
( pilot~l1 agent~l1 jet~l1 x00000001 )
( air~l1 where~l1 jet~l1 x00000001 )
( move_people_by_air~l1 why~l1 jet~l1 x00000001 )
( transport~l1 functionality~l1 rocket~l1 x00000001 )
( move~l1 use~l1 rocket~l1 x00000001 )
( rocket~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 rocket~l1 x00000001 )
( rocketry~l1 activity~l1 rocket~l1 x00000001 )
( astronaut~l1 agent~l1 rocket~l1 x00000001 )
( outer_space~l1 where~l1 rocket~l1 x00000001 )
( move_people_in_space~l1 why~l1 rocket~l1 x00000001 )
( move_people_in_space~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 rocket_ship~l1 x00000001 )
( move~l1 use~l1 rocket_ship~l1 x00000001 )
( rocket_ship~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 rocket_ship~l1 x00000001 )
( rocketry~l1 activity~l1 rocket_ship~l1 x00000001 )
( astronaut~l1 agent~l1 rocket_ship~l1 x00000001 )
( outer_space~l1 where~l1 rocket_ship~l1 x00000001 )
( move_people_in_space~l1 why~l1 rocket_ship~l1 x00000001 )
( transport~l1 functionality~l1 space_shuttle~l1 x00000001 )
( move~l1 use~l1 space_shuttle~l1 x00000001 )
( space_shuttle~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 space_shuttle~l1 x00000001 )
( rocketry~l1 activity~l1 space_shuttle~l1 x00000001 )
( astronaut~l1 agent~l1 space_shuttle~l1 x00000001 )
( outer_space~l1 where~l1 space_shuttle~l1 x00000001 )
( move_people_in_space~l1 why~l1 space_shuttle~l1 x00000001 )
( transport~l1 functionality~l1 fire_truck~l1 x00000001 )
( move~l1 use~l1 fire_truck~l1 x00000001 )
( fire_truck~l1 use_to~l1 move_water~l1 x00000001 )
( water~l1 object~l1 fire_truck~l1 x00000001 )
( fire-fighting~l1 activity~l1 fire_truck~l1 x00000001 )
( fireman~l1 agent~l1 fire_truck~l1 x00000001 )
( put_out_a_fire~l1 why~l1 fire_truck~l1 x00000001 )
( put_out_a_fire~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 fire_engine~l1 x00000001 )
( move~l1 use~l1 fire_engine~l1 x00000001 )
( fire_engine~l1 use_to~l1 move_water~l1 x00000001 )
( water~l1 object~l1 fire_engine~l1 x00000001 )
( fire-fighting~l1 activity~l1 fire_engine~l1 x00000001 )
( fireman~l1 agent~l1 fire_engine~l1 x00000001 )
( put_out_a_fire~l1 why~l1 fire_engine~l1 x00000001 )
( transport~l1 functionality~l1 snowshoe~l1 x00000001 )
( move~l1 use~l1 snowshoe~l1 x00000001 )
( snowshoe~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 snowshoe~l1 x00000001 )
( move_people_through_snow~l1 why~l1 snowshoe~l1 x00000001 )
( move_people_through_snow~l1 ~tool verify~l1 x00000001 )
( transport~l1 functionality~l1 ski~n~l1 x00000001 )
( move~l1 use~l1 ski~n~l1 x00000001 )
( ski~n~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 ski~n~l1 x00000001 )
( move_people_through_snow~l1 why~l1 ski~n~l1 x00000001 )
( transport~l1 functionality~l1 tobaggan~l1 x00000001 )
( move~l1 use~l1 tobaggan~l1 x00000001 )
( tobaggan~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 tobaggan~l1 x00000001 )
( move_people_through_snow~l1 why~l1 tobaggan~l1 x00000001 )
( transport~l1 functionality~l1 sled~l1 x00000001 )
( move~l1 use~l1 sled~l1 x00000001 )
( sled~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 sled~l1 x00000001 )
( move_people_through_snow~l1 why~l1 sled~l1 x00000001 )
( transport~l1 functionality~l1 sleigh~l1 x00000001 )
( move~l1 use~l1 sleigh~l1 x00000001 )
( sleigh~l1 use_to~l1 move_people~l1 x00000001 )
( people~l1 object~l1 sleigh~l1 x00000001 )
( move_people_through_snow~l1 why~l1 sleigh~l1 x00000001 )
( transport~l1 functionality~l1 wheelchair~l1 x00000001 )
( move~l1 use~l1 wheelchair~l1 x00000001 )
( wheelchair~l1 use_to~l1 move_cripple~l1 x00000001 )
( cripple~l1 object~l1 wheelchair~l1 x00000001 )
( move_crippled_person~l1 why~l1 wheelchair~l1 x00000001 )
( move_crippled_person~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 bow~n~l1 x00000001 )
( throw~l1 use~l1 bow~n~l1 x00000001 )
( bow~n~l1 use_to~l1 throw_arrows~l1 x00000001 )
( arrows~l1 object~l1 bow~n~l1 x00000001 )
( archery~l1 activity~l1 bow~n~l1 x00000001 )
( archer~l1 agent~l1 bow~n~l1 x00000001 )
( outdoors~l1 where~l1 bow~n~l1 x00000001 )
( shoot_foes~l1 why~l1 bow~n~l1 x00000001 )
( shoot_foes~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 spear~l1 x00000001 )
( pierce~l1 use~l1 spear~l1 x00000001 )
( spear~l1 use_to~l1 pierce_animals~l1 x00000001 )
( animals~l1 object~l1 spear~l1 x00000001 )
( hunting~l1 activity~l1 spear~l1 x00000001 )
( hunter~l1 agent~l1 spear~l1 x00000001 )
( woods~l1 where~l1 spear~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 spear~l1 x00000001 )
( kill_animals_for_food~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 shotgun~l1 x00000001 )
( shoot~l1 use~l1 shotgun~l1 x00000001 )
( shotgun~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 shotgun~l1 x00000001 )
( hunting~l1 activity~l1 shotgun~l1 x00000001 )
( hunter~l1 agent~l1 shotgun~l1 x00000001 )
( woods~l1 where~l1 shotgun~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 shotgun~l1 x00000001 )
( weapon~l1 functionality~l1 machine_gun~l1 x00000001 )
( shoot~l1 use~l1 machine_gun~l1 x00000001 )
( machine_gun~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 machine_gun~l1 x00000001 )
( hunting~l1 activity~l1 machine_gun~l1 x00000001 )
( hunter~l1 agent~l1 machine_gun~l1 x00000001 )
( woods~l1 where~l1 machine_gun~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 machine_gun~l1 x00000001 )
( weapon~l1 functionality~l1 gatling_gun~l1 x00000001 )
( shoot~l1 use~l1 gatling_gun~l1 x00000001 )
( gatling_gun~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 gatling_gun~l1 x00000001 )
( hunting~l1 activity~l1 gatling_gun~l1 x00000001 )
( hunter~l1 agent~l1 gatling_gun~l1 x00000001 )
( woods~l1 where~l1 gatling_gun~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 gatling_gun~l1 x00000001 )
( weapon~l1 functionality~l1 gun~l1 x00000001 )
( shoot~l1 use~l1 gun~l1 x00000001 )
( gun~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 gun~l1 x00000001 )
( hunting~l1 activity~l1 gun~l1 x00000001 )
( hunter~l1 agent~l1 gun~l1 x00000001 )
( woods~l1 where~l1 gun~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 gun~l1 x00000001 )
( weapon~l1 functionality~l1 rifle~l1 x00000001 )
( shoot~l1 use~l1 rifle~l1 x00000001 )
( rifle~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 rifle~l1 x00000001 )
( hunting~l1 activity~l1 rifle~l1 x00000001 )
( hunter~l1 agent~l1 rifle~l1 x00000001 )
( woods~l1 where~l1 rifle~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 rifle~l1 x00000001 )
( weapon~l1 functionality~l1 pistol~l1 x00000001 )
( shoot~l1 use~l1 pistol~l1 x00000001 )
( pistol~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 pistol~l1 x00000001 )
( hunting~l1 activity~l1 pistol~l1 x00000001 )
( hunter~l1 agent~l1 pistol~l1 x00000001 )
( woods~l1 where~l1 pistol~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 pistol~l1 x00000001 )
( weapon~l1 functionality~l1 revolver~l1 x00000001 )
( shoot~l1 use~l1 revolver~l1 x00000001 )
( revolver~l1 use_to~l1 shoot_bullets~l1 x00000001 )
( bullets~l1 object~l1 revolver~l1 x00000001 )
( hunting~l1 activity~l1 revolver~l1 x00000001 )
( hunter~l1 agent~l1 revolver~l1 x00000001 )
( woods~l1 where~l1 revolver~l1 x00000001 )
( kill_animals_for_food~l1 why~l1 revolver~l1 x00000001 )
( weapon~l1 functionality~l1 cannon~l1 x00000001 )
( shoot~l1 use~l1 cannon~l1 x00000001 )
( cannon~l1 use_to~l1 shoot_cannon_balls~l1 x00000001 )
( cannon_balls~l1 object~l1 cannon~l1 x00000001 )
( warfare~l1 activity~l1 cannon~l1 x00000001 )
( soldier~l1 agent~l1 cannon~l1 x00000001 )
( field~l1 where~l1 cannon~l1 x00000001 )
( kill_people~l1 why~l1 cannon~l1 x00000001 )
( kill_people~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 landmine~l1 x00000001 )
( destroy~l1 use~l1 landmine~l1 x00000001 )
( landmine~l1 use_to~l1 destroy_area~l1 x00000001 )
( area~l1 object~l1 landmine~l1 x00000001 )
( warfare~l1 activity~l1 landmine~l1 x00000001 )
( soldier~l1 agent~l1 landmine~l1 x00000001 )
( kill_people~l1 why~l1 landmine~l1 x00000001 )
( weapon~l1 functionality~l1 bomb~n~l1 x00000001 )
( destroy~l1 use~l1 bomb~n~l1 x00000001 )
( bomb~n~l1 use_to~l1 destroy_area~l1 x00000001 )
( area~l1 object~l1 bomb~n~l1 x00000001 )
( warfare~l1 activity~l1 bomb~n~l1 x00000001 )
( soldier~l1 agent~l1 bomb~n~l1 x00000001 )
( kill_people~l1 why~l1 bomb~n~l1 x00000001 )
( weapon~l1 functionality~l1 half-track~l1 x00000001 )
( shoot~l1 use~l1 half-track~l1 x00000001 )
( half-track~l1 use_to~l1 shoot_projectiles~l1 x00000001 )
( projectiles~l1 object~l1 half-track~l1 x00000001 )
( warfare~l1 activity~l1 half-track~l1 x00000001 )
( soldier~l1 agent~l1 half-track~l1 x00000001 )
( outdoors~l1 where~l1 half-track~l1 x00000001 )
( kill_people~l1 why~l1 half-track~l1 x00000001 )
( weapon~l1 functionality~l1 tank~n~l1 x00000001 )
( shoot~l1 use~l1 tank~n~l1 x00000001 )
( tank~n~l1 use_to~l1 shoot_projectiles~l1 x00000001 )
( projectiles~l1 object~l1 tank~n~l1 x00000001 )
( warfare~l1 activity~l1 tank~n~l1 x00000001 )
( soldier~l1 agent~l1 tank~n~l1 x00000001 )
( outdoors~l1 where~l1 tank~n~l1 x00000001 )
( kill_people~l1 why~l1 tank~n~l1 x00000001 )
( weapon~l1 functionality~l1 fighter_jet~l1 x00000001 )
( shoot~l1 use~l1 fighter_jet~l1 x00000001 )
( fighter_jet~l1 use_to~l1 shoot_missiles~l1 x00000001 )
( missiles~l1 object~l1 fighter_jet~l1 x00000001 )
( warfare~l1 activity~l1 fighter_jet~l1 x00000001 )
( pilot~l1 agent~l1 fighter_jet~l1 x00000001 )
( air~l1 where~l1 fighter_jet~l1 x00000001 )
( kill_people~l1 why~l1 fighter_jet~l1 x00000001 )
( weapon~l1 functionality~l1 bomber~l1 x00000001 )
( drop~l1 use~l1 bomber~l1 x00000001 )
( bomber~l1 use_to~l1 drop_bombs~l1 x00000001 )
( bombs~l1 object~l1 bomber~l1 x00000001 )
( warfare~l1 activity~l1 bomber~l1 x00000001 )
( pilot~l1 agent~l1 bomber~l1 x00000001 )
( air~l1 where~l1 bomber~l1 x00000001 )
( destroy_buildings~l1 why~l1 bomber~l1 x00000001 )
( destroy_buildings~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 submarine~l1 x00000001 )
( shoot~l1 use~l1 submarine~l1 x00000001 )
( submarine~l1 use_to~l1 shoot_torpedoes~l1 x00000001 )
( torpedoes~l1 object~l1 submarine~l1 x00000001 )
( warfare~l1 activity~l1 submarine~l1 x00000001 )
( submariner~l1 agent~l1 submarine~l1 x00000001 )
( ocean~l1 where~l1 submarine~l1 x00000001 )
( destroy_ships~l1 why~l1 submarine~l1 x00000001 )
( destroy_ships~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 aircraft_carrier~l1 x00000001 )
( launch~l1 use~l1 aircraft_carrier~l1 x00000001 )
( aircraft_carrier~l1 use_to~l1 launch_airplanes~l1 x00000001 )
( airplanes~l1 object~l1 aircraft_carrier~l1 x00000001 )
( warfare~l1 activity~l1 aircraft_carrier~l1 x00000001 )
( destroy_ships~l1 why~l1 aircraft_carrier~l1 x00000001 )
( weapon~l1 functionality~l1 arrow~l1 x00000001 )
( be~l1 use~l1 arrow~l1 x00000001 )
( arrow~l1 use_to~l1 be_ammo~l1 x00000001 )
( ammo~l1 object~l1 arrow~l1 x00000001 )
( archery~l1 activity~l1 arrow~l1 x00000001 )
( archer~l1 agent~l1 arrow~l1 x00000001 )
( outdoors~l1 where~l1 arrow~l1 x00000001 )
( be_used_by_a_bow~l1 why~l1 arrow~l1 x00000001 )
( be_used_by_a_bow~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 blowgun~l1 x00000001 )
( shoot~l1 use~l1 blowgun~l1 x00000001 )
( blowgun~l1 use_to~l1 shoot_darts~l1 x00000001 )
( darts~l1 object~l1 blowgun~l1 x00000001 )
( warfare~l1 activity~l1 blowgun~l1 x00000001 )
( kill_people~l1 why~l1 blowgun~l1 x00000001 )
( weapon~l1 functionality~l1 bullet~l1 x00000001 )
( be~l1 use~l1 bullet~l1 x00000001 )
( bullet~l1 use_to~l1 be_ammo~l1 x00000001 )
( ammo~l1 object~l1 bullet~l1 x00000001 )
( marksmanship~l1 activity~l1 bullet~l1 x00000001 )
( marksman~l1 agent~l1 bullet~l1 x00000001 )
( outdoors~l1 where~l1 bullet~l1 x00000001 )
( be_used_by_a_gun~l1 why~l1 bullet~l1 x00000001 )
( be_used_by_a_gun~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 missile~l1 x00000001 )
( be~l1 use~l1 missile~l1 x00000001 )
( missile~l1 use_to~l1 be_ammo~l1 x00000001 )
( ammo~l1 object~l1 missile~l1 x00000001 )
( warfare~l1 activity~l1 missile~l1 x00000001 )
( pilot~l1 agent~l1 missile~l1 x00000001 )
( air~l1 where~l1 missile~l1 x00000001 )
( be_used_by_a_fighter_jet~l1 why~l1 missile~l1 x00000001 )
( be_used_by_a_fighter_jet~l1 ~tool verify~l1 x00000001 )
( weapon~l1 functionality~l1 phaser~l1 x00000001 )
( shoot~l1 use~l1 phaser~l1 x00000001 )
( phaser~l1 use_to~l1 shoot_beams~l1 x00000001 )
( beams~l1 object~l1 phaser~l1 x00000001 )
( warfare~l1 activity~l1 phaser~l1 x00000001 )
( soldier~l1 agent~l1 phaser~l1 x00000001 )
( field~l1 where~l1 phaser~l1 x00000001 )
( kill_people~l1 why~l1 phaser~l1 x00000001 )
( weapon~l1 functionality~l1 blaster~l1 x00000001 )
( shoot~l1 use~l1 blaster~l1 x00000001 )
( blaster~l1 use_to~l1 shoot_beams~l1 x00000001 )
( beams~l1 object~l1 blaster~l1 x00000001 )
( warfare~l1 activity~l1 blaster~l1 x00000001 )
( soldier~l1 agent~l1 blaster~l1 x00000001 )
( field~l1 where~l1 blaster~l1 x00000001 )
( kill_people~l1 why~l1 blaster~l1 x00000001 )
( weapon~l1 functionality~l1 raygun~l1 x00000001 )
( shoot~l1 use~l1 raygun~l1 x00000001 )
( raygun~l1 use_to~l1 shoot_beams~l1 x00000001 )
( beams~l1 object~l1 raygun~l1 x00000001 )
( warfare~l1 activity~l1 raygun~l1 x00000001 )
( soldier~l1 agent~l1 raygun~l1 x00000001 )
( field~l1 where~l1 raygun~l1 x00000001 )
( kill_people~l1 why~l1 raygun~l1 x00000001 )
( weapon~l1 functionality~l1 ray_gun~l1 x00000001 )
( shoot~l1 use~l1 ray_gun~l1 x00000001 )
( ray_gun~l1 use_to~l1 shoot_beams~l1 x00000001 )
( beams~l1 object~l1 ray_gun~l1 x00000001 )
( warfare~l1 activity~l1 ray_gun~l1 x00000001 )
( soldier~l1 agent~l1 ray_gun~l1 x00000001 )
( field~l1 where~l1 ray_gun~l1 x00000001 )
( kill_people~l1 why~l1 ray_gun~l1 x00000001 )
( weapon~l1 functionality~l1 disruptor~l1 x00000001 )
( shoot~l1 use~l1 disruptor~l1 x00000001 )
( disruptor~l1 use_to~l1 shoot_beams~l1 x00000001 )
( beams~l1 object~l1 disruptor~l1 x00000001 )
( warfare~l1 activity~l1 disruptor~l1 x00000001 )
( soldier~l1 agent~l1 disruptor~l1 x00000001 )
( field~l1 where~l1 disruptor~l1 x00000001 )
( kill_people~l1 why~l1 disruptor~l1 x00000001 )
( weapon~l1 functionality~l1 whip~l1 x00000001 )
( hurt~l1 use~l1 whip~l1 x00000001 )
( whip~l1 use_to~l1 hurt_people~l1 x00000001 )
( people~l1 object~l1 whip~l1 x00000001 )
( hurt_people~l1 why~l1 whip~l1 x00000001 )
( hurt_people~l1 ~tool verify~l1 x00000001 )
( trade_goods~l1 functionality~l1 ~tradegoods x00000001 )
( facilitate~l1 use~l1 ~tradegoods x00000001 )
( ~tradegoods use_to~l1 facilitate_exchange~l1 x00000001 )
( exchange~l1 object~l1 ~tradegoods x00000001 )
( commerce~l1 activity~l1 ~tradegoods x00000001 )
( businessman~l1 agent~l1 ~tradegoods x00000001 )
( business~l1 where~l1 ~tradegoods x00000001 )
( acquire_what_you_need~l1 why~l1 ~tradegoods x00000001 )
( acquire_what_you_need~l1 ~tool verify~l1 x00000001 )
( trade_goods~l1 functionality~l1 stamp~l1 x00000001 )
( pay~l1 use~l1 stamp~l1 x00000001 )
( stamp~l1 use_to~l1 pay_postage~l1 x00000001 )
( postage~l1 object~l1 stamp~l1 x00000001 )
( mail_a_letter~l1 why~l1 stamp~l1 x00000001 )
( mail_a_letter~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 lighter~n~l1 x00000001 )
( create~l1 use~l1 lighter~n~l1 x00000001 )
( lighter~n~l1 use_to~l1 create_fire~l1 x00000001 )
( fire~l1 object~l1 lighter~n~l1 x00000001 )
( smoking~l1 activity~l1 lighter~n~l1 x00000001 )
( smoker~l1 agent~l1 lighter~n~l1 x00000001 )
( light_a_cigarette~l1 why~l1 lighter~n~l1 x00000001 )
( light_a_cigarette~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 match~n~l1 x00000001 )
( create~l1 use~l1 match~n~l1 x00000001 )
( match~n~l1 use_to~l1 create_fire~l1 x00000001 )
( fire~l1 object~l1 match~n~l1 x00000001 )
( smoking~l1 activity~l1 match~n~l1 x00000001 )
( smoker~l1 agent~l1 match~n~l1 x00000001 )
( light_a_cigarette~l1 why~l1 match~n~l1 x00000001 )
( transmute~l1 functionality~l1 fire_extinguisher~l1 x00000001 )
( put_out~l1 use~l1 fire_extinguisher~l1 x00000001 )
( fire_extinguisher~l1 use_to~l1 put_out_fire~l1 x00000001 )
( fire~l1 object~l1 fire_extinguisher~l1 x00000001 )
( fire-fighting~l1 activity~l1 fire_extinguisher~l1 x00000001 )
( fireman~l1 agent~l1 fire_extinguisher~l1 x00000001 )
( home~l1 where~l1 fire_extinguisher~l1 x00000001 )
( prevent_damage~l1 why~l1 fire_extinguisher~l1 x00000001 )
( prevent_damage~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 gas~n~l1 x00000001 )
( generate~l1 use~l1 gas~n~l1 x00000001 )
( gas~n~l1 use_to~l1 generate_energy~l1 x00000001 )
( energy~l1 object~l1 gas~n~l1 x00000001 )
( power_vehicles~l1 why~l1 gas~n~l1 x00000001 )
( power_vehicles~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 gasoline~l1 x00000001 )
( generate~l1 use~l1 gasoline~l1 x00000001 )
( gasoline~l1 use_to~l1 generate_energy~l1 x00000001 )
( energy~l1 object~l1 gasoline~l1 x00000001 )
( power_vehicles~l1 why~l1 gasoline~l1 x00000001 )
( transmute~l1 functionality~l1 diesel_fuel~l1 x00000001 )
( generate~l1 use~l1 diesel_fuel~l1 x00000001 )
( diesel_fuel~l1 use_to~l1 generate_energy~l1 x00000001 )
( energy~l1 object~l1 diesel_fuel~l1 x00000001 )
( power_vehicles~l1 why~l1 diesel_fuel~l1 x00000001 )
( transmute~l1 functionality~l1 generator~l1 x00000001 )
( generate~l1 use~l1 generator~l1 x00000001 )
( generator~l1 use_to~l1 generate_electricity~l1 x00000001 )
( electricity~l1 object~l1 generator~l1 x00000001 )
( power_homes~l1 why~l1 generator~l1 x00000001 )
( power_homes~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 electromagnet~l1 x00000001 )
( generate~l1 use~l1 electromagnet~l1 x00000001 )
( electromagnet~l1 use_to~l1 generate_magnetism~l1 x00000001 )
( magnetism~l1 object~l1 electromagnet~l1 x00000001 )
( lift_steel~l1 why~l1 electromagnet~l1 x00000001 )
( lift_steel~l1 ~tool verify~l1 x00000001 )
( transmute~l1 functionality~l1 microphone~l1 x00000001 )
( generate~l1 use~l1 microphone~l1 x00000001 )
( microphone~l1 use_to~l1 generate_electricity~l1 x00000001 )
( electricity~l1 object~l1 microphone~l1 x00000001 )
( convert_sound_to_electricity~l1 why~l1 microphone~l1 x00000001 )
( convert_sound_to_electricity~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 telescope~l1 x00000001 )
( see~l1 use~l1 telescope~l1 x00000001 )
( telescope~l1 use_to~l1 see_stars~l1 x00000001 )
( stars~l1 object~l1 telescope~l1 x00000001 )
( astronomy~l1 activity~l1 telescope~l1 x00000001 )
( astronomer~l1 agent~l1 telescope~l1 x00000001 )
( observatory~l1 where~l1 telescope~l1 x00000001 )
( study_galaxies~l1 why~l1 telescope~l1 x00000001 )
( study_galaxies~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 binocular~l1 x00000001 )
( see~l1 use~l1 binocular~l1 x00000001 )
( binocular~l1 use_to~l1 see_*~l1 x00000001 )
( farther~l1 adverb~l1 binocular~l1 x00000001 )
( birding~l1 activity~l1 binocular~l1 x00000001 )
( birder~l1 agent~l1 binocular~l1 x00000001 )
( outdoors~l1 where~l1 binocular~l1 x00000001 )
( see_birds~l1 why~l1 binocular~l1 x00000001 )
( see_birds~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 magnifying_glass~l1 x00000001 )
( see~l1 use~l1 magnifying_glass~l1 x00000001 )
( magnifying_glass~l1 use_to~l1 see_*~l1 x00000001 )
( smaller~l1 adverb~l1 magnifying_glass~l1 x00000001 )
( science~l1 activity~l1 magnifying_glass~l1 x00000001 )
( scientist~l1 agent~l1 magnifying_glass~l1 x00000001 )
( laboratory~l1 where~l1 magnifying_glass~l1 x00000001 )
( see_cells~l1 why~l1 magnifying_glass~l1 x00000001 )
( see_cells~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 microscope~l1 x00000001 )
( see~l1 use~l1 microscope~l1 x00000001 )
( microscope~l1 use_to~l1 see_*~l1 x00000001 )
( smaller~l1 adverb~l1 microscope~l1 x00000001 )
( science~l1 activity~l1 microscope~l1 x00000001 )
( scientist~l1 agent~l1 microscope~l1 x00000001 )
( laboratory~l1 where~l1 microscope~l1 x00000001 )
( see_cells~l1 why~l1 microscope~l1 x00000001 )
( amplify~l1 functionality~l1 periscope~l1 x00000001 )
( see~l1 use~l1 periscope~l1 x00000001 )
( periscope~l1 use_to~l1 see_*~l1 x00000001 )
( above~l1 adverb~l1 periscope~l1 x00000001 )
( submarining~l1 activity~l1 periscope~l1 x00000001 )
( sailor~l1 agent~l1 periscope~l1 x00000001 )
( submarine~l1 where~l1 periscope~l1 x00000001 )
( see_surface_vessels~l1 why~l1 periscope~l1 x00000001 )
( see_surface_vessels~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 mirror~l1 x00000001 )
( see~l1 use~l1 mirror~l1 x00000001 )
( mirror~l1 use_to~l1 see_*~l1 x00000001 )
( behind~l1 adverb~l1 mirror~l1 x00000001 )
( bathroom~l1 where~l1 mirror~l1 x00000001 )
( see_oneself~l1 why~l1 mirror~l1 x00000001 )
( see_oneself~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 night_vision_goggle~l1 x00000001 )
( see~l1 use~l1 night_vision_goggle~l1 x00000001 )
( night_vision_goggle~l1 use_to~l1 see_*~l1 x00000001 )
( dark~l1 adverb~l1 night_vision_goggle~l1 x00000001 )
( warfare~l1 activity~l1 night_vision_goggle~l1 x00000001 )
( soldier~l1 agent~l1 night_vision_goggle~l1 x00000001 )
( outdoors~l1 where~l1 night_vision_goggle~l1 x00000001 )
( see_enemies~l1 why~l1 night_vision_goggle~l1 x00000001 )
( see_enemies~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 contacts~l1 x00000001 )
( see~l1 use~l1 contacts~l1 x00000001 )
( contacts~l1 use_to~l1 see_*~l1 x00000001 )
( clearer~l1 adverb~l1 contacts~l1 x00000001 )
( reading~l1 activity~l1 contacts~l1 x00000001 )
( read_a_book~l1 why~l1 contacts~l1 x00000001 )
( read_a_book~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 glasses~l1 x00000001 )
( see~l1 use~l1 glasses~l1 x00000001 )
( glasses~l1 use_to~l1 see_*~l1 x00000001 )
( clearer~l1 adverb~l1 glasses~l1 x00000001 )
( reading~l1 activity~l1 glasses~l1 x00000001 )
( read_a_book~l1 why~l1 glasses~l1 x00000001 )
( amplify~l1 functionality~l1 overhead_projector~l1 x00000001 )
( display~l1 use~l1 overhead_projector~l1 x00000001 )
( overhead_projector~l1 use_to~l1 display_writing~l1 x00000001 )
( writing~l1 object~l1 overhead_projector~l1 x00000001 )
( presentation~l1 activity~l1 overhead_projector~l1 x00000001 )
( presenter~l1 agent~l1 overhead_projector~l1 x00000001 )
( auditorium~l1 where~l1 overhead_projector~l1 x00000001 )
( make_writing_visible_to_audiences~l1 why~l1 overhead_projector~l1 x00000001 )
( make_writing_visible_to_audiences~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 projector~l1 x00000001 )
( display~l1 use~l1 projector~l1 x00000001 )
( projector~l1 use_to~l1 display_writing~l1 x00000001 )
( writing~l1 object~l1 projector~l1 x00000001 )
( presentation~l1 activity~l1 projector~l1 x00000001 )
( presenter~l1 agent~l1 projector~l1 x00000001 )
( auditorium~l1 where~l1 projector~l1 x00000001 )
( make_writing_visible_to_audiences~l1 why~l1 projector~l1 x00000001 )
( amplify~l1 functionality~l1 slide_projector~l1 x00000001 )
( display~l1 use~l1 slide_projector~l1 x00000001 )
( slide_projector~l1 use_to~l1 display_pictures~l1 x00000001 )
( pictures~l1 object~l1 slide_projector~l1 x00000001 )
( presentation~l1 activity~l1 slide_projector~l1 x00000001 )
( presenter~l1 agent~l1 slide_projector~l1 x00000001 )
( auditorium~l1 where~l1 slide_projector~l1 x00000001 )
( make_pictures_visible_to_audiences~l1 why~l1 slide_projector~l1 x00000001 )
( make_pictures_visible_to_audiences~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 lamp~l1 x00000001 )
( emit~l1 use~l1 lamp~l1 x00000001 )
( lamp~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 lamp~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 lamp~l1 x00000001 )
( make_things_visible_in_the_dark~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 flashlight~l1 x00000001 )
( emit~l1 use~l1 flashlight~l1 x00000001 )
( flashlight~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 flashlight~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 flashlight~l1 x00000001 )
( amplify~l1 functionality~l1 lantern~l1 x00000001 )
( emit~l1 use~l1 lantern~l1 x00000001 )
( lantern~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 lantern~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 lantern~l1 x00000001 )
( amplify~l1 functionality~l1 penlight~l1 x00000001 )
( emit~l1 use~l1 penlight~l1 x00000001 )
( penlight~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 penlight~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 penlight~l1 x00000001 )
( amplify~l1 functionality~l1 light_bulb~l1 x00000001 )
( emit~l1 use~l1 light_bulb~l1 x00000001 )
( light_bulb~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 light_bulb~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 light_bulb~l1 x00000001 )
( amplify~l1 functionality~l1 candle~l1 x00000001 )
( emit~l1 use~l1 candle~l1 x00000001 )
( candle~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 candle~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 candle~l1 x00000001 )
( amplify~l1 functionality~l1 light~l1 x00000001 )
( emit~l1 use~l1 light~l1 x00000001 )
( light~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 light~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 light~l1 x00000001 )
( amplify~l1 functionality~l1 fluorescent_light~l1 x00000001 )
( emit~l1 use~l1 fluorescent_light~l1 x00000001 )
( fluorescent_light~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 fluorescent_light~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 fluorescent_light~l1 x00000001 )
( amplify~l1 functionality~l1 pole_lamp~l1 x00000001 )
( emit~l1 use~l1 pole_lamp~l1 x00000001 )
( pole_lamp~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 pole_lamp~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 pole_lamp~l1 x00000001 )
( amplify~l1 functionality~l1 table_lamp~l1 x00000001 )
( emit~l1 use~l1 table_lamp~l1 x00000001 )
( table_lamp~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 table_lamp~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 table_lamp~l1 x00000001 )
( amplify~l1 functionality~l1 desk_lamp~l1 x00000001 )
( emit~l1 use~l1 desk_lamp~l1 x00000001 )
( desk_lamp~l1 use_to~l1 emit_light~l1 x00000001 )
( light~l1 object~l1 desk_lamp~l1 x00000001 )
( make_things_visible_in_the_dark~l1 why~l1 desk_lamp~l1 x00000001 )
( amplify~l1 functionality~l1 amplifier~l1 x00000001 )
( magnify~l1 use~l1 amplifier~l1 x00000001 )
( amplifier~l1 use_to~l1 magnify_sound~l1 x00000001 )
( sound~l1 object~l1 amplifier~l1 x00000001 )
( make_it_easier_to_hear_sound~l1 why~l1 amplifier~l1 x00000001 )
( make_it_easier_to_hear_sound~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 stethoscope~l1 x00000001 )
( magnify~l1 use~l1 stethoscope~l1 x00000001 )
( stethoscope~l1 use_to~l1 magnify_sound~l1 x00000001 )
( sound~l1 object~l1 stethoscope~l1 x00000001 )
( make_it_easier_to_hear_sound~l1 why~l1 stethoscope~l1 x00000001 )
( amplify~l1 functionality~l1 hearing_aid~l1 x00000001 )
( magnify~l1 use~l1 hearing_aid~l1 x00000001 )
( hearing_aid~l1 use_to~l1 magnify_sound~l1 x00000001 )
( sound~l1 object~l1 hearing_aid~l1 x00000001 )
( make_it_easier_to_hear_sound~l1 why~l1 hearing_aid~l1 x00000001 )
( amplify~l1 functionality~l1 ladder~l1 x00000001 )
( reach~l1 use~l1 ladder~l1 x00000001 )
( ladder~l1 use_to~l1 reach_*~l1 x00000001 )
( higher~l1 adverb~l1 ladder~l1 x00000001 )
( reach_high_areas~l1 why~l1 ladder~l1 x00000001 )
( reach_high_areas~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 step_ladder~l1 x00000001 )
( reach~l1 use~l1 step_ladder~l1 x00000001 )
( step_ladder~l1 use_to~l1 reach_*~l1 x00000001 )
( higher~l1 adverb~l1 step_ladder~l1 x00000001 )
( reach_high_areas~l1 why~l1 step_ladder~l1 x00000001 )
( amplify~l1 functionality~l1 crutch~l1 x00000001 )
( walk~l1 use~l1 crutch~l1 x00000001 )
( crutch~l1 use_to~l1 walk_*~l1 x00000001 )
( better~l1 adverb~l1 crutch~l1 x00000001 )
( walk_better_when_injured~l1 why~l1 crutch~l1 x00000001 )
( walk_better_when_injured~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 snorkel~l1 x00000001 )
( breathe~l1 use~l1 snorkel~l1 x00000001 )
( snorkel~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 snorkel~l1 x00000001 )
( breathe_underwater~l1 why~l1 snorkel~l1 x00000001 )
( breathe_underwater~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 snorkeler~l1 x00000001 )
( breathe~l1 use~l1 snorkeler~l1 x00000001 )
( snorkeler~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 snorkeler~l1 x00000001 )
( breathe_underwater~l1 why~l1 snorkeler~l1 x00000001 )
( amplify~l1 functionality~l1 gas_mask~l1 x00000001 )
( breathe~l1 use~l1 gas_mask~l1 x00000001 )
( gas_mask~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 gas_mask~l1 x00000001 )
( breathe_underwater~l1 why~l1 gas_mask~l1 x00000001 )
( amplify~l1 functionality~l1 oxygen_mask~l1 x00000001 )
( breathe~l1 use~l1 oxygen_mask~l1 x00000001 )
( oxygen_mask~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 oxygen_mask~l1 x00000001 )
( breathe_underwater~l1 why~l1 oxygen_mask~l1 x00000001 )
( amplify~l1 functionality~l1 rebreather~l1 x00000001 )
( breathe~l1 use~l1 rebreather~l1 x00000001 )
( rebreather~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 rebreather~l1 x00000001 )
( breathe_underwater~l1 why~l1 rebreather~l1 x00000001 )
( amplify~l1 functionality~l1 scubagear~l1 x00000001 )
( breathe~l1 use~l1 scubagear~l1 x00000001 )
( scubagear~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 scubagear~l1 x00000001 )
( breathe_underwater~l1 why~l1 scubagear~l1 x00000001 )
( amplify~l1 functionality~l1 air_tank~l1 x00000001 )
( breathe~l1 use~l1 air_tank~l1 x00000001 )
( air_tank~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 air_tank~l1 x00000001 )
( breathe_underwater~l1 why~l1 air_tank~l1 x00000001 )
( amplify~l1 functionality~l1 diving_bell~l1 x00000001 )
( breathe~l1 use~l1 diving_bell~l1 x00000001 )
( diving_bell~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 diving_bell~l1 x00000001 )
( breathe_underwater~l1 why~l1 diving_bell~l1 x00000001 )
( amplify~l1 functionality~l1 regulator~l1 x00000001 )
( breathe~l1 use~l1 regulator~l1 x00000001 )
( regulator~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 regulator~l1 x00000001 )
( breathe_underwater~l1 why~l1 regulator~l1 x00000001 )
( amplify~l1 functionality~l1 divingsuit~l1 x00000001 )
( breathe~l1 use~l1 divingsuit~l1 x00000001 )
( divingsuit~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 divingsuit~l1 x00000001 )
( breathe_underwater~l1 why~l1 divingsuit~l1 x00000001 )
( amplify~l1 functionality~l1 scuba~l1 x00000001 )
( breathe~l1 use~l1 scuba~l1 x00000001 )
( scuba~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 scuba~l1 x00000001 )
( breathe_underwater~l1 why~l1 scuba~l1 x00000001 )
( amplify~l1 functionality~l1 diving_helmet~l1 x00000001 )
( breathe~l1 use~l1 diving_helmet~l1 x00000001 )
( diving_helmet~l1 use_to~l1 breathe_*~l1 x00000001 )
( underwater~l1 adverb~l1 diving_helmet~l1 x00000001 )
( breathe_underwater~l1 why~l1 diving_helmet~l1 x00000001 )
( amplify~l1 functionality~l1 surfboard~l1 x00000001 )
( move~l1 use~l1 surfboard~l1 x00000001 )
( surfboard~l1 use_to~l1 move_*~l1 x00000001 )
( water~l1 adverb~l1 surfboard~l1 x00000001 )
( move_in_water~l1 why~l1 surfboard~l1 x00000001 )
( move_in_water~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 flipper~l1 x00000001 )
( move~l1 use~l1 flipper~l1 x00000001 )
( flipper~l1 use_to~l1 move_*~l1 x00000001 )
( water~l1 adverb~l1 flipper~l1 x00000001 )
( move_in_water~l1 why~l1 flipper~l1 x00000001 )
( amplify~l1 functionality~l1 jetpack~l1 x00000001 )
( move~l1 use~l1 jetpack~l1 x00000001 )
( jetpack~l1 use_to~l1 move_*~l1 x00000001 )
( air~l1 adverb~l1 jetpack~l1 x00000001 )
( move_in_air~l1 why~l1 jetpack~l1 x00000001 )
( move_in_air~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 wings~l1 x00000001 )
( move~l1 use~l1 wings~l1 x00000001 )
( wings~l1 use_to~l1 move_*~l1 x00000001 )
( air~l1 adverb~l1 wings~l1 x00000001 )
( move_in_air~l1 why~l1 wings~l1 x00000001 )
( amplify~l1 functionality~l1 parachute~l1 x00000001 )
( move~l1 use~l1 parachute~l1 x00000001 )
( parachute~l1 use_to~l1 move_*~l1 x00000001 )
( air~l1 adverb~l1 parachute~l1 x00000001 )
( move_in_air~l1 why~l1 parachute~l1 x00000001 )
( amplify~l1 functionality~l1 ballast~l1 x00000001 )
( make~l1 use~l1 ballast~l1 x00000001 )
( ballast~l1 use_to~l1 make_*~l1 x00000001 )
( steadier~l1 adverb~l1 ballast~l1 x00000001 )
( sailing~l1 activity~l1 ballast~l1 x00000001 )
( ship~l1 where~l1 ballast~l1 x00000001 )
( make_a_vessel_steadier~l1 why~l1 ballast~l1 x00000001 )
( make_a_vessel_steadier~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 gyroscope~l1 x00000001 )
( make~l1 use~l1 gyroscope~l1 x00000001 )
( gyroscope~l1 use_to~l1 make_*~l1 x00000001 )
( steadier~l1 adverb~l1 gyroscope~l1 x00000001 )
( stop_things_from_falling_over~l1 why~l1 gyroscope~l1 x00000001 )
( stop_things_from_falling_over~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 headphone~l1 x00000001 )
( improve~l1 use~l1 headphone~l1 x00000001 )
( headphone~l1 use_to~l1 improve_hearing~l1 x00000001 )
( hearing~l1 object~l1 headphone~l1 x00000001 )
( listen_to_music~l1 why~l1 headphone~l1 x00000001 )
( listen_to_music~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 blinder~l1 x00000001 )
( degrade~l1 use~l1 blinder~l1 x00000001 )
( blinder~l1 use_to~l1 degrade_vision~l1 x00000001 )
( vision~l1 object~l1 blinder~l1 x00000001 )
( keep_a_horse_calm~l1 why~l1 blinder~l1 x00000001 )
( keep_a_horse_calm~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 medicine~l1 x00000001 )
( heal~l1 use~l1 medicine~l1 x00000001 )
( medicine~l1 use_to~l1 heal_injuries~l1 x00000001 )
( injuries~l1 object~l1 medicine~l1 x00000001 )
( improve_the_sick~l1 why~l1 medicine~l1 x00000001 )
( improve_the_sick~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 photograph~l1 x00000001 )
( assist~l1 use~l1 photograph~l1 x00000001 )
( photograph~l1 use_to~l1 assist_memory~l1 x00000001 )
( memory~l1 object~l1 photograph~l1 x00000001 )
( remember_events_of_the_past~l1 why~l1 photograph~l1 x00000001 )
( remember_events_of_the_past~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 encyclopedia~l1 x00000001 )
( enhance~l1 use~l1 encyclopedia~l1 x00000001 )
( encyclopedia~l1 use_to~l1 enhance_knowledge~l1 x00000001 )
( knowledge~l1 object~l1 encyclopedia~l1 x00000001 )
( provide_knowledge_on_subjects~l1 why~l1 encyclopedia~l1 x00000001 )
( provide_knowledge_on_subjects~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 dictionary~l1 x00000001 )
( enhance~l1 use~l1 dictionary~l1 x00000001 )
( dictionary~l1 use_to~l1 enhance_knowledge~l1 x00000001 )
( knowledge~l1 object~l1 dictionary~l1 x00000001 )
( provide_knowledge_on_words~l1 why~l1 dictionary~l1 x00000001 )
( provide_knowledge_on_words~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 thesaurus~l1 x00000001 )
( enhance~l1 use~l1 thesaurus~l1 x00000001 )
( thesaurus~l1 use_to~l1 enhance_knowledge~l1 x00000001 )
( knowledge~l1 object~l1 thesaurus~l1 x00000001 )
( provide_knowledge_on_words~l1 why~l1 thesaurus~l1 x00000001 )
( amplify~l1 functionality~l1 dildo~l1 x00000001 )
( enhance~l1 use~l1 dildo~l1 x00000001 )
( dildo~l1 use_to~l1 enhance_sex~l1 x00000001 )
( sex~l1 object~l1 dildo~l1 x00000001 )
( provide_manual_stimulation~l1 why~l1 dildo~l1 x00000001 )
( provide_manual_stimulation~l1 ~tool verify~l1 x00000001 )
( amplify~l1 functionality~l1 vibrator~l1 x00000001 )
( enhance~l1 use~l1 vibrator~l1 x00000001 )
( vibrator~l1 use_to~l1 enhance_sex~l1 x00000001 )
( sex~l1 object~l1 vibrator~l1 x00000001 )
( provide_manual_stimulation~l1 why~l1 vibrator~l1 x00000001 )
( emit_sound~l1 functionality~l1 ~musical_instruments_string x00000001 )
( make~l1 use~l1 ~musical_instruments_string x00000001 )
( ~musical_instruments_string use_to~l1 make_music~l1 x00000001 )
( music~l1 object~l1 ~musical_instruments_string x00000001 )
( musician~l1 agent~l1 ~musical_instruments_string x00000001 )
( concert_hall~l1 where~l1 ~musical_instruments_string x00000001 )
( create_string_sounds~l1 why~l1 ~musical_instruments_string x00000001 )
( create_string_sounds~l1 ~tool verify~l1 x00000001 )
( emit_sound~l1 functionality~l1 ~musical_instruments_percussion x00000001 )
( make~l1 use~l1 ~musical_instruments_percussion x00000001 )
( ~musical_instruments_percussion use_to~l1 make_music~l1 x00000001 )
( music~l1 object~l1 ~musical_instruments_percussion x00000001 )
( musician~l1 agent~l1 ~musical_instruments_percussion x00000001 )
( concert_hall~l1 where~l1 ~musical_instruments_percussion x00000001 )
( create_percussion_sounds~l1 why~l1 ~musical_instruments_percussion x00000001 )
( create_percussion_sounds~l1 ~tool verify~l1 x00000001 )
( emit_sound~l1 functionality~l1 ~musical_instruments_brass x00000001 )
( make~l1 use~l1 ~musical_instruments_brass x00000001 )
( ~musical_instruments_brass use_to~l1 make_music~l1 x00000001 )
( music~l1 object~l1 ~musical_instruments_brass x00000001 )
( musician~l1 agent~l1 ~musical_instruments_brass x00000001 )
( concert_hall~l1 where~l1 ~musical_instruments_brass x00000001 )
( create_brass_sounds~l1 why~l1 ~musical_instruments_brass x00000001 )
( create_brass_sounds~l1 ~tool verify~l1 x00000001 )
( emit_sound~l1 functionality~l1 ~musical_instruments_woodwind x00000001 )
( make~l1 use~l1 ~musical_instruments_woodwind x00000001 )
( ~musical_instruments_woodwind use_to~l1 make_music~l1 x00000001 )
( music~l1 object~l1 ~musical_instruments_woodwind x00000001 )
( musician~l1 agent~l1 ~musical_instruments_woodwind x00000001 )
( concert_hall~l1 where~l1 ~musical_instruments_woodwind x00000001 )
( create_woodwind_sounds~l1 why~l1 ~musical_instruments_woodwind x00000001 )
( create_woodwind_sounds~l1 ~tool verify~l1 x00000001 )
( emit_sound~l1 functionality~l1 ~alarm x00000001 )
( create~l1 use~l1 ~alarm x00000001 )
( ~alarm use_to~l1 create_alarm~l1 x00000001 )
( alarm~l1 object~l1 ~alarm x00000001 )
( warn_you~l1 why~l1 ~alarm x00000001 )
( warn_you~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 bookcase~l1 x00000001 )
( hold~l1 use~l1 bookcase~l1 x00000001 )
( bookcase~l1 use_to~l1 hold_books~l1 x00000001 )
( books~l1 object~l1 bookcase~l1 x00000001 )
( storage~l1 activity~l1 bookcase~l1 x00000001 )
( library~l1 where~l1 bookcase~l1 x00000001 )
( make_books_accessible~l1 why~l1 bookcase~l1 x00000001 )
( make_books_accessible~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 chest~l1 x00000001 )
( store~l1 use~l1 chest~l1 x00000001 )
( chest~l1 use_to~l1 store_clothes~l1 x00000001 )
( clothes~l1 object~l1 chest~l1 x00000001 )
( storage~l1 activity~l1 chest~l1 x00000001 )
( bedroom~l1 where~l1 chest~l1 x00000001 )
( keep_clothes_safe~l1 why~l1 chest~l1 x00000001 )
( keep_clothes_safe~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 dresser~l1 x00000001 )
( store~l1 use~l1 dresser~l1 x00000001 )
( dresser~l1 use_to~l1 store_clothes~l1 x00000001 )
( clothes~l1 object~l1 dresser~l1 x00000001 )
( storage~l1 activity~l1 dresser~l1 x00000001 )
( bedroom~l1 where~l1 dresser~l1 x00000001 )
( keep_clothes_safe~l1 why~l1 dresser~l1 x00000001 )
( furniture~l1 functionality~l1 armoire~l1 x00000001 )
( store~l1 use~l1 armoire~l1 x00000001 )
( armoire~l1 use_to~l1 store_clothes~l1 x00000001 )
( clothes~l1 object~l1 armoire~l1 x00000001 )
( storage~l1 activity~l1 armoire~l1 x00000001 )
( bedroom~l1 where~l1 armoire~l1 x00000001 )
( keep_clothes_safe~l1 why~l1 armoire~l1 x00000001 )
( furniture~l1 functionality~l1 cabinet~l1 x00000001 )
( store~l1 use~l1 cabinet~l1 x00000001 )
( cabinet~l1 use_to~l1 store_clothes~l1 x00000001 )
( clothes~l1 object~l1 cabinet~l1 x00000001 )
( storage~l1 activity~l1 cabinet~l1 x00000001 )
( bedroom~l1 where~l1 cabinet~l1 x00000001 )
( keep_clothes_safe~l1 why~l1 cabinet~l1 x00000001 )
( furniture~l1 functionality~l1 sideboard~l1 x00000001 )
( store~l1 use~l1 sideboard~l1 x00000001 )
( sideboard~l1 use_to~l1 store_objects~l1 x00000001 )
( objects~l1 object~l1 sideboard~l1 x00000001 )
( storage~l1 activity~l1 sideboard~l1 x00000001 )
( dining_room~l1 where~l1 sideboard~l1 x00000001 )
( store_plates~l1 why~l1 sideboard~l1 x00000001 )
( store_plates~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 credenza~l1 x00000001 )
( store~l1 use~l1 credenza~l1 x00000001 )
( credenza~l1 use_to~l1 store_objects~l1 x00000001 )
( objects~l1 object~l1 credenza~l1 x00000001 )
( storage~l1 activity~l1 credenza~l1 x00000001 )
( dining_room~l1 where~l1 credenza~l1 x00000001 )
( store_plates~l1 why~l1 credenza~l1 x00000001 )
( furniture~l1 functionality~l1 hutch~l1 x00000001 )
( store~l1 use~l1 hutch~l1 x00000001 )
( hutch~l1 use_to~l1 store_objects~l1 x00000001 )
( objects~l1 object~l1 hutch~l1 x00000001 )
( storage~l1 activity~l1 hutch~l1 x00000001 )
( dining_room~l1 where~l1 hutch~l1 x00000001 )
( store_plates~l1 why~l1 hutch~l1 x00000001 )
( furniture~l1 functionality~l1 cupboard~l1 x00000001 )
( hold~l1 use~l1 cupboard~l1 x00000001 )
( cupboard~l1 use_to~l1 hold_objects~l1 x00000001 )
( objects~l1 object~l1 cupboard~l1 x00000001 )
( storage~l1 activity~l1 cupboard~l1 x00000001 )
( display_knickknacks~l1 why~l1 cupboard~l1 x00000001 )
( display_knickknacks~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 shelf~l1 x00000001 )
( hold~l1 use~l1 shelf~l1 x00000001 )
( shelf~l1 use_to~l1 hold_objects~l1 x00000001 )
( objects~l1 object~l1 shelf~l1 x00000001 )
( storage~l1 activity~l1 shelf~l1 x00000001 )
( display_knickknacks~l1 why~l1 shelf~l1 x00000001 )
( furniture~l1 functionality~l1 sofa~l1 x00000001 )
( assist~l1 use~l1 sofa~l1 x00000001 )
( sofa~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 sofa~l1 x00000001 )
( sitting~l1 activity~l1 sofa~l1 x00000001 )
( living_room~l1 where~l1 sofa~l1 x00000001 )
( sit_comfortably~l1 why~l1 sofa~l1 x00000001 )
( sit_comfortably~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 couch~l1 x00000001 )
( assist~l1 use~l1 couch~l1 x00000001 )
( couch~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 couch~l1 x00000001 )
( sitting~l1 activity~l1 couch~l1 x00000001 )
( living_room~l1 where~l1 couch~l1 x00000001 )
( sit_comfortably~l1 why~l1 couch~l1 x00000001 )
( furniture~l1 functionality~l1 seat~l1 x00000001 )
( assist~l1 use~l1 seat~l1 x00000001 )
( seat~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 seat~l1 x00000001 )
( sitting~l1 activity~l1 seat~l1 x00000001 )
( living_room~l1 where~l1 seat~l1 x00000001 )
( sit_comfortably~l1 why~l1 seat~l1 x00000001 )
( furniture~l1 functionality~l1 rocking_chair~l1 x00000001 )
( assist~l1 use~l1 rocking_chair~l1 x00000001 )
( rocking_chair~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 rocking_chair~l1 x00000001 )
( sitting~l1 activity~l1 rocking_chair~l1 x00000001 )
( living_room~l1 where~l1 rocking_chair~l1 x00000001 )
( sit_comfortably~l1 why~l1 rocking_chair~l1 x00000001 )
( furniture~l1 functionality~l1 chair~l1 x00000001 )
( assist~l1 use~l1 chair~l1 x00000001 )
( chair~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 chair~l1 x00000001 )
( sitting~l1 activity~l1 chair~l1 x00000001 )
( living_room~l1 where~l1 chair~l1 x00000001 )
( sit_comfortably~l1 why~l1 chair~l1 x00000001 )
( furniture~l1 functionality~l1 armchair~l1 x00000001 )
( assist~l1 use~l1 armchair~l1 x00000001 )
( armchair~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 armchair~l1 x00000001 )
( sitting~l1 activity~l1 armchair~l1 x00000001 )
( living_room~l1 where~l1 armchair~l1 x00000001 )
( sit_comfortably~l1 why~l1 armchair~l1 x00000001 )
( furniture~l1 functionality~l1 stool~l1 x00000001 )
( assist~l1 use~l1 stool~l1 x00000001 )
( stool~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 stool~l1 x00000001 )
( sitting~l1 activity~l1 stool~l1 x00000001 )
( living_room~l1 where~l1 stool~l1 x00000001 )
( sit_comfortably~l1 why~l1 stool~l1 x00000001 )
( furniture~l1 functionality~l1 bean_bag~l1 x00000001 )
( assist~l1 use~l1 bean_bag~l1 x00000001 )
( bean_bag~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 bean_bag~l1 x00000001 )
( sitting~l1 activity~l1 bean_bag~l1 x00000001 )
( living_room~l1 where~l1 bean_bag~l1 x00000001 )
( sit_comfortably~l1 why~l1 bean_bag~l1 x00000001 )
( furniture~l1 functionality~l1 bench~l1 x00000001 )
( assist~l1 use~l1 bench~l1 x00000001 )
( bench~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 bench~l1 x00000001 )
( sitting~l1 activity~l1 bench~l1 x00000001 )
( living_room~l1 where~l1 bench~l1 x00000001 )
( sit_comfortably~l1 why~l1 bench~l1 x00000001 )
( furniture~l1 functionality~l1 chaise_lounge~l1 x00000001 )
( assist~l1 use~l1 chaise_lounge~l1 x00000001 )
( chaise_lounge~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 chaise_lounge~l1 x00000001 )
( sitting~l1 activity~l1 chaise_lounge~l1 x00000001 )
( living_room~l1 where~l1 chaise_lounge~l1 x00000001 )
( sit_comfortably~l1 why~l1 chaise_lounge~l1 x00000001 )
( furniture~l1 functionality~l1 love_seat~l1 x00000001 )
( assist~l1 use~l1 love_seat~l1 x00000001 )
( love_seat~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 love_seat~l1 x00000001 )
( sitting~l1 activity~l1 love_seat~l1 x00000001 )
( living_room~l1 where~l1 love_seat~l1 x00000001 )
( sit_comfortably~l1 why~l1 love_seat~l1 x00000001 )
( furniture~l1 functionality~l1 ottoman~l1 x00000001 )
( assist~l1 use~l1 ottoman~l1 x00000001 )
( ottoman~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 ottoman~l1 x00000001 )
( sitting~l1 activity~l1 ottoman~l1 x00000001 )
( living_room~l1 where~l1 ottoman~l1 x00000001 )
( sit_comfortably~l1 why~l1 ottoman~l1 x00000001 )
( furniture~l1 functionality~l1 recliner~l1 x00000001 )
( assist~l1 use~l1 recliner~l1 x00000001 )
( recliner~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 recliner~l1 x00000001 )
( sitting~l1 activity~l1 recliner~l1 x00000001 )
( living_room~l1 where~l1 recliner~l1 x00000001 )
( sit_comfortably~l1 why~l1 recliner~l1 x00000001 )
( furniture~l1 functionality~l1 settee~l1 x00000001 )
( assist~l1 use~l1 settee~l1 x00000001 )
( settee~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 settee~l1 x00000001 )
( sitting~l1 activity~l1 settee~l1 x00000001 )
( living_room~l1 where~l1 settee~l1 x00000001 )
( sit_comfortably~l1 why~l1 settee~l1 x00000001 )
( furniture~l1 functionality~l1 tuffet~l1 x00000001 )
( assist~l1 use~l1 tuffet~l1 x00000001 )
( tuffet~l1 use_to~l1 assist_sitting~l1 x00000001 )
( sitting~l1 object~l1 tuffet~l1 x00000001 )
( sitting~l1 activity~l1 tuffet~l1 x00000001 )
( living_room~l1 where~l1 tuffet~l1 x00000001 )
( sit_comfortably~l1 why~l1 tuffet~l1 x00000001 )
( furniture~l1 functionality~l1 tv_stand~l1 x00000001 )
( hold~l1 use~l1 tv_stand~l1 x00000001 )
( tv_stand~l1 use_to~l1 hold_TV~l1 x00000001 )
( TV~l1 object~l1 tv_stand~l1 x00000001 )
( surface~l1 activity~l1 tv_stand~l1 x00000001 )
( living_room~l1 where~l1 tv_stand~l1 x00000001 )
( put_tv_at_a_useful_height~l1 why~l1 tv_stand~l1 x00000001 )
( put_tv_at_a_useful_height~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 desk~l1 x00000001 )
( organize~l1 use~l1 desk~l1 x00000001 )
( desk~l1 use_to~l1 organize_writing~l1 x00000001 )
( writing~l1 object~l1 desk~l1 x00000001 )
( surface~l1 activity~l1 desk~l1 x00000001 )
( office~l1 where~l1 desk~l1 x00000001 )
( provide_surface_and_supplies_for_writing~l1 why~l1 desk~l1 x00000001 )
( provide_surface_and_supplies_for_writing~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 table~l1 x00000001 )
( rest~l1 use~l1 table~l1 x00000001 )
( table~l1 use_to~l1 rest_objects~l1 x00000001 )
( objects~l1 object~l1 table~l1 x00000001 )
( surface~l1 activity~l1 table~l1 x00000001 )
( living_room~l1 where~l1 table~l1 x00000001 )
( eat_meals_on~l1 why~l1 table~l1 x00000001 )
( eat_meals_on~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 coffee_table~l1 x00000001 )
( rest~l1 use~l1 coffee_table~l1 x00000001 )
( coffee_table~l1 use_to~l1 rest_objects~l1 x00000001 )
( objects~l1 object~l1 coffee_table~l1 x00000001 )
( surface~l1 activity~l1 coffee_table~l1 x00000001 )
( living_room~l1 where~l1 coffee_table~l1 x00000001 )
( eat_meals_on~l1 why~l1 coffee_table~l1 x00000001 )
( furniture~l1 functionality~l1 folding_table~l1 x00000001 )
( rest~l1 use~l1 folding_table~l1 x00000001 )
( folding_table~l1 use_to~l1 rest_objects~l1 x00000001 )
( objects~l1 object~l1 folding_table~l1 x00000001 )
( surface~l1 activity~l1 folding_table~l1 x00000001 )
( living_room~l1 where~l1 folding_table~l1 x00000001 )
( eat_meals_on~l1 why~l1 folding_table~l1 x00000001 )
( furniture~l1 functionality~l1 end_table~l1 x00000001 )
( rest~l1 use~l1 end_table~l1 x00000001 )
( end_table~l1 use_to~l1 rest_objects~l1 x00000001 )
( objects~l1 object~l1 end_table~l1 x00000001 )
( surface~l1 activity~l1 end_table~l1 x00000001 )
( living_room~l1 where~l1 end_table~l1 x00000001 )
( eat_meals_on~l1 why~l1 end_table~l1 x00000001 )
( furniture~l1 functionality~l1 nightstand~l1 x00000001 )
( rest~l1 use~l1 nightstand~l1 x00000001 )
( nightstand~l1 use_to~l1 rest_objects~l1 x00000001 )
( objects~l1 object~l1 nightstand~l1 x00000001 )
( surface~l1 activity~l1 nightstand~l1 x00000001 )
( bedroom~l1 where~l1 nightstand~l1 x00000001 )
( put_small_items_upon~l1 why~l1 nightstand~l1 x00000001 )
( put_small_items_upon~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 chalkboard~l1 x00000001 )
( write~l1 use~l1 chalkboard~l1 x00000001 )
( chalkboard~l1 use_to~l1 write_*~l1 x00000001 )
( with_chalk~l1 adverb~l1 chalkboard~l1 x00000001 )
( surface~l1 activity~l1 chalkboard~l1 x00000001 )
( school~l1 where~l1 chalkboard~l1 x00000001 )
( display_writing~l1 why~l1 chalkboard~l1 x00000001 )
( display_writing~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 monitor~l1 x00000001 )
( display~l1 use~l1 monitor~l1 x00000001 )
( monitor~l1 use_to~l1 display_output~l1 x00000001 )
( output~l1 object~l1 monitor~l1 x00000001 )
( surface~l1 activity~l1 monitor~l1 x00000001 )
( desk~l1 where~l1 monitor~l1 x00000001 )
( display_comnputer_output~l1 why~l1 monitor~l1 x00000001 )
( display_comnputer_output~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 cot~l1 x00000001 )
( assist~l1 use~l1 cot~l1 x00000001 )
( cot~l1 use_to~l1 assist_sleeping~l1 x00000001 )
( sleeping~l1 object~l1 cot~l1 x00000001 )
( sleeping~l1 activity~l1 cot~l1 x00000001 )
( person~l1 agent~l1 cot~l1 x00000001 )
( bedroom~l1 where~l1 cot~l1 x00000001 )
( get_a_sound_sleep~l1 why~l1 cot~l1 x00000001 )
( get_a_sound_sleep~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 bed~l1 x00000001 )
( assist~l1 use~l1 bed~l1 x00000001 )
( bed~l1 use_to~l1 assist_sleeping~l1 x00000001 )
( sleeping~l1 object~l1 bed~l1 x00000001 )
( sleeping~l1 activity~l1 bed~l1 x00000001 )
( person~l1 agent~l1 bed~l1 x00000001 )
( bedroom~l1 where~l1 bed~l1 x00000001 )
( get_a_sound_sleep~l1 why~l1 bed~l1 x00000001 )
( furniture~l1 functionality~l1 sleeping_bag~l1 x00000001 )
( assist~l1 use~l1 sleeping_bag~l1 x00000001 )
( sleeping_bag~l1 use_to~l1 assist_sleeping~l1 x00000001 )
( sleeping~l1 object~l1 sleeping_bag~l1 x00000001 )
( sleeping~l1 activity~l1 sleeping_bag~l1 x00000001 )
( person~l1 agent~l1 sleeping_bag~l1 x00000001 )
( bedroom~l1 where~l1 sleeping_bag~l1 x00000001 )
( get_a_sound_sleep~l1 why~l1 sleeping_bag~l1 x00000001 )
( furniture~l1 functionality~l1 hammock~l1 x00000001 )
( assist~l1 use~l1 hammock~l1 x00000001 )
( hammock~l1 use_to~l1 assist_sleeping~l1 x00000001 )
( sleeping~l1 object~l1 hammock~l1 x00000001 )
( sleeping~l1 activity~l1 hammock~l1 x00000001 )
( person~l1 agent~l1 hammock~l1 x00000001 )
( bedroom~l1 where~l1 hammock~l1 x00000001 )
( get_a_sound_sleep~l1 why~l1 hammock~l1 x00000001 )
( furniture~l1 functionality~l1 phonograph~l1 x00000001 )
( listen_to~l1 use~l1 phonograph~l1 x00000001 )
( phonograph~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 phonograph~l1 x00000001 )
( entertainment~l1 activity~l1 phonograph~l1 x00000001 )
( living_room~l1 where~l1 phonograph~l1 x00000001 )
( enjoy_music~l1 why~l1 phonograph~l1 x00000001 )
( enjoy_music~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 CD_player~l1 x00000001 )
( listen_to~l1 use~l1 CD_player~l1 x00000001 )
( CD_player~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 CD_player~l1 x00000001 )
( entertainment~l1 activity~l1 CD_player~l1 x00000001 )
( living_room~l1 where~l1 CD_player~l1 x00000001 )
( enjoy_music~l1 why~l1 CD_player~l1 x00000001 )
( furniture~l1 functionality~l1 gramophone~l1 x00000001 )
( listen_to~l1 use~l1 gramophone~l1 x00000001 )
( gramophone~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 gramophone~l1 x00000001 )
( entertainment~l1 activity~l1 gramophone~l1 x00000001 )
( living_room~l1 where~l1 gramophone~l1 x00000001 )
( enjoy_music~l1 why~l1 gramophone~l1 x00000001 )
( furniture~l1 functionality~l1 stereo~l1 x00000001 )
( listen_to~l1 use~l1 stereo~l1 x00000001 )
( stereo~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 stereo~l1 x00000001 )
( entertainment~l1 activity~l1 stereo~l1 x00000001 )
( living_room~l1 where~l1 stereo~l1 x00000001 )
( enjoy_music~l1 why~l1 stereo~l1 x00000001 )
( furniture~l1 functionality~l1 radio~l1 x00000001 )
( listen_to~l1 use~l1 radio~l1 x00000001 )
( radio~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 radio~l1 x00000001 )
( entertainment~l1 activity~l1 radio~l1 x00000001 )
( living_room~l1 where~l1 radio~l1 x00000001 )
( enjoy_music~l1 why~l1 radio~l1 x00000001 )
( furniture~l1 functionality~l1 wireless_set~l1 x00000001 )
( listen_to~l1 use~l1 wireless_set~l1 x00000001 )
( wireless_set~l1 use_to~l1 listen_to_music~l1 x00000001 )
( music~l1 object~l1 wireless_set~l1 x00000001 )
( entertainment~l1 activity~l1 wireless_set~l1 x00000001 )
( living_room~l1 where~l1 wireless_set~l1 x00000001 )
( enjoy_music~l1 why~l1 wireless_set~l1 x00000001 )
( furniture~l1 functionality~l1 TV~l1 x00000001 )
( watch~l1 use~l1 TV~l1 x00000001 )
( TV~l1 use_to~l1 watch_programs~l1 x00000001 )
( programs~l1 object~l1 TV~l1 x00000001 )
( entertainment~l1 activity~l1 TV~l1 x00000001 )
( living_room~l1 where~l1 TV~l1 x00000001 )
( enjoy_drama~l1 why~l1 TV~l1 x00000001 )
( enjoy_drama~l1 ~tool verify~l1 x00000001 )
( furniture~l1 functionality~l1 television~l1 x00000001 )
( watch~l1 use~l1 television~l1 x00000001 )
( television~l1 use_to~l1 watch_programs~l1 x00000001 )
( programs~l1 object~l1 television~l1 x00000001 )
( entertainment~l1 activity~l1 television~l1 x00000001 )
( living_room~l1 where~l1 television~l1 x00000001 )
( enjoy_drama~l1 why~l1 television~l1 x00000001 )
( furniture~l1 functionality~l1 piano~l1 x00000001 )
( create~l1 use~l1 piano~l1 x00000001 )
( piano~l1 use_to~l1 create_music~l1 x00000001 )
( music~l1 object~l1 piano~l1 x00000001 )
( entertainment~l1 activity~l1 piano~l1 x00000001 )
( pianist~l1 agent~l1 piano~l1 x00000001 )
( living_room~l1 where~l1 piano~l1 x00000001 )
( enjoy_music~l1 why~l1 piano~l1 x00000001 )
( furniture~l1 functionality~l1 player_piano~l1 x00000001 )
( create~l1 use~l1 player_piano~l1 x00000001 )
( player_piano~l1 use_to~l1 create_music~l1 x00000001 )
( music~l1 object~l1 player_piano~l1 x00000001 )
( entertainment~l1 activity~l1 player_piano~l1 x00000001 )
( pianist~l1 agent~l1 player_piano~l1 x00000001 )
( living_room~l1 where~l1 player_piano~l1 x00000001 )
( enjoy_music~l1 why~l1 player_piano~l1 x00000001 )
( furniture~l1 functionality~l1 keyboard~l1 x00000001 )
( create~l1 use~l1 keyboard~l1 x00000001 )
( keyboard~l1 use_to~l1 create_music~l1 x00000001 )
( music~l1 object~l1 keyboard~l1 x00000001 )
( entertainment~l1 activity~l1 keyboard~l1 x00000001 )
( pianist~l1 agent~l1 keyboard~l1 x00000001 )
( living_room~l1 where~l1 keyboard~l1 x00000001 )
( enjoy_music~l1 why~l1 keyboard~l1 x00000001 )
( furnishing~l1 functionality~l1 rug~l1 x00000001 )
( protect~l1 use~l1 rug~l1 x00000001 )
( rug~l1 use_to~l1 protect_floor~l1 x00000001 )
( floor~l1 object~l1 rug~l1 x00000001 )
( esthetics~l1 activity~l1 rug~l1 x00000001 )
( living_room~l1 where~l1 rug~l1 x00000001 )
( make_walking_soft_on_the_feet~l1 why~l1 rug~l1 x00000001 )
( make_walking_soft_on_the_feet~l1 ~tool verify~l1 x00000001 )
( furnishing~l1 functionality~l1 picture~l1 x00000001 )
( provide~l1 use~l1 picture~l1 x00000001 )
( picture~l1 use_to~l1 provide_art~l1 x00000001 )
( art~l1 object~l1 picture~l1 x00000001 )
( esthetics~l1 activity~l1 picture~l1 x00000001 )
( wall~l1 where~l1 picture~l1 x00000001 )
( provide_pretty_environment~l1 why~l1 picture~l1 x00000001 )
( provide_pretty_environment~l1 ~tool verify~l1 x00000001 )
( furnishing~l1 functionality~l1 wall_hanging~l1 x00000001 )
( provide~l1 use~l1 wall_hanging~l1 x00000001 )
( wall_hanging~l1 use_to~l1 provide_art~l1 x00000001 )
( art~l1 object~l1 wall_hanging~l1 x00000001 )
( esthetics~l1 activity~l1 wall_hanging~l1 x00000001 )
( wall~l1 where~l1 wall_hanging~l1 x00000001 )
( provide_pretty_environment~l1 why~l1 wall_hanging~l1 x00000001 )
( furnishing~l1 functionality~l1 sculpture~l1 x00000001 )
( provide~l1 use~l1 sculpture~l1 x00000001 )
( sculpture~l1 use_to~l1 provide_art~l1 x00000001 )
( art~l1 object~l1 sculpture~l1 x00000001 )
( esthetics~l1 activity~l1 sculpture~l1 x00000001 )
( living_room~l1 where~l1 sculpture~l1 x00000001 )
( provide_pretty_environment~l1 why~l1 sculpture~l1 x00000001 )
( appliance~l1 functionality~l1 lamp~l1 x00000001 )
( provide~l1 use~l1 lamp~l1 x00000001 )
( lamp~l1 use_to~l1 provide_light~l1 x00000001 )
( reading~l1 activity~l1 lamp~l1 x00000001 )
( living_room~l1 where~l1 lamp~l1 x00000001 )
( make_it_possible_to_see_at_night~l1 why~l1 lamp~l1 x00000001 )
( make_it_possible_to_see_at_night~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 toaster~l1 x00000001 )
( cook~l1 use~l1 toaster~l1 x00000001 )
( toaster~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 toaster~l1 x00000001 )
( kitchen~l1 where~l1 toaster~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 toaster~l1 x00000001 )
( heat_one_'s_supper~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 oven~l1 x00000001 )
( cook~l1 use~l1 oven~l1 x00000001 )
( oven~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 oven~l1 x00000001 )
( kitchen~l1 where~l1 oven~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 oven~l1 x00000001 )
( appliance~l1 functionality~l1 stove~l1 x00000001 )
( cook~l1 use~l1 stove~l1 x00000001 )
( stove~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 stove~l1 x00000001 )
( kitchen~l1 where~l1 stove~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 stove~l1 x00000001 )
( appliance~l1 functionality~l1 microwave~l1 x00000001 )
( cook~l1 use~l1 microwave~l1 x00000001 )
( microwave~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 microwave~l1 x00000001 )
( kitchen~l1 where~l1 microwave~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 microwave~l1 x00000001 )
( appliance~l1 functionality~l1 cooktop~l1 x00000001 )
( cook~l1 use~l1 cooktop~l1 x00000001 )
( cooktop~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 cooktop~l1 x00000001 )
( kitchen~l1 where~l1 cooktop~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 cooktop~l1 x00000001 )
( appliance~l1 functionality~l1 burner~l1 x00000001 )
( cook~l1 use~l1 burner~l1 x00000001 )
( burner~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 burner~l1 x00000001 )
( kitchen~l1 where~l1 burner~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 burner~l1 x00000001 )
( appliance~l1 functionality~l1 grill~l1 x00000001 )
( cook~l1 use~l1 grill~l1 x00000001 )
( grill~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 grill~l1 x00000001 )
( kitchen~l1 where~l1 grill~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 grill~l1 x00000001 )
( appliance~l1 functionality~l1 gas_grill~l1 x00000001 )
( cook~l1 use~l1 gas_grill~l1 x00000001 )
( gas_grill~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 gas_grill~l1 x00000001 )
( kitchen~l1 where~l1 gas_grill~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 gas_grill~l1 x00000001 )
( appliance~l1 functionality~l1 barbeque~l1 x00000001 )
( cook~l1 use~l1 barbeque~l1 x00000001 )
( barbeque~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 barbeque~l1 x00000001 )
( kitchen~l1 where~l1 barbeque~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 barbeque~l1 x00000001 )
( appliance~l1 functionality~l1 waffle_iron~l1 x00000001 )
( cook~l1 use~l1 waffle_iron~l1 x00000001 )
( waffle_iron~l1 use_to~l1 cook_food~l1 x00000001 )
( food~l1 object~l1 waffle_iron~l1 x00000001 )
( kitchen~l1 where~l1 waffle_iron~l1 x00000001 )
( heat_one_'s_supper~l1 why~l1 waffle_iron~l1 x00000001 )
( appliance~l1 functionality~l1 fan~l1 x00000001 )
( cool~l1 use~l1 fan~l1 x00000001 )
( fan~l1 use_to~l1 cool_room~l1 x00000001 )
( room~l1 object~l1 fan~l1 x00000001 )
( living_room~l1 where~l1 fan~l1 x00000001 )
( cool_off~l1 why~l1 fan~l1 x00000001 )
( appliance~l1 functionality~l1 air_conditioner~l1 x00000001 )
( cool~l1 use~l1 air_conditioner~l1 x00000001 )
( air_conditioner~l1 use_to~l1 cool_room~l1 x00000001 )
( room~l1 object~l1 air_conditioner~l1 x00000001 )
( living_room~l1 where~l1 air_conditioner~l1 x00000001 )
( cool_off~l1 why~l1 air_conditioner~l1 x00000001 )
( appliance~l1 functionality~l1 heater~l1 x00000001 )
( heat~l1 use~l1 heater~l1 x00000001 )
( heater~l1 use_to~l1 heat_room~l1 x00000001 )
( room~l1 object~l1 heater~l1 x00000001 )
( living_room~l1 where~l1 heater~l1 x00000001 )
( warm_up~l1 why~l1 heater~l1 x00000001 )
( warm_up~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 dishwasher~l1 x00000001 )
( wash~l1 use~l1 dishwasher~l1 x00000001 )
( dishwasher~l1 use_to~l1 wash_dishes~l1 x00000001 )
( dishes~l1 object~l1 dishwasher~l1 x00000001 )
( kitchen~l1 where~l1 dishwasher~l1 x00000001 )
( clean_plates~l1 why~l1 dishwasher~l1 x00000001 )
( clean_plates~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 garbage_disposal~l1 x00000001 )
( trash~l1 use~l1 garbage_disposal~l1 x00000001 )
( garbage_disposal~l1 use_to~l1 trash_food~l1 x00000001 )
( food~l1 object~l1 garbage_disposal~l1 x00000001 )
( kitchen~l1 where~l1 garbage_disposal~l1 x00000001 )
( make_food_small_enough_to_drain~l1 why~l1 garbage_disposal~l1 x00000001 )
( make_food_small_enough_to_drain~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 washer~l1 x00000001 )
( wash~l1 use~l1 washer~l1 x00000001 )
( washer~l1 use_to~l1 wash_clothes~l1 x00000001 )
( clothes~l1 object~l1 washer~l1 x00000001 )
( bathroom~l1 where~l1 washer~l1 x00000001 )
( remove_smell~l1 why~l1 washer~l1 x00000001 )
( remove_smell~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 washing_machine~l1 x00000001 )
( wash~l1 use~l1 washing_machine~l1 x00000001 )
( washing_machine~l1 use_to~l1 wash_clothes~l1 x00000001 )
( clothes~l1 object~l1 washing_machine~l1 x00000001 )
( bathroom~l1 where~l1 washing_machine~l1 x00000001 )
( remove_smell~l1 why~l1 washing_machine~l1 x00000001 )
( appliance~l1 functionality~l1 dryer~l1 x00000001 )
( dry~l1 use~l1 dryer~l1 x00000001 )
( dryer~l1 use_to~l1 dry_clothes~l1 x00000001 )
( clothes~l1 object~l1 dryer~l1 x00000001 )
( bathroom~l1 where~l1 dryer~l1 x00000001 )
( dry_washed_clothes~l1 why~l1 dryer~l1 x00000001 )
( dry_washed_clothes~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 freezer~l1 x00000001 )
( chill~l1 use~l1 freezer~l1 x00000001 )
( freezer~l1 use_to~l1 chill_food~l1 x00000001 )
( food~l1 object~l1 freezer~l1 x00000001 )
( kitchen~l1 where~l1 freezer~l1 x00000001 )
( prevent_food_from_rotting~l1 why~l1 freezer~l1 x00000001 )
( prevent_food_from_rotting~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 refrigerator~l1 x00000001 )
( chill~l1 use~l1 refrigerator~l1 x00000001 )
( refrigerator~l1 use_to~l1 chill_food~l1 x00000001 )
( food~l1 object~l1 refrigerator~l1 x00000001 )
( kitchen~l1 where~l1 refrigerator~l1 x00000001 )
( prevent_food_from_rotting~l1 why~l1 refrigerator~l1 x00000001 )
( appliance~l1 functionality~l1 compactor~l1 x00000001 )
( crush~l1 use~l1 compactor~l1 x00000001 )
( compactor~l1 use_to~l1 crush_trash~l1 x00000001 )
( trash~l1 object~l1 compactor~l1 x00000001 )
( kitchen~l1 where~l1 compactor~l1 x00000001 )
( make_trash_smaller~l1 why~l1 compactor~l1 x00000001 )
( make_trash_smaller~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 trash_compactor~l1 x00000001 )
( crush~l1 use~l1 trash_compactor~l1 x00000001 )
( trash_compactor~l1 use_to~l1 crush_trash~l1 x00000001 )
( trash~l1 object~l1 trash_compactor~l1 x00000001 )
( kitchen~l1 where~l1 trash_compactor~l1 x00000001 )
( make_trash_smaller~l1 why~l1 trash_compactor~l1 x00000001 )
( appliance~l1 functionality~l1 homogenizer~l1 x00000001 )
( mix~l1 use~l1 homogenizer~l1 x00000001 )
( homogenizer~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 homogenizer~l1 x00000001 )
( kitchen~l1 where~l1 homogenizer~l1 x00000001 )
( stir_food_together~l1 why~l1 homogenizer~l1 x00000001 )
( stir_food_together~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 whisk~l1 x00000001 )
( mix~l1 use~l1 whisk~l1 x00000001 )
( whisk~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 whisk~l1 x00000001 )
( kitchen~l1 where~l1 whisk~l1 x00000001 )
( stir_food_together~l1 why~l1 whisk~l1 x00000001 )
( appliance~l1 functionality~l1 sifter~l1 x00000001 )
( mix~l1 use~l1 sifter~l1 x00000001 )
( sifter~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 sifter~l1 x00000001 )
( stir_food_together~l1 why~l1 sifter~l1 x00000001 )
( appliance~l1 functionality~l1 dredger~l1 x00000001 )
( mix~l1 use~l1 dredger~l1 x00000001 )
( dredger~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 dredger~l1 x00000001 )
( kitchen~l1 where~l1 dredger~l1 x00000001 )
( stir_food_together~l1 why~l1 dredger~l1 x00000001 )
( appliance~l1 functionality~l1 colander~l1 x00000001 )
( mix~l1 use~l1 colander~l1 x00000001 )
( colander~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 colander~l1 x00000001 )
( kitchen~l1 where~l1 colander~l1 x00000001 )
( stir_food_together~l1 why~l1 colander~l1 x00000001 )
( appliance~l1 functionality~l1 electric_mixer~l1 x00000001 )
( mix~l1 use~l1 electric_mixer~l1 x00000001 )
( electric_mixer~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 electric_mixer~l1 x00000001 )
( kitchen~l1 where~l1 electric_mixer~l1 x00000001 )
( stir_food_together~l1 why~l1 electric_mixer~l1 x00000001 )
( appliance~l1 functionality~l1 beater~l1 x00000001 )
( mix~l1 use~l1 beater~l1 x00000001 )
( beater~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 beater~l1 x00000001 )
( kitchen~l1 where~l1 beater~l1 x00000001 )
( stir_food_together~l1 why~l1 beater~l1 x00000001 )
( appliance~l1 functionality~l1 mixer~l1 x00000001 )
( mix~l1 use~l1 mixer~l1 x00000001 )
( mixer~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 mixer~l1 x00000001 )
( kitchen~l1 where~l1 mixer~l1 x00000001 )
( stir_food_together~l1 why~l1 mixer~l1 x00000001 )
( appliance~l1 functionality~l1 blender~l1 x00000001 )
( mix~l1 use~l1 blender~l1 x00000001 )
( blender~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 blender~l1 x00000001 )
( kitchen~l1 where~l1 blender~l1 x00000001 )
( stir_food_together~l1 why~l1 blender~l1 x00000001 )
( appliance~l1 functionality~l1 food_processor~l1 x00000001 )
( mix~l1 use~l1 food_processor~l1 x00000001 )
( food_processor~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 food_processor~l1 x00000001 )
( kitchen~l1 where~l1 food_processor~l1 x00000001 )
( stir_food_together~l1 why~l1 food_processor~l1 x00000001 )
( appliance~l1 functionality~l1 Cuisinart~l1 x00000001 )
( mix~l1 use~l1 Cuisinart~l1 x00000001 )
( Cuisinart~l1 use_to~l1 mix_food~l1 x00000001 )
( food~l1 object~l1 Cuisinart~l1 x00000001 )
( kitchen~l1 where~l1 Cuisinart~l1 x00000001 )
( stir_food_together~l1 why~l1 Cuisinart~l1 x00000001 )
( appliance~l1 functionality~l1 humidifier~l1 x00000001 )
( moisten~l1 use~l1 humidifier~l1 x00000001 )
( humidifier~l1 use_to~l1 moisten_air~l1 x00000001 )
( air~l1 object~l1 humidifier~l1 x00000001 )
( living_room~l1 where~l1 humidifier~l1 x00000001 )
( make_air_easier_to_breath~l1 why~l1 humidifier~l1 x00000001 )
( make_air_easier_to_breath~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 can_opener~l1 x00000001 )
( can_opener~l1 use_to~l1 open_cans~l1 x00000001 )
( cans~l1 object~l1 can_opener~l1 x00000001 )
( access_food_inside~l1 why~l1 can_opener~l1 x00000001 )
( access_food_inside~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 coffee_maker~l1 x00000001 )
( cook~l1 use~l1 coffee_maker~l1 x00000001 )
( coffee_maker~l1 use_to~l1 cook_coffee~l1 x00000001 )
( coffee~l1 object~l1 coffee_maker~l1 x00000001 )
( kitchen~l1 where~l1 coffee_maker~l1 x00000001 )
( satiate_coffee_addiction~l1 why~l1 coffee_maker~l1 x00000001 )
( satiate_coffee_addiction~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 iron~l1 x00000001 )
( smooth~l1 use~l1 iron~l1 x00000001 )
( iron~l1 use_to~l1 smooth_clothes~l1 x00000001 )
( clothes~l1 object~l1 iron~l1 x00000001 )
( laundry~l1 where~l1 iron~l1 x00000001 )
( improve_personal_appearance~l1 why~l1 iron~l1 x00000001 )
( improve_personal_appearance~l1 ~tool verify~l1 x00000001 )
( appliance~l1 functionality~l1 blow_dryer~l1 x00000001 )
( dry~l1 use~l1 blow_dryer~l1 x00000001 )
( blow_dryer~l1 use_to~l1 dry_hair~l1 x00000001 )
( hair~l1 object~l1 blow_dryer~l1 x00000001 )
( bathroom~l1 where~l1 blow_dryer~l1 x00000001 )
( improve_personal_appearance~l1 why~l1 blow_dryer~l1 x00000001 )
( clothes~l1 functionality~l1 T-shirt~l1 x00000001 )
( cover~l1 use~l1 T-shirt~l1 x00000001 )
( T-shirt~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 T-shirt~l1 x00000001 )
( dressing~l1 activity~l1 T-shirt~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 T-shirt~l1 x00000001 )
( keep_upper_torso_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 swimming_trunks~l1 x00000001 )
( cover~l1 use~l1 swimming_trunks~l1 x00000001 )
( swimming_trunks~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 swimming_trunks~l1 x00000001 )
( dressing~l1 activity~l1 swimming_trunks~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 swimming_trunks~l1 x00000001 )
( clothes~l1 functionality~l1 blouse~l1 x00000001 )
( cover~l1 use~l1 blouse~l1 x00000001 )
( blouse~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 blouse~l1 x00000001 )
( dressing~l1 activity~l1 blouse~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 blouse~l1 x00000001 )
( clothes~l1 functionality~l1 shirt~l1 x00000001 )
( cover~l1 use~l1 shirt~l1 x00000001 )
( shirt~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 shirt~l1 x00000001 )
( dressing~l1 activity~l1 shirt~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 shirt~l1 x00000001 )
( clothes~l1 functionality~l1 halter_top~l1 x00000001 )
( cover~l1 use~l1 halter_top~l1 x00000001 )
( halter_top~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 halter_top~l1 x00000001 )
( dressing~l1 activity~l1 halter_top~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 halter_top~l1 x00000001 )
( clothes~l1 functionality~l1 sweater~l1 x00000001 )
( cover~l1 use~l1 sweater~l1 x00000001 )
( sweater~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 sweater~l1 x00000001 )
( dressing~l1 activity~l1 sweater~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 sweater~l1 x00000001 )
( clothes~l1 functionality~l1 pullover~l1 x00000001 )
( cover~l1 use~l1 pullover~l1 x00000001 )
( pullover~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 pullover~l1 x00000001 )
( dressing~l1 activity~l1 pullover~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 pullover~l1 x00000001 )
( clothes~l1 functionality~l1 sweatshirt~l1 x00000001 )
( cover~l1 use~l1 sweatshirt~l1 x00000001 )
( sweatshirt~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 sweatshirt~l1 x00000001 )
( dressing~l1 activity~l1 sweatshirt~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 sweatshirt~l1 x00000001 )
( clothes~l1 functionality~l1 turtleneck~l1 x00000001 )
( cover~l1 use~l1 turtleneck~l1 x00000001 )
( turtleneck~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 turtleneck~l1 x00000001 )
( dressing~l1 activity~l1 turtleneck~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 turtleneck~l1 x00000001 )
( clothes~l1 functionality~l1 vest~l1 x00000001 )
( cover~l1 use~l1 vest~l1 x00000001 )
( vest~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 vest~l1 x00000001 )
( dressing~l1 activity~l1 vest~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 vest~l1 x00000001 )
( clothes~l1 functionality~l1 tank_top~l1 x00000001 )
( cover~l1 use~l1 tank_top~l1 x00000001 )
( tank_top~l1 use_to~l1 cover_chest~l1 x00000001 )
( chest~l1 object~l1 tank_top~l1 x00000001 )
( dressing~l1 activity~l1 tank_top~l1 x00000001 )
( keep_upper_torso_warm~l1 why~l1 tank_top~l1 x00000001 )
( clothes~l1 functionality~l1 trousers~l1 x00000001 )
( cover~l1 use~l1 trousers~l1 x00000001 )
( trousers~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 trousers~l1 x00000001 )
( dressing~l1 activity~l1 trousers~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 trousers~l1 x00000001 )
( keep_lower_torso_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 trunks~l1 x00000001 )
( cover~l1 use~l1 trunks~l1 x00000001 )
( trunks~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 trunks~l1 x00000001 )
( dressing~l1 activity~l1 trunks~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 trunks~l1 x00000001 )
( clothes~l1 functionality~l1 kilt~l1 x00000001 )
( cover~l1 use~l1 kilt~l1 x00000001 )
( kilt~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 kilt~l1 x00000001 )
( dressing~l1 activity~l1 kilt~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 kilt~l1 x00000001 )
( clothes~l1 functionality~l1 tutu~l1 x00000001 )
( cover~l1 use~l1 tutu~l1 x00000001 )
( tutu~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 tutu~l1 x00000001 )
( dressing~l1 activity~l1 tutu~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 tutu~l1 x00000001 )
( clothes~l1 functionality~l1 bathing_suit~l1 x00000001 )
( cover~l1 use~l1 bathing_suit~l1 x00000001 )
( bathing_suit~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 bathing_suit~l1 x00000001 )
( dressing~l1 activity~l1 bathing_suit~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 bathing_suit~l1 x00000001 )
( clothes~l1 functionality~l1 swimsuit~l1 x00000001 )
( cover~l1 use~l1 swimsuit~l1 x00000001 )
( swimsuit~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 swimsuit~l1 x00000001 )
( dressing~l1 activity~l1 swimsuit~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 swimsuit~l1 x00000001 )
( clothes~l1 functionality~l1 bikini~l1 x00000001 )
( cover~l1 use~l1 bikini~l1 x00000001 )
( bikini~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 bikini~l1 x00000001 )
( dressing~l1 activity~l1 bikini~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 bikini~l1 x00000001 )
( clothes~l1 functionality~l1 jeans~l1 x00000001 )
( cover~l1 use~l1 jeans~l1 x00000001 )
( jeans~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 jeans~l1 x00000001 )
( dressing~l1 activity~l1 jeans~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 jeans~l1 x00000001 )
( clothes~l1 functionality~l1 pants~l1 x00000001 )
( cover~l1 use~l1 pants~l1 x00000001 )
( pants~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 pants~l1 x00000001 )
( dressing~l1 activity~l1 pants~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 pants~l1 x00000001 )
( clothes~l1 functionality~l1 slacks~l1 x00000001 )
( cover~l1 use~l1 slacks~l1 x00000001 )
( slacks~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 slacks~l1 x00000001 )
( dressing~l1 activity~l1 slacks~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 slacks~l1 x00000001 )
( clothes~l1 functionality~l1 shorts~l1 x00000001 )
( cover~l1 use~l1 shorts~l1 x00000001 )
( shorts~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 shorts~l1 x00000001 )
( dressing~l1 activity~l1 shorts~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 shorts~l1 x00000001 )
( clothes~l1 functionality~l1 dress~l1 x00000001 )
( cover~l1 use~l1 dress~l1 x00000001 )
( dress~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 dress~l1 x00000001 )
( dressing~l1 activity~l1 dress~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 dress~l1 x00000001 )
( clothes~l1 functionality~l1 skirt~l1 x00000001 )
( cover~l1 use~l1 skirt~l1 x00000001 )
( skirt~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 skirt~l1 x00000001 )
( dressing~l1 activity~l1 skirt~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 skirt~l1 x00000001 )
( clothes~l1 functionality~l1 frock~l1 x00000001 )
( cover~l1 use~l1 frock~l1 x00000001 )
( frock~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 frock~l1 x00000001 )
( dressing~l1 activity~l1 frock~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 frock~l1 x00000001 )
( clothes~l1 functionality~l1 miniskirt~l1 x00000001 )
( cover~l1 use~l1 miniskirt~l1 x00000001 )
( miniskirt~l1 use_to~l1 cover_legs~l1 x00000001 )
( legs~l1 object~l1 miniskirt~l1 x00000001 )
( dressing~l1 activity~l1 miniskirt~l1 x00000001 )
( keep_lower_torso_warm~l1 why~l1 miniskirt~l1 x00000001 )
( clothes~l1 functionality~l1 briefs~l1 x00000001 )
( cover~l1 use~l1 briefs~l1 x00000001 )
( briefs~l1 use_to~l1 cover_crotch~l1 x00000001 )
( crotch~l1 object~l1 briefs~l1 x00000001 )
( dressing~l1 activity~l1 briefs~l1 x00000001 )
( protect_pants~l1 why~l1 briefs~l1 x00000001 )
( protect_pants~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 pantie~l1 x00000001 )
( cover~l1 use~l1 pantie~l1 x00000001 )
( pantie~l1 use_to~l1 cover_crotch~l1 x00000001 )
( crotch~l1 object~l1 pantie~l1 x00000001 )
( dressing~l1 activity~l1 pantie~l1 x00000001 )
( protect_pants~l1 why~l1 pantie~l1 x00000001 )
( clothes~l1 functionality~l1 underpants~l1 x00000001 )
( cover~l1 use~l1 underpants~l1 x00000001 )
( underpants~l1 use_to~l1 cover_crotch~l1 x00000001 )
( crotch~l1 object~l1 underpants~l1 x00000001 )
( dressing~l1 activity~l1 underpants~l1 x00000001 )
( protect_pants~l1 why~l1 underpants~l1 x00000001 )
( clothes~l1 functionality~l1 underwear~l1 x00000001 )
( cover~l1 use~l1 underwear~l1 x00000001 )
( underwear~l1 use_to~l1 cover_crotch~l1 x00000001 )
( crotch~l1 object~l1 underwear~l1 x00000001 )
( dressing~l1 activity~l1 underwear~l1 x00000001 )
( protect_pants~l1 why~l1 underwear~l1 x00000001 )
( clothes~l1 functionality~l1 panties~l1 x00000001 )
( cover~l1 use~l1 panties~l1 x00000001 )
( panties~l1 use_to~l1 cover_crotch~l1 x00000001 )
( crotch~l1 object~l1 panties~l1 x00000001 )
( dressing~l1 activity~l1 panties~l1 x00000001 )
( protect_pants~l1 why~l1 panties~l1 x00000001 )
( clothes~l1 functionality~l1 glove~l1 x00000001 )
( cover~l1 use~l1 glove~l1 x00000001 )
( glove~l1 use_to~l1 cover_hand~l1 x00000001 )
( hand~l1 object~l1 glove~l1 x00000001 )
( dressing~l1 activity~l1 glove~l1 x00000001 )
( keep_hands_warm~l1 why~l1 glove~l1 x00000001 )
( keep_hands_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 mitten~l1 x00000001 )
( cover~l1 use~l1 mitten~l1 x00000001 )
( mitten~l1 use_to~l1 cover_hand~l1 x00000001 )
( hand~l1 object~l1 mitten~l1 x00000001 )
( dressing~l1 activity~l1 mitten~l1 x00000001 )
( keep_hands_warm~l1 why~l1 mitten~l1 x00000001 )
( clothes~l1 functionality~l1 mitt~l1 x00000001 )
( cover~l1 use~l1 mitt~l1 x00000001 )
( mitt~l1 use_to~l1 cover_hand~l1 x00000001 )
( hand~l1 object~l1 mitt~l1 x00000001 )
( dressing~l1 activity~l1 mitt~l1 x00000001 )
( keep_hands_warm~l1 why~l1 mitt~l1 x00000001 )
( clothes~l1 functionality~l1 shoe~l1 x00000001 )
( cover~l1 use~l1 shoe~l1 x00000001 )
( shoe~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 shoe~l1 x00000001 )
( dressing~l1 activity~l1 shoe~l1 x00000001 )
( keep_feet_warm~l1 why~l1 shoe~l1 x00000001 )
( keep_feet_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 sandal~l1 x00000001 )
( cover~l1 use~l1 sandal~l1 x00000001 )
( sandal~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 sandal~l1 x00000001 )
( dressing~l1 activity~l1 sandal~l1 x00000001 )
( keep_feet_warm~l1 why~l1 sandal~l1 x00000001 )
( clothes~l1 functionality~l1 high_heel~l1 x00000001 )
( cover~l1 use~l1 high_heel~l1 x00000001 )
( high_heel~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 high_heel~l1 x00000001 )
( dressing~l1 activity~l1 high_heel~l1 x00000001 )
( keep_feet_warm~l1 why~l1 high_heel~l1 x00000001 )
( clothes~l1 functionality~l1 socks~l1 x00000001 )
( cover~l1 use~l1 socks~l1 x00000001 )
( socks~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 socks~l1 x00000001 )
( dressing~l1 activity~l1 socks~l1 x00000001 )
( keep_feet_warm~l1 why~l1 socks~l1 x00000001 )
( clothes~l1 functionality~l1 galoshes~l1 x00000001 )
( cover~l1 use~l1 galoshes~l1 x00000001 )
( galoshes~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 galoshes~l1 x00000001 )
( dressing~l1 activity~l1 galoshes~l1 x00000001 )
( keep_feet_warm~l1 why~l1 galoshes~l1 x00000001 )
( clothes~l1 functionality~l1 flipper~l1 x00000001 )
( cover~l1 use~l1 flipper~l1 x00000001 )
( flipper~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 flipper~l1 x00000001 )
( dressing~l1 activity~l1 flipper~l1 x00000001 )
( keep_feet_warm~l1 why~l1 flipper~l1 x00000001 )
( clothes~l1 functionality~l1 bobbysocks~l1 x00000001 )
( cover~l1 use~l1 bobbysocks~l1 x00000001 )
( bobbysocks~l1 use_to~l1 cover_feet~l1 x00000001 )
( feet~l1 object~l1 bobbysocks~l1 x00000001 )
( dressing~l1 activity~l1 bobbysocks~l1 x00000001 )
( keep_feet_warm~l1 why~l1 bobbysocks~l1 x00000001 )
( clothes~l1 functionality~l1 boot~l1 x00000001 )
( cover~l1 use~l1 boot~l1 x00000001 )
( boot~l1 use_to~l1 cover_foot~l1 x00000001 )
( foot~l1 object~l1 boot~l1 x00000001 )
( dressing~l1 activity~l1 boot~l1 x00000001 )
( protect_foot_from_harm~l1 why~l1 boot~l1 x00000001 )
( protect_foot_from_harm~l1 ~tool verify~l1 x00000001 )
( sandal~l1 use_to~l1 cover_foot~l1 x00000001 )
( foot~l1 object~l1 sandal~l1 x00000001 )
( protect_foot_from_harm~l1 why~l1 sandal~l1 x00000001 )
( clothes~l1 functionality~l1 moccasin~l1 x00000001 )
( cover~l1 use~l1 moccasin~l1 x00000001 )
( moccasin~l1 use_to~l1 cover_foot~l1 x00000001 )
( foot~l1 object~l1 moccasin~l1 x00000001 )
( dressing~l1 activity~l1 moccasin~l1 x00000001 )
( protect_foot_from_harm~l1 why~l1 moccasin~l1 x00000001 )
( shoe~l1 use_to~l1 cover_foot~l1 x00000001 )
( foot~l1 object~l1 shoe~l1 x00000001 )
( protect_foot_from_harm~l1 why~l1 shoe~l1 x00000001 )
( clothes~l1 functionality~l1 hat~l1 x00000001 )
( cover~l1 use~l1 hat~l1 x00000001 )
( hat~l1 use_to~l1 cover_head~l1 x00000001 )
( head~l1 object~l1 hat~l1 x00000001 )
( dressing~l1 activity~l1 hat~l1 x00000001 )
( protect_head_from_cold~l1 why~l1 hat~l1 x00000001 )
( protect_head_from_cold~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 cap~l1 x00000001 )
( cover~l1 use~l1 cap~l1 x00000001 )
( cap~l1 use_to~l1 cover_head~l1 x00000001 )
( head~l1 object~l1 cap~l1 x00000001 )
( dressing~l1 activity~l1 cap~l1 x00000001 )
( protect_head_from_cold~l1 why~l1 cap~l1 x00000001 )
( clothes~l1 functionality~l1 hood~l1 x00000001 )
( cover~l1 use~l1 hood~l1 x00000001 )
( hood~l1 use_to~l1 cover_head~l1 x00000001 )
( head~l1 object~l1 hood~l1 x00000001 )
( dressing~l1 activity~l1 hood~l1 x00000001 )
( protect_head_from_cold~l1 why~l1 hood~l1 x00000001 )
( clothes~l1 functionality~l1 beanie~l1 x00000001 )
( cover~l1 use~l1 beanie~l1 x00000001 )
( beanie~l1 use_to~l1 cover_head~l1 x00000001 )
( head~l1 object~l1 beanie~l1 x00000001 )
( dressing~l1 activity~l1 beanie~l1 x00000001 )
( protect_head_from_cold~l1 why~l1 beanie~l1 x00000001 )
( vest~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 vest~l1 x00000001 )
( improve_personal_adornment~l1 why~l1 vest~l1 x00000001 )
( improve_personal_adornment~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 coat~l1 x00000001 )
( cover~l1 use~l1 coat~l1 x00000001 )
( coat~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 coat~l1 x00000001 )
( dressing~l1 activity~l1 coat~l1 x00000001 )
( keep_body_warm~l1 why~l1 coat~l1 x00000001 )
( keep_body_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 jacket~l1 x00000001 )
( cover~l1 use~l1 jacket~l1 x00000001 )
( jacket~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 jacket~l1 x00000001 )
( dressing~l1 activity~l1 jacket~l1 x00000001 )
( keep_body_warm~l1 why~l1 jacket~l1 x00000001 )
( sweater~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 sweater~l1 x00000001 )
( keep_body_warm~l1 why~l1 sweater~l1 x00000001 )
( clothes~l1 functionality~l1 overcoat~l1 x00000001 )
( cover~l1 use~l1 overcoat~l1 x00000001 )
( overcoat~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 overcoat~l1 x00000001 )
( dressing~l1 activity~l1 overcoat~l1 x00000001 )
( keep_body_warm~l1 why~l1 overcoat~l1 x00000001 )
( clothes~l1 functionality~l1 anorak~l1 x00000001 )
( cover~l1 use~l1 anorak~l1 x00000001 )
( anorak~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 anorak~l1 x00000001 )
( dressing~l1 activity~l1 anorak~l1 x00000001 )
( keep_body_warm~l1 why~l1 anorak~l1 x00000001 )
( clothes~l1 functionality~l1 Burberry~l1 x00000001 )
( cover~l1 use~l1 Burberry~l1 x00000001 )
( Burberry~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 Burberry~l1 x00000001 )
( dressing~l1 activity~l1 Burberry~l1 x00000001 )
( keep_body_warm~l1 why~l1 Burberry~l1 x00000001 )
( clothes~l1 functionality~l1 topcoat~l1 x00000001 )
( cover~l1 use~l1 topcoat~l1 x00000001 )
( topcoat~l1 use_to~l1 cover_shirt~l1 x00000001 )
( shirt~l1 object~l1 topcoat~l1 x00000001 )
( dressing~l1 activity~l1 topcoat~l1 x00000001 )
( keep_body_warm~l1 why~l1 topcoat~l1 x00000001 )
( clothes~l1 functionality~l1 raincoat~l1 x00000001 )
( cover~l1 use~l1 raincoat~l1 x00000001 )
( raincoat~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 raincoat~l1 x00000001 )
( protect_body_from_rain~l1 why~l1 raincoat~l1 x00000001 )
( protect_body_from_rain~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 mackintosh~l1 x00000001 )
( cover~l1 use~l1 mackintosh~l1 x00000001 )
( mackintosh~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 mackintosh~l1 x00000001 )
( protect_body_from_rain~l1 why~l1 mackintosh~l1 x00000001 )
( clothes~l1 functionality~l1 clothes~l1 x00000001 )
( cover~l1 use~l1 clothes~l1 x00000001 )
( clothes~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 clothes~l1 x00000001 )
( cover_parts_of_the_body~l1 why~l1 clothes~l1 x00000001 )
( cover_parts_of_the_body~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 earring~l1 x00000001 )
( cover~l1 use~l1 earring~l1 x00000001 )
( earring~l1 use_to~l1 cover_ear~l1 x00000001 )
( ear~l1 object~l1 earring~l1 x00000001 )
( dressing~l1 activity~l1 earring~l1 x00000001 )
( improve_personal_adornment~l1 why~l1 earring~l1 x00000001 )
( clothes~l1 functionality~l1 earmuff~l1 x00000001 )
( cover~l1 use~l1 earmuff~l1 x00000001 )
( earmuff~l1 use_to~l1 cover_ear~l1 x00000001 )
( ear~l1 object~l1 earmuff~l1 x00000001 )
( dressing~l1 activity~l1 earmuff~l1 x00000001 )
( keep_ear_warm~l1 why~l1 earmuff~l1 x00000001 )
( keep_ear_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 ring~l1 x00000001 )
( finger~l1 use~l1 ring~l1 x00000001 )
( ring~l1 use_to~l1 finger_ear~l1 x00000001 )
( ear~l1 object~l1 ring~l1 x00000001 )
( dressing~l1 activity~l1 ring~l1 x00000001 )
( improve_personal_adornment~l1 why~l1 ring~l1 x00000001 )
( clothes~l1 functionality~l1 scarf~l1 x00000001 )
( cover~l1 use~l1 scarf~l1 x00000001 )
( scarf~l1 use_to~l1 cover_neck~l1 x00000001 )
( neck~l1 object~l1 scarf~l1 x00000001 )
( dressing~l1 activity~l1 scarf~l1 x00000001 )
( keep_neck_warm~l1 why~l1 scarf~l1 x00000001 )
( keep_neck_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 tie~l1 x00000001 )
( cover~l1 use~l1 tie~l1 x00000001 )
( tie~l1 use_to~l1 cover_neck~l1 x00000001 )
( neck~l1 object~l1 tie~l1 x00000001 )
( dressing~l1 activity~l1 tie~l1 x00000001 )
( keep_neck_warm~l1 why~l1 tie~l1 x00000001 )
( clothes~l1 functionality~l1 mask~l1 x00000001 )
( cover~l1 use~l1 mask~l1 x00000001 )
( mask~l1 use_to~l1 cover_face~l1 x00000001 )
( face~l1 object~l1 mask~l1 x00000001 )
( dressing~l1 activity~l1 mask~l1 x00000001 )
( keep_face_warm~l1 why~l1 mask~l1 x00000001 )
( keep_face_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 ski_mask~l1 x00000001 )
( cover~l1 use~l1 ski_mask~l1 x00000001 )
( ski_mask~l1 use_to~l1 cover_face~l1 x00000001 )
( face~l1 object~l1 ski_mask~l1 x00000001 )
( dressing~l1 activity~l1 ski_mask~l1 x00000001 )
( keep_face_warm~l1 why~l1 ski_mask~l1 x00000001 )
( clothes~l1 functionality~l1 hijab~l1 x00000001 )
( cover~l1 use~l1 hijab~l1 x00000001 )
( hijab~l1 use_to~l1 cover_face~l1 x00000001 )
( face~l1 object~l1 hijab~l1 x00000001 )
( dressing~l1 activity~l1 hijab~l1 x00000001 )
( keep_face_warm~l1 why~l1 hijab~l1 x00000001 )
( clothes~l1 functionality~l1 goggles~l1 x00000001 )
( cover~l1 use~l1 goggles~l1 x00000001 )
( goggles~l1 use_to~l1 cover_eyes~l1 x00000001 )
( eyes~l1 object~l1 goggles~l1 x00000001 )
( dressing~l1 activity~l1 goggles~l1 x00000001 )
( protect_eyes~l1 why~l1 goggles~l1 x00000001 )
( protect_eyes~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 glasses~l1 x00000001 )
( cover~l1 use~l1 glasses~l1 x00000001 )
( glasses~l1 use_to~l1 cover_eyes~l1 x00000001 )
( eyes~l1 object~l1 glasses~l1 x00000001 )
( dressing~l1 activity~l1 glasses~l1 x00000001 )
( improve_vision~l1 why~l1 glasses~l1 x00000001 )
( improve_vision~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 sunglasses~l1 x00000001 )
( cover~l1 use~l1 sunglasses~l1 x00000001 )
( sunglasses~l1 use_to~l1 cover_eyes~l1 x00000001 )
( eyes~l1 object~l1 sunglasses~l1 x00000001 )
( dressing~l1 activity~l1 sunglasses~l1 x00000001 )
( improve_vision~l1 why~l1 sunglasses~l1 x00000001 )
( clothes~l1 functionality~l1 contacts~l1 x00000001 )
( cover~l1 use~l1 contacts~l1 x00000001 )
( contacts~l1 use_to~l1 cover_eyes~l1 x00000001 )
( eyes~l1 object~l1 contacts~l1 x00000001 )
( dressing~l1 activity~l1 contacts~l1 x00000001 )
( improve_vision~l1 why~l1 contacts~l1 x00000001 )
( clothes~l1 functionality~l1 cloak~l1 x00000001 )
( cover~l1 use~l1 cloak~l1 x00000001 )
( cloak~l1 use_to~l1 cover_back~l1 x00000001 )
( back~l1 object~l1 cloak~l1 x00000001 )
( dressing~l1 activity~l1 cloak~l1 x00000001 )
( keep_back_warm~l1 why~l1 cloak~l1 x00000001 )
( keep_back_warm~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 cape~l1 x00000001 )
( cover~l1 use~l1 cape~l1 x00000001 )
( cape~l1 use_to~l1 cover_back~l1 x00000001 )
( back~l1 object~l1 cape~l1 x00000001 )
( dressing~l1 activity~l1 cape~l1 x00000001 )
( keep_back_warm~l1 why~l1 cape~l1 x00000001 )
( clothes~l1 functionality~l1 belt~l1 x00000001 )
( cover~l1 use~l1 belt~l1 x00000001 )
( belt~l1 use_to~l1 cover_waist~l1 x00000001 )
( waist~l1 object~l1 belt~l1 x00000001 )
( dressing~l1 activity~l1 belt~l1 x00000001 )
( hold_up_pants~l1 why~l1 belt~l1 x00000001 )
( clothes~l1 functionality~l1 tuxedo~l1 x00000001 )
( cover~l1 use~l1 tuxedo~l1 x00000001 )
( tuxedo~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 tuxedo~l1 x00000001 )
( dressing~l1 activity~l1 tuxedo~l1 x00000001 )
( dress_up~l1 why~l1 tuxedo~l1 x00000001 )
( dress_up~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 negligee~l1 x00000001 )
( cover~l1 use~l1 negligee~l1 x00000001 )
( negligee~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 negligee~l1 x00000001 )
( dressing~l1 activity~l1 negligee~l1 x00000001 )
( wear_at_bedtime~l1 why~l1 negligee~l1 x00000001 )
( wear_at_bedtime~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 kimono~l1 x00000001 )
( cover~l1 use~l1 kimono~l1 x00000001 )
( kimono~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 kimono~l1 x00000001 )
( dressing~l1 activity~l1 kimono~l1 x00000001 )
( wear_at_bedtime~l1 why~l1 kimono~l1 x00000001 )
( clothes~l1 functionality~l1 pajamas~l1 x00000001 )
( cover~l1 use~l1 pajamas~l1 x00000001 )
( pajamas~l1 use_to~l1 cover_body~l1 x00000001 )
( body~l1 object~l1 pajamas~l1 x00000001 )
( dressing~l1 activity~l1 pajamas~l1 x00000001 )
( wear_at_bedtime~l1 why~l1 pajamas~l1 x00000001 )
( clothes~l1 functionality~l1 apron~l1 x00000001 )
( cover~l1 use~l1 apron~l1 x00000001 )
( apron~l1 use_to~l1 cover_waist~l1 x00000001 )
( waist~l1 object~l1 apron~l1 x00000001 )
( dressing~l1 activity~l1 apron~l1 x00000001 )
( protect_waist_from_spills_during_cooking~l1 why~l1 apron~l1 x00000001 )
( protect_waist_from_spills_during_cooking~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 barrette~l1 x00000001 )
( cover~l1 use~l1 barrette~l1 x00000001 )
( barrette~l1 use_to~l1 cover_hair~l1 x00000001 )
( hair~l1 object~l1 barrette~l1 x00000001 )
( dressing~l1 activity~l1 barrette~l1 x00000001 )
( hold_hair_in_place~l1 why~l1 barrette~l1 x00000001 )
( hold_hair_in_place~l1 ~tool verify~l1 x00000001 )
( clothes~l1 functionality~l1 handkerchief~l1 x00000001 )
( cover~l1 use~l1 handkerchief~l1 x00000001 )
( handkerchief~l1 use_to~l1 cover_nose~l1 x00000001 )
( nose~l1 object~l1 handkerchief~l1 x00000001 )
( dressing~l1 activity~l1 handkerchief~l1 x00000001 )
( clean_up_after_sneezing~l1 why~l1 handkerchief~l1 x00000001 )
( clean_up_after_sneezing~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 helmet~l1 x00000001 )
( protect~l1 use~l1 helmet~l1 x00000001 )
( helmet~l1 use_to~l1 protect_head~l1 x00000001 )
( head~l1 object~l1 helmet~l1 x00000001 )
( dressing~l1 activity~l1 helmet~l1 x00000001 )
( protect_head_from_harm~l1 why~l1 helmet~l1 x00000001 )
( protect_head_from_harm~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 armor~l1 x00000001 )
( protect~l1 use~l1 armor~l1 x00000001 )
( armor~l1 use_to~l1 protect_body~l1 x00000001 )
( body~l1 object~l1 armor~l1 x00000001 )
( warfare~l1 activity~l1 armor~l1 x00000001 )
( protect_body_from_harm~l1 why~l1 armor~l1 x00000001 )
( protect_body_from_harm~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 dressing~l1 x00000001 )
( protect~l1 use~l1 dressing~l1 x00000001 )
( dressing~l1 use_to~l1 protect_wound~l1 x00000001 )
( wound~l1 object~l1 dressing~l1 x00000001 )
( first_aid~l1 activity~l1 dressing~l1 x00000001 )
( bathroom~l1 where~l1 dressing~l1 x00000001 )
( prevent_infection~l1 why~l1 dressing~l1 x00000001 )
( prevent_infection~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 band-aid~l1 x00000001 )
( protect~l1 use~l1 band-aid~l1 x00000001 )
( band-aid~l1 use_to~l1 protect_wound~l1 x00000001 )
( wound~l1 object~l1 band-aid~l1 x00000001 )
( first_aid~l1 activity~l1 band-aid~l1 x00000001 )
( bathroom~l1 where~l1 band-aid~l1 x00000001 )
( prevent_infection~l1 why~l1 band-aid~l1 x00000001 )
( cover~l1 functionality~l1 bandage~l1 x00000001 )
( protect~l1 use~l1 bandage~l1 x00000001 )
( bandage~l1 use_to~l1 protect_wound~l1 x00000001 )
( wound~l1 object~l1 bandage~l1 x00000001 )
( first_aid~l1 activity~l1 bandage~l1 x00000001 )
( bathroom~l1 where~l1 bandage~l1 x00000001 )
( prevent_infection~l1 why~l1 bandage~l1 x00000001 )
( cover~l1 functionality~l1 sheet~l1 x00000001 )
( protect~l1 use~l1 sheet~l1 x00000001 )
( sheet~l1 use_to~l1 protect_mattress~l1 x00000001 )
( mattress~l1 object~l1 sheet~l1 x00000001 )
( sleeping~l1 activity~l1 sheet~l1 x00000001 )
( bedroom~l1 where~l1 sheet~l1 x00000001 )
( prevent_matress_from_excess_wear~l1 why~l1 sheet~l1 x00000001 )
( prevent_matress_from_excess_wear~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 pillowcase~l1 x00000001 )
( protect~l1 use~l1 pillowcase~l1 x00000001 )
( pillowcase~l1 use_to~l1 protect_pillow~l1 x00000001 )
( pillow~l1 object~l1 pillowcase~l1 x00000001 )
( sleeping~l1 activity~l1 pillowcase~l1 x00000001 )
( bedroom~l1 where~l1 pillowcase~l1 x00000001 )
( prevent_pillow_from_excess_wear~l1 why~l1 pillowcase~l1 x00000001 )
( prevent_pillow_from_excess_wear~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 blanket~l1 x00000001 )
( keep~l1 use~l1 blanket~l1 x00000001 )
( blanket~l1 use_to~l1 keep_warm~l1 x00000001 )
( warm~l1 object~l1 blanket~l1 x00000001 )
( sleeping~l1 activity~l1 blanket~l1 x00000001 )
( bedroom~l1 where~l1 blanket~l1 x00000001 )
( sleep_soundly~l1 why~l1 blanket~l1 x00000001 )
( sleep_soundly~l1 ~tool verify~l1 x00000001 )
( cover~l1 functionality~l1 bedspread~l1 x00000001 )
( keep~l1 use~l1 bedspread~l1 x00000001 )
( bedspread~l1 use_to~l1 keep_warm~l1 x00000001 )
( warm~l1 object~l1 bedspread~l1 x00000001 )
( sleeping~l1 activity~l1 bedspread~l1 x00000001 )
( bedroom~l1 where~l1 bedspread~l1 x00000001 )
( sleep_soundly~l1 why~l1 bedspread~l1 x00000001 )
( cover~l1 functionality~l1 duvet~l1 x00000001 )
( keep~l1 use~l1 duvet~l1 x00000001 )
( duvet~l1 use_to~l1 keep_warm~l1 x00000001 )
( warm~l1 object~l1 duvet~l1 x00000001 )
( sleeping~l1 activity~l1 duvet~l1 x00000001 )
( bedroom~l1 where~l1 duvet~l1 x00000001 )
( sleep_soundly~l1 why~l1 duvet~l1 x00000001 )
( substance~l1 functionality~l1 concrete~l1 x00000001 )
( make~l1 use~l1 concrete~l1 x00000001 )
( concrete~l1 use_to~l1 make_buildings~l1 x00000001 )
( buildings~l1 object~l1 concrete~l1 x00000001 )
( construction~l1 activity~l1 concrete~l1 x00000001 )
( mason~l1 agent~l1 concrete~l1 x00000001 )
( building_site~l1 where~l1 concrete~l1 x00000001 )
( house_people~l1 why~l1 concrete~l1 x00000001 )
( house_people~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 soap~l1 x00000001 )
( clean~l1 use~l1 soap~l1 x00000001 )
( soap~l1 use_to~l1 clean_clothes~l1 x00000001 )
( clothes~l1 object~l1 soap~l1 x00000001 )
( cleaning~l1 activity~l1 soap~l1 x00000001 )
( laundry_room~l1 where~l1 soap~l1 x00000001 )
( remove_dirt_and_grease~l1 why~l1 soap~l1 x00000001 )
( remove_dirt_and_grease~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 detergent~l1 x00000001 )
( clean~l1 use~l1 detergent~l1 x00000001 )
( detergent~l1 use_to~l1 clean_clothes~l1 x00000001 )
( clothes~l1 object~l1 detergent~l1 x00000001 )
( cleaning~l1 activity~l1 detergent~l1 x00000001 )
( laundry_room~l1 where~l1 detergent~l1 x00000001 )
( remove_dirt_and_grease~l1 why~l1 detergent~l1 x00000001 )
( substance~l1 functionality~l1 toothpaste~l1 x00000001 )
( clean~l1 use~l1 toothpaste~l1 x00000001 )
( toothpaste~l1 use_to~l1 clean_teeth~l1 x00000001 )
( teeth~l1 object~l1 toothpaste~l1 x00000001 )
( grooming~l1 activity~l1 toothpaste~l1 x00000001 )
( bathroom~l1 where~l1 toothpaste~l1 x00000001 )
( prevent_cavities~l1 why~l1 toothpaste~l1 x00000001 )
( prevent_cavities~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 shampoo~l1 x00000001 )
( clean~l1 use~l1 shampoo~l1 x00000001 )
( shampoo~l1 use_to~l1 clean_hair~l1 x00000001 )
( hair~l1 object~l1 shampoo~l1 x00000001 )
( grooming~l1 activity~l1 shampoo~l1 x00000001 )
( bathroom~l1 where~l1 shampoo~l1 x00000001 )
( remove_dirt_from_hair~l1 why~l1 shampoo~l1 x00000001 )
( remove_dirt_from_hair~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 conditioner~l1 x00000001 )
( clean~l1 use~l1 conditioner~l1 x00000001 )
( conditioner~l1 use_to~l1 clean_hair~l1 x00000001 )
( hair~l1 object~l1 conditioner~l1 x00000001 )
( grooming~l1 activity~l1 conditioner~l1 x00000001 )
( bathroom~l1 where~l1 conditioner~l1 x00000001 )
( remove_dirt_from_hair~l1 why~l1 conditioner~l1 x00000001 )
( substance~l1 functionality~l1 iodine~l1 x00000001 )
( sterilize~l1 use~l1 iodine~l1 x00000001 )
( iodine~l1 use_to~l1 sterilize_wound~l1 x00000001 )
( wound~l1 object~l1 iodine~l1 x00000001 )
( first_aid~l1 activity~l1 iodine~l1 x00000001 )
( bathroom~l1 where~l1 iodine~l1 x00000001 )
( prevent_infection~l1 why~l1 iodine~l1 x00000001 )
( substance~l1 functionality~l1 aspirin~l1 x00000001 )
( reduce~l1 use~l1 aspirin~l1 x00000001 )
( aspirin~l1 use_to~l1 reduce_pain~l1 x00000001 )
( pain~l1 object~l1 aspirin~l1 x00000001 )
( first_aid~l1 activity~l1 aspirin~l1 x00000001 )
( bathroom~l1 where~l1 aspirin~l1 x00000001 )
( feel_better~l1 why~l1 aspirin~l1 x00000001 )
( feel_better~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 tylenol~l1 x00000001 )
( reduce~l1 use~l1 tylenol~l1 x00000001 )
( tylenol~l1 use_to~l1 reduce_pain~l1 x00000001 )
( pain~l1 object~l1 tylenol~l1 x00000001 )
( first_aid~l1 activity~l1 tylenol~l1 x00000001 )
( bathroom~l1 where~l1 tylenol~l1 x00000001 )
( feel_better~l1 why~l1 tylenol~l1 x00000001 )
( substance~l1 functionality~l1 codeine~l1 x00000001 )
( reduce~l1 use~l1 codeine~l1 x00000001 )
( codeine~l1 use_to~l1 reduce_pain~l1 x00000001 )
( pain~l1 object~l1 codeine~l1 x00000001 )
( first_aid~l1 activity~l1 codeine~l1 x00000001 )
( bathroom~l1 where~l1 codeine~l1 x00000001 )
( feel_better~l1 why~l1 codeine~l1 x00000001 )
( substance~l1 functionality~l1 acetominephin~l1 x00000001 )
( reduce~l1 use~l1 acetominephin~l1 x00000001 )
( acetominephin~l1 use_to~l1 reduce_pain~l1 x00000001 )
( pain~l1 object~l1 acetominephin~l1 x00000001 )
( first_aid~l1 activity~l1 acetominephin~l1 x00000001 )
( bathroom~l1 where~l1 acetominephin~l1 x00000001 )
( feel_better~l1 why~l1 acetominephin~l1 x00000001 )
( substance~l1 functionality~l1 cotton~l1 x00000001 )
( make~l1 use~l1 cotton~l1 x00000001 )
( cotton~l1 use_to~l1 make_cloth~l1 x00000001 )
( cloth~l1 object~l1 cotton~l1 x00000001 )
( have_cloth~l1 why~l1 cotton~l1 x00000001 )
( have_cloth~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 yarn~l1 x00000001 )
( make~l1 use~l1 yarn~l1 x00000001 )
( yarn~l1 use_to~l1 make_cloth~l1 x00000001 )
( cloth~l1 object~l1 yarn~l1 x00000001 )
( have_cloth~l1 why~l1 yarn~l1 x00000001 )
( substance~l1 functionality~l1 wool~l1 x00000001 )
( make~l1 use~l1 wool~l1 x00000001 )
( wool~l1 use_to~l1 make_cloth~l1 x00000001 )
( cloth~l1 object~l1 wool~l1 x00000001 )
( have_cloth~l1 why~l1 wool~l1 x00000001 )
( substance~l1 functionality~l1 mana~l1 x00000001 )
( support~l1 use~l1 mana~l1 x00000001 )
( mana~l1 use_to~l1 support_magic~l1 x00000001 )
( magic~l1 object~l1 mana~l1 x00000001 )
( make_magic~l1 why~l1 mana~l1 x00000001 )
( make_magic~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 coal~l1 x00000001 )
( support~l1 use~l1 coal~l1 x00000001 )
( coal~l1 use_to~l1 support_construction~l1 x00000001 )
( construction~l1 object~l1 coal~l1 x00000001 )
( provide_raw_material~l1 why~l1 coal~l1 x00000001 )
( provide_raw_material~l1 ~tool verify~l1 x00000001 )
( substance~l1 functionality~l1 iron~l1 x00000001 )
( support~l1 use~l1 iron~l1 x00000001 )
( iron~l1 use_to~l1 support_construction~l1 x00000001 )
( construction~l1 object~l1 iron~l1 x00000001 )
( provide_raw_material~l1 why~l1 iron~l1 x00000001 )
( body_system~l1 functionality~l1 cardiovascular~l1 x00000001 )
( flow~l1 use~l1 cardiovascular~l1 x00000001 )
( cardiovascular~l1 use_to~l1 flow_blood~l1 x00000001 )
( blood~l1 object~l1 cardiovascular~l1 x00000001 )
( pump_blood_to_various_parts_of_the_body_._Blood_delivers_oxygen,_control_hormones,_removes_carbon_dioxide~l1 why~l1 cardiovascular~l1 x00000001 )
( pump_blood_to_various_parts_of_the_body_._Blood_delivers_oxygen,_control_hormones,_removes_carbon_dioxide~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 circulatory~l1 x00000001 )
( flow~l1 use~l1 circulatory~l1 x00000001 )
( circulatory~l1 use_to~l1 flow_blood~l1 x00000001 )
( blood~l1 object~l1 circulatory~l1 x00000001 )
( pump_blood_to_various_parts_of_the_body_._Blood_delivers_oxygen,_control_hormones,_removes_carbon_dioxide~l1 why~l1 circulatory~l1 x00000001 )
( body_system~l1 functionality~l1 digestive~l1 x00000001 )
( digest~l1 use~l1 digestive~l1 x00000001 )
( digestive~l1 use_to~l1 digest_food~l1 x00000001 )
( food~l1 object~l1 digestive~l1 x00000001 )
( convert_food_into_energy~l1 why~l1 digestive~l1 x00000001 )
( convert_food_into_energy~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 digestion~l1 x00000001 )
( digest~l1 use~l1 digestion~l1 x00000001 )
( digestion~l1 use_to~l1 digest_food~l1 x00000001 )
( food~l1 object~l1 digestion~l1 x00000001 )
( convert_food_into_energy~l1 why~l1 digestion~l1 x00000001 )
( body_system~l1 functionality~l1 stomach~l1 x00000001 )
( digest~l1 use~l1 stomach~l1 x00000001 )
( stomach~l1 use_to~l1 digest_food~l1 x00000001 )
( food~l1 object~l1 stomach~l1 x00000001 )
( convert_food_into_energy~l1 why~l1 stomach~l1 x00000001 )
( body_system~l1 functionality~l1 endocrine~l1 x00000001 )
( regulate~l1 use~l1 endocrine~l1 x00000001 )
( endocrine~l1 use_to~l1 regulate_body~l1 x00000001 )
( body~l1 object~l1 endocrine~l1 x00000001 )
( regulate_the_body~l1 why~l1 endocrine~l1 x00000001 )
( regulate_the_body~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 excretory~l1 x00000001 )
( remove~l1 use~l1 excretory~l1 x00000001 )
( excretory~l1 use_to~l1 remove_waste~l1 x00000001 )
( waste~l1 object~l1 excretory~l1 x00000001 )
( filter_out_waste_from_the_body_and_excrete_it~l1 why~l1 excretory~l1 x00000001 )
( filter_out_waste_from_the_body_and_excrete_it~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 immune~l1 x00000001 )
( avoid~l1 use~l1 immune~l1 x00000001 )
( immune~l1 use_to~l1 avoid_disease~l1 x00000001 )
( disease~l1 object~l1 immune~l1 x00000001 )
( protect_the_body_from_bacteria_and_viruses~l1 why~l1 immune~l1 x00000001 )
( protect_the_body_from_bacteria_and_viruses~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 white_blood_cell~l1 x00000001 )
( avoid~l1 use~l1 white_blood_cell~l1 x00000001 )
( white_blood_cell~l1 use_to~l1 avoid_disease~l1 x00000001 )
( disease~l1 object~l1 white_blood_cell~l1 x00000001 )
( protect_the_body_from_bacteria_and_viruses~l1 why~l1 white_blood_cell~l1 x00000001 )
( body_system~l1 functionality~l1 integumentary~l1 x00000001 )
( contain~l1 use~l1 integumentary~l1 x00000001 )
( integumentary~l1 use_to~l1 contain_body~l1 x00000001 )
( body~l1 object~l1 integumentary~l1 x00000001 )
( holds_the_body_together,_offers_protection_from_the_sun,_helps_body_temperature_regulation,_and_holds_nerves_that_respond_to_temperature,_touch,_pressure,_and_pain~l1 why~l1 integumentary~l1 x00000001 )
( holds_the_body_together,_offers_protection_from_the_sun,_helps_body_temperature_regulation,_and_holds_nerves_that_respond_to_temperature,_touch,_pressure,_and_pain~l1 ~tool verify~l1 x00000001 )
( body_system~l1 functionality~l1 skin~l1 x00000001 )
( contain~l1 use~l1 skin~l1 x00000001 )
( skin~l1 use_to~l1 contain_body~l1 x00000001 )
( body~l1 object~l1 skin~l1 x00000001 )
( holds_the_body_together,_offers_protection_from_the_sun,_helps_body_temperature_regulation,_and_holds_nerves_that_respond_to_temperature,_touch,_pressure,_and_pain~l1 why~l1 skin~l1 x00000001 )
--dead
--lang
