
testing.h,455
#define _TESTINGH_TESTINGH2,18
#define HAS_BREAKPOINTS HAS_BREAKPOINTS16,1125
#define TESTING_REPEATALLOWED TESTING_REPEATALLOWED17,1151
typedef void (*COMMANDPTR)(char* input);COMMANDPTR23,1230
typedef struct CommandInfo CommandInfo25,1272
	char* word;			// dictionary word entryword27,1302
	COMMANDPTR fn;				// function to use to get itfn28,1342
	char* comment;		// what to say about itcomment29,1390
} CommandInfo;CommandInfo30,1431

my_sql.h,29
#define _MYSQLH_MYSQLH2,16

topicSystem.cpp,14126
#define MAX_NO_ERASE MAX_NO_ERASE3,21
#define MAX_REPEATABLE MAX_REPEATABLE4,46
#define TOPIC_LIMIT TOPIC_LIMIT5,73
#define NEW_KEY NEW_KEY6,102
bool hypotheticalMatch = false;hypotheticalMatch8,130
int currentBeforeLayer = 0;currentBeforeLayer9,162
int hasFundamentalMeanings = 0;hasFundamentalMeanings10,190
bool noteRulesMatching = false;noteRulesMatching11,222
HEAPREF rulematches = NULL;rulematches12,254
WORDP keywordBase = NULL;keywordBase13,282
WORDP* preexistingwords = NULL;preexistingwords14,308
bool monitorChange = false;monitorChange15,340
char* textBase = NULL;textBase16,368
unsigned int numberOfTopics = 0;numberOfTopics22,573
unsigned int numberOfTopicsInLayer[NUMBER_OF_LAYERS+1];numberOfTopicsInLayer24,607
topicBlock* topicBlockPtrs[NUMBER_OF_LAYERS+1];topicBlockPtrs25,663
bool norejoinder = false;norejoinder26,711
HEAPREF unwindUserLayer = NULL;unwindUserLayer27,737
bool shared = false;shared30,796
bool loading = false;loading31,817
#define MAX_OVERLAPS MAX_OVERLAPS33,840
static WORDP overlaps[MAX_OVERLAPS];overlaps34,866
static  int overlapCount  = 0;overlapCount35,903
static bool cstopicsystem = false;cstopicsystem36,934
static int oldNumberOfTopics;					// for creating/restoring dynamic topicsoldNumberOfTopics38,970
int currentTopicID = 0;						// current topic idcurrentTopicID40,1046
char* currentRule = 0;									// current rule being procesedcurrentRule41,1095
int currentRuleID = -1;									// current rule idcurrentRuleID42,1157
int currentReuseID = -1;								// local invoking reusecurrentReuseID43,1208
int currentReuseTopic = -1;								// topic invoking reusecurrentReuseTopic44,1264
int currentRuleTopic = -1;currentRuleTopic45,1323
unsigned short topicContext[MAX_RECENT + 1];topicContext47,1351
char labelContext[100][MAX_RECENT+ 1];labelContext48,1396
int inputContext[MAX_RECENT+ 1];inputContext49,1435
unsigned int contextIndex = 0;contextIndex50,1468
static bool contextResult = false;contextResult51,1499
bool ruleErased = false;ruleErased53,1535
#define MAX_DISABLE_TRACK MAX_DISABLE_TRACK55,1561
static char disableList[MAX_DISABLE_TRACK][200];disableList56,1591
static unsigned int disableIndex = 0;disableIndex57,1640
int sampleRule = 0;sampleRule59,1679
int sampleTopic = 0;sampleTopic60,1699
char timeStamp[NUMBER_OF_LAYERS][20];	// when build0 was compiledtimeStamp62,1721
char compileVersion[NUMBER_OF_LAYERS][20];	// which CS compiled build0 compileVersion63,1787
char numberTimeStamp[NUMBER_OF_LAYERS][20];	// when build0 was compilednumberTimeStamp64,1859
char buildStamp[NUMBER_OF_LAYERS][150];	// compile command name of buildbuildStamp65,1931
int outputRejoinderRuleID  = NO_REJOINDER;outputRejoinderRuleID68,2023
int outputRejoinderTopic = NO_REJOINDER;outputRejoinderTopic69,2066
int inputRejoinderTopic = NO_REJOINDER;					// what topic were we in, that we should check for uinputRejoinderTopic70,2107
int inputRejoinderRuleID = NO_REJOINDER;inputRejoinderRuleID71,2209
char* howTopic = "";howTopic72,2250
static char* keepSet[MAX_NO_ERASE];					// rules not authorized to erase themselveskeepSet75,2299
static unsigned int keepIndex;keepIndex76,2383
static char* repeatableSet[MAX_REPEATABLE];				// rules allowed to repeat outputrepeatableSet79,2442
static unsigned int repeatableIndex;repeatableIndex80,2523
int topicIndex = 0;topicIndex83,2602
int topicStack[MAX_TOPIC_STACK+1];topicStack84,2622
int pendingTopicIndex = 0;pendingTopicIndex87,2678
int pendingTopicList[MAX_TOPIC_STACK+1];pendingTopicList88,2705
int originalPendingTopicList[MAX_TOPIC_STACK+1];originalPendingTopicList89,2746
int originalPendingTopicIndex = 0;originalPendingTopicIndex90,2795
bool stats = false;				// show how many rules were executedstats93,2852
unsigned int ruleCount = 0;			// how many rules were executedruleCount94,2912
unsigned int xrefCount = 0;			// how many xrefs were createdxrefCount95,2974
unsigned int duplicateCount = 0;	// detecting multiple topics with same nameduplicateCount96,3035
static unsigned char code[] = {//   value to letter  0-78 (do not use - since topic system carescode98,3113
static unsigned char uncode[] = {//   letter to value - see code[]uncode109,3636
void CleanOutput(char* word)CleanOutput125,4435
char* GetRuleIDFromText(char* ptr, int & id) // passed ptr to or before dot, returns ptr  after GetRuleIDFromText137,5059
void DummyEncode(char* &data) // script compiler users to reserve space for encodeDummyEncode156,5656
bool DifferentTopicContext(int depthadjust, int topicid)DifferentTopicContext163,5793
void Encode(unsigned int val,char* &ptr,int size)Encode175,6213
unsigned int Decode(char* data,int size)Decode197,6740
char* FullEncode(uint64 val,char* ptr) // writes least significant digits firstFullEncode214,7092
uint64 FullDecode(char* data) // read end to frontFullDecode232,7457
void TraceSample(unsigned int topicid, unsigned int ruleID,unsigned int how)TraceSample240,7657
char* GetTopicFile(int topicid)GetTopicFile275,8755
char* RuleBefore(int topicid,char* rule)RuleBefore281,8862
static unsigned int ByteCount (unsigned char n)  ByteCount290,9157
int TopicUsedCount(int topicid)TopicUsedCount301,9332
char*  DisplayTopicFlags(int topicid)DisplayTopicFlags312,9591
bool BlockedBotAccess(unsigned int topicid)BlockedBotAccess335,10669
char* GetRuleTag(int& topicid,int& id,char* tag)GetRuleTag343,10949
char* GetLabelledRule(int& topicid, char* label,char* notdisabled,bool &fulllabel, bool& crosstoGetLabelledRule359,11380
char* GetVerify(char* tag,int &topicid, int &id) //  ~topic.#.#=LABEL<~topic.#.#  is a maximallyGetVerify396,12389
char* GetRule(int topicid, int id)GetRule443,13830
void AddTopicFlag(int topicid,unsigned int flag)AddTopicFlag465,14412
void RemoveTopicFlag(int topicid,unsigned int flag)RemoveTopicFlag472,14638
char* GetTopicName(unsigned int topicid,bool actual)GetTopicName482,14915
static char* RuleTypeName(char type)RuleTypeName495,15337
void SetTopicData(unsigned int topicid,char* data)SetTopicData506,15626
static char* GetTopicBlockData(unsigned int topicid)GetTopicBlockData512,15819
char* GetTopicData(unsigned int topicid)GetTopicData522,16139
void WalkTopics(char* function, char* buffer)WalkTopics535,16489
char* GetTopicLocals(int topicid)GetTopicLocals552,17033
unsigned int FindTopicIDByName(char* name,bool exact)FindTopicIDByName563,17288
void UndoErase(char* ptr,int topicid,int id)UndoErase596,18214
char* FindNextRule(signed char level, char* ptr, int& id)FindNextRule602,18401
bool TopLevelQuestion(char* word)TopLevelQuestion641,19983
bool TopLevelStatement(char* word)TopLevelStatement650,20226
bool TopLevelGambit(char* word)TopLevelGambit659,20471
bool TopLevelRule(char* word)TopLevelRule668,20705
bool Rejoinder(char* word)Rejoinder676,20923
int HasGambits(int topicid) // check each gambit to find a usable one (may or may not match by pHasGambits683,21105
char* ShowRule(char* rule,bool concise,bool pattern)ShowRule698,21543
char* GetPattern(char* ptr, char* label, char* pattern, bool friendly, int limit)GetPattern726,22210
char* GetOutputCopy(char* ptr)GetOutputCopy798,24733
char* GetLabel(char* rule,char* label)GetLabel818,25278
char* FindNextLabel(int topicid,char* label, char* ptr, int &id,bool alwaysAllowed)FindNextLabel847,26131
int GetTopicFlags(int topicid)GetTopicFlags869,27075
void SetTopicDebugMark(int topicid,unsigned int value)SetTopicDebugMark874,27194
void SetTopicTimingMark(int topicid, unsigned int value)SetTopicTimingMark881,27372
void SetDebugRuleMark(int topicid,unsigned int id)SetDebugRuleMark888,27553
static bool HasDebugRuleMark(int topicid)HasDebugRuleMark901,27970
bool AreDebugMarksSet()AreDebugMarksSet918,28348
static bool GetDebugRuleMark(int topicid,unsigned int id) //   has this top level responder beenGetDebugRuleMark927,28490
void SetTimingRuleMark(int topicid, unsigned int id)SetTimingRuleMark941,29025
static bool HasTimingRuleMark(int topicid)HasTimingRuleMark954,29443
bool AreTimingMarksSet()AreTimingMarksSet971,29825
static bool GetTimingRuleMark(int topicid, unsigned int id) //   has this top level responder beGetTimingRuleMark980,29969
void FlushDisabled()FlushDisabled994,30506
bool SetRuleDisableMark(unsigned int topicid, unsigned int id)SetRuleDisableMark1010,30868
void ClearRuleDisableMark(unsigned int topicid, unsigned int id)ClearRuleDisableMark1036,31711
bool UsableRule(int topicid,int id) // is this rule used upUsableRule1050,32173
void ResetTopicReply()ResetTopicReply1070,32905
void AddKeep(char* rule)AddKeep1077,33073
bool Eraseable(char* rule)Eraseable1087,33288
void AddRepeatable(char* rule)AddRepeatable1096,33436
bool Repeatable(char* rule)Repeatable1102,33579
void SetErase(bool force)SetErase1112,33851
void SetRejoinder(char* rule)SetRejoinder1126,34539
FunctionResult ProcessRuleOutput(char* rule, unsigned int id,char* buffer,bool refine)ProcessRuleOutput1167,36382
FunctionResult DoOutput(char* buffer,char* rule, unsigned int id,bool refine)DoOutput1302,41696
FunctionResult TestRule(int ruleID,char* rule,char* buffer,bool refine)TestRule1313,41980
static FunctionResult FindLinearRule(char type, char* buffer, unsigned int& id,char* rule)FindLinearRule1460,47382
static FunctionResult FindRandomRule(char type, char* buffer, unsigned int& id)FindRandomRule1513,50315
static FunctionResult FindRandomGambitContinuation(char type, char* buffer, unsigned int& id)FindRandomGambitContinuation1569,52656
static FunctionResult FindTypedResponse(char type,char* buffer,unsigned int& id,char* rule)FindTypedResponse1610,54535
bool CheckTopicTrace(char* name) // have not disabled this topic or function for tracingCheckTopicTrace1629,55302
bool CheckTopicTime() // have not disabled this topic for timingCheckTopicTime1636,55536
unsigned int EstablishTopicTrace()EstablishTopicTrace1642,55720
unsigned int EstablishTopicTiming()EstablishTopicTiming1653,56055
FunctionResult PerformTopic(int active,char* buffer,char* rule, unsigned int id)//   MANAGE currPerformTopic1664,56393
char* WriteUserTopics(char* ptr,bool sharefile)WriteUserTopics1747,59928
bool ReadUserTopics()ReadUserTopics1836,63963
void ResetTopicSystem(bool safe)ResetTopicSystem1966,69677
void ResetTopics()ResetTopics1988,70292
 void ResetTopic(int topicid)ResetTopic1993,70383
static WORDP AllocateTopicMemory( int topicid, char* name, uint64 flags, unsigned int topLevelRuAllocateTopicMemory2007,70837
unsigned int ReadTopicFlags(char* ptr)ReadTopicFlags2051,73033
void ReleaseFakeTopics()ReleaseFakeTopics2085,74726
void CreateFakeTopics(char* data) // ExtraTopic can be used to test this, naming file built by tCreateFakeTopics2096,74967
static void LoadTopicData(const char* fname,const char* layerid,unsigned int build,int layer,booLoadTopicData2182,77552
void AddWordItem(WORDP D, bool dictionaryBuild)AddWordItem2319,82613
static void CheckFundamentalMeaning(char* name)CheckFundamentalMeaning2330,82937
static void ReadPatternData(const char* fname,const char* layer,unsigned int build)ReadPatternData2362,83949
void UnwindUserLayerProtect()UnwindUserLayerProtect2397,85296
static void AddRecursiveProperty(WORDP D,uint64 type,bool dictionaryBuild,unsigned int build)AddRecursiveProperty2408,85552
static void AddRecursiveRequired(WORDP D,WORDP set,uint64 type,bool dictionaryBuild,unsigned intAddRecursiveRequired2436,86388
static void AddRecursiveFlag(WORDP D,uint64 type,bool dictionaryBuild,unsigned int build)AddRecursiveFlag2466,87124
static void AddRecursiveInternal(WORDP D,unsigned int intbits,bool dictionaryBuild,unsigned int AddRecursiveInternal2482,87624
static void InsureSafeSpellcheck(char* word,bool dictionaryBuild)InsureSafeSpellcheck2498,88149
#define NEW_BIT NEW_BIT2520,89011
void AddBinWord(WORDP D, bool isnew, FILE* out)AddBinWord2522,89050
static uint64* UnpackBin(uint64* data64)UnpackBin2587,91521
static void WriteFastDictionary(const char* layer,const char* fname,WORDP keywordStart, WORDP* bWriteFastDictionary2662,94107
void InitKeywords(const char* fname,const char* layer,unsigned int build,bool dictionaryBuild)InitKeywords2699,95162
static int ReadFastDictionary(char* name, const char* layer, unsigned int build)ReadFastDictionary3035,107641
static void InitMacros(const char* name,const char* layer,unsigned int build)InitMacros3076,109009
void AddContext(int topicid, char* label)AddContext3131,111273
void SetContext(bool val)SetContext3140,111549
unsigned int InContext(int topicid, char* label)InContext3145,111602
char* WriteUserContext(char* ptr,bool sharefile )WriteUserContext3161,112097
bool ReadUserContext()ReadUserContext3182,112750
static void InitLayerMemory(const char* name, int layer)InitLayerMemory3205,113435
static void AddRecursiveMember(WORDP D, WORDP set,unsigned int build)AddRecursiveMember3247,114765
static void IndirectMembers(WORDP D, uint64 buildx)IndirectMembers3268,115282
topicBlock* TI(int topicid)TI3285,115893
FunctionResult LoadLayer(int layer,const char* name,unsigned int build)LoadLayer3294,116332
void ResetContext()ResetContext3403,120503
void InitTopicSystem() // reload all topic dataInitTopicSystem3409,120608
char* ShowPendingTopics()ShowPendingTopics3437,121855
void GetActiveTopicName(char* buffer)GetActiveTopicName3450,122105
void AddPendingTopic(int topicid)AddPendingTopic3476,123026
void PendingTopics(int set)PendingTopics3500,124195
bool IsCurrentTopic(int topicid) // see if topic is an already pending one, not currentIsCurrentTopic3506,124456
void ClearPendingTopics()ClearPendingTopics3516,124670
bool RemovePendingTopic(int topicid)RemovePendingTopic3521,124726
unsigned int GetPendingTopicUnchanged()GetPendingTopicUnchanged3534,124993
int TopicInUse(int topicid)TopicInUse3545,125287
int PushTopic(int topicid) // -1 = failed  0 = unneeded  1 = pushed PushTopic3558,125523
void PopTopic()PopTopic3587,126319

userCache.h,391
#define _USERCACHEH_USERCACHEH2,20
#define DEFAULT_USER_CACHE DEFAULT_USER_CACHE18,1131
#define PRIOR(PRIOR21,1181
#define NEXT(NEXT22,1212
#define TIMESTAMP(TIMESTAMP23,1246
#define VOLLEYCOUNT(VOLLEYCOUNT24,1285
#define DEFAULT_VOLLEY_LIMIT DEFAULT_VOLLEY_LIMIT25,1341
#define OVERFLOW_SAFETY_MARGIN OVERFLOW_SAFETY_MARGIN26,1404
#define MAX_USERNAME MAX_USERNAME27,1440

spellcheck.cpp,1351
MEANING lengthLists[100];		// lists of valid words by lengthlengthLists3,21
bool fixedSpell = false;fixedSpell4,82
bool spellTrace = false;spellTrace5,107
char spellCheckWord[MAX_WORD_SIZE];spellCheckWord6,132
int badspellcount = 0;badspellcount7,168
typedef struct SUFFIXSUFFIX9,192
    char* word;word11,216
	uint64 flags;flags12,232
} SUFFIX;SUFFIX13,247
static SUFFIX stems[] = stems16,259
static SUFFIX stems_french[] = stems_french26,439
bool multichoice = false;multichoice83,1839
void InitSpellCheck()InitSpellCheck85,1866
static bool SameUTF(char* word, char* utfstring)SameUTF103,2366
int SplitWord(char* word,int i)SplitWord109,2495
static char* SpellCheck( int i)SpellCheck190,5342
char* ProbableKnownWord(char* word)ProbableKnownWord305,8994
static bool UsefulKnownWord(WORDP D)UsefulKnownWord376,11861
bool SpellCheckSentence()SpellCheckSentence385,12069
static char UnaccentedChar(char* str)UnaccentedChar1260,39371
int EditDistance(WORDINFO& dictWordData, WORDINFO& realWordData,int min)EditDistance1331,42444
static char* StemSpell(char* word,unsigned int i,uint64& base)StemSpell1662,55161
void CheckWord(char* originalWord, WORDINFO& realWordData, WORDP D, WORDP* choices, unsigned intCheckWord1776,57988
char* SpellFix(char* originalWord,int start,uint64 posflags)SpellFix1806,59193

textUtilities.cpp,12505
static HEAPREF startSupplementalInput = NULL;startSupplementalInput3,21
int startSentence;startSentence4,67
bool moreToComeQuestion = false;				// is there a ? in later sentencesmoreToComeQuestion5,86
bool moreToCome = false;						// are there more sentences pendingmoreToCome6,157
int endSentence;endSentence7,223
bool fullfloat = false;	// 2 float digits or allfullfloat8,240
int numberStyle = AMERICAN_NUMBERS;numberStyle9,289
FILE* docOut = NULL;docOut10,325
bool showBadUTF = false;			// log bad utf8 characer wordsshowBadUTF11,346
static bool blockComment = false;blockComment12,404
bool singleSource = false;			// in ReadDocument treat each line as an independent sentencesingleSource13,438
bool newline = false;newline14,529
int docSampleRate = 0;docSampleRate15,551
int docSample = 0;docSample16,574
uint64 docVolleyStartTime = 0;docVolleyStartTime17,593
bool hasHighChar = false;hasHighChar18,624
char conditionalCompile[MAX_CONDITIONALS + 1][50];conditionalCompile19,650
int conditionalCompiledIndex = 0;conditionalCompiledIndex20,701
char numberComma = ',';numberComma21,735
char numberPeriod = '.';numberPeriod22,759
char tmpWord[MAX_WORD_SIZE];					// globally visible scratch wordtmpWord24,785
char* userRecordSourceBuffer = 0;				// input source for reading is this text stream of user filuserRecordSourceBuffer25,851
static unsigned char hexcodes[16] = { '0','1','2','3','4','5','6','7','8','9','A','B','C','D','Ehexcodes26,949
int BOM = NOBOM;								// current ByteOrderMarkBOM27,1054
static char holdc = 0;		//   holds extra character from readaheadholdc28,1103
unsigned char utf82extendedascii[128];utf82extendedascii30,1170
unsigned char extendedascii2utf8[128] =extendedascii2utf831,1209
typedef struct NUMBERDECODENUMBERDECODE37,1444
	int word;		//   word of a number indexword39,1474
	unsigned int length;	//   length of wordlength40,1514
	int64 value;				//   value of wordvalue41,1556
	int realNumber;			// the type, one two are real, third is fractionrealNumber42,1592
} NUMBERDECODE;NUMBERDECODE43,1660
static NUMBERDECODE* numberValues;numberValues45,1677
typedef struct CURRENCYDECODECURRENCYDECODE47,1713
	int word; // word index of currency abbrevword49,1745
} CURRENCYDECODE;CURRENCYDECODE51,1839
static CURRENCYDECODE* currencies;currencies53,1858
static int* monthnames;monthnames54,1893
static int* topleveldomains;topleveldomains55,1917
char toHex[16] = {toHex57,1947
unsigned char toLowercaseData[256] = // convert upper to lower casetoLowercaseData60,2035
unsigned char toUppercaseData[256] = // convert lower to upper casetoUppercaseData79,3094
unsigned char isVowelData[256] = // english vowelsisVowelData98,4155
signed char nestingData[256] = // the matching bracket things: () [] {}nestingData116,4787
unsigned char legalNaming[256] = // what we allow in script-created names (like ~topicname or $ulegalNaming134,5449
unsigned char punctuation[256] = //   direct lookup of punctuation --   //    / is normal becauspunctuation152,6262
unsigned char realPunctuation[256] = // punctuation charactersrealPunctuation182,7577
unsigned char isAlphabeticDigitData[256] = //    non-digit number starter (+-.) == 1 isdigit == isAlphabeticDigitData212,8517
unsigned int roman[256] = // values of roman numeralsroman233,10852
unsigned char isComparatorData[256] = //    = < > & ? ! %isComparatorData252,11571
unsigned char decimalMarkData[3] = // American, Indian, FrenchdecimalMarkData270,12236
unsigned char digitGroupingData[3] = // American, Indian, FrenchdigitGroupingData275,12318
void Clear_CRNL(char* incoming)Clear_CRNL284,12506
void InitTextUtilities()InitTextUtilities297,12749
char* UTF16_2_UTF8(char* in)UTF16_2_UTF8311,13063
bool IsComparator(char* word)IsComparator377,15345
void ClearNumbers()ClearNumbers382,15635
char* ReadTokenMass(char* ptr, char* word)ReadTokenMass388,15739
void InitTextUtilities1()InitTextUtilities1396,15907
void CopyParam(char* to, char* from, unsigned int limit)CopyParam523,19846
bool IsDate(char* original)IsDate541,20174
void ClearSupplementalInput()ClearSupplementalInput616,22423
void CloseTextUtilities()CloseTextUtilities621,22490
bool IsFraction(char* token)IsFraction625,22521
char* RemoveEscapesWeAdded(char* at)RemoveEscapesWeAdded644,22827
char* CopyRemoveEscapes(char* to, char* at, int limit, bool allitems) // all includes ones we diCopyRemoveEscapes663,23450
void RemoveImpure(char* buffer)RemoveImpure705,24659
void ChangeSpecial(char* buffer)ChangeSpecial713,24871
static void UTF8_2_UTF16(unsigned char*& from, unsigned char*& to)UTF8_2_UTF16722,25069
char* AddEscapes(char* to, const char* from, bool normal, int limit, bool addescapes, bool conveAddEscapes780,26814
double Convert2Double(char* original, int useNumberStyle)Convert2Double840,28569
void AcquireDefines(const char* fileName)AcquireDefines867,29515
static MEANING ConceptFact(char* word, MEANING M, bool facts)ConceptFact992,34146
void AcquirePosMeanings(bool facts)AcquirePosMeanings1000,34323
uint64 FindPropertyValueByName(char* name)FindPropertyValueByName1094,37625
char* FindNameByValue(uint64 val) // works for invertable pos bits onlyFindNameByValue1104,37929
bool IsModelNumber(char* word)IsModelNumber1119,38296
uint64 FindSystemValueByName(char* name)FindSystemValueByName1132,38566
char* FindSystemNameByValue(uint64 val) // works for invertable system bits onlyFindSystemNameByValue1144,38900
char* FindParseNameByValue(uint64 val)FindParseNameByValue1159,39292
uint64 FindParseValueByName(char* name)FindParseValueByName1175,39666
uint64 FindMiscValueByName(char* name)FindMiscValueByName1188,40019
bool IsArithmeticOperator(char* word)IsArithmeticOperator1210,40603
bool IsArithmeticOp(char* word)IsArithmeticOp1233,41204
char* IsUTF8(char* buffer, char* character) // swallow a single utf8 character (ptr past it) or IsUTF81251,41716
char GetTemperatureLetter(char* ptr)GetTemperatureLetter1274,42450
char* IsTextCurrency(char* ptr, char* end)IsTextCurrency1289,42900
char* IsSymbolCurrency(char* ptr)IsSymbolCurrency1313,43565
unsigned char* GetCurrency(unsigned char* ptr, char*& number) // does this point to a currency tGetCurrency1334,44341
bool IsLegalName(const char* name, bool label) // start alpha (or ~) and be alpha _ digit (conceIsLegalName1366,45107
bool IsDigitWithNumberSuffix(char* number, int useNumberStyle)IsDigitWithNumberSuffix1380,45569
bool IsInteger(char* ptr, bool comma, int useNumberStyle)IsInteger1394,45934
char* FixHtmlTags(char* html)FixHtmlTags1409,46364
bool IsDigitWord(char* ptr, int useNumberStyle, bool comma, bool checkAll) // digitized numberIsDigitWord1503,48673
bool IsCommaNumberSegment(char* ptr, char* end) // number after a commaIsCommaNumberSegment1533,50007
bool IsRomanNumeral(char* word, uint64& val)IsRomanNumeral1551,50786
void ComputeWordData(char* word, WORDINFO* info) // how many characters in wordComputeWordData1579,51877
unsigned int IsNumber(char* num, int useNumberStyle, bool placeAllowed) // simple digit number oIsNumber1604,52360
bool IsPlaceNumber(char* word, int useNumberStyle) // place number and fraction numbersIsPlaceNumber1699,56229
char* ReadTabField(char* buffer, char* storage)ReadTabField1749,58158
FunctionResult AnalyzeCode(char* buffer)AnalyzeCode1762,58449
bool IsFractionNumber(char* word) // fraction numbersIsFractionNumber1820,60078
void WriteInteger(char* word, char* buffer, int useNumberStyle)WriteInteger1839,60487
char* GetNextInput()GetNextInput1873,61173
void SetContinuationInput(char* buffer) // set upon tokenization of prior pieceSetContinuationInput1881,61376
void MoreToCome()MoreToCome1890,61678
void EraseCurrentInput()EraseCurrentInput1910,62357
bool AddInput(char* buffer, int kind, bool clear)AddInput1915,62488
void FormatFloat(char* word, char* buffer, int useNumberStyle)FormatFloat1927,62893
char* WriteFloat(char* buffer, double value, int useNumberStyle)WriteFloat1941,63211
char IsFloat(char* word, char* end, int useNumberStyle)IsFloat1964,63681
bool IsNumericDate(char* word, char* end) // 01.02.2009 or 1.02.2009 or 1.2.2009IsNumericDate1993,64590
bool IsMail(char* word)IsMail2026,65600
bool IsTLD(char* word)IsTLD2049,66359
bool IsUrl(char* word, char* end)IsUrl2091,68035
bool IsFileExtension(char* word)IsFileExtension2133,69510
bool IsFileName(char* word)IsFileName2162,71453
bool IsEmojiShortCode(char* word)IsEmojiShortCode2197,72233
unsigned int IsMadeOfInitials(char* word, char* end)IsMadeOfInitials2204,72384
char* ReadFlags(char* ptr, uint64& flags, bool& bad, bool& response, bool factcall)ReadFlags2251,73671
char* ReadInt(char* ptr, int& value)ReadInt2315,75544
int64 atoi64(char* ptr)atoi642354,76300
char* ReadInt64(char* ptr, int64& spot)ReadInt642361,76379
char* ReadHex(char* ptr, uint64& value)ReadHex2400,77357
void BOMAccess(int& BOMvalue, char& oldc, int& oldCurrentLine) // used to get/set file access- -BOMAccess2420,77983
#define NOT_IN_FORMAT_STRING NOT_IN_FORMAT_STRING2439,78421
#define IN_FORMAT_STRING IN_FORMAT_STRING2440,78452
#define IN_FORMAT_CONTINUATIONLINE IN_FORMAT_CONTINUATIONLINE2441,78479
#define IN_FORMAT_COMMENT IN_FORMAT_COMMENT2442,78516
static bool ConditionalReadRejected(char* start, char*& buffer, bool revise)ConditionalReadRejected2444,78545
static bool PurifyUTF8(PurifyKind kind, char* start, char c, char*& read, char*& write)PurifyUTF82484,79670
static void PurifyHTML(char c, char*& read, char*& write)PurifyHTML2644,83650
char* PurifyInput(char* input, PurifyKind kind)PurifyInput2748,85888
bool AdjustUTF8(char* start, char* buffer)AdjustUTF82884,90167
char* SkipOOB(char* buffer)SkipOOB3080,97183
int ReadALine(char* buffer, FILE* in, unsigned int limit, bool returnEmptyLines, bool changeTabsReadALine3156,98807
char* ReadQuote(char* ptr, char* buffer, bool backslash, bool noblank, int limit)ReadQuote3518,108551
char* ReadArgument(char* ptr, char* buffer, FunctionResult& result) //   looking for a single toReadArgument3593,111412
char* ReadCompiledWordOrCall(char* ptr, char* word, bool noquote, bool var)ReadCompiledWordOrCall3644,113362
char* ReadPatternToken(char* ptr, char* word)ReadPatternToken3659,113719
static char* EatString(const char* ptr, char* word, char ender, char jsonactivestring)EatString3695,114531
char* ReadCompiledWord(const char* ptr, char* word, bool noquote, bool var, bool nolimit)ReadCompiledWord3742,115982
char* BalanceParen(char* ptr, bool within, bool wildcards) // text starting with ((unless withinBalanceParen3857,120605
char* SkipWhitespace(const char* ptr)SkipWhitespace3905,121972
char* Purify(char* msg) // used for logging to remove real newline characters so all fits on onePurify3931,122740
size_t OutputLimit(unsigned char* data) // insert eols where limitations existOutputLimit3956,123370
unsigned int UTFStrlen(char* ptr)UTFStrlen3988,124382
unsigned int UTFPosition(char* ptr, unsigned int pos)UTFPosition3999,124513
unsigned int UTFOffset(char* ptr, char* c)UTFOffset4012,124761
char* UTF2ExtendedAscii(char* bufferfrom)UTF2ExtendedAscii4024,124945
void ForceUnderscores(char* ptr)ForceUnderscores4051,125775
void ConvertQuotes(char* ptr)ConvertQuotes4057,125866
void Convert2Blanks(char* ptr)Convert2Blanks4073,126158
void ConvertNL(char* ptr)ConvertNL4086,126386
void Convert2Underscores(char* output)Convert2Underscores4122,127006
void RemoveTilde(char* output)RemoveTilde4145,127521
int64 NumberPower(char* number, int useNumberStyle)NumberPower4164,127890
int64 Convert2Integer(char* number, int useNumberStyle)  //  non numbers return NOT_A_NUMBER    Convert2Integer4180,128433
void MakeLowerCase(char* ptr)MakeLowerCase4529,140094
void MakeUpperCase(char* ptr)MakeUpperCase4556,140799
char* PartialLowerCopy(char* to, const char* from, int begin, int end)  	//excludes the part froPartialLowerCopy4583,141515
char* MakeLowerCopy(char* to, const char* from)MakeLowerCopy4613,142540
char* MakeUpperCopy(char* to, const char* from)MakeUpperCopy4650,143365
char* TrimSpaces(char* msg, bool start)TrimSpaces4687,144214
void UpcaseStarters(char* ptr) //   take a multiword phrase with _ and try to capitalize it corrUpcaseStarters4701,144511
char* documentBuffer = 0;documentBuffer4712,144962
bool ReadDocument(char* inBuffer, FILE* source)ReadDocument4714,144989

dictionaryMore.h,4842
#define MAX_SYNLOOP	MAX_SYNLOOP2,1
#define MAX_HASH_BUCKETS MAX_HASH_BUCKETS4,25
#define UNIQUEENTRY UNIQUEENTRY5,58
#define GETNEXTNODE(GETNEXTNODE7,147
#define GETMULTIWORDHEADER(GETMULTIWORDHEADER8,264
#define SETMULTIWORDHEADER(SETMULTIWORDHEADER9,334
#define IS_NEW_WORD(IS_NEW_WORD11,439
#define ALL_OBJECTS ALL_OBJECTS13,548
#define CHECKSTAMP CHECKSTAMP15,633
#define NOTIME_TOPIC	NOTIME_TOPIC25,1090
#define NOTIME_FN	NOTIME_FN26,1164
#define VAR_CHANGED	VAR_CHANGED29,1280
#define NOTRACE_TOPIC	NOTRACE_TOPIC30,1359
#define NOTRACE_FN	NOTRACE_FN31,1435
#define FROM_FILE	FROM_FILE34,1553
#define MACRO_TIME	MACRO_TIME35,1654
#define HAS_EXCLUDE	HAS_EXCLUDE38,1788
#define TABBED	TABBED39,1864
#define BOTVAR	BOTVAR40,1926
#define FUNCTION_NAME	FUNCTION_NAME43,2034
#define CONCEPT	CONCEPT46,2252
#define TOPIC	TOPIC49,2366
#define IS_OUTPUT_MACRO	IS_OUTPUT_MACRO52,2589
#define IS_TABLE_MACRO	IS_TABLE_MACRO54,2685
#define IS_PLAN_MACRO	IS_PLAN_MACRO55,2790
#define IS_PATTERN_MACRO	IS_PATTERN_MACRO57,2958
#define FUNCTION_BITS FUNCTION_BITS58,2996
#define PREFER_THIS_UPPERCASE	PREFER_THIS_UPPERCASE60,3091
#define HAS_CASEMARKING	HAS_CASEMARKING62,3179
#define UTF8	UTF864,3217
#define UPPERCASE_HASH	UPPERCASE_HASH65,3308
#define QUERY_KIND	QUERY_KIND66,3384
#define LABEL	LABEL67,3464
#define RENAMED	RENAMED68,3530
#define OVERRIDE_CONCEPT OVERRIDE_CONCEPT69,3615
#define WORDNET_ID	WORDNET_ID70,3714
#define MACRO_TRACE	MACRO_TRACE71,3874
#define BIT_CHANGED	BIT_CHANGED72,3989
#define CONDITIONAL_IDIOM	CONDITIONAL_IDIOM73,4080
#define BEEN_HERE	BEEN_HERE74,4264
#define FAKE_NOCONCEPTLIST	FAKE_NOCONCEPTLIST75,4353
#define DELETED_MARK	DELETED_MARK76,4435
#define BUILD0	BUILD077,4608
#define BUILD1	BUILD178,4709
#define DELAYED_RECURSIVE_DIRECT_MEMBER	DELAYED_RECURSIVE_DIRECT_MEMBER79,4770
#define BUILD2	BUILD280,4886
#define CONSTANT_IS_NEGATIVE	CONSTANT_IS_NEGATIVE81,4960
#define INTERNAL_MARK	INTERNAL_MARK82,5002
#define VARIABLE_ARGS_TABLE	VARIABLE_ARGS_TABLE84,5140
#define UPPERCASE_MATCH	UPPERCASE_MATCH85,5224
#define DEFINES	DEFINES86,5332
#define FN_TRACE_BITS FN_TRACE_BITS91,5558
#define FN_TIME_BITS FN_TIME_BITS92,5609
#define STDMEANING STDMEANING96,5733
#define SIMPLEMEANING SIMPLEMEANING97,5821
#define SIMPLE SIMPLE100,5935
#define STDBURST STDBURST101,5952
#define POSSESSIVES POSSESSIVES102,5997
#define CONTRACTIONS CONTRACTIONS103,6019
#define HYPHENS HYPHENS104,6042
#define COMPILEDBURST COMPILEDBURST105,6060
#define NOBURST NOBURST106,6139
#define FUNCTIONSTRING FUNCTIONSTRING108,6206
#define KINDS_OF_PHRASES KINDS_OF_PHRASES110,6234
#define ZONE_SUBJECT	ZONE_SUBJECT113,6391
#define ZONE_VERB	ZONE_VERB114,6447
#define ZONE_OBJECT	ZONE_OBJECT115,6477
#define ZONE_CONJUNCT	ZONE_CONJUNCT116,6529
#define ZONE_FULLVERB	ZONE_FULLVERB117,6592
#define ZONE_AUX	ZONE_AUX118,6660
#define ZONE_PCV	ZONE_PCV119,6718
#define ZONE_ADDRESS	ZONE_ADDRESS120,6798
#define ZONE_ABSOLUTE	ZONE_ABSOLUTE121,6891
#define ZONE_AMBIGUOUS	ZONE_AMBIGUOUS122,7019
#define PRIMARY_CASE_ALLOWED PRIMARY_CASE_ALLOWED125,7117
#define SECONDARY_CASE_ALLOWED SECONDARY_CASE_ALLOWED126,7151
#define STANDARD_LOOKUP STANDARD_LOOKUP127,7187
#define LOWERCASE_LOOKUP LOWERCASE_LOOKUP128,7261
#define UPPERCASE_LOOKUP UPPERCASE_LOOKUP129,7291
#define NO_EXTENDED_WRITE_FLAGS NO_EXTENDED_WRITE_FLAGS131,7322
#define MARK_FLAGS MARK_FLAGS134,7424
#define PUNCTUATION_BITS	PUNCTUATION_BITS137,7757
#define NORMAL_WORD	NORMAL_WORD139,7834
#define PART_OF_SPEECH	PART_OF_SPEECH140,8036
#define VERB_CONJUGATION_PROPERTIES VERB_CONJUGATION_PROPERTIES142,8100
#define VERB_PHRASAL_PROPERTIES VERB_PHRASAL_PROPERTIES143,8193
#define VERB_OBJECTS VERB_OBJECTS144,8326
#define VERB_SYSTEM_PROPERTIES VERB_SYSTEM_PROPERTIES145,8586
#define NOUN_PROPERTIES NOUN_PROPERTIES147,8737
#define SIGNS_OF_NOUN_BITS SIGNS_OF_NOUN_BITS148,8962
#define NUMBER_BITS NUMBER_BITS150,9051
#define VERB_PROPERTIES VERB_PROPERTIES152,9107
#define COMPARISONFIELD COMPARISONFIELD154,9147
#define TENSEFIELD TENSEFIELD155,9173
#define PLURALFIELD PLURALFIELD156,9194
#define Index2Word(Index2Word158,9217
#define Word2Index(Word2Index159,9268
#define GetMeanings(GetMeanings160,9326
#define GetMeaningsFromMeaning(GetMeaningsFromMeaning162,9426
#define Meaning2Index(Meaning2Index163,9491
#define CommonLevel(CommonLevel164,9599
#define OOB_START OOB_START169,9816
#define OOB_END OOB_END170,9838
inline unsigned int GlossIndex(MEANING M) { return M >> 24;}GlossIndex281,13841
inline int GetMeaningCount(WORDP D) { return (D->meanings) ? GetMeaning(D,0) : 0;}GetMeaningCount306,14768
inline int GetGlossCount(WORDP D) GetGlossCount307,14851

patternSystem.h,68
#define _PATTERNH__PATTERNH_2,19
#define NORETRY NORETRY19,1148

functionExecute.cpp,284
#define SIZELIM SIZELIM48,2296
#define MAX_TOPIC_KEYS MAX_TOPIC_KEYS49,2316
#define PLANMARK PLANMARK50,2344
#define RULEMARK RULEMARK51,2364
#define MAX_LOG_NAMES MAX_LOG_NAMES53,2385
#define MAX_REUSE_SAFETY MAX_REUSE_SAFETY70,2909
#define MAKEWORDX(MAKEWORDX196,6975

spellcheck.h,243
#define SPELLCHECK_HSPELLCHECK_H2,21
typedef struct WORDINFOWORDINFO18,1132
    char* word;word20,1158
    int charlen; // characters in wordcharlen21,1174
    int bytelen; // bytes in wordbytelen22,1213
} WORDINFO;WORDINFO23,1247

infer.h,205
#define _INFERH__INFERH_2,17
#define MAX_FIND MAX_FIND17,1123
#define MAX_FIND_SETS MAX_FIND_SETS18,1146
#define ILLEGAL_FACTSET ILLEGAL_FACTSET20,1172
#define FACTSET_COUNT(FACTSET_COUNT22,1200

constructCode.cpp,577
int impliedIf = ALREADY_HANDLED;	// testing context of an ifimpliedIf3,21
unsigned int withinLoop = 0;withinLoop4,82
static void TestIf(char* ptr,FunctionResult& result,char* buffer)TestIf6,112
char* HandleIf(char* ptr, char* buffer,FunctionResult& result)HandleIf166,6299
char* HandleLoop(char* ptr, char* buffer, FunctionResult &result,bool json)HandleLoop281,10523
FunctionResult MemberRelation(WORDP set,char* val1)MemberRelation483,16907
FunctionResult HandleRelation(char* word1,char* op, char* word2,bool output,int& id, char* word1HandleRelation528,17826

scriptCompile.h,514
#define _SCRIPTCOMPILEH__SCRIPTCOMPILEH_2,25
#define PATTERN_SPELL PATTERN_SPELL17,1139
#define OUTPUT_SPELL OUTPUT_SPELL18,1198
#define NOTE_KEYWORDS NOTE_KEYWORDS19,1255
#define NO_SUBSTITUTE_WARNING NO_SUBSTITUTE_WARNING20,1302
#define NO_SPELL NO_SPELL21,1367
#define MAX_ERRORS MAX_ERRORS22,1404
#define MAX_WARNINGS MAX_WARNINGS23,1427
#define ARGSETLIMIT ARGSETLIMIT25,1453
#define BADSCRIPT(BADSCRIPT53,2404
#define WARNSCRIPT(WARNSCRIPT63,3089
#define WARNSCRIPT(WARNSCRIPT65,3248

unittest/labels1.png,0

unittest/imp/imp.vcxproj.filters,0

unittest/imp/x64/Debug/vc142.pdb,0

unittest/imp/x64/Debug/imp.log,0

unittest/imp/x64/Debug/imp.Build.CppClean.log,0

unittest/imp/.vs/imp/v16/.suo,0

unittest/imp/.vs/imp/v16/ipch/AutoPCH/6bdca3d3185c0ba3/MSSQL.ipch,0

unittest/imp/.vs/imp/v16/ipch/AutoPCH/8eec75cc195c4915/TEST_MSSQL.ipch,0

unittest/imp/.vs/imp/v16/Browse.VC.db,0

unittest/imp/BINARIES/imp.pdb,0

unittest/imp/imp.sln,0

unittest/imp/imp.vcxproj,0

unittest/imp/Debug/vc142.pdb,0

unittest/imp/Debug/imp.log,0

unittest/imp/Debug/imp.tlog/imp.lastbuildstate,0

unittest/imp/Debug/imp.tlog/link.read.1.tlog,0

unittest/imp/Debug/imp.tlog/link.command.1.tlog,0

unittest/imp/Debug/imp.tlog/link.write.1.tlog,0

unittest/imp/Debug/imp.tlog/CL.read.1.tlog,0

unittest/imp/Debug/imp.tlog/CL.command.1.tlog,0

unittest/imp/Debug/imp.tlog/CL.write.1.tlog,0

unittest/imp/Debug/imp.Build.CppClean.log,0

unittest/CMakeFiles/cmake.check_cache,0

unittest/CMakeFiles/CMakeOutput.log,0

unittest/CMakeFiles/it.dir/DependInfo.cmake,471
set(CMAKE_DEPENDS_LANGUAGESCMAKE_DEPENDS_LANGUAGES2,67
set(CMAKE_DEPENDS_CHECK_CXXCMAKE_DEPENDS_CHECK_CXX6,170
set(CMAKE_CXX_COMPILER_ID "Clang")CMAKE_CXX_COMPILER_ID10,588
set(CMAKE_TARGET_DEFINITIONS_CXXCMAKE_TARGET_DEFINITIONS_CXX13,668
set(CMAKE_CXX_TARGET_INCLUDE_PATHCMAKE_CXX_TARGET_INCLUDE_PATH18,759
set(CMAKE_TARGET_LINKED_INFO_FILESCMAKE_TARGET_LINKED_INFO_FILES23,859
set(CMAKE_Fortran_TARGET_MODULE_DIR "")CMAKE_Fortran_TARGET_MODULE_DIR27,934

unittest/CMakeFiles/it.dir/depend.internal,0

unittest/CMakeFiles/it.dir/depend.make,0

unittest/CMakeFiles/it.dir/cmake_clean.cmake,0

unittest/CMakeFiles/it.dir/link.txt,0

unittest/CMakeFiles/it.dir/progress.make,0

unittest/CMakeFiles/it.dir/CXX.includecache,0

unittest/CMakeFiles/it.dir/build.make,0

unittest/CMakeFiles/it.dir/flags.make,0

unittest/CMakeFiles/feature_tests.bin,0

unittest/CMakeFiles/feature_tests.c,128
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main34,657

unittest/CMakeFiles/Makefile.cmake,310
set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")CMAKE_DEPENDS_GENERATOR5,125
set(CMAKE_MAKEFILE_DEPENDSCMAKE_MAKEFILE_DEPENDS8,237
set(CMAKE_MAKEFILE_OUTPUTSCMAKE_MAKEFILE_OUTPUTS38,2240
set(CMAKE_MAKEFILE_PRODUCTSCMAKE_MAKEFILE_PRODUCTS44,2355
set(CMAKE_DEPEND_INFO_FILESCMAKE_DEPEND_INFO_FILES49,2477

unittest/CMakeFiles/progress.marks,0

unittest/CMakeFiles/TargetDirectories.txt,0

unittest/CMakeFiles/3.13.4/CMakeDetermineCompilerABI_CXX.bin,0

unittest/CMakeFiles/3.13.4/CMakeDetermineCompilerABI_C.bin,0

unittest/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c,11995
# define ID_VOID_MAINID_VOID_MAIN6,98
# define constconst10,197
# define volatilevolatile11,212
# define COMPILER_ID COMPILER_ID19,413
#  define SIMULATE_ID SIMULATE_ID21,465
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR24,533
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR25,591
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH27,691
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH29,760
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK33,919
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR37,1041
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR38,1094
# define COMPILER_ID COMPILER_ID42,1182
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1215
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1263
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH46,1353
# define COMPILER_ID COMPILER_ID50,1484
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR51,1519
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR52,1591
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH53,1663
# define COMPILER_ID COMPILER_ID56,1764
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR58,1824
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR59,1877
# define COMPILER_ID COMPILER_ID62,1984
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR64,2042
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR65,2097
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2186
# define COMPILER_ID COMPILER_ID71,2277
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR73,2346
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR74,2410
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH76,2499
# define COMPILER_ID COMPILER_ID80,2589
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2674
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2727
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,2786
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR88,2880
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR89,2932
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,2990
# define COMPILER_ID COMPILER_ID94,3080
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR96,3131
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR97,3182
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH98,3237
# define COMPILER_ID COMPILER_ID101,3315
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR103,3376
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR104,3433
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH105,3495
# define COMPILER_ID COMPILER_ID108,3613
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3664
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3720
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,3776
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK113,3837
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR116,3930
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR117,3981
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH118,4036
# define COMPILER_ID COMPILER_ID123,4198
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4248
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4304
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH127,4360
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK128,4421
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR131,4514
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR132,4565
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH133,4620
# define COMPILER_ID COMPILER_ID138,4757
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR140,4814
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR141,4870
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH142,4926
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK143,4987
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR146,5080
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR147,5131
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH148,5186
# define COMPILER_ID COMPILER_ID153,5272
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR154,5299
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR155,5345
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH157,5431
# define COMPILER_ID COMPILER_ID161,5520
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR162,5548
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR163,5600
# define COMPILER_ID COMPILER_ID166,5692
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR168,5762
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR169,5831
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH170,5906
# define COMPILER_ID COMPILER_ID173,6059
# define COMPILER_ID COMPILER_ID176,6116
# define COMPILER_ID COMPILER_ID179,6170
# define COMPILER_ID COMPILER_ID182,6231
# define COMPILER_ID COMPILER_ID185,6320
#  define SIMULATE_ID SIMULATE_ID187,6377
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR189,6414
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR190,6467
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH191,6520
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR194,6626
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR195,6679
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK197,6740
# define COMPILER_ID COMPILER_ID200,6827
#  define SIMULATE_ID SIMULATE_ID202,6879
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR204,6916
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR205,6969
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH206,7022
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR209,7128
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR210,7181
# define COMPILER_ID COMPILER_ID214,7267
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR215,7294
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR217,7369
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH220,7464
# define COMPILER_ID COMPILER_ID224,7555
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR226,7607
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR227,7659
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH231,7798
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH234,7903
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK238,8006
# define COMPILER_ID COMPILER_ID242,8178
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR245,8282
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR246,8344
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH247,8413
# define COMPILER_ID COMPILER_ID251,8555
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR253,8604
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR254,8662
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH255,8726
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL256,8781
# define COMPILER_ID COMPILER_ID260,8882
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR263,8976
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR264,9039
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH265,9106
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR268,9212
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR269,9274
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH270,9340
# define COMPILER_ID COMPILER_ID275,9468
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR277,9531
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR278,9590
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH279,9649
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR282,9734
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR283,9781
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH284,9832
# define COMPILER_ID COMPILER_ID288,9959
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR291,10062
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR292,10126
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH293,10194
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR296,10301
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR297,10361
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH298,10425
# define COMPILER_ID COMPILER_ID306,10686
# define COMPILER_ID COMPILER_ID309,10759
# define COMPILER_ID COMPILER_ID312,10815
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler319,11113
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate321,11200
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto325,11294
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray329,11389
#define STRINGIFY_HELPER(STRINGIFY_HELPER332,11464
#define STRINGIFY(STRINGIFY333,11495
# define PLATFORM_ID PLATFORM_ID337,11639
# define PLATFORM_ID PLATFORM_ID340,11695
# define PLATFORM_ID PLATFORM_ID343,11753
# define PLATFORM_ID PLATFORM_ID346,11808
# define PLATFORM_ID PLATFORM_ID349,11901
# define PLATFORM_ID PLATFORM_ID352,11982
# define PLATFORM_ID PLATFORM_ID355,12061
# define PLATFORM_ID PLATFORM_ID358,12141
# define PLATFORM_ID PLATFORM_ID361,12210
# define PLATFORM_ID PLATFORM_ID364,12336
# define PLATFORM_ID PLATFORM_ID367,12422
# define PLATFORM_ID PLATFORM_ID370,12494
# define PLATFORM_ID PLATFORM_ID373,12549
# define PLATFORM_ID PLATFORM_ID376,12640
# define PLATFORM_ID PLATFORM_ID379,12715
# define PLATFORM_ID PLATFORM_ID382,12807
# define PLATFORM_ID PLATFORM_ID385,12884
# define PLATFORM_ID PLATFORM_ID388,12982
# define PLATFORM_ID PLATFORM_ID391,13039
# define PLATFORM_ID PLATFORM_ID394,13096
# define PLATFORM_ID PLATFORM_ID397,13166
# define PLATFORM_ID PLATFORM_ID400,13238
# define PLATFORM_ID PLATFORM_ID403,13328
# define PLATFORM_ID PLATFORM_ID406,13426
# define PLATFORM_ID PLATFORM_ID409,13519
#  define PLATFORM_ID PLATFORM_ID413,13600
#  define PLATFORM_ID PLATFORM_ID416,13655
#  define PLATFORM_ID PLATFORM_ID419,13708
#  define PLATFORM_ID PLATFORM_ID422,13765
#  define PLATFORM_IDPLATFORM_ID425,13830
# define PLATFORM_IDPLATFORM_ID429,13890
#  define ARCHITECTURE_ID ARCHITECTURE_ID440,14230
#  define ARCHITECTURE_ID ARCHITECTURE_ID443,14308
#  define ARCHITECTURE_ID ARCHITECTURE_ID446,14365
#  define ARCHITECTURE_ID ARCHITECTURE_ID449,14423
#   define ARCHITECTURE_ID ARCHITECTURE_ID453,14499
#   define ARCHITECTURE_ID ARCHITECTURE_ID455,14555
#   define ARCHITECTURE_ID ARCHITECTURE_ID457,14599
#  define ARCHITECTURE_ID ARCHITECTURE_ID461,14685
#  define ARCHITECTURE_ID ARCHITECTURE_ID464,14741
#  define ARCHITECTURE_ID ARCHITECTURE_ID467,14808
#  define ARCHITECTURE_ID ARCHITECTURE_ID472,14894
#  define ARCHITECTURE_ID ARCHITECTURE_ID475,14951
#  define ARCHITECTURE_ID ARCHITECTURE_ID478,15018
#  define ARCHITECTURE_ID ARCHITECTURE_ID483,15146
#  define ARCHITECTURE_ID ARCHITECTURE_ID486,15206
#  define ARCHITECTURE_ID ARCHITECTURE_ID489,15273
#  define ARCHITECTURE_IDARCHITECTURE_ID492,15316
#define DEC(DEC496,15400
#define HEX(HEX507,15749
char const info_version[] = {info_version519,16111
char const info_version_internal[] = {info_version_internal537,16609
char const info_simulate_version[] = {info_simulate_version546,16935
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform566,17604
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch567,17672
#  define C_DIALECT C_DIALECT575,17860
#  define C_DIALECTC_DIALECT577,17892
# define C_DIALECT C_DIALECT580,17954
# define C_DIALECT C_DIALECT582,18012
# define C_DIALECT C_DIALECT584,18042
const char* info_language_dialect_default =info_language_dialect_default586,18073
void main() {}main592,18265
int main(argc, argv) int argc; char *argv[];main595,18314

unittest/CMakeFiles/3.13.4/CompilerIdC/a.out,0

unittest/CMakeFiles/3.13.4/CompilerIdCXX/a.out,0

unittest/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp,11457
# define COMPILER_ID COMPILER_ID13,390
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR15,451
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR16,511
# define COMPILER_ID COMPILER_ID19,622
#  define SIMULATE_ID SIMULATE_ID21,674
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR24,742
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR25,800
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH27,900
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH29,969
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK33,1128
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR37,1250
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR38,1303
# define COMPILER_ID COMPILER_ID42,1391
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1424
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1472
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH46,1562
# define COMPILER_ID COMPILER_ID50,1693
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR51,1728
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR52,1800
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH53,1872
# define COMPILER_ID COMPILER_ID56,1973
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR58,2033
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR59,2086
# define COMPILER_ID COMPILER_ID62,2193
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR64,2251
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR65,2306
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2395
# define COMPILER_ID COMPILER_ID71,2486
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR73,2555
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR74,2619
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH76,2708
# define COMPILER_ID COMPILER_ID80,2799
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2886
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2940
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,3000
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR88,3095
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR89,3148
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,3207
# define COMPILER_ID COMPILER_ID94,3299
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR96,3351
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR97,3403
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH98,3459
# define COMPILER_ID COMPILER_ID101,3540
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR103,3603
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR104,3662
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH105,3726
# define COMPILER_ID COMPILER_ID108,3848
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3899
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3955
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,4011
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK113,4072
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR116,4167
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR117,4220
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH118,4277
# define COMPILER_ID COMPILER_ID123,4445
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4495
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4551
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH127,4607
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK128,4668
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR131,4763
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR132,4816
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH133,4873
# define COMPILER_ID COMPILER_ID138,5016
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR140,5073
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR141,5129
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH142,5185
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK143,5246
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR146,5341
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR147,5394
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH148,5451
# define COMPILER_ID COMPILER_ID153,5539
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR154,5566
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR155,5612
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH157,5698
# define COMPILER_ID COMPILER_ID161,5787
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR162,5815
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR163,5867
# define COMPILER_ID COMPILER_ID166,5959
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR168,6029
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR169,6098
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH170,6173
# define COMPILER_ID COMPILER_ID173,6326
# define COMPILER_ID COMPILER_ID176,6389
# define COMPILER_ID COMPILER_ID179,6478
#  define SIMULATE_ID SIMULATE_ID181,6535
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR183,6572
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR184,6625
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH185,6678
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR188,6784
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR189,6837
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK191,6898
# define COMPILER_ID COMPILER_ID194,6985
#  define SIMULATE_ID SIMULATE_ID196,7037
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR198,7074
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR199,7127
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH200,7180
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR203,7286
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR204,7339
# define COMPILER_ID COMPILER_ID208,7446
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR210,7496
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR212,7550
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR215,7634
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH218,7729
# define COMPILER_ID COMPILER_ID222,7820
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR224,7872
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR225,7924
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH229,8063
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH232,8168
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK236,8271
# define COMPILER_ID COMPILER_ID240,8443
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR243,8547
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR244,8609
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH245,8678
# define COMPILER_ID COMPILER_ID249,8820
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR251,8869
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR252,8927
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH253,8991
#  define COMPILER_VERSION_INTERNAL COMPILER_VERSION_INTERNAL254,9046
# define COMPILER_ID COMPILER_ID258,9147
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR261,9241
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR262,9304
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH263,9371
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR266,9477
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR267,9539
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH268,9605
# define COMPILER_ID COMPILER_ID273,9747
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR276,9850
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR277,9914
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH278,9982
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR281,10089
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR282,10149
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH283,10213
# define COMPILER_ID COMPILER_ID291,10474
# define COMPILER_ID COMPILER_ID294,10547
# define COMPILER_ID COMPILER_ID297,10603
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler304,10901
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate306,10988
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto310,11082
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray314,11177
#define STRINGIFY_HELPER(STRINGIFY_HELPER317,11252
#define STRINGIFY(STRINGIFY318,11283
# define PLATFORM_ID PLATFORM_ID322,11427
# define PLATFORM_ID PLATFORM_ID325,11483
# define PLATFORM_ID PLATFORM_ID328,11541
# define PLATFORM_ID PLATFORM_ID331,11596
# define PLATFORM_ID PLATFORM_ID334,11689
# define PLATFORM_ID PLATFORM_ID337,11770
# define PLATFORM_ID PLATFORM_ID340,11849
# define PLATFORM_ID PLATFORM_ID343,11929
# define PLATFORM_ID PLATFORM_ID346,11998
# define PLATFORM_ID PLATFORM_ID349,12124
# define PLATFORM_ID PLATFORM_ID352,12210
# define PLATFORM_ID PLATFORM_ID355,12282
# define PLATFORM_ID PLATFORM_ID358,12337
# define PLATFORM_ID PLATFORM_ID361,12428
# define PLATFORM_ID PLATFORM_ID364,12503
# define PLATFORM_ID PLATFORM_ID367,12595
# define PLATFORM_ID PLATFORM_ID370,12672
# define PLATFORM_ID PLATFORM_ID373,12770
# define PLATFORM_ID PLATFORM_ID376,12827
# define PLATFORM_ID PLATFORM_ID379,12884
# define PLATFORM_ID PLATFORM_ID382,12954
# define PLATFORM_ID PLATFORM_ID385,13026
# define PLATFORM_ID PLATFORM_ID388,13116
# define PLATFORM_ID PLATFORM_ID391,13214
# define PLATFORM_ID PLATFORM_ID394,13307
#  define PLATFORM_ID PLATFORM_ID398,13388
#  define PLATFORM_ID PLATFORM_ID401,13443
#  define PLATFORM_ID PLATFORM_ID404,13496
#  define PLATFORM_ID PLATFORM_ID407,13553
#  define PLATFORM_IDPLATFORM_ID410,13618
# define PLATFORM_IDPLATFORM_ID414,13678
#  define ARCHITECTURE_ID ARCHITECTURE_ID425,14018
#  define ARCHITECTURE_ID ARCHITECTURE_ID428,14096
#  define ARCHITECTURE_ID ARCHITECTURE_ID431,14153
#  define ARCHITECTURE_ID ARCHITECTURE_ID434,14211
#   define ARCHITECTURE_ID ARCHITECTURE_ID438,14287
#   define ARCHITECTURE_ID ARCHITECTURE_ID440,14343
#   define ARCHITECTURE_ID ARCHITECTURE_ID442,14387
#  define ARCHITECTURE_ID ARCHITECTURE_ID446,14473
#  define ARCHITECTURE_ID ARCHITECTURE_ID449,14529
#  define ARCHITECTURE_ID ARCHITECTURE_ID452,14596
#  define ARCHITECTURE_ID ARCHITECTURE_ID457,14682
#  define ARCHITECTURE_ID ARCHITECTURE_ID460,14739
#  define ARCHITECTURE_ID ARCHITECTURE_ID463,14806
#  define ARCHITECTURE_ID ARCHITECTURE_ID468,14934
#  define ARCHITECTURE_ID ARCHITECTURE_ID471,14994
#  define ARCHITECTURE_ID ARCHITECTURE_ID474,15061
#  define ARCHITECTURE_IDARCHITECTURE_ID477,15104
#define DEC(DEC481,15188
#define HEX(HEX492,15537
char const info_version[] = {info_version504,15899
char const info_version_internal[] = {info_version_internal522,16397
char const info_simulate_version[] = {info_simulate_version531,16723
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform551,17392
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch552,17460
#define CXX_STD CXX_STD558,17573
#define CXX_STD CXX_STD560,17606
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default563,17642
int main(int argc, char* argv[])main579,17947

unittest/CMakeFiles/3.13.4/CMakeCXXCompiler.cmake,3896
set(CMAKE_CXX_COMPILER "/usr/bin/g++")CMAKE_CXX_COMPILER1,0
set(CMAKE_CXX_COMPILER_ARG1 "")CMAKE_CXX_COMPILER_ARG12,39
set(CMAKE_CXX_COMPILER_ID "AppleClang")CMAKE_CXX_COMPILER_ID3,71
set(CMAKE_CXX_COMPILER_VERSION "10.0.1.10010046")CMAKE_CXX_COMPILER_VERSION4,111
set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")CMAKE_CXX_COMPILER_VERSION_INTERNAL5,161
set(CMAKE_CXX_COMPILER_WRAPPER "")CMAKE_CXX_COMPILER_WRAPPER6,205
set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "98")CMAKE_CXX_STANDARD_COMPUTED_DEFAULT7,240
set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_aliasCMAKE_CXX_COMPILE_FEATURES8,286
set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")CMAKE_CXX98_COMPILE_FEATURES9,1627
set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attCMAKE_CXX11_COMPILE_FEATURES10,1707
set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deCMAKE_CXX14_COMPILE_FEATURES11,2722
set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")CMAKE_CXX17_COMPILE_FEATURES12,3031
set(CMAKE_CXX20_COMPILE_FEATURES "")CMAKE_CXX20_COMPILE_FEATURES13,3078
set(CMAKE_CXX_PLATFORM_ID "Darwin")CMAKE_CXX_PLATFORM_ID15,3116
set(CMAKE_CXX_SIMULATE_ID "")CMAKE_CXX_SIMULATE_ID16,3152
set(CMAKE_CXX_SIMULATE_VERSION "")CMAKE_CXX_SIMULATE_VERSION17,3182
set(CMAKE_AR "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usrCMAKE_AR21,3220
set(CMAKE_CXX_COMPILER_AR "")CMAKE_CXX_COMPILER_AR22,3326
set(CMAKE_RANLIB "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchainCMAKE_RANLIB23,3356
set(CMAKE_CXX_COMPILER_RANLIB "")CMAKE_CXX_COMPILER_RANLIB24,3470
set(CMAKE_LINKER "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchainCMAKE_LINKER25,3504
set(CMAKE_COMPILER_IS_GNUCXX )CMAKE_COMPILER_IS_GNUCXX26,3614
set(CMAKE_CXX_COMPILER_LOADED 1)CMAKE_CXX_COMPILER_LOADED27,3645
set(CMAKE_CXX_COMPILER_WORKS TRUE)CMAKE_CXX_COMPILER_WORKS28,3678
set(CMAKE_CXX_ABI_COMPILED TRUE)CMAKE_CXX_ABI_COMPILED29,3713
set(CMAKE_COMPILER_IS_MINGW )CMAKE_COMPILER_IS_MINGW30,3746
set(CMAKE_COMPILER_IS_CYGWIN )CMAKE_COMPILER_IS_CYGWIN31,3776
  set(CYGWIN 1)CYGWIN33,3836
  set(UNIX 1)UNIX34,3852
set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")CMAKE_CXX_COMPILER_ENV_VAR37,3875
  set(MINGW 1)MINGW40,3942
set(CMAKE_CXX_COMPILER_ID_RUN 1)CMAKE_CXX_COMPILER_ID_RUN42,3965
set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)CMAKE_CXX_IGNORE_EXTENSIONS43,3998
set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;mm;CPP)CMAKE_CXX_SOURCE_FILE_EXTENSIONS44,4073
set(CMAKE_CXX_LINKER_PREFERENCE 30)CMAKE_CXX_LINKER_PREFERENCE45,4137
set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES46,4173
set(CMAKE_CXX_SIZEOF_DATA_PTR "8")CMAKE_CXX_SIZEOF_DATA_PTR49,4253
set(CMAKE_CXX_COMPILER_ABI "")CMAKE_CXX_COMPILER_ABI50,4288
set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")CMAKE_CXX_LIBRARY_ARCHITECTURE51,4319
  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")CMAKE_SIZEOF_VOID_P54,4389
  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")CMAKE_INTERNAL_PLATFORM_ABI58,4483
  set(CMAKE_LIBRARY_ARCHITECTURE "")CMAKE_LIBRARY_ARCHITECTURE62,4590
set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")CMAKE_CXX_CL_SHOWINCLUDES_PREFIX65,4636
  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")CMAKE_CL_SHOWINCLUDES_PREFIX67,4714
set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++")CMAKE_CXX_IMPLICIT_LINK_LIBRARIES74,4801
set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/Applications/Xcode.app/Contents/Developer/Platforms/MaCMAKE_CXX_IMPLICIT_LINK_DIRECTORIES75,4846
set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Applications/Xcode.app/Contents/Developer/PlCMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES76,4997

unittest/CMakeFiles/3.13.4/CMakeCCompiler.cmake,3462
set(CMAKE_C_COMPILER "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolcCMAKE_C_COMPILER1,0
set(CMAKE_C_COMPILER_ARG1 "")CMAKE_C_COMPILER_ARG12,114
set(CMAKE_C_COMPILER_ID "AppleClang")CMAKE_C_COMPILER_ID3,144
set(CMAKE_C_COMPILER_VERSION "10.0.1.10010046")CMAKE_C_COMPILER_VERSION4,182
set(CMAKE_C_COMPILER_VERSION_INTERNAL "")CMAKE_C_COMPILER_VERSION_INTERNAL5,230
set(CMAKE_C_COMPILER_WRAPPER "")CMAKE_C_COMPILER_WRAPPER6,272
set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")CMAKE_C_STANDARD_COMPUTED_DEFAULT7,305
set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macrCMAKE_C_COMPILE_FEATURES8,349
set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")CMAKE_C90_COMPILE_FEATURES9,475
set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")CMAKE_C99_COMPILE_FEATURES10,540
set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")CMAKE_C11_COMPILE_FEATURES11,612
set(CMAKE_C_PLATFORM_ID "Darwin")CMAKE_C_PLATFORM_ID13,672
set(CMAKE_C_SIMULATE_ID "")CMAKE_C_SIMULATE_ID14,706
set(CMAKE_C_SIMULATE_VERSION "")CMAKE_C_SIMULATE_VERSION15,734
set(CMAKE_AR "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usrCMAKE_AR19,770
set(CMAKE_C_COMPILER_AR "")CMAKE_C_COMPILER_AR20,876
set(CMAKE_RANLIB "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchainCMAKE_RANLIB21,904
set(CMAKE_C_COMPILER_RANLIB "")CMAKE_C_COMPILER_RANLIB22,1018
set(CMAKE_LINKER "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchainCMAKE_LINKER23,1050
set(CMAKE_COMPILER_IS_GNUCC )CMAKE_COMPILER_IS_GNUCC24,1160
set(CMAKE_C_COMPILER_LOADED 1)CMAKE_C_COMPILER_LOADED25,1190
set(CMAKE_C_COMPILER_WORKS TRUE)CMAKE_C_COMPILER_WORKS26,1221
set(CMAKE_C_ABI_COMPILED TRUE)CMAKE_C_ABI_COMPILED27,1254
set(CMAKE_COMPILER_IS_MINGW )CMAKE_COMPILER_IS_MINGW28,1285
set(CMAKE_COMPILER_IS_CYGWIN )CMAKE_COMPILER_IS_CYGWIN29,1315
  set(CYGWIN 1)CYGWIN31,1375
  set(UNIX 1)UNIX32,1391
set(CMAKE_C_COMPILER_ENV_VAR "CC")CMAKE_C_COMPILER_ENV_VAR35,1414
  set(MINGW 1)MINGW38,1478
set(CMAKE_C_COMPILER_ID_RUN 1)CMAKE_C_COMPILER_ID_RUN40,1501
set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)CMAKE_C_SOURCE_FILE_EXTENSIONS41,1532
set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)CMAKE_C_IGNORE_EXTENSIONS42,1572
set(CMAKE_C_LINKER_PREFERENCE 10)CMAKE_C_LINKER_PREFERENCE43,1633
set(CMAKE_C_SIZEOF_DATA_PTR "8")CMAKE_C_SIZEOF_DATA_PTR46,1701
set(CMAKE_C_COMPILER_ABI "")CMAKE_C_COMPILER_ABI47,1734
set(CMAKE_C_LIBRARY_ARCHITECTURE "")CMAKE_C_LIBRARY_ARCHITECTURE48,1763
  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")CMAKE_SIZEOF_VOID_P51,1829
  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")CMAKE_INTERNAL_PLATFORM_ABI55,1919
  set(CMAKE_LIBRARY_ARCHITECTURE "")CMAKE_LIBRARY_ARCHITECTURE59,2022
set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")CMAKE_C_CL_SHOWINCLUDES_PREFIX62,2068
  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")CMAKE_CL_SHOWINCLUDES_PREFIX64,2142
set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")CMAKE_C_IMPLICIT_LINK_LIBRARIES71,2227
set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/Applications/Xcode.app/Contents/Developer/Platforms/MacOCMAKE_C_IMPLICIT_LINK_DIRECTORIES72,2267
set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Applications/Xcode.app/Contents/Developer/PlatCMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES73,2416

unittest/CMakeFiles/3.13.4/CMakeSystem.cmake,628
set(CMAKE_HOST_SYSTEM "Darwin-18.7.0")CMAKE_HOST_SYSTEM1,0
set(CMAKE_HOST_SYSTEM_NAME "Darwin")CMAKE_HOST_SYSTEM_NAME2,39
set(CMAKE_HOST_SYSTEM_VERSION "18.7.0")CMAKE_HOST_SYSTEM_VERSION3,76
set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")CMAKE_HOST_SYSTEM_PROCESSOR4,116
set(CMAKE_SYSTEM "Darwin-18.7.0")CMAKE_SYSTEM8,161
set(CMAKE_SYSTEM_NAME "Darwin")CMAKE_SYSTEM_NAME9,195
set(CMAKE_SYSTEM_VERSION "18.7.0")CMAKE_SYSTEM_VERSION10,227
set(CMAKE_SYSTEM_PROCESSOR "x86_64")CMAKE_SYSTEM_PROCESSOR11,262
set(CMAKE_CROSSCOMPILING "FALSE")CMAKE_CROSSCOMPILING13,300
set(CMAKE_SYSTEM_LOADED 1)CMAKE_SYSTEM_LOADED15,335

unittest/CMakeFiles/CMakeDirectoryInformation.cmake,691
set(CMAKE_RELATIVE_PATH_TOP_SOURCE "/Users/maclen/shared/work/ja/ja-chatscript/Pearl/SRC/mssql")CMAKE_RELATIVE_PATH_TOP_SOURCE5,144
set(CMAKE_RELATIVE_PATH_TOP_BINARY "/Users/maclen/shared/work/ja/ja-chatscript/Pearl/SRC/mssql")CMAKE_RELATIVE_PATH_TOP_BINARY6,241
set(CMAKE_FORCE_UNIX_PATHS 1)CMAKE_FORCE_UNIX_PATHS9,375
set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")CMAKE_C_INCLUDE_REGEX_SCAN13,476
set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")CMAKE_C_INCLUDE_REGEX_COMPLAIN14,515
set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})CMAKE_CXX_INCLUDE_REGEX_SCAN15,556
set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})CMAKE_CXX_INCLUDE_REGEX_COMPLAIN16,620

unittest/CMakeFiles/feature_tests.cxx,130
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main405,8773

unittest/CMakeFiles/Makefile2,0

unittest/Makefile,311
UNAME_S := $(shell uname -s)UNAME_S6,98
	ODBCLIB := -lodbc -lmsodbcsql-17ODBCLIB8,151
	ODBCLIB := -lodbc -lmsodbcsql.17ODBCLIB10,190
all: imp_testall13,231
CFLAGS := -DDISCARDMONGO=1CFLAGS17,281
SRC := ../zif.cpp test_zif.cpp \SRC19,309
imp_test: $(SRC) Makefileimp_test23,400
clean:clean27,574

unittest/plot_times.py,516
import matplotlib.pyplot as pltplt2,11
import numpy as npnp3,43
times = []times6,73
filename = './timed_data.csv'filename7,84
    reader = csv.reader(in_file)reader9,151
t_times = np.array(times)t_times13,257
write_times = t_times[:, 0]/1000write_times14,283
read_times = t_times[:, 1]/1000read_times15,316
ave_combined = np.mean(read_times + write_times)ave_combined16,348
    fig, axs = plt.subplots(1, 2, figsize=(12, 4))fig21,473
    fig, axs = plt.subplots(1, 2, figsize=(12, 4))axs21,473

unittest/it,0

unittest/timer.cpp,552
struct timeval start, stop;start8,78
struct timeval start, stop;stop8,78
void start_timer(void)start_timer9,106
long long stop_timer_us(void)stop_timer_us14,166
LARGE_INTEGER StartingTime, EndingTime, ElapsedMicroseconds;StartingTime26,397
LARGE_INTEGER StartingTime, EndingTime, ElapsedMicroseconds;EndingTime26,397
LARGE_INTEGER StartingTime, EndingTime, ElapsedMicroseconds;ElapsedMicroseconds26,397
LARGE_INTEGER Frequency;Frequency27,458
void start_timer(void)start_timer29,484
long long stop_timer_us(void)stop_timer_us34,556

unittest/test_main.cpp,48
#define CATCH_CONFIG_MAINCATCH_CONFIG_MAIN1,0

unittest/imp_test.dSYM/Contents/Resources/DWARF/imp_test,0

unittest/imp_test.dSYM/Contents/Info.plist,449
		<key>CFBundleDevelopmentRegion</key>CFBundleDevelopmentRegion5,181
		<key>CFBundleIdentifier</key>CFBundleIdentifier7,247
		<key>CFBundleInfoDictionaryVersion</key>CFBundleInfoDictionaryVersion9,328
		<key>CFBundlePackageType</key>CFBundlePackageType11,394
		<key>CFBundleSignature</key>CFBundleSignature13,451
		<key>CFBundleShortVersionString</key>CFBundleShortVersionString15,506
		<key>CFBundleVersion</key>CFBundleVersion17,569

unittest/mssql.h,29
#define MSSQL_HMSSQL_H2,16

unittest/times.png,0

unittest/timer.h,29
#define TIMERH_TIMERH_4,77

unittest/lengths.png,0

unittest/test_mssql.cpp,8476
struct ms_server_info_t {ms_server_info_t28,597
    const char* host = "devdb5";host29,623
    const char* port = "1433";port31,693
    const char* user = "chatscript_user";user32,724
    const char* password = "h0s3i1F";password34,805
    const char* database = "chatscript";database35,843
unsigned int userCacheSize = 10000;userCacheSize43,990
int gzip;gzip46,1077
static void randomize_data(char* write_text, size_t write_len, int seed) {randomize_data48,1088
    int id = mssql_init_db_struct(User);id64,1503
    int id = mssql_init_db_struct(User);id75,1668
    bool verbose = false;verbose78,1732
    int rv1 = mssql_set_verbose(id, verbose);rv179,1758
    ms_server_info_t ms;ms82,1828
    int rv = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv83,1853
    char expected_in_str[200];expected_in_str86,1958
    const char* actual_in_str = get_mssql_in_conn_str();actual_in_str91,2179
    int id = mssql_init_db_struct(User);id101,2394
    ms_server_info_t ms;ms104,2458
    int rv0 = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv0105,2483
    const char* write_text_0 = "Bruce will never read this.";write_text_0108,2590
    size_t write_len_0 = strlen(write_text_0);write_len_0109,2652
    const char* key = "brillig";key110,2699
    const char* write_text_1 = "Sue will never read this.";write_text_1114,2820
    size_t write_len_1 = strlen(write_text_1);write_len_1115,2880
    int rv1 = mssql_file_write(id, write_text_1, write_len_1, key);rv1116,2927
    const char* empty_text = "";empty_text120,3035
    size_t empty_len = strlen(empty_text) + 1;empty_len121,3068
    int rv2 = mssql_file_write(id, empty_text, empty_len, key);rv2122,3115
    int id = mssql_init_db_struct(Script);id132,3305
    bool verbose_flag = false;verbose_flag135,3371
    int rv1 = mssql_set_verbose(id, verbose_flag);rv1136,3402
    ms_server_info_t ms;ms139,3477
    int rv0 = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv0140,3502
    int num_times = 3;num_times143,3609
    const char* key = "brillig";key144,3632
    for (int i = 1; i <= num_times; ++i) {i145,3665
        char write_buf[5000];write_buf146,3708
        size_t write_len = sizeof(write_buf) - 1000 + (i * 50) + (rand() % 100);write_len147,3738
        int rv_write = mssql_file_write(id, write_buf, write_len, key);rv_write150,3996
        char read_buf[5000];read_buf153,4101
        size_t read_len = sizeof(read_buf);read_len154,4130
        int rv_read = mssql_file_read(id, read_buf, &read_len, key);rv_read155,4174
    const char* empty_text = "";empty_text162,4399
    size_t empty_len = strlen(empty_text) + 1;empty_len163,4432
    int rv_write = mssql_file_write(id, empty_text, empty_len, key);rv_write164,4479
    bool skip_test = true;skip_test174,4693
    int id = mssql_init_db_struct(User);id179,4764
    ms_server_info_t ms;ms182,4828
    int rv0 = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv0183,4853
    bool verbose_flag = false;verbose_flag186,4960
    int rv1 = mssql_set_verbose(id, verbose_flag);rv1187,4991
    char write_buf[5000];write_buf190,5066
    size_t write_len = sizeof(write_buf);write_len191,5092
    long long dt_write_us, dt_read_us;dt_write_us195,5219
    long long dt_write_us, dt_read_us;dt_read_us195,5219
    long long dt_sum_us = 0;dt_sum_us196,5258
    FILE* f = NULL;f198,5288
    const char* filename = "timed_data.csv";filename199,5308
    int err = fopen_s(&f, filename, "w");err203,5405
    int num_times = 10;num_times208,5502
    const char* key = "brillig";key210,5604
    for (int i = 0; i < num_times; ++i) {i211,5637
        char read_buf[5010];read_buf213,5770
        size_t read_len = sizeof(read_buf);read_len214,5799
        int read_rv = mssql_file_read(id, read_buf, &read_len, key);read_rv217,5867
        int write_rv = mssql_file_write(id, write_buf, write_len, key);write_rv222,6029
    double dt_ms = (double)dt_sum_us / (num_times * 1000.);dt_ms228,6286
    const char* empty_text = "";empty_text233,6446
    size_t empty_len = strlen(empty_text) + 1;empty_len234,6479
    int rv_write = mssql_file_write(id, empty_text, empty_len, key);rv_write235,6526
    int id = mssql_init_db_struct(User);id250,6847
    ms_server_info_t ms;ms253,6911
    int rv0 = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv0254,6936
    const char* key = "brillig";key257,7043
    char read_buf[10000];read_buf259,7077
    size_t read_len = sizeof(read_buf);read_len260,7103
    int rv_read = mssql_file_read(id, read_buf, &read_len, key);rv_read261,7143
    int id = mssql_init_db_struct(User);id272,7380
    ms_server_info_t ms;ms275,7444
    int rv0 = mssql_init(id, ms.host, ms.port, ms.user, ms.password, ms.database);rv0276,7469
    const char* key = "fessik";key279,7576
    char read_buf[10000];read_buf281,7609
    size_t read_len = sizeof(read_buf);read_len282,7635
    int rv_read = mssql_file_read(id, read_buf, &read_len, key);rv_read283,7675
    char c_buf[200];c_buf295,7921
    size_t c_size = sizeof(c_buf);c_size296,7942
    char p_buf[] = "This is a test";p_buf297,7977
    size_t p_size = sizeof(p_buf);p_size298,8014
    int rv_c = mssql_maybe_compress(c_buf, &c_size, p_buf, p_size);rv_c303,8099
    char c_buf[200];c_buf312,8339
    size_t c_size = sizeof(c_buf);c_size313,8360
    char p_buf[] = "This is a test";p_buf314,8395
    size_t p_size = sizeof(p_buf);p_size315,8432
    int rv_c = mssql_maybe_compress(c_buf, &c_size, p_buf, p_size);rv_c320,8517
    for (int g=0; g <= 1; ++g) {g329,8752
        char c_buf[200];c_buf332,8804
        size_t c_size = sizeof(c_buf);c_size333,8829
        char p_buf[] = "This is a test";p_buf334,8868
        size_t p_size = sizeof(p_buf);p_size335,8909
        int rv_c = mssql_maybe_compress(c_buf, &c_size, p_buf, p_size);rv_c339,8984
        char rcv_buf[200];rcv_buf341,9057
        size_t rcv_size = sizeof(rcv_buf);rcv_size342,9084
        int rv_r = mssql_maybe_uncompress(c_buf, c_size, rcv_buf, &rcv_size);rv_r345,9166
    for (int g=0; g <= 1; ++g) {g356,9460
        char c_buf[200];c_buf359,9512
        size_t c_size = 0;c_size360,9537
        char rcv_buf[200];rcv_buf361,9564
        size_t rcv_size = sizeof(rcv_buf);rcv_size362,9591
        int rv_r = mssql_maybe_uncompress(c_buf, c_size, rcv_buf, &rcv_size);rv_r364,9635
    for (int g=0; g <= 1; ++g) {g374,9882
        char c_buf[200];c_buf377,9934
        size_t c_size = sizeof(c_buf);c_size378,9959
        char rcv_buf[200];rcv_buf379,9998
        size_t rcv_size = sizeof(rcv_buf);rcv_size380,10025
        int rv_r = mssql_maybe_uncompress(nullptr, c_size, rcv_buf, &rcv_size);rv_r382,10069
    for (int g=0; g <= 1; ++g) {g391,10281
        char c_buf[200];c_buf394,10333
        size_t c_size = sizeof(c_buf);c_size395,10358
        char p_buf[] = "This is a test";p_buf396,10397
        size_t p_size = sizeof(p_buf);p_size397,10438
        int rv_c = mssql_maybe_compress(c_buf, &c_size, p_buf, p_size);rv_c400,10512
        char rcv_buf[200];rcv_buf402,10585
        size_t rcv_size = sizeof(rcv_buf);rcv_size403,10612
        int rv_r = mssql_maybe_uncompress(c_buf, c_size, rcv_buf, &rcv_size);rv_r408,10754
    for (int g=0; g <= 1; ++g) {g418,11003
        char c_buf[200];c_buf421,11055
        size_t c_size = sizeof(c_buf);c_size422,11080
        char p_buf[] = "This is a test";p_buf423,11119
        size_t p_size = sizeof(p_buf);p_size424,11160
        int rv_c = mssql_maybe_compress(c_buf, &c_size, p_buf, p_size);rv_c427,11234
        char rcv_buf[200];rcv_buf429,11307
        size_t rcv_size = sizeof(rcv_buf);rcv_size430,11334
        int rv_r = mssql_maybe_uncompress(c_buf, c_size, rcv_buf, &rcv_size);rv_r434,11473
    char* key1 = "bbb";key1443,11674
    struct ms_server_info_t ms;ms444,11698
    char* dummy_data = "12345";dummy_data447,11808
    size_t dummy_size = strlen(dummy_data) + 1;dummy_size448,11840
    int rv_w, rv_r;rv_w449,11888
    int rv_w, rv_r;rv_r449,11888
    char read_buf[100];read_buf453,12014
    size_t read_len = sizeof(read_buf);read_len454,12038
    char* empty_data = "";empty_data461,12291
    size_t empty_size = strlen(empty_data) + 1;empty_size462,12318

unittest/BINARIES/imp.pdb,0

unittest/imp_test,0

unittest/CMakeCache.txt,0

unittest/labels.png,0

unittest/test_zif.cpp,1960
    char cbuf[500];cbuf6,102
    const char* ubuf = "This is a test";ubuf7,122
    struct zif_t zs;zs8,163
    int rv = zif_compress(&zs);rv14,341
    const char* err = zif_error();err18,451
    char cbuf[2];cbuf23,569
    const char* in_buf = "This is a test";in_buf24,587
    struct zif_t zs;zs25,630
    int rv = zif_compress(&zs);rv31,812
    const char* err = zif_error();err34,869
    struct zif_t* zs = nullptr;zs39,982
    int rv = zif_compress(zs);rv40,1014
    const char* err = zif_error();err43,1070
    char cbuf[500];cbuf48,1181
    const char* in_buf = "This is a test of a long line";in_buf49,1201
    struct zif_t zs_c;zs_c50,1259
    int rv_c = zif_compress(&zs_c);rv_c56,1473
    char ubuf[500];ubuf60,1591
    struct zif_t zs_u;zs_u61,1611
    int rv_u = zif_uncompress(&zs_u);rv_u67,1810
    const char* err = zif_error();err72,2009
    char cbuf[500];cbuf77,2129
    const char* in_buf = "This is a test of a long line";in_buf78,2149
    struct zif_t zs_c;zs_c79,2207
    int rv_c = zif_compress(&zs_c);rv_c85,2418
    char ubuf[5];ubuf89,2536
    struct zif_t zs_u;zs_u90,2554
    int rv_u = zif_uncompress(&zs_u);rv_u96,2753
    const char* err = zif_error();err99,2818
    struct zif_t* zs = nullptr;zs104,2933
    int rv = zif_uncompress(zs);rv105,2965
    const char* err = zif_error();err108,3023
    char cbuf[500];cbuf113,3139
    const char* in_buf = "This is a test of a long line";in_buf114,3159
    struct zif_t zs_c;zs_c115,3217
    int rv_c = zif_compress(&zs_c);rv_c121,3424
    char ubuf[500];ubuf125,3542
    struct zif_t zs_u;zs_u126,3562
    int rv_u = zif_uncompress(&zs_u);rv_u132,3778
    const char* err = zif_error();err138,3958
    char cbuf[500];cbuf143,4067
    char ubuf[500];ubuf144,4087
    struct zif_t zs_u;zs_u145,4107
    int rv_u = zif_uncompress(&zs_u);rv_u151,4284
    const char* err = zif_error();err154,4349

unittest/catch2.h,57058
#define TWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDEDTWOBLUECUBES_SINGLE_INCLUDE_CATCH_HPP_INCLUDED12,490
#define CATCH_VERSION_MAJOR 2CATCH_VERSION_MAJOR16,566
#define CATCH_VERSION_MINOR 13CATCH_VERSION_MINOR17,596
#define CATCH_VERSION_PATCH 2CATCH_VERSION_PATCH18,627
#  define CATCH_IMPLCATCH_IMPL50,1715
#  define CATCH_CONFIG_ALL_PARTSCATCH_CONFIG_ALL_PARTS51,1736
#  define CATCH_CONFIG_EXTERNAL_INTERFACESCATCH_CONFIG_EXTERNAL_INTERFACES57,1928
#    define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKERCATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER62,2121
#  define CATCH_PLATFORM_MACCATCH_PLATFORM_MAC72,2327
#  define CATCH_PLATFORM_IPHONECATCH_PLATFORM_IPHONE74,2385
#  define CATCH_PLATFORM_LINUXCATCH_PLATFORM_LINUX78,2489
#  define CATCH_PLATFORM_WINDOWSCATCH_PLATFORM_WINDOWS81,2628
#    define CLARA_CONFIG_MAIN_NOT_DEFINEDCLARA_CONFIG_MAIN_NOT_DEFINED88,2740
#    define CLARA_CONFIG_MAINCLARA_CONFIG_MAIN89,2782
#    define CATCH_CPP14_OR_GREATERCATCH_CPP14_OR_GREATER126,3883
#    define CATCH_CPP17_OR_GREATERCATCH_CPP17_OR_GREATER130,4009
#    define CATCH_INTERNAL_START_WARNINGS_SUPPRESSION _Pragma( "GCC diagnostic push" )CATCH_INTERNAL_START_WARNINGS_SUPPRESSION138,4272
#    define CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION  _Pragma( "GCC diagnostic pop" )CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION139,4359
#    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__)CATCH_INTERNAL_IGNORE_BUT_WARN141,4446
#    define CATCH_INTERNAL_START_WARNINGS_SUPPRESSION _Pragma( "clang diagnostic push" )CATCH_INTERNAL_START_WARNINGS_SUPPRESSION147,4567
#    define CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION  _Pragma( "clang diagnostic pop" )CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION148,4656
#    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINCATCH_INTERNAL_IGNORE_BUT_WARN162,5297
#    define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS \CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS165,5457
#    define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS \CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS169,5662
#    define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS \CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS172,5787
#    define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS \CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS175,5911
#    define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS \CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS178,6060
    #define CATCH_INTERNAL_CONFIG_POSIX_SIGNALSCATCH_INTERNAL_CONFIG_POSIX_SIGNALS186,6402
    #define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALSCATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS192,6695
#       define CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALSCATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS196,6771
#       define CATCH_CONFIG_COLOUR_NONECATCH_CONFIG_COLOUR_NONE197,6825
#    define CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRINGCATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING203,7036
#    define CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITECATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE204,7089
#    define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEHCATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH210,7307
#    define CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURECATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE216,7475
#   define _BSD_SOURCE_BSD_SOURCE225,7805
#    define CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRINGCATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING231,8127
#  define CATCH_INTERNAL_START_WARNINGS_SUPPRESSION __pragma( warning(push) )CATCH_INTERNAL_START_WARNINGS_SUPPRESSION240,8329
#  define CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION  __pragma( warning(pop) )CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION241,8407
#    define CATCH_CONFIG_COLOUR_NONECATCH_CONFIG_COLOUR_NONE246,8650
#    define CATCH_INTERNAL_CONFIG_WINDOWS_SEHCATCH_INTERNAL_CONFIG_WINDOWS_SEH248,8695
#      define CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSORCATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR256,9111
# define CATCH_INTERNAL_CONFIG_USE_ASYNCCATCH_INTERNAL_CONFIG_USE_ASYNC264,9386
#  define CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLEDCATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED270,9669
#  define CATCH_INTERNAL_CONFIG_NO_WCHARCATCH_INTERNAL_CONFIG_NO_WCHAR276,9835
    #define CATCH_INTERNAL_CONFIG_POLYFILL_ISNANCATCH_INTERNAL_CONFIG_POLYFILL_ISNAN282,10028
    #define CATCH_INTERNAL_CONFIG_COUNTERCATCH_INTERNAL_CONFIG_COUNTER293,10493
    #define CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEHCATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH302,10852
    #define CATCH_INTERNAL_CONFIG_NO_ASYNCCATCH_INTERNAL_CONFIG_NO_ASYNC303,10901
    #define CATCH_CONFIG_COLOUR_NONECATCH_CONFIG_COLOUR_NONE304,10944
#define CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTERCATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER308,11029
  #    define CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEWCATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW315,11291
  #    define CATCH_INTERNAL_CONFIG_CPP17_OPTIONALCATCH_INTERNAL_CONFIG_CPP17_OPTIONAL320,11471
  #      define CATCH_INTERNAL_CONFIG_CPP17_BYTECATCH_INTERNAL_CONFIG_CPP17_BYTE327,11763
  #        define CATCH_CONFIG_NO_CPP17_VARIANTCATCH_CONFIG_NO_CPP17_VARIANT338,12342
  #        define CATCH_INTERNAL_CONFIG_CPP17_VARIANTCATCH_INTERNAL_CONFIG_CPP17_VARIANT340,12404
  #      define CATCH_INTERNAL_CONFIG_CPP17_VARIANTCATCH_INTERNAL_CONFIG_CPP17_VARIANT343,12564
#   define CATCH_CONFIG_COUNTERCATCH_CONFIG_COUNTER349,12898
#   define CATCH_CONFIG_WINDOWS_SEHCATCH_CONFIG_WINDOWS_SEH352,13113
#   define CATCH_CONFIG_POSIX_SIGNALSCATCH_CONFIG_POSIX_SIGNALS356,13445
#   define CATCH_CONFIG_WCHARCATCH_CONFIG_WCHAR360,13712
#    define CATCH_CONFIG_CPP11_TO_STRINGCATCH_CONFIG_CPP11_TO_STRING364,13892
#  define CATCH_CONFIG_CPP17_OPTIONALCATCH_CONFIG_CPP17_OPTIONAL368,14076
#  define CATCH_CONFIG_CPP17_STRING_VIEWCATCH_CONFIG_CPP17_STRING_VIEW372,14266
#  define CATCH_CONFIG_CPP17_VARIANTCATCH_CONFIG_CPP17_VARIANT376,14447
#  define CATCH_CONFIG_CPP17_BYTECATCH_CONFIG_CPP17_BYTE380,14615
#  define CATCH_INTERNAL_CONFIG_NEW_CAPTURECATCH_INTERNAL_CONFIG_NEW_CAPTURE384,14705
#  define CATCH_CONFIG_NEW_CAPTURECATCH_CONFIG_NEW_CAPTURE388,14933
#  define CATCH_CONFIG_DISABLE_EXCEPTIONSCATCH_CONFIG_DISABLE_EXCEPTIONS392,15076
#  define CATCH_CONFIG_POLYFILL_ISNANCATCH_CONFIG_POLYFILL_ISNAN396,15261
#  define CATCH_CONFIG_USE_ASYNCCATCH_CONFIG_USE_ASYNC400,15472
#  define CATCH_CONFIG_ANDROID_LOGWRITECATCH_CONFIG_ANDROID_LOGWRITE404,15654
#  define CATCH_CONFIG_GLOBAL_NEXTAFTERCATCH_CONFIG_GLOBAL_NEXTAFTER408,15843
#   define CATCH_INTERNAL_START_WARNINGS_SUPPRESSIONCATCH_INTERNAL_START_WARNINGS_SUPPRESSION414,16071
#   define CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSIONCATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION417,16186
#   define CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGSCATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS420,16304
#   define CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGSCATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS423,16422
#   define CATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGSCATCH_INTERNAL_SUPPRESS_UNUSED_WARNINGS426,16535
#   define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGSCATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS429,16654
#   define CATCH_INTERNAL_IGNORE_BUT_WARN(...)CATCH_INTERNAL_IGNORE_BUT_WARN435,16890
#   define CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGSCATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS445,17269
#define CATCH_TRY if ((true))CATCH_TRY449,17382
#define CATCH_CATCH_ALL if ((false))CATCH_CATCH_ALL450,17412
#define CATCH_CATCH_ANON(type) if ((false))CATCH_CATCH_ANON451,17449
#define CATCH_TRY tryCATCH_TRY453,17499
#define CATCH_CATCH_ALL catch (...)CATCH_CATCH_ALL454,17521
#define CATCH_CATCH_ANON(type) catch (type)CATCH_CATCH_ANON455,17557
#define CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSORCATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR459,17789
#define INTERNAL_CATCH_UNIQUE_NAME_LINE2( name, line ) name##lineINTERNAL_CATCH_UNIQUE_NAME_LINE2463,17885
#define INTERNAL_CATCH_UNIQUE_NAME_LINE( name, line ) INTERNAL_CATCH_UNIQUE_NAME_LINE2( name, liINTERNAL_CATCH_UNIQUE_NAME_LINE464,17951
#  define INTERNAL_CATCH_UNIQUE_NAME( name ) INTERNAL_CATCH_UNIQUE_NAME_LINE( name, __COUNTER__ INTERNAL_CATCH_UNIQUE_NAME466,18080
#  define INTERNAL_CATCH_UNIQUE_NAME( name ) INTERNAL_CATCH_UNIQUE_NAME_LINE( name, __LINE__ )INTERNAL_CATCH_UNIQUE_NAME468,18184
struct Catch_global_namespace_dummy {};Catch_global_namespace_dummy476,18426
std::ostream& operator<<(std::ostream&, Catch_global_namespace_dummy);operator477,18466
#define CATCH_INTERNAL_LINEINFO \CATCH_INTERNAL_LINEINFO538,20381
#define CATCH_REGISTER_TAG_ALIAS( alias, spec ) \CATCH_REGISTER_TAG_ALIAS550,20707
constexpr auto operator "" _catch_sr( char const* rawChars, std::size_t size ) noexcept -> Catch_catch_sr680,24992
#define CATCH_RECURSION_LEVEL0(...) __VA_ARGS__CATCH_RECURSION_LEVEL0688,25211
#define CATCH_RECURSION_LEVEL1(...) CATCH_RECURSION_LEVEL0(CATCH_RECURSION_LEVEL0(CATCH_RECURSIOCATCH_RECURSION_LEVEL1689,25259
#define CATCH_RECURSION_LEVEL2(...) CATCH_RECURSION_LEVEL1(CATCH_RECURSION_LEVEL1(CATCH_RECURSIOCATCH_RECURSION_LEVEL2690,25379
#define CATCH_RECURSION_LEVEL3(...) CATCH_RECURSION_LEVEL2(CATCH_RECURSION_LEVEL2(CATCH_RECURSIOCATCH_RECURSION_LEVEL3691,25499
#define CATCH_RECURSION_LEVEL4(...) CATCH_RECURSION_LEVEL3(CATCH_RECURSION_LEVEL3(CATCH_RECURSIOCATCH_RECURSION_LEVEL4692,25619
#define CATCH_RECURSION_LEVEL5(...) CATCH_RECURSION_LEVEL4(CATCH_RECURSION_LEVEL4(CATCH_RECURSIOCATCH_RECURSION_LEVEL5693,25739
#define INTERNAL_CATCH_EXPAND_VARGS(...) __VA_ARGS__INTERNAL_CATCH_EXPAND_VARGS696,25910
#define CATCH_RECURSION_LEVEL6(...) CATCH_RECURSION_LEVEL5(CATCH_RECURSION_LEVEL5(CATCH_RECURSIOCATCH_RECURSION_LEVEL6698,25994
#define CATCH_RECURSE(...)  CATCH_RECURSION_LEVEL6(CATCH_RECURSION_LEVEL6(__VA_ARGS__))CATCH_RECURSE699,26114
#define CATCH_RECURSE(...)  CATCH_RECURSION_LEVEL5(__VA_ARGS__)CATCH_RECURSE701,26208
#define CATCH_REC_END(...)CATCH_REC_END704,26280
#define CATCH_REC_OUTCATCH_REC_OUT705,26307
#define CATCH_EMPTY()CATCH_EMPTY707,26330
#define CATCH_DEFER(id) id CATCH_EMPTY()CATCH_DEFER708,26352
#define CATCH_REC_GET_END2() 0, CATCH_REC_ENDCATCH_REC_GET_END2710,26394
#define CATCH_REC_GET_END1(...) CATCH_REC_GET_END2CATCH_REC_GET_END1711,26440
#define CATCH_REC_GET_END(...) CATCH_REC_GET_END1CATCH_REC_GET_END712,26491
#define CATCH_REC_NEXT0(test, next, ...) next CATCH_REC_OUTCATCH_REC_NEXT0713,26541
#define CATCH_REC_NEXT1(test, next) CATCH_DEFER ( CATCH_REC_NEXT0 ) ( test, next, 0)CATCH_REC_NEXT1714,26601
#define CATCH_REC_NEXT(test, next)  CATCH_REC_NEXT1(CATCH_REC_GET_END test, next)CATCH_REC_NEXT715,26686
#define CATCH_REC_LIST0(f, x, peek, ...) , f(x) CATCH_DEFER ( CATCH_REC_NEXT(peek, CATCH_REC_LISCATCH_REC_LIST0717,26769
#define CATCH_REC_LIST1(f, x, peek, ...) , f(x) CATCH_DEFER ( CATCH_REC_NEXT(peek, CATCH_REC_LISCATCH_REC_LIST1718,26896
#define CATCH_REC_LIST2(f, x, peek, ...)   f(x) CATCH_DEFER ( CATCH_REC_NEXT(peek, CATCH_REC_LISCATCH_REC_LIST2719,27023
#define CATCH_REC_LIST0_UD(f, userdata, x, peek, ...) , f(userdata, x) CATCH_DEFER ( CATCH_REC_NCATCH_REC_LIST0_UD721,27151
#define CATCH_REC_LIST1_UD(f, userdata, x, peek, ...) , f(userdata, x) CATCH_DEFER ( CATCH_REC_NCATCH_REC_LIST1_UD722,27314
#define CATCH_REC_LIST2_UD(f, userdata, x, peek, ...)   f(userdata, x) CATCH_DEFER ( CATCH_REC_NCATCH_REC_LIST2_UD723,27477
#define CATCH_REC_LIST_UD(f, userdata, ...) CATCH_RECURSE(CATCH_REC_LIST2_UD(f, userdata, __VA_ACATCH_REC_LIST_UD728,27894
#define CATCH_REC_LIST(f, ...) CATCH_RECURSE(CATCH_REC_LIST2(f, __VA_ARGS__, ()()(), ()()(), ()(CATCH_REC_LIST730,28026
#define INTERNAL_CATCH_EXPAND1(param) INTERNAL_CATCH_EXPAND2(param)INTERNAL_CATCH_EXPAND1732,28132
#define INTERNAL_CATCH_EXPAND2(...) INTERNAL_CATCH_NO## __VA_ARGS__INTERNAL_CATCH_EXPAND2733,28200
#define INTERNAL_CATCH_DEF(...) INTERNAL_CATCH_DEF __VA_ARGS__INTERNAL_CATCH_DEF734,28268
#define INTERNAL_CATCH_NOINTERNAL_CATCH_DEFINTERNAL_CATCH_NOINTERNAL_CATCH_DEF735,28331
#define INTERNAL_CATCH_STRINGIZE(...) INTERNAL_CATCH_STRINGIZE2(__VA_ARGS__)INTERNAL_CATCH_STRINGIZE736,28375
#define INTERNAL_CATCH_STRINGIZE2(...) #__VA_ARGS__INTERNAL_CATCH_STRINGIZE2738,28503
#define INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS(param) INTERNAL_CATCH_STRINGIZE(INTERNAL_CATCH_RINTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS739,28555
#define INTERNAL_CATCH_STRINGIZE2(...) INTERNAL_CATCH_STRINGIZE3(__VA_ARGS__)INTERNAL_CATCH_STRINGIZE2742,28784
#define INTERNAL_CATCH_STRINGIZE3(...) #__VA_ARGS__INTERNAL_CATCH_STRINGIZE3743,28862
#define INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS(param) (INTERNAL_CATCH_STRINGIZE(INTERNAL_CATCH_INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS744,28914
#define INTERNAL_CATCH_MAKE_NAMESPACE2(...) ns_##__VA_ARGS__INTERNAL_CATCH_MAKE_NAMESPACE2747,29045
#define INTERNAL_CATCH_MAKE_NAMESPACE(name) INTERNAL_CATCH_MAKE_NAMESPACE2(name)INTERNAL_CATCH_MAKE_NAMESPACE748,29106
#define INTERNAL_CATCH_REMOVE_PARENS(...) INTERNAL_CATCH_EXPAND1(INTERNAL_CATCH_DEF __VA_ARGS__)INTERNAL_CATCH_REMOVE_PARENS750,29188
#define INTERNAL_CATCH_MAKE_TYPE_LIST2(...) decltype(get_wrapper<INTERNAL_CATCH_REMOVE_PARENS_GEINTERNAL_CATCH_MAKE_TYPE_LIST2753,29337
#define INTERNAL_CATCH_MAKE_TYPE_LIST(...) INTERNAL_CATCH_MAKE_TYPE_LIST2(INTERNAL_CATCH_REMOVE_INTERNAL_CATCH_MAKE_TYPE_LIST754,29452
#define INTERNAL_CATCH_MAKE_TYPE_LIST2(...) INTERNAL_CATCH_EXPAND_VARGS(decltype(get_wrapper<INTINTERNAL_CATCH_MAKE_TYPE_LIST2756,29575
#define INTERNAL_CATCH_MAKE_TYPE_LIST(...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCH_MAKE_TYPE_INTERNAL_CATCH_MAKE_TYPE_LIST757,29719
#define INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES(...)\INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES760,29873
#define INTERNAL_CATCH_REMOVE_PARENS_1_ARG(_0) INTERNAL_CATCH_REMOVE_PARENS(_0)INTERNAL_CATCH_REMOVE_PARENS_1_ARG763,29992
#define INTERNAL_CATCH_REMOVE_PARENS_2_ARG(_0, _1) INTERNAL_CATCH_REMOVE_PARENS(_0), INTERNAL_CAINTERNAL_CATCH_REMOVE_PARENS_2_ARG764,30072
#define INTERNAL_CATCH_REMOVE_PARENS_3_ARG(_0, _1, _2) INTERNAL_CATCH_REMOVE_PARENS(_0), INTERNAINTERNAL_CATCH_REMOVE_PARENS_3_ARG765,30196
#define INTERNAL_CATCH_REMOVE_PARENS_4_ARG(_0, _1, _2, _3) INTERNAL_CATCH_REMOVE_PARENS(_0), INTINTERNAL_CATCH_REMOVE_PARENS_4_ARG766,30328
#define INTERNAL_CATCH_REMOVE_PARENS_5_ARG(_0, _1, _2, _3, _4) INTERNAL_CATCH_REMOVE_PARENS(_0),INTERNAL_CATCH_REMOVE_PARENS_5_ARG767,30468
#define INTERNAL_CATCH_REMOVE_PARENS_6_ARG(_0, _1, _2, _3, _4, _5) INTERNAL_CATCH_REMOVE_PARENS(INTERNAL_CATCH_REMOVE_PARENS_6_ARG768,30616
#define INTERNAL_CATCH_REMOVE_PARENS_7_ARG(_0, _1, _2, _3, _4, _5, _6) INTERNAL_CATCH_REMOVE_PARINTERNAL_CATCH_REMOVE_PARENS_7_ARG769,30772
#define INTERNAL_CATCH_REMOVE_PARENS_8_ARG(_0, _1, _2, _3, _4, _5, _6, _7) INTERNAL_CATCH_REMOVEINTERNAL_CATCH_REMOVE_PARENS_8_ARG770,30936
#define INTERNAL_CATCH_REMOVE_PARENS_9_ARG(_0, _1, _2, _3, _4, _5, _6, _7, _8) INTERNAL_CATCH_REINTERNAL_CATCH_REMOVE_PARENS_9_ARG771,31108
#define INTERNAL_CATCH_REMOVE_PARENS_10_ARG(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9) INTERNAL_CATINTERNAL_CATCH_REMOVE_PARENS_10_ARG772,31288
#define INTERNAL_CATCH_REMOVE_PARENS_11_ARG(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10) INTERNAINTERNAL_CATCH_REMOVE_PARENS_11_ARG773,31477
#define INTERNAL_CATCH_VA_NARGS_IMPL(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, N, ...) NINTERNAL_CATCH_VA_NARGS_IMPL775,31678
#define INTERNAL_CATCH_TYPE_GEN\INTERNAL_CATCH_TYPE_GEN777,31771
#define INTERNAL_CATCH_NTTP_1(signature, ...)\INTERNAL_CATCH_NTTP_1810,33974
#define INTERNAL_CATCH_DECLARE_SIG_TEST0(TestName)INTERNAL_CATCH_DECLARE_SIG_TEST0825,35586
#define INTERNAL_CATCH_DECLARE_SIG_TEST1(TestName, signature)\INTERNAL_CATCH_DECLARE_SIG_TEST1826,35637
#define INTERNAL_CATCH_DECLARE_SIG_TEST_X(TestName, signature, ...)\INTERNAL_CATCH_DECLARE_SIG_TEST_X829,35782
#define INTERNAL_CATCH_DEFINE_SIG_TEST0(TestName)INTERNAL_CATCH_DEFINE_SIG_TEST0833,35934
#define INTERNAL_CATCH_DEFINE_SIG_TEST1(TestName, signature)\INTERNAL_CATCH_DEFINE_SIG_TEST1834,35984
#define INTERNAL_CATCH_DEFINE_SIG_TEST_X(TestName, signature,...)\INTERNAL_CATCH_DEFINE_SIG_TEST_X837,36128
#define INTERNAL_CATCH_NTTP_REGISTER0(TestFunc, signature)\INTERNAL_CATCH_NTTP_REGISTER0841,36278
#define INTERNAL_CATCH_NTTP_REGISTER(TestFunc, signature, ...)\INTERNAL_CATCH_NTTP_REGISTER848,36573
#define INTERNAL_CATCH_NTTP_REGISTER_METHOD0(TestName, signature, ...)\INTERNAL_CATCH_NTTP_REGISTER_METHOD0855,36908
#define INTERNAL_CATCH_NTTP_REGISTER_METHOD(TestName, signature, ...)\INTERNAL_CATCH_NTTP_REGISTER_METHOD862,37240
#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0(TestName, ClassName)INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0869,37607
#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1(TestName, ClassName, signature)\INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1870,37676
#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X(TestName, ClassName, signature, ...)\INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X876,37896
#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0(TestName)INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0882,38147
#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1(TestName, signature)\INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1883,38204
#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X(TestName, signature, ...)\INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X886,38384
#define INTERNAL_CATCH_NTTP_0INTERNAL_CATCH_NTTP_0891,38647
#define INTERNAL_CATCH_NTTP_GEN(...) INTERNAL_CATCH_VA_NARGS_IMPL(__VA_ARGS__, INTERNAL_CATCH_NTINTERNAL_CATCH_NTTP_GEN892,38677
#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD(TestName, ...) INTERNAL_CATCH_VA_NARGS_IMPL( "dummINTERNAL_CATCH_DEFINE_SIG_TEST_METHOD893,39143
#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(TestName, ClassName, ...) INTERNAL_CATCH_VA_NARGSINTERNAL_CATCH_DECLARE_SIG_TEST_METHOD894,39725
#define INTERNAL_CATCH_NTTP_REG_METHOD_GEN(TestName, ...) INTERNAL_CATCH_VA_NARGS_IMPL( "dummy",INTERNAL_CATCH_NTTP_REG_METHOD_GEN895,40341
#define INTERNAL_CATCH_NTTP_REG_GEN(TestFunc, ...) INTERNAL_CATCH_VA_NARGS_IMPL( "dummy", __VA_AINTERNAL_CATCH_NTTP_REG_GEN896,40883
#define INTERNAL_CATCH_DEFINE_SIG_TEST(TestName, ...) INTERNAL_CATCH_VA_NARGS_IMPL( "dummy", __VINTERNAL_CATCH_DEFINE_SIG_TEST897,41341
#define INTERNAL_CATCH_DECLARE_SIG_TEST(TestName, ...) INTERNAL_CATCH_VA_NARGS_IMPL( "dummy", __INTERNAL_CATCH_DECLARE_SIG_TEST898,41840
#define INTERNAL_CATCH_REMOVE_PARENS_GEN(...) INTERNAL_CATCH_VA_NARGS_IMPL(__VA_ARGS__, INTERNALINTERNAL_CATCH_REMOVE_PARENS_GEN899,42349
#define INTERNAL_CATCH_NTTP_0(signature)INTERNAL_CATCH_NTTP_0901,42844
#define INTERNAL_CATCH_NTTP_GEN(...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCH_VA_NARGS_IMPL(__INTERNAL_CATCH_NTTP_GEN902,42885
#define INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD(TestName, ...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAINTERNAL_CATCH_DEFINE_SIG_TEST_METHOD903,43259
#define INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD(TestName, ClassName, ...) INTERNAL_CATCH_EXPAND_VINTERNAL_CATCH_DECLARE_SIG_TEST_METHOD904,43870
#define INTERNAL_CATCH_NTTP_REG_METHOD_GEN(TestName, ...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CINTERNAL_CATCH_NTTP_REG_METHOD_GEN905,44515
#define INTERNAL_CATCH_NTTP_REG_GEN(TestFunc, ...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCH_VAINTERNAL_CATCH_NTTP_REG_GEN906,45086
#define INTERNAL_CATCH_DEFINE_SIG_TEST(TestName, ...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCHINTERNAL_CATCH_DEFINE_SIG_TEST907,45573
#define INTERNAL_CATCH_DECLARE_SIG_TEST(TestName, ...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCINTERNAL_CATCH_DECLARE_SIG_TEST908,46101
#define INTERNAL_CATCH_REMOVE_PARENS_GEN(...) INTERNAL_CATCH_EXPAND_VARGS(INTERNAL_CATCH_VA_NARGINTERNAL_CATCH_REMOVE_PARENS_GEN909,46639
    #define INTERNAL_CATCH_TESTCASE_NO_REGISTRATION( TestName, ... ) \INTERNAL_CATCH_TESTCASE_NO_REGISTRATION989,49524
    #define INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION( TestName, ClassName, ... ) \INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION991,49626
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2( TestName, TestFunc, Name, Tags,INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2998,49995
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2( TestNameClass, TestName,INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_21000,50202
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(Name, Tags, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION1009,51021
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(Name, Tags, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION1012,51395
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(Name, Tags, Signature, ...INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION1017,51857
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(Name, Tags, Signature, ...INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION1020,52238
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION( ClassName, Name, Tags,INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION1025,52707
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION( ClassName, Name, Tags,INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION1028,53114
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION( ClassName, Name, TINTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION1033,53609
        #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION( ClassName, Name, TINTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION1036,54031
    #define INTERNAL_CATCH_TESTCASE2( TestName, ... ) \INTERNAL_CATCH_TESTCASE21042,54577
    #define INTERNAL_CATCH_TESTCASE( ... ) \INTERNAL_CATCH_TESTCASE1049,55067
    #define INTERNAL_CATCH_METHOD_AS_TEST_CASE( QualifiedMethod, ... ) \INTERNAL_CATCH_METHOD_AS_TEST_CASE1053,55305
    #define INTERNAL_CATCH_TEST_CASE_METHOD2( TestName, ClassName, ... )\INTERNAL_CATCH_TEST_CASE_METHOD21060,55839
    #define INTERNAL_CATCH_TEST_CASE_METHOD( ClassName, ... ) \INTERNAL_CATCH_TEST_CASE_METHOD1071,56457
    #define INTERNAL_CATCH_REGISTER_TESTCASE( Function, ... ) \INTERNAL_CATCH_REGISTER_TESTCASE1075,56733
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_2(TestName, TestFunc, Name, Tags, Signature, ... )INTERNAL_CATCH_TEMPLATE_TEST_CASE_21082,57235
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE(Name, Tags, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE1112,58882
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE(Name, Tags, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE1115,59212
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG(Name, Tags, Signature, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG1120,59626
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG(Name, Tags, Signature, ...) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG1123,59963
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2(TestName, TestFuncName, Name, Tags, SignaINTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE21127,60333
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE(Name, Tags, ...)\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE1161,63319
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE(Name, Tags, ...)\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE1164,63653
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(Name, Tags, Signature, ...)\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG1169,64074
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG(Name, Tags, Signature, ...)\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG1172,64423
    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2(TestName, TestFunc, Name, Tags, TmplList)\INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_21176,64807
    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE(Name, Tags, TmplList) \INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE1203,66593
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2( TestNameClass, TestName, ClassName, NameINTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_21206,66911
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD( ClassName, Name, Tags,... ) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD1236,68657
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD( ClassName, Name, Tags,... ) \INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD1239,69020
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( ClassName, Name, Tags, Signature, ... INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG1244,69467
    #define INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( ClassName, Name, Tags, Signature, ... INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG1247,69845
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2(TestNameClass, TestName, ClassNamINTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_21251,70256
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( ClassName, Name, Tags, ... )\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD1288,72575
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( ClassName, Name, Tags, ... )\INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD1291,72951
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( ClassName, Name, Tags, SignatuINTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG1296,73410
    #define INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( ClassName, Name, Tags, SignatuINTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG1299,73800
    #define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2( TestNameClass, TestName, ClassName,INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_21303,74222
#define INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD(ClassName, Name, Tags, TmplList) \INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD1333,75709
#define CATCH_ARC_ENABLED __has_feature(objc_arc)CATCH_ARC_ENABLED1501,80198
#define CATCH_ARC_ENABLED 0CATCH_ARC_ENABLED1503,80254
void arcSafeRelease( NSObject* obj );arcSafeRelease1506,80290
id performOptionalSelector( id obj, SEL sel );performOptionalSelector1507,80328
inline void arcSafeRelease( NSObject* obj ) {arcSafeRelease1510,80399
inline id performOptionalSelector( id obj, SEL sel ) {performOptionalSelector1513,80466
#define CATCH_UNSAFE_UNRETAINEDCATCH_UNSAFE_UNRETAINED1518,80622
#define CATCH_ARC_STRONGCATCH_ARC_STRONG1519,80654
inline void arcSafeRelease( NSObject* ){}arcSafeRelease1521,80685
inline id performOptionalSelector( id obj, SEL sel ) {performOptionalSelector1522,80727
#define CATCH_UNSAFE_UNRETAINED __unsafe_unretainedCATCH_UNSAFE_UNRETAINED1534,81053
#define CATCH_ARC_STRONG __strongCATCH_ARC_STRONG1535,81105
#  define CATCH_CONFIG_ENABLE_PAIR_STRINGMAKERCATCH_CONFIG_ENABLE_PAIR_STRINGMAKER1868,91087
#  define CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKERCATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER1869,91134
#  define CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKERCATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER1870,91182
#  define CATCH_CONFIG_ENABLE_CHRONO_STRINGMAKERCATCH_CONFIG_ENABLE_CHRONO_STRINGMAKER1871,91232
#  define CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKERCATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER1872,91281
#define CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTHCATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTH8420,316202
#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH CATCH_CONFIG_CONSOLE_WIDTH-1CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH8423,316346
#define CATCH_CLARA_CONFIG_CONSOLE_WIDTH 80CATCH_CLARA_CONFIG_CONSOLE_WIDTH8444,316992
#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH CATCH_CLARA_CONFIG_CONSOLE_WIDTHCATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH8448,317094
#define CLARA_CONFIG_OPTIONAL_TYPE std::optionalCLARA_CONFIG_OPTIONAL_TYPE8455,317317
#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH 80CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH8478,317903
#define CATCH_PLATFORM_WINDOWSCATCH_PLATFORM_WINDOWS8808,325849
#define CATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH CATCH_TEMP_CLARA_CONFIG_CONSOLE_WIDTHCATCH_CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH9694,357231
void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {testCaseEnded16452,586619
void ConsoleReporter::testGroupEnded(TestGroupStats const& _testGroupStats) {testGroupEnded16457,586812
void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {testRunEnded16466,587189
void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {testRunStarting16472,587429
void ConsoleReporter::lazyPrint() {lazyPrint16477,587581
void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {lazyPrintWithoutClosingBenchmarkTable16483,587695
void ConsoleReporter::lazyPrintRunInfo() {lazyPrintRunInfo16495,587994
void ConsoleReporter::lazyPrintGroupInfo() {lazyPrintGroupInfo16507,588437
void ConsoleReporter::printTestCaseAndSectionHeader() {printTestCaseAndSectionHeader16513,588672
void ConsoleReporter::printClosedHeader(std::string const& _name) {printClosedHeader16535,589359
void ConsoleReporter::printOpenHeader(std::string const& _name) {printOpenHeader16539,589502
void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {printHeaderString16549,589794
void ConsoleReporter::printTotals( Totals const& totals ) {printTotals16583,590731
void ConsoleReporter::printSummaryRow(std::string const& label, std::vector<SummaryColumn> constprintSummaryRow16612,592188
void ConsoleReporter::printTotalsDivider(Totals const& totals) {printTotalsDivider16630,592816
void ConsoleReporter::printSummaryDivider() {printSummaryDivider16651,594068
void ConsoleReporter::printTestFilters() {printTestFilters16655,594162
CATCH_REGISTER_REPORTER("console", ConsoleReporter)CATCH_REGISTER_REPORTER16662,594390
int main (int argc, char * argv[]) {main17389,622697
int main (int argc, char * const argv[]) {main17398,622838
#define CATCH_REQUIRE( ... ) INTERNAL_CATCH_TEST( "CATCH_REQUIRE", Catch::ResultDisposition::NorCATCH_REQUIRE17429,623473
#define CATCH_REQUIRE_FALSE( ... ) INTERNAL_CATCH_TEST( "CATCH_REQUIRE_FALSE", Catch::ResultDispCATCH_REQUIRE_FALSE17430,623588
#define CATCH_REQUIRE_THROWS( ... ) INTERNAL_CATCH_THROWS( "CATCH_REQUIRE_THROWS", Catch::ResultCATCH_REQUIRE_THROWS17432,623754
#define CATCH_REQUIRE_THROWS_AS( expr, exceptionType ) INTERNAL_CATCH_THROWS_AS( "CATCH_REQUIRE_CATCH_REQUIRE_THROWS_AS17433,623885
#define CATCH_REQUIRE_THROWS_WITH( expr, matcher ) INTERNAL_CATCH_THROWS_STR_MATCHES( "CATCH_REQCATCH_REQUIRE_THROWS_WITH17434,624049
#define CATCH_REQUIRE_THROWS_MATCHES( expr, exceptionType, matcher ) INTERNAL_CATCH_THROWS_MATCHCATCH_REQUIRE_THROWS_MATCHES17436,624258
#define CATCH_REQUIRE_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( "CATCH_REQUIRE_NOTHROW", Catch::ReCATCH_REQUIRE_NOTHROW17438,624494
#define CATCH_CHECK( ... ) INTERNAL_CATCH_TEST( "CATCH_CHECK", Catch::ResultDisposition::ContinuCATCH_CHECK17440,624630
#define CATCH_CHECK_FALSE( ... ) INTERNAL_CATCH_TEST( "CATCH_CHECK_FALSE", Catch::ResultDispositCATCH_CHECK_FALSE17441,624752
#define CATCH_CHECKED_IF( ... ) INTERNAL_CATCH_IF( "CATCH_CHECKED_IF", Catch::ResultDisposition:CATCH_CHECKED_IF17442,624924
#define CATCH_CHECKED_ELSE( ... ) INTERNAL_CATCH_ELSE( "CATCH_CHECKED_ELSE", Catch::ResultDisposCATCH_CHECKED_ELSE17443,625054
#define CATCH_CHECK_NOFAIL( ... ) INTERNAL_CATCH_TEST( "CATCH_CHECK_NOFAIL", Catch::ResultDisposCATCH_CHECK_NOFAIL17444,625190
#define CATCH_CHECK_THROWS( ... )  INTERNAL_CATCH_THROWS( "CATCH_CHECK_THROWS", Catch::ResultDisCATCH_CHECK_THROWS17446,625368
#define CATCH_CHECK_THROWS_AS( expr, exceptionType ) INTERNAL_CATCH_THROWS_AS( "CATCH_CHECK_THROCATCH_CHECK_THROWS_AS17447,625507
#define CATCH_CHECK_THROWS_WITH( expr, matcher ) INTERNAL_CATCH_THROWS_STR_MATCHES( "CATCH_CHECKCATCH_CHECK_THROWS_WITH17448,625678
#define CATCH_CHECK_THROWS_MATCHES( expr, exceptionType, matcher ) INTERNAL_CATCH_THROWS_MATCHESCATCH_CHECK_THROWS_MATCHES17450,625894
#define CATCH_CHECK_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( "CATCH_CHECK_NOTHROW", Catch::ResultCATCH_CHECK_NOTHROW17452,626138
#define CATCH_CHECK_THAT( arg, matcher ) INTERNAL_CHECK_THAT( "CATCH_CHECK_THAT", matcher, CatchCATCH_CHECK_THAT17455,626325
#define CATCH_REQUIRE_THAT( arg, matcher ) INTERNAL_CHECK_THAT( "CATCH_REQUIRE_THAT", matcher, CCATCH_REQUIRE_THAT17457,626468
#define CATCH_INFO( msg ) INTERNAL_CATCH_INFO( "CATCH_INFO", msg )CATCH_INFO17460,626644
#define CATCH_UNSCOPED_INFO( msg ) INTERNAL_CATCH_UNSCOPED_INFO( "CATCH_UNSCOPED_INFO", msg )CATCH_UNSCOPED_INFO17461,626711
#define CATCH_WARN( msg ) INTERNAL_CATCH_MSG( "CATCH_WARN", Catch::ResultWas::Warning, Catch::ReCATCH_WARN17462,626805
#define CATCH_CAPTURE( ... ) INTERNAL_CATCH_CAPTURE( INTERNAL_CATCH_UNIQUE_NAME(capturer), "CATCCATCH_CAPTURE17463,626943
#define CATCH_TEST_CASE( ... ) INTERNAL_CATCH_TESTCASE( __VA_ARGS__ )CATCH_TEST_CASE17465,627065
#define CATCH_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEST_CASE_METHOD( className, __VCATCH_TEST_CASE_METHOD17466,627135
#define CATCH_METHOD_AS_TEST_CASE( method, ... ) INTERNAL_CATCH_METHOD_AS_TEST_CASE( method, __VCATCH_METHOD_AS_TEST_CASE17467,627242
#define CATCH_REGISTER_TEST_CASE( Function, ... ) INTERNAL_CATCH_REGISTER_TESTCASE( Function, __CATCH_REGISTER_TEST_CASE17468,627349
#define CATCH_SECTION( ... ) INTERNAL_CATCH_SECTION( __VA_ARGS__ )CATCH_SECTION17469,627457
#define CATCH_DYNAMIC_SECTION( ... ) INTERNAL_CATCH_DYNAMIC_SECTION( __VA_ARGS__ )CATCH_DYNAMIC_SECTION17470,627524
#define CATCH_FAIL( ... ) INTERNAL_CATCH_MSG( "CATCH_FAIL", Catch::ResultWas::ExplicitFailure, CCATCH_FAIL17471,627607
#define CATCH_FAIL_CHECK( ... ) INTERNAL_CATCH_MSG( "CATCH_FAIL_CHECK", Catch::ResultWas::ExplicCATCH_FAIL_CHECK17472,627750
#define CATCH_SUCCEED( ... ) INTERNAL_CATCH_MSG( "CATCH_SUCCEED", Catch::ResultWas::Ok, Catch::RCATCH_SUCCEED17473,627916
#define CATCH_ANON_TEST_CASE() INTERNAL_CATCH_TESTCASE()CATCH_ANON_TEST_CASE17475,628064
#define CATCH_TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )CATCH_TEMPLATE_TEST_CASE17478,628173
#define CATCH_TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG( __VA_ARGS__ )CATCH_TEMPLATE_TEST_CASE_SIG17479,628262
#define CATCH_TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHCATCH_TEMPLATE_TEST_CASE_METHOD17480,628359
#define CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG17481,628484
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE( __VA_CATCH_TEMPLATE_PRODUCT_TEST_CASE17482,628617
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SICATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG17483,628722
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_PRODUCCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD17484,628835
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_PRCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17485,628976
#define CATCH_TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TESCATCH_TEMPLATE_TEST_CASE17487,629131
#define CATCH_TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATECATCH_TEMPLATE_TEST_CASE_SIG17488,629251
#define CATCH_TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD17489,629379
#define CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERCATCH_TEMPLATE_TEST_CASE_METHOD_SIG17490,629535
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPCATCH_TEMPLATE_PRODUCT_TEST_CASE17491,629699
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG17492,629835
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( ICATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD17493,629979
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17494,630151
#define CATCH_STATIC_REQUIRE( ... )       static_assert(   __VA_ARGS__ ,      #__VA_ARGS__ );   CATCH_STATIC_REQUIRE17498,630389
#define CATCH_STATIC_REQUIRE_FALSE( ... ) static_assert( !(__VA_ARGS__), "!(" #__VA_ARGS__ ")" )CATCH_STATIC_REQUIRE_FALSE17499,630517
#define CATCH_STATIC_REQUIRE( ... )       CATCH_REQUIRE( __VA_ARGS__ )CATCH_STATIC_REQUIRE17501,630651
#define CATCH_STATIC_REQUIRE_FALSE( ... ) CATCH_REQUIRE_FALSE( __VA_ARGS__ )CATCH_STATIC_REQUIRE_FALSE17502,630722
#define CATCH_SCENARIO( ... ) CATCH_TEST_CASE( "Scenario: " __VA_ARGS__ )CATCH_SCENARIO17506,630843
#define CATCH_SCENARIO_METHOD( className, ... ) INTERNAL_CATCH_TEST_CASE_METHOD( className, "SceCATCH_SCENARIO_METHOD17507,630917
#define CATCH_GIVEN( desc )     INTERNAL_CATCH_DYNAMIC_SECTION( "    Given: " << desc )CATCH_GIVEN17508,631036
#define CATCH_AND_GIVEN( desc ) INTERNAL_CATCH_DYNAMIC_SECTION( "And given: " << desc )CATCH_AND_GIVEN17509,631124
#define CATCH_WHEN( desc )      INTERNAL_CATCH_DYNAMIC_SECTION( "     When: " << desc )CATCH_WHEN17510,631212
#define CATCH_AND_WHEN( desc )  INTERNAL_CATCH_DYNAMIC_SECTION( " And when: " << desc )CATCH_AND_WHEN17511,631300
#define CATCH_THEN( desc )      INTERNAL_CATCH_DYNAMIC_SECTION( "     Then: " << desc )CATCH_THEN17512,631388
#define CATCH_AND_THEN( desc )  INTERNAL_CATCH_DYNAMIC_SECTION( "      And: " << desc )CATCH_AND_THEN17513,631476
#define CATCH_BENCHMARK(...) \CATCH_BENCHMARK17516,631611
#define CATCH_BENCHMARK_ADVANCED(name) \CATCH_BENCHMARK_ADVANCED17518,631813
#define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARREQUIRE17525,632093
#define REQUIRE_FALSE( ... ) INTERNAL_CATCH_TEST( "REQUIRE_FALSE", Catch::ResultDisposition::NorREQUIRE_FALSE17526,632197
#define REQUIRE_THROWS( ... ) INTERNAL_CATCH_THROWS( "REQUIRE_THROWS", Catch::ResultDisposition:REQUIRE_THROWS17528,632351
#define REQUIRE_THROWS_AS( expr, exceptionType ) INTERNAL_CATCH_THROWS_AS( "REQUIRE_THROWS_AS", REQUIRE_THROWS_AS17529,632470
#define REQUIRE_THROWS_WITH( expr, matcher ) INTERNAL_CATCH_THROWS_STR_MATCHES( "REQUIRE_THROWS_REQUIRE_THROWS_WITH17530,632622
#define REQUIRE_THROWS_MATCHES( expr, exceptionType, matcher ) INTERNAL_CATCH_THROWS_MATCHES( "RREQUIRE_THROWS_MATCHES17532,632819
#define REQUIRE_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( "REQUIRE_NOTHROW", Catch::ResultDispositREQUIRE_NOTHROW17534,633044
#define CHECK( ... ) INTERNAL_CATCH_TEST( "CHECK", Catch::ResultDisposition::ContinueOnFailure, CHECK17536,633168
#define CHECK_FALSE( ... ) INTERNAL_CATCH_TEST( "CHECK_FALSE", Catch::ResultDisposition::ContinuCHECK_FALSE17537,633278
#define CHECKED_IF( ... ) INTERNAL_CATCH_IF( "CHECKED_IF", Catch::ResultDisposition::ContinueOnFCHECKED_IF17538,633438
#define CHECKED_ELSE( ... ) INTERNAL_CATCH_ELSE( "CHECKED_ELSE", Catch::ResultDisposition::ContiCHECKED_ELSE17539,633556
#define CHECK_NOFAIL( ... ) INTERNAL_CATCH_TEST( "CHECK_NOFAIL", Catch::ResultDisposition::ContiCHECK_NOFAIL17540,633680
#define CHECK_THROWS( ... )  INTERNAL_CATCH_THROWS( "CHECK_THROWS", Catch::ResultDisposition::CoCHECK_THROWS17542,633846
#define CHECK_THROWS_AS( expr, exceptionType ) INTERNAL_CATCH_THROWS_AS( "CHECK_THROWS_AS", exceCHECK_THROWS_AS17543,633973
#define CHECK_THROWS_WITH( expr, matcher ) INTERNAL_CATCH_THROWS_STR_MATCHES( "CHECK_THROWS_WITHCHECK_THROWS_WITH17544,634132
#define CHECK_THROWS_MATCHES( expr, exceptionType, matcher ) INTERNAL_CATCH_THROWS_MATCHES( "CHECHECK_THROWS_MATCHES17546,634336
#define CHECK_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( "CHECK_NOTHROW", Catch::ResultDisposition:CHECK_NOTHROW17548,634568
#define CHECK_THAT( arg, matcher ) INTERNAL_CHECK_THAT( "CHECK_THAT", matcher, Catch::ResultDispCHECK_THAT17551,634743
#define REQUIRE_THAT( arg, matcher ) INTERNAL_CHECK_THAT( "REQUIRE_THAT", matcher, Catch::ResultREQUIRE_THAT17553,634874
#define INFO( msg ) INTERNAL_CATCH_INFO( "INFO", msg )INFO17556,635038
#define UNSCOPED_INFO( msg ) INTERNAL_CATCH_UNSCOPED_INFO( "UNSCOPED_INFO", msg )UNSCOPED_INFO17557,635093
#define WARN( msg ) INTERNAL_CATCH_MSG( "WARN", Catch::ResultWas::Warning, Catch::ResultDispositWARN17558,635175
#define CAPTURE( ... ) INTERNAL_CATCH_CAPTURE( INTERNAL_CATCH_UNIQUE_NAME(capturer), "CAPTURE",_CAPTURE17559,635301
#define TEST_CASE( ... ) INTERNAL_CATCH_TESTCASE( __VA_ARGS__ )TEST_CASE17561,635411
#define TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEST_CASE_METHOD( className, __VA_ARGSTEST_CASE_METHOD17562,635475
#define METHOD_AS_TEST_CASE( method, ... ) INTERNAL_CATCH_METHOD_AS_TEST_CASE( method, __VA_ARGSMETHOD_AS_TEST_CASE17563,635576
#define REGISTER_TEST_CASE( Function, ... ) INTERNAL_CATCH_REGISTER_TESTCASE( Function, __VA_ARGREGISTER_TEST_CASE17564,635677
#define SECTION( ... ) INTERNAL_CATCH_SECTION( __VA_ARGS__ )SECTION17565,635779
#define DYNAMIC_SECTION( ... ) INTERNAL_CATCH_DYNAMIC_SECTION( __VA_ARGS__ )DYNAMIC_SECTION17566,635840
#define FAIL( ... ) INTERNAL_CATCH_MSG( "FAIL", Catch::ResultWas::ExplicitFailure, Catch::ResultFAIL17567,635917
#define FAIL_CHECK( ... ) INTERNAL_CATCH_MSG( "FAIL_CHECK", Catch::ResultWas::ExplicitFailure, CFAIL_CHECK17568,636048
#define SUCCEED( ... ) INTERNAL_CATCH_MSG( "SUCCEED", Catch::ResultWas::Ok, Catch::ResultDisposiSUCCEED17569,636202
#define ANON_TEST_CASE() INTERNAL_CATCH_TESTCASE()ANON_TEST_CASE17570,636337
#define TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )TEMPLATE_TEST_CASE17573,636440
#define TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG( __VA_ARGS__ )TEMPLATE_TEST_CASE_SIG17574,636523
#define TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD( clTEMPLATE_TEST_CASE_METHOD17575,636614
#define TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHODTEMPLATE_TEST_CASE_METHOD_SIG17576,636733
#define TEMPLATE_PRODUCT_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE( __VA_ARGS__TEMPLATE_PRODUCT_TEST_CASE17577,636860
#define TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG( __VTEMPLATE_PRODUCT_TEST_CASE_SIG17578,636959
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TESTTEMPLATE_PRODUCT_TEST_CASE_METHOD17579,637066
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_PRODUCT_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17580,637201
#define TEMPLATE_LIST_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE(__VA_ARGS__)TEMPLATE_LIST_TEST_CASE17581,637344
#define TEMPLATE_LIST_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_TEMPLATE_LIST_TEST_CASE_METHOD17582,637435
#define TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASETEMPLATE_TEST_CASE17584,637570
#define TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_TEMPLATE_TEST_CASE_SIG17585,637684
#define TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD17586,637806
#define TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATEMPLATE_TEST_CASE_METHOD_SIG17587,637956
#define TEMPLATE_PRODUCT_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_PTEMPLATE_PRODUCT_TEST_CASE17588,638114
#define TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATEMPLATE_PRODUCT_TEST_CASE_SIG17589,638244
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNATEMPLATE_PRODUCT_TEST_CASE_METHOD17590,638382
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTTEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17591,638548
#define TEMPLATE_LIST_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_LISTTEMPLATE_LIST_TEST_CASE17592,638722
#define TEMPLATE_LIST_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CTEMPLATE_LIST_TEST_CASE_METHOD17593,638846
#define STATIC_REQUIRE( ... )       static_assert(   __VA_ARGS__,  #__VA_ARGS__ ); SUCCEED( #__VSTATIC_REQUIRE17597,639064
#define STATIC_REQUIRE_FALSE( ... ) static_assert( !(__VA_ARGS__), "!(" #__VA_ARGS__ ")" ); SUCCSTATIC_REQUIRE_FALSE17598,639171
#define STATIC_REQUIRE( ... )       REQUIRE( __VA_ARGS__ )STATIC_REQUIRE17600,639302
#define STATIC_REQUIRE_FALSE( ... ) REQUIRE_FALSE( __VA_ARGS__ )STATIC_REQUIRE_FALSE17601,639361
#define CATCH_TRANSLATE_EXCEPTION( signature ) INTERNAL_CATCH_TRANSLATE_EXCEPTION( signature )CATCH_TRANSLATE_EXCEPTION17606,639442
#define SCENARIO( ... ) TEST_CASE( "Scenario: " __VA_ARGS__ )SCENARIO17609,639574
#define SCENARIO_METHOD( className, ... ) INTERNAL_CATCH_TEST_CASE_METHOD( className, "Scenario:SCENARIO_METHOD17610,639636
#define GIVEN( desc )     INTERNAL_CATCH_DYNAMIC_SECTION( "    Given: " << desc )GIVEN17612,639750
#define AND_GIVEN( desc ) INTERNAL_CATCH_DYNAMIC_SECTION( "And given: " << desc )AND_GIVEN17613,639832
#define WHEN( desc )      INTERNAL_CATCH_DYNAMIC_SECTION( "     When: " << desc )WHEN17614,639914
#define AND_WHEN( desc )  INTERNAL_CATCH_DYNAMIC_SECTION( " And when: " << desc )AND_WHEN17615,639996
#define THEN( desc )      INTERNAL_CATCH_DYNAMIC_SECTION( "     Then: " << desc )THEN17616,640078
#define AND_THEN( desc )  INTERNAL_CATCH_DYNAMIC_SECTION( "      And: " << desc )AND_THEN17617,640160
#define BENCHMARK(...) \BENCHMARK17620,640289
#define BENCHMARK_ADVANCED(name) \BENCHMARK_ADVANCED17622,640485
#define CATCH_REQUIRE( ... )        (void)(0)CATCH_REQUIRE17634,640855
#define CATCH_REQUIRE_FALSE( ... )  (void)(0)CATCH_REQUIRE_FALSE17635,640901
#define CATCH_REQUIRE_THROWS( ... ) (void)(0)CATCH_REQUIRE_THROWS17637,640948
#define CATCH_REQUIRE_THROWS_AS( expr, exceptionType ) (void)(0)CATCH_REQUIRE_THROWS_AS17638,640994
#define CATCH_REQUIRE_THROWS_WITH( expr, matcher )     (void)(0)CATCH_REQUIRE_THROWS_WITH17639,641059
#define CATCH_REQUIRE_THROWS_MATCHES( expr, exceptionType, matcher ) (void)(0)CATCH_REQUIRE_THROWS_MATCHES17641,641168
#define CATCH_REQUIRE_NOTHROW( ... ) (void)(0)CATCH_REQUIRE_NOTHROW17643,641286
#define CATCH_CHECK( ... )         (void)(0)CATCH_CHECK17645,641334
#define CATCH_CHECK_FALSE( ... )   (void)(0)CATCH_CHECK_FALSE17646,641379
#define CATCH_CHECKED_IF( ... )    if (__VA_ARGS__)CATCH_CHECKED_IF17647,641424
#define CATCH_CHECKED_ELSE( ... )  if (!(__VA_ARGS__))CATCH_CHECKED_ELSE17648,641476
#define CATCH_CHECK_NOFAIL( ... )  (void)(0)CATCH_CHECK_NOFAIL17649,641531
#define CATCH_CHECK_THROWS( ... )  (void)(0)CATCH_CHECK_THROWS17651,641577
#define CATCH_CHECK_THROWS_AS( expr, exceptionType ) (void)(0)CATCH_CHECK_THROWS_AS17652,641622
#define CATCH_CHECK_THROWS_WITH( expr, matcher )     (void)(0)CATCH_CHECK_THROWS_WITH17653,641685
#define CATCH_CHECK_THROWS_MATCHES( expr, exceptionType, matcher ) (void)(0)CATCH_CHECK_THROWS_MATCHES17655,641792
#define CATCH_CHECK_NOTHROW( ... ) (void)(0)CATCH_CHECK_NOTHROW17657,641909
#define CATCH_CHECK_THAT( arg, matcher )   (void)(0)CATCH_CHECK_THAT17660,641999
#define CATCH_REQUIRE_THAT( arg, matcher ) (void)(0)CATCH_REQUIRE_THAT17662,642053
#define CATCH_INFO( msg )          (void)(0)CATCH_INFO17665,642147
#define CATCH_UNSCOPED_INFO( msg ) (void)(0)CATCH_UNSCOPED_INFO17666,642192
#define CATCH_WARN( msg )          (void)(0)CATCH_WARN17667,642237
#define CATCH_CAPTURE( msg )       (void)(0)CATCH_CAPTURE17668,642282
#define CATCH_TEST_CASE( ... ) INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAMCATCH_TEST_CASE17670,642328
#define CATCH_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNACATCH_TEST_CASE_METHOD17671,642459
#define CATCH_METHOD_AS_TEST_CASE( method, ... )CATCH_METHOD_AS_TEST_CASE17672,642608
#define CATCH_REGISTER_TEST_CASE( Function, ... ) (void)(0)CATCH_REGISTER_TEST_CASE17673,642657
#define CATCH_SECTION( ... )CATCH_SECTION17674,642717
#define CATCH_DYNAMIC_SECTION( ... )CATCH_DYNAMIC_SECTION17675,642746
#define CATCH_FAIL( ... ) (void)(0)CATCH_FAIL17676,642783
#define CATCH_FAIL_CHECK( ... ) (void)(0)CATCH_FAIL_CHECK17677,642819
#define CATCH_SUCCEED( ... ) (void)(0)CATCH_SUCCEED17678,642861
#define CATCH_ANON_TEST_CASE() INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAMCATCH_ANON_TEST_CASE17680,642901
#define CATCH_TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(__VA_ACATCH_TEMPLATE_TEST_CASE17683,643084
#define CATCH_TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATIOCATCH_TEMPLATE_TEST_CASE_SIG17684,643187
#define CATCH_TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHCATCH_TEMPLATE_TEST_CASE_METHOD17685,643298
#define CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG17686,643437
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE( ... ) CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )CATCH_TEMPLATE_PRODUCT_TEST_CASE17687,643585
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG17688,643673
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) CATCH_TEMPLATE_TEST_CASE_METHOCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD17689,643765
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) CATCH_TEMPLATE_TEST_CASE_MCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17690,643889
#define CATCH_TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TESCATCH_TEMPLATE_TEST_CASE17692,644023
#define CATCH_TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATECATCH_TEMPLATE_TEST_CASE_SIG17693,644157
#define CATCH_TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD17694,644299
#define CATCH_TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERCATCH_TEMPLATE_TEST_CASE_METHOD_SIG17695,644470
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE( ... ) CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )CATCH_TEMPLATE_PRODUCT_TEST_CASE17696,644649
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) CATCH_TEMPLATE_TEST_CASE( __VA_ARGS__ )CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG17697,644737
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) CATCH_TEMPLATE_TEST_CASE_METHOCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD17698,644829
#define CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) CATCH_TEMPLATE_TEST_CASE_MCATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17699,644953
#define CATCH_SCENARIO( ... ) INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAMECATCH_SCENARIO17703,645125
#define CATCH_SCENARIO_METHOD( className, ... ) INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(ICATCH_SCENARIO_METHOD17704,645255
#define CATCH_GIVEN( desc )CATCH_GIVEN17705,645422
#define CATCH_AND_GIVEN( desc )CATCH_AND_GIVEN17706,645450
#define CATCH_WHEN( desc )CATCH_WHEN17707,645482
#define CATCH_AND_WHEN( desc )CATCH_AND_WHEN17708,645509
#define CATCH_THEN( desc )CATCH_THEN17709,645540
#define CATCH_AND_THEN( desc )CATCH_AND_THEN17710,645567
#define CATCH_STATIC_REQUIRE( ... )       (void)(0)CATCH_STATIC_REQUIRE17712,645599
#define CATCH_STATIC_REQUIRE_FALSE( ... ) (void)(0)CATCH_STATIC_REQUIRE_FALSE17713,645651
#define REQUIRE( ... )       (void)(0)REQUIRE17718,645795
#define REQUIRE_FALSE( ... ) (void)(0)REQUIRE_FALSE17719,645834
#define REQUIRE_THROWS( ... ) (void)(0)REQUIRE_THROWS17721,645874
#define REQUIRE_THROWS_AS( expr, exceptionType ) (void)(0)REQUIRE_THROWS_AS17722,645914
#define REQUIRE_THROWS_WITH( expr, matcher ) (void)(0)REQUIRE_THROWS_WITH17723,645973
#define REQUIRE_THROWS_MATCHES( expr, exceptionType, matcher ) (void)(0)REQUIRE_THROWS_MATCHES17725,646072
#define REQUIRE_NOTHROW( ... ) (void)(0)REQUIRE_NOTHROW17727,646185
#define CHECK( ... ) (void)(0)CHECK17729,646227
#define CHECK_FALSE( ... ) (void)(0)CHECK_FALSE17730,646258
#define CHECKED_IF( ... ) if (__VA_ARGS__)CHECKED_IF17731,646295
#define CHECKED_ELSE( ... ) if (!(__VA_ARGS__))CHECKED_ELSE17732,646338
#define CHECK_NOFAIL( ... ) (void)(0)CHECK_NOFAIL17733,646386
#define CHECK_THROWS( ... )  (void)(0)CHECK_THROWS17735,646425
#define CHECK_THROWS_AS( expr, exceptionType ) (void)(0)CHECK_THROWS_AS17736,646464
#define CHECK_THROWS_WITH( expr, matcher ) (void)(0)CHECK_THROWS_WITH17737,646521
#define CHECK_THROWS_MATCHES( expr, exceptionType, matcher ) (void)(0)CHECK_THROWS_MATCHES17739,646618
#define CHECK_NOTHROW( ... ) (void)(0)CHECK_NOTHROW17741,646729
#define CHECK_THAT( arg, matcher ) (void)(0)CHECK_THAT17744,646813
#define REQUIRE_THAT( arg, matcher ) (void)(0)REQUIRE_THAT17746,646859
#define INFO( msg ) (void)(0)INFO17749,646947
#define UNSCOPED_INFO( msg ) (void)(0)UNSCOPED_INFO17750,646977
#define WARN( msg ) (void)(0)WARN17751,647016
#define CAPTURE( msg ) (void)(0)CAPTURE17752,647046
#define TEST_CASE( ... )  INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAME( __TEST_CASE17754,647080
#define TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCTEST_CASE_METHOD17755,647206
#define METHOD_AS_TEST_CASE( method, ... )METHOD_AS_TEST_CASE17756,647349
#define REGISTER_TEST_CASE( Function, ... ) (void)(0)REGISTER_TEST_CASE17757,647392
#define SECTION( ... )SECTION17758,647446
#define DYNAMIC_SECTION( ... )DYNAMIC_SECTION17759,647469
#define FAIL( ... ) (void)(0)FAIL17760,647500
#define FAIL_CHECK( ... ) (void)(0)FAIL_CHECK17761,647530
#define SUCCEED( ... ) (void)(0)SUCCEED17762,647566
#define ANON_TEST_CASE() INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAME( ___ANON_TEST_CASE17763,647599
#define TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION(__VA_ARGS__)TEMPLATE_TEST_CASE17766,647776
#define TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION(__VATEMPLATE_TEST_CASE_SIG17767,647873
#define TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_TEMPLATE_TEST_CASE_METHOD17768,647978
#define TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHODTEMPLATE_TEST_CASE_METHOD_SIG17769,648111
#define TEMPLATE_PRODUCT_TEST_CASE( ... ) TEMPLATE_TEST_CASE( __VA_ARGS__ )TEMPLATE_PRODUCT_TEST_CASE17770,648253
#define TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) TEMPLATE_TEST_CASE( __VA_ARGS__ )TEMPLATE_PRODUCT_TEST_CASE_SIG17771,648329
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) TEMPLATE_TEST_CASE_METHOD( classNameTEMPLATE_PRODUCT_TEST_CASE_METHOD17772,648409
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) TEMPLATE_TEST_CASE_METHOD( classTEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17773,648521
#define TEMPLATE_TEST_CASE( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASETEMPLATE_TEST_CASE17775,648643
#define TEMPLATE_TEST_CASE_SIG( ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_TEMPLATE_TEST_CASE_SIG17776,648771
#define TEMPLATE_TEST_CASE_METHOD( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD17777,648907
#define TEMPLATE_TEST_CASE_METHOD_SIG( className, ... ) INTERNAL_CATCH_EXPAND_VARGS( INTERNAL_CATEMPLATE_TEST_CASE_METHOD_SIG17778,649072
#define TEMPLATE_PRODUCT_TEST_CASE( ... ) TEMPLATE_TEST_CASE( __VA_ARGS__ )TEMPLATE_PRODUCT_TEST_CASE17779,649245
#define TEMPLATE_PRODUCT_TEST_CASE_SIG( ... ) TEMPLATE_TEST_CASE( __VA_ARGS__ )TEMPLATE_PRODUCT_TEST_CASE_SIG17780,649321
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD( className, ... ) TEMPLATE_TEST_CASE_METHOD( classNameTEMPLATE_PRODUCT_TEST_CASE_METHOD17781,649401
#define TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG( className, ... ) TEMPLATE_TEST_CASE_METHOD( classTEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG17782,649513
#define STATIC_REQUIRE( ... )       (void)(0)STATIC_REQUIRE17785,649637
#define STATIC_REQUIRE_FALSE( ... ) (void)(0)STATIC_REQUIRE_FALSE17786,649683
#define CATCH_TRANSLATE_EXCEPTION( signature ) INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG( INTERNCATCH_TRANSLATE_EXCEPTION17790,649738
#define SCENARIO( ... ) INTERNAL_CATCH_TESTCASE_NO_REGISTRATION(INTERNAL_CATCH_UNIQUE_NAME( ____SCENARIO17793,649943
#define SCENARIO_METHOD( className, ... ) INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION(INTERNASCENARIO_METHOD17794,650068
#define GIVEN( desc )GIVEN17796,650230
#define AND_GIVEN( desc )AND_GIVEN17797,650252
#define WHEN( desc )WHEN17798,650278
#define AND_WHEN( desc )AND_WHEN17799,650299
#define THEN( desc )THEN17800,650324
#define AND_THEN( desc )AND_THEN17801,650345

mssql.cpp,8498
char mssqlUserFilename[MAX_WORD_SIZE]; // current topic file name for usermssqlUserFilename23,369
char mssqlparams[300];          // global variable storing paramsmssqlparams24,444
static char mssqlhost[100];mssqlhost25,510
static char mssqlport[100];mssqlport26,538
static char mssqluser[100];mssqluser27,566
static char mssqlpasswd[100];mssqlpasswd28,594
static char mssqldatabase[100];mssqldatabase29,624
static const char* log_filename = "mssql_init_log.txt";log_filename30,656
static void* z_buffer = nullptr; // for compress and uncomress operationsz_buffer32,713
static int z_buffer_size = 0;z_buffer_size33,787
static int z_ref_count = 0;z_ref_count34,817
static const size_t mssql_header_size = 4;mssql_header_size37,862
static bool already_entered_close = false;already_entered_close38,905
static void loadSingleSqlParam(char* params, char* name, char* destination)loadSingleSqlParam67,2350
static void LoadMsSqlParams(char* params)LoadMsSqlParams82,2803
static FILE* GetUserFilenameFromName(const char* name)GetUserFilenameFromName93,3205
FILE* mssqlUserCreate(const char* name)mssqlUserCreate109,3647
FILE* mssqlUserOpen(const char* name)mssqlUserOpen114,3814
int mssqlUserClose(FILE*)mssqlUserClose119,3975
static size_t mssqlUserRead(void* buf,size_t size, size_t count, FILE* key)mssqlUserRead124,4088
static size_t mssqlUserWrite(const void* buf, size_t size, size_t count, FILE* key)mssqlUserWrite154,4971
static void save_info_string_to_mssql_syslog(const char* s)save_info_string_to_mssql_syslog183,5788
void MsSqlUserFilesCode(char* params)MsSqlUserFilesCode192,6001
void MsSqlFullCloseCode()MsSqlFullCloseCode216,6611
static void SetUserFileSystemBlock(void)SetUserFileSystemBlock237,7159
FunctionResult MsSqlScriptInitCode(char* buffer)MsSqlScriptInitCode256,7789
FunctionResult MsSqlScriptCloseCode(char* buffer)MsSqlScriptCloseCode275,8264
FunctionResult MsSqlScriptWriteCode(char* buffer)MsSqlScriptWriteCode291,8752
FunctionResult MsSqlScriptReadCode(char* buffer)MsSqlScriptReadCode309,9162
struct DbInterface_t {DbInterface_t329,9615
    int used;used330,9638
    SQLHENV henv;      // Environment handlehenv331,9652
    SQLHDBC hdbc;      // Connection handlehdbc332,9697
    SQLHSTMT hstmt_w;  // Write statement handlehstmt_w333,9741
    SQLHSTMT hstmt_r;  // Read statement handlehstmt_r334,9790
    bool write_prepared;write_prepared335,9838
    bool write_parameters_bound;write_parameters_bound336,9863
    bool read_prepared;read_prepared337,9896
    bool read_parameters_bound;read_parameters_bound338,9920
    bool use_stored_procedures;use_stored_procedures339,9952
    bool use_tracing;use_tracing340,9984
    bool verbose;verbose341,10006
    SQLLEN file_buf_len;        // how much is usedfile_buf_len342,10024
    void* key_buf;              // storage for keykey_buf343,10076
    SQLLEN key_buf_size;        // allocated sizekey_buf_size344,10127
    SQLLEN key_buf_len;         // how much is usedkey_buf_len345,10177
    bool is_empty;              // no data in result setis_empty346,10229
    bool is_initialized;        // has finished initializationis_initialized347,10286
static struct DbInterface_t db_list[2]; // one for file, one for scripting.db_list350,10353
static char error_buf[1024];            // stores error statementserror_buf351,10429
static char error_max[10] = "WARN";     // maximum error_levelerror_max352,10496
static char in_conn_str[300];      // connection string built by usin_conn_str353,10559
static char out_conn_str[300];     // connection string returned by MSout_conn_str354,10627
static char tracing_filename[100];tracing_filename355,10698
const char* get_mssql_in_conn_str(void)get_mssql_in_conn_str357,10734
const char* get_mssql_out_conn_str(void)get_mssql_out_conn_str362,10803
const char* mssql_error(void)mssql_error367,10874
static void set_error_max(char* str) {set_error_max372,10931
static const char* get_error_max() {get_error_max376,11021
static void replace_char(char* str, char find, char replace)replace_char380,11083
static void extract_error(const char *fn, SQLHANDLE handle, SQLSMALLINT type)extract_error389,11302
static bool is_error(SQLRETURN e, const char* s, SQLHANDLE h, SQLSMALLINT t)is_error423,12731
static void* getHeap(size_t size) {getHeap434,12978
static void releaseHeap(void* ptr) {releaseHeap438,13042
int mssql_init_db_struct(ConnectionId c_id)mssql_init_db_struct442,13097
static DbInterface_t* get_db(int id)get_db475,13978
static bool is_db_initialized(ConnectionId c_id)is_db_initialized484,14190
static void set_db_initialized(ConnectionId c_id, bool flag) {set_db_initialized491,14363
static void set_db_used(ConnectionId c_id, bool flag) {set_db_used496,14500
int mssql_set_verbose(int id, bool flag)mssql_set_verbose501,14620
int mssql_use_stored_procedures(int id, bool flag)mssql_use_stored_procedures511,14797
static bool free_statement_handle(DbInterface_t* dbp)free_statement_handle521,14998
static bool free_connection_handle(DbInterface_t* dbp)free_connection_handle541,15594
static bool free_environment_handle(DbInterface_t* dbp)free_environment_handle558,16072
static bool deinit_database_interface_struct(DbInterface_t* dbp)deinit_database_interface_struct572,16405
int mssql_close(int id)mssql_close589,16730
static bool alloc_buffers(DbInterface_t* dbp)alloc_buffers607,17129
static bool alloc_environment_handle(DbInterface_t* dbp)alloc_environment_handle627,17797
static bool set_ODBC_version(DbInterface_t* dbp)set_ODBC_version638,18109
static bool alloc_connection_handle(DbInterface_t* dbp)alloc_connection_handle650,18465
static bool set_login_timeout(DbInterface_t* dbp)set_login_timeout662,18771
static bool set_tracing(DbInterface_t* dbp) {set_tracing680,19455
static bool connect(DbInterface_t* dbp,connect715,20682
static bool alloc_statement_handles(DbInterface_t* dbp)alloc_statement_handles767,22684
int mssql_init(int id,mssql_init783,23211
static bool empty_result_set(SQLHSTMT hstmt)empty_result_set814,24050
static bool file_check_key_size(DbInterface_t* dbp, const char* key) {file_check_key_size822,24184
static bool file_write_preformat_data(DbInterface_t* dbp, const void* buf, size_t buf_size)file_write_preformat_data832,24481
static bool file_write_bind_params(DbInterface_t* dbp)file_write_bind_params852,25061
static bool file_write_copy_key(DbInterface_t* dbp, const char* key)file_write_copy_key897,27257
static bool file_write_prepare(DbInterface_t* dbp)file_write_prepare905,27434
static bool file_write_execute(DbInterface_t* dbp)file_write_execute946,28701
int mssql_file_write(int id, const void* buf, size_t buf_size, const char* key)mssql_file_write958,28975
static bool file_read_init(DbInterface_t* dbp, const char* key)file_read_init975,29509
static bool file_read_bind(DbInterface_t* dbp, const char* key)file_read_bind987,29749
static bool file_read_prepare(DbInterface_t* dbp)file_read_prepare1012,30858
static bool file_read_execute(DbInterface_t* dbp)file_read_execute1036,31587
static bool file_read_fetch_and_get_data(DbInterface_t* dbp, size_t* buf_size_p)file_read_fetch_and_get_data1078,33085
static bool file_read_postformat_data(DbInterface_t* dbp, void* read_buf, size_t* read_len_p)file_read_postformat_data1116,34386
static bool file_read_with_prepare_and_execute(DbInterface_t* dbp,file_read_with_prepare_and_execute1142,35273
int mssql_file_read(int id, void* read_buf, size_t* read_len_p, const char* key)mssql_file_read1160,35959
int mssql_set_tracing(int id, bool flag, const char* filename)mssql_set_tracing1171,36252
int mssql_maybe_compress(char* c_buf, size_t* c_size, const char* p_buf, size_t p_size)mssql_maybe_compress1199,37010
int mssql_maybe_uncompress(const char* c_buf, size_t c_size, char* p_buf, size_t* p_size)mssql_maybe_uncompress1233,37958
int mssql_exec(int id, const char* statement)mssql_exec1285,39481
int mssql_store_result(int id)mssql_store_result1290,39547
int mssql_num_fields(int id)mssql_num_fields1295,39598
int mssql_free_result(int id)mssql_free_result1300,39647
int mssql_num_rows(int id)mssql_num_rows1305,39697
int mssql_fetch_row(int id)mssql_fetch_row1310,39744
int mssql_fetch_lengths(int id)mssql_fetch_lengths1315,39792
static void* init_z_buffer(int size)init_z_buffer1320,39844
static int uninit_z_buffer()uninit_z_buffer1331,40062

os.cpp,13401
static std::mutex mtx;mtx5,125
int loglimit = 0;loglimit7,156
bool prelog = false;prelog8,174
FILE* userlogFile = NULL;userlogFile9,195
char* indents[100];indents10,221
int ide = 0;ide11,241
int inputSize =  0;inputSize12,254
bool inputLimitHit = false;inputLimitHit13,274
bool convertTabs = true;convertTabs14,302
bool serverLogTemporary = false;serverLogTemporary15,327
bool idestop = false;idestop16,360
bool idekey = false;idekey17,382
bool inputAvailable = false;inputAvailable18,403
static char encryptUser[200];encryptUser19,432
static char encryptLTM[200];encryptLTM20,462
char logLastCharacter = 0;logLastCharacter21,491
#define MAX_STRING_SPACE MAX_STRING_SPACE22,518
size_t maxHeapBytes = MAX_STRING_SPACE;maxHeapBytes23,584
char* heapBase = NULL;					// start of heap space (runs backward)heapBase24,624
char* heapFree = NULL;					// current free string ptrheapFree25,690
char* stackFree = NULL;stackFree26,744
static const char* infiniteCaller = "";infiniteCaller27,768
char* stackStart = NULL;stackStart28,808
char* heapEnd = NULL;heapEnd29,833
uint64 discard;discard30,855
bool infiniteStack = false;infiniteStack31,871
bool userEncrypt = false;userEncrypt32,899
bool ltmEncrypt = false;ltmEncrypt33,925
unsigned long minHeapAvailable;minHeapAvailable34,950
bool showDepth = false;showDepth35,982
char serverLogfileName[1000];				// file to log server toserverLogfileName37,1007
char dbTimeLogfileName[1000];				// file to log db time todbTimeLogfileName38,1065
char externalBugLog[1000];externalBugLog39,1124
char logFilename[MAX_WORD_SIZE];			// file to user log tologFilename40,1151
bool logUpdated = false;					// has logging happenedlogUpdated41,1209
int holdUserLog;holdUserLog42,1262
int holdServerLog;holdServerLog43,1279
int userLog = FILE_LOG;				// where do we log useruserLog44,1298
int serverLog = FILE_LOG;			// where do we log serverserverLog45,1349
int bugLog = FILE_LOG;				// where do we log bugsbugLog46,1403
char hide[4000];							// dont log these json fields hide47,1453
unsigned int logsize = MAX_BUFFER_SIZE;              // defaultlogsize48,1507
char* logmainbuffer = NULL;					// where we build a log linelogmainbuffer49,1571
bool serverPreLog = true;					// show what server got BEFORE it works on itserverPreLog50,1632
unsigned int outputsize = MAX_BUFFER_SIZE;           // defaultoutputsize52,1709
bool serverctrlz = false;					// close communication with \0 and ctrlzserverctrlz53,1773
bool echo = false;							// show log output onto console as wellecho54,1844
bool oob = false;							// show oob dataoob55,1909
bool detailpattern = false;detailpattern56,1950
bool silent = false;						// dont display outputs of chatsilent57,1978
bool logged = false;logged58,2036
bool showmem = false;showmem59,2057
int filesystemOverride = NORMALFILES;filesystemOverride60,2079
bool inLog = false;inLog61,2117
char* testOutput = NULL;					// testing commands output reroutetestOutput62,2137
static char encryptServer[1000];encryptServer63,2201
static char decryptServer[1000];decryptServer64,2234
int adjustIndent = 0;adjustIndent65,2267
char* lastheapfree = NULL;lastheapfree66,2289
#define MAX_BUFFER_COUNT MAX_BUFFER_COUNT69,2339
unsigned int maxReleaseStack = 0;maxReleaseStack70,2367
unsigned int maxReleaseStackGap = 0xffffffff;maxReleaseStackGap71,2401
unsigned int maxBufferLimit = MAX_BUFFER_COUNT;		// default number of system buffers for AllocatmaxBufferLimit73,2448
unsigned int maxBufferSize = MAX_BUFFER_SIZE;		// default how big std system buffers from AllocamaxBufferSize74,2552
unsigned int maxBufferUsed = 0;						// worst case buffer use - displayed with :variablesmaxBufferUsed75,2667
unsigned int bufferIndex = 0;				//   current allocated index into buffers[]  bufferIndex76,2757
unsigned baseBufferIndex = 0;				// preallocated buffers at startbaseBufferIndex77,2836
char* buffers = 0;							//   collection of output buffersbuffers78,2902
#define MAX_OVERFLOW_BUFFERS MAX_OVERFLOW_BUFFERS79,2961
static char* overflowBuffers[MAX_OVERFLOW_BUFFERS];	// malloced extra buffers if base allotment overflowBuffers80,2993
CALLFRAME* releaseStackDepth[MAX_GLOBAL];				// ReleaseStack at start of depthreleaseStackDepth82,3098
static unsigned int overflowLimit = 0;overflowLimit84,3178
unsigned int overflowIndex = 0;overflowIndex85,3217
USERFILESYSTEM userFileSystem;userFileSystem87,3250
static char staticPath[MAX_WORD_SIZE]; // files that never changestaticPath88,3281
static char readPath[MAX_WORD_SIZE];   // readonly files that might be overwritten from outsidereadPath89,3347
static char writePath[MAX_WORD_SIZE];  // files written by appwritePath90,3443
unsigned int currentFileLine = 0;				// line number in file being readcurrentFileLine91,3506
unsigned int currentLineColumn = 0;				// column number in file being readcurrentLineColumn92,3577
unsigned int maxFileLine = 0;				// line number in file being readmaxFileLine93,3652
unsigned int peekLine = 0;peekLine94,3719
char currentFilename[MAX_WORD_SIZE];	// name of file being readcurrentFilename95,3746
std::map <WORDP, uint64> timeSummary;  // per volley time data about functions etctimeSummary96,3810
jmp_buf scriptJump[20];scriptJump99,3912
jmp_buf crashJump;crashJump100,3936
int jumpIndex = -1;jumpIndex101,3955
unsigned int randIndex = 0;randIndex103,3976
unsigned int oldRandIndex = 0;oldRandIndex104,4004
char syslogstr[300] = "chatscript"; // header for syslog messagessyslogstr106,4036
void Bug()Bug121,4286
void TrackTime(char* name, int elapsed)TrackTime130,4460
void TrackTime(WORDP D, int elapsed)TrackTime136,4570
bool KeyReady()KeyReady164,5210
void SafeLock()SafeLock194,6102
void SafeUnlock()SafeUnlock201,6159
void JumpBack()JumpBack208,6220
void CloseDatabases(bool restart)CloseDatabases215,6352
void myexit(const char* msg, int code)myexit237,6932
void mystart(char* msg)mystart294,8516
void signalHandler( int signalcode ) signalHandler321,9194
void setSignalHandlers () setSignalHandlers339,9611
void ResetBuffers()ResetBuffers384,10883
void CloseBuffers()CloseBuffers394,11149
void LoggingCheats(char* incoming)LoggingCheats405,11318
char* Myfgets(char* buffer,  int size, FILE* in)Myfgets447,12451
char* AllocateBuffer(char* name)AllocateBuffer455,12661
void FreeBuffer(char* name)FreeBuffer490,13922
void ResetHeapFree(char* val)ResetHeapFree498,14350
void InitStackHeap()InitStackHeap503,14417
void FreeStackHeap()FreeStackHeap523,14996
char* AllocateStack(const char* word, size_t len,bool localvar,int align) // call with (0,len) tAllocateStack529,15068
void ReleaseStack(char* word)ReleaseStack581,16593
bool AllocateStackSlot(char* variable)AllocateStackSlot586,16647
char** RestoreStackSlot(char* variable,char** slot)RestoreStackSlot605,17193
char* InfiniteStack(char*& limit,const char* caller)InfiniteStack617,17510
char* InfiniteStack64(char*& limit,const char* caller)InfiniteStack64627,17848
void ReleaseInfiniteStack()ReleaseInfiniteStack638,18319
HEAPREF AllocateHeapval(HEAPREF linkval, uint64 val1, uint64 val2, uint64 val3)AllocateHeapval644,18398
HEAPREF UnpackHeapval(HEAPREF linkval, uint64 & val1, uint64 & val2, uint64 & val3)UnpackHeapval654,18692
STACKREF AllocateStackval(STACKREF linkval, uint64 val1, uint64 val2, uint64 val3)AllocateStackval663,18907
STACKREF UnpackStackval(STACKREF linkval, uint64& val1, uint64& val2, uint64& val3)UnpackStackval673,19217
void CompleteBindStack64(int n,char* base)CompleteBindStack64682,19482
void CompleteBindStack(int used)CompleteBindStack690,19757
HEAPREF Index2Heap(HEAPINDEX offset)Index2Heap699,20030
bool PreallocateHeap(size_t len) // do we have the spacePreallocateHeap716,20363
bool InHeap(char* ptr)InHeap727,20573
bool InStack(char* ptr)InStack732,20647
void ShowMemory(char* label)ShowMemory737,20723
char* AllocateConstHeap(char* word, size_t len, int bytes, bool clear, bool purelocal)AllocateConstHeap742,20851
char* AllocateHeap(const char* word,size_t len,int bytes,bool clear, bool purelocal) // BYTES meAllocateHeap747,21001
int FClose(FILE* file)FClose825,23763
void InitUserFiles()InitUserFiles832,23850
static size_t CleanupCryption(char* buffer,bool decrypt,char* filekind)CleanupCryption846,24277
void ProtectNL(char* buffer) // save ascii \r\n in json - only comes from userdata write using tProtectNL877,25080
bool notcrypting = false;notcrypting890,25341
static int JsonOpenCryption(char* buffer, size_t size, char* xserver, bool decrypt,char* filekinJsonOpenCryption891,25367
static size_t Decrypt(void* buffer,size_t size, size_t count, FILE* file,char* filekind)Decrypt985,29334
static size_t Encrypt(const void* buffer, size_t size, size_t count, FILE* file,char* filekind)Encrypt990,29512
void EncryptInit(char* params) // requiredEncryptInit995,29698
void ResetEncryptTags()ResetEncryptTags1002,29870
void DecryptInit(char* params) // requiredDecryptInit1008,29940
void EncryptRestart() // requiredEncryptRestart1015,30113
size_t DecryptableFileRead(void* buffer,size_t size, size_t count, FILE* file,bool decrypt,char*DecryptableFileRead1021,30350
size_t EncryptableFileWrite(void* buffer,size_t size, size_t count, FILE* file,bool encrypt,charEncryptableFileWrite1028,30666
void CopyFile2File(const char* newname,const char* oldname, bool automaticNumber)CopyFile2File1041,31137
int MakeDirectory(const char* directory)MakeDirectory1095,32193
void C_Directories(char* x)C_Directories1116,32666
void InitFileSystem(char* untouchedPath,char* readablePath,char* writeablePath)InitFileSystem1141,33261
void StartFile(const char* name)StartFile1153,33643
FILE* FopenStaticReadOnly(const char* name) // static data file read path, never changed (DICT/LFopenStaticReadOnly1164,34006
FILE* FopenReadOnly(const char* name) // read-only potentially changed data file read path (TOPIFopenReadOnly1173,34285
FILE* FopenReadNormal(const char* name) // normal C read unrelated to special pathsFopenReadNormal1182,34552
void FileDelete(const char* name)FileDelete1188,34692
int FileSize(FILE* in, char* buffer, size_t allowedSize)FileSize1192,34731
FILE* FopenBinaryWrite(const char* name) // writeable file pathFopenBinaryWrite1200,34898
FILE* FopenReadWritten(const char* name) // read from files that have been written by usFopenReadWritten1211,35311
FILE* FopenUTF8Write(const char* filename) // insure file has BOM for UTF8FopenUTF8Write1220,35570
FILE* FopenUTF8WriteAppend(const char* filename,const char* flags) FopenUTF8WriteAppend1239,36080
int isDirectory(const char *path) isDirectory1262,36764
int getdir (string dir, vector<string> &files)getdir1269,36911
void WalkDirectory(char* directory,FILEWALK function, uint64 flags,bool recursive) WalkDirectory1283,37254
string GetUserPathString(const string &login)GetUserPathString1406,41299
static int MakePath(const string &rootDir, const string &path)MakePath1423,41790
char* GetUserPath(char* login)GetUserPath1447,42611
void mylocaltime (const time_t * timer,struct tm* ptm)mylocaltime1469,43071
void myctime(time_t * timer,char* buffer)//	Www Mmm dd hh:mm:ss yyyymyctime1476,43245
char* GetTimeInfo(struct tm* ptm, bool nouser,bool utc) //   Www Mmm dd hh:mm:ss yyyy Where Www GetTimeInfo1483,43377
char* GetMyTime(time_t curr)GetMyTime1621,47700
void clock_get_mactime(struct timespec &ts)clock_get_mactime1639,48104
uint64 ElapsedMilliseconds()ElapsedMilliseconds1651,48411
unsigned int GetFutureSeconds(unsigned int seconds)GetFutureSeconds1682,49277
HookInfo hookSet[] =hookSet1699,49786
HOOKPTR FindHookFunction(char* hookName)FindHookFunction1715,50417
void RegisterHookFunction(char* hookName, HOOKPTR fn)RegisterHookFunction1733,50765
uint64 Hashit(unsigned char * data, int len,bool & hasUpperCharacters, bool & hasUTF8Characters)Hashit1753,51254
#define RANDA RANDA1803,52550
#define RANDC RANDC1804,52575
#define RANDM RANDM1805,52591
unsigned int random(unsigned int range)random1806,52617
uint64 logCount = 0;logCount1816,52911
bool TraceFunctionArgs(FILE* out, char* name, int start, int end)TraceFunctionArgs1818,52933
void BugBacktrace(FILE* out)BugBacktrace1837,53410
CALLFRAME* ChangeDepth(int value,const char* name,bool nostackCutback, char* code)ChangeDepth1870,54839
bool LogEndedCleanly()LogEndedCleanly1949,58291
char* myprinter(const char* ptr, char* at, va_list ap)myprinter1954,58385
static FILE* rotateLogOnLimit(const char *fname,const char* directory) {rotateLogOnLimit2047,61684
void PrepIndent()PrepIndent2110,63449
static void IndentLog(int& priordepth,char*& at,int channel,char*& format)IndentLog2131,63772
static void HideFromLog(char*& at)HideFromLog2165,64740
static void LogInput(char* input, FILE* out)LogInput2214,66524
static void NormalLog(const char* name, const char* folder, FILE* out, int channel,int bufLen,boNormalLog2227,66948
static void BugLog(char* name, char* folder, FILE* bug,char* located)BugLog2271,68217
void Prelog(char* user, char* usee, char* incoming)Prelog2316,69847
void LogChat(uint64 starttime, char* user, char* bot, char* IP, int turn, char* input, char* outLogChat2352,70880
unsigned int Log(unsigned int channel, const char * fmt, ...)Log2436,74091

tagger.cpp,3300
unsigned int lowercaseWords;lowercaseWords5,60
unsigned int knownWords;knownWords6,89
unsigned int tagRuleCount = 0;tagRuleCount7,114
uint64* tags = NULL;tags8,145
char** comments = NULL;comments9,166
WORDP wordTag[MAX_SENTENCE_LENGTH]; wordTag12,234
WORDP wordRole[MAX_SENTENCE_LENGTH];wordRole13,271
char* wordCanonical[MAX_SENTENCE_LENGTH]; //   chosen canonical formwordCanonical14,308
WORDP originalLower[MAX_SENTENCE_LENGTH]; // transient during markingoriginalLower15,377
WORDP originalUpper[MAX_SENTENCE_LENGTH]; // transient during markingoriginalUpper16,447
WORDP canonicalLower[MAX_SENTENCE_LENGTH]; // transient during markingcanonicalLower17,517
WORDP canonicalUpper[MAX_SENTENCE_LENGTH]; // transient during markingcanonicalUpper18,588
uint64 finalPosValues[MAX_SENTENCE_LENGTH]; // needed during executionfinalPosValues19,659
uint64 allOriginalWordBits[MAX_SENTENCE_LENGTH];	// starting pos tags in this word position -- sallOriginalWordBits20,730
uint64 lcSysFlags[MAX_SENTENCE_LENGTH];      // transient current system tags lowercase in this lcSysFlags21,855
uint64 posValues[MAX_SENTENCE_LENGTH];			// current pos tags in this word positionposValues22,1008
uint64 canSysFlags[MAX_SENTENCE_LENGTH];		// canonical sys flags lowercase in this word positioncanSysFlags23,1091
unsigned int parseFlags[MAX_SENTENCE_LENGTH];parseFlags24,1189
static unsigned char wasDescribed[256];wasDescribed25,1235
static unsigned char describeVerbal[100];describeVerbal26,1275
static unsigned char describePhrase[100];describePhrase27,1317
static unsigned char describeClause[100];describeClause28,1359
static int describedVerbals;describedVerbals29,1401
static int describedPhrases;describedPhrases30,1430
static int describedClauses;describedClauses31,1459
int phrases[MAX_SENTENCE_LENGTH];phrases34,1541
int clauses[MAX_SENTENCE_LENGTH];clauses35,1575
int verbals[MAX_SENTENCE_LENGTH];verbals36,1609
unsigned char ignoreWord[MAX_SENTENCE_LENGTH];ignoreWord37,1643
unsigned char coordinates[MAX_SENTENCE_LENGTH]; // for conjunctionscoordinates38,1690
unsigned char crossReference[MAX_SENTENCE_LENGTH]; // object back to spawner,  particle back to crossReference39,1758
unsigned char phrasalVerb[MAX_SENTENCE_LENGTH]; // linking verbs and particles (potential)phrasalVerb40,1859
uint64 roles[MAX_SENTENCE_LENGTH];roles41,1950
unsigned char tried[MAX_SENTENCE_LENGTH];tried42,1985
unsigned char objectRef[MAX_SENTENCE_LENGTH] ;  // link from verb to any main object ( allow useobjectRef44,2028
unsigned char indirectObjectRef[MAX_SENTENCE_LENGTH];  // link from verb to any indirect objectindirectObjectRef45,2151
unsigned char complementRef[MAX_SENTENCE_LENGTH ];  // link from verb to any 2ndary complementcomplementRef46,2247
char* GetNounPhrase(int i,const char* avoid)GetNounPhrase49,2361
static char* DescribeComponent(int i,char* buffer,char* open, char* close) // verbal or phrase oDescribeComponent132,5900
static char* Describe(int i,char* buffer)Describe140,6092
static void DescribeUnit( int i, char* buffer, char* msg,int verbal, int clause)DescribeUnit295,10905
void DumpSentence(int start,int end)DumpSentence320,11534
char* roleSets[] = roleSets526,18275
char* GetRole(uint64 role)GetRole540,19341

tokenSystem.cpp,3555
PUNCTUATIONS  , | -  (see also ENDERS)PUNCTUATIONS5,65
BRACKETS 	 () [ ] { } < >__anon658ba05c01027,125
int actualTokenCount = 0;actualTokenCount15,293
#define MAX_BURST MAX_BURST16,319
static char burstWords[MAX_BURST][MAX_WORD_SIZE];	// each token burst from a text stringburstWords17,341
static unsigned int burstLimit = 0;					// index of burst  wordsburstLimit18,430
static WORDP lastMatch = NULL;lastMatch19,495
static int lastMatchLocation = 0;lastMatchLocation20,526
uint64 tokenFlags;										// what tokenization sawtokenFlags22,561
char* wordStarts[MAX_SENTENCE_LENGTH];				// current sentence tokenization (always points to D->wordStarts23,614
 int wordCount;								// how many words/tokens in sentencewordCount24,743
bool capState[MAX_SENTENCE_LENGTH];					capState25,803
bool originalCapState[MAX_SENTENCE_LENGTH];			// was input word capitalized by useroriginalCapState26,844
void ResetTokenSystem()ResetTokenSystem28,929
void DumpResponseControls(uint64 val)DumpResponseControls40,1383
void DumpTokenControls(uint64 val)DumpTokenControls50,1892
void DumpTokenFlags(char* msg)DumpTokenFlags95,4082
int ValidPeriodToken(char* start, char* end, char next,char next2) // token with period in it - ValidPeriodToken140,6243
int BurstWord(const char* word, int contractionStyle) BurstWord180,8491
char* GetBurstWord(unsigned int n) //   0-basedGetBurstWord303,13723
char* JoinWords(unsigned int n,bool output,char* joinBuffer) // JoinWords313,13880
static char* HandleQuoter(char* ptr,char** words, int& count)HandleQuoter347,15174
WORDP ApostropheBreak(char* aword)ApostropheBreak409,17240
static WORDP UnitSubstitution(char* buffer,int i)UnitSubstitution427,17674
static char* FindWordEnd(char* ptr, char* priorToken, char** words, int &count, bool& oobStart, FindWordEnd454,18579
FunctionResult GetDerivationText(int start, int end, char* buffer)GetDerivationText1264,50556
char* Tokenize(char* input,int &mycount,char** words,char* separators,bool all1,bool oobStart) /Tokenize1292,51495
static WORDP MergeProperNoun(int& start, int end,bool upperStart) MergeProperNoun1523,60051
static bool HasCaps(char* word)HasCaps1619,63590
static int FinishName(int& start, int& end, bool& upperStart,uint64 kind,WORDP name)FinishName1630,63930
static void HandleFirstWord() // Handle capitalization of starting word of sentenceHandleFirstWord1666,65293
bool DateZone(int i, int& start, int& end)DateZone1726,67999
bool ParseTime(char* ptr, char** minute, char** meridiem)ParseTime1749,68982
char* FindTimeMeridiem(char* ptr, int len)FindTimeMeridiem1787,69757
void ProcessCompositeDate()ProcessCompositeDate1809,70628
void ProperNameMerge() ProperNameMerge1844,71524
static void MergeNumbers(int& start,int& end) //   four score and twenty = four-score-twentyMergeNumbers2072,81540
void ProcessSplitUnderscores()ProcessSplitUnderscores2151,84466
void ProcessCompositeNumber() ProcessCompositeNumber2181,85445
bool ReplaceWords(char* why,int i, int oldlength,int newlength,char** tokens) ReplaceWords2286,89219
static bool Substitute(WORDP found, char* sub, int i, int erasing)Substitute2332,91071
static WORDP Viability(WORDP word, int i, unsigned int n)Viability2520,97976
static WORDP ViableIdiom(char* text,int i,unsigned int n)ViableIdiom2600,101953
static WORDP ProcessMyIdiom(int i,unsigned int max,char* buffer,char* ptr)ProcessMyIdiom2624,102738
void ProcessSubstitutes() // revise contiguous words based on LIVEDATA filesProcessSubstitutes2763,107225

english.cpp,3905
uint64 posTiming;posTiming4,22
typedef struct EndingInfo EndingInfo6,41
	char* word;	word8,70
	uint64 properties;properties9,84
	uint64 flags;flags10,104
	unsigned int baseflags;baseflags11,119
} EndingInfo;EndingInfo12,144
EndingInfo noun2[] = noun214,160
EndingInfo noun3[] = noun329,564
EndingInfo noun4[] = noun464,1775
EndingInfo noun5[] = noun5101,3094
EndingInfo noun6[] = noun6125,3926
EndingInfo noun7[] = noun7142,4492
EndingInfo verb5[] = verb5150,4612
EndingInfo verb4[] = verb4155,4701
EndingInfo verb3[] = verb3160,4788
EndingInfo verb2[] = verb2168,5033
EndingInfo adverb5[] = adverb5176,5223
EndingInfo adverb4[] = adverb4182,5289
EndingInfo adverb3[] = adverb3188,5382
EndingInfo adverb2[] = adverb2194,5473
EndingInfo adjective7[] = adjective7201,5537
EndingInfo adjective6[] = adjective6206,5647
EndingInfo adjective5[] = adjective5211,5735
EndingInfo adjective4[] = adjective4223,6243
EndingInfo adjective3[] = adjective3241,7226
EndingInfo adjective2[] = adjective2265,8632
EndingInfo adjective1[] = adjective1276,9104
static int64 ProcessNumber(int atloc, char* original, WORDP& revise, WORDP &entry, WORDP &canoniProcessNumber282,9190
bool KnownUsefulWord(WORDP entry)KnownUsefulWord624,21812
WORDP FindGermanPlural(WORDP singular)FindGermanPlural644,22279
uint64 GetPosData( int at, char* original,WORDP& revise, WORDP &entry,WORDP &canonical,uint64& sGetPosData698,23725
void SetSentenceTense(int start, int end)SetSentenceTense1633,59832
static char* MakePastTense(char* original,WORDP D,bool participle)MakePastTense1906,72255
char* GetPastTense(char* original)GetPastTense1993,75022
char* GetPresent(char* word)GetPresent2009,75547
char* GetPastParticiple(char* word)GetPastParticiple2026,76082
char* GetPresentParticiple(char* word)GetPresentParticiple2043,76617
WORDP SuffixAdjust(char* word, int lenword, char* suffix, int lensuffix,uint64 bits)SuffixAdjust2172,81154
static bool ValidateVerb(char* word, int len, char* item, int itemlen, uint64 bits)ValidateVerb2281,85351
static WORDP PrefixWord(char* word, int len)PrefixWord2286,85498
uint64 ProbableVerb(char* original, unsigned int len)ProbableVerb2312,86504
static char* InferVerb(char* original, unsigned int len)InferVerb2374,87895
char* GetAdjectiveMore(char* word)GetAdjectiveMore2385,88174
char* GetAdjectiveMost(char* word)GetAdjectiveMost2407,88754
char* GetAdverbMore(char* word)GetAdverbMore2429,89335
char* GetAdverbMost(char* word)GetAdverbMost2451,89913
char* GetThirdPerson(char* word)GetThirdPerson2471,90431
static WORDP GetInfinitiveCasing(char* word, int len)GetInfinitiveCasing2504,91546
char* GetInfinitive(char* word, bool nonew)GetInfinitive2513,91875
char* GetPluralNoun(char* noun,char* plu)GetPluralNoun2658,96834
static char* InferNoun(char* original,unsigned int len) // from suffix might it be singular nounInferNoun2698,98053
static bool ValidateNoun(char* word, int len, char* item, int itemlen,uint64 bits)ValidateNoun2768,100201
uint64 ProbableNoun(char* original,unsigned int len) // from suffix might it be singular noun? ProbableNoun2773,100342
char* GetSingularNoun(char* word, bool initial, bool nonew)GetSingularNoun2858,102416
static char* InferAdverb(char* original, unsigned int len) // might it be adverb based on suffixInferAdverb2987,107068
uint64 ProbableAdverb(char* original, unsigned int len,uint64& expectedBase) // might it be adveProbableAdverb3039,108365
char* GetAdverbBase(char* word, bool nonew)GetAdverbBase3133,110499
static char* InferAdjective(char* original, unsigned int len) // might it be adjective based on InferAdjective3232,113314
uint64 ProbableAdjective(char* original, unsigned int len,uint64 &expectedBase) // probable adjeProbableAdjective3291,114970
char* GetAdjectiveBase(char* word, bool nonew)GetAdjectiveBase3418,118609

jsmn.cpp,633
static jsmntok_t *jsmn_alloc_token(jsmn_parser *parser,  jsmntok_t *tokens) {jsmn_alloc_token16,308
static void jsmn_fill_token(jsmntok_t *token, jsmntype_t type,  int start, int end) {jsmn_fill_token28,562
static jsmnerr_t jsmn_parse_primitive(jsmn_parser *parser, const char *js, size_t len, jsmntok_tjsmn_parse_primitive38,791
static jsmnerr_t jsmn_parse_string(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tjsmn_parse_string75,1777
jsmnerr_t jsmn_parse(jsmn_parser *parser, const char *js, size_t len, jsmntok_t *tokens) { // ifjsmn_parse134,3434
void jsmn_init(jsmn_parser *parser) {jsmn_init202,5365

makett.sh,0

tagger.h,969
#define __TAGGER____TAGGER__16,1110
#define MAX_TAG_FIELDS MAX_TAG_FIELDS19,1131
 enum IgnoreValue{IgnoreValue21,1157
	NOIGNORE = 0,NOIGNORE22,1176
	IGNOREALL = 1,IGNOREALL23,1191
	IGNOREPAREN = 2,IGNOREPAREN24,1207
#define RESULT_SHIFT RESULT_SHIFT31,1336
#define OFFSET_SHIFT OFFSET_SHIFT32,1403
#define PART1_BIT PART1_BIT33,1470
#define USED_BIT	USED_BIT34,1539
#define PART2_BIT	PART2_BIT36,1626
#define KEEP_BIT	KEEP_BIT37,1753
#define REVERSE_BIT REVERSE_BIT38,1821
#define TRACE_BIT TRACE_BIT39,1891
#define SKIP_OP	SKIP_OP41,1983
#define STAY_OP	STAY_OP42,2013
#define NOT_OP	NOT_OP43,2043
#define CONTROL_SHIFT CONTROL_SHIFT44,2072
#define OP_SHIFT OP_SHIFT45,2149
#define CTRL_SHIFT CTRL_SHIFT46,2214
#define PATTERN_BITS PATTERN_BITS47,2262
#define CONTROL_BITS CONTROL_BITS48,2318
#define AUXQUESTION AUXQUESTION55,2636
#define QWORDQUESTION QWORDQUESTION56,2658
#define MAX_POS_RULES MAX_POS_RULES85,4057

mongodb.cpp,2376
static bool mongoInited = false;		// have we inited mongo overallmongoInited21,523
static bool mongoShutdown = false;mongoShutdown22,589
char* mongoBuffer = NULL;mongoBuffer23,624
char mongodbparams[300];mongodbparams24,650
mongoc_client_t*		g_pClient = NULL;g_pClient27,694
mongoc_database_t*		g_pDatabase = NULL;g_pDatabase28,730
mongoc_collection_t*	g_pCollection = NULL;g_pCollection29,770
mongoc_client_t*		g_filesysClient = NULL;g_filesysClient31,836
mongoc_database_t*		g_filesysDatabase = NULL;g_filesysDatabase32,878
mongoc_collection_t*	g_filesysCollectionTopic = NULL; // user topicg_filesysCollectionTopic33,924
mongoc_collection_t*	g_filesysCollectionLtm = NULL; // user ltmg_filesysCollectionLtm34,992
char* MongoCleanEscapes(char* to, char* at,int limit) MongoCleanEscapes37,1058
void mongoAppendKeys(bson_t *doc, char* var)mongoAppendKeys69,1777
eReturnValue EstablishConnection(	const char* pStrSeverUri, // eg "mongodb://localhost:27017"EstablishConnection93,2550
FunctionResult MongoClose(char* buffer)MongoClose161,5703
FunctionResult MongoInit(char* buffer)MongoInit197,6948
FunctionResult mongoGetDocument(char* key,char* buffer,int limit,bool user)mongoGetDocument223,8032
FunctionResult mongoFindDocument(char* buffer) // from user not system but can name filesys refsmongoFindDocument339,12053
FunctionResult mongoDeleteDocument(char* buffer) mongoDeleteDocument349,12534
static FunctionResult MongoUpsertDoc(mongoc_collection_t* collection,char* keyname, char* value)MongoUpsertDoc418,14799
FunctionResult mongoInsertDocument(char* buffer)mongoInsertDocument493,17525
void MongoUserFilesClose()MongoUserFilesClose507,18205
FILE* mongouserCreate(const char* name) // pretend user topic filename a filemongouserCreate513,18335
FILE* mongouserOpen(const char* name) // pretend user topic filename a filemongouserOpen518,18439
int mongouserClose(FILE*)mongouserClose523,18541
size_t mongouserRead(void* buffer,size_t size, size_t count, FILE* file)mongouserRead528,18583
size_t mongouserWrite(const void* buffer,size_t size, size_t count, FILE* file)mongouserWrite543,19215
void MongoUserFilesInit() // start mongo as fileserverMongoUserFilesInit563,20058
void MongoSystemInit(char* params) // requiredMongoSystemInit584,20691
void MongoSystemShutdown() // requiredMongoSystemShutdown617,21470

csocket.cpp,7141
static int servertransfersize;servertransfersize38,1484
bool echoServer = false;echoServer39,1515
char serverIP[100];serverIP41,1541
static int pass = 0;pass43,1562
static int fail = 0;fail44,1583
typedef unsigned int (*initsystem)(int, char* [], char*, char*, char*, USERFILESYSTEM*, DEBUGAPIinitsystem45,1604
typedef unsigned int (*performchat)(char*, char*, char*, char*, char*) ;performchat46,1713
void GetPrimaryIP(char* buffer)GetPrimaryIP48,1787
#define DOSOCKETS DOSOCKETS108,3585
#define DOSOCKETS DOSOCKETS111,3634
#define DOSOCKETS DOSOCKETS114,3684
SocketException::SocketException(const string &message, bool inclSysMsg)SocketException123,3843
SocketException::~SocketException() throw() {}~SocketException131,4048
const char *SocketException::what() const throw() { return userMessage.c_str(); }what132,4095
static void fillAddr(const string &address, unsigned short myport, sockaddr_in &addr) {fillAddr135,4247
#define MAKEWORDX(MAKEWORDX146,4815
CSocket::CSocket(int type, int protocol) throw(SocketException) {CSocket148,4960
CSocket::CSocket(int sockDesc) { this->sockDesc = sockDesc; }CSocket157,5348
CSocket::~CSocket() {~CSocket159,5411
string CSocket::getLocalAddress() throw(SocketException) {getLocalAddress168,5524
unsigned short CSocket::getLocalPort() throw(SocketException) {getLocalPort175,5839
void CSocket::setLocalPort(unsigned short localPort) throw(SocketException) {setLocalPort182,6152
void CSocket::setLocalAddressAndPort(const string &localAddress,setLocalAddressAndPort204,6919
void CSocket::cleanUp() throw(SocketException) {cleanUp219,7513
unsigned short CSocket::resolveService(const string &service,resolveService225,7663
CommunicatingSocket::CommunicatingSocket(int type, int protocol)  throw(SocketException) : CSockCommunicatingSocket234,8094
CommunicatingSocket::CommunicatingSocket(int newConnSD) : CSocket(newConnSD) {CommunicatingSocket237,8214
void CommunicatingSocket::connect(const string &foreignAddress, unsigned short foreignPort) throconnect240,8296
void CommunicatingSocket::send(const void *buffer, int bufferLen) throw(SocketException) {send249,8712
int CommunicatingSocket::recv(void *buffer, int bufferLen) throw(SocketException) {recv253,8928
string CommunicatingSocket::getForeignAddress()  throw(SocketException) {getForeignAddress259,9172
unsigned short CommunicatingSocket::getForeignPort() throw(SocketException) {getForeignPort266,9504
TCPSocket::TCPSocket() throw(SocketException) : CommunicatingSocket(SOCK_STREAM, IPPROTO_TCP) {TCPSocket275,9854
TCPSocket::TCPSocket(const string &foreignAddress, unsigned short foreignPort) throw(SocketExcepTCPSocket278,9953
TCPSocket::TCPSocket(int newConnSD) : CommunicatingSocket(newConnSD) {TCPSocket282,10147
TCPServerSocket::TCPServerSocket(unsigned short localPort, int queueLen) throw(SocketException) TCPServerSocket287,10248
TCPServerSocket::TCPServerSocket(const string &localAddress, unsigned short localPort, int queueTCPServerSocket292,10433
TCPSocket *TCPServerSocket::accept() throw(SocketException) {accept297,10670
void TCPServerSocket::setListen(int queueLen) throw(SocketException) {setListen303,10902
static void ReadSocket(TCPSocket* sock, char* response)ReadSocket311,11123
static char* FindJMSeparator(char* ptr, char c)FindJMSeparator330,11903
static void Jmetertestfile(bool api,char* bot, char* sendbuffer, char* response, char* data, sizJmetertestfile342,12138
static void ReadNextJmeter(char* name, uint64 value)ReadNextJmeter555,21975
void NoBlankStart(char* ptr, char* where)NoBlankStart607,23606
void Client(char* login)// test client for a serverClient615,23778
#define SERVERTRANSERSIZE SERVERTRANSERSIZE1160,40848
static TCPServerSocket* serverSocket = NULL;serverSocket1170,41087
unsigned int serverFinishedBy = 0; // server must complete by this or not botherserverFinishedBy1172,41133
static char* clientBuffer;			//   current client spot input was and output goesclientBuffer1176,41273
static bool chatWanted = false;		//  client is still expecting answer (has not timed out/cancelechatWanted1177,41353
static bool chatbotExists = false;	//	has chatbot engine been set up and ready to go?chatbotExists1178,41452
static int pendingClients = 0;          // number of clients waiting for server to handle thempendingClients1179,41538
static unsigned int errorCount = 0;errorCount1185,41763
static time_t lastCrash = 0;lastCrash1186,41799
static int loadid = 0;loadid1189,41836
pthread_t chatThread;chatThread1194,41930
static pthread_mutex_t chatLock = PTHREAD_MUTEX_INITIALIZER;	//   access lock to shared chatbot chatLock1195,41952
static pthread_mutex_t testLock = PTHREAD_MUTEX_INITIALIZER;	//   right to use test memorytestLock1196,42059
static pthread_cond_t  server_var = PTHREAD_COND_INITIALIZER; // client ready for server to procserver_var1197,42150
static pthread_cond_t  server_done_var = PTHREAD_COND_INITIALIZER;	// server ready for clint to server_done_var1198,42250
HANDLE  hChatLockMutex;hChatLockMutex1202,42404
CRITICAL_SECTION TestCriticalSection;TestCriticalSection1203,42428
void CloseServer() {CloseServer1206,42474
void* RegressLoad(void* junk)// test load for a serverRegressLoad1213,42576
int pthread_mutex_timedlock(pthread_mutex_t *mutex, const struct timespec *abs_timeout)pthread_mutex_timedlock1299,45184
void GetTestLock() //LINUXGetTestLock1327,45807
void ReleaseTestLock()  //LINUXReleaseTestLock1332,45871
static bool ClientGetChatLock()  //LINUXClientGetChatLock1337,45942
static bool ClientWaitForServer(char* data, char* msg, uint64& timeout) //LINUXClientWaitForServer1344,46087
static void LaunchClient(void* junk) // accepts incoming connections from users  //LINUXLaunchClient1361,46560
static void* ChatbotServer(void* junk)ChatbotServer1384,47297
static void ServerStartup()  //LINUXServerStartup1391,47529
static void ServerGetChatLock()  //LINUXServerGetChatLock1396,47753
void InternetServer()  //LINUXInternetServer1404,47976
void GetTestLock()GetTestLock1430,48772
void ReleaseTestLock()ReleaseTestLock1435,48856
static bool ClientGetChatLock()ClientGetChatLock1440,48944
static bool ClientWaitForServer(char* data, char* msg, uint64& timeout) // windowsClientWaitForServer1459,49533
static void LaunchClient(void* sock)LaunchClient1490,50386
static void ServerStartup()ServerStartup1495,50495
static void ServerGetChatLock() // WINDOWSServerGetChatLock1501,50725
void PrepareServer()PrepareServer1516,51174
void InternetServer()InternetServer1521,51250
static void ServerTransferDataToClient()ServerTransferDataToClient1531,51615
static void* AcceptSockets(void*) // accepts incoming connections from usersAcceptSockets1547,52170
static void* Done(TCPSocket * sock, char* memory)Done1562,52553
static void* HandleTCPClient(void *sock1)  // individual client, data on STACK... might overflowHandleTCPClient1579,52930
void GrabPort() // enable server port if you can... if not, we cannot run. GrabPort1735,58117
static void* MainChatbotServer()MainChatbotServer1749,58596

infer.cpp,3667
#define MAX_PARENTS MAX_PARENTS5,68
#define MAX_QUEUE MAX_QUEUE6,93
#define FOLLOW_LIMIT FOLLOW_LIMIT7,117
static MEANING parents[MAX_PARENTS+20];	// nodes above where we are nowparents9,142
static int parentIndex = 0;		// add into parents at hereparentIndex10,214
static int parentWalk = 0;		// retrieve from parents starting here. when reach parentIndex you hparentWalk11,271
static unsigned int currentBaseInfer;	// start of reserved markscurrentBaseInfer12,379
static unsigned int currentFreeInfer;	// marks before this are reservedcurrentFreeInfer13,444
unsigned int inferMark = 0;				// primary "been-here" mark for all inferencing and tree traversainferMark15,517
static unsigned int saveMark = 0;		// tertiary mark - used in zone 1 controlsaveMark16,616
static unsigned int ignoremark = 0;		// mark on entries to ignoreignoremark17,693
static WORDP fact = 0;fact18,759
#define ORIGINALWORD ORIGINALWORD20,783
#define NORMAL	NORMAL21,815
#define QUOTED	QUOTED22,889
#define PREMARK	PREMARK23,955
#define NOQUEUE	NOQUEUE24,1045
#define QUEUE	QUEUE25,1115
#define NOTOPIC	NOTOPIC26,1157
#define BLOCKMEANING BLOCKMEANING27,1219
#define FACTTYPE	FACTTYPE28,1251
#define FINDTOPIC	FINDTOPIC29,1280
#define UPDICTIONARY UPDICTIONARY30,1310
#define USERFACTS	USERFACTS31,1342
#define SYSTEMFACTS	SYSTEMFACTS32,1372
#define FINDCONCEPT	FINDCONCEPT33,1404
#define USE_ORIGINAL_SUBJECT	USE_ORIGINAL_SUBJECT35,1450
#define USE_ORIGINAL_OBJECT	USE_ORIGINAL_OBJECT36,1522
#define RICCOCHET_USING_SUBJECT	RICCOCHET_USING_SUBJECT37,1593
#define RICCOCHET_USING_OBJECT	RICCOCHET_USING_OBJECT38,1639
#define RICCOCHET_BITS RICCOCHET_BITS39,1683
static MEANING queue[MAX_QUEUE+20]; queue42,1840
static unsigned int queueIndex;queueIndex43,1877
FACT* factSet[MAX_FIND_SETS+2][MAX_FIND+1]; factSet46,1954
int	  factFlags[MAX_FIND+1];factFlags47,1999
int	  factIndex[MAX_FIND+1];factIndex48,2028
unsigned int factSetNext[MAX_FIND_SETS+1];		// when walking a set over time, which index to contfactSetNext49,2057
unsigned int NextInferMark() // set up for a new inferenceNextInferMark53,2228
FACT* IsConceptMember(WORDP D)IsConceptMember58,2316
static bool IsExcluded(WORDP set,WORDP item)IsExcluded70,2546
static bool SetContains1(MEANING set,MEANING M, unsigned int depth) SetContains185,2866
bool SetContains(MEANING set,MEANING M) SetContains168,5150
static bool AllowedMember(FACT* F, unsigned int i,unsigned int is,unsigned int index)AllowedMember175,5270
static void QueryFacts(WORDP original, WORDP D,unsigned int index,unsigned int store,char* kind,QueryFacts200,5955
FunctionResult QueryTopicsOf(char* word,unsigned int store,char* kind) // find topics referred tQueryTopicsOf253,8044
static bool AddWord2Scan(int flags,MEANING M,MEANING from,int depth,unsigned int type) // mark (AddWord2Scan264,8452
static bool AddWordOnly(int flags,char* word,unsigned int type) // mark (and maybe queue) this wAddWordOnly333,10610
static void AddWordOrSet2Scan(unsigned int how, char* word,int depth)AddWordOrSet2Scan348,11148
static void AddSet2Scan(unsigned int how,WORDP D,int depth)AddSet2Scan372,11793
static void ScanHierarchy(MEANING T,int savemark,unsigned int flowmark,bool up,unsigned int flagScanHierarchy384,12138
static bool Riccochet(unsigned int baseFlags, FACT* G,int set,unsigned int limit,unsigned int rmRiccochet452,14963
static bool ConceptPropogateTest(MEANING M,unsigned int mark,unsigned int depth)  // is this meaConceptPropogateTest504,17472
unsigned int Query(char* kind, char* subjectword, char* verbword, char* objectword, unsigned intQuery533,18527

constructCode.h,86
#define _CONSTRUCTCODEH__CONSTRUCTCODEH_2,25
#define ACCELLSIZE ACCELLSIZE17,1140

evserver.h,162
#define __EVSERVER_H____EVSERVER_H__20,1195
              typedef char raw_type;       raw_type25,1288
              typedef int socklen_t;socklen_t26,1332

userCache.cpp,1873
#define NO_CACHEID NO_CACHEID3,21
static unsigned int cacheHead = 0;		// our marker for last allocated cache, used to find next frcacheHead5,44
static unsigned int* cacheIndex = NULL;	// data ring of the caches + timestamp/volley infocacheIndex6,147
char* cacheBase = NULL;					// start of contiguous cache block of cachescacheBase7,238
static int currentCache = NO_CACHEID;	// the current user file buffercurrentCache8,311
unsigned int userCacheCount = 1;		// holds 1 user by defaultuserCacheCount9,381
unsigned int userCacheSize = DEFAULT_USER_CACHE; // size of user file buffer (our largest bufferuserCacheSize10,442
int volleyLimit =  -1;					// default save user records to file every n volley (use default 0 ifvolleyLimit11,541
char* userDataBase = NULL;				// current write user record baseuserDataBase12,671
unsigned int userTopicStoreSize = 0;userTopicStoreSize13,735
unsigned int userTableSize = 0; // memory used which we will displayuserTableSize14,772
void InitUserCache()InitUserCache16,842
void CloseUserCache()CloseUserCache46,2080
static void WriteCache(unsigned int which,size_t size)WriteCache52,2159
void FlushCache() // writes out the cache but does not invalidate itFlushCache120,4479
char* GetFreeCache() // allocate backwards from current, so in use is always NEXT from currentGetFreeCache132,4765
void FreeUserCache()FreeUserCache149,5489
void FreeAllUserCaches()FreeAllUserCaches159,5707
char* FindUserCache(char* word)FindUserCache173,6142
void CopyUserTopicFile(char* newname)CopyUserTopicFile208,7062
char* GetFileRead(char* user,char* computer)GetFileRead219,7609
char* GetCacheBuffer(int which)GetCacheBuffer282,9702
char* GetUserFileBuffer() // when we need a really big buffer (several megabytes)GetUserFileBuffer287,9860
void Cache(char* buffer, size_t size) // save into cacheCache292,9971

mssql_imp.h,305
#define MSSQLIMPH_MSSQLIMPH_4,77
enum ConnectionId { None = -1, User = 0, Script = 1 };ConnectionId6,97
enum ConnectionId { None = -1, User = 0, Script = 1 };None6,97
enum ConnectionId { None = -1, User = 0, Script = 1 };User6,97
enum ConnectionId { None = -1, User = 0, Script = 1 };Script6,97

dictionarySystem.cpp,21676
The dictionary consists of data imported from WORDNET 3.0 (copyright notice at end of file) + aufile9,244
Some words DO NOT have a master node.Their meaning is defined to be themselves(things like pronodeterminers29,1907
(identifying the word) and an index into that words meaning list(identifying the specific meaninword35,2407
allocated linearly forward in the pool.Strings have their own pool(the heap).heap44,3103
bool dictionaryBitsChanged = false;dictionaryBitsChanged66,4652
HEAPREF propertyRedefines = NULL;	// property changes on locked dictionary entriespropertyRedefines67,4688
HEAPREF flagsRedefines = NULL;		// systemflags changes on locked dictionary entriesflagsRedefines68,4771
HEAPREF ongoingDictChanges = NULL;  // ability to revert dynamic changesongoingDictChanges69,4855
bool monitorDictChanges = false;monitorDictChanges70,4928
static int freeTriedList = 0;freeTriedList71,4961
bool xbuildDictionary = false;				// indicate when building a dictionaryxbuildDictionary72,4991
char dictionaryTimeStamp[20];		// indicate when dictionary was builtdictionaryTimeStamp73,5064
const char* mini = ""; // what languagemini74,5133
unsigned int* hashbuckets = 0;hashbuckets75,5173
unsigned int wordAccessCount = 0;    // number of words looked up in this volleywordAccessCount77,5205
unsigned int bucketDepthCount = 0;   // sum of depths required for each word lookupbucketDepthCount78,5286
static unsigned char* writePtr;				// used for binary dictionary writeswritePtr80,5371
unsigned long maxHashBuckets = MAX_HASH_BUCKETS;maxHashBuckets83,5459
bool setMaxHashBuckets = false;setMaxHashBuckets84,5508
uint64 maxDictEntries = MAX_DICTIONARY;maxDictEntries85,5540
MEANING posMeanings[64];				// concept associated with propertyFlags of WORDsposMeanings87,5581
MEANING sysMeanings[64];				// concept associated with systemFlags of WORDssysMeanings88,5659
std::map <WORDP, WORDP> irregularNouns;irregularNouns92,5772
std::map <WORDP, WORDP> irregularVerbs;irregularVerbs93,5812
std::map <WORDP, WORDP> irregularAdjectives;irregularAdjectives94,5852
std::map <WORDP, WORDP> canonicalWords;canonicalWords95,5897
std::map <WORDP, int> wordValues; // per volleywordValues96,5937
std::map <WORDP, MEANING> backtracks; // per volleybacktracks97,5985
std::map <WORDP, int> triedData; // per volley index into heap spacetriedData98,6037
std::map <WORDP, int> countData;countData99,6106
HEAPREF concepts[MAX_SENTENCE_LENGTH];  // concept chains per wordconcepts101,6140
HEAPREF topics[MAX_SENTENCE_LENGTH];  // topics chains per wordtopics102,6207
bool fullDictionary = true;				// we have a big master dictionary, not a mini dictionaryfullDictionary104,6272
bool primaryLookupSucceeded = false;primaryLookupSucceeded105,6361
bool TraceHierarchyTest(int x)TraceHierarchyTest109,6434
MEANING GetMeaning(WORDP D, int index)GetMeaning116,6640
void SetTried(WORDP D, int value)SetTried123,6827
void RemoveConceptTopic(HEAPREF list[256], WORDP D, int index)RemoveConceptTopic128,6889
void Add2ConceptTopicList(HEAPREF list[256], WORDP D, int start, int end, bool unique)Add2ConceptTopicList148,7346
void ClearHeapThreads()ClearHeapThreads163,7682
void ClearVolleyWordMaps()ClearVolleyWordMaps181,8366
void ClearWordMaps() // both static for whole dictionary and dynamic per volleyClearWordMaps189,8510
void ClearWhereAt(int where) // remove all concepts and markings at this slot in sentenceClearWhereAt199,8770
void ClearWordWhere(WORDP D, int at)ClearWordWhere277,10993
void ClearWhereInSentence() // erases  the WHEREINSENTENCE and the TRIEDBITSClearWhereInSentence292,11267
void ClearTriedData() // erases  the WHEREINSENTENCE and the TRIEDBITSClearTriedData309,11793
void SetFactBack(WORDP D, MEANING M)SetFactBack315,11909
MEANING GetFactBack(WORDP D)GetFactBack323,12004
void ClearBacktracks()ClearBacktracks330,12155
unsigned int GetAccess(WORDP D)GetAccess335,12204
unsigned char* GetWhereInSentence(WORDP D) // [0] is the meanings bits,  the rest are start/end/GetWhereInSentence344,12382
int CopyWhereInSentence(int oldindex)CopyWhereInSentence351,12669
unsigned int* AllocateWhereInSentence(WORDP D)AllocateWhereInSentence363,13199
void SetTriedMeaningWithData(uint64 bits, unsigned int* data)SetTriedMeaningWithData384,14025
void SetTriedMeaning(WORDP D, uint64 bits)SetTriedMeaning390,14222
uint64 GetTriedMeaning(WORDP D) // which meanings have been used (up to 64)GetTriedMeaning402,14558
void SetPlural(WORDP D, MEANING M)SetPlural414,14966
void SetComparison(WORDP D, MEANING M)SetComparison419,15104
void SetTense(WORDP D, MEANING M)SetTense424,15251
void SetCanonical(WORDP D, MEANING M)SetCanonical429,15388
WORDP RawCanonical(WORDP D)RawCanonical434,15530
WORDP GetCanonical(WORDP D)GetCanonical442,15697
WORDP GetTense(WORDP D)GetTense460,16293
WORDP GetPlural(WORDP D)GetPlural467,16448
WORDP GetComparison(WORDP D)GetComparison474,16604
void SetWordValue(WORDP D, int x)SetWordValue481,16774
int GetWordValue(WORDP D)GetWordValue486,16833
WORDP dictionaryBase = NULL;			// base of allocated space that encompasses dictionary, heap spacdictionaryBase494,17016
WORDP dictionaryFree = NULL;				// current next dict space available going forward (not a valid dictionaryFree495,17128
WORDP dictionaryPreBuild[NUMBER_OF_LAYERS + 1];dictionaryPreBuild498,17263
char* heapPreBuild[NUMBER_OF_LAYERS + 1];heapPreBuild499,17311
WORDP dictionaryLocked = NULL;dictionaryLocked503,17433
FACT* factLocked = 0;factLocked504,17464
char* stringLocked;stringLocked505,17486
uint64 verbFormat;verbFormat508,17535
uint64 nounFormat;nounFormat509,17554
uint64 adjectiveFormat;adjectiveFormat510,17573
uint64 adverbFormat;adverbFormat511,17597
WORDP Dplacenumber;Dplacenumber514,17654
WORDP Dpropername;Dpropername515,17674
MEANING Mphrase;Mphrase516,17693
MEANING MabsolutePhrase;MabsolutePhrase517,17710
MEANING MtimePhrase;MtimePhrase518,17735
WORDP Dclause;Dclause519,17756
WORDP Dverbal;Dverbal520,17771
WORDP Dmalename, Dfemalename, Dhumanname;Dmalename521,17786
WORDP Dmalename, Dfemalename, Dhumanname;Dfemalename521,17786
WORDP Dmalename, Dfemalename, Dhumanname;Dhumanname521,17786
WORDP Dtime;Dtime522,17828
WORDP Dunknown;Dunknown523,17841
WORDP Dchild, Dadult;Dchild524,17857
WORDP Dchild, Dadult;Dadult524,17857
WORDP Dtopic;Dtopic525,17879
MEANING Mchatoutput;Mchatoutput526,17893
MEANING Mburst;Mburst527,17914
MEANING Mpending;Mpending528,17930
MEANING Mkeywordtopics;Mkeywordtopics529,17948
MEANING Mconceptlist;Mconceptlist530,17972
MEANING Mmoney;Mmoney531,17994
MEANING Mintersect;Mintersect532,18010
MEANING MgambitTopics;MgambitTopics533,18030
MEANING MadjectiveNoun;MadjectiveNoun534,18053
MEANING Mnumber;Mnumber535,18077
WORDP Dpronoun;Dpronoun536,18094
WORDP Dadjective;Dadjective537,18110
WORDP Dauxverb;Dauxverb538,18128
WORDP DunknownWord;DunknownWord539,18144
static char* predefinedSets[] = //  some internally mapped concepts not including emotions from predefinedSets541,18165
void RestorePropAndSystem(char* stringUsed)RestorePropAndSystem555,19134
void DictionaryRelease(WORDP until, char* stringUsed)DictionaryRelease574,19749
char* UseDictionaryFile(const char* name)UseDictionaryFile582,20098
MEANING FindChild(MEANING who, int n)FindChild598,20528
bool ReadForeignPosTags(const char* fname)ReadForeignPosTags613,20867
unsigned char BitCount(uint64 n)BitCount652,22085
WORDP GetSubstitute(WORDP D)GetSubstitute663,22208
static void EraseFile(const char* file)EraseFile670,22347
void ClearDictionaryFiles()ClearDictionaryFiles676,22460
void BuildDictionary(char* label)BuildDictionary696,22997
void InitDictionary()InitDictionary765,25159
void AddInternalFlag(WORDP D, unsigned int flag)AddInternalFlag814,26899
void RemoveInternalFlag(WORDP D, unsigned int flag)RemoveInternalFlag825,27268
static void PreserveSystemFlags(WORDP D)PreserveSystemFlags830,27356
void AddSystemFlag(WORDP D, uint64 flag)AddSystemFlag835,27483
void AddParseBits(WORDP D, unsigned int flag)AddParseBits847,28098
void RemoveSystemFlag(WORDP D, uint64 flags)RemoveSystemFlag858,28412
static void PreserveProperty(WORDP D)PreserveProperty867,28583
void ReverseDictionaryChanges(HEAPREF start)ReverseDictionaryChanges872,28709
void AddProperty(WORDP D, uint64 flag)AddProperty886,28951
void RemoveProperty(WORDP D, uint64 flags)RemoveProperty909,29938
bool StricmpUTF(char* w1, char* w2, int len)StricmpUTF918,30108
int GetWords(char* word, WORDP * set, bool strictcase)GetWords968,31370
int UTFCharSize(char* utf)UTFCharSize1022,33291
WORDP FindWord(const char* word, unsigned int len, uint64 caseAllowed)FindWord1034,33653
WORDP AllocateEntry()AllocateEntry1118,37069
WORDP StoreWord(int val) // create a number wordStoreWord1129,37368
WORDP StoreWord(const char* word, uint64 properties, uint64 flags)StoreWord1136,37511
WORDP StoreWord(const char* word, uint64 properties)StoreWord1142,37659
void AddCircularEntry(WORDP base, unsigned int field, WORDP entry)AddCircularEntry1238,41318
void WalkDictionary(DICTIONARY_FUNCTION func, uint64 data)WalkDictionary1285,42180
void DeleteDictionaryEntry(WORDP D)DeleteDictionaryEntry1297,42409
void ShowStats(bool reset)ShowStats1306,42796
void WriteDictDetailsBeforeLayer(int layer)WriteDictDetailsBeforeLayer1337,44124
static void ReadDictDetailsBeforeLayer(int layer)ReadDictDetailsBeforeLayer1365,44885
void WordnetLockDictionary() // dictionary and facts before build0 layer WordnetLockDictionary1402,45795
void ReturnDictionaryToWordNet() // drop all memory allocated after the wordnet freezeReturnDictionaryToWordNet1408,46038
void LockLevel()LockLevel1413,46185
void UnlockLayer(int layer)UnlockLayer1421,46407
void LockLayer(bool boot)LockLayer1429,46537
void ReturnToAfterLayer(int layer, bool unlocked)ReturnToAfterLayer1450,47156
void ReturnBeforeLayer(int layer, bool unlocked)ReturnBeforeLayer1471,47997
void CloseDictionary()CloseDictionary1489,48720
void FreeDictionary()FreeDictionary1495,48789
static void Write8(unsigned int val, FILE * out)Write81503,48918
static void Write16(unsigned int val, FILE * out)Write161511,49075
void Write24(unsigned int val, FILE * out)Write241524,49313
void Write32(unsigned int val, FILE * out)Write321538,49578
void Write64(uint64 val, FILE * out)Write641553,49877
void WriteDWord(WORDP ptr, FILE * out)WriteDWord1572,50306
static void WriteString(char* str, FILE * out)WriteString1587,50616
static void WriteBinaryEntry(WORDP D, FILE * out)WriteBinaryEntry1603,50897
void WriteBinaryDictionary()WriteBinaryDictionary1676,53102
static unsigned char Read8(FILE * in)Read81699,53997
static unsigned short Read16(FILE * in)Read161709,54150
static unsigned int Read24(FILE * in)Read241723,54390
unsigned int Read32(FILE * in)Read321739,54662
uint64 Read64(FILE * in)Read641758,54997
WORDP ReadDWord(FILE * in)ReadDWord1798,55711
static char* ReadString(FILE * in)ReadString1815,56002
static WORDP ReadBinaryEntry(FILE * in)ReadBinaryEntry1836,56435
bool ReadBinaryDictionary()ReadBinaryDictionary1924,58774
char* WriteDictionaryFlags(WORDP D, char* outbuf)WriteDictionaryFlags1958,59652
char* GetGloss(WORDP D, unsigned int index)GetGloss2053,62124
unsigned int GetGlossIndex(WORDP D, unsigned int index)GetGlossIndex2059,62283
static void WriteDictionaryReference(char* label, WORDP D, FILE * out)WriteDictionaryReference2071,62550
void WriteDictionary(WORDP D, uint64 data)WriteDictionary2078,62756
char* ReadDictionaryFlags(WORDP D, char* ptr, unsigned int* meaningcount, unsigned int* glosscouReadDictionaryFlags2161,65759
void AddGloss(WORDP D, char* glossy, unsigned int index) // only a synset head can have a glossAddGloss2221,67895
static MEANING AddTypedMeaning(WORDP D, unsigned int type)AddTypedMeaning2249,69132
MEANING AddMeaning(WORDP D, MEANING M)AddMeaning2256,69361
MEANING GetMaster(MEANING T)GetMaster2292,70990
void RemoveMeaning(MEANING M, MEANING M1)RemoveMeaning2324,72117
MEANING ReadMeaning(char* word, bool create, bool precreated)ReadMeaning2341,72594
bool ReadDictionary(char* file)ReadDictionary2421,75315
MEANING MakeTypedMeaning(WORDP x, unsigned int y, unsigned int flags)MakeTypedMeaning2500,78225
MEANING MakeMeaning(WORDP x, unsigned int y) //   compose a meaningMakeMeaning2505,78431
WORDP Meaning2Word(MEANING x) //   convert meaning to its dictionary entryMeaning2Word2510,78599
unsigned int GetMeaningType(MEANING T)GetMeaningType2516,78749
MEANING FindSynsetParent(MEANING T, unsigned int which) //  presume we are at the master, next wFindSynsetParent2527,79150
MEANING FindSetParent(MEANING T, int n) //   next set parentFindSetParent2551,79814
void SuffixMeaning(MEANING T, char* at, bool withPos)SuffixMeaning2578,80713
unsigned int GETTYPERESTRICTION(MEANING x)GETTYPERESTRICTION2607,81384
char* WriteMeaning(MEANING T, bool withPos, char* buf)WriteMeaning2614,81558
char* GetWord(char* word)GetWord2646,82291
void NoteLanguage()NoteLanguage2653,82412
void UndoSubstitutes(HEAPREF list)UndoSubstitutes2660,82573
HEAPREF SetSubstitute(const char* name, char* originalx, char* replacementx, unsigned int build,SetSubstitute2677,82987
void ReadSubstitutes(const char* name, unsigned int build, const char* layer, unsigned int fileFReadSubstitutes2814,88102
void ReadWordsOf(char* name, uint64 mark)ReadWordsOf2871,90194
void ReadCanonicals(const char* file, const char* layer)ReadCanonicals2895,90877
void ReadAbbreviations(char* name)ReadAbbreviations2932,92010
void ReadQueryLabels(char* name)ReadQueryLabels2951,92469
static void ReadPosPatterns(char* file)ReadPosPatterns2987,93480
void ReadLivePosData()ReadLivePosData3369,106358
static void ReadPlurals(char* file)ReadPlurals3416,108090
void ReadLiveData() // occurs after all topic data loaded, so dictionary entries are not disturbReadLiveData3441,108760
static void ReadAsciiDictionary()ReadAsciiDictionary3466,109845
void VerifyEntries(WORDP D, uint64 junk) // prove meanings have synset heads and major kinds havVerifyEntries3484,110318
void LoadDictionary(char* heapstart)LoadDictionary3713,117041
WORDP BUILDCONCEPT(char* word)BUILDCONCEPT3786,120326
void ExtendDictionary()ExtendDictionary3793,120440
char* FindCanonical(char* word, int i, bool notNew)FindCanonical3836,122367
bool IsHelper(char* word)IsHelper3925,125111
bool IsFutureHelper(char* word)IsFutureHelper3931,125270
bool IsPresentHelper(char* word)IsPresentHelper3937,125442
bool IsPastHelper(char* word)IsPastHelper3943,125680
void DumpDictionaryEntry(char* word, unsigned int limit)DumpDictionaryEntry3949,125890
typedef std::map <char*, int> MapType;MapType4290,136939
static char base[MAX_WORD_SIZE];base4292,136979
#define DICTBEGIN DICTBEGIN4293,137012
#define MAINFOUND MAINFOUND4294,137032
#define FUNCTIONFOUND FUNCTIONFOUND4295,137052
#define SPEECHFOUND SPEECHFOUND4296,137076
#define GLOSSFOUND GLOSSFOUND4297,137098
#define BASEFOUND BASEFOUND4298,137119
static WORDP Dqword;Dqword4299,137139
static bool didSomething;didSomething4301,137217
Pertainyms are relational adjectivesand do not follow the structure just described.Pertainyms doantonyms4310,138217
static WORDP FindCircularEntry(WORDP baseentry, uint64 propertyBit)FindCircularEntry4319,138823
static void FixSynsets(WORDP D, uint64 data)FixSynsets4333,139155
static void ExtractSynsets(WORDP D, uint64 data) // now rearrange to get synsets inlineExtractSynsets4367,140110
static void PurgeDictionary(WORDP D, uint64 data)PurgeDictionary4453,142926
static void RemoveComments(char* at)RemoveComments4591,146760
static void RemoveTrailingWhite(char* ptr)RemoveTrailingWhite4604,147068
static int fget_input_string(bool cpp, bool postprocess, char* input_string, FILE * in)fget_input_string4613,147347
static void AddQuestionAdverbs()AddQuestionAdverbs4626,147769
static char* ReadWord(char* ptr, char* spot) //   mass of  non-whitespaceReadWord4681,150886
bool IgnoreEntry(char* word)IgnoreEntry4704,151578
static void readIndex(const char* file, uint64 prior)readIndex4717,151994
static void readData(const char* file)readData4797,154508
static void readConjunction(const char* file)readConjunction5220,169651
static void readWordKind(const char* file, unsigned int flags)readWordKind5256,170610
static void readPrepositions(const char* file, bool addmeaning)readPrepositions5336,172797
static void readSpellingExceptions(const char* file) // dont double consonants when making past readSpellingExceptions5366,173739
static void AdjNotPredicate(const char* file)AdjNotPredicate5389,174360
static bool readPronouns(const char* file)readPronouns5415,174973
static void readHomophones(const char* file)readHomophones5453,175921
static void AdjustAdjectiveAdverb(WORDP D, uint64 junk) // fix comparitives that look like normaAdjustAdjectiveAdverb5486,176773
static void ReadBNCPosData()ReadBNCPosData5541,178770
static void readFix(const char* file, uint64 flag) //   locate a base form from an inflectionreadFix5615,181070
static void ReadTitles(const char* file)ReadTitles5703,184474
static void InsurePhrasalMeaning(char* verb, char* gloss)InsurePhrasalMeaning5729,185123
static void ReadPhrasalVerb(const char* file)ReadPhrasalVerb5771,186469
static void readCommonness()readCommonness5816,187745
static void readSupplementalWord(const char* file, uint64 wordkind, uint64 flags)readSupplementalWord5843,188763
static void ReadDeterminers(const char* file)ReadDeterminers6016,194762
static void ReadSystemFlaggedWords(const char* file, uint64 flags)ReadSystemFlaggedWords6059,195912
static void ReadParseWords(const char* file)ReadParseWords6085,196540
static void readParticipleVerbs(const char* file) // verbs that should be considered adjective preadParticipleVerbs6128,197427
static void readNounNoDeterminer(const char* file)readNounNoDeterminer6150,198096
static void readMonths(const char* file)readMonths6181,198982
static void readFirstNames(const char* file) //   human sexed first namesreadFirstNames6209,199604
static void readReducedFirstNames(const char* file) //   human sexed first namesreadReducedFirstNames6243,200717
static void readNames(const char* file, uint64 flag, uint64 sys)readNames6283,201916
static void readNonWords(const char* file)readNonWords6329,203384
static void readNonNames(const char* file)readNonNames6356,204003
static void RemoveSynSet(MEANING T)RemoveSynSet6384,204785
static void readNonPos(const char* file)readNonPos6420,205881
static void readOnomatopoeia(const char* file)readOnomatopoeia6501,208084
static void SetHelper(const char* word, uint64 flags)SetHelper6532,208826
static void readIrregularVerbs(const char* file)readIrregularVerbs6541,209174
static void readIrregularNouns(const char* file)readIrregularNouns6635,212108
static void readIrregularAdverbs(const char* file)readIrregularAdverbs6674,213439
static void readWordByAge(const char* file, uint64 gradelearned)readWordByAge6711,214501
static void ReadSexed(const char* file, uint64 properties)ReadSexed6786,216310
static char* EatQuotedWord(char* ptr, char* spot) //   contiguous mass of charactersEatQuotedWord6808,216981
void ReadTriple(const char* file)ReadTriple6847,217963
static FACT* UpLink(MEANING M)UpLink6885,218991
static void PostFixNumber(WORDP D, uint64 junk)PostFixNumber6898,219239
static void VerifyDictEntry(WORDP D, uint64 junk)VerifyDictEntry6903,219361
static void ReadDeadSynset(const char* name)ReadDeadSynset7071,226356
static void ReadDeadFacts(const char* name) //   kill these WordNet factsReadDeadFacts7103,227165
static void DeleteAllWords(WORDP D, uint64 junk)DeleteAllWords7124,227703
static void CheckShortFacts()CheckShortFacts7154,229299
static void CheckShortDictionary(const char* name, bool pattern)CheckShortDictionary7230,231568
static bool IsAbstract(FACT * F1, unsigned int depth)IsAbstract7311,234162
static void MarkAbstract(WORDP D, uint64 junk)MarkAbstract7327,234495
static void CleanDead(WORDP D, uint64 junk) // insure all synonym circulars point only to livingCleanDead7355,235065
static void ReviveWords(WORDP D, uint64 junk) // now that dead meaning references have been striReviveWords7425,238237
static void AddShortDict(const char* name)AddShortDict7475,239392
static void MoveSetsToBase(WORDP D, uint64 junk)MoveSetsToBase7507,240239
void ReadForeign()ReadForeign7512,240424
static void ReadEnglish(int minid)ReadEnglish7547,241330
static void AddFlagDownHierarchy(MEANING T, unsigned int depth, uint64 flag)AddFlagDownHierarchy7726,250946
static void readPluralNouns(const char* file) // have no singular formreadPluralNouns7783,252384
static void readMassNouns(const char* file)readMassNouns7812,253075
void LoadRawDictionary(int minid) // 6 == foreignLoadRawDictionary7851,254162
void SortAffect(const char* file)SortAffect7928,257812
void SortSubstitions(const char* file)SortSubstitions7989,259344
static void WriteShortWords(WORDP D, uint64 junk)WriteShortWords8046,260840
static void MarkOtherForms(WORDP D)MarkOtherForms8055,261003
static void DefineShortCanonicals(WORDP D, uint64 junk)DefineShortCanonicals8085,261606
static void ReadWordFrequency(const char* name, unsigned int count, bool until)ReadWordFrequency8093,261773
void BuildShortDictionaryBase()BuildShortDictionaryBase8126,262743
void ReadBNC(const char* buffer)ReadBNC8133,262896

mysql.cpp,1679
static MYSQL_BIND readbind[1];readbind9,147
static MYSQL_BIND resultbind[1];resultbind10,178
static 	MYSQL_BIND writebind[2];writebind11,211
static 	unsigned long datalength = 0;datalength12,244
static 	my_bool is_null;is_null13,282
static 	my_bool is_error;is_error14,307
static bool mysqlInited = false;mysqlInited17,350
static MYSQL *usersconn = NULL;usersconn20,403
char mysqlUserFilename[MAX_WORD_SIZE]; // current topic file name for usermysqlUserFilename21,435
static MYSQL *scriptconn = NULL;scriptconn24,531
MYSQL_STMT *mystmt_script = NULL;mystmt_script25,564
char mysqlparams[300]; // init string for file system using mysqlmysqlparams28,623
static char mysqlhost[300];mysqlhost30,781
static unsigned int mysqlport;mysqlport31,809
static char mysqldb[300];mysqldb32,840
static char mysqluser[300];mysqluser33,866
static char mysqlpasswd[300];mysqlpasswd34,894
static void GetMySQLParams(char* params)GetMySQLParams48,1849
FILE* mysqlUserCreate(const char* name)mysqlUserCreate75,2697
FILE* mysqlUserOpen(const char* name)mysqlUserOpen83,2969
int mysqlUserClose(FILE*)mysqlUserClose91,3236
size_t mysqlUserRead(void* buf,size_t size, size_t count, FILE* file)mysqlUserRead96,3346
static size_t mysqlUserWrite(const void* buf, size_t size, size_t count, FILE* file)mysqlUserWrite168,5613
void MySQLUserFilesCode(char* params)MySQLUserFilesCode207,6989
void MySQLFullCloseCode(bool restart)MySQLFullCloseCode280,9304
FunctionResult MySQLInitCode(char* buffer)MySQLInitCode305,9889
FunctionResult MySQLCloseCode(char* buffer)MySQLCloseCode337,10744
FunctionResult MySQLQueryCode(char* buffer)MySQLQueryCode345,10901

Makefile,17642
.PHONY = clean binary server debugserver standalone pgserver debugpgserver mysqlserver debugmysq.PHONY1,0
default: oldserverdefault15,587
executable.oldserver=../BINARIES/ChatScriptexecutable.oldserver18,680
oldserver: DEFINES+= -DLOCKUSERFILE=1  -DEVSERVER=1 -DEVSERVER_FORK=1  -DDISCARDPOSTGRES=1 -DDISoldserver19,724
oldserver: PGLOAD= -pthreadoldserver20,902
oldserver: PGLOAD= -pthreadPGLOAD20,902
oldserver: INCLUDEDIRS=-Ievserveroldserver21,930
oldserver: INCLUDEDIRS=-IevserverINCLUDEDIRS21,930
oldserver: binaryoldserver22,964
oldserver: EXECUTABLE=$(executable.server)oldserver23,982
oldserver: EXECUTABLE=$(executable.server)EXECUTABLE23,982
oldserver: CFLAGS=-c  -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptsoldserver24,1025
oldserver: CFLAGS=-c  -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptsCFLAGS24,1025
executable.debugserver=../BINARIES/ChatScriptDebugexecutable.debugserver26,1148
debugserver: DEFINES+= -DLOCKUSERFILE=1 -DDISCARDPOSTGRES=1 -DDISCARDMONGO=1 -DDISCARDMYSQL=1  -debugserver27,1199
debugserver: PGLOAD= -pthreaddebugserver28,1388
debugserver: PGLOAD= -pthreadPGLOAD28,1388
debugserver: INCLUDEDIRS=-Ievserverdebugserver29,1418
debugserver: INCLUDEDIRS=-IevserverINCLUDEDIRS29,1418
debugserver: binarydebugserver30,1454
debugserver: EXECUTABLE=$(executable.debugserver)debugserver31,1474
debugserver: EXECUTABLE=$(executable.debugserver)EXECUTABLE31,1474
debugserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptdebugserver32,1524
debugserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptCFLAGS32,1524
executable.standalone=../BINARIES/ChatScriptexecutable.standalone34,1657
standalone: DEFINES+=  -DDISCARDSERVER=1 -DDISCARDPOSTGRES=1 -DDISCARDMONGO=1 -DDISCARDMYSQL=1 -standalone35,1702
standalone: PGLOAD= -pthreadstandalone36,1851
standalone: PGLOAD= -pthreadPGLOAD36,1851
standalone: INCLUDEDIRS=-Ievserverstandalone37,1880
standalone: INCLUDEDIRS=-IevserverINCLUDEDIRS37,1880
standalone: binarystandalone38,1915
standalone: EXECUTABLE=$(executable.standalone)standalone39,1934
standalone: EXECUTABLE=$(executable.standalone)EXECUTABLE39,1934
standalone: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptstandalone40,1982
standalone: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptCFLAGS40,1982
executable.sharedobject=../BINARIES/ChatScript.soexecutable.sharedobject42,2117
sharedobject: DEFINES+= -DLOCKUSERFILE=1   -DDLL=1 -DDISCARDSERVER=1 -DDISCARDPOSTGRES=1 -DDISCAsharedobject43,2167
sharedobject: PGLOAD= -pthread   -ldlsharedobject44,2360
sharedobject: PGLOAD= -pthread   -ldlPGLOAD44,2360
sharedobject: INCLUDEDIRS=-Ievserver -Iinclude  sharedobject45,2398
sharedobject: INCLUDEDIRS=-Ievserver -Iinclude  INCLUDEDIRS45,2398
sharedobject: binarysharedobject46,2447
sharedobject: EXECUTABLE=$(executable.sharedobject)sharedobject47,2468
sharedobject: EXECUTABLE=$(executable.sharedobject)EXECUTABLE47,2468
sharedobject: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscrisharedobject48,2520
sharedobject: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriCFLAGS48,2520
sharedobject: LDFLAGS+=-shared -lcurl -ltreetagger  sharedobject49,2706
executable.mongoserver=../BINARIES/ChatScriptMongoexecutable.mongoserver51,2760
mongoserver: DEFINES+=  -DDISCARDPOSTGRES=1 -DDISCARDMYSQL=1  -DDISCARDMICROSOFTSQL=1  -DDISCARDmongoserver52,2811
mongoserver: PGLOAD= -pthreadmongoserver53,2927
mongoserver: PGLOAD= -pthreadPGLOAD53,2927
mongoserver: binarymongoserver54,2957
mongoserver: EXECUTABLE=$(executable.mongoserver)mongoserver55,2977
mongoserver: EXECUTABLE=$(executable.mongoserver)EXECUTABLE55,2977
mongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongmongoserver56,3027
mongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongINCLUDEDIRS56,3027
mongoserver: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripmongoserver57,3179
mongoserver: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripCFLAGS57,3179
executable.debugmongoserver=../BINARIES/ChatScriptMongoDebugexecutable.debugmongoserver59,3305
debugmongoserver: DEFINES+= -DDISCARDPOSTGRES=1  -DDISCARDMYSQL=1 -DDISCARDMICROSOFTSQL=1  -DDISdebugmongoserver60,3366
debugmongoserver: PGLOAD= -pthread -lmongoc-1.0 -lbson-1.0debugmongoserver61,3486
debugmongoserver: PGLOAD= -pthread -lmongoc-1.0 -lbson-1.0PGLOAD61,3486
mongoserver: LDFLAGS+= -lcrypt -lsasl2 -L/usr/local/lib -lmongoc-1.0 -lbson-1.0   -lodbc -lmsodbmongoserver62,3545
debugmongoserver: binarydebugmongoserver63,3697
debugmongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/lidebugmongoserver64,3722
debugmongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/liINCLUDEDIRS64,3722
debugmongoserver: EXECUTABLE=$(executable.debugmongoserver)debugmongoserver65,3830
debugmongoserver: EXECUTABLE=$(executable.debugmongoserver)EXECUTABLE65,3830
debugmongoserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsdebugmongoserver66,3890
debugmongoserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsCFLAGS66,3890
executable.pgserver=../BINARIES/ChatScriptpgexecutable.pgserver68,4018
pgserver: DEFINES+= -DDISCARDMONGO=1 -DDISCARDMYSQL=1  -DDISCARDMICROSOFTSQL=1  -DDISCARD_TEXT_Cpgserver69,4063
pgserver: PGLOAD= -lpq -pthreadpgserver70,4172
pgserver: PGLOAD= -lpq -pthreadPGLOAD70,4172
pgserver: binarypgserver71,4204
pgserver: EXECUTABLE=$(executable.pgserver)pgserver72,4221
pgserver: EXECUTABLE=$(executable.pgserver)EXECUTABLE72,4221
pgserver: INCLUDEDIRS=-Ievserver -Ipostgrespgserver73,4265
pgserver: INCLUDEDIRS=-Ievserver -IpostgresINCLUDEDIRS73,4265
pgserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripts -pgserver74,4309
pgserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripts -CFLAGS74,4309
executable.debugpgserver=../BINARIES/ChatScriptpgDebugexecutable.debugpgserver76,4439
debugpgserver: DEFINES+=   -DDISCARDMONGO=1 -DDISCARDMYSQL=1  -DDISCARDMICROSOFTSQL=1  -DDISCARDdebugpgserver77,4494
debugpgserver: PGLOAD= -lpq -pthreaddebugpgserver78,4610
debugpgserver: PGLOAD= -lpq -pthreadPGLOAD78,4610
debugpgserver: binarydebugpgserver79,4647
debugpgserver: EXECUTABLE=$(executable.debugpgserver)debugpgserver80,4669
debugpgserver: EXECUTABLE=$(executable.debugpgserver)EXECUTABLE80,4669
debugpgserver: INCLUDEDIRS=-Ievserver -Ipostgres debugpgserver81,4723
debugpgserver: INCLUDEDIRS=-Ievserver -Ipostgres INCLUDEDIRS81,4723
debugpgserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscridebugpgserver82,4773
debugpgserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriCFLAGS82,4773
executable.mysqlserver=../BINARIES/ChatScriptMysqlexecutable.mysqlserver84,4898
mysqlserver: DEFINES+= -DDISCARDPOSTGRES=1 -DDISCARDMONGO=1 -DDISCARDMICROSOFTSQL=1  -DDISCARD_Tmysqlserver85,4949
mysqlserver: PGLOAD= -pthread -lmysqlclient mysqlserver86,5063
mysqlserver: PGLOAD= -pthread -lmysqlclient PGLOAD86,5063
mysqlserver: binarymysqlserver87,5108
mysqlserver: EXECUTABLE=$(executable.mysqlserver)mysqlserver88,5128
mysqlserver: EXECUTABLE=$(executable.mysqlserver)EXECUTABLE88,5128
mysqlserver: INCLUDEDIRS=-Ievserver mysqlserver89,5178
mysqlserver: INCLUDEDIRS=-Ievserver INCLUDEDIRS89,5178
mysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptmysqlserver90,5215
mysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptCFLAGS90,5215
executable.debugmysqlserver=../BINARIES/ChatScriptMysqlDebugexecutable.debugmysqlserver92,5340
debugmysqlserver: DEFINES+= -DDISCARDPOSTGRES=1 -DDISCARDMONGO=1   -DDISCARDMICROSOFTSQL=1  -DDIdebugmysqlserver93,5401
debugmysqlserver: PGLOAD= -pthread -lmysqlclient debugmysqlserver94,5522
debugmysqlserver: PGLOAD= -pthread -lmysqlclient PGLOAD94,5522
debugmysqlserver: binarydebugmysqlserver95,5572
debugmysqlserver: EXECUTABLE=$(executable.debugmysqlserver)debugmysqlserver96,5597
debugmysqlserver: EXECUTABLE=$(executable.debugmysqlserver)EXECUTABLE96,5597
debugmysqlserver: INCLUDEDIRS=-Ievserverdebugmysqlserver97,5657
debugmysqlserver: INCLUDEDIRS=-IevserverINCLUDEDIRS97,5657
debugmysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsdebugmysqlserver98,5698
debugmysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsCFLAGS98,5698
UNAME_S := $(shell uname -s)UNAME_S100,5826
	ODBCLIB := -lodbc -lmsodbcsql-17ODBCLIB102,5879
	ODBCLIB := -lodbc -lmsodbcsql.17ODBCLIB104,5918
executable.mssqlserver=../BINARIES/ChatScriptMssqlexecutable.mssqlserver107,5959
mssqlserver: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 -DDISmssqlserver108,6010
mssqlserver: PGLOAD= -pthread $(ODBCLIB) -ldlmssqlserver109,6136
mssqlserver: PGLOAD= -pthread $(ODBCLIB) -ldlPGLOAD109,6136
mssqlserver: binarymssqlserver110,6182
mssqlserver: EXECUTABLE=$(executable.mssqlserver)mssqlserver111,6202
mssqlserver: EXECUTABLE=$(executable.mssqlserver)EXECUTABLE111,6202
mssqlserver: INCLUDEDIRS=-Ievserver mssqlserver112,6252
mssqlserver: INCLUDEDIRS=-Ievserver INCLUDEDIRS112,6252
mssqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptmssqlserver113,6289
mssqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptCFLAGS113,6289
mssqlserver: LDFLAGS+=$(ODBCLIB) -lzmssqlserver114,6413
executable.debugmssqlserver=../BINARIES/ChatScriptMssqlDebugexecutable.debugmssqlserver116,6451
debugmssqlserver: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 debugmssqlserver117,6512
debugmssqlserver: PGLOAD= -pthread $(ODBCLIB) -ldldebugmssqlserver118,6642
debugmssqlserver: PGLOAD= -pthread $(ODBCLIB) -ldlPGLOAD118,6642
debugmssqlserver: binarydebugmssqlserver119,6693
debugmssqlserver: EXECUTABLE=$(executable.debugmssqlserver)debugmssqlserver120,6718
debugmssqlserver: EXECUTABLE=$(executable.debugmssqlserver)EXECUTABLE120,6718
debugmssqlserver: INCLUDEDIRS=-Ievserverdebugmssqlserver121,6778
debugmssqlserver: INCLUDEDIRS=-IevserverINCLUDEDIRS121,6778
debugmssqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsdebugmssqlserver122,6819
debugmssqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsCFLAGS122,6819
debugmssqlserver: LDFLAGS=$(ODBCLIB) -lz -lcurl -gdebugmssqlserver123,6946
debugmssqlserver: LDFLAGS=$(ODBCLIB) -lz -lcurl -gLDFLAGS123,6946
executable.mysqlserver=../BINARIES/ChatScriptMysqlexecutable.mysqlserver125,6998
mysqlserver: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 -DDISmysqlserver126,7049
mysqlserver: PGLOAD= -pthread -lmysqlclient mysqlserver127,7211
mysqlserver: PGLOAD= -pthread -lmysqlclient PGLOAD127,7211
mysqlserver: binarymysqlserver128,7256
mysqlserver: EXECUTABLE=$(executable.mysqlserver)mysqlserver129,7276
mysqlserver: EXECUTABLE=$(executable.mysqlserver)EXECUTABLE129,7276
mysqlserver: INCLUDEDIRS=-Ievserver mysqlserver130,7326
mysqlserver: INCLUDEDIRS=-Ievserver INCLUDEDIRS130,7326
mysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptmysqlserver131,7363
mysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriptCFLAGS131,7363
executable.debugmysqlserver=../BINARIES/ChatScriptMysqlDebugexecutable.debugmysqlserver133,7488
debugmysqlserver: DEFINES+= -DLOCKUSERFILE=1  -DDEBUG -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOdebugmysqlserver134,7549
debugmysqlserver: PGLOAD= -pthread debugmysqlserver135,7728
debugmysqlserver: PGLOAD= -pthread PGLOAD135,7728
debugmysqlserver: INCLUDEDIRS=-Ievserverdebugmysqlserver136,7764
debugmysqlserver: INCLUDEDIRS=-IevserverINCLUDEDIRS136,7764
debugmysqlserver: binarydebugmysqlserver137,7805
debugmysqlserver: EXECUTABLE=$(executable.debugmysqlserver)debugmysqlserver138,7830
debugmysqlserver: EXECUTABLE=$(executable.debugmysqlserver)EXECUTABLE138,7830
debugmysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsdebugmysqlserver139,7890
debugmysqlserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsCFLAGS139,7890
executable.mongoserver=../BINARIES/ChatScriptMongoexecutable.mongoserver141,8018
mongoserver: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 -DDISmongoserver142,8069
mongoserver: PGLOAD= -pthreadmongoserver143,8232
mongoserver: PGLOAD= -pthreadPGLOAD143,8232
mongoserver: binarymongoserver144,8262
mongoserver: EXECUTABLE=$(executable.mongoserver)mongoserver145,8282
mongoserver: EXECUTABLE=$(executable.mongoserver)EXECUTABLE145,8282
mongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongmongoserver146,8332
mongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/libmongINCLUDEDIRS146,8332
mongoserver: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripmongoserver147,8435
mongoserver: CFLAGS=-c -std=c++11  -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscripCFLAGS147,8435
executable.server=../BINARIES/ChatScriptexecutable.server149,8561
server: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 -DDISCARDMserver150,8602
server: PGLOAD= -pthread $(ODBCLIB) -ldlserver151,8739
server: PGLOAD= -pthread $(ODBCLIB) -ldlPGLOAD151,8739
server: binaryserver152,8780
server: EXECUTABLE=$(executable.server)server153,8795
server: EXECUTABLE=$(executable.server)EXECUTABLE153,8795
server: INCLUDEDIRS=-Ievserver -Iinclude  -Izlibserver154,8835
server: INCLUDEDIRS=-Ievserver -Iinclude  -IzlibINCLUDEDIRS154,8835
server: CFLAGS=-c -std=c++11 -Wall  -funsigned-char -Wno-unused-function -Wno-unused-variable -Wserver155,8884
server: CFLAGS=-c -std=c++11 -Wall  -funsigned-char -Wno-unused-function -Wno-unused-variable -WCFLAGS155,8884
server: LDFLAGS+= $(ODBCLIB) -lz -ltreetagger server156,9085
executable.msdebugserver=../BINARIES/ChatScriptexecutable.msdebugserver158,9133
msdebugserver: DEFINES+= -DLOCKUSERFILE=1 -DEVSERVER=1 -DEVSERVER_FORK=1 -DDISCARDPOSTGRES=1 -DDmsdebugserver159,9181
msdebugserver: PGLOAD= -pthread $(ODBCLIB) -ldlmsdebugserver160,9325
msdebugserver: PGLOAD= -pthread $(ODBCLIB) -ldlPGLOAD160,9325
msdebugserver: binarymsdebugserver161,9373
msdebugserver: EXECUTABLE=$(executable.server)msdebugserver162,9395
msdebugserver: EXECUTABLE=$(executable.server)EXECUTABLE162,9395
msdebugserver: INCLUDEDIRS=-Ievserver -Iinclude  -Izlibmsdebugserver163,9442
msdebugserver: INCLUDEDIRS=-Ievserver -Iinclude  -IzlibINCLUDEDIRS163,9442
msdebugserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscrimsdebugserver164,9498
msdebugserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subscriCFLAGS164,9498
msdebugserver: LDFLAGS+= $(ODBCLIB) -lz msdebugserver165,9682
executable.debugmongoserver=../BINARIES/ChatScriptMongoDebugexecutable.debugmongoserver167,9724
debugmongoserver: DEFINES+= -DLOCKUSERFILE=1  -DDEBUG -DEVSERVER=1 -DEVSERVER_FORK=1  -DDISCARDPdebugmongoserver168,9785
debugmongoserver: PGLOAD= -lpq -pthreaddebugmongoserver169,9938
debugmongoserver: PGLOAD= -lpq -pthreadPGLOAD169,9938
debugmongoserver: binarydebugmongoserver170,9978
debugmongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/lidebugmongoserver171,10003
debugmongoserver: INCLUDEDIRS=-Iinclude -I/usr/local/include/libbson-1.0 -I/usr/local/include/liINCLUDEDIRS171,10003
debugmongoserver: EXECUTABLE=$(executable.debugmongoserver)debugmongoserver172,10111
debugmongoserver: EXECUTABLE=$(executable.debugmongoserver)EXECUTABLE172,10111
debugmongoserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsdebugmongoserver173,10171
debugmongoserver: CFLAGS=-c -std=c++11 -Wall  -funsigned-char  -Wno-write-strings -Wno-char-subsCFLAGS173,10171
UNAME := $(shell uname)UNAME175,10299
CC=g++CC177,10324
OSXRELEASE := $(shell defaults read loginwindow SystemVersionStampAsString)OSXRELEASE185,10573
LDFLAGS=-mmacosx-version-min=$(OSXRELEASE) -lcurl $(PGLOAD)  LDFLAGS187,10716
mssqlserver: LDFLAGS+= -lodbc -lmsodbcsql.17 -Wno-write-strings -fpermissive --std=c++11 -lzmssqlserver188,10778
CFLAGS=-mmacosx-version-min=$(OSXRELEASE) -c  -Wall  -funsigned-char -Wno-write-strings -Wno-chaCFLAGS189,10871
LDFLAGS= -L/usr/local/lib -lrt -lcurl -lev  --verbose $(PGLOAD)LDFLAGS196,11122
SOURCES=constructCode.cpp duktape/duktape.cpp evserver.cpp csocket.cpp cs_ev.c dictionarySystem.SOURCES199,11193
OBJECTS=$(SOURCES:.cpp=.o)OBJECTS200,11727
default: serverdefault202,11755
clean:clean204,11772
cleanall: cleancleanall207,11792
binary: $(OBJECTS)binary225,12230
.cpp.o:.cpp.o228,12322

userSystem.h,113
#define _USERSYSTEMH_USERSYSTEMH2,21
#define MAX_USED MAX_USED17,1132
#define SAID_LIMIT SAID_LIMIT19,1222

jsmn.h,968
#define __JSMN_H___JSMN_H_2,18
typedef enum {__anon078078f3010324,412
	JSMN_PRIMITIVE = 0,JSMN_PRIMITIVE25,427
	JSMN_OBJECT = 1,JSMN_OBJECT26,448
	JSMN_ARRAY = 2,JSMN_ARRAY27,466
	JSMN_STRING = 3JSMN_STRING28,483
} jsmntype_t;jsmntype_t29,500
typedef enum {__anon078078f3020331,515
	JSMN_ERROR_NOMEM = -1,JSMN_ERROR_NOMEM33,569
	JSMN_ERROR_INVAL = -2,JSMN_ERROR_INVAL35,637
	JSMN_ERROR_PART = -3,JSMN_ERROR_PART37,726
} jsmnerr_t;jsmnerr_t38,749
typedef struct {__anon078078f3030846,949
	jsmntype_t type;type47,966
	int start;start48,984
	int end;end49,996
	int size;size50,1006
	int parent;parent51,1017
} jsmntok_t;jsmntok_t52,1030
typedef struct {__anon078078f3040858,1192
	unsigned int pos; /* offset in the JSON string */pos59,1209
	unsigned int toknext; /* next token to allocate */toknext60,1260
	int toksuper; /* superior token node, e.g parent object or array */toksuper61,1312
} jsmn_parser;jsmn_parser62,1381

privatesrc.cpp,0

os.h,9093
#define _OSH__OSH_2,14
#define SAFE_BUFFER_MARGIN SAFE_BUFFER_MARGIN18,1119
typedef unsigned int FACTOID; //   a fact indexFACTOID22,1166
typedef unsigned int FACTOID_OR_MEANING;	// a fact or a meaning (same representation)FACTOID_OR_MEANING23,1214
typedef char* STACKREF; STACKREF25,1301
typedef char* HEAPREF;HEAPREF26,1326
typedef unsigned int HEAPINDEX; HEAPINDEX27,1349
typedef WORDENTRY* WORDP;WORDP30,1401
typedef struct WORDENTRY //   a dictionary entry  - starred items are written to the dictionaryWORDENTRY32,1428
    uint64  properties;				//   main language description of this node OR numeric value of DEFINproperties34,1526
    uint64	hash;hash35,1624
    uint64  systemFlags;			//   additional dictionary and non-dictionary properties systemFlags36,1641
    char*     word;					//   entry nameword37,1726
    unsigned int internalBits;internalBits38,1766
    unsigned int parseBits;			// only for words, not for function names or concept namesparseBits39,1797
    union {__anon7c9bdd1d010a44,2199
        char* topicBots;			//  for topic name (start with ~) or planname (start with ^) - bot totopicBots45,2211
        unsigned int planArgCount;	//  number of arguments in a planplanArgCount46,2354
        unsigned char* fndefinition;//  for nonplan macro name (start with ^) - if FUNCTION_NAMEfndefinition47,2423
        char* userValue;			//  if a $uservar (start with $) OR if a query label is query stringuserValue48,2595
        WORDP substitutes;			//  words (with systemFlags HAS_SUBSTITUTE) that should be adjustedsubstitutes49,2691
        MEANING*  glosses;			//  for ordinary words: list of glosses for synset head meanings - glosses50,2811
        char* conditionalIdiom;		//  test code headed by ` for accepting word as an idiom insteaconditionalIdiom51,2966
    }w;w52,3098
    FACTOID subjectHead;		//  start threads for facts run thru here subjectHead54,3107
    FACTOID verbHead;			//  start threads for facts run thru here verbHead55,3176
    FACTOID objectHead;			//  start threads for facts run thru here objectHead56,3243
    MEANING  meanings;			//  list of meanings (synsets) of this word - Will be wordnet synset idmeanings58,3313
    unsigned int length;		//  length of the wordlength59,3470
    unsigned int inferMark;		// (functions use as trace control bits) no need to erase been hereinferMark60,3519
    MEANING spellNode;			// next word of same length as this - not used for function names (timespellNode61,3701
    unsigned int nextNode;		// bucket-link for dictionary hash + top bye GETMULTIWORDHEADER // cnextNode62,3838
    union {__anon7c9bdd1d020a64,4036
        unsigned int topicIndex;	//   for a ~topic or %systemVariable or plan, this is its idtopicIndex65,4048
        unsigned int codeIndex;		//   for a system function, its the table index for itcodeIndex66,4142
        unsigned int debugIndex;	//   for a :test function, its the table index for itdebugIndex67,4230
    }x;x68,4317
    unsigned int counter;			// general storage slotcounter70,4348
} WORDENTRY;WORDENTRY73,4462
typedef struct CALLFRAMECALLFRAME75,4476
    char* label;label77,4503
    char* rule;rule78,4520
    char** display; // where display archive is saveddisplay79,4536
    char* definition; // actual definition chosen to execute: (locals) + codedefinition80,4590
    WORDP name; // basic namename81,4668
    char* code; // code after localscode82,4698
    char* oldRule;oldRule83,4735
    char* heapstart;heapstart84,4754
    int varBaseIndex; // where fnvar base isvarBaseIndex85,4775
    unsigned int arguments; // how many arguments function hasarguments86,4820
    int oldbase;oldbase87,4883
    unsigned int outputlevel;outputlevel88,4900
    int argumentStartIndex;argumentStartIndex89,4930
    unsigned int oldRuleID;oldRuleID90,4958
    unsigned int oldTopic;oldTopic91,4986
    unsigned int oldRuleTopic;oldRuleTopic92,5013
	unsigned int depth;depth93,5044
    unsigned int memindex;memindex94,5065
    unsigned int heapDepth;heapDepth95,5092
    union  {__anon7c9bdd1d030a96,5120
        FunctionResult result;result97,5133
        int ownvalue;ownvalue98,5164
    }x;x99,5186
}CALLFRAME;CALLFRAME101,5195
enum APICall {APICall103,5208
	NO_API_CALL = 0,NO_API_CALL104,5223
	COMPILE_PATTERN = 1,COMPILE_PATTERN105,5241
	COMPILE_OUTPUT = 2,COMPILE_OUTPUT106,5263
	TEST_PATTERN = 3,TEST_PATTERN107,5284
	TEST_OUTPUT = 4TEST_OUTPUT108,5303
#define SAVESYSTEMSTATE(SAVESYSTEMSTATE111,5324
#define RESTORESYSTEMSTATE(RESTORESYSTEMSTATE112,5450
#define NORMALFILES NORMALFILES126,5889
#define MONGOFILES MONGOFILES127,5911
#define POSTGRESFILES POSTGRESFILES128,5932
#define MYSQLFILES MYSQLFILES129,5956
#define MICROSOFTSQLFILES MICROSOFTSQLFILES130,5977
#define MAX_GLOBAL MAX_GLOBAL134,6081
#define RECORD_SIZE RECORD_SIZE138,6161
inline HEAPINDEX Heap2Index(char* str) {return (!str) ? 0 : (unsigned int)(heapBase - str);}Heap2Index168,7005
typedef void (*FILEWALK)(char* name, uint64 flag);FILEWALK225,9530
typedef int (*PRINTER)(const char * format, ...);PRINTER228,9682
typedef void(*DEBUGINTPUT)(const char * data);DEBUGINTPUT229,9732
typedef void(*DEBUGOUTPUT)(const char * data);DEBUGOUTPUT230,9779
typedef FILE* (*UserFileOpen)(const char* name);UserFileOpen243,10640
typedef int (*UserFileClose)(FILE*);UserFileClose244,10689
typedef size_t (*UserFileRead)(void* buffer,size_t size, size_t count, FILE* file);UserFileRead245,10726
typedef size_t (*UserFileWrite)(const void* buffer,size_t size, size_t count, FILE* file);UserFileWrite246,10810
typedef int (*UserFileSize)(FILE* file, char* buffer, size_t allowedSize);UserFileSize247,10901
typedef void (*UserFileDelete)(const char* name);UserFileDelete248,10976
typedef size_t (*UserFileDecrypt)(void* buffer,size_t size, size_t count, FILE* file,char* filekUserFileDecrypt249,11026
typedef size_t (*UserFileEncrypt)(const void* buffer,size_t size, size_t count, FILE* file,char*UserFileEncrypt250,11128
typedef char*(*AllocatePtr)(char* word, size_t len, int bytes, bool clear, bool purelocal);AllocatePtr252,11237
typedef struct USERFILESYSTEM //  how to access user topic dataUSERFILESYSTEM254,11330
	UserFileCreate userCreate;  // "wb" implieduserCreate256,11396
	UserFileOpen userOpen; userOpen257,11441
	UserFileClose userClose;userClose258,11466
	UserFileRead userRead;userRead259,11492
	UserFileWrite userWrite;userWrite260,11516
	UserFileDelete userDelete;userDelete261,11542
	UserFileEncrypt userEncrypt;userEncrypt262,11570
	UserFileDecrypt userDecrypt;userDecrypt263,11600
} USERFILESYSTEM;USERFILESYSTEM265,11631
#define SKIPWEEKDAY SKIPWEEKDAY276,12052
#define NO_LOG NO_LOG296,12612
#define FILE_LOG FILE_LOG297,12629
#define STDOUT_LOG STDOUT_LOG298,12648
#define STDERR_LOG STDERR_LOG299,12669
#define PRE_LOG PRE_LOG300,12690
#define SERVERLOG SERVERLOG303,12726
#define USERLOG USERLOG304,12760
#define ECHOUSERLOG ECHOUSERLOG305,12792
#define ECHOSERVERLOG ECHOSERVERLOG306,12848
#define STDTIMELOG STDTIMELOG307,12908
#define DBTIMELOG DBTIMELOG308,12960
#define PASSTHRUSERVERLOG PASSTHRUSERVERLOG309,13038
#define PASSTHRUUSERLOG PASSTHRUUSERLOG310,13115
#define WARNSCRIPTLOG WARNSCRIPTLOG312,13189
#define BADSCRIPTLOG BADSCRIPTLOG313,13247
#define BUGLOG BUGLOG314,13306
#define FORCESTAYUSERLOG FORCESTAYUSERLOG315,13346
#define FORCETABUSERLOG FORCETABUSERLOG316,13421
#define STDDEBUGLOG STDDEBUGLOG317,13499
#define ECHOSTAYOUSERLOG ECHOSTAYOUSERLOG318,13545
#define DebugPrint(DebugPrint329,13867
#define ReportBug(ReportBug330,13921
#define TIMESUMMARY_COUNT_OFFSET TIMESUMMARY_COUNT_OFFSET352,14705
#define TIMESUMMARY_TIME TIMESUMMARY_TIME353,14741
typedef void (*HOOKPTR)(void);HOOKPTR360,15031
typedef void (*PerformChatArgumentsHOOKFN)(char*& user, char*& usee, char*& incoming);PerformChatArgumentsHOOKFN362,15063
typedef void (*SignalHandlerHOOKFN)(int signalcode, char*& msg);SignalHandlerHOOKFN363,15150
typedef char* (*TokenizeWordHOOKFN)(char* ptr, char** words, int count);TokenizeWordHOOKFN364,15215
typedef bool (*IsValidTokenWordHOOKFN)(char* token);IsValidTokenWordHOOKFN365,15288
typedef char* (*SpellCheckWordHOOKFN)(char* word, int i);SpellCheckWordHOOKFN366,15341
typedef void (*MongoQueryParamsHOOKFN)(bson_t *query);MongoQueryParamsHOOKFN368,15420
typedef void (*MongoUpsertKeyValuesHOOKFN)(bson_t *doc);MongoUpsertKeyValuesHOOKFN369,15475
typedef struct HookInfoHookInfo372,15540
    const char* name;           // hook namename374,15566
    HOOKPTR fn;                 // optional function to use to run itfn375,15611
    const char* comment;        // what to say about itcomment376,15681
} HookInfo;HookInfo377,15737
#define MAXRAND MAXRAND386,15948
    #define FNV_PRIME FNV_PRIME397,16256
    #define HASHSEED HASHSEED398,16297
    #define HASHFN(HASHFN399,16338
    #define HASHSEED HASHSEED402,16412
    #define HASHFN(HASHFN403,16438

include/evserver/libev.m4,0

include/evserver/install-sh,0

include/evserver/configure.ac,0

include/evserver/ltmain.sh,3479
  alias -g '${1+"$@"}'='"$@"'-g86,3698
func_dirname_and_basename ()func_dirname_and_basename159,5729
func_echo ()func_echo244,8242
func_verbose ()func_verbose251,8382
func_error ()func_error263,8685
func_warning ()func_warning270,8843
func_fatal_error ()func_fatal_error280,9063
func_fatal_help ()func_fatal_help289,9254
func_grep ()func_grep299,9503
func_mkdir_p ()func_mkdir_p307,9648
func_mktempdir ()func_mktempdir354,11308
func_quote_for_eval ()func_quote_for_eval391,12468
func_quote_for_expand ()func_quote_for_expand418,13388
func_show_eval ()func_show_eval446,14213
func_show_eval_locale ()func_show_eval_locale470,14840
func_version ()func_version497,15345
func_usage ()func_usage510,15607
func_help ()func_help525,15884
func_missing_arg ()func_missing_arg547,16436
  cat <<EOFEOF577,17047
func_fatal_configuration ()func_fatal_configuration609,17721
func_config ()func_config619,17975
func_features ()func_features637,18441
func_enable_tag ()func_enable_tag658,18957
func_check_version_match ()func_check_version_match825,23052
        cat >&2 <<_LT_EOF_LT_EOF830,23228
        cat >&2 <<_LT_EOF_LT_EOF837,23523
      cat >&2 <<_LT_EOF_LT_EOF845,23832
func_lalib_p ()func_lalib_p894,25179
func_lalib_unsafe_p ()func_lalib_unsafe_p908,25733
func_ltwrapper_script_p ()func_ltwrapper_script_p928,26209
func_ltwrapper_executable_p ()func_ltwrapper_executable_p937,26441
func_ltwrapper_scriptname ()func_ltwrapper_scriptname951,26822
func_ltwrapper_p ()func_ltwrapper_p965,27325
func_execute_cmds ()func_execute_cmds975,27606
func_source ()func_source994,28134
func_infer_tag ()func_infer_tag1010,28523
func_write_libtool_object ()func_write_libtool_object1066,30611
      cat >${write_libobj}T <<EOFEOF1082,30908
func_mode_compile ()func_mode_compile1101,31316
func_mode_help ()func_mode_help1451,40694
func_mode_execute ()func_mode_execute1637,47526
func_mode_finish ()func_mode_finish1768,50831
func_mode_install ()func_mode_install1848,53286
func_generate_dlsyms ()func_generate_dlsyms2289,65046
static const void *lt_preloaded_setup() {*lt_preloaded_setup2466,70251
func_win32_libid ()func_win32_libid2552,73052
func_extract_an_archive ()func_extract_an_archive2596,74059
func_extract_archives ()func_extract_archives2611,74486
func_emit_wrapper_part1 ()func_emit_wrapper_part12700,77425
  alias -g '\${1+\"\$@\"}'='\"\$@\"'-g2730,78372
func_emit_wrapper_part2 ()func_emit_wrapper_part22798,80563
func_emit_wrapper ()func_emit_wrapper2943,84416
func_to_host_path ()func_to_host_path2978,85634
func_to_host_pathlist ()func_to_host_pathlist3049,88422
func_emit_cwrapperexe_src ()func_emit_cwrapperexe_src3132,92088
	cat <<EOFEOF3134,92119
	    cat <<"EOF"EOF3150,92690
	    cat <<EOFEOF3291,96119
	    cat <<EOFEOF3300,96311
	      cat <<EOFEOF3307,96579
	      cat <<"EOF"EOF3311,96675
	      cat <<EOFEOF3318,96836
	      cat <<"EOF"EOF3323,96972
	      cat <<EOFEOF3330,97117
	      cat <<EOFEOF3334,97226
	    cat <<"EOF"EOF3340,97332
	    cat <<"EOF"EOF3393,99094
	    cat <<EOFEOF3434,100415
	    cat <<"EOF"EOF3443,100677
	    cat <<"EOF"EOF3458,101132
	    cat <<"EOF"EOF3474,101353
		cat <<"EOF"EOF3561,104558
		cat <<"EOF"EOF3574,104937
	    cat <<"EOF"EOF3581,105066
func_mode_link ()func_mode_link4032,114970
	  cat > conftest.c <<EOFEOF6543,184458
func_mode_uninstall ()func_mode_uninstall8197,237559

include/evserver/LICENSE,0

include/evserver/ev_port.c,325
port_associate_and_check (EV_P_ int fd, int ev)port_associate_and_check59,2889
port_modify (EV_P_ int fd, int oev, int nev)port_modify78,3254
port_poll (EV_P_ ev_tstamp timeout)port_poll93,3571
port_init (EV_P_ int flags)port_init140,5099
port_destroy (EV_P)port_destroy167,6112
port_fork (EV_P)port_fork173,6179

include/evserver/configure,0

include/evserver/event.h,2195
#define EVENT_H_EVENT_H_41,2140
# define EVLOOP_NONBLOCK EVLOOP_NONBLOCK50,2240
# define EVLOOP_ONESHOT EVLOOP_ONESHOT53,2308
# define EV_TIMEOUT EV_TIMEOUT56,2369
#define EVLIST_TIMEOUT EVLIST_TIMEOUT71,2663
#define EVLIST_INSERTED EVLIST_INSERTED72,2692
#define EVLIST_SIGNAL EVLIST_SIGNAL73,2721
#define EVLIST_ACTIVE EVLIST_ACTIVE74,2750
#define EVLIST_INTERNAL EVLIST_INTERNAL75,2779
#define EVLIST_INIT EVLIST_INIT76,2808
struct eventevent78,2838
  union {__anonaa83ea71010a81,2888
    struct ev_io io;io82,2898
    struct ev_signal sig;sig83,2919
  } iosig;iosig84,2945
  struct ev_timer to;to85,2956
  struct event_base *ev_base;ev_base88,3007
  void (*ev_callback)(int, short, void *arg);ev_callback89,3037
  void *ev_arg;ev_arg90,3083
  int ev_fd;ev_fd91,3099
  int ev_pri;ev_pri92,3112
  int ev_res;ev_res93,3126
  int ev_flags;ev_flags94,3140
  short ev_events;ev_events95,3156
#define EV_READ EV_READ98,3179
#define EV_WRITE EV_WRITE99,3222
#define EV_PERSIST EV_PERSIST100,3266
#define EVENT_SIGNAL(EVENT_SIGNAL102,3307
#define EVENT_FD(EVENT_FD103,3362
#define event_initialized(event_initialized105,3418
#define evtimer_add(evtimer_add107,3485
#define evtimer_set(evtimer_set108,3539
#define evtimer_del(evtimer_del109,3606
#define evtimer_pending(evtimer_pending110,3656
#define evtimer_initialized(evtimer_initialized111,3726
#define timeout_add(timeout_add113,3785
#define timeout_set(timeout_set114,3841
#define timeout_del(timeout_del115,3903
#define timeout_pending(timeout_pending116,3955
#define timeout_initialized(timeout_initialized117,4015
#define signal_add(signal_add119,4076
#define signal_set(signal_set120,4130
#define signal_del(signal_del121,4219
#define signal_pending(signal_pending122,4269
#define signal_initialized(signal_initialized123,4338
#define EVLOOP_ONCE EVLOOP_ONCE131,4547
#define _EVENT_LOG_DEBUG _EVENT_LOG_DEBUG136,4678
#define _EVENT_LOG_MSG _EVENT_LOG_MSG137,4705
#define _EVENT_LOG_WARN _EVENT_LOG_WARN138,4732
#define _EVENT_LOG_ERR _EVENT_LOG_ERR139,4759
typedef void (*event_log_cb)(int severity, const char *msg);event_log_cb140,4786

include/evserver/ev_select.c,477
#  define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET51,2300
#  define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET53,2340
# define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET59,2445
# define NFDBITS NFDBITS61,2493
# define NFDBYTES NFDBYTES65,2546
select_modify (EV_P_ int fd, int oev, int nev)select_modify71,2619
select_poll (EV_P_ ev_tstamp timeout)select_poll140,4446
select_init (EV_P_ int flags)select_init275,8047
select_destroy (EV_P)select_destroy304,8661

include/evserver/ev_vars.h,27
#define VARx(VARx40,2109

include/evserver/Changes,0

include/evserver/ev.c,24973
#  define EV_USE_FLOOR EV_USE_FLOOR50,2320
#   define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL56,2416
#    define EV_USE_REALTIME EV_USE_REALTIME58,2477
#    define EV_USE_MONOTONIC EV_USE_MONOTONIC61,2546
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL65,2634
#   define EV_USE_MONOTONIC EV_USE_MONOTONIC70,2727
#   define EV_USE_REALTIME EV_USE_REALTIME73,2792
#   define EV_USE_MONOTONIC EV_USE_MONOTONIC77,2865
#   define EV_USE_REALTIME EV_USE_REALTIME80,2930
#    define EV_USE_NANOSLEEP EV_USE_NANOSLEEP86,3025
#   define EV_USE_NANOSLEEP EV_USE_NANOSLEEP90,3111
#   define EV_USE_SELECT EV_USE_SELECT95,3212
#  define EV_USE_SELECT EV_USE_SELECT99,3296
#   define EV_USE_POLL EV_USE_POLL104,3383
#  define EV_USE_POLL EV_USE_POLL108,3463
#   define EV_USE_EPOLL EV_USE_EPOLL113,3562
#  define EV_USE_EPOLL EV_USE_EPOLL117,3644
#   define EV_USE_KQUEUE EV_USE_KQUEUE122,3742
#  define EV_USE_KQUEUE EV_USE_KQUEUE126,3826
#   define EV_USE_PORT EV_USE_PORT131,3923
#  define EV_USE_PORT EV_USE_PORT135,4003
#   define EV_USE_INOTIFY EV_USE_INOTIFY140,4106
#  define EV_USE_INOTIFY EV_USE_INOTIFY144,4186
#   define EV_USE_SIGNALFD EV_USE_SIGNALFD149,4290
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD153,4372
#   define EV_USE_EVENTFD EV_USE_EVENTFD158,4452
#  define EV_USE_EVENTFD EV_USE_EVENTFD162,4532
# define EV_NO_SMP EV_NO_SMP190,4893
# define ECB_NO_THREADS ECB_NO_THREADS192,4937
# define ECB_NO_SMP ECB_NO_SMP196,5002
# define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN205,5137
#  define EV_SELECT_IS_WINSOCKET EV_SELECT_IS_WINSOCKET208,5220
#define _DARWIN_UNLIMITED_SELECT _DARWIN_UNLIMITED_SELECT219,5565
# define EV_NSIG EV_NSIG227,5826
# define EV_NSIG EV_NSIG229,5871
# define EV_NSIG EV_NSIG231,5919
# define EV_NSIG EV_NSIG233,5971
# define EV_NSIG EV_NSIG235,6025
# define EV_NSIG EV_NSIG237,6078
# define EV_NSIG EV_NSIG239,6130
# define EV_NSIG EV_NSIG241,6188
# define EV_NSIG EV_NSIG243,6277
# define EV_NSIG EV_NSIG248,6491
# define EV_USE_FLOOR EV_USE_FLOOR252,6540
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL257,6632
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL259,6684
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC265,6827
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC267,6875
# define EV_USE_REALTIME EV_USE_REALTIME272,6944
#  define EV_USE_NANOSLEEP EV_USE_NANOSLEEP277,7056
#  define EV_USE_NANOSLEEP EV_USE_NANOSLEEP279,7104
# define EV_USE_SELECT EV_USE_SELECT284,7171
#  define EV_USE_POLL EV_USE_POLL289,7257
#  define EV_USE_POLL EV_USE_POLL291,7288
#  define EV_USE_EPOLL EV_USE_EPOLL297,7443
#  define EV_USE_EPOLL EV_USE_EPOLL299,7493
# define EV_USE_KQUEUE EV_USE_KQUEUE304,7556
# define EV_USE_PORT EV_USE_PORT308,7609
#  define EV_USE_INOTIFY EV_USE_INOTIFY313,7739
#  define EV_USE_INOTIFY EV_USE_INOTIFY315,7785
# define EV_PID_HASHSIZE EV_PID_HASHSIZE320,7852
# define EV_INOTIFY_HASHSIZE EV_INOTIFY_HASHSIZE324,7938
#  define EV_USE_EVENTFD EV_USE_EVENTFD329,8099
#  define EV_USE_EVENTFD EV_USE_EVENTFD331,8145
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD337,8288
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD339,8335
# define EV_VERIFY EV_VERIFY350,8500
# define EV_USE_4HEAP EV_USE_4HEAP354,8573
# define EV_HEAP_CACHE_AT EV_HEAP_CACHE_AT358,8644
#  define clock_gettime(clock_gettime366,8918
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC368,9016
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL371,9082
# define EV_USE_POLL EV_USE_POLL380,9300
# define EV_USE_MONOTONIC EV_USE_MONOTONIC385,9380
# define EV_USE_REALTIME EV_USE_REALTIME390,9463
# define EV_USE_INOTIFY EV_USE_INOTIFY395,9541
#  define EV_USE_INOTIFY EV_USE_INOTIFY411,9936
#  define EFD_NONBLOCK EFD_NONBLOCK423,10180
#   define EFD_CLOEXEC EFD_CLOEXEC427,10262
#   define EFD_CLOEXEC EFD_CLOEXEC429,10303
#  define SFD_NONBLOCK SFD_NONBLOCK439,10573
#   define SFD_CLOEXEC SFD_CLOEXEC443,10655
#   define SFD_CLOEXEC SFD_CLOEXEC445,10696
struct signalfd_siginfosignalfd_siginfo450,10822
  uint32_t ssi_signo;ssi_signo452,10848
  char pad[128 - sizeof (uint32_t)];pad453,10870
# define EV_FREQUENT_CHECK EV_FREQUENT_CHECK460,10943
# define EV_FREQUENT_CHECK EV_FREQUENT_CHECK462,10993
#define MIN_INTERVAL MIN_INTERVAL469,11168
#define MIN_TIMEJUMP MIN_TIMEJUMP472,11314
#define MAX_BLOCKTIME MAX_BLOCKTIME473,11412
#define EV_TV_SET(EV_TV_SET475,11504
#define EV_TS_SET(EV_TS_SET476,11610
#define ECB_HECB_H510,13323
  typedef   signed char   int8_t;int8_t513,13352
  typedef unsigned char  uint8_t;uint8_t514,13386
  typedef   signed short  int16_t;int16_t515,13420
  typedef unsigned short uint16_t;uint16_t516,13455
  typedef   signed int    int32_t;int32_t517,13490
  typedef unsigned int   uint32_t;uint32_t518,13525
    typedef   signed long long int64_t;int64_t520,13575
    typedef unsigned long long uint64_t;uint64_t521,13615
    typedef   signed __int64   int64_t;int64_t523,13695
    typedef unsigned __int64   uint64_t;uint64_t524,13735
    #define ECB_GCC_VERSION(ECB_GCC_VERSION539,14380
    #define ECB_GCC_VERSION(ECB_GCC_VERSION541,14431
# define ECB_NO_SMP ECB_NO_SMP551,14817
  #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE555,14880
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE561,15115
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE562,15218
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE563,15310
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE565,15463
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE566,15549
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE567,15635
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE569,15817
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE572,16031
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE575,16262
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE577,16376
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE578,16515
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE579,16654
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE581,16812
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE588,17031
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE593,17403
    #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE594,17461
    #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE595,17577
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE598,17678
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE601,17853
    #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE602,17914
    #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE603,17975
    #define ECB_NEEDS_PTHREADS ECB_NEEDS_PTHREADS617,18430
    #define ECB_MEMORY_FENCE_NEEDS_PTHREADS ECB_MEMORY_FENCE_NEEDS_PTHREADS618,18463
    static pthread_mutex_t ecb_mf_lock = PTHREAD_MUTEX_INITIALIZER;ecb_mf_lock620,18510
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE621,18578
  #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE626,18781
  #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE630,18909
#define ECB_C99 ECB_C99635,19050
  #define ecb_inline ecb_inline638,19113
  #define ecb_inline ecb_inline640,19175
  #define ecb_inline ecb_inline642,19228
  #define ecb_inline ecb_inline644,19269
  #define ecb_restrict ecb_restrict648,19330
  #define ecb_restrict ecb_restrict650,19380
  #define ecb_restrictecb_restrict652,19418
typedef int ecb_bool;ecb_bool655,19449
#define ECB_CONCAT_(ECB_CONCAT_657,19472
#define ECB_CONCAT(ECB_CONCAT658,19505
#define ECB_STRINGIFY_(ECB_STRINGIFY_659,19548
#define ECB_STRINGIFY(ECB_STRINGIFY660,19578
#define ecb_function_ ecb_function_662,19622
  #define ecb_attribute(ecb_attribute665,19681
  #define ecb_is_constant(ecb_is_constant666,19746
  #define ecb_expect(ecb_expect667,19815
  #define ecb_prefetch(ecb_prefetch668,19890
  #define ecb_attribute(ecb_attribute670,19977
  #define ecb_is_constant(ecb_is_constant671,20011
  #define ecb_expect(ecb_expect672,20054
  #define ecb_prefetch(ecb_prefetch673,20102
  #define ecb_decltype(ecb_decltype678,20212
  #define ecb_decltype(ecb_decltype680,20279
#define ecb_noinline ecb_noinline683,20325
#define ecb_noreturn ecb_noreturn684,20379
#define ecb_unused ecb_unused685,20433
#define ecb_const ecb_const686,20485
#define ecb_pure ecb_pure687,20536
  #define ecb_artificial ecb_artificial690,20612
  #define ecb_hot ecb_hot691,20670
  #define ecb_cold ecb_cold692,20721
  #define ecb_artificialecb_artificial694,20779
  #define ecb_hotecb_hot695,20804
  #define ecb_coldecb_cold696,20822
#define ecb_expect_false(ecb_expect_false702,21065
#define ecb_expect_true(ecb_expect_true703,21121
#define ecb_likely(ecb_likely705,21226
#define ecb_unlikely(ecb_unlikely706,21277
  #define ecb_ld32(ecb_ld32711,21487
  #define ecb_ld64(ecb_ld64712,21544
  #define ecb_ctz32(ecb_ctz32713,21601
  #define ecb_ctz64(ecb_ctz64714,21652
  #define ecb_popcount32(ecb_popcount32715,21703
  ecb_ctz32 (uint32_t x)ecb_ctz32720,21856
  ecb_ctz64 (uint64_t x)ecb_ctz64745,22423
  ecb_popcount32 (uint32_t x)ecb_popcount32753,22621
  ecb_function_ int ecb_ld32 (uint32_t x)ecb_ld32764,22879
  ecb_function_ int ecb_ld64 (uint64_t x)ecb_ld64778,23214
ecb_function_ uint8_t  ecb_bitrev8  (uint8_t  x)ecb_bitrev8789,23418
ecb_function_ uint16_t ecb_bitrev16 (uint16_t x)ecb_bitrev16796,23626
ecb_function_ uint32_t ecb_bitrev32 (uint32_t x)ecb_bitrev32807,23989
ecb_popcount64 (uint64_t x)ecb_popcount64822,24529
ecb_inline uint8_t  ecb_rotl8  (uint8_t  x, unsigned int count) { return (x >> ( 8 - count)) | (ecb_rotl8836,25219
ecb_inline uint8_t  ecb_rotr8  (uint8_t  x, unsigned int count) { return (x << ( 8 - count)) | (ecb_rotr8837,25330
ecb_inline uint16_t ecb_rotl16 (uint16_t x, unsigned int count) { return (x >> (16 - count)) | (ecb_rotl16838,25441
ecb_inline uint16_t ecb_rotr16 (uint16_t x, unsigned int count) { return (x << (16 - count)) | (ecb_rotr16839,25552
ecb_inline uint32_t ecb_rotl32 (uint32_t x, unsigned int count) { return (x >> (32 - count)) | (ecb_rotl32840,25663
ecb_inline uint32_t ecb_rotr32 (uint32_t x, unsigned int count) { return (x << (32 - count)) | (ecb_rotr32841,25774
ecb_inline uint64_t ecb_rotl64 (uint64_t x, unsigned int count) { return (x >> (64 - count)) | (ecb_rotl64842,25885
ecb_inline uint64_t ecb_rotr64 (uint64_t x, unsigned int count) { return (x << (64 - count)) | (ecb_rotr64843,25996
  #define ecb_bswap16(ecb_bswap16846,26133
  #define ecb_bswap32(ecb_bswap32847,26188
  #define ecb_bswap64(ecb_bswap64848,26236
  ecb_bswap16 (uint16_t x)ecb_bswap16852,26376
  ecb_bswap32 (uint32_t x)ecb_bswap32859,26528
  ecb_bswap64 (uint64_t x)ecb_bswap64866,26722
  #define ecb_unreachable(ecb_unreachable873,26862
  ecb_inline void ecb_unreachable (void) { }ecb_unreachable877,27050
#define ecb_assume(ecb_assume881,27173
ecb_byteorder_helper (void)ecb_byteorder_helper885,27338
ecb_inline ecb_bool ecb_big_endian    (void) { return ecb_byteorder_helper () == 0x11; }ecb_big_endian892,27491
ecb_inline ecb_bool ecb_little_endian (void) { return ecb_byteorder_helper () == 0x44; }ecb_little_endian894,27636
  #define ecb_mod(ecb_mod897,27762
  #define ecb_mod(ecb_mod899,27831
  static inline T ecb_div_rd (T val, T div)ecb_div_rd904,27958
  static inline T ecb_div_ru (T val, T div)ecb_div_ru909,28106
  #define ecb_div_rd(ecb_div_rd914,28237
  #define ecb_div_ru(ecb_div_ru915,28344
  static inline int ecb_array_length (const T (&arr)[N])ecb_array_length921,28627
  #define ecb_array_length(ecb_array_length926,28712
# define ECB_MEMORY_FENCE ECB_MEMORY_FENCE945,29363
# define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE946,29406
# define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE947,29457
#define expect_false(expect_false950,29516
#define expect_true(expect_true951,29567
#define noinline noinline952,29618
#define inline_size inline_size954,29659
# define inline_speed inline_speed957,29718
# define inline_speed inline_speed959,29762
#define NUMPRI NUMPRI962,29813
# define ABSPRI(ABSPRI965,29884
# define ABSPRI(ABSPRI967,29921
#define EMPTY EMPTY970,29979
#define EMPTY2(EMPTY2971,30054
typedef ev_watcher *W;W973,30112
typedef ev_watcher_list *WL;WL974,30135
typedef ev_watcher_time *WT;WT975,30164
#define ev_active(ev_active977,30194
#define ev_at(ev_at978,30232
static EV_ATOMIC_T have_realtime; /* did clock_gettime (CLOCK_REALTIME) work? */have_realtime983,30439
static EV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work? */have_monotonic987,30549
# define EV_FD_TO_WIN32_HANDLE(EV_FD_TO_WIN32_HANDLE991,30670
# define EV_WIN32_HANDLE_TO_FD(EV_WIN32_HANDLE_TO_FD994,30762
# define EV_WIN32_CLOSE_FD(EV_WIN32_CLOSE_FD997,30862
# define ev_floor(ev_floor1010,31143
ev_floor (ev_tstamp v)ev_floor1017,31305
ev_linux_version (void)ev_linux_version1059,32302
ev_printerr (const char *msg)ev_printerr1098,32919
static void (*syserr_cb)(const char *msg);syserr_cb1104,33005
ev_set_syserr_cb (void (*cb)(const char *msg))ev_set_syserr_cb1107,33063
ev_syserr (const char *msg)ev_syserr1113,33163
ev_realloc_emul (void *ptr, long size)ev_realloc_emul1135,33497
static void *(*alloc)(void *ptr, long size) = ev_realloc_emul;alloc1153,33867
ev_set_allocator (void *(*cb)(void *ptr, long size))ev_set_allocator1156,33945
ev_realloc (void *ptr, long size)ev_realloc1162,34037
#define ev_malloc(ev_malloc1179,34346
#define ev_free(ev_free1180,34393
#define EV_ANFD_REIFY EV_ANFD_REIFY1185,34564
{__anonee3218e501081189,34641
  WL head;head1190,34643
  unsigned char events; /* the events watched for */events1191,34654
  unsigned char reify;  /* flag set when this ANFD needs reification (EV_ANFD_REIFY, EV__IOFDSETreify1192,34707
  unsigned char emask;  /* the epoll backend stores the actual kernel mask in here */emask1193,34808
  unsigned char unused;unused1194,34894
  unsigned int egen;    /* generation counter to counter epoll bugs */egen1196,34935
  SOCKET handle;handle1199,35055
  OVERLAPPED or, ow;or1202,35095
  OVERLAPPED or, ow;ow1202,35095
} ANFD;ANFD1204,35123
{__anonee3218e502081208,35202
  W w;w1209,35204
  int events; /* the pending event set for the given watcher */events1210,35211
} ANPENDING;ANPENDING1211,35275
{__anonee3218e503081216,35361
  WL head;head1217,35363
} ANFS;ANFS1218,35374
  typedef struct {__anonee3218e504081224,35451
    ev_tstamp at;at1225,35470
    WT w;w1226,35488
  } ANHE;ANHE1227,35498
  #define ANHE_w(ANHE_w1229,35509
  #define ANHE_at(ANHE_at1230,35581
  #define ANHE_at_cache(ANHE_at_cache1231,35654
  typedef WT ANHE;ANHE1234,35761
  #define ANHE_w(ANHE_w1236,35781
  #define ANHE_at(ANHE_at1237,35814
  #define ANHE_at_cache(ANHE_at_cache1238,35851
  struct ev_loopev_loop1243,35908
    ev_tstamp ev_rt_now;ev_rt_now1245,35929
    #define ev_rt_now ev_rt_now1246,35954
    #define VAR(VAR1247,35996
  static struct ev_loop default_loop_struct;default_loop_struct1253,36100
  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a dev_default_loop_ptr1254,36145
  EV_API_DECL ev_tstamp ev_rt_now = 0; /* needs to be initialised to make it a definition despitev_rt_now1258,36277
  #define VAR(VAR1259,36385
  static int ev_default_loop_ptr;ev_default_loop_ptr1263,36462
# define EV_RELEASE_CB EV_RELEASE_CB1268,36524
# define EV_ACQUIRE_CB EV_ACQUIRE_CB1269,36596
# define EV_INVOKE_PENDING EV_INVOKE_PENDING1270,36668
# define EV_RELEASE_CB EV_RELEASE_CB1272,36718
# define EV_ACQUIRE_CB EV_ACQUIRE_CB1273,36749
# define EV_INVOKE_PENDING EV_INVOKE_PENDING1274,36780
#define EVBREAK_RECURSE EVBREAK_RECURSE1277,36840
ev_time (void)ev_time1283,36985
get_clock (void)get_clock1301,37308
ev_now (EV_P)ev_now1317,37572
ev_sleep (ev_tstamp delay)ev_sleep1324,37623
#define MALLOC_ROUND MALLOC_ROUND1349,38219
array_nextsize (int elem, int cur, int cnt)array_nextsize1354,38444
array_realloc (int elem, void *base, int *cur, int cnt)array_realloc1375,38941
#define array_init_zero(array_init_zero1381,39086
#define array_needsize(array_needsize1384,39182
#define array_free(array_free1403,39821
pendingcb (EV_P_ ev_prepare *w, int revents)pendingcb1410,40080
ev_feed_event (EV_P_ void *w, int revents)ev_feed_event1415,40144
feed_reverse (EV_P_ W w)feed_reverse1432,40595
feed_reverse_done (EV_P_ int revents)feed_reverse_done1439,40731
queue_events (EV_P_ W *events, int eventcnt, int type)queue_events1447,40873
fd_event_nocheck (EV_P_ int fd, int revents)fd_event_nocheck1458,41119
fd_event (EV_P_ int fd, int revents)fd_event1475,41530
ev_feed_fd_event (EV_P_ int fd, int revents)ev_feed_fd_event1484,41681
fd_reify (EV_P)fd_reify1493,41921
fd_change (EV_P_ int fd, int flags)fd_change1553,43436
fd_kill (EV_P_ int fd)fd_kill1568,43830
fd_valid (int fd)fd_valid1581,44113
fd_ebadf (EV_P)fd_ebadf1592,44308
fd_enomem (EV_P)fd_enomem1604,44569
fd_rearm_all (EV_P)fd_rearm_all1618,44818
fd_intern (int fd)fd_intern1634,45141
#define DHEAP DHEAP1661,45863
#define HEAP0 HEAP01662,45879
#define HPARENT(HPARENT1663,45942
#define UPHEAP_DONE(UPHEAP_DONE1664,45999
downheap (ANHE *heap, int N, int k)downheap1668,46081
#define HEAP0 HEAP01712,47516
#define HPARENT(HPARENT1713,47532
#define UPHEAP_DONE(UPHEAP_DONE1714,47562
downheap (ANHE *heap, int N, int k)downheap1718,47638
upheap (ANHE *heap, int k)upheap1748,48134
adjustheap (ANHE *heap, int N, int k)adjustheap1770,48530
reheap (ANHE *heap, int N)reheap1780,48793
{__anonee3218e505081794,49204
  EV_ATOMIC_T pending;pending1795,49206
  WL head;head1799,49264
} ANSIG;ANSIG1800,49275
static ANSIG signals [EV_NSIG - 1];signals1802,49285
evpipe_init (EV_P)evpipe_init1809,49474
evpipe_write (EV_P_ EV_ATOMIC_T *flag)evpipe_write1841,50240
pipecb (EV_P_ ev_io *iow, int revents)pipecb1886,51489
ev_feed_signal (int signum)ev_feed_signal1938,52505
ev_sighandler (int signum)ev_sighandler1955,52754
ev_feed_signal_event (EV_P_ int signum)ev_feed_signal_event1965,52883
sigfdcb (EV_P_ ev_io *iow, int revents)sigfdcb1990,53407
static WL childs [EV_PID_HASHSIZE];childs2013,53940
static ev_signal childev;childev2015,53977
# define WIFCONTINUED(WIFCONTINUED2018,54025
child_reap (EV_P_ int chain, int pid, int status)child_reap2023,54124
# define WCONTINUED WCONTINUED2042,54719
childcb (EV_P_ ev_signal *sw, int revents)childcb2047,54805
ev_version_major (void)ev_version_major2091,55921
ev_version_minor (void)ev_version_minor2097,55990
enable_secure (void)enable_secure2104,56164
ev_supported_backends (void)ev_supported_backends2115,56318
ev_recommended_backends (void)ev_recommended_backends2129,56655
ev_embeddable_backends (void)ev_embeddable_backends2151,57366
ev_backend (EV_P)ev_backend2163,57682
ev_iteration (EV_P)ev_iteration2170,57755
ev_depth (EV_P)ev_depth2176,57814
ev_set_io_collect_interval (EV_P_ ev_tstamp interval)ev_set_io_collect_interval2182,57861
ev_set_timeout_collect_interval (EV_P_ ev_tstamp interval)ev_set_timeout_collect_interval2188,57952
ev_set_userdata (EV_P_ void *data)ev_set_userdata2194,58053
ev_userdata (EV_P)ev_userdata2200,58119
ev_set_invoke_pending_cb (EV_P_ void (*invoke_pending_cb)(EV_P))ev_set_invoke_pending_cb2206,58167
ev_set_loop_release_cb (EV_P_ void (*release)(EV_P), void (*acquire)(EV_P))ev_set_loop_release_cb2212,58275
loop_init (EV_P_ unsigned int flags)loop_init2221,58501
ev_loop_destroy (EV_P)ev_loop_destroy2316,60911
loop_fork (EV_P)loop_fork2438,63235
ev_loop_new (unsigned int flags)ev_loop_new2484,64172
verify_watcher (EV_P_ W w)verify_watcher2502,64492
verify_heap (EV_P_ ANHE *heap, int N)verify_heap2511,64773
array_verify (EV_P_ W *ws, int cnt)array_verify2526,65267
ev_verify (EV_P)ev_verify2538,65497
ev_default_loop (unsigned int flags)ev_default_loop2617,67320
ev_loop_fork (EV_P)ev_loop_fork2646,67934
ev_invoke (EV_P_ void *w, int revents)ev_invoke2654,68104
ev_pending_count (EV_P)ev_pending_count2660,68193
ev_invoke_pending (EV_P)ev_invoke_pending2672,68352
idle_reify (EV_P)idle_reify2691,68772
timers_reify (EV_P)timers_reify2714,69164
periodic_recalc (EV_P_ ev_periodic *w)periodic_recalc2753,70180
periodics_reify (EV_P)periodics_reify2778,70760
periodics_reschedule (EV_P)periodics_reschedule2823,72122
timers_reschedule (EV_P_ ev_tstamp adjust)timers_reschedule2846,72626
time_update (EV_P_ ev_tstamp max_block)time_update2861,72969
ev_run (EV_P_ int flags)ev_run2930,74896
ev_break (EV_P_ int how)ev_break3099,79611
ev_ref (EV_P)ev_ref3105,79665
ev_unref (EV_P)ev_unref3111,79704
ev_now_update (EV_P)ev_now_update3117,79745
ev_suspend (EV_P)ev_suspend3123,79805
ev_resume (EV_P)ev_resume3129,79857
wlist_add (WL *head, WL elem)wlist_add3145,80250
wlist_del (WL *head, WL elem)wlist_del3152,80340
clear_pending (EV_P_ W w)clear_pending3168,80609
ev_clear_pending (EV_P_ void *w)ev_clear_pending3178,80759
pri_adjust (EV_P_ W w)pri_adjust3195,81055
ev_start (EV_P_ W w, int active)ev_start3204,81244
ev_stop (EV_P_ W w)ev_stop3212,81362
ev_io_start (EV_P_ ev_io *w)ev_io_start3221,81518
ev_io_stop (EV_P_ ev_io *w)ev_io_stop3244,82095
ev_timer_start (EV_P_ ev_timer *w)ev_timer_start3263,82500
ev_timer_stop (EV_P_ ev_timer *w)ev_timer_stop3287,83112
ev_timer_again (EV_P_ ev_timer *w)ev_timer_again3317,83656
ev_timer_remaining (EV_P_ ev_timer *w)ev_timer_remaining3344,84145
ev_periodic_start (EV_P_ ev_periodic *w)ev_periodic_start3351,84281
ev_periodic_stop (EV_P_ ev_periodic *w)ev_periodic_stop3381,85092
ev_periodic_again (EV_P_ ev_periodic *w)ev_periodic_again3409,85645
# define SA_RESTART SA_RESTART3418,85825
ev_signal_start (EV_P_ ev_signal *w)ev_signal_start3424,85891
ev_signal_stop (EV_P_ ev_signal *w)ev_signal_stop3505,87917
ev_child_start (EV_P_ ev_child *w)ev_child_start3546,88681
ev_child_stop (EV_P_ ev_child *w)ev_child_stop3563,89048
#  define lstat(lstat3583,89361
#define DEF_STAT_INTERVAL DEF_STAT_INTERVAL3586,89406
#define NFS_STAT_INTERVAL NFS_STAT_INTERVAL3587,89443
#define MIN_STAT_INTERVAL MIN_STAT_INTERVAL3588,89530
# define EV_INOTIFY_BUFSIZE EV_INOTIFY_BUFSIZE3595,89738
infy_add (EV_P_ ev_stat *w)infy_add3598,89835
infy_del (EV_P_ ev_stat *w)infy_del3663,92210
infy_wd (EV_P_ int slot, int wd, struct inotify_event *ev)infy_wd3680,92527
infy_cb (EV_P_ ev_io *w, int revents)infy_cb3711,93420
ev_check_2625 (EV_P)ev_check_26253726,93786
infy_newfd (void)infy_newfd3738,94006
infy_init (EV_P)infy_init3749,94212
infy_fork (EV_P)infy_fork3771,94553
# define EV_LSTAT(EV_LSTAT3819,95547
# define EV_LSTAT(EV_LSTAT3821,95592
ev_stat_stat (EV_P_ ev_stat *w)ev_stat_stat3825,95641
stat_timer_cb (EV_P_ ev_timer *w_, int revents)stat_timer_cb3834,95818
ev_stat_start (EV_P_ ev_stat *w)ev_stat_start3874,96993
ev_stat_stop (EV_P_ ev_stat *w)ev_stat_stop3905,97573
ev_idle_start (EV_P_ ev_idle *w)ev_idle_start3931,97946
ev_idle_stop (EV_P_ ev_idle *w)ev_idle_stop3954,98344
ev_prepare_start (EV_P_ ev_prepare *w)ev_prepare_start3978,98763
ev_prepare_stop (EV_P_ ev_prepare *w)ev_prepare_stop3993,99055
ev_check_start (EV_P_ ev_check *w)ev_check_start4016,99424
ev_check_stop (EV_P_ ev_check *w)ev_check_stop4031,99698
ev_embed_sweep (EV_P_ ev_embed *w)ev_embed_sweep4054,100064
embed_io_cb (EV_P_ ev_io *io, int revents)embed_io_cb4060,100151
embed_prepare_cb (EV_P_ ev_prepare *prepare, int revents)embed_prepare_cb4071,100385
embed_fork_cb (EV_P_ ev_fork *fork_w, int revents)embed_fork_cb4087,100673
ev_embed_start (EV_P_ ev_embed *w)ev_embed_start4112,101064
ev_embed_stop (EV_P_ ev_embed *w)ev_embed_stop4143,101758
ev_fork_start (EV_P_ ev_fork *w)ev_fork_start4163,102089
ev_fork_stop (EV_P_ ev_fork *w)ev_fork_stop4178,102354
ev_cleanup_start (EV_P_ ev_cleanup *w)ev_cleanup_start4201,102707
ev_cleanup_stop (EV_P_ ev_cleanup *w)ev_cleanup_stop4218,103084
ev_async_start (EV_P_ ev_async *w)ev_async_start4242,103470
ev_async_stop (EV_P_ ev_async *w)ev_async_stop4261,103783
ev_async_send (EV_P_ ev_async *w)ev_async_send4282,104113
struct ev_onceev_once4291,104294
  ev_io io;io4293,104311
  ev_timer to;to4294,104323
  void (*cb)(int revents, void *arg);cb4295,104338
  void *arg;arg4296,104376
once_cb (EV_P_ struct ev_once *once, int revents)once_cb4300,104405
once_cb_io (EV_P_ ev_io *w, int revents)once_cb_io4313,104657
once_cb_to (EV_P_ ev_timer *w, int revents)once_cb_to4321,104876
ev_once (EV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *ev_once4329,105091
ev_walk (EV_P_ int types, void (*cb)(EV_P_ int type, void *w))ev_walk4361,105837

include/evserver/ev.3,1408
.TH LIBEV 3 "2012-02-04" "libev-4.11" "libev - high performance full featured event loop"LIBEV127,3566
.SH "NAME"NAME132,3800
.SH "SYNOPSIS"SYNOPSIS134,3878
.SH "ABOUT THIS DOCUMENT"ABOUT THIS DOCUMENT198,5729
.SH "WHAT TO READ WHEN IN A HURRY"WHAT TO READ WHEN IN A HURRY213,6394
.SH "ABOUT LIBEV"ABOUT LIBEV220,6925
.SH "ERROR HANDLING"ERROR HANDLING271,10025
.SH "GLOBAL FUNCTIONS"GLOBAL FUNCTIONS290,11038
.SH "FUNCTIONS CONTROLLING EVENT LOOPS"FUNCTIONS CONTROLLING EVENT LOOPS444,18007
.SH "ANATOMY OF A WATCHER"ANATOMY OF A WATCHER1196,57594
.SH "WATCHER TYPES"WATCHER TYPES1655,79562
.SH "OTHER FUNCTIONS"OTHER FUNCTIONS3578,170589
.SH "COMMON OR USEFUL IDIOMS (OR BOTH)"COMMON OR USEFUL IDIOMS (OR BOTH)3625,172986
.SH "LIBEVENT EMULATION"LIBEVENT EMULATION4003,186322
.SH "\*(C+ SUPPORT"\*(C+ SUPPORT4033,187532
.SH "OTHER LANGUAGE BINDINGS"OTHER LANGUAGE BINDINGS4234,195821
.SH "MACRO MAGIC"MACRO MAGIC4281,198208
.SH "EMBEDDING"EMBEDDING4357,201468
.SH "INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT"INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT4950,230331
.SH "PORTABILITY NOTES"PORTABILITY NOTES5083,236702
.SH "ALGORITHMIC COMPLEXITIES"ALGORITHMIC COMPLEXITIES5337,250365
.SH "PORTING FROM LIBEV 3.X TO 4.X"PORTING FROM LIBEV 3.X TO 4.X5401,254298
.SH "GLOSSARY"GLOSSARY5458,257026
.SH "AUTHOR"AUTHOR5513,259158

include/evserver/config.h.in,0

include/evserver/config.guess,0

include/evserver/depcomp,0

include/evserver/ev_wrap.h,3566
#define EV_WRAP_HEV_WRAP_H3,79
#define now_floor now_floor4,97
#define mn_now mn_now5,135
#define rtmn_diff rtmn_diff6,167
#define io_blocktime io_blocktime7,205
#define timeout_blocktime timeout_blocktime8,249
#define backend backend9,303
#define activecnt activecnt10,337
#define loop_done loop_done11,375
#define backend_fd backend_fd12,413
#define backend_mintime backend_mintime13,453
#define backend_modify backend_modify14,503
#define backend_poll backend_poll15,551
#define anfds anfds16,595
#define anfdmax anfdmax17,625
#define pendings pendings18,659
#define pendingmax pendingmax19,695
#define pendingcnt pendingcnt20,735
#define pending_w pending_w21,775
#define rfeeds rfeeds22,813
#define rfeedmax rfeedmax23,845
#define rfeedcnt rfeedcnt24,881
#define evfd evfd25,917
#define evpipe evpipe26,945
#define pipe_w pipe_w27,977
#define pipe_write_wanted pipe_write_wanted28,1009
#define pipe_write_skipped pipe_write_skipped29,1063
#define curpid curpid30,1119
#define postfork postfork31,1151
#define vec_ri vec_ri32,1187
#define vec_ro vec_ro33,1219
#define vec_wi vec_wi34,1251
#define vec_wo vec_wo35,1283
#define vec_eo vec_eo36,1315
#define vec_max vec_max37,1347
#define polls polls38,1381
#define pollmax pollmax39,1411
#define pollcnt pollcnt40,1445
#define pollidxs pollidxs41,1479
#define pollidxmax pollidxmax42,1515
#define epoll_events epoll_events43,1555
#define epoll_eventmax epoll_eventmax44,1599
#define epoll_eperms epoll_eperms45,1647
#define epoll_epermcnt epoll_epermcnt46,1691
#define epoll_epermmax epoll_epermmax47,1739
#define kqueue_changes kqueue_changes48,1787
#define kqueue_changemax kqueue_changemax49,1835
#define kqueue_changecnt kqueue_changecnt50,1887
#define kqueue_events kqueue_events51,1939
#define kqueue_eventmax kqueue_eventmax52,1985
#define port_events port_events53,2035
#define port_eventmax port_eventmax54,2077
#define iocp iocp55,2123
#define fdchanges fdchanges56,2151
#define fdchangemax fdchangemax57,2189
#define fdchangecnt fdchangecnt58,2231
#define timers timers59,2273
#define timermax timermax60,2305
#define timercnt timercnt61,2341
#define periodics periodics62,2377
#define periodicmax periodicmax63,2415
#define periodiccnt periodiccnt64,2457
#define idles idles65,2499
#define idlemax idlemax66,2529
#define idlecnt idlecnt67,2563
#define idleall idleall68,2597
#define prepares prepares69,2631
#define preparemax preparemax70,2667
#define preparecnt preparecnt71,2707
#define checks checks72,2747
#define checkmax checkmax73,2779
#define checkcnt checkcnt74,2815
#define forks forks75,2851
#define forkmax forkmax76,2881
#define forkcnt forkcnt77,2915
#define cleanups cleanups78,2949
#define cleanupmax cleanupmax79,2985
#define cleanupcnt cleanupcnt80,3025
#define async_pending async_pending81,3065
#define asyncs asyncs82,3111
#define asyncmax asyncmax83,3143
#define asynccnt asynccnt84,3179
#define fs_fd fs_fd85,3215
#define fs_w fs_w86,3245
#define fs_2625 fs_262587,3273
#define fs_hash fs_hash88,3307
#define sig_pending sig_pending89,3341
#define sigfd sigfd90,3383
#define sigfd_w sigfd_w91,3413
#define sigfd_set sigfd_set92,3447
#define origflags origflags93,3485
#define loop_count loop_count94,3523
#define loop_depth loop_depth95,3563
#define userdata userdata96,3603
#define release_cb release_cb97,3639
#define acquire_cb acquire_cb98,3679
#define invoke_cb invoke_cb99,3719

include/evserver/missing,0

include/evserver/ev++.h,7945
#define EVPP_H__EVPP_H__41,2115
# define EV_USE_STDEXCEPT EV_USE_STDEXCEPT50,2216
namespace ev {ev57,2303
  typedef ev_tstamp tstamp;tstamp59,2319
  enum {__anon43195920010361,2348
    UNDEF    = EV_UNDEF,UNDEF62,2357
    NONE     = EV_NONE,NONE63,2382
    READ     = EV_READ,READ64,2406
    WRITE    = EV_WRITE,WRITE65,2430
    TIMEOUT  = EV_TIMEOUT,TIMEOUT67,2470
    TIMER    = EV_TIMER,TIMER69,2504
    PERIODIC = EV_PERIODIC,PERIODIC70,2529
    SIGNAL   = EV_SIGNAL,SIGNAL71,2557
    CHILD    = EV_CHILD,CHILD72,2583
    STAT     = EV_STAT,STAT73,2608
    IDLE     = EV_IDLE,IDLE74,2632
    CHECK    = EV_CHECK,CHECK75,2656
    PREPARE  = EV_PREPARE,PREPARE76,2681
    FORK     = EV_FORK,FORK77,2708
    ASYNC    = EV_ASYNC,ASYNC78,2732
    EMBED    = EV_EMBED,EMBED79,2757
    ERROR    = EV_ERRORERROR81,2837
  {__anon43195920020385,2874
    AUTO      = EVFLAG_AUTO,AUTO86,2878
    NOENV     = EVFLAG_NOENV,NOENV87,2907
    FORKCHECK = EVFLAG_FORKCHECK,FORKCHECK88,2937
    SELECT    = EVBACKEND_SELECT,SELECT90,2972
    POLL      = EVBACKEND_POLL,POLL91,3006
    EPOLL     = EVBACKEND_EPOLL,EPOLL92,3038
    KQUEUE    = EVBACKEND_KQUEUE,KQUEUE93,3071
    DEVPOLL   = EVBACKEND_DEVPOLL,DEVPOLL94,3105
    PORT      = EVBACKEND_PORTPORT95,3140
  {__anon43195920030399,3184
    NONBLOCK = EVLOOP_NONBLOCK,NONBLOCK101,3203
    ONESHOT  = EVLOOP_ONESHOT,ONESHOT102,3235
    NOWAIT   = EVRUN_NOWAIT,NOWAIT104,3273
    ONCE     = EVRUN_ONCEONCE105,3302
  enum how_thow_t108,3334
    ONE = EVBREAK_ONE,ONE110,3351
    ALL = EVBREAK_ALLALL111,3374
  struct bad_loopbad_loop114,3402
    bad_loop ()bad_loop120,3496
#  define EV_AX EV_AX136,3726
#  define EV_AX_ EV_AX_137,3752
#  define EV_AXEV_AX139,3785
#  define EV_AX_EV_AX_140,3801
  struct loop_refloop_ref143,3826
    loop_ref (EV_P) throw ()loop_ref145,3848
    bool operator == (const loop_ref &other) const throw ()operator ==152,3936
    bool operator != (const loop_ref &other) const throw ()operator !=161,4096
    bool operator == (const EV_P) const throw ()operator ==171,4275
    bool operator != (const EV_P) const throw ()operator !=176,4371
    bool is_default () const throw ()is_default191,4631
    void loop (int flags = 0)loop198,4747
    void unloop (how_t how = ONE) throw ()unloop203,4819
    void run (int flags = 0)run209,4911
    void break_loop (how_t how = ONE) throw ()break_loop214,4982
    void post_fork () throw ()post_fork219,5071
    unsigned int backend () const throw ()backend224,5143
    tstamp now () const throw ()now229,5232
    void ref () throw ()ref234,5307
    void unref () throw ()unref239,5367
    unsigned int iteration () const throw ()iteration245,5450
    unsigned int depth () const throw ()depth250,5543
    void set_io_collect_interval (tstamp interval) throw ()set_io_collect_interval255,5628
    void set_timeout_collect_interval (tstamp interval) throw ()set_timeout_collect_interval260,5753
    void once (int fd, int events, tstamp timeout, void (*cb)(int, void *), void *arg = 0) throwonce267,5920
    void once (int fd, int events, tstamp timeout, K *object) throw ()once274,6155
    void once (int fd, int events, tstamp timeout, K *object) throw ()once281,6365
    static void method_thunk (int revents, void *arg)method_thunk287,6571
    void once (int fd, int events, tstamp timeout, K *object) throw ()once295,6772
    static void method_noargs_thunk (int revents, void *arg)method_noargs_thunk301,6973
    void once (int fd, int events, tstamp timeout) throw ()once309,7159
    static void simpler_func_thunk (int revents, void *arg)simpler_func_thunk315,7320
    void once (int fd, int events, tstamp timeout) throw ()once323,7485
    static void simplest_func_thunk (int revents, void *arg)simplest_func_thunk329,7644
    void feed_fd_event (int fd, int revents) throw ()feed_fd_event335,7742
    void feed_signal_event (int signum) throw ()feed_signal_event340,7854
    struct ev_loop* EV_AX;EV_AX346,7980
  struct dynamic_loop : loop_refdynamic_loop352,8041
    dynamic_loop (unsigned int flags = AUTO) throw (bad_loop)dynamic_loop355,8079
    ~dynamic_loop () throw ()~dynamic_loop362,8236
  struct default_loop : loop_refdefault_loop377,8448
    default_loop (unsigned int flags = AUTO) throw (bad_loop)default_loop379,8485
  inline loop_ref get_default_loop () throw ()get_default_loop399,8870
#  define EV_PX EV_PX414,9090
#  define EV_PX_ EV_PX_415,9121
#  define EV_PXEV_PX417,9159
#  define EV_PX_EV_PX_418,9175
  struct base : ev_watcherbase422,9244
      void set (EV_P) throw ()set428,9331
    base (EV_PX) throw ()base434,9417
    void set_ (const void *data, void (*cb)(EV_P_ ev_watcher *w, int revents)) throw ()set_442,9536
    void set (void *data = 0) throw ()set450,9798
    static void function_thunk (EV_P_ ev_watcher *w, int revents)function_thunk456,9943
    void set (K *object) throw ()set464,10165
    void set (K *object) throw ()set471,10317
    static void method_thunk (EV_P_ ev_watcher *w, int revents)method_thunk477,10477
    void set (K *object) throw ()set485,10715
    static void method_noargs_thunk (EV_P_ ev_watcher *w, int revents)method_noargs_thunk491,10858
    void operator ()(int events = EV_UNDEF)operator ()497,10997
    bool is_active () const throw ()is_active504,11168
    bool is_pending () const throw ()is_pending509,11285
    void feed_event (int revents) throw ()feed_event514,11404
  inline tstamp now (EV_P) throw ()now520,11541
  inline void delay (tstamp interval) throw ()delay525,11612
  inline int version_major () throw ()version_major530,11693
  inline int version_minor () throw ()version_minor535,11773
  inline unsigned int supported_backends () throw ()supported_backends540,11853
  inline unsigned int recommended_backends () throw ()recommended_backends545,11952
  inline unsigned int embeddable_backends () throw ()embeddable_backends550,12055
  inline void set_allocator (void *(*cb)(void *ptr, long size)) throw ()set_allocator555,12156
  inline void set_syserr_cb (void (*cb)(const char *msg)) throw ()set_syserr_cb560,12265
    #define EV_CONSTRUCT(EV_CONSTRUCT566,12390
    #define EV_CONSTRUCT(EV_CONSTRUCT572,12766
  #define EV_BEGIN_WATCHER(EV_BEGIN_WATCHER580,13158
  #define EV_END_WATCHER(EV_END_WATCHER611,15773
  EV_BEGIN_WATCHER (io, io)EV_BEGIN_WATCHER614,15869
    void set (int events) throw ()set623,16099
    void start (int fd, int events) throw ()start631,16293
  EV_END_WATCHER (io, io)EV_END_WATCHER636,16390
    void start (ev_tstamp after, ev_tstamp repeat = 0.) throw ()start647,16682
    void again () throw ()again653,16803
    ev_tstamp remaining ()remaining658,16903
  EV_END_WATCHER (timer, timer)EV_END_WATCHER662,17013
    void start (ev_tstamp at, ev_tstamp interval = 0.) throw ()start674,17349
    void again () throw ()again680,17468
  EV_END_WATCHER (periodic, periodic)EV_END_WATCHER684,17573
    void start (int signum) throw ()start697,17875
  EV_END_WATCHER (sig, signal)EV_END_WATCHER702,17960
    void start (int pid, int trace = 0) throw ()start715,18269
  EV_END_WATCHER (child, child)EV_END_WATCHER720,18370
    void start (const char *path, ev_tstamp interval = 0.) throw ()start733,18698
    void update () throw ()update740,18838
  EV_END_WATCHER (stat, stat)EV_END_WATCHER744,18935
  EV_END_WATCHER (idle, idle)EV_END_WATCHER750,19057
  EV_END_WATCHER (prepare, prepare)EV_END_WATCHER756,19188
  EV_END_WATCHER (check, check)EV_END_WATCHER762,19319
    void start (struct ev_loop *embedded_loop) throw ()start775,19639
    void sweep ()sweep781,19751
  EV_END_WATCHER (embed, embed)EV_END_WATCHER785,19841
  EV_END_WATCHER (fork, fork)EV_END_WATCHER791,19965
    bool async_pending () throw ()async_pending801,20159

include/evserver/README,0

include/evserver/Makefile.am,472
AUTOMAKE_OPTIONS = foreignAUTOMAKE_OPTIONS1,0
VERSION_INFO = 4:0:0VERSION_INFO3,28
EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \EXTRA_DIST5,50
man_MANS = ev.3man_MANS10,247
man_MANS = ev.3ev.310,247
include_HEADERS = ev.h ev++.h event.hinclude_HEADERS12,264
lib_LTLIBRARIES = libev.lalibev.la14,303
libev_la_SOURCES = ev.c event.clibev_la_SOURCES16,331
libev_la_LDFLAGS = -version-info $(VERSION_INFO)libev_la_LDFLAGS17,363
ev.3: ev.podev.319,413

include/evserver/config.sub,0

include/evserver/event.c,2653
# define dLOOPev dLOOPev51,2253
# define dLOOPbase dLOOPbase52,2323
# define dLOOPevdLOOPev54,2394
# define dLOOPbasedLOOPbase55,2411
struct event_baseevent_base59,2496
  int dummy;dummy61,2516
static struct event_base *ev_x_cur;ev_x_cur64,2533
ev_tv_get (struct timeval *tv)ev_tv_get67,2587
#define EVENT_STRINGIFY(EVENT_STRINGIFY78,2760
#define EVENT_VERSION(EVENT_VERSION79,2791
const char *event_get_version (void)event_get_version81,2863
const char *event_get_method (void)event_get_method87,3015
void *event_init (void)event_init92,3074
void event_base_free (struct event_base *base)event_base_free108,3489
int event_dispatch (void)event_dispatch118,3644
void event_set_log_callback (event_log_cb cb)event_set_log_callback124,3737
int event_loop (int flags)event_loop130,3807
int event_loopexit (struct timeval *tv)event_loopexit135,3883
ev_x_cb (struct event *ev, int revents)ev_x_cb141,3985
ev_x_cb_sig (EV_P_ struct ev_signal *w, int revents)ev_x_cb_sig150,4182
ev_x_cb_io (EV_P_ struct ev_io *w, int revents)ev_x_cb_io161,4414
ev_x_cb_to (EV_P_ struct ev_timer *w, int revents)ev_x_cb_to172,4675
void event_set (struct event *ev, int fd, short events, void (*cb)(int, short, void *), void *arevent_set181,4858
int event_once (int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval event_once200,5374
int event_add (struct event *ev, struct timeval *tv)event_add205,5542
int event_del (struct event *ev)event_del247,6440
void event_active (struct event *ev, int res, short ncalls)event_active264,6763
int event_pending (struct event *ev, short events, struct timeval *tv)event_pending278,7104
int event_priority_init (int npri)event_priority_init312,7920
int event_priority_set (struct event *ev, int pri)event_priority_set317,8012
int event_base_set (struct event_base *base, struct event *ev)event_base_set324,8101
int event_base_loop (struct event_base *base, int flags)event_base_loop331,8204
int event_base_dispatch (struct event_base *base)event_base_dispatch340,8317
ev_x_loopexit_cb (int revents, void *base)ev_x_loopexit_cb346,8420
int event_base_loopexit (struct event_base *base, struct timeval *tv)event_base_loopexit353,8514
struct ev_x_onceev_x_once363,8735
  int fd;fd365,8754
  void (*cb)(int, short, void *);cb366,8764
  void *arg;arg367,8798
ev_x_once_cb (int revents, void *arg)ev_x_once_cb371,8827
int event_base_once (struct event_base *base, int fd, short events, void (*cb)(int, short, void event_base_once379,8988
int event_base_priority_init (struct event_base *base, int npri)event_base_priority_init396,9416

include/evserver/Symbols.event,0

include/evserver/ev.pod,9018
=head1 NAMENAME1,0
=head1 SYNOPSISSYNOPSIS5,79
=head2 EXAMPLE PROGRAMEXAMPLE PROGRAM9,116
=head1 ABOUT THIS DOCUMENTABOUT THIS DOCUMENT67,1724
=head1 WHAT TO READ WHEN IN A HURRYWHAT TO READ WHEN IN A HURRY83,2351
=head1 ABOUT LIBEVABOUT LIBEV91,2720
=head2 FEATURESFEATURES106,3364
=head2 CONVENTIONSCONVENTIONS124,4238
=head2 TIME REPRESENTATIONTIME REPRESENTATION134,4710
=head1 ERROR HANDLINGERROR HANDLING146,5286
=head1 GLOBAL FUNCTIONSGLOBAL FUNCTIONS167,6191
=head1 FUNCTIONS CONTROLLING EVENT LOOPSFUNCTIONS CONTROLLING EVENT LOOPS325,12110
=head1 ANATOMY OF A WATCHERANATOMY OF A WATCHER1076,45619
=head2 GENERIC WATCHER FUNCTIONSGENERIC WATCHER FUNCTIONS1226,50706
=head2 WATCHER STATESWATCHER STATES1380,56606
=head2 WATCHER PRIORITY MODELSWATCHER PRIORITY MODELS1442,59229
=head1 WATCHER TYPESWATCHER TYPES1546,63621
=head2 C<ev_io> - is this file descriptor readable or writable?C<ev_io> - is this file descriptor readable or writable?1562,64395
=head3 The special problem of disappearing file descriptorsThe special problem of disappearing file descriptors1595,66138
=head3 The special problem of dup'ed file descriptorsThe special problem of dup'ed file descriptors1616,67267
=head3 The special problem of filesThe special problem of files1627,67786
=head3 The special problem of forkThe special problem of fork1660,69552
=head3 The special problem of SIGPIPEThe special problem of SIGPIPE1670,69988
=head3 The special problem of accept()ing when you can'tThe special problem of accept()ing when you can't1681,70522
=head3 Watcher-Specific FunctionsWatcher-Specific Functions1720,72516
=head3 ExamplesExamples1742,73004
=head2 C<ev_timer> - relative and optionally repeating timeoutsC<ev_timer> - relative and optionally repeating timeouts1763,73616
=head3 Be smart about timeoutsBe smart about timeouts1782,74639
=head3 The special problem of being too earlyThe special problem of being too early1971,81671
=head3 The special problem of time updatesThe special problem of time updates2008,83505
=head3 The special problem of unsynchronised clocksThe special problem of unsynchronised clocks2028,84438
=head3 The special problems of suspended animationThe special problems of suspended animation2061,86024
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2091,87615
=head3 ExamplesExamples2155,90036
=head2 C<ev_periodic> - to cron or not to cron?C<ev_periodic> - to cron or not to cron?2188,90911
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2219,92513
=head3 ExamplesExamples2351,98145
=head2 C<ev_signal> - signal me when a signal gets signalled!C<ev_signal> - signal me when a signal gets signalled!2387,99182
=head3 The special problem of inheritance over fork/execve/pthread_createThe special problem of inheritance over fork/execve/pthread_create2415,100644
=head3 The special problem of threads signal handlingThe special problem of threads signal handling2445,102138
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2459,102871
=head3 ExamplesExamples2476,103219
=head2 C<ev_child> - watch out for process status changesC<ev_child> - watch out for process status changes2491,103532
=head3 Process InteractionProcess Interaction2509,104431
=head3 Overriding the Built-In ProcessingOverriding the Built-In Processing2518,104838
=head3 Stopping the Child WatcherStopping the Child Watcher2528,105368
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2536,105687
=head3 ExamplesExamples2568,106770
=head2 C<ev_stat> - did the file attributes just change?C<ev_stat> - did the file attributes just change?2598,107328
=head3 ABI Issues (Largefile Support)ABI Issues (Largefile Support)2634,109193
=head3 Inotify and KqueueInotify and Kqueue2651,110110
=head3 C<stat ()> is a synchronous operationC<stat ()> is a synchronous operation2672,111187
=head3 The special problem of stat time resolutionThe special problem of stat time resolution2690,111946
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2716,113296
=head3 ExamplesExamples2767,115182
=head2 C<ev_idle> - when you've got nothing better to do...C<ev_idle> - when you've got nothing better to do...2822,116706
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2843,117732
=head3 ExamplesExamples2855,118003
=head2 C<ev_prepare> and C<ev_check> - customise your event loop!C<ev_prepare> and C<ev_check> - customise your event loop!2873,118496
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2925,121376
=head3 ExamplesExamples2940,121758
=head2 C<ev_embed> - when one backend isn't enough...C<ev_embed> - when one backend isn't enough...3071,125972
=head3 C<ev_embed> and forkC<ev_embed> and fork3120,128580
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3128,128917
=head3 ExamplesExamples3154,129772
=head2 C<ev_fork> - the audacity to resume the event loop after a forkC<ev_fork> - the audacity to resume the event loop after a fork3203,131414
=head3 The special problem of life after fork - how is it possible?The special problem of life after fork - how is it possible?3213,131955
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3247,133689
=head2 C<ev_cleanup> - even the best things endC<ev_cleanup> - even the best things end3260,133957
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3275,134663
=head2 C<ev_async> - how to wake up an event loopC<ev_async> - how to wake up an event loop3300,135175
=head3 QueueingQueueing3319,136209
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3406,138426
=head1 OTHER FUNCTIONSOTHER FUNCTIONS3457,140470
=head1 COMMON OR USEFUL IDIOMS (OR BOTH)COMMON OR USEFUL IDIOMS (OR BOTH)3511,142358
=head2 ASSOCIATING CUSTOM DATA WITH A WATCHERASSOCIATING CUSTOM DATA WITH A WATCHER3517,142602
=head2 BUILDING YOUR OWN COMPOSITE WATCHERSBUILDING YOUR OWN COMPOSITE WATCHERS3550,143566
=head2 AVOIDING FINISHING BEFORE RETURNINGAVOIDING FINISHING BEFORE RETURNING3585,144558
=head2 MODEL/NESTED EVENT LOOP INVOCATIONS AND EXIT CONDITIONSMODEL/NESTED EVENT LOOP INVOCATIONS AND EXIT CONDITIONS3625,146102
=head2 THREAD LOCKING EXAMPLETHREAD LOCKING EXAMPLE3664,147349
=head2 THREADS, COROUTINES, CONTINUATIONS, QUEUES... INSTEAD OF CALLBACKSTHREADS, COROUTINES, CONTINUATIONS, QUEUES... INSTEAD OF CALLBACKS3802,151381
=head1 LIBEVENT EMULATIONLIBEVENT EMULATION3861,153746
=head1 C++ SUPPORTC++ SUPPORT3896,154881
=head1 OTHER LANGUAGE BINDINGSOTHER LANGUAGE BINDINGS4100,161229
=head1 MACRO MAGICMACRO MAGIC4160,163108
=head1 EMBEDDINGEMBEDDING4235,165606
=head2 FILESETSFILESETS4247,166099
=head3 CORE EVENT LOOPCORE EVENT LOOP4252,166220
=head3 LIBEVENT COMPATIBILITY APILIBEVENT COMPATIBILITY API4292,167668
=head3 AUTOCONF SUPPORTAUTOCONF SUPPORT4309,167995
=head2 PREPROCESSOR SYMBOLS/MACROSPREPROCESSOR SYMBOLS/MACROS4320,168344
=head2 EXPORTED API SYMBOLSEXPORTED API SYMBOLS4791,187652
=head2 EXAMPLESEXAMPLES4816,188538
=head1 INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENTINTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT4845,189484
=head2 THREADS AND COROUTINESTHREADS AND COROUTINES4847,189554
=head3 THREADSTHREADS4849,189585
=head3 COROUTINESCOROUTINES4908,191996
=head2 COMPILER WARNINGSCOMPILER WARNINGS4921,192609
=head2 VALGRINDVALGRIND4950,193918
=head1 PORTABILITY NOTESPORTABILITY NOTES4983,195315
=head2 GNU/LINUX 32 BIT LIMITATIONSGNU/LINUX 32 BIT LIMITATIONS4985,195341
=head2 OS/X AND DARWIN BUGSOS/X AND DARWIN BUGS5001,196024
=head3 C<kqueue> is buggyC<kqueue> is buggy5007,196211
=head3 C<poll> is buggyC<poll> is buggy5017,196594
=head3 C<select> is buggyC<select> is buggy5027,196967
=head2 SOLARIS PROBLEMS AND WORKAROUNDSSOLARIS PROBLEMS AND WORKAROUNDS5038,197375
=head3 C<errno> reentrancyC<errno> reentrancy5040,197416
=head3 Event port backendEvent port backend5050,197825
=head2 AIX POLL BUGAIX POLL BUG5064,198434
=head2 WIN32 PLATFORM LIMITATIONS AND WORKAROUNDSWIN32 PLATFORM LIMITATIONS AND WORKAROUNDS5071,198720
=head3 General issuesGeneral issues5073,198771
=head3 The winsocket C<select> functionThe winsocket C<select> function5125,201196
=head3 Limited number of file descriptorsLimited number of file descriptors5144,202053
=head2 PORTABILITY REQUIREMENTSPORTABILITY REQUIREMENTS5169,203413
=head1 ALGORITHMIC COMPLEXITIESALGORITHMIC COMPLEXITIES5236,206269
=head1 PORTING FROM LIBEV 3.X TO 4.XPORTING FROM LIBEV 3.X TO 4.X5308,209180
=head1 GLOSSARYGLOSSARY5368,211080
=head1 AUTHORAUTHOR5440,212839

include/evserver/ev.h,184
#define EV_H_EV_H_41,2118
# define EV_CPP(EV_CPP44,2152
# define EV_CPP(EV_CPP46,2179
#define EV_H_EV_H_41,2118
# define EV_CPP(EV_CPP44,2152
# define EV_CPP(EV_CPP46,2179

include/evserver/ev_poll.c,265
pollidx_init (int *base, int count)pollidx_init43,2142
poll_modify (EV_P_ int fd, int oev, int nev)poll_modify52,2354
poll_poll (EV_P_ ev_tstamp timeout)poll_poll89,3113
poll_init (EV_P_ int flags)poll_init130,4133
poll_destroy (EV_P)poll_destroy143,4377

include/evserver/mkinstalldirs,0

include/evserver/ev_win32.c,206
volatile double SIGFPE_REQ = 0.0f;SIGFPE_REQ49,2456
ev_pipe (int filedes [2])ev_pipe53,2527
#define pipe(pipe135,4721
#define EV_HAVE_EV_TIME EV_HAVE_EV_TIME137,4764
ev_time (void)ev_time139,4800

include/evserver/Symbols.ev,0

include/evserver/ev_kqueue.c,424
kqueue_change (EV_P_ int fd, int filter, int flags, int fflags)kqueue_change47,2222
# define EV_ENABLE EV_ENABLE57,2541
# define NOTE_EOF NOTE_EOF60,2586
kqueue_modify (EV_P_ int fd, int oev, int nev)kqueue_modify64,2626
kqueue_poll (EV_P_ ev_tstamp timeout)kqueue_poll86,3193
kqueue_init (EV_P_ int flags)kqueue_init156,5294
kqueue_destroy (EV_P)kqueue_destroy179,5943
kqueue_fork (EV_P)kqueue_fork186,6042

include/evserver/Makefile.in,13733
VPATH = @srcdir@VPATH19,659
pkgdatadir = $(datadir)/@PACKAGE@pkgdatadir20,676
pkgincludedir = $(includedir)/@PACKAGE@pkgincludedir21,710
pkglibdir = $(libdir)/@PACKAGE@pkglibdir22,750
pkglibexecdir = $(libexecdir)/@PACKAGE@pkglibexecdir23,782
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cdam__cd24,822
install_sh_DATA = $(install_sh) -c -m 644install_sh_DATA25,881
install_sh_PROGRAM = $(install_sh) -cinstall_sh_PROGRAM26,923
install_sh_SCRIPT = $(install_sh) -cinstall_sh_SCRIPT27,961
INSTALL_HEADER = $(INSTALL_DATA)INSTALL_HEADER28,998
transform = $(program_transform_name)transform29,1031
NORMAL_INSTALL = :NORMAL_INSTALL30,1069
PRE_INSTALL = :PRE_INSTALL31,1088
POST_INSTALL = :POST_INSTALL32,1104
NORMAL_UNINSTALL = :NORMAL_UNINSTALL33,1121
PRE_UNINSTALL = :PRE_UNINSTALL34,1142
POST_UNINSTALL = :POST_UNINSTALL35,1160
build_triplet = @build@build_triplet36,1179
host_triplet = @host@host_triplet37,1203
subdir = .subdir38,1225
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \DIST_COMMON39,1236
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4ACLOCAL_M443,1472
am__aclocal_m4_deps = $(top_srcdir)/libev.m4 \am__aclocal_m4_deps44,1510
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \am__configure_deps46,1585
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \am__CONFIG_DISTCLEAN_FILES48,1672
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirsmkinstalldirs50,1780
CONFIG_HEADER = config.hCONFIG_HEADER51,1833
CONFIG_CLEAN_FILES =CONFIG_CLEAN_FILES52,1858
CONFIG_CLEAN_VPATH_FILES =CONFIG_CLEAN_VPATH_FILES53,1879
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;am__vpath_adj_setup54,1906
am__vpath_adj = case $$p in \am__vpath_adj55,1976
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;am__strip_dir59,2095
am__install_max = 40am__install_max60,2145
am__nobase_strip_setup = \am__nobase_strip_setup61,2166
am__nobase_strip = \am__nobase_strip63,2257
am__nobase_list = $(am__nobase_strip_setup); \am__nobase_list65,2347
am__base_list = \am__base_list72,2752
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man3dir)" \am__installdirs75,2863
LTLIBRARIES = $(lib_LTLIBRARIES)LTLIBRARIES77,2955
libev_la_LIBADD =libev_la_LIBADD78,2988
am_libev_la_OBJECTS = ev.lo event.loam_libev_la_OBJECTS79,3006
libev_la_OBJECTS = $(am_libev_la_OBJECTS)libev_la_OBJECTS80,3043
libev_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \libev_la_LINK81,3085
DEFAULT_INCLUDES = -I.@am__isrc@DEFAULT_INCLUDES84,3242
depcomp = $(SHELL) $(top_srcdir)/depcompdepcomp85,3275
am__depfiles_maybe = depfilesam__depfiles_maybe86,3316
am__mv = mv -fam__mv87,3346
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \COMPILE88,3361
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \LTCOMPILE90,3470
CCLD = $(CC)CCLD93,3654
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \LINK94,3667
SOURCES = $(libev_la_SOURCES)SOURCES97,3809
DIST_SOURCES = $(libev_la_SOURCES)DIST_SOURCES98,3839
man3dir = $(mandir)/man3man3dir99,3874
NROFF = nroffNROFF100,3899
MANS = $(man_MANS)MANS101,3913
HEADERS = $(include_HEADERS)HEADERS102,3932
ETAGS = etagsETAGS103,3961
CTAGS = ctagsCTAGS104,3975
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)DISTFILES105,3989
distdir = $(PACKAGE)-$(VERSION)distdir106,4058
top_distdir = $(distdir)top_distdir107,4090
am__remove_distdir = \am__remove_distdir108,4115
DIST_ARCHIVES = $(distdir).tar.gzDIST_ARCHIVES112,4278
GZIP_ENV = --bestGZIP_ENV113,4312
distuninstallcheck_listfiles = find . -type f -printdistuninstallcheck_listfiles114,4330
distcleancheck_listfiles = find . -type f -printdistcleancheck_listfiles115,4383
ACLOCAL = @ACLOCAL@ACLOCAL116,4432
AMTAR = @AMTAR@AMTAR117,4452
AR = @AR@AR118,4468
AUTOCONF = @AUTOCONF@AUTOCONF119,4478
AUTOHEADER = @AUTOHEADER@AUTOHEADER120,4500
AUTOMAKE = @AUTOMAKE@AUTOMAKE121,4526
AWK = @AWK@AWK122,4548
CC = @CC@CC123,4560
CCDEPMODE = @CCDEPMODE@CCDEPMODE124,4570
CFLAGS = @CFLAGS@CFLAGS125,4594
CPP = @CPP@CPP126,4612
CPPFLAGS = @CPPFLAGS@CPPFLAGS127,4624
CYGPATH_W = @CYGPATH_W@CYGPATH_W128,4646
DEFS = @DEFS@DEFS129,4670
DEPDIR = @DEPDIR@DEPDIR130,4684
DSYMUTIL = @DSYMUTIL@DSYMUTIL131,4702
DUMPBIN = @DUMPBIN@DUMPBIN132,4724
ECHO_C = @ECHO_C@ECHO_C133,4744
ECHO_N = @ECHO_N@ECHO_N134,4762
ECHO_T = @ECHO_T@ECHO_T135,4780
EGREP = @EGREP@EGREP136,4798
EXEEXT = @EXEEXT@EXEEXT137,4814
FGREP = @FGREP@FGREP138,4832
GREP = @GREP@GREP139,4848
INSTALL = @INSTALL@INSTALL140,4862
INSTALL_DATA = @INSTALL_DATA@INSTALL_DATA141,4882
INSTALL_PROGRAM = @INSTALL_PROGRAM@INSTALL_PROGRAM142,4912
INSTALL_SCRIPT = @INSTALL_SCRIPT@INSTALL_SCRIPT143,4948
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@INSTALL_STRIP_PROGRAM144,4982
LD = @LD@LD145,5030
LDFLAGS = @LDFLAGS@LDFLAGS146,5040
LIBOBJS = @LIBOBJS@LIBOBJS147,5060
LIBS = @LIBS@LIBS148,5080
LIBTOOL = @LIBTOOL@LIBTOOL149,5094
LIPO = @LIPO@LIPO150,5114
LN_S = @LN_S@LN_S151,5128
LTLIBOBJS = @LTLIBOBJS@LTLIBOBJS152,5142
MAINT = @MAINT@MAINT153,5166
MAKEINFO = @MAKEINFO@MAKEINFO154,5182
MKDIR_P = @MKDIR_P@MKDIR_P155,5204
NM = @NM@NM156,5224
NMEDIT = @NMEDIT@NMEDIT157,5234
OBJDUMP = @OBJDUMP@OBJDUMP158,5252
OBJEXT = @OBJEXT@OBJEXT159,5272
OTOOL = @OTOOL@OTOOL160,5290
OTOOL64 = @OTOOL64@OTOOL64161,5306
PACKAGE = @PACKAGE@PACKAGE162,5326
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@PACKAGE_BUGREPORT163,5346
PACKAGE_NAME = @PACKAGE_NAME@PACKAGE_NAME164,5386
PACKAGE_STRING = @PACKAGE_STRING@PACKAGE_STRING165,5416
PACKAGE_TARNAME = @PACKAGE_TARNAME@PACKAGE_TARNAME166,5450
PACKAGE_URL = @PACKAGE_URL@PACKAGE_URL167,5486
PACKAGE_VERSION = @PACKAGE_VERSION@PACKAGE_VERSION168,5514
PATH_SEPARATOR = @PATH_SEPARATOR@PATH_SEPARATOR169,5550
RANLIB = @RANLIB@RANLIB170,5584
SED = @SED@SED171,5602
SET_MAKE = @SET_MAKE@SET_MAKE172,5614
SHELL = @SHELL@SHELL173,5636
STRIP = @STRIP@STRIP174,5652
VERSION = @VERSION@VERSION175,5668
abs_builddir = @abs_builddir@abs_builddir176,5688
abs_srcdir = @abs_srcdir@abs_srcdir177,5718
abs_top_builddir = @abs_top_builddir@abs_top_builddir178,5744
abs_top_srcdir = @abs_top_srcdir@abs_top_srcdir179,5782
ac_ct_CC = @ac_ct_CC@ac_ct_CC180,5816
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@ac_ct_DUMPBIN181,5838
am__include = @am__include@am__include182,5870
am__leading_dot = @am__leading_dot@am__leading_dot183,5898
am__quote = @am__quote@am__quote184,5934
am__tar = @am__tar@am__tar185,5958
am__untar = @am__untar@am__untar186,5978
bindir = @bindir@bindir187,6002
build = @build@build188,6020
build_alias = @build_alias@build_alias189,6036
build_cpu = @build_cpu@build_cpu190,6064
build_os = @build_os@build_os191,6088
build_vendor = @build_vendor@build_vendor192,6110
builddir = @builddir@builddir193,6140
datadir = @datadir@datadir194,6162
datarootdir = @datarootdir@datarootdir195,6182
docdir = @docdir@docdir196,6210
dvidir = @dvidir@dvidir197,6228
exec_prefix = @exec_prefix@exec_prefix198,6246
host = @host@host199,6274
host_alias = @host_alias@host_alias200,6288
host_cpu = @host_cpu@host_cpu201,6314
host_os = @host_os@host_os202,6336
host_vendor = @host_vendor@host_vendor203,6356
htmldir = @htmldir@htmldir204,6384
includedir = @includedir@includedir205,6404
infodir = @infodir@infodir206,6430
install_sh = @install_sh@install_sh207,6450
libdir = @libdir@libdir208,6476
libexecdir = @libexecdir@libexecdir209,6494
localedir = @localedir@localedir210,6520
localstatedir = @localstatedir@localstatedir211,6544
lt_ECHO = @lt_ECHO@lt_ECHO212,6576
mandir = @mandir@mandir213,6596
mkdir_p = @mkdir_p@mkdir_p214,6614
oldincludedir = @oldincludedir@oldincludedir215,6634
pdfdir = @pdfdir@pdfdir216,6666
prefix = @prefix@prefix217,6684
program_transform_name = @program_transform_name@program_transform_name218,6702
psdir = @psdir@psdir219,6752
sbindir = @sbindir@sbindir220,6768
sharedstatedir = @sharedstatedir@sharedstatedir221,6788
srcdir = @srcdir@srcdir222,6822
sysconfdir = @sysconfdir@sysconfdir223,6840
target_alias = @target_alias@target_alias224,6866
top_build_prefix = @top_build_prefix@top_build_prefix225,6896
top_builddir = @top_builddir@top_builddir226,6934
top_srcdir = @top_srcdir@top_srcdir227,6964
AUTOMAKE_OPTIONS = foreignAUTOMAKE_OPTIONS228,6990
VERSION_INFO = 4:0:0VERSION_INFO229,7017
EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \EXTRA_DIST230,7038
man_MANS = ev.3man_MANS235,7235
include_HEADERS = ev.h ev++.h event.hinclude_HEADERS236,7251
libev_la_SOURCES = ev.c event.clibev_la_SOURCES238,7316
libev_la_LDFLAGS = -version-info $(VERSION_INFO)libev_la_LDFLAGS239,7348
all: config.hall240,7397
am--refresh:am--refresh245,7481
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)$(srcdir)/Makefile.in247,7498
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.statusMakefile261,7974
$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)$(top_builddir)/config.status271,8335
$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)$(top_srcdir)/configure274,8457
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)$(ACLOCAL_M4)276,8563
$(am__aclocal_m4_deps):$(am__aclocal_m4_deps)278,8678
config.h: stamp-h1config.h280,8703
stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.statusstamp-h1286,8821
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) $(srcdir)/config.h.in289,8957
distclean-hdr:distclean-hdr294,9097
install-libLTLIBRARIES: $(lib_LTLIBRARIES)install-libLTLIBRARIES296,9138
uninstall-libLTLIBRARIES:uninstall-libLTLIBRARIES310,9728
clean-libLTLIBRARIES:clean-libLTLIBRARIES319,10099
libev.la: $(libev_la_OBJECTS) $(libev_la_DEPENDENCIES) libev.la327,10400
mostlyclean-compile:mostlyclean-compile330,10539
distclean-compile:distclean-compile333,10581
.c.o:.c.o339,10755
.c.obj:.c.obj346,11123
.c.lo:.c.lo353,11527
mostlyclean-libtool:mostlyclean-libtool360,11908
clean-libtool:clean-libtool363,11943
distclean-libtool:distclean-libtool366,11980
install-man3: $(man_MANS)install-man3368,12025
uninstall-man3:uninstall-man3395,13095
install-includeHEADERS: $(include_HEADERS)install-includeHEADERS406,13570
uninstall-includeHEADERS:uninstall-includeHEADERS419,14059
ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)ID427,14383
tags: TAGStags435,14730
TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \TAGS437,14742
ctags: CTAGSctags458,15476
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \CTAGS459,15489
GTAGS:GTAGS471,15982
distclean-tags:distclean-tags476,16103
distdir: $(DISTFILES)distdir479,16166
dist-gzip: distdirdist-gzip531,18498
dist-bzip2: distdirdist-bzip2535,18620
dist-lzma: distdirdist-lzma539,18731
dist-xz: distdirdist-xz543,18841
dist-tarZ: distdirdist-tarZ547,18942
dist-shar: distdirdist-shar551,19050
dist-zip: distdirdist-zip555,19157
dist dist-all: distdirdist560,19257
dist dist-all: distdirdist-all560,19257
distcheck: distdistcheck567,19542
distuninstallcheck:distuninstallcheck621,21653
distcleancheck: distcleandistcleancheck630,22001
check-am: all-amcheck-am639,22336
check: check-amcheck640,22353
all-am: Makefile $(LTLIBRARIES) $(MANS) $(HEADERS) config.hall-am641,22369
installdirs:installdirs642,22429
install: install-aminstall646,22581
install-exec: install-exec-aminstall-exec647,22601
install-data: install-data-aminstall-data648,22631
uninstall: uninstall-amuninstall649,22661
install-am: all-aminstall-am651,22686
installcheck: installcheck-aminstallcheck654,22764
install-strip:install-strip655,22794
mostlyclean-generic:mostlyclean-generic660,23042
clean-generic:clean-generic662,23064
distclean-generic:distclean-generic664,23080
maintainer-clean-generic:maintainer-clean-generic668,23266
clean: clean-amclean671,23418
clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \clean-am673,23435
distclean: distclean-amdistclean676,23513
distclean-am: clean-am distclean-compile distclean-generic \distclean-am680,23613
dvi: dvi-amdvi683,23723
dvi-am:dvi-am685,23736
html: html-amhtml687,23745
html-am:html-am689,23760
info: info-aminfo691,23770
info-am:info-am693,23785
install-data-am: install-includeHEADERS install-maninstall-data-am695,23795
install-dvi: install-dvi-aminstall-dvi697,23848
install-dvi-am:install-dvi-am699,23877
install-exec-am: install-libLTLIBRARIESinstall-exec-am701,23894
install-html: install-html-aminstall-html703,23935
install-html-am:install-html-am705,23966
install-info: install-info-aminstall-info707,23984
install-info-am:install-info-am709,24015
install-man: install-man3install-man711,24033
install-pdf: install-pdf-aminstall-pdf713,24060
install-pdf-am:install-pdf-am715,24089
install-ps: install-ps-aminstall-ps717,24106
install-ps-am:install-ps-am719,24133
installcheck-am:installcheck-am721,24149
maintainer-clean: maintainer-clean-ammaintainer-clean723,24167
maintainer-clean-am: distclean-am maintainer-clean-genericmaintainer-clean-am728,24319
mostlyclean: mostlyclean-ammostlyclean730,24379
mostlyclean-am: mostlyclean-compile mostlyclean-generic \mostlyclean-am732,24408
pdf: pdf-ampdf735,24488
pdf-am:pdf-am737,24501
ps: ps-amps739,24510
ps-am:ps-am741,24521
uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \uninstall-am743,24529
uninstall-man: uninstall-man3uninstall-man746,24611
ev.3: ev.podev.3769,25693

include/evserver/ev_epoll.c,302
#define EV_EMASK_EPERM EV_EMASK_EPERM68,3408
epoll_modify (EV_P_ int fd, int oev, int nev)epoll_modify71,3449
epoll_poll (EV_P_ ev_tstamp timeout)epoll_poll142,5578
epoll_init (EV_P_ int flags)epoll_init236,8837
epoll_destroy (EV_P)epoll_destroy261,9468
epoll_fork (EV_P)epoll_fork268,9572

include/evserver/aclocal.m4,6132
m4_define([_LT_COPYING], [dnl_LT_COPYING32,1479
AC_DEFUN([LT_INIT],LT_INIT88,3459
m4_define([_LT_CONFIG_LIBTOOL_INIT],_LT_CONFIG_LIBTOOL_INIT297,9406
m4_define([_LT_OUTPUT_LIBTOOL_INIT])_LT_OUTPUT_LIBTOOL_INIT304,9554
m4_define([_LT_CONFIG_LIBTOOL],_LT_CONFIG_LIBTOOL310,9721
m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])_LT_OUTPUT_LIBTOOL_COMMANDS317,9868
m4_define([_LT_FORMAT_COMMENT],_LT_FORMAT_COMMENT332,10319
m4_define([_LT_DECL],_LT_DECL348,10879
m4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])_LT_TAGDECL362,11403
m4_define([lt_decl_tag_varnames],lt_decl_tag_varnames367,11575
m4_define([_lt_decl_filter],_lt_decl_filter373,11772
m4_define([lt_decl_quote_varnames],lt_decl_quote_varnames385,12224
m4_define([lt_decl_dquote_varnames],lt_decl_dquote_varnames391,12407
m4_define([lt_decl_varnames_tagged],lt_decl_varnames_tagged397,12591
m4_define([_lt_decl_varnames_tagged],_lt_decl_varnames_tagged402,12811
m4_define([lt_decl_all_varnames],lt_decl_all_varnames408,13006
m4_define([_lt_decl_all_varnames],_lt_decl_all_varnames414,13168
m4_define([_LT_CONFIG_STATUS_DECLARE],_LT_CONFIG_STATUS_DECLARE425,13586
m4_define([_LT_LIBTOOL_DECLARE],_LT_LIBTOOL_DECLARE458,14769
m4_define([_LT_LIBTOOL_TAG_VARS],_LT_LIBTOOL_TAG_VARS486,15844
m4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])_LT_TAGVAR493,16053
m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],_LT_OUTPUT_LIBTOOL_COMMANDS_INIT520,17258
AC_DEFUN([LT_OUTPUT],LT_OUTPUT577,18914
AC_DEFUN([LT_SUPPORTED_TAG], [])LT_SUPPORTED_TAG772,24401
m4_define([_LT_LANG_C_enabled], [])_LT_LANG_C_enabled776,24468
m4_define([_LT_TAGS], [])_LT_TAGS777,24504
AC_DEFUN([LT_LANG],LT_LANG783,24636
m4_define([_LT_SHELL_INIT],_LT_SHELL_INIT1058,35112
AC_DEFUN([_LT_COMPILER_OPTION],_LT_COMPILER_OPTION1417,45461
AC_DEFUN([_LT_LINKER_OPTION],_LT_LINKER_OPTION1468,47463
AC_DEFUN([LT_CMD_MAX_LEN],LT_CMD_MAX_LEN1510,48627
AC_DEFUN([LT_SYS_DLOPEN_SELF],LT_SYS_DLOPEN_SELF1739,55591
AC_DEFUN([_LT_PATH_TOOL_PREFIX],_LT_PATH_TOOL_PREFIX2756,91164
AC_DEFUN([LT_PATH_LD],LT_PATH_LD2841,93755
AC_DEFUN([LT_PATH_NM],LT_PATH_NM3194,104122
AC_DEFUN([LT_LIB_M],LT_LIB_M3282,106928
AC_DEFUN([LT_PROG_GCJ],LT_PROG_GCJ6994,250465
AC_DEFUN([LT_PROG_RC],LT_PROG_RC7010,250859
AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])LTOPTIONS_VERSION7396,261308
m4_define([_LT_MANGLE_OPTION],_LT_MANGLE_OPTION7401,261444
m4_define([_LT_SET_OPTION],_LT_SET_OPTION7410,261772
m4_define([_LT_IF_OPTION],_LT_IF_OPTION7421,262159
m4_define([_LT_UNLESS_OPTIONS],_LT_UNLESS_OPTIONS7429,262440
m4_define([_LT_MANGLE_DEFUN],_LT_MANGLE_DEFUN7474,264111
m4_define([LT_OPTION_DEFINE],LT_OPTION_DEFINE7480,264319
m4_define([_LT_ENABLE_SHARED],_LT_ENABLE_SHARED7542,265993
AC_DEFUN([AC_ENABLE_SHARED],AC_ENABLE_SHARED7574,267001
AC_DEFUN([AC_DISABLE_SHARED],AC_DISABLE_SHARED7578,267100
m4_define([_LT_ENABLE_STATIC],_LT_ENABLE_STATIC7596,267642
AC_DEFUN([AC_ENABLE_STATIC],AC_ENABLE_STATIC7628,268645
AC_DEFUN([AC_DISABLE_STATIC],AC_DISABLE_STATIC7632,268744
m4_define([_LT_ENABLE_FAST_INSTALL],_LT_ENABLE_FAST_INSTALL7650,269316
m4_define([_LT_WITH_PIC],_LT_WITH_PIC7706,271291
m4_define([_LTDL_MODE], [])_LTDL_MODE7733,272076
m4_define([_LTDL_TYPE], [])_LTDL_TYPE7741,272371
AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])LTSUGAR_VERSION7759,273051
m4_define([lt_join],lt_join7768,273358
m4_define([_lt_join],_lt_join7772,273500
m4_define([lt_car], [[$1]])lt_car7783,273799
m4_define([lt_cdr],lt_cdr7784,273827
m4_define([lt_unquote], $1)lt_unquote7788,273973
m4_define([lt_append],lt_append7801,274564
m4_define([lt_combine],lt_combine7813,275020
m4_define([lt_if_append_uniq],lt_if_append_uniq7826,275633
m4_define([lt_dict_add],lt_dict_add7836,275890
m4_define([lt_dict_add_subkey],lt_dict_add_subkey7842,276040
m4_define([lt_dict_fetch],lt_dict_fetch7848,276180
m4_define([lt_if_dict_fetch],lt_if_dict_fetch7856,276456
m4_define([lt_dict_filter],lt_dict_filter7864,276683
m4_define([LT_PACKAGE_VERSION], [2.2.6b])LT_PACKAGE_VERSION7885,277389
m4_define([LT_PACKAGE_REVISION], [1.3017])LT_PACKAGE_REVISION7886,277431
AC_DEFUN([LTVERSION_VERSION],LTVERSION_VERSION7888,277475
AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])LTOBSOLETE_VERSION7930,279368
AC_DEFUN([AM_AUTOMAKE_VERSION],AM_AUTOMAKE_VERSION7999,283884
m4_define([_AM_AUTOCONF_VERSION], [])_AM_AUTOCONF_VERSION8012,284418
AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],AM_SET_CURRENT_AUTOMAKE_VERSION8018,284651
AC_DEFUN([AM_AUX_DIR_EXPAND],AM_AUX_DIR_EXPAND8070,287138
AC_DEFUN([AM_CONDITIONAL],AM_CONDITIONAL8091,287799
AC_DEFUN([_AM_DEPENDENCIES],_AM_DEPENDENCIES8139,289501
AC_DEFUN([AM_SET_DEPDIR],AM_SET_DEPDIR8274,294791
AC_DEFUN([AM_DEP_TRACK],AM_DEP_TRACK8282,294939
AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],_AM_OUTPUT_DEPENDENCY_COMMANDS8308,295831
AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],AM_OUTPUT_DEPENDENCY_COMMANDS8369,298356
AC_DEFUN([AM_INIT_AUTOMAKE],AM_INIT_AUTOMAKE8400,299683
m4_define([_AC_COMPILER_EXEEXT],_AC_COMPILER_EXEEXT8489,303111
AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],_AC_AM_CONFIG_HEADER_HOOK8500,303584
AC_DEFUN([AM_PROG_INSTALL_SH],AM_PROG_INSTALL_SH8523,304284
AC_DEFUN([AM_SET_LEADING_DOT],AM_SET_LEADING_DOT8545,304947
AC_DEFUN([AM_MAINTAINER_MODE],AM_MAINTAINER_MODE8574,305877
AC_DEFUN([AM_MAKE_INCLUDE],AM_MAKE_INCLUDE8609,307342
AC_DEFUN([AM_MISSING_PROG],AM_MISSING_PROG8661,308719
AC_DEFUN([AM_MISSING_HAS_RUN],AM_MISSING_HAS_RUN8671,309008
AC_DEFUN([AM_PROG_MKDIR_P],AM_PROG_MKDIR_P8700,309806
AC_DEFUN([_AM_MANGLE_OPTION],_AM_MANGLE_OPTION8729,310860
AC_DEFUN([_AM_SET_OPTION],_AM_SET_OPTION8735,311081
AC_DEFUN([_AM_SET_OPTIONS],_AM_SET_OPTIONS8741,311271
AC_DEFUN([_AM_IF_OPTION],_AM_IF_OPTION8747,311515
AC_DEFUN([AM_SANITY_CHECK],AM_SANITY_CHECK8763,311998
AC_DEFUN([AM_PROG_INSTALL_STRIP],AM_PROG_INSTALL_STRIP8830,314394
AC_DEFUN([_AM_SUBST_NOTMAKE])_AM_SUBST_NOTMAKE8855,315407
AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])AM_SUBST_NOTMAKE8860,315535
AC_DEFUN([_AM_PROG_TAR],_AM_PROG_TAR8885,316373

include/evserver/autogen.sh,0

include/mongo/bson/indent,0

include/mongo/bson/uncrustify.cfg,0

include/mongo/bson/b64_ntop.h,168
#define Assert(Assert47,2293
static const char Base64[] =Base6449,2337
static const char Pad64 = '=';Pad6451,2437
b64_ntop (uint8_t const *src,b64_ntop116,5650

include/mongo/bson/bson-context.c,1417
#define HOST_NAME_MAX HOST_NAME_MAX39,990
static bson_context_t gContextDefault;gContextDefault46,1044
gettid (void)gettid51,1124
_bson_context_get_oid_host (bson_context_t *context,  /* IN */_bson_context_get_oid_host76,1588
_bson_context_get_oid_host_cached (bson_context_t *context, /* IN */_bson_context_get_oid_host_cached117,2542
_bson_getpid (void)_bson_getpid130,2872
_bson_context_get_oid_pid (bson_context_t *context, /* IN */_bson_context_get_oid_pid165,3501
_bson_context_get_oid_pid_cached (bson_context_t *context, /* IN */_bson_context_get_oid_pid_cached200,4290
_bson_context_get_oid_seq32 (bson_context_t *context, /* IN */_bson_context_get_oid_seq32225,4864
_bson_context_get_oid_seq32_threadsafe (bson_context_t *context, /* IN */_bson_context_get_oid_seq32_threadsafe252,5486
_bson_context_get_oid_seq64 (bson_context_t *context, /* IN */_bson_context_get_oid_seq64279,6148
_bson_context_get_oid_seq64_threadsafe (bson_context_t *context, /* IN */_bson_context_get_oid_seq64_threadsafe309,6796
_bson_context_init (bson_context_t *context,    /* IN */_bson_context_init320,7107
bson_context_new (bson_context_flags_t flags)bson_context_new428,10559
bson_context_destroy (bson_context_t *context)  /* IN */bson_context_destroy457,11153
BSON_ONCE_FUN(_bson_context_init_default)BSON_ONCE_FUN467,11337
bson_context_get_default (void)bson_context_get_default496,12136

include/mongo/bson/bson-oid.c,905
static const uint16_t gHexCharPairs[] = {gHexCharPairs36,1077
bson_oid_init_sequence (bson_oid_t     *oid,     /* OUT */bson_oid_init_sequence118,5578
bson_oid_init (bson_oid_t     *oid,     /* OUT */bson_oid_init158,6663
bson_oid_init_from_data (bson_oid_t    *oid,  /* OUT */bson_oid_init_from_data202,7672
bson_oid_init_from_string (bson_oid_t *oid, /* OUT */bson_oid_init_from_string234,8362
bson_oid_get_time_t (const bson_oid_t *oid) /* IN */bson_oid_get_time_t261,8895
bson_oid_to_stringbson_oid_to_string292,9557
bson_oid_hash (const bson_oid_t *oid) /* IN */bson_oid_hash358,11366
bson_oid_compare (const bson_oid_t *oid1, /* IN */bson_oid_compare385,11972
bson_oid_equal (const bson_oid_t *oid1, /* IN */bson_oid_equal413,12604
bson_oid_copy (const bson_oid_t *src, /* IN */bson_oid_copy444,13248
bson_oid_is_valid (const char *str,    /* IN */bson_oid_is_valid476,13979

include/mongo/bson/bson.h,1674
#define BSON_HBSON_H19,612
#define BSON_INSIDEBSON_INSIDE21,628
#define bson_empty(bson_empty64,1495
#define bson_empty0(bson_empty072,1666
#define bson_clear(bson_clear84,1882
#define BSON_MAX_SIZE BSON_MAX_SIZE98,2109
#define BSON_APPEND_ARRAY(BSON_APPEND_ARRAY101,2160
#define BSON_APPEND_ARRAY_BEGIN(BSON_APPEND_ARRAY_BEGIN104,2257
#define BSON_APPEND_BINARY(BSON_APPEND_BINARY107,2370
#define BSON_APPEND_BOOL(BSON_APPEND_BOOL110,2496
#define BSON_APPEND_CODE(BSON_APPEND_CODE113,2592
#define BSON_APPEND_CODE_WITH_SCOPE(BSON_APPEND_CODE_WITH_SCOPE116,2688
#define BSON_APPEND_DBPOINTER(BSON_APPEND_DBPOINTER119,2819
#define BSON_APPEND_DOCUMENT_BEGIN(BSON_APPEND_DOCUMENT_BEGIN122,2936
#define BSON_APPEND_DOUBLE(BSON_APPEND_DOUBLE125,3055
#define BSON_APPEND_DOCUMENT(BSON_APPEND_DOCUMENT128,3155
#define BSON_APPEND_INT32(BSON_APPEND_INT32131,3259
#define BSON_APPEND_INT64(BSON_APPEND_INT64134,3357
#define BSON_APPEND_MINKEY(BSON_APPEND_MINKEY137,3455
#define BSON_APPEND_MAXKEY(BSON_APPEND_MAXKEY140,3546
#define BSON_APPEND_NULL(BSON_APPEND_NULL143,3637
#define BSON_APPEND_OID(BSON_APPEND_OID146,3724
#define BSON_APPEND_REGEX(BSON_APPEND_REGEX149,3818
#define BSON_APPEND_UTF8(BSON_APPEND_UTF8152,3925
#define BSON_APPEND_SYMBOL(BSON_APPEND_SYMBOL155,4041
#define BSON_APPEND_TIME_T(BSON_APPEND_TIME_T158,4161
#define BSON_APPEND_TIMEVAL(BSON_APPEND_TIMEVAL161,4261
#define BSON_APPEND_DATE_TIME(BSON_APPEND_DATE_TIME164,4363
#define BSON_APPEND_TIMESTAMP(BSON_APPEND_TIMESTAMP167,4469
#define BSON_APPEND_UNDEFINED(BSON_APPEND_UNDEFINED170,4584
#define BSON_APPEND_VALUE(BSON_APPEND_VALUE173,4681

include/mongo/bson/bson-error.c,141
bson_set_error (bson_error_t *error,  /* OUT */bson_set_error61,1671
bson_strerror_r (int     err_code,  /* IN */bson_strerror_r101,2601

include/mongo/bson/bson-atomic.c,427
static pthread_mutex_t gBarrier = PTHREAD_MUTEX_INITIALIZER;gBarrier30,887
bson_memory_barrier (void)bson_memory_barrier32,953
static pthread_mutex_t gSync32 = PTHREAD_MUTEX_INITIALIZER;gSync3243,1165
bson_atomic_int_add (volatile int32_t *p,bson_atomic_int_add45,1233
static pthread_mutex_t gSync64 = PTHREAD_MUTEX_INITIALIZER;gSync6462,1504
bson_atomic_int64_add (volatile int64_t *p,bson_atomic_int64_add64,1572

include/mongo/bson/bson-json.h,611
#define BSON_JSON_HBSON_JSON_H19,617
typedef struct _bson_json_reader_t bson_json_reader_t;bson_json_reader_t33,795
{__anon4ab3a037010337,865
   BSON_JSON_ERROR_READ_CORRUPT_JS = 1,BSON_JSON_ERROR_READ_CORRUPT_JS38,867
   BSON_JSON_ERROR_READ_INVALID_PARAM,BSON_JSON_ERROR_READ_INVALID_PARAM39,907
   BSON_JSON_ERROR_READ_CB_FAILURE,BSON_JSON_ERROR_READ_CB_FAILURE40,946
} bson_json_error_code_t;bson_json_error_code_t41,982
typedef ssize_t (*bson_json_reader_cb) (void    *handle,bson_json_reader_cb44,1010
typedef void    (*bson_json_destroy_cb)(void    *handle);bson_json_destroy_cb47,1178

include/mongo/bson/bson-string.c,1255
bson_string_new (const char *str) /* IN */bson_string_new57,1567
bson_string_free (bson_string_t *string,       /* IN */bson_string_free105,2618
bson_string_append (bson_string_t *string, /* IN */bson_string_append141,3237
bson_string_append_c (bson_string_t *string, /* IN */bson_string_append_c185,4276
bson_string_append_unichar (bson_string_t  *string,  /* IN */bson_string_append_unichar221,5005
bson_string_append_printf (bson_string_t *string,bson_string_append_printf256,5704
bson_string_truncate (bson_string_t *string, /* IN */bson_string_truncate294,6520
bson_strdup (const char *str) /* IN */bson_strdup337,7373
bson_strdupv_printf (const char *format, /* IN */bson_strdupv_printf376,8018
bson_strdup_printf (const char *format, /* IN */bson_strdup_printf426,8990
bson_strndup (const char *str,     /* IN */bson_strndup459,9610
bson_strfreev (char **str) /* IN */bson_strfreev492,10223
bson_strnlen (const char *s,      /* IN */bson_strnlen521,10699
bson_strncpy (char       *dst,  /* IN */bson_strncpy560,11402
bson_vsnprintf (char       *str,    /* IN */bson_vsnprintf596,12312
bson_snprintf (char       *str,    /* IN */bson_snprintf650,13436
bson_ascii_strtoll (const char  *s,bson_ascii_strtoll669,13754

include/mongo/bson/bson-keys.c,141
static const char * gUint32Strs[] = {gUint32Strs24,667
bson_uint32_to_string (uint32_t     value,  /* IN */bson_uint32_to_string159,8876

include/mongo/bson/bson-timegm-private.h,59
#define BSON_TIMEGM_PRIVATE_HBSON_TIMEGM_PRIVATE_H19,627

include/mongo/bson/bson-iter.c,4416
#define ITER_TYPE(ITER_TYPE21,627
bson_iter_init (bson_iter_t  *iter, /* OUT */bson_iter_init41,1072
bson_iter_recurse (const bson_iter_t *iter,  /* IN */bson_iter_recurse86,2002
bson_iter_init_find (bson_iter_t  *iter, /* INOUT */bson_iter_init_find137,3100
bson_iter_init_find_case (bson_iter_t  *iter, /* INOUT */bson_iter_init_find_case166,3788
_bson_iter_find_with_len (bson_iter_t *iter,   /* INOUT */_bson_iter_find_with_len195,4463
bson_iter_find (bson_iter_t *iter, /* INOUT */bson_iter_find240,5432
bson_iter_find_case (bson_iter_t *iter, /* INOUT */bson_iter_find_case269,6092
bson_iter_find_descendant (bson_iter_t *iter,       /* INOUT */bson_iter_find_descendant308,7033
bson_iter_key (const bson_iter_t *iter) /* IN */bson_iter_key361,8280
bson_iter_type (const bson_iter_t *iter) /* IN */bson_iter_type387,8809
_bson_iter_next_internal (bson_iter_t  *iter,         /* INOUT */_bson_iter_next_internal421,9751
bson_iter_next (bson_iter_t *iter) /* INOUT */bson_iter_next740,16991
bson_iter_binary (const bson_iter_t  *iter,        /* IN */bson_iter_binary777,17947
bson_iter_bool (const bson_iter_t *iter) /* IN */bson_iter_bool839,19350
bson_iter_as_bool (const bson_iter_t *iter) /* IN */bson_iter_as_bool872,20074
bson_iter_double (const bson_iter_t *iter) /* IN */bson_iter_double913,20952
bson_iter_int32 (const bson_iter_t *iter) /* IN */bson_iter_int32942,21497
bson_iter_int64 (const bson_iter_t *iter) /* IN */bson_iter_int64972,22063
bson_iter_as_int64 (const bson_iter_t *iter) /* IN */bson_iter_as_int641006,22707
bson_iter_oid (const bson_iter_t *iter) /* IN */bson_iter_oid1043,23567
bson_iter_regex (const bson_iter_t *iter,    /* IN */bson_iter_regex1073,24174
bson_iter_utf8 (const bson_iter_t *iter,   /* IN */bson_iter_utf81116,25176
bson_iter_dup_utf8 (const bson_iter_t *iter,   /* IN */bson_iter_dup_utf81156,26107
bson_iter_code (const bson_iter_t *iter,   /* IN */bson_iter_code1202,27150
bson_iter_codewscope (const bson_iter_t  *iter,      /* IN */bson_iter_codewscope1251,28515
bson_iter_dbpointer (const bson_iter_t  *iter,           /* IN */bson_iter_dbpointer1319,30336
bson_iter_symbol (const bson_iter_t *iter,   /* IN */bson_iter_symbol1378,31858
bson_iter_date_time (const bson_iter_t *iter) /* IN */bson_iter_date_time1417,32744
bson_iter_time_t (const bson_iter_t *iter) /* IN */bson_iter_time_t1447,33349
bson_iter_timestamp (const bson_iter_t *iter,      /* IN */bson_iter_timestamp1482,34088
bson_iter_timeval (const bson_iter_t *iter,  /* IN */bson_iter_timeval1531,35376
bson_iter_document (const bson_iter_t  *iter,         /* IN */bson_iter_document1589,36929
bson_iter_array (const bson_iter_t  *iter,      /* IN */bson_iter_array1651,38688
#define VISIT_FIELD(VISIT_FIELD1670,39195
#define VISIT_AFTER VISIT_AFTER1671,39268
#define VISIT_BEFORE VISIT_BEFORE1672,39308
#define VISIT_CORRUPT VISIT_CORRUPT1673,39350
#define VISIT_DOUBLE VISIT_DOUBLE1674,39423
#define VISIT_UTF8 VISIT_UTF81675,39465
#define VISIT_DOCUMENT VISIT_DOCUMENT1676,39503
#define VISIT_ARRAY VISIT_ARRAY1677,39549
#define VISIT_BINARY VISIT_BINARY1678,39589
#define VISIT_UNDEFINED VISIT_UNDEFINED1679,39631
#define VISIT_OID VISIT_OID1680,39679
#define VISIT_BOOL VISIT_BOOL1681,39715
#define VISIT_DATE_TIME VISIT_DATE_TIME1682,39753
#define VISIT_NULL VISIT_NULL1683,39801
#define VISIT_REGEX VISIT_REGEX1684,39839
#define VISIT_DBPOINTER VISIT_DBPOINTER1685,39879
#define VISIT_CODE VISIT_CODE1686,39927
#define VISIT_SYMBOL VISIT_SYMBOL1687,39965
#define VISIT_CODEWSCOPE VISIT_CODEWSCOPE1688,40007
#define VISIT_INT32 VISIT_INT321689,40057
#define VISIT_TIMESTAMP VISIT_TIMESTAMP1690,40097
#define VISIT_INT64 VISIT_INT641691,40145
#define VISIT_MAXKEY VISIT_MAXKEY1692,40185
#define VISIT_MINKEY VISIT_MINKEY1693,40227
bson_iter_visit_all (bson_iter_t          *iter,    /* INOUT */bson_iter_visit_all1731,41347
bson_iter_overwrite_bool (bson_iter_t *iter,  /* IN */bson_iter_overwrite_bool2002,48080
bson_iter_overwrite_int32 (bson_iter_t *iter,  /* IN */bson_iter_overwrite_int322032,48762
bson_iter_overwrite_int64 (bson_iter_t *iter,   /* IN */bson_iter_overwrite_int642064,49530
bson_iter_overwrite_double (bson_iter_t *iter,  /* IN */bson_iter_overwrite_double2096,50302
bson_iter_value (bson_iter_t *iter) /* IN */bson_iter_value2128,51222

include/mongo/bson/bson-iso8601.c,221
get_tok (const char  *terminals,get_tok29,776
digits_only (const char *str,digits_only64,1443
parse_num (const char *str,parse_num79,1645
_bson_iso8601_date_parse (const char *str,_bson_iso8601_date_parse108,2176

include/mongo/bson/bcon.h,4758
#define BCON_H_BCON_H_22,719
#define BCON_STACK_MAX BCON_STACK_MAX30,775
#define BCON_ENSURE_DECLARE(BCON_ENSURE_DECLARE32,803
#define BCON_ENSURE(BCON_ENSURE35,915
#define BCON_ENSURE_STORAGE(BCON_ENSURE_STORAGE38,975
#define BCON_UTF8(BCON_UTF865,2133
#define BCON_DOUBLE(BCON_DOUBLE67,2227
#define BCON_DOCUMENT(BCON_DOCUMENT69,2317
#define BCON_ARRAY(BCON_ARRAY71,2419
#define BCON_BIN(BCON_BIN73,2515
#define BCON_UNDEFINED BCON_UNDEFINED78,2716
#define BCON_OID(BCON_OID79,2771
#define BCON_BOOL(BCON_BOOL81,2862
#define BCON_DATE_TIME(BCON_DATE_TIME83,2946
#define BCON_NULL BCON_NULL85,3041
#define BCON_REGEX(BCON_REGEX86,3086
#define BCON_DBPOINTER(BCON_DBPOINTER90,3244
#define BCON_CODE(BCON_CODE94,3415
#define BCON_SYMBOL(BCON_SYMBOL96,3509
#define BCON_CODEWSCOPE(BCON_CODEWSCOPE98,3607
#define BCON_INT32(BCON_INT32102,3769
#define BCON_TIMESTAMP(BCON_TIMESTAMP104,3856
#define BCON_INT64(BCON_INT64108,4020
#define BCON_MAXKEY BCON_MAXKEY110,4107
#define BCON_MINKEY BCON_MINKEY111,4156
#define BCON(BCON112,4205
#define BCON_ITER(BCON_ITER114,4294
#define BCONE_UTF8(BCONE_UTF8117,4394
#define BCONE_DOUBLE(BCONE_DOUBLE119,4502
#define BCONE_DOCUMENT(BCONE_DOCUMENT121,4606
#define BCONE_ARRAY(BCONE_ARRAY123,4712
#define BCONE_BIN(BCONE_BIN125,4812
#define BCONE_UNDEFINED BCONE_UNDEFINED130,5045
#define BCONE_OID(BCONE_OID131,5102
#define BCONE_BOOL(BCONE_BOOL133,5207
#define BCONE_DATE_TIME(BCONE_DATE_TIME135,5305
#define BCONE_NULL BCONE_NULL137,5414
#define BCONE_REGEX(BCONE_REGEX138,5461
#define BCONE_DBPOINTER(BCONE_DBPOINTER142,5645
#define BCONE_CODE(BCONE_CODE146,5842
#define BCONE_SYMBOL(BCONE_SYMBOL148,5950
#define BCONE_CODEWSCOPE(BCONE_CODEWSCOPE150,6062
#define BCONE_INT32(BCONE_INT32154,6240
#define BCONE_TIMESTAMP(BCONE_TIMESTAMP156,6341
#define BCONE_INT64(BCONE_INT64160,6531
#define BCONE_MAXKEY BCONE_MAXKEY162,6632
#define BCONE_MINKEY BCONE_MINKEY163,6683
#define BCONE_SKIP(BCONE_SKIP164,6734
#define BCONE_ITER(BCONE_ITER166,6825
#define BCON_MAGIC BCON_MAGIC169,6929
#define BCONE_MAGIC BCONE_MAGIC170,6967
{__anon810da3600103173,7020
   BCON_TYPE_UTF8,BCON_TYPE_UTF8174,7022
   BCON_TYPE_DOUBLE,BCON_TYPE_DOUBLE175,7041
   BCON_TYPE_DOCUMENT,BCON_TYPE_DOCUMENT176,7062
   BCON_TYPE_ARRAY,BCON_TYPE_ARRAY177,7085
   BCON_TYPE_BIN,BCON_TYPE_BIN178,7105
   BCON_TYPE_UNDEFINED,BCON_TYPE_UNDEFINED179,7123
   BCON_TYPE_OID,BCON_TYPE_OID180,7147
   BCON_TYPE_BOOL,BCON_TYPE_BOOL181,7165
   BCON_TYPE_DATE_TIME,BCON_TYPE_DATE_TIME182,7184
   BCON_TYPE_NULL,BCON_TYPE_NULL183,7208
   BCON_TYPE_REGEX,BCON_TYPE_REGEX184,7227
   BCON_TYPE_DBPOINTER,BCON_TYPE_DBPOINTER185,7247
   BCON_TYPE_CODE,BCON_TYPE_CODE186,7271
   BCON_TYPE_SYMBOL,BCON_TYPE_SYMBOL187,7290
   BCON_TYPE_CODEWSCOPE,BCON_TYPE_CODEWSCOPE188,7311
   BCON_TYPE_INT32,BCON_TYPE_INT32189,7336
   BCON_TYPE_TIMESTAMP,BCON_TYPE_TIMESTAMP190,7356
   BCON_TYPE_INT64,BCON_TYPE_INT64191,7380
   BCON_TYPE_MAXKEY,BCON_TYPE_MAXKEY192,7400
   BCON_TYPE_MINKEY,BCON_TYPE_MINKEY193,7421
   BCON_TYPE_BCON,BCON_TYPE_BCON194,7442
   BCON_TYPE_ARRAY_START,BCON_TYPE_ARRAY_START195,7461
   BCON_TYPE_ARRAY_END,BCON_TYPE_ARRAY_END196,7487
   BCON_TYPE_DOC_START,BCON_TYPE_DOC_START197,7511
   BCON_TYPE_DOC_END,BCON_TYPE_DOC_END198,7535
   BCON_TYPE_END,BCON_TYPE_END199,7557
   BCON_TYPE_RAW,BCON_TYPE_RAW200,7575
   BCON_TYPE_SKIP,BCON_TYPE_SKIP201,7593
   BCON_TYPE_ITER,BCON_TYPE_ITER202,7612
   BCON_TYPE_ERROR,BCON_TYPE_ERROR203,7631
} bcon_type_t;bcon_type_t204,7651
typedef struct bcon_append_ctx_framebcon_append_ctx_frame206,7667
   int         i;i208,7706
   bool is_array;is_array209,7724
   bson_t      bson;bson210,7742
} bcon_append_ctx_frame_t;bcon_append_ctx_frame_t211,7763
typedef struct bcon_extract_ctx_framebcon_extract_ctx_frame213,7791
   int         i;i215,7831
   bool is_array;is_array216,7849
   bson_iter_t iter;iter217,7867
} bcon_extract_ctx_frame_t;bcon_extract_ctx_frame_t218,7888
typedef struct _bcon_append_ctx_t_bcon_append_ctx_t220,7917
   bcon_append_ctx_frame_t stack[BCON_STACK_MAX];stack222,7953
   int                     n;n223,8003
} bcon_append_ctx_t;bcon_append_ctx_t224,8033
typedef struct _bcon_extract_ctx_t_bcon_extract_ctx_t226,8055
   bcon_extract_ctx_frame_t stack[BCON_STACK_MAX];stack228,8092
   int                      n;n229,8143
} bcon_extract_ctx_t;bcon_extract_ctx_t230,8174
#define BCON_APPEND(BCON_APPEND280,9584
#define BCON_APPEND_CTX(BCON_APPEND_CTX282,9670
#define BCON_EXTRACT(BCON_EXTRACT285,9779
#define BCON_EXTRACT_CTX(BCON_EXTRACT_CTX288,9868
#define BCON_NEW(BCON_NEW291,9975

include/mongo/bson/bson-endian.h,1626
#define BSON_ENDIAN_HBSON_ENDIAN_H19,619
#define BSON_BIG_ENDIAN BSON_BIG_ENDIAN39,911
#define BSON_LITTLE_ENDIAN BSON_LITTLE_ENDIAN40,943
# define BSON_UINT16_SWAP_LE_BE(BSON_UINT16_SWAP_LE_BE44,996
# define BSON_UINT32_SWAP_LE_BE(BSON_UINT32_SWAP_LE_BE45,1053
# define BSON_UINT64_SWAP_LE_BE(BSON_UINT64_SWAP_LE_BE46,1110
# define BSON_UINT16_SWAP_LE_BE(BSON_UINT16_SWAP_LE_BE70,2056
# define BSON_UINT32_SWAP_LE_BE(BSON_UINT32_SWAP_LE_BE75,2169
# define BSON_UINT64_SWAP_LE_BE(BSON_UINT64_SWAP_LE_BE80,2282
# define BSON_UINT16_FROM_LE(BSON_UINT16_FROM_LE85,2406
# define BSON_UINT16_TO_LE(BSON_UINT16_TO_LE86,2453
# define BSON_UINT16_FROM_BE(BSON_UINT16_FROM_BE87,2500
# define BSON_UINT16_TO_BE(BSON_UINT16_TO_BE88,2560
# define BSON_UINT32_FROM_LE(BSON_UINT32_FROM_LE89,2620
# define BSON_UINT32_TO_LE(BSON_UINT32_TO_LE90,2667
# define BSON_UINT32_FROM_BE(BSON_UINT32_FROM_BE91,2714
# define BSON_UINT32_TO_BE(BSON_UINT32_TO_BE92,2774
# define BSON_UINT64_FROM_LE(BSON_UINT64_FROM_LE93,2834
# define BSON_UINT64_TO_LE(BSON_UINT64_TO_LE94,2881
# define BSON_UINT64_FROM_BE(BSON_UINT64_FROM_BE95,2928
# define BSON_UINT64_TO_BE(BSON_UINT64_TO_BE96,2988
# define BSON_DOUBLE_FROM_LE(BSON_DOUBLE_FROM_LE97,3048
# define BSON_DOUBLE_TO_LE(BSON_DOUBLE_TO_LE98,3093
__bson_uint16_swap_slow (uint16_t v) /* IN */__bson_uint16_swap_slow136,4399
__bson_uint32_swap_slow (uint32_t v) /* IN */__bson_uint32_swap_slow160,4891
__bson_uint64_swap_slow (uint64_t v) /* IN */__bson_uint64_swap_slow186,5471
__bson_double_swap_slow (double v) /* IN */__bson_double_swap_slow218,6344

include/mongo/bson/bson-md5.c,2252
#  define BYTE_ORDER BYTE_ORDER68,2598
#  define BYTE_ORDER BYTE_ORDER70,2627
#define T_MASK T_MASK73,2659
#define T1 T174,2689
#define T2 T275,2739
#define T3 T376,2789
#define T4 T477,2814
#define T5 T578,2864
#define T6 T679,2914
#define T7 T780,2939
#define T8 T881,2989
#define T9 T982,3039
#define T10 T1083,3064
#define T11 T1184,3115
#define T12 T1285,3166
#define T13 T1386,3217
#define T14 T1487,3243
#define T15 T1588,3294
#define T16 T1689,3345
#define T17 T1790,3371
#define T18 T1891,3422
#define T19 T1992,3473
#define T20 T2093,3499
#define T21 T2194,3550
#define T22 T2295,3601
#define T23 T2396,3627
#define T24 T2497,3678
#define T25 T2598,3729
#define T26 T2699,3755
#define T27 T27100,3806
#define T28 T28101,3857
#define T29 T29102,3883
#define T30 T30103,3934
#define T31 T31104,3985
#define T32 T32105,4011
#define T33 T33106,4062
#define T34 T34107,4113
#define T35 T35108,4164
#define T36 T36109,4190
#define T37 T37110,4241
#define T38 T38111,4292
#define T39 T39112,4318
#define T40 T40113,4369
#define T41 T41114,4420
#define T42 T42115,4446
#define T43 T43116,4497
#define T44 T44117,4548
#define T45 T45118,4574
#define T46 T46119,4625
#define T47 T47120,4676
#define T48 T48121,4702
#define T49 T49122,4753
#define T50 T50123,4804
#define T51 T51124,4830
#define T52 T52125,4881
#define T53 T53126,4932
#define T54 T54127,4958
#define T55 T55128,5009
#define T56 T56129,5060
#define T57 T57130,5111
#define T58 T58131,5137
#define T59 T59132,5188
#define T60 T60133,5239
#define T61 T61134,5265
#define T62 T62135,5316
#define T63 T63136,5367
#define T64 T64137,5393
bson_md5_process (bson_md5_t     *md5,bson_md5_process141,5458
#    define xbuf xbuf209,7282
#define ROTATE_LEFT(ROTATE_LEFT217,7485
#define F(F222,7669
#define SET(SET223,7717
#define G(G248,8537
#define SET(SET249,8585
#define H(H274,9405
#define SET(SET275,9442
#define I(I300,10262
#define SET(SET301,10302
bson_md5_init (bson_md5_t *pms)bson_md5_init333,11260
bson_md5_append (bson_md5_t         *pms,bson_md5_append343,11513
bson_md5_finish (bson_md5_t   *pms,bson_md5_finish383,12495

include/mongo/bson/bson-memory.c,577
static bson_mem_vtable_t gMemVtable = {gMemVtable26,715
bson_malloc (size_t num_bytes) /* IN */bson_malloc63,1548
bson_malloc0 (size_t num_bytes) /* IN */bson_malloc098,2300
bson_realloc (void   *mem,        /* IN */bson_realloc135,3127
bson_realloc_ctx (void   *mem,        /* IN */bson_realloc_ctx183,4249
bson_free (void *mem) /* IN */bson_free214,4898
bson_zero_free (void  *mem,  /* IN */bson_zero_free243,5546
bson_mem_set_vtable (const bson_mem_vtable_t *vtable)bson_mem_set_vtable274,6207
bson_mem_restore_vtable (void)bson_mem_restore_vtable291,6551

include/mongo/bson/bson-writer.c,868
struct _bson_writer_t_bson_writer_t22,650
   bool                ready;ready24,674
   uint8_t           **buf;buf25,704
   size_t             *buflen;buflen26,732
   size_t              offset;offset27,763
   bson_realloc_func   realloc_func;realloc_func28,794
   void               *realloc_func_ctx;realloc_func_ctx29,831
   bson_t              b;b30,872
bson_writer_new (uint8_t           **buf,              /* IN */bson_writer_new62,1755
bson_writer_destroy (bson_writer_t *writer) /* IN */bson_writer_destroy101,2830
bson_writer_get_length (bson_writer_t *writer) /* IN */bson_writer_get_length130,3633
bson_writer_begin (bson_writer_t  *writer, /* IN */bson_writer_begin160,4426
bson_writer_end (bson_writer_t *writer) /* IN */bson_writer_end231,6029
bson_writer_rollback (bson_writer_t *writer) /* IN */bson_writer_rollback262,6760

include/mongo/bson/bson-iso8601-private.h,61
#define BSON_ISO8601_PRIVATE_HBSON_ISO8601_PRIVATE_H19,628

include/mongo/bson/bson-version-functions.h,65
#define BSON_VERSION_FUNCTIONS_HBSON_VERSION_FUNCTIONS_H24,746

include/mongo/bson/bson-clock.h,41
#define BSON_CLOCK_HBSON_CLOCK_H19,618

include/mongo/bson/bson-value.c,152
bson_value_copy (const bson_value_t *src, /* IN */bson_value_copy25,700
bson_value_destroy (bson_value_t *value) /* IN */bson_value_destroy136,5072

include/mongo/bson/bson-reader.h,310
#define BSON_READER_HBSON_READER_H19,619
#define BSON_ERROR_READER_BADFD BSON_ERROR_READER_BADFD35,852
typedef ssize_t (*bson_reader_read_func_t) (void  *handle, /* IN */bson_reader_read_func_t65,1676
typedef void (*bson_reader_destroy_func_t) (void *handle); /* IN */bson_reader_destroy_func_t90,2336

include/mongo/bson/bson-utf8.h,39
#define BSON_UTF8_HBSON_UTF8_H19,617

include/mongo/bson/bson-string.h,200
#define BSON_STRING_HBSON_STRING_H19,619
{__anon682f5c54010837,866
   char     *str;str38,868
   uint32_t  len;len39,886
   uint32_t  alloc;alloc40,904
} bson_string_t;bson_string_t41,924

include/mongo/bson/bson-json.c,9652
#define STACK_MAX STACK_MAX38,928
#define BSON_JSON_DEFAULT_BUF_SIZE BSON_JSON_DEFAULT_BUF_SIZE39,950
{__anon4ab3a032010343,1010
   BSON_JSON_REGULAR,BSON_JSON_REGULAR44,1012
   BSON_JSON_DONE,BSON_JSON_DONE45,1034
   BSON_JSON_ERROR,BSON_JSON_ERROR46,1053
   BSON_JSON_IN_START_MAP,BSON_JSON_IN_START_MAP47,1073
   BSON_JSON_IN_BSON_TYPE,BSON_JSON_IN_BSON_TYPE48,1100
   BSON_JSON_IN_BSON_TYPE_DATE_NUMBERLONG,BSON_JSON_IN_BSON_TYPE_DATE_NUMBERLONG49,1127
   BSON_JSON_IN_BSON_TYPE_DATE_ENDMAP,BSON_JSON_IN_BSON_TYPE_DATE_ENDMAP50,1170
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_STARTMAP,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_STARTMAP51,1209
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_VALUES,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_VALUES52,1255
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_ENDMAP,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_ENDMAP53,1299
} bson_json_read_state_t;bson_json_read_state_t54,1343
{__anon4ab3a032020358,1384
   BSON_JSON_LF_REGEX,BSON_JSON_LF_REGEX59,1386
   BSON_JSON_LF_OPTIONS,BSON_JSON_LF_OPTIONS60,1409
   BSON_JSON_LF_OID,BSON_JSON_LF_OID61,1434
   BSON_JSON_LF_BINARY,BSON_JSON_LF_BINARY62,1455
   BSON_JSON_LF_TYPE,BSON_JSON_LF_TYPE63,1479
   BSON_JSON_LF_DATE,BSON_JSON_LF_DATE64,1501
   BSON_JSON_LF_TIMESTAMP_T,BSON_JSON_LF_TIMESTAMP_T65,1523
   BSON_JSON_LF_TIMESTAMP_I,BSON_JSON_LF_TIMESTAMP_I66,1552
   BSON_JSON_LF_UNDEFINED,BSON_JSON_LF_UNDEFINED67,1581
   BSON_JSON_LF_MINKEY,BSON_JSON_LF_MINKEY68,1608
   BSON_JSON_LF_MAXKEY,BSON_JSON_LF_MAXKEY69,1632
   BSON_JSON_LF_INT64,BSON_JSON_LF_INT6470,1656
} bson_json_read_bson_state_t;bson_json_read_bson_state_t71,1679
{__anon4ab3a032030875,1727
   uint8_t *buf;buf76,1729
   size_t   n_bytes;n_bytes77,1746
   size_t   len;len78,1767
} bson_json_buf_t;bson_json_buf_t79,1784
{__anon4ab3a032040883,1820
   int    i;i84,1822
   bool   is_array;is_array85,1835
   bson_t bson;bson86,1855
} bson_json_stack_frame_t;bson_json_stack_frame_t87,1871
{__anon4ab3a032050a91,1914
   struct {__anon4ab3a032060892,1916
      bool has_regex;has_regex93,1928
      bool has_options;has_options94,1950
   } regex;regex95,1974
   struct {__anon4ab3a032070896,1986
      bool       has_oid;has_oid97,1998
      bson_oid_t oid;oid98,2024
   } oid;oid99,2046
   struct {__anon4ab3a0320808100,2056
      bool           has_binary;has_binary101,2068
      bool           has_subtype;has_subtype102,2101
      bson_subtype_t type;type103,2135
   } binary;binary104,2162
   struct {__anon4ab3a0320908105,2175
      bool    has_date;has_date106,2187
      int64_t date;date107,2211
   } date;date108,2231
   struct {__anon4ab3a0320a08109,2242
      bool     has_t;has_t110,2254
      bool     has_i;has_i111,2276
      uint32_t t;t112,2298
      uint32_t i;i113,2316
   } timestamp;timestamp114,2334
   struct {__anon4ab3a0320b08115,2350
      bool has_undefined;has_undefined116,2362
   } undefined;undefined117,2388
   struct {__anon4ab3a0320c08118,2404
      bool has_minkey;has_minkey119,2416
   } minkey;minkey120,2439
   struct {__anon4ab3a0320d08121,2452
      bool has_maxkey;has_maxkey122,2464
   } maxkey;maxkey123,2487
   struct {__anon4ab3a0320e08124,2500
      int64_t value;value125,2512
   } v_int64;v_int64126,2533
} bson_json_bson_data_t;bson_json_bson_data_t127,2547
{__anon4ab3a0320f08131,2589
   bson_t                      *bson;bson132,2591
   bson_json_stack_frame_t      stack[STACK_MAX];stack133,2629
   int                          n;n134,2679
   const char                  *key;key135,2714
   bson_json_buf_t              key_buf;key_buf136,2751
   bson_json_read_state_t       read_state;read_state137,2792
   bson_json_read_bson_state_t  bson_state;bson_state138,2836
   bson_type_t                  bson_type;bson_type139,2880
   bson_json_buf_t              bson_type_buf [3];bson_type_buf140,2923
   bson_json_bson_data_t        bson_type_data;bson_type_data141,2974
   bool                         known_bson_type;known_bson_type142,3022
} bson_json_reader_bson_t;bson_json_reader_bson_t143,3071
{__anon4ab3a0321008147,3115
   void                 *data;data148,3117
   bson_json_reader_cb   cb;cb149,3148
   bson_json_destroy_cb  dcb;dcb150,3177
   uint8_t              *buf;buf151,3207
   size_t                buf_size;buf_size152,3237
   size_t                bytes_read;bytes_read153,3272
   size_t                bytes_parsed;bytes_parsed154,3309
   bool                  all_whitespace;all_whitespace155,3348
} bson_json_reader_producer_t;bson_json_reader_producer_t156,3389
struct _bson_json_reader_t_bson_json_reader_t159,3422
   bson_json_reader_producer_t  producer;producer161,3451
   bson_json_reader_bson_t      bson;bson162,3493
   yajl_handle                  yh;yh163,3531
   bson_error_t                *error;error164,3567
{__anon4ab3a0321108169,3626
   int fd;fd170,3628
   bool do_close;do_close171,3639
} bson_json_reader_handle_fd_t;bson_json_reader_handle_fd_t172,3657
bson_yajl_malloc_func (void   *ctx,bson_yajl_malloc_func176,3705
bson_yajl_free_func (void *ctx,bson_yajl_free_func184,3822
bson_yajl_realloc_func (void   *ctx,bson_yajl_realloc_func192,3926
static yajl_alloc_funcs gYajlAllocFuncs = {gYajlAllocFuncs200,4076
_noop (void)_noop208,4214
#define STACK_ELE(STACK_ELE212,4232
#define STACK_BSON(STACK_BSON213,4305
#define STACK_BSON_PARENT STACK_BSON_PARENT215,4409
#define STACK_BSON_CHILD STACK_BSON_CHILD216,4451
#define STACK_I STACK_I217,4491
#define STACK_IS_ARRAY STACK_IS_ARRAY218,4524
#define STACK_PUSH_ARRAY(STACK_PUSH_ARRAY219,4571
#define STACK_PUSH_DOC(STACK_PUSH_DOC229,4816
#define STACK_POP_ARRAY(STACK_POP_ARRAY238,5038
#define STACK_POP_DOC(STACK_POP_DOC247,5260
#define BASIC_YAJL_CB_PREAMBLE BASIC_YAJL_CB_PREAMBLE256,5479
#define BASIC_YAJL_CB_BAIL_IF_NOT_NORMAL(BASIC_YAJL_CB_BAIL_IF_NOT_NORMAL264,5754
#define HANDLE_OPTION(HANDLE_OPTION274,6212
_bson_json_all_whitespace (const char *utf8)_bson_json_all_whitespace287,6718
_bson_json_read_set_error (bson_json_reader_t *reader, /* IN */_bson_json_read_set_error311,7224
_bson_json_buf_ensure (bson_json_buf_t *buf, /* IN */_bson_json_buf_ensure332,7832
_bson_json_read_fixup_key (bson_json_reader_bson_t *bson) /* IN */_bson_json_read_fixup_key345,8117
_bson_json_buf_set (bson_json_buf_t *buf,            /* IN */_bson_json_buf_set357,8466
_bson_json_read_null (void *_ctx)_bson_json_read_null379,8968
_bson_json_read_boolean (void *_ctx, /* IN */_bson_json_read_boolean391,9162
_bson_json_read_integer (void    *_ctx, /* IN */_bson_json_read_integer411,9610
_bson_json_read_double (void   *_ctx, /* IN */_bson_json_read_double475,11556
_bson_json_read_string (void                *_ctx, /* IN */_bson_json_read_string488,11819
# define SSCANF SSCANF531,13356
# define SSCANF SSCANF533,13387
_bson_json_read_start_map (void *_ctx) /* IN */_bson_json_read_start_map622,16042
_is_known_key (const char *key, size_t len)_is_known_key643,16580
#define IS_KEY(IS_KEY647,16640
_bson_json_read_map_key (void          *_ctx, /* IN */_bson_json_read_map_key668,17109
_bson_json_read_append_binary (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_binary737,20359
_bson_json_read_append_regex (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_regex758,21199
_bson_json_read_append_oid (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_oid782,21889
_bson_json_read_append_date_time (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_date_time791,22185
_bson_json_read_append_timestamp (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_timestamp800,22506
_bad_extended_json (bson_json_reader_t *reader)_bad_extended_json822,23293
_bson_json_read_end_map (void *_ctx) /* IN */_bson_json_read_end_map832,23533
_bson_json_read_start_array (void *_ctx) /* IN */_bson_json_read_start_array932,27150
_bson_json_read_end_array (void *_ctx) /* IN */_bson_json_read_end_array957,27745
static yajl_callbacks read_cbs = {read_cbs979,28337
_bson_json_read_parse_error (bson_json_reader_t *reader, /* IN */_bson_json_read_parse_error995,28679
bson_json_reader_read (bson_json_reader_t *reader, /* IN */bson_json_reader_read1061,30599
bson_json_reader_new (void                 *data,           /* IN */bson_json_reader_new1143,32555
bson_json_reader_destroy (bson_json_reader_t *reader) /* IN */bson_json_reader_destroy1174,33415
{__anon4ab3a03212081198,33885
   const uint8_t *data;data1199,33887
   size_t         len;len1200,33911
   size_t         bytes_parsed;bytes_parsed1201,33934
} bson_json_data_reader_t;bson_json_data_reader_t1202,33966
_bson_json_data_reader_cb (void    *_ctx,_bson_json_data_reader_cb1206,34010
bson_json_data_reader_new (bool   allow_multiple, /* IN */bson_json_data_reader_new1228,34453
bson_json_data_reader_ingest (bson_json_reader_t *reader, /* IN */bson_json_data_reader_ingest1239,34774
bson_new_from_json (const uint8_t *data,  /* IN */bson_new_from_json1253,35147
bson_init_from_json (bson_t       *bson,  /* OUT */bson_init_from_json1283,35796
_bson_json_reader_handle_fd_destroy (void *handle) /* IN */_bson_json_reader_handle_fd_destroy1315,36504
_bson_json_reader_handle_fd_read (void    *handle, /* IN */_bson_json_reader_handle_fd_read1333,36795
bson_json_reader_new_from_fd (int fd,                /* IN */bson_json_reader_new_from_fd1357,37329
bson_json_reader_new_from_file (const char   *path,  /* IN */bson_json_reader_new_from_file1377,37928

include/mongo/bson/bson-atomic.h,513
#define BSON_ATOMIC_HBSON_ATOMIC_H19,624
#  define bson_atomic_int_add(bson_atomic_int_add33,821
#  define bson_atomic_int64_add(bson_atomic_int64_add34,904
# define bson_memory_barrier(bson_memory_barrier71,2160
#  define bson_memory_barrier(bson_memory_barrier74,2266
#  define bson_memory_barrier(bson_memory_barrier77,2405
# define bson_memory_barrier(bson_memory_barrier81,2527
# define bson_memory_barrier(bson_memory_barrier83,2604
# define __BSON_NEED_BARRIER __BSON_NEED_BARRIER85,2650

include/mongo/bson/Makefile.am,541
headerdir = $(prefix)/include/libbson-@BSON_API_VERSION@headerdir3,34
headerdir = $(prefix)/include/libbson-@BSON_API_VERSION@header3,34
header_DATA = \header_DATA4,91
	$(INST_H_FILES) \$(INST_H_FILES)5,107
	src/bson/bson-config.hsrc/bson/bson-config.h6,126
INST_H_FILES = \INST_H_FILES8,151
NOINST_H_FILES = \NOINST_H_FILES39,854
libbson_la_CPPFLAGS = \libbson_la_CPPFLAGS49,1084
libbson_la_CFLAGS = \libbson_la_CFLAGS56,1238
libbson_la_SOURCES = \libbson_la_SOURCES62,1348
libbson_la_LIBADD =libbson_la_LIBADD86,1912

include/mongo/bson/bson-keys.h,39
#define BSON_KEYS_HBSON_KEYS_H19,617

include/mongo/bson/bson.c,8189
# define BSON_MAX_RECURSION BSON_MAX_RECURSION29,776
typedef enum {__anon822f2b6b010333,817
   BSON_VALIDATE_PHASE_START,BSON_VALIDATE_PHASE_START34,832
   BSON_VALIDATE_PHASE_TOP,BSON_VALIDATE_PHASE_TOP35,862
   BSON_VALIDATE_PHASE_LF_REF_KEY,BSON_VALIDATE_PHASE_LF_REF_KEY36,890
   BSON_VALIDATE_PHASE_LF_REF_UTF8,BSON_VALIDATE_PHASE_LF_REF_UTF837,925
   BSON_VALIDATE_PHASE_LF_ID_KEY,BSON_VALIDATE_PHASE_LF_ID_KEY38,961
   BSON_VALIDATE_PHASE_LF_DB_KEY,BSON_VALIDATE_PHASE_LF_DB_KEY39,995
   BSON_VALIDATE_PHASE_LF_DB_UTF8,BSON_VALIDATE_PHASE_LF_DB_UTF840,1029
   BSON_VALIDATE_PHASE_NOT_DBREF,BSON_VALIDATE_PHASE_NOT_DBREF41,1064
} bson_validate_phase_t;bson_validate_phase_t42,1098
{__anon822f2b6b020849,1162
   bson_validate_flags_t flags;flags50,1164
   ssize_t               err_offset;err_offset51,1196
   bson_validate_phase_t phase;phase52,1233
} bson_validate_state_t;bson_validate_state_t53,1265
{__anon822f2b6b030857,1307
   uint32_t       count;count58,1309
   bool           keys;keys59,1334
   uint32_t       depth;depth60,1358
   bson_string_t *str;str61,1383
} bson_json_state_t;bson_json_state_t62,1406
static const uint8_t gZero;gZero81,2027
_bson_impl_inline_grow (bson_impl_inline_t *impl, /* IN */_bson_impl_inline_grow103,2564
_bson_impl_alloc_grow (bson_impl_alloc_t *impl, /* IN */_bson_impl_alloc_grow156,3820
_bson_grow (bson_t   *bson, /* IN */_bson_grow201,4850
_bson_data (const bson_t *bson) /* IN */_bson_data230,5576
_bson_encode_length (bson_t *bson) /* IN */_bson_encode_length260,6286
_bson_append_va (bson_t        *bson,        /* IN */_bson_append_va298,7381
_bson_append (bson_t        *bson,        /* IN */_bson_append367,9150
_bson_append_bson_begin (bson_t      *bson,        /* IN */_bson_append_bson_begin421,10623
_bson_append_bson_end (bson_t *bson,   /* IN */_bson_append_bson_end521,13659
bson_append_array_begin (bson_t     *bson,         /* IN */bson_append_array_begin576,15211
bson_append_array_end (bson_t *bson,   /* IN */bson_append_array_end610,16162
bson_append_document_begin (bson_t     *bson,         /* IN */bson_append_document_begin645,17177
bson_append_document_end (bson_t *bson,   /* IN */bson_append_document_end679,18182
bson_append_array (bson_t       *bson,       /* IN */bson_append_array709,18868
bson_append_binary (bson_t         *bson,       /* IN */bson_append_binary775,20755
bson_append_bool (bson_t     *bson,       /* IN */bson_append_bool843,22780
bson_append_code (bson_t     *bson,       /* IN */bson_append_code890,23946
bson_append_code_with_scope (bson_t       *bson,         /* IN */bson_append_code_with_scope938,25163
bson_append_dbpointer (bson_t           *bson,       /* IN */bson_append_dbpointer999,26920
bson_append_document (bson_t       *bson,       /* IN */bson_append_document1055,28433
bson_append_double (bson_t     *bson,bson_append_double1080,29122
bson_append_int32 (bson_t      *bson,bson_append_int321108,29770
bson_append_int64 (bson_t      *bson,bson_append_int641135,30394
bson_append_iter (bson_t            *bson,bson_append_iter1162,31018
bson_append_maxkey (bson_t     *bson,bson_append_maxkey1331,35606
bson_append_minkey (bson_t     *bson,bson_append_minkey1353,36091
bson_append_null (bson_t     *bson,bson_append_null1375,36576
bson_append_oid (bson_t           *bson,bson_append_oid1397,37053
bson_append_regex (bson_t     *bson,bson_append_regex1422,37650
bson_append_utf8 (bson_t     *bson,bson_append_utf81461,38542
bson_append_symbol (bson_t     *bson,bson_append_symbol1499,39484
bson_append_time_t (bson_t     *bson,bson_append_time_t1537,40389
bson_append_timestamp (bson_t       *bson,bson_append_timestamp1556,40779
bson_append_now_utc (bson_t     *bson,bson_append_now_utc1585,41532
bson_append_date_time (bson_t      *bson,bson_append_date_time1598,41813
bson_append_timeval (bson_t         *bson,bson_append_timeval1625,42456
bson_append_undefined (bson_t     *bson,bson_append_undefined1643,42922
bson_append_value (bson_t             *bson,bson_append_value1665,43418
bson_init (bson_t *bson)bson_init1781,47552
bson_reinit (bson_t *bson)bson_reinit1798,47853
bson_init_static (bson_t        *bson,bson_init_static1817,48068
bson_new (void)bson_new1858,48932
bson_sized_new (size_t size)bson_sized_new1879,49267
bson_new_from_data (const uint8_t *data,bson_new_from_data1918,50196
bson_new_from_buffer (uint8_t           **buf,bson_new_from_buffer1945,50705
bson_copy (const bson_t *bson)bson_copy1999,51945
bson_copy_to (const bson_t *src,bson_copy_to2011,52113
should_ignore (const char *first_exclude,should_ignore2047,52947
_bson_copy_to_excluding_va (const bson_t *src,_bson_copy_to_excluding_va2071,53377
bson_copy_to_excluding (const bson_t *src,bson_copy_to_excluding2096,54074
bson_copy_to_excluding_noinit (const bson_t *src,bson_copy_to_excluding_noinit2115,54484
bson_destroy (bson_t *bson)bson_destroy2133,54909
bson_destroy_with_steal (bson_t   *bson,bson_destroy_with_steal2149,55203
bson_get_data (const bson_t *bson)bson_get_data2191,56056
bson_count_keys (const bson_t *bson)bson_count_keys2200,56159
bson_has_field (const bson_t *bson,bson_has_field2218,56403
bson_compare (const bson_t *bson,bson_compare2237,56775
bson_equal (const bson_t *bson,bson_equal2267,57303
_bson_as_json_visit_utf8 (const bson_iter_t *iter,_bson_as_json_visit_utf82275,57425
_bson_as_json_visit_int32 (const bson_iter_t *iter,_bson_as_json_visit_int322299,58047
_bson_as_json_visit_int64 (const bson_iter_t *iter,_bson_as_json_visit_int642313,58389
_bson_as_json_visit_double (const bson_iter_t *iter,_bson_as_json_visit_double2327,58731
_bson_as_json_visit_undefined (const bson_iter_t *iter,_bson_as_json_visit_undefined2349,59282
_bson_as_json_visit_null (const bson_iter_t *iter,_bson_as_json_visit_null2362,59587
_bson_as_json_visit_oid (const bson_iter_t *iter,_bson_as_json_visit_oid2375,59856
_bson_as_json_visit_binary (const bson_iter_t  *iter,_bson_as_json_visit_binary2393,60318
_bson_as_json_visit_bool (const bson_iter_t *iter,_bson_as_json_visit_bool2420,61173
_bson_as_json_visit_date_time (const bson_iter_t *iter,_bson_as_json_visit_date_time2434,61507
_bson_as_json_visit_regex (const bson_iter_t *iter,_bson_as_json_visit_regex2450,61979
_bson_as_json_visit_timestamp (const bson_iter_t *iter,_bson_as_json_visit_timestamp2469,62573
_bson_as_json_visit_dbpointer (const bson_iter_t *iter,_bson_as_json_visit_dbpointer2488,63216
_bson_as_json_visit_minkey (const bson_iter_t *iter,_bson_as_json_visit_minkey2516,64059
_bson_as_json_visit_maxkey (const bson_iter_t *iter,_bson_as_json_visit_maxkey2529,64349
_bson_as_json_visit_before (const bson_iter_t *iter,_bson_as_json_visit_before2544,64641
_bson_as_json_visit_code (const bson_iter_t *iter,_bson_as_json_visit_code2574,65310
_bson_as_json_visit_symbol (const bson_iter_t *iter,_bson_as_json_visit_symbol2598,65932
_bson_as_json_visit_codewscope (const bson_iter_t *iter,_bson_as_json_visit_codewscope2615,66411
static const bson_visitor_t bson_as_json_visitors = {bson_as_json_visitors2639,67111
_bson_as_json_visit_document (const bson_iter_t *iter,_bson_as_json_visit_document2667,67892
_bson_as_json_visit_array (const bson_iter_t *iter,_bson_as_json_visit_array2695,68757
bson_as_json (const bson_t *bson,bson_as_json2723,69600
bson_array_as_json (const bson_t *bson,bson_array_as_json2775,70532
_bson_iter_validate_utf8 (const bson_iter_t *iter,_bson_iter_validate_utf82828,71546
_bson_iter_validate_corrupt (const bson_iter_t *iter,_bson_iter_validate_corrupt2859,72467
_bson_iter_validate_before (const bson_iter_t *iter,_bson_iter_validate_before2869,72672
_bson_iter_validate_codewscope (const bson_iter_t *iter,_bson_iter_validate_codewscope2912,74103
static const bson_visitor_t bson_validate_funcs = {bson_validate_funcs2938,74906
_bson_iter_validate_document (const bson_iter_t *iter,_bson_iter_validate_document2961,75518
bson_validate (const bson_t         *bson,bson_validate2997,76483
bson_concat (bson_t       *dst,bson_concat3022,76978

include/mongo/bson/bson-error.h,203
#define BSON_ERROR_HBSON_ERROR_H19,618
#define BSON_ERROR_JSON BSON_ERROR_JSON30,736
#define BSON_ERROR_READER BSON_ERROR_READER31,764
#define BSON_ERROR_BUFFER_SIZE BSON_ERROR_BUFFER_SIZE33,793

include/mongo/bson/bson-oid.h,593
#define BSON_OID_HBSON_OID_H19,616
bson_oid_compare_unsafe (const bson_oid_t *oid1,bson_oid_compare_unsafe74,2564
bson_oid_equal_unsafe (const bson_oid_t *oid1,bson_oid_equal_unsafe94,3082
bson_oid_hash_unsafe (const bson_oid_t *oid)bson_oid_hash_unsafe114,3684
bson_oid_copy_unsafe (const bson_oid_t *src,bson_oid_copy_unsafe138,4261
bson_oid_parse_hex_char (char hex)bson_oid_parse_hex_char156,4762
bson_oid_init_from_string_unsafe (bson_oid_t *oid,bson_oid_init_from_string_unsafe215,5911
bson_oid_get_time_t_unsafe (const bson_oid_t *oid)bson_oid_get_time_t_unsafe236,6402

include/mongo/bson/bson-config.h.in,788
#define BSON_CONFIG_HBSON_CONFIG_H2,22
#define BSON_BYTE_ORDER BSON_BYTE_ORDER7,110
#define BSON_HAVE_STDBOOL_H BSON_HAVE_STDBOOL_H13,198
#define BSON_OS BSON_OS22,375
#define BSON_HAVE_ATOMIC_32_ADD_AND_FETCH BSON_HAVE_ATOMIC_32_ADD_AND_FETCH31,651
#define BSON_HAVE_ATOMIC_64_ADD_AND_FETCH BSON_HAVE_ATOMIC_64_ADD_AND_FETCH39,904
#define BSON_PTHREAD_ONCE_INIT_NEEDS_BRACES BSON_PTHREAD_ONCE_INIT_NEEDS_BRACES49,1191
#define BSON_HAVE_CLOCK_GETTIME BSON_HAVE_CLOCK_GETTIME58,1432
#define BSON_HAVE_STRNLEN BSON_HAVE_STRNLEN67,1634
#define BSON_HAVE_SNPRINTF BSON_HAVE_SNPRINTF76,1813
#define BSON_NEEDS_SET_OUTPUT_FORMAT BSON_NEEDS_SET_OUTPUT_FORMAT85,1998
#define BSON_HAVE_TIMESPEC BSON_HAVE_TIMESPEC93,2227
#define BSON_EXTRA_ALIGN BSON_EXTRA_ALIGN102,2404

include/mongo/bson/bson-context.h,45
#define BSON_CONTEXT_HBSON_CONTEXT_H19,620

include/mongo/bson/bson-private.h,1795
#define BSON_PRIVATE_HBSON_PRIVATE_H19,620
{__anona0c59cb8010331,753
   BSON_FLAG_NONE            = 0,BSON_FLAG_NONE32,755
   BSON_FLAG_INLINE          = (1 << 0),BSON_FLAG_INLINE33,789
   BSON_FLAG_STATIC          = (1 << 1),BSON_FLAG_STATIC34,830
   BSON_FLAG_RDONLY          = (1 << 2),BSON_FLAG_RDONLY35,871
   BSON_FLAG_CHILD           = (1 << 3),BSON_FLAG_CHILD36,912
   BSON_FLAG_IN_CHILD        = (1 << 4),BSON_FLAG_IN_CHILD37,953
   BSON_FLAG_NO_FREE         = (1 << 5),BSON_FLAG_NO_FREE38,994
} bson_flags_t;bson_flags_t39,1035
{__anona0c59cb8020844,1093
   bson_flags_t flags;flags45,1095
   uint32_t     len;len46,1118
   uint8_t      data [120];data47,1139
BSON_ALIGNED_END (128);BSON_ALIGNED_END49,1188
{__anona0c59cb8030857,1313
   bson_flags_t        flags;            /* flags describing the bson_t */flags58,1315
   uint32_t            len;              /* length of bson document in bytes */len59,1390
   bson_t             *parent;           /* parent bson if a child */parent60,1470
   uint32_t            depth;            /* Subdocument depth. */depth61,1540
   uint8_t           **buf;              /* pointer to buffer pointer */buf62,1606
   size_t             *buflen;           /* pointer to buffer length */buflen63,1679
   size_t              offset;           /* our offset inside *buf  */offset64,1751
   uint8_t            *alloc;            /* buffer that we own. */alloc65,1822
   size_t              alloclen;         /* length of buffer that we own. */alloclen66,1889
   bson_realloc_func   realloc;          /* our realloc implementation */realloc67,1966
   void               *realloc_func_ctx; /* context for our realloc func */realloc_func_ctx68,2040
BSON_ALIGNED_END (128);BSON_ALIGNED_END70,2136

include/mongo/bson/bson-context-private.h,679
#define BSON_CONTEXT_PRIVATE_HBSON_CONTEXT_PRIVATE_H19,628
struct _bson_context_t_bson_context_t29,741
   bson_context_flags_t flags : 7;flags31,766
   bool                 pidbe_once : 1;pidbe_once32,801
   uint8_t              pidbe[2];pidbe33,841
   uint8_t              md5[3];md534,875
   int32_t              seq32;seq3235,907
   int64_t              seq64;seq6436,938
   void (*oid_get_host)  (bson_context_t *context,oid_get_host38,970
   void (*oid_get_pid)   (bson_context_t *context,oid_get_pid40,1069
   void (*oid_get_seq32) (bson_context_t *context,oid_get_seq3242,1168
   void (*oid_get_seq64) (bson_context_t *context,oid_get_seq6444,1267

include/mongo/bson/bcon.c,4612
#define STACK_ELE(STACK_ELE32,1057
#define STACK_BSON(STACK_BSON34,1129
#define STACK_ITER(STACK_ITER40,1253
#define STACK_BSON_PARENT STACK_BSON_PARENT46,1383
#define STACK_BSON_CHILD STACK_BSON_CHILD47,1425
#define STACK_ITER_PARENT STACK_ITER_PARENT49,1466
#define STACK_ITER_CHILD STACK_ITER_CHILD50,1508
#define STACK_I STACK_I52,1549
#define STACK_IS_ARRAY STACK_IS_ARRAY53,1582
#define STACK_PUSH_ARRAY(STACK_PUSH_ARRAY55,1630
#define STACK_PUSH_DOC(STACK_PUSH_DOC64,1828
#define STACK_POP_ARRAY(STACK_POP_ARRAY72,2003
#define STACK_POP_DOC(STACK_POP_DOC80,2166
typedef union bcon_append {bcon_append91,2562
   char   *UTF8;UTF892,2590
   double  DOUBLE;DOUBLE93,2607
   bson_t *DOCUMENT;DOCUMENT94,2626
   bson_t *ARRAY;ARRAY95,2647
   bson_t *BCON;BCON96,2665
   {__anon810da35b010899,2693
      bson_subtype_t subtype;subtype100,2698
      uint8_t  *binary;binary101,2728
      uint32_t  length;length102,2752
   } BIN;BIN103,2776
   bson_oid_t    *OID;OID105,2787
   bool BOOL;BOOL106,2810
   int64_t   DATE_TIME;DATE_TIME107,2824
   {__anon810da35b0208110,2859
      char *regex;regex111,2864
      char *flags;flags112,2883
   } REGEX;REGEX113,2902
   {__anon810da35b0308116,2925
      char       *collection;collection117,2930
      bson_oid_t *oid;oid118,2960
   } DBPOINTER;DBPOINTER119,2983
   const char *CODE;CODE121,3000
   char *SYMBOL;SYMBOL123,3022
   {__anon810da35b0408126,3050
      const char *js;js127,3055
      bson_t     *scope;scope128,3077
   } CODEWSCOPE;CODEWSCOPE129,3102
   int32_t INT32;INT32131,3120
   {__anon810da35b0508134,3149
      uint32_t timestamp;timestamp135,3154
      uint32_t increment;increment136,3180
   } TIMESTAMP;TIMESTAMP137,3206
   int64_t       INT64;INT64139,3223
   const bson_iter_t *ITER;ITER140,3247
} bcon_append_t;bcon_append_t141,3275
typedef union bcon_extract {bcon_extract145,3425
   bson_type_t  TYPE;TYPE146,3454
   bson_iter_t *ITER;ITER147,3476
   const char  *key;key148,3498
   const char **UTF8;UTF8149,3519
   double      *DOUBLE;DOUBLE150,3541
   bson_t      *DOCUMENT;DOCUMENT151,3565
   bson_t      *ARRAY;ARRAY152,3591
   {__anon810da35b0608155,3625
      bson_subtype_t      *subtype;subtype156,3630
      const uint8_t      **binary;binary157,3666
      uint32_t            *length;length158,3701
   } BIN;BIN159,3736
   const bson_oid_t **OID;OID161,3747
   bool *BOOL;BOOL162,3774
   int64_t      *DATE_TIME;DATE_TIME163,3789
   {__anon810da35b0708166,3828
      const char **regex;regex167,3833
      const char **flags;flags168,3859
   } REGEX;REGEX169,3885
   {__anon810da35b0808172,3908
      const char       **collection;collection173,3913
      const bson_oid_t **oid;oid174,3950
   } DBPOINTER;DBPOINTER175,3980
   const char **CODE;CODE177,3997
   const char **SYMBOL;SYMBOL179,4020
   {__anon810da35b0908182,4055
      const char **js;js183,4060
      bson_t      *scope;scope184,4083
   } CODEWSCOPE;CODEWSCOPE185,4109
   int32_t *INT32;INT32187,4127
   {__anon810da35b0a08190,4157
      uint32_t *timestamp;timestamp191,4162
      uint32_t *increment;increment192,4189
   } TIMESTAMP;TIMESTAMP193,4216
   int64_t *INT64;INT64195,4233
} bcon_extract_t;bcon_extract_t196,4252
static const char *gBconMagic = "BCON_MAGIC";gBconMagic198,4271
static const char *gBconeMagic = "BCONE_MAGIC";gBconeMagic199,4317
bson_bcon_magic (void)bson_bcon_magic202,4379
bson_bcone_magic (void)bson_bcone_magic209,4443
_noop (void)_noop215,4507
_bcon_append_single (bson_t        *bson,_bcon_append_single222,4628
#define CHECK_TYPE(CHECK_TYPE307,7191
_bcon_extract_single (const bson_iter_t *iter,_bcon_extract_single326,7819
_bcon_append_tokenize (va_list       *ap,_bcon_append_tokenize462,11768
_bcon_extract_tokenize (va_list        *ap,_bcon_extract_tokenize592,15428
_bson_concat_array (bson_t            *dest,_bson_concat_array711,18789
bcon_append_ctx_va (bson_t            *bson,bcon_append_ctx_va757,20316
bcon_extract_ctx_va (bson_t             *bson,bcon_extract_ctx_va850,23444
bcon_extract_ctx_init (bcon_extract_ctx_t *ctx)bcon_extract_ctx_init927,25422
bcon_extract (bson_t *bson,bcon_extract934,25530
bcon_append (bson_t *bson,bcon_append954,25778
bcon_append_ctx (bson_t            *bson,bcon_append_ctx971,25992
bcon_extract_ctx (bson_t             *bson,bcon_extract_ctx986,26205
bcon_append_ctx_init (bcon_append_ctx_t *ctx)bcon_append_ctx_init1000,26423
bcon_new (void *unused,bcon_new1008,26530

include/mongo/bson/bson-types.h,9311
#define BSON_TYPES_HBSON_TYPES_H19,618
typedef uint32_t bson_unichar_t;bson_unichar_t52,1335
{__anonb0fb41f2010368,1868
   BSON_CONTEXT_NONE = 0,BSON_CONTEXT_NONE69,1870
   BSON_CONTEXT_THREAD_SAFE = (1 << 0),BSON_CONTEXT_THREAD_SAFE70,1896
   BSON_CONTEXT_DISABLE_HOST_CACHE = (1 << 1),BSON_CONTEXT_DISABLE_HOST_CACHE71,1936
   BSON_CONTEXT_DISABLE_PID_CACHE = (1 << 2),BSON_CONTEXT_DISABLE_PID_CACHE72,1983
   BSON_CONTEXT_USE_TASK_ID = (1 << 3),BSON_CONTEXT_USE_TASK_ID74,2052
} bson_context_flags_t;bson_context_flags_t76,2099
typedef struct _bson_context_t bson_context_t;bson_context_t102,3051
typedef struct _bson_t_bson_t123,3733
   uint32_t flags;        /* Internal flags for the bson_t. */flags125,3758
   uint32_t len;          /* Length of BSON data. */len126,3821
   uint8_t padding[120];  /* Padding for stack allocation. */padding127,3874
BSON_ALIGNED_END (128);BSON_ALIGNED_END129,3945
#define BSON_INITIALIZER BSON_INITIALIZER142,4155
{__anonb0fb41f20208156,4492
   uint8_t bytes[12];bytes157,4494
} bson_oid_t;bson_oid_t158,4516
{__anonb0fb41f20303177,5078
   BSON_VALIDATE_NONE = 0,BSON_VALIDATE_NONE178,5080
   BSON_VALIDATE_UTF8 = (1 << 0),BSON_VALIDATE_UTF8179,5107
   BSON_VALIDATE_DOLLAR_KEYS = (1 << 1),BSON_VALIDATE_DOLLAR_KEYS180,5141
   BSON_VALIDATE_DOT_KEYS = (1 << 2),BSON_VALIDATE_DOT_KEYS181,5182
   BSON_VALIDATE_UTF8_ALLOW_NULL = (1 << 3),BSON_VALIDATE_UTF8_ALLOW_NULL182,5220
} bson_validate_flags_t;bson_validate_flags_t183,5265
{__anonb0fb41f20403193,5489
   BSON_TYPE_EOD = 0x00,BSON_TYPE_EOD194,5491
   BSON_TYPE_DOUBLE = 0x01,BSON_TYPE_DOUBLE195,5516
   BSON_TYPE_UTF8 = 0x02,BSON_TYPE_UTF8196,5544
   BSON_TYPE_DOCUMENT = 0x03,BSON_TYPE_DOCUMENT197,5570
   BSON_TYPE_ARRAY = 0x04,BSON_TYPE_ARRAY198,5600
   BSON_TYPE_BINARY = 0x05,BSON_TYPE_BINARY199,5627
   BSON_TYPE_UNDEFINED = 0x06,BSON_TYPE_UNDEFINED200,5655
   BSON_TYPE_OID = 0x07,BSON_TYPE_OID201,5686
   BSON_TYPE_BOOL = 0x08,BSON_TYPE_BOOL202,5711
   BSON_TYPE_DATE_TIME = 0x09,BSON_TYPE_DATE_TIME203,5737
   BSON_TYPE_NULL = 0x0A,BSON_TYPE_NULL204,5768
   BSON_TYPE_REGEX = 0x0B,BSON_TYPE_REGEX205,5794
   BSON_TYPE_DBPOINTER = 0x0C,BSON_TYPE_DBPOINTER206,5821
   BSON_TYPE_CODE = 0x0D,BSON_TYPE_CODE207,5852
   BSON_TYPE_SYMBOL = 0x0E,BSON_TYPE_SYMBOL208,5878
   BSON_TYPE_CODEWSCOPE = 0x0F,BSON_TYPE_CODEWSCOPE209,5906
   BSON_TYPE_INT32 = 0x10,BSON_TYPE_INT32210,5938
   BSON_TYPE_TIMESTAMP = 0x11,BSON_TYPE_TIMESTAMP211,5965
   BSON_TYPE_INT64 = 0x12,BSON_TYPE_INT64212,5996
   BSON_TYPE_MAXKEY = 0x7F,BSON_TYPE_MAXKEY213,6023
   BSON_TYPE_MINKEY = 0xFF,BSON_TYPE_MINKEY214,6051
} bson_type_t;bson_type_t215,6079
{__anonb0fb41f20503225,6274
   BSON_SUBTYPE_BINARY = 0x00,BSON_SUBTYPE_BINARY226,6276
   BSON_SUBTYPE_FUNCTION = 0x01,BSON_SUBTYPE_FUNCTION227,6307
   BSON_SUBTYPE_BINARY_DEPRECATED = 0x02,BSON_SUBTYPE_BINARY_DEPRECATED228,6340
   BSON_SUBTYPE_UUID_DEPRECATED = 0x03,BSON_SUBTYPE_UUID_DEPRECATED229,6382
   BSON_SUBTYPE_UUID = 0x04,BSON_SUBTYPE_UUID230,6422
   BSON_SUBTYPE_MD5 = 0x05,BSON_SUBTYPE_MD5231,6451
   BSON_SUBTYPE_USER = 0x80,BSON_SUBTYPE_USER232,6479
} bson_subtype_t;bson_subtype_t233,6508
typedef struct _bson_value_t_bson_value_t251,6874
   bson_type_t           value_type;value_type253,6905
   int32_t               padding;padding254,6942
   union {__anonb0fb41f2060a255,6976
      bson_oid_t         v_oid;v_oid256,6987
      int64_t            v_int64;v_int64257,7019
      int32_t            v_int32;v_int32258,7053
      int8_t             v_int8;v_int8259,7087
      double             v_double;v_double260,7120
      bool               v_bool;v_bool261,7155
      int64_t            v_datetime;v_datetime262,7188
      struct {__anonb0fb41f20708263,7225
         uint32_t        timestamp;timestamp264,7240
         uint32_t        increment;increment265,7276
      } v_timestamp;v_timestamp266,7312
      struct {__anonb0fb41f20808267,7333
         char           *str;str268,7348
         uint32_t        len;len269,7378
      } v_utf8;v_utf8270,7408
      struct {__anonb0fb41f20908271,7424
         uint8_t        *data;data272,7439
         uint32_t        data_len;data_len273,7470
      } v_doc;v_doc274,7505
      struct {__anonb0fb41f20a08275,7520
         uint8_t        *data;data276,7535
         uint32_t        data_len;data_len277,7566
         bson_subtype_t  subtype;subtype278,7601
      } v_binary;v_binary279,7635
      struct {__anonb0fb41f20b08280,7653
         char           *regex;regex281,7668
         char           *options;options282,7700
      } v_regex;v_regex283,7734
      struct {__anonb0fb41f20c08284,7751
         char           *collection;collection285,7766
         uint32_t        collection_len;collection_len286,7803
         bson_oid_t      oid;oid287,7844
      } v_dbpointer;v_dbpointer288,7874
      struct {__anonb0fb41f20d08289,7895
         char           *code;code290,7910
         uint32_t        code_len;code_len291,7941
      } v_code;v_code292,7976
      struct {__anonb0fb41f20e08293,7992
         char           *code;code294,8007
         uint8_t        *scope_data;scope_data295,8038
         uint32_t        code_len;code_len296,8075
         uint32_t        scope_len;scope_len297,8110
      } v_codewscope;v_codewscope298,8146
      struct {__anonb0fb41f20f08299,8168
         char           *symbol;symbol300,8183
         uint32_t        len;len301,8216
      } v_symbol;v_symbol302,8246
   } value;value303,8264
BSON_ALIGNED_END (8);BSON_ALIGNED_END305,8291
{__anonb0fb41f21008321,8717
   const uint8_t *raw;      /* The raw buffer being iterated. */raw322,8719
   uint32_t       len;      /* The length of raw. */len323,8784
   uint32_t       off;      /* The offset within the buffer. */off324,8837
   uint32_t       type;     /* The offset of the type byte. */type325,8901
   uint32_t       key;      /* The offset of the key byte. */key326,8964
   uint32_t       d1;       /* The offset of the first data byte. */d1327,9026
   uint32_t       d2;       /* The offset of the second data byte. */d2328,9095
   uint32_t       d3;       /* The offset of the third data byte. */d3329,9165
   uint32_t       d4;       /* The offset of the fourth data byte. */d4330,9234
   uint32_t       next_off; /* The offset of the next field. */next_off331,9304
   uint32_t       err_off;  /* The offset of the error. */err_off332,9368
   bson_value_t   value;    /* Internal value for various state. */value333,9427
BSON_ALIGNED_END (128);BSON_ALIGNED_END335,9509
{__anonb0fb41f21108349,9866
   uint32_t type;type350,9868
BSON_ALIGNED_END (BSON_ALIGN_OF_PTR);BSON_ALIGNED_END353,9921
{__anonb0fb41f21208373,10593
   bool (*visit_before)           (const bson_iter_t *iter,visit_before375,10650
   bool (*visit_after)            (const bson_iter_t *iter,visit_after378,10830
   void (*visit_corrupt)          (const bson_iter_t *iter,visit_corrupt382,11088
   bool (*visit_double)           (const bson_iter_t *iter,visit_double385,11246
   bool (*visit_utf8)             (const bson_iter_t *iter,visit_utf8389,11490
   bool (*visit_document)         (const bson_iter_t *iter,visit_document394,11798
   bool (*visit_array)            (const bson_iter_t *iter,visit_array398,12044
   bool (*visit_binary)           (const bson_iter_t *iter,visit_binary402,12287
   bool (*visit_undefined)        (const bson_iter_t *iter,visit_undefined409,12724
   bool (*visit_oid)              (const bson_iter_t *iter,visit_oid412,12904
   bool (*visit_bool)             (const bson_iter_t *iter,visit_bool416,13145
   bool (*visit_date_time)        (const bson_iter_t *iter,visit_date_time420,13387
   bool (*visit_null)             (const bson_iter_t *iter,visit_null424,13639
   bool (*visit_regex)            (const bson_iter_t *iter,visit_regex427,13819
   bool (*visit_dbpointer)        (const bson_iter_t *iter,visit_dbpointer432,14127
   bool (*visit_code)             (const bson_iter_t *iter,visit_code438,14508
   bool (*visit_symbol)           (const bson_iter_t *iter,visit_symbol443,14816
   bool (*visit_codewscope)       (const bson_iter_t *iter,visit_codewscope448,15128
   bool (*visit_int32)            (const bson_iter_t *iter,visit_int32454,15499
   bool (*visit_timestamp)        (const bson_iter_t *iter,visit_timestamp458,15742
   bool (*visit_int64)            (const bson_iter_t *iter,visit_int64463,16056
   bool (*visit_maxkey)           (const bson_iter_t *iter,visit_maxkey467,16299
   bool (*visit_minkey)           (const bson_iter_t *iter,visit_minkey470,16479
   void (*visit_unsupported_type) (const bson_iter_t *iter,visit_unsupported_type475,16813
   void *padding[8];padding480,17059
BSON_ALIGNED_END (8);BSON_ALIGNED_END482,17097
typedef struct _bson_error_t_bson_error_t486,17144
   uint32_t domain;domain488,17175
   uint32_t code;code489,17195
   char     message[504];message490,17213
BSON_ALIGNED_END (8);BSON_ALIGNED_END492,17254
bson_next_power_of_two (size_t v)bson_next_power_of_two510,17659
bson_is_power_of_two (uint32_t v)bson_is_power_of_two528,17883

include/mongo/bson/bson-stdint-win32.h,4960
#define _MSC_STDINT_H__MSC_STDINT_H_38,1871
#     define _W64 _W6465,2567
#     define _W64_W6467,2599
   typedef signed char       int8_t;int8_t80,2866
   typedef signed short      int16_t;int16_t81,2903
   typedef signed int        int32_t;int32_t82,2941
   typedef unsigned char     uint8_t;uint8_t83,2979
   typedef unsigned short    uint16_t;uint16_t84,3017
   typedef unsigned int      uint32_t;uint32_t85,3056
   typedef signed __int8     int8_t;int8_t87,3101
   typedef signed __int16    int16_t;int16_t88,3138
   typedef signed __int32    int32_t;int32_t89,3176
   typedef unsigned __int8   uint8_t;uint8_t90,3214
   typedef unsigned __int16  uint16_t;uint16_t91,3252
   typedef unsigned __int32  uint32_t;uint32_t92,3291
typedef signed __int64       int64_t;int64_t94,3337
typedef unsigned __int64     uint64_t;uint64_t95,3375
typedef int8_t    int_least8_t;int_least8_t99,3456
typedef int16_t   int_least16_t;int_least16_t100,3488
typedef int32_t   int_least32_t;int_least32_t101,3521
typedef int64_t   int_least64_t;int_least64_t102,3554
typedef uint8_t   uint_least8_t;uint_least8_t103,3587
typedef uint16_t  uint_least16_t;uint_least16_t104,3620
typedef uint32_t  uint_least32_t;uint_least32_t105,3654
typedef uint64_t  uint_least64_t;uint_least64_t106,3688
typedef int8_t    int_fast8_t;int_fast8_t109,3771
typedef int16_t   int_fast16_t;int_fast16_t110,3802
typedef int32_t   int_fast32_t;int_fast32_t111,3834
typedef int64_t   int_fast64_t;int_fast64_t112,3866
typedef uint8_t   uint_fast8_t;uint_fast8_t113,3898
typedef uint16_t  uint_fast16_t;uint_fast16_t114,3930
typedef uint32_t  uint_fast32_t;uint_fast32_t115,3963
typedef uint64_t  uint_fast64_t;uint_fast64_t116,3996
   typedef signed __int64    intptr_t;intptr_t120,4110
   typedef unsigned __int64  uintptr_t;uintptr_t121,4149
   typedef _W64 signed int   intptr_t;intptr_t123,4208
   typedef _W64 unsigned int uintptr_t;uintptr_t124,4247
typedef int64_t   intmax_t;intmax_t128,4348
typedef uint64_t  uintmax_t;uintmax_t129,4376
#define INT8_MIN INT8_MIN137,4630
#define INT8_MAX INT8_MAX138,4669
#define INT16_MIN INT16_MIN139,4698
#define INT16_MAX INT16_MAX140,4739
#define INT32_MIN INT32_MIN141,4769
#define INT32_MAX INT32_MAX142,4810
#define INT64_MIN INT64_MIN143,4840
#define INT64_MAX INT64_MAX144,4881
#define UINT8_MAX UINT8_MAX145,4911
#define UINT16_MAX UINT16_MAX146,4941
#define UINT32_MAX UINT32_MAX147,4972
#define UINT64_MAX UINT64_MAX148,5003
#define INT_LEAST8_MIN INT_LEAST8_MIN151,5085
#define INT_LEAST8_MAX INT_LEAST8_MAX152,5120
#define INT_LEAST16_MIN INT_LEAST16_MIN153,5155
#define INT_LEAST16_MAX INT_LEAST16_MAX154,5191
#define INT_LEAST32_MIN INT_LEAST32_MIN155,5227
#define INT_LEAST32_MAX INT_LEAST32_MAX156,5263
#define INT_LEAST64_MIN INT_LEAST64_MIN157,5299
#define INT_LEAST64_MAX INT_LEAST64_MAX158,5335
#define UINT_LEAST8_MAX UINT_LEAST8_MAX159,5371
#define UINT_LEAST16_MAX UINT_LEAST16_MAX160,5407
#define UINT_LEAST32_MAX UINT_LEAST32_MAX161,5444
#define UINT_LEAST64_MAX UINT_LEAST64_MAX162,5481
#define INT_FAST8_MIN INT_FAST8_MIN165,5577
#define INT_FAST8_MAX INT_FAST8_MAX166,5611
#define INT_FAST16_MIN INT_FAST16_MIN167,5645
#define INT_FAST16_MAX INT_FAST16_MAX168,5680
#define INT_FAST32_MIN INT_FAST32_MIN169,5715
#define INT_FAST32_MAX INT_FAST32_MAX170,5750
#define INT_FAST64_MIN INT_FAST64_MIN171,5785
#define INT_FAST64_MAX INT_FAST64_MAX172,5820
#define UINT_FAST8_MAX UINT_FAST8_MAX173,5855
#define UINT_FAST16_MAX UINT_FAST16_MAX174,5890
#define UINT_FAST32_MAX UINT_FAST32_MAX175,5926
#define UINT_FAST64_MAX UINT_FAST64_MAX176,5962
#  define INTPTR_MIN INTPTR_MIN180,6089
#  define INTPTR_MAX INTPTR_MAX181,6122
#  define UINTPTR_MAX UINTPTR_MAX182,6155
#  define INTPTR_MIN INTPTR_MIN184,6208
#  define INTPTR_MAX INTPTR_MAX185,6241
#  define UINTPTR_MAX UINTPTR_MAX186,6274
#define INTMAX_MIN INTMAX_MIN190,6379
#define INTMAX_MAX INTMAX_MAX191,6410
#define UINTMAX_MAX UINTMAX_MAX192,6441
#  define PTRDIFF_MIN PTRDIFF_MIN197,6534
#  define PTRDIFF_MAX PTRDIFF_MAX198,6566
#  define PTRDIFF_MIN PTRDIFF_MIN200,6618
#  define PTRDIFF_MAX PTRDIFF_MAX201,6650
#define SIG_ATOMIC_MIN SIG_ATOMIC_MIN204,6703
#define SIG_ATOMIC_MAX SIG_ATOMIC_MAX205,6735
#     define SIZE_MAX SIZE_MAX209,6811
#     define SIZE_MAX SIZE_MAX211,6865
#  define WCHAR_MIN WCHAR_MIN217,7021
#  define WCHAR_MAX WCHAR_MAX220,7090
#define WINT_MIN WINT_MIN223,7145
#define WINT_MAX WINT_MAX224,7165
#define INT8_C(INT8_C235,7423
#define INT16_C(INT16_C236,7452
#define INT32_C(INT32_C237,7482
#define INT64_C(INT64_C238,7512
#define UINT8_C(UINT8_C240,7543
#define UINT16_C(UINT16_C241,7574
#define UINT32_C(UINT32_C242,7606
#define UINT64_C(UINT64_C243,7638
#  define INTMAX_C INTMAX_C249,7867
#  define UINTMAX_C UINTMAX_C252,7944

include/mongo/bson/bson-iter.h,2325
#define BSON_ITER_HBSON_ITER_H19,617
#define BSON_ITER_HOLDS_DOUBLE(BSON_ITER_HOLDS_DOUBLE36,869
#define BSON_ITER_HOLDS_UTF8(BSON_ITER_HOLDS_UTF839,958
#define BSON_ITER_HOLDS_DOCUMENT(BSON_ITER_HOLDS_DOCUMENT42,1043
#define BSON_ITER_HOLDS_ARRAY(BSON_ITER_HOLDS_ARRAY45,1136
#define BSON_ITER_HOLDS_BINARY(BSON_ITER_HOLDS_BINARY48,1223
#define BSON_ITER_HOLDS_UNDEFINED(BSON_ITER_HOLDS_UNDEFINED51,1312
#define BSON_ITER_HOLDS_OID(BSON_ITER_HOLDS_OID54,1407
#define BSON_ITER_HOLDS_BOOL(BSON_ITER_HOLDS_BOOL57,1490
#define BSON_ITER_HOLDS_DATE_TIME(BSON_ITER_HOLDS_DATE_TIME60,1575
#define BSON_ITER_HOLDS_NULL(BSON_ITER_HOLDS_NULL63,1670
#define BSON_ITER_HOLDS_REGEX(BSON_ITER_HOLDS_REGEX66,1755
#define BSON_ITER_HOLDS_DBPOINTER(BSON_ITER_HOLDS_DBPOINTER69,1842
#define BSON_ITER_HOLDS_CODE(BSON_ITER_HOLDS_CODE72,1937
#define BSON_ITER_HOLDS_SYMBOL(BSON_ITER_HOLDS_SYMBOL75,2022
#define BSON_ITER_HOLDS_CODEWSCOPE(BSON_ITER_HOLDS_CODEWSCOPE78,2111
#define BSON_ITER_HOLDS_INT32(BSON_ITER_HOLDS_INT3281,2208
#define BSON_ITER_HOLDS_TIMESTAMP(BSON_ITER_HOLDS_TIMESTAMP84,2295
#define BSON_ITER_HOLDS_INT64(BSON_ITER_HOLDS_INT6487,2390
#define BSON_ITER_HOLDS_MAXKEY(BSON_ITER_HOLDS_MAXKEY90,2477
#define BSON_ITER_HOLDS_MINKEY(BSON_ITER_HOLDS_MINKEY93,2566
#define BSON_ITER_IS_KEY(BSON_ITER_IS_KEY96,2655
bson_iter_utf8_len_unsafe (const bson_iter_t *iter)bson_iter_utf8_len_unsafe113,3111
bson_iter_code_unsafe (const bson_iter_t *iter,bson_iter_code_unsafe151,4032
bson_iter_double_unsafe (const bson_iter_t *iter)bson_iter_double_unsafe192,5064
bson_iter_int32_unsafe (const bson_iter_t *iter)bson_iter_int32_unsafe231,5829
bson_iter_int64_unsafe (const bson_iter_t *iter)bson_iter_int64_unsafe257,6295
bson_iter_oid_unsafe (const bson_iter_t *iter)bson_iter_oid_unsafe299,7112
bson_iter_key_unsafe (const bson_iter_t *iter)bson_iter_key_unsafe318,7496
bson_iter_utf8_unsafe (const bson_iter_t *iter,bson_iter_utf8_unsafe337,7896
bson_iter_time_t_unsafe (const bson_iter_t *iter)bson_iter_time_t_unsafe368,8560
bson_iter_timeval_unsafe (const bson_iter_t *iter,bson_iter_timeval_unsafe387,8955
bson_iter_bool_unsafe (const bson_iter_t *iter)bson_iter_bool_unsafe419,9648
bson_iter_type_unsafe (const bson_iter_t *iter)bson_iter_type_unsafe455,10281

include/mongo/bson/bson-thread-private.h,706
#define BSON_THREAD_PRIVATE_HBSON_THREAD_PRIVATE_H19,627
#  define bson_mutex_t bson_mutex_t37,921
#  define bson_mutex_init(bson_mutex_init38,979
#  define bson_mutex_lock bson_mutex_lock39,1052
#  define bson_mutex_unlock bson_mutex_unlock40,1113
#  define bson_mutex_destroy bson_mutex_destroy41,1176
#  define bson_thread_t bson_thread_t42,1240
#  define bson_thread_create(bson_thread_create43,1292
#  define bson_thread_join(bson_thread_join44,1373
#  define bson_once_t bson_once_t45,1440
#  define bson_once bson_once46,1497
#  define BSON_ONCE_FUN(BSON_ONCE_FUN47,1552
#  define BSON_ONCE_RETURN BSON_ONCE_RETURN48,1607
#    define BSON_ONCE_INIT BSON_ONCE_INIT50,1701

include/mongo/bson/bson-writer.h,110
#define BSON_WRITER_HBSON_WRITER_H19,619
typedef struct _bson_writer_t bson_writer_t;bson_writer_t39,1105

include/mongo/bson/bson-memory.h,478
#define BSON_MEMORY_HBSON_MEMORY_H19,619
typedef void *(*bson_realloc_func) (void  *mem,bson_realloc_func34,830
typedef struct _bson_mem_vtable_t_bson_mem_vtable_t39,983
   void *(*malloc)    (size_t  num_bytes);malloc41,1019
   void *(*calloc)    (size_t  n_members,calloc42,1062
   void *(*realloc)   (void   *mem,realloc44,1147
   void  (*free)      (void   *mem);free46,1226
   void *padding [4];padding47,1263
} bson_mem_vtable_t;bson_mem_vtable_t48,1285

include/mongo/bson/bson-version-functions.c,297
bson_get_major_version (void)bson_get_major_version28,774
bson_get_minor_version (void)bson_get_minor_version40,953
bson_get_micro_version (void)bson_get_micro_version51,1131
bson_get_version (void)bson_get_version62,1313
bson_check_version (int required_major,bson_check_version74,1491

include/mongo/bson/bson-version.h.in,470
#define BSON_VERSION_HBSON_VERSION_H24,736
#define BSON_MAJOR_VERSION BSON_MAJOR_VERSION32,862
#define BSON_MINOR_VERSION BSON_MINOR_VERSION40,1015
#define BSON_MICRO_VERSION BSON_MICRO_VERSION48,1168
#define BSON_PRERELEASE_VERSION BSON_PRERELEASE_VERSION56,1337
#define BSON_VERSION BSON_VERSION63,1443
#define BSON_VERSION_S BSON_VERSION_S72,1593
#define BSON_VERSION_HEX BSON_VERSION_HEX81,1753
#define BSON_CHECK_VERSION(BSON_CHECK_VERSION95,2165

include/mongo/bson/b64_pton.h,766
#define Assert(Assert45,2244
static const char Base64[] =Base6447,2287
static const char Pad64 = '=';Pad6449,2385
static int b64rmap_initialized = 0;b64rmap_initialized119,5813
static uint8_t b64rmap[256];b64rmap120,5849
static const uint8_t b64rmap_special = 0xf0;b64rmap_special122,5879
static const uint8_t b64rmap_end = 0xfd;b64rmap_end123,5924
static const uint8_t b64rmap_space = 0xfe;b64rmap_space124,5965
static const uint8_t b64rmap_invalid = 0xff;b64rmap_invalid125,6008
b64_initialize_rmap ()b64_initialize_rmap132,6164
b64_pton_do(char const *src, uint8_t *target, size_t targsize)b64_pton_do161,6719
b64_pton_len(char const *src)b64_pton_len280,9263
b64_pton(char const *src, uint8_t *target, size_t targsize)b64_pton375,11071

include/mongo/bson/bson-compat.h,1165
#define BSON_COMPAT_HBSON_COMPAT_H19,619
#  define __USE_MINGW_ANSI_STDIO __USE_MINGW_ANSI_STDIO33,946
#  define _WIN32_WINNT _WIN32_WINNT46,1176
#  define NOMINMAXNOMINMAX49,1232
#   define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN53,1312
#   define _SSIZE_T_DEFINED_SSIZE_T_DEFINED93,1947
    typedef SSIZE_T ssize_t;ssize_t94,1975
    typedef SIZE_T size_t;size_t96,2013
# define PRIi32 PRIi32110,2364
# define PRId32 PRId32111,2384
# define PRIu32 PRIu32112,2404
# define PRIi64 PRIi64113,2424
# define PRId64 PRId64114,2447
# define PRIu64 PRIu64115,2470
# define INIT_ONCE_STATIC_INIT INIT_ONCE_STATIC_INIT122,2617
typedef RTL_RUN_ONCE INIT_ONCE;INIT_ONCE123,2666
#  define false false131,2851
#  define true true132,2869
# define __bool_true_false_are_defined __bool_true_false_are_defined134,2894
#  define bson_sync_synchronize(bson_sync_synchronize140,3028
#  define bson_sync_synchronize(bson_sync_synchronize143,3215
#  define bson_sync_synchronize(bson_sync_synchronize145,3290
# define bson_sync_synchronize(bson_sync_synchronize148,3388
# define va_copy(va_copy153,3489
# define va_copy(va_copy158,3599

include/mongo/bson/bson-macros.h,3638
#define BSON_MACROS_HBSON_MACROS_H19,619
# define BSON_OS_UNIXBSON_OS_UNIX38,895
# define BSON_OS_WIN32BSON_OS_WIN3240,936
#  define BSON_BEGIN_DECLS BSON_BEGIN_DECLS47,1029
#  define BSON_END_DECLS BSON_END_DECLS48,1069
#  define BSON_BEGIN_DECLSBSON_BEGIN_DECLS50,1104
#  define BSON_END_DECLSBSON_END_DECLS51,1131
#define BSON_GNUC_CHECK_VERSION(BSON_GNUC_CHECK_VERSION55,1165
#define BSON_GNUC_IS_VERSION(BSON_GNUC_IS_VERSION62,1347
#    define BSON_API BSON_API70,1530
#    define BSON_API BSON_API72,1581
#  define BSON_APIBSON_API75,1639
#  define BSON_MIN BSON_MIN80,1678
#  define BSON_MIN(BSON_MIN82,1728
#  define BSON_MIN(BSON_MIN84,1798
#  define BSON_MIN(BSON_MIN86,1853
#  define BSON_MAX BSON_MAX91,1923
#  define BSON_MAX(BSON_MAX93,1973
#  define BSON_MAX(BSON_MAX95,2043
#  define BSON_MAX(BSON_MAX97,2098
#  define BSON_ABS BSON_ABS102,2169
#  define BSON_ABS(BSON_ABS104,2198
#    define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR109,2291
#    define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR111,2331
#  define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR114,2378
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN119,2479
#    define BSON_ALIGNED_END(BSON_ALIGNED_END120,2538
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN122,2579
#    define BSON_ALIGNED_END(BSON_ALIGNED_END123,2614
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN127,2716
#    define BSON_ALIGNED_END(BSON_ALIGNED_END128,2825
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN130,2866
#    define BSON_ALIGNED_END(BSON_ALIGNED_END131,2901
#define bson_str_empty(bson_str_empty136,3032
#define bson_str_empty0(bson_str_empty0137,3067
#  define BSON_FUNC BSON_FUNC141,3130
#  define BSON_FUNC BSON_FUNC143,3225
#  define BSON_FUNC BSON_FUNC145,3264
#define BSON_ASSERT(BSON_ASSERT148,3301
#define BSON_STATIC_ASSERT(BSON_STATIC_ASSERT158,3551
#define BSON_STATIC_ASSERT_JOIN(BSON_STATIC_ASSERT_JOIN159,3615
#define BSON_STATIC_ASSERT_JOIN2(BSON_STATIC_ASSERT_JOIN2160,3685
#define BSON_STATIC_ASSERT_(BSON_STATIC_ASSERT_161,3729
#  define BSON_GNUC_CONST BSON_GNUC_CONST167,3918
#  define BSON_GNUC_WARN_UNUSED_RESULT BSON_GNUC_WARN_UNUSED_RESULT168,3967
#  define BSON_GNUC_CONSTBSON_GNUC_CONST170,4048
#  define BSON_GNUC_WARN_UNUSED_RESULTBSON_GNUC_WARN_UNUSED_RESULT171,4074
#  define BSON_GNUC_NULL_TERMINATED BSON_GNUC_NULL_TERMINATED176,4176
#  define BSON_GNUC_INTERNAL BSON_GNUC_INTERNAL177,4238
#  define BSON_GNUC_NULL_TERMINATEDBSON_GNUC_NULL_TERMINATED179,4312
#  define BSON_GNUC_INTERNALBSON_GNUC_INTERNAL180,4348
#  define BSON_LIKELY(BSON_LIKELY185,4408
#  define BSON_UNLIKELY(BSON_UNLIKELY186,4464
#  define BSON_LIKELY(BSON_LIKELY188,4526
#  define BSON_UNLIKELY(BSON_UNLIKELY189,4555
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF194,4616
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF196,4724
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF198,4806
#  define BSON_WORD_SIZE BSON_WORD_SIZE203,4888
#  define BSON_WORD_SIZE BSON_WORD_SIZE205,4922
#  define BSON_INLINE BSON_INLINE210,4981
#  define BSON_INLINE BSON_INLINE212,5018
#  define BSON_ENSURE_ARRAY_PARAM_SIZE(BSON_ENSURE_ARRAY_PARAM_SIZE217,5076
#  define BSON_TYPEOF BSON_TYPEOF218,5119
#  define BSON_ENSURE_ARRAY_PARAM_SIZE(BSON_ENSURE_ARRAY_PARAM_SIZE220,5156
#  define BSON_TYPEOF BSON_TYPEOF221,5211
# define BSON_GNUC_DEPRECATED BSON_GNUC_DEPRECATED226,5283
# define BSON_GNUC_DEPRECATEDBSON_GNUC_DEPRECATED228,5351
# define BSON_GNUC_DEPRECATED_FOR(BSON_GNUC_DEPRECATED_FOR233,5424
# define BSON_GNUC_DEPRECATED_FOR(BSON_GNUC_DEPRECATED_FOR235,5517

include/mongo/bson/bson-md5.h,288
#define BSON_MD5_HBSON_MD5_H58,2213
{__anon11f47303010873,2413
   uint32_t count[2]; /* message length in bits, lsw first */count74,2415
   uint32_t abcd[4];  /* digest buffer */abcd75,2477
   uint8_t  buf[64];  /* accumulate block */buf76,2519
} bson_md5_t;bson_md5_t77,2564

include/mongo/bson/bson-timegm.c,5260
#define is_digit(is_digit23,504
#define CHAR_BIT CHAR_BIT26,569
# define ATTRIBUTE_CONST ATTRIBUTE_CONST30,638
# define ATTRIBUTE_PURE ATTRIBUTE_PURE31,687
# define ATTRIBUTE_FORMAT(ATTRIBUTE_FORMAT32,738
# define ATTRIBUTE_CONST ATTRIBUTE_CONST34,810
# define ATTRIBUTE_PURE ATTRIBUTE_PURE35,847
# define ATTRIBUTE_FORMAT(ATTRIBUTE_FORMAT36,883
#  define _Noreturn _Noreturn41,1061
#  define _Noreturn_Noreturn43,1119
# define restrict restrict48,1238
#define TYPE_BIT(TYPE_BIT52,1293
#define TYPE_SIGNED(TYPE_SIGNED56,1395
#define TZ_MAX_TIMES	TZ_MAX_TIMES71,1825
#define TZ_MAX_TYPES	TZ_MAX_TYPES76,1978
#define TZ_MAX_CHARS	TZ_MAX_CHARS80,2109
#define TZ_MAX_LEAPS	TZ_MAX_LEAPS85,2290
#define SECSPERMIN	SECSPERMIN88,2398
#define MINSPERHOUR	MINSPERHOUR89,2420
#define HOURSPERDAY	HOURSPERDAY90,2443
#define DAYSPERWEEK	DAYSPERWEEK91,2466
#define DAYSPERNYEAR	DAYSPERNYEAR92,2488
#define DAYSPERLYEAR	DAYSPERLYEAR93,2513
#define SECSPERHOUR	SECSPERHOUR94,2538
#define SECSPERDAY	SECSPERDAY95,2585
#define MONSPERYEAR	MONSPERYEAR96,2647
#define TM_SUNDAY	TM_SUNDAY98,2671
#define TM_MONDAY	TM_MONDAY99,2691
#define TM_TUESDAY	TM_TUESDAY100,2711
#define TM_WEDNESDAY	TM_WEDNESDAY101,2732
#define TM_THURSDAY	TM_THURSDAY102,2755
#define TM_FRIDAY	TM_FRIDAY103,2777
#define TM_SATURDAY	TM_SATURDAY104,2797
#define TM_JANUARY	TM_JANUARY106,2820
#define TM_FEBRUARY	TM_FEBRUARY107,2841
#define TM_MARCH	TM_MARCH108,2863
#define TM_APRIL	TM_APRIL109,2882
#define TM_MAY	TM_MAY110,2901
#define TM_JUNE	TM_JUNE111,2919
#define TM_JULY	TM_JULY112,2938
#define TM_AUGUST	TM_AUGUST113,2957
#define TM_SEPTEMBER	TM_SEPTEMBER114,2977
#define TM_OCTOBER	TM_OCTOBER115,3000
#define TM_NOVEMBER	TM_NOVEMBER116,3021
#define TM_DECEMBER	TM_DECEMBER117,3044
#define TM_YEAR_BASE	TM_YEAR_BASE119,3068
#define EPOCH_YEAR	EPOCH_YEAR121,3095
#define EPOCH_WDAY	EPOCH_WDAY122,3119
#define isleap(isleap124,3151
#define isleap_sum(isleap_sum138,3614
#define TZ_ABBR_MAX_LEN	TZ_ABBR_MAX_LEN141,3694
#define TZ_ABBR_CHAR_SET TZ_ABBR_CHAR_SET145,3785
#define TZ_ABBR_ERR_CHAR	TZ_ABBR_ERR_CHAR150,3949
#define WILDABBR	WILDABBR173,5060
static const char	wildabbr[] = WILDABBR;wildabbr177,5130
static const char	gmt[] = "GMT";gmt180,5179
struct ttinfo {				/* time type information */ttinfo182,5213
	int_fast32_t	tt_gmtoff;	/* UT offset in seconds */tt_gmtoff183,5260
	int		tt_isdst;	/* used to set tm_isdst */tt_isdst184,5312
	int		tt_abbrind;	/* abbreviation list index */tt_abbrind185,5355
	int		tt_ttisstd;	/* true if transition is std time */tt_ttisstd186,5403
	int		tt_ttisgmt;	/* true if transition is UT */tt_ttisgmt187,5458
struct lsinfo {				/* leap second information */lsinfo190,5511
	time_t		ls_trans;	/* transition time */ls_trans191,5560
	int_fast64_t	ls_corr;	/* correction to apply */ls_corr192,5601
#define BIGGEST(BIGGEST195,5654
#define MY_TZNAME_MAX	MY_TZNAME_MAX198,5721
#define MY_TZNAME_MAX	MY_TZNAME_MAX201,5805
struct state {state204,5865
	int		leapcnt;leapcnt205,5880
	int		timecnt;timecnt206,5895
	int		typecnt;typecnt207,5910
	int		charcnt;charcnt208,5925
	int		goback;goback209,5940
	int		goahead;goahead210,5954
	time_t		ats[TZ_MAX_TIMES];ats211,5969
	unsigned char	types[TZ_MAX_TIMES];types212,5997
	struct ttinfo	ttis[TZ_MAX_TYPES];ttis213,6033
	char		chars[BIGGEST(BIGGEST(TZ_MAX_CHARS + 1, sizeof gmt),chars214,6068
	struct lsinfo	lsis[TZ_MAX_LEAPS];lsis216,6161
	int		defaulttype; /* for early times or if no transitions */defaulttype217,6196
struct rule {rule220,6262
	int		r_type;		/* type of rule--see below */r_type221,6276
	int		r_day;		/* day number of rule */r_day222,6321
	int		r_week;		/* week number of rule */r_week223,6360
	int		r_mon;		/* month number of rule */r_mon224,6401
	int_fast32_t	r_time;		/* transition time of rule */r_time225,6442
#define JULIAN_DAY	JULIAN_DAY228,6499
#define DAY_OF_YEAR	DAY_OF_YEAR229,6543
#define MONTH_NTH_DAY_OF_WEEK	MONTH_NTH_DAY_OF_WEEK230,6588
static struct state	gmtmem;gmtmem263,7823
#define gmtptr	gmtptr264,7851
static int		gmt_is_set;gmt_is_set266,7878
static const int	mon_lengths[2][MONSPERYEAR] = {mon_lengths268,7903
static const int	year_lengths[2] = {year_lengths273,8061
gmtload(struct state *const sp)gmtload278,8142
gmtsub(const time_t *const timep, const int_fast32_t offset,gmtsub293,8412
leaps_thru_end_of(register const int y)leaps_thru_end_of321,9122
timesub(const time_t *const timep, const int_fast32_t offset,timesub328,9273
#define WRONG	WRONG465,12771
increment_overflow(int *const ip, int j)increment_overflow473,12878
increment_overflow32(int_fast32_t *const lp, int const m)increment_overflow32490,13327
normalize_overflow(int *const tensptr, int *const unitsptr, const int base)normalize_overflow501,13550
normalize_overflow32(int_fast32_t *const tensptr, int *const unitsptr,normalize_overflow32513,13837
tmcomp(register const struct tm *const atmp,tmcomp526,14144
time2sub(struct tm *const tmp,time2sub542,14628
time2(struct tm * const	tmp,time2717,18919
time1(struct tm *const tmp,time1734,19404
_bson_timegm(struct tm *const tmp)_bson_timegm806,21267

include/mongo/bson/bson-utf8.c,474
_bson_utf8_get_sequence (const char *utf8,       /* IN */_bson_utf8_get_sequence45,1230
bson_utf8_validate (const char *utf8,       /* IN */bson_utf8_validate118,3170
bson_utf8_escape_for_json (const char *utf8,     /* IN */bson_utf8_escape_for_json264,6821
bson_utf8_get_char (const char *utf8) /* IN */bson_utf8_get_char355,8892
bson_utf8_next_char (const char *utf8) /* IN */bson_utf8_next_char396,9676
bson_utf8_from_unichar (bson_utf8_from_unichar433,10483

include/mongo/bson/bson-reader.c,3082
{__anond13d0a4b010335,869
   BSON_READER_HANDLE = 1,BSON_READER_HANDLE36,871
   BSON_READER_DATA = 2,BSON_READER_DATA37,898
} bson_reader_type_t;bson_reader_type_t38,923
{__anond13d0a4b020842,962
   bson_reader_type_t         type;type43,964
   void                      *handle;handle44,1000
   bool                       done   : 1;done45,1038
   bool                       failed : 1;failed46,1080
   size_t                     end;end47,1122
   size_t                     len;len48,1157
   size_t                     offset;offset49,1192
   size_t                     bytes_read;bytes_read50,1230
   bson_t                     inline_bson;inline_bson51,1272
   uint8_t                   *data;data52,1315
   bson_reader_read_func_t    read_func;read_func53,1351
   bson_reader_destroy_func_t destroy_func;destroy_func54,1392
} bson_reader_handle_t;bson_reader_handle_t55,1436
{__anond13d0a4b030859,1477
   int fd;fd60,1479
   bool do_close;do_close61,1490
} bson_reader_handle_fd_t;bson_reader_handle_fd_t62,1508
{__anond13d0a4b040866,1552
   bson_reader_type_t type;type67,1554
   const uint8_t     *data;data68,1582
   size_t             length;length69,1610
   size_t             offset;offset70,1640
   bson_t             inline_bson;inline_bson71,1670
} bson_reader_data_t;bson_reader_data_t72,1705
_bson_reader_handle_fill_buffer (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_fill_buffer94,2177
bson_reader_new_from_handle (void                       *handle,bson_reader_new_from_handle167,3988
_bson_reader_handle_fd_destroy (void *handle) /* IN */_bson_reader_handle_fd_destroy213,5043
_bson_reader_handle_fd_read (void   *handle, /* IN */_bson_reader_handle_fd_read253,5895
bson_reader_new_from_fd (int  fd,               /* IN */bson_reader_new_from_fd298,6969
bson_reader_set_read_func (bson_reader_t          *reader, /* IN */bson_reader_set_read_func342,8063
bson_reader_set_destroy_func (bson_reader_t             *reader, /* IN */bson_reader_set_destroy_func373,8804
_bson_reader_handle_grow_buffer (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_grow_buffer401,9444
_bson_reader_handle_tell (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_tell428,10030
_bson_reader_handle_read (bson_reader_handle_t *reader,      /* IN */_bson_reader_handle_read461,10805
bson_reader_new_from_data (const uint8_t *data,   /* IN */bson_reader_new_from_data534,12554
_bson_reader_data_read (bson_reader_data_t *reader,      /* IN */_bson_reader_data_read569,13352
_bson_reader_data_tell (bson_reader_data_t *reader) /* IN */_bson_reader_data_tell625,14566
bson_reader_destroy (bson_reader_t *reader) /* IN */bson_reader_destroy649,15078
bson_reader_read (bson_reader_t *reader,      /* IN */bson_reader_read710,16682
bson_reader_tell (bson_reader_t *reader) /* IN */bson_reader_tell749,17633
bson_reader_new_from_file (const char   *path,  /* IN */bson_reader_new_from_file787,18600
bson_reader_reset (bson_reader_t *reader)bson_reader_reset829,19617

include/mongo/bson/bson-clock.c,206
bson_gettimeofday (struct timeval *tv) /* OUT */bson_gettimeofday55,1246
#  define DELTA_EPOCH_IN_MICROSEC DELTA_EPOCH_IN_MICROSEC59,1340
bson_get_monotonic_time (void)bson_get_monotonic_time120,2813

include/mongo/bson/bson-value.h,41
#define BSON_VALUE_HBSON_VALUE_H19,618

include/mongo/stdafx.h,0

include/mongo/mongoc/mongoc-log.h,950
#define MONGOC_LOG_HMONGOC_LOG_H18,617
# define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN31,826
#define MONGOC_ERROR(MONGOC_ERROR35,871
#define MONGOC_CRITICAL(MONGOC_CRITICAL36,970
#define MONGOC_WARNING(MONGOC_WARNING37,1069
#define MONGOC_MESSAGE(MONGOC_MESSAGE38,1168
#define MONGOC_INFO(MONGOC_INFO39,1267
#define MONGOC_DEBUG(MONGOC_DEBUG40,1366
{__anon66fc6361010344,1480
   MONGOC_LOG_LEVEL_ERROR,MONGOC_LOG_LEVEL_ERROR45,1482
   MONGOC_LOG_LEVEL_CRITICAL,MONGOC_LOG_LEVEL_CRITICAL46,1509
   MONGOC_LOG_LEVEL_WARNING,MONGOC_LOG_LEVEL_WARNING47,1539
   MONGOC_LOG_LEVEL_MESSAGE,MONGOC_LOG_LEVEL_MESSAGE48,1568
   MONGOC_LOG_LEVEL_INFO,MONGOC_LOG_LEVEL_INFO49,1597
   MONGOC_LOG_LEVEL_DEBUG,MONGOC_LOG_LEVEL_DEBUG50,1623
   MONGOC_LOG_LEVEL_TRACE,MONGOC_LOG_LEVEL_TRACE51,1650
} mongoc_log_level_t;mongoc_log_level_t52,1677
typedef void (*mongoc_log_func_t) (mongoc_log_level_t  log_level,mongoc_log_func_t66,2131

include/mongo/mongoc/indent,0

include/mongo/mongoc/mongoc-cursor-array-private.h,75
#define MONGOC_CURSOR_ARRAY_PRIVATE_HMONGOC_CURSOR_ARRAY_PRIVATE_H18,634

include/mongo/mongoc/mongoc-crypto-openssl-private.h,79
#define MONGOC_CRYPTO_OPENSSL_PRIVATE_HMONGOC_CRYPTO_OPENSSL_PRIVATE_H28,843

include/mongo/mongoc/op-kill-cursors.def,0

include/mongo/mongoc/uncrustify.cfg,0

include/mongo/mongoc/mongoc-stream-socket.h,154
#define MONGOC_STREAM_SOCKET_HMONGOC_STREAM_SOCKET_H18,627
typedef struct _mongoc_stream_socket_t mongoc_stream_socket_t;mongoc_stream_socket_t31,856

include/mongo/mongoc/mongoc-apm.h,855
#define MONGOC_APM_HMONGOC_APM_H18,617
typedef struct _mongoc_apm_callbacks_t mongoc_apm_callbacks_t;mongoc_apm_callbacks_t40,1076
typedef struct _mongoc_apm_command_started_t   mongoc_apm_command_started_t;mongoc_apm_command_started_t47,1198
typedef struct _mongoc_apm_command_succeeded_t mongoc_apm_command_succeeded_t;mongoc_apm_command_succeeded_t48,1275
typedef struct _mongoc_apm_command_failed_t    mongoc_apm_command_failed_t;mongoc_apm_command_failed_t49,1354
(*mongoc_apm_command_started_cb_t)   (const mongoc_apm_command_started_t   *event);mongoc_apm_command_started_cb_t120,4224
(*mongoc_apm_command_succeeded_cb_t) (const mongoc_apm_command_succeeded_t *event);mongoc_apm_command_succeeded_cb_t122,4321
(*mongoc_apm_command_failed_cb_t)    (const mongoc_apm_command_failed_t    *event);mongoc_apm_command_failed_cb_t124,4418

include/mongo/mongoc/mongoc-sasl-private.h,621
#define MONGOC_SASL_PRIVATE_HMONGOC_SASL_PRIVATE_H18,626
typedef struct _mongoc_sasl_t mongoc_sasl_t;mongoc_sasl_t32,874
struct _mongoc_sasl_t_mongoc_sasl_t35,921
   sasl_callback_t  callbacks [4];callbacks37,945
   sasl_conn_t     *conn;conn38,980
   bool             done;done39,1006
   int              step;step40,1032
   char            *mechanism;mechanism41,1058
   char            *user;user42,1089
   char            *pass;pass43,1115
   char            *service_name;service_name44,1141
   char            *service_host;service_host45,1175
   sasl_interact_t *interact;interact46,1209

include/mongo/mongoc/mongoc-find-and-modify.h,603
#define MONGOC_FIND_AND_MODIFY_HMONGOC_FIND_AND_MODIFY_H18,629
{__anon5768f5d5010329,835
   MONGOC_FIND_AND_MODIFY_NONE   = 0,MONGOC_FIND_AND_MODIFY_NONE30,837
   MONGOC_FIND_AND_MODIFY_REMOVE = 1 << 0,MONGOC_FIND_AND_MODIFY_REMOVE31,875
   MONGOC_FIND_AND_MODIFY_UPSERT = 1 << 1,MONGOC_FIND_AND_MODIFY_UPSERT32,918
   MONGOC_FIND_AND_MODIFY_RETURN_NEW = 1 << 2,MONGOC_FIND_AND_MODIFY_RETURN_NEW33,961
} mongoc_find_and_modify_flags_t;mongoc_find_and_modify_flags_t34,1008
typedef struct _mongoc_find_and_modify_opts_t mongoc_find_and_modify_opts_t ;mongoc_find_and_modify_opts_t36,1043

include/mongo/mongoc/mongoc-topology.c,1677
_mongoc_topology_reconcile_add_nodes (void *item,_mongoc_topology_reconcile_add_nodes34,1001
mongoc_topology_reconcile (mongoc_topology_t *topology) {mongoc_topology_reconcile53,1679
_mongoc_topology_scanner_cb (uint32_t      id,_mongoc_topology_scanner_cb87,2720
mongoc_topology_new (const mongoc_uri_t *uri,mongoc_topology_new147,4532
mongoc_topology_destroy (mongoc_topology_t *topology)mongoc_topology_destroy262,8528
_mongoc_topology_run_scanner (mongoc_topology_t *topology,_mongoc_topology_run_scanner296,9505
_mongoc_topology_do_blocking_scan (mongoc_topology_t *topology, bson_error_t *error) {_mongoc_topology_do_blocking_scan329,10430
mongoc_topology_select (mongoc_topology_t         *topology,mongoc_topology_select374,12058
mongoc_topology_server_by_id (mongoc_topology_t *topology,mongoc_topology_server_by_id564,19131
mongoc_topology_get_server_type (mongoc_topology_get_server_type603,20223
_mongoc_topology_request_scan (mongoc_topology_t *topology)_mongoc_topology_request_scan645,21265
mongoc_topology_request_scan (mongoc_topology_t *topology)mongoc_topology_request_scan665,21770
mongoc_topology_invalidate_server (mongoc_topology_t  *topology,mongoc_topology_invalidate_server687,22340
mongoc_topology_server_timestamp (mongoc_topology_t *topology,mongoc_topology_server_timestamp713,23197
void * _mongoc_topology_run_background (void *data)_mongoc_topology_run_background743,23961
_mongoc_topology_background_thread_start (mongoc_topology_t *topology)_mongoc_topology_background_thread_start853,27400
_mongoc_topology_background_thread_stop (mongoc_topology_t *topology)_mongoc_topology_background_thread_stop886,28321

include/mongo/mongoc/mongoc-bulk-operation.c,2218
mongoc_bulk_operation_new (bool ordered)mongoc_bulk_operation_new46,1563
_mongoc_bulk_operation_new (mongoc_client_t              *client,        /* IN */_mongoc_bulk_operation_new62,1974
mongoc_bulk_operation_destroy (mongoc_bulk_operation_t *bulk) /* IN */mongoc_bulk_operation_destroy87,2848
mongoc_bulk_operation_remove (mongoc_bulk_operation_t *bulk,     /* IN */mongoc_bulk_operation_remove114,3524
mongoc_bulk_operation_remove_one (mongoc_bulk_operation_t *bulk,     /* IN */mongoc_bulk_operation_remove_one146,4409
mongoc_bulk_operation_delete (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_delete178,5304
mongoc_bulk_operation_delete_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_delete_one190,5512
mongoc_bulk_operation_insert (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_insert202,5732
mongoc_bulk_operation_replace_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_replace_one235,6589
mongoc_bulk_operation_update (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_update277,7973
mongoc_bulk_operation_update_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_update_one321,9330
mongoc_bulk_operation_execute (mongoc_bulk_operation_t *bulk,  /* IN */mongoc_bulk_operation_execute364,10689
mongoc_bulk_operation_set_write_concern (mongoc_bulk_operation_t      *bulk,mongoc_bulk_operation_set_write_concern463,13765
mongoc_bulk_operation_get_write_concern (const mongoc_bulk_operation_t *bulk)mongoc_bulk_operation_get_write_concern480,14251
mongoc_bulk_operation_set_database (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_database489,14395
mongoc_bulk_operation_set_collection (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_collection503,14677
mongoc_bulk_operation_set_client (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_client517,14973
mongoc_bulk_operation_get_hint (const mongoc_bulk_operation_t *bulk)mongoc_bulk_operation_get_hint527,15189
mongoc_bulk_operation_set_hint (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_hint536,15320
mongoc_bulk_operation_set_bypass_document_validation (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_bypass_document_validation546,15518

include/mongo/mongoc/mongoc-find-and-modify-private.h,680
#define MONGOC_FIND_AND_MODIFY_PRIVATE_HMONGOC_FIND_AND_MODIFY_PRIVATE_H18,637
struct _mongoc_find_and_modify_opts_t_mongoc_find_and_modify_opts_t29,880
   bson_t                                    *sort;sort31,920
   bson_t                                    *update;update32,972
   bson_t                                    *fields;fields33,1026
   mongoc_find_and_modify_flags_t             flags;flags34,1080
   mongoc_write_bypass_document_validation_t  bypass_document_validation;bypass_document_validation35,1133
   uint32_t                                   max_time_ms;max_time_ms36,1207
   bson_t                                     extra;extra37,1266

include/mongo/mongoc/mongoc-async-cmd-private.h,1850
#define MONGOC_ASYNC_CMD_PRIVATE_HMONGOC_ASYNC_CMD_PRIVATE_H18,631
{__anon5728efe6010336,1035
   MONGOC_ASYNC_CMD_SETUP,MONGOC_ASYNC_CMD_SETUP37,1037
   MONGOC_ASYNC_CMD_SEND,MONGOC_ASYNC_CMD_SEND38,1064
   MONGOC_ASYNC_CMD_RECV_LEN,MONGOC_ASYNC_CMD_RECV_LEN39,1090
   MONGOC_ASYNC_CMD_RECV_RPC,MONGOC_ASYNC_CMD_RECV_RPC40,1120
   MONGOC_ASYNC_CMD_ERROR_STATE,MONGOC_ASYNC_CMD_ERROR_STATE41,1150
   MONGOC_ASYNC_CMD_CANCELED_STATE,MONGOC_ASYNC_CMD_CANCELED_STATE42,1183
} mongoc_async_cmd_state_t;mongoc_async_cmd_state_t43,1219
typedef struct _mongoc_async_cmd_mongoc_async_cmd45,1248
   mongoc_stream_t *stream;stream47,1283
   mongoc_async_t          *async;async49,1312
   mongoc_async_cmd_state_t state;state50,1347
   int                      events;events51,1382
   mongoc_async_cmd_setup_t setup;setup52,1418
   void                    *setup_ctx;setup_ctx53,1453
   mongoc_async_cmd_cb_t    cb;cb54,1492
   void                    *data;data55,1524
   bson_error_t             error;error56,1558
   int64_t                  start_time;start_time57,1593
   int64_t                  expire_at;expire_at58,1633
   bson_t                   cmd;cmd59,1672
   mongoc_buffer_t          buffer;buffer60,1705
   mongoc_array_t           array;array61,1741
   mongoc_iovec_t          *iovec;iovec62,1776
   size_t                   niovec;niovec63,1811
   size_t                   bytes_to_read;bytes_to_read64,1847
   mongoc_rpc_t             rpc;rpc65,1890
   bson_t                   reply;reply66,1923
   bool                     reply_needs_cleanup;reply_needs_cleanup67,1958
   char                     ns[MONGOC_NAMESPACE_MAX];ns68,2007
   struct _mongoc_async_cmd *next;next70,2062
   struct _mongoc_async_cmd *prev;prev71,2097
} mongoc_async_cmd_t;mongoc_async_cmd_t72,2132

include/mongo/mongoc/mongoc-scram-private.h,835
#define MONGOC_SCRAM_PRIVATE_HMONGOC_SCRAM_PRIVATE_H24,757
#define MONGOC_SCRAM_HASH_SIZE MONGOC_SCRAM_HASH_SIZE33,863
typedef struct _mongoc_scram_t_mongoc_scram_t35,898
   bool                done;done37,931
   int                 step;step38,960
   char               *user;user39,989
   char               *pass;pass40,1018
   uint8_t             salted_password[MONGOC_SCRAM_HASH_SIZE];salted_password41,1047
   char                encoded_nonce[48];encoded_nonce42,1111
   int32_t             encoded_nonce_len;encoded_nonce_len43,1153
   uint8_t            *auth_message;auth_message44,1195
   uint32_t            auth_messagemax;auth_messagemax45,1232
   uint32_t            auth_messagelen;auth_messagelen46,1272
   mongoc_crypto_t     crypto;crypto48,1340
} mongoc_scram_t;mongoc_scram_t50,1378

include/mongo/mongoc/mongoc-ssl.h,473
#define MONGOC_SSL_HMONGOC_SSL_H18,617
typedef struct _mongoc_ssl_opt_t mongoc_ssl_opt_t;mongoc_ssl_opt_t30,800
struct _mongoc_ssl_opt_t_mongoc_ssl_opt_t33,853
   const char *pem_file;pem_file35,880
   const char *pem_pwd;pem_pwd36,905
   const char *ca_file;ca_file37,929
   const char *ca_dir;ca_dir38,953
   const char *crl_file;crl_file39,976
   bool        weak_cert_validation;weak_cert_validation40,1001
   void       *padding [8];padding41,1038

include/mongo/mongoc/utlist.h,3789
#define UTLIST_HUTLIST_H25,1163
#define UTLIST_VERSION UTLIST_VERSION27,1181
#define LDECLTYPE(LDECLTYPE68,2657
#define NO_DECLTYPENO_DECLTYPE70,2760
#define LDECLTYPE(LDECLTYPE71,2780
#define NO_DECLTYPENO_DECLTYPE74,2840
#define LDECLTYPE(LDECLTYPE75,2860
#define LDECLTYPE(LDECLTYPE77,2949
#define _SV(_SV84,3234
#define _NEXT(_NEXT85,3331
#define _NEXTASGN(_NEXTASGN86,3384
#define _PREVASGN(_PREVASGN88,3545
#define _RS(_RS89,3647
#define _CASTASGN(_CASTASGN90,3716
#define _SV(_SV92,3799
#define _NEXT(_NEXT93,3821
#define _NEXTASGN(_NEXTASGN94,3864
#define _PREVASGN(_PREVASGN96,3968
#define _RS(_RS97,4023
#define _CASTASGN(_CASTASGN98,4041
#define LL_SORT(LL_SORT105,4400
#define LL_SORT2(LL_SORT2108,4528
#define DL_SORT(DL_SORT168,10071
#define DL_SORT2(DL_SORT2171,10205
#define CDL_SORT(CDL_SORT230,15747
#define CDL_SORT2(CDL_SORT2233,15882
#define LL_PREPEND(LL_PREPEND309,23022
#define LL_PREPEND2(LL_PREPEND2312,23151
#define LL_CONCAT(LL_CONCAT318,23552
#define LL_CONCAT2(LL_CONCAT2321,23683
#define LL_APPEND(LL_APPEND333,24666
#define LL_APPEND2(LL_APPEND2336,24794
#define LL_DELETE(LL_DELETE349,25874
#define LL_DELETE2(LL_DELETE2352,26002
#define LL_APPEND_VS2008(LL_APPEND_VS2008369,27436
#define LL_APPEND2_VS2008(LL_APPEND2_VS2008372,27571
#define LL_DELETE_VS2008(LL_DELETE_VS2008384,28554
#define LL_DELETE2_VS2008(LL_DELETE2_VS2008387,28689
#define LL_APPEND LL_APPEND407,30386
#define LL_DELETE LL_DELETE409,30438
#define LL_DELETE2 LL_DELETE2411,30491
#define LL_APPEND2 LL_APPEND2413,30546
#define LL_COUNT(LL_COUNT419,30707
#define LL_COUNT2(LL_COUNT2422,30902
#define LL_FOREACH(LL_FOREACH428,31293
#define LL_FOREACH2(LL_FOREACH2431,31421
#define LL_FOREACH_SAFE(LL_FOREACH_SAFE434,31553
#define LL_FOREACH_SAFE2(LL_FOREACH_SAFE2437,31690
#define LL_SEARCH_SCALAR(LL_SEARCH_SCALAR440,31849
#define LL_SEARCH_SCALAR2(LL_SEARCH_SCALAR2443,31994
#define LL_SEARCH(LL_SEARCH450,32491
#define LL_SEARCH2(LL_SEARCH2453,32627
#define LL_REPLACE_ELEM(LL_REPLACE_ELEM460,33124
#define LL_PREPEND_ELEM(LL_PREPEND_ELEM480,34883
#define DL_PREPEND(DL_PREPEND504,36968
#define DL_PREPEND2(DL_PREPEND2507,37102
#define DL_APPEND(DL_APPEND519,38085
#define DL_APPEND2(DL_APPEND2522,38218
#define DL_CONCAT(DL_CONCAT536,39395
#define DL_CONCAT2(DL_CONCAT2539,39531
#define DL_DELETE(DL_DELETE554,40805
#define DL_DELETE2(DL_DELETE2557,40938
#define DL_COUNT(DL_COUNT575,42503
#define DL_COUNT2(DL_COUNT2578,42698
#define DL_FOREACH(DL_FOREACH584,43089
#define DL_FOREACH2(DL_FOREACH2587,43217
#define DL_FOREACH_SAFE(DL_FOREACH_SAFE591,43419
#define DL_FOREACH_SAFE2(DL_FOREACH_SAFE2594,43556
#define DL_SEARCH_SCALAR DL_SEARCH_SCALAR598,43782
#define DL_SEARCH DL_SEARCH599,43824
#define DL_SEARCH_SCALAR2 DL_SEARCH_SCALAR2600,43852
#define DL_SEARCH2 DL_SEARCH2601,43896
#define DL_REPLACE_ELEM(DL_REPLACE_ELEM603,43927
#define DL_PREPEND_ELEM(DL_PREPEND_ELEM629,46268
#define CDL_PREPEND(CDL_PREPEND648,47868
#define CDL_PREPEND2(CDL_PREPEND2651,48003
#define CDL_DELETE(CDL_DELETE665,49180
#define CDL_DELETE2(CDL_DELETE2668,49314
#define CDL_COUNT(CDL_COUNT679,50200
#define CDL_COUNT2(CDL_COUNT2682,50395
#define CDL_FOREACH(CDL_FOREACH688,50786
#define CDL_FOREACH2(CDL_FOREACH2691,50915
#define CDL_FOREACH_SAFE(CDL_FOREACH_SAFE694,51073
#define CDL_FOREACH_SAFE2(CDL_FOREACH_SAFE2697,51222
#define CDL_SEARCH_SCALAR(CDL_SEARCH_SCALAR702,51561
#define CDL_SEARCH_SCALAR2(CDL_SEARCH_SCALAR2705,51707
#define CDL_SEARCH(CDL_SEARCH712,52204
#define CDL_SEARCH2(CDL_SEARCH2715,52341
#define CDL_REPLACE_ELEM(CDL_REPLACE_ELEM722,52838
#define CDL_PREPEND_ELEM(CDL_PREPEND_ELEM742,54597

include/mongo/mongoc/mongoc-opcode.h,657
#define MONGOC_OPCODE_HMONGOC_OPCODE_H18,620
{__anon18fd87d9010331,819
   MONGOC_OPCODE_REPLY         = 1,MONGOC_OPCODE_REPLY32,821
   MONGOC_OPCODE_MSG           = 1000,MONGOC_OPCODE_MSG33,857
   MONGOC_OPCODE_UPDATE        = 2001,MONGOC_OPCODE_UPDATE34,896
   MONGOC_OPCODE_INSERT        = 2002,MONGOC_OPCODE_INSERT35,935
   MONGOC_OPCODE_QUERY         = 2004,MONGOC_OPCODE_QUERY36,974
   MONGOC_OPCODE_GET_MORE      = 2005,MONGOC_OPCODE_GET_MORE37,1013
   MONGOC_OPCODE_DELETE        = 2006,MONGOC_OPCODE_DELETE38,1052
   MONGOC_OPCODE_KILL_CURSORS  = 2007,MONGOC_OPCODE_KILL_CURSORS39,1091
} mongoc_opcode_t;mongoc_opcode_t40,1130

include/mongo/mongoc/mongoc-write-concern.h,568
#define MONGOC_WRITE_CONCERN_HMONGOC_WRITE_CONCERN_H18,627
#define MONGOC_WRITE_CONCERN_W_UNACKNOWLEDGED MONGOC_WRITE_CONCERN_W_UNACKNOWLEDGED30,820
#define MONGOC_WRITE_CONCERN_W_ERRORS_IGNORED MONGOC_WRITE_CONCERN_W_ERRORS_IGNORED31,869
#define MONGOC_WRITE_CONCERN_W_DEFAULT MONGOC_WRITE_CONCERN_W_DEFAULT32,936
#define MONGOC_WRITE_CONCERN_W_MAJORITY MONGOC_WRITE_CONCERN_W_MAJORITY33,985
#define MONGOC_WRITE_CONCERN_W_TAG MONGOC_WRITE_CONCERN_W_TAG34,1034
typedef struct _mongoc_write_concern_t mongoc_write_concern_t;mongoc_write_concern_t37,1085

include/mongo/mongoc/mongoc-gridfs.h,119
#define MONGOC_GRIDFS_HMONGOC_GRIDFS_H18,619
typedef struct _mongoc_gridfs_t mongoc_gridfs_t;mongoc_gridfs_t35,933

include/mongo/mongoc/mongoc-crypto-common-crypto-private.h,91
#define MONGOC_CRYPTO_COMMON_CRYPTO_PRIVATE_HMONGOC_CRYPTO_COMMON_CRYPTO_PRIVATE_H25,807

include/mongo/mongoc/mongoc-bulk-operation-private.h,762
#define MONGOC_BULK_OPERATION_PRIVATE_HMONGOC_BULK_OPERATION_PRIVATE_H18,636
struct _mongoc_bulk_operation_t_mongoc_bulk_operation_t31,928
   char                          *database;database33,962
   char                          *collection;collection34,1006
   mongoc_client_t               *client;client35,1052
   mongoc_write_concern_t        *write_concern;write_concern36,1094
   mongoc_bulk_write_flags_t      flags;flags37,1143
   uint32_t                       server_id;server_id38,1184
   mongoc_array_t                 commands;commands39,1229
   mongoc_write_result_t          result;result40,1273
   bool                           executed;executed41,1315
   int64_t                        operation_id;operation_id42,1359

include/mongo/mongoc/mongoc-socket.h,333
#define MONGOC_SOCKET_HMONGOC_SOCKET_H18,620
typedef struct _mongoc_socket_t mongoc_socket_t;mongoc_socket_t47,1113
{__anon7cc308c8010850,1178
   mongoc_socket_t *socket;socket51,1180
   int              events;events52,1208
   int              revents;revents53,1236
} mongoc_socket_poll_t;mongoc_socket_poll_t54,1265

include/mongo/mongoc/mongoc-read-prefs.c,1259
mongoc_read_prefs_new (mongoc_read_mode_t mode)mongoc_read_prefs_new23,686
mongoc_read_prefs_get_mode (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_get_mode36,953
mongoc_read_prefs_set_mode (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_set_mode43,1094
mongoc_read_prefs_get_tags (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_get_tags54,1335
mongoc_read_prefs_set_tags (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_set_tags62,1471
mongoc_read_prefs_add_tag (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_add_tag78,1778
mongoc_read_prefs_is_valid (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_is_valid99,2250
mongoc_read_prefs_destroy (mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_destroy117,2566
mongoc_read_prefs_copy (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_copy127,2748
_get_read_mode_string (mongoc_read_mode_t mode)_get_read_mode_string141,3020
_apply_read_preferences_mongos (const mongoc_read_prefs_t *read_prefs,_apply_read_preferences_mongos164,3584
apply_read_preferences (const mongoc_read_prefs_t *read_prefs,apply_read_preferences246,6422
apply_read_prefs_result_cleanup (mongoc_apply_read_prefs_result_t *result)apply_read_prefs_result_cleanup312,8532

include/mongo/mongoc/op-reply.def,0

include/mongo/mongoc/mongoc-host-list.h,580
#define MONGOC_HOST_LIST_HMONGOC_HOST_LIST_H18,623
#  define BSON_HOST_NAME_MAX BSON_HOST_NAME_MAX32,863
typedef struct _mongoc_host_list_t mongoc_host_list_t;mongoc_host_list_t41,1018
struct _mongoc_host_list_t_mongoc_host_list_t44,1075
   mongoc_host_list_t *next;next46,1104
   char                host [BSON_HOST_NAME_MAX + 1];host47,1133
   char                host_and_port [BSON_HOST_NAME_MAX + 7];host_and_port48,1187
   uint16_t            port;port49,1250
   int                 family;family50,1279
   void               *padding [4];padding51,1310

include/mongo/mongoc/mongoc-rand.h,43
#define MONGOC_RAND_HMONGOC_RAND_H24,741

include/mongo/mongoc/mongoc-rand-common-crypto.c,384
int _mongoc_rand_bytes(uint8_t *buf, int num) {_mongoc_rand_bytes29,867
int _mongoc_pseudo_rand_bytes(uint8_t *buf, int num) {_mongoc_pseudo_rand_bytes33,976
void mongoc_rand_seed(const void* buf, int num) {mongoc_rand_seed37,1072
void mongoc_rand_add(const void* buf, int num, double entropy) {mongoc_rand_add41,1163
int mongoc_rand_status(void) {mongoc_rand_status45,1269

include/mongo/mongoc/mongoc-sasl.c,976
#  define SASL_CALLBACK_FN(SASL_CALLBACK_FN29,791
_mongoc_sasl_set_mechanism (mongoc_sasl_t *sasl,_mongoc_sasl_set_mechanism33,858
_mongoc_sasl_get_pass (mongoc_sasl_t  *sasl,_mongoc_sasl_get_pass44,1099
_mongoc_sasl_set_pass (mongoc_sasl_t *sasl,_mongoc_sasl_set_pass65,1570
_mongoc_sasl_get_user (mongoc_sasl_t  *sasl,_mongoc_sasl_get_user76,1776
_mongoc_sasl_set_user (mongoc_sasl_t *sasl,_mongoc_sasl_set_user97,2283
_mongoc_sasl_set_service_host (mongoc_sasl_t *sasl,_mongoc_sasl_set_service_host108,2483
_mongoc_sasl_set_service_name (mongoc_sasl_t *sasl,_mongoc_sasl_set_service_name119,2739
_mongoc_sasl_init (mongoc_sasl_t *sasl)_mongoc_sasl_init130,2995
_mongoc_sasl_destroy (mongoc_sasl_t *sasl)_mongoc_sasl_destroy158,3677
_mongoc_sasl_is_failure (int           status,_mongoc_sasl_is_failure175,3979
_mongoc_sasl_start (mongoc_sasl_t      *sasl,_mongoc_sasl_start217,5179
_mongoc_sasl_step (mongoc_sasl_t *sasl,_mongoc_sasl_step277,6804

include/mongo/mongoc/mongoc-openssl-private.h,65
#define MONGOC_OPENSSL_PRIVATE_HMONGOC_OPENSSL_PRIVATE_H18,629

include/mongo/mongoc/mongoc-scram.c,1302
#define MONGOC_SCRAM_SERVER_KEY MONGOC_SCRAM_SERVER_KEY32,902
#define MONGOC_SCRAM_CLIENT_KEY MONGOC_SCRAM_CLIENT_KEY33,947
#define MONGOC_SCRAM_B64_ENCODED_SIZE(MONGOC_SCRAM_B64_ENCODED_SIZE35,993
#define MONGOC_SCRAM_B64_HASH_SIZE MONGOC_SCRAM_B64_HASH_SIZE37,1043
_mongoc_scram_startup()_mongoc_scram_startup42,1145
_mongoc_scram_set_pass (mongoc_scram_t *scram,_mongoc_scram_set_pass49,1213
_mongoc_scram_set_user (mongoc_scram_t *scram,_mongoc_scram_set_user63,1478
_mongoc_scram_init (mongoc_scram_t *scram)_mongoc_scram_init74,1686
_mongoc_scram_destroy (mongoc_scram_t *scram)_mongoc_scram_destroy85,1843
_mongoc_scram_buf_write (const char *src,_mongoc_scram_buf_write100,2082
_mongoc_scram_start (mongoc_scram_t *scram,_mongoc_scram_start128,2713
_mongoc_scram_salt_password (mongoc_scram_t *scram,_mongoc_scram_salt_password256,6433
_mongoc_scram_generate_client_proof (mongoc_scram_t *scram,_mongoc_scram_generate_client_proof304,7974
_mongoc_scram_step2 (mongoc_scram_t *scram,_mongoc_scram_step2362,9954
_mongoc_scram_verify_server_signature (mongoc_scram_t *scram,_mongoc_scram_verify_server_signature603,16895
_mongoc_scram_step3 (mongoc_scram_t *scram,_mongoc_scram_step3642,18433
_mongoc_scram_step (mongoc_scram_t *scram,_mongoc_scram_step760,21465

include/mongo/mongoc/mongoc-rpc-private.h,1081
#define MONGOC_RPC_PRIVATE_HMONGOC_RPC_PRIVATE_H18,625
#define RPC(RPC36,963
#define ENUM_FIELD(ENUM_FIELD37,1053
#define INT32_FIELD(INT32_FIELD38,1110
#define INT64_FIELD(INT64_FIELD39,1166
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD40,1222
#define CSTRING_FIELD(CSTRING_FIELD41,1293
#define BSON_FIELD(BSON_FIELD42,1353
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD43,1416
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD44,1500
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD45,1618
#define BSON_OPTIONAL(BSON_OPTIONAL46,1702
{__anon5fbaf70c010a61,1995
   mongoc_rpc_delete_t       delete_;delete_62,1997
   mongoc_rpc_get_more_t     get_more;get_more63,2035
   mongoc_rpc_header_t       header;header64,2074
   mongoc_rpc_insert_t       insert;insert65,2111
   mongoc_rpc_kill_cursors_t kill_cursors;kill_cursors66,2148
   mongoc_rpc_msg_t          msg;msg67,2191
   mongoc_rpc_query_t        query;query68,2225
   mongoc_rpc_reply_t        reply;reply69,2261
   mongoc_rpc_update_t       update;update70,2297
} mongoc_rpc_t;mongoc_rpc_t71,2334

include/mongo/mongoc/mongoc-crypto.c,238
mongoc_crypto_init (mongoc_crypto_t *crypto)mongoc_crypto_init30,914
mongoc_crypto_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_hmac_sha142,1266
mongoc_crypto_sha1      (mongoc_crypto_t     *crypto,mongoc_crypto_sha153,1649

include/mongo/mongoc/mongoc-database-private.h,404
#define MONGOC_DATABASE_PRIVATE_HMONGOC_DATABASE_PRIVATE_H18,630
struct _mongoc_database_t_mongoc_database_t35,958
   mongoc_client_t        *client;client37,986
   char                    name [128];name38,1021
   mongoc_read_prefs_t    *read_prefs;read_prefs39,1060
   mongoc_read_concern_t  *read_concern;read_concern40,1099
   mongoc_write_concern_t *write_concern;write_concern41,1140

include/mongo/mongoc/mongoc-cursor-transform.c,1021
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,906
{__anonc36b20a1010834,968
   mongoc_cursor_transform_filter_t filter;filter35,970
   mongoc_cursor_transform_mutate_t mutate;mutate36,1014
   mongoc_cursor_transform_dtor_t   dtor;dtor37,1058
   void                            *ctx;ctx38,1100
   bson_t                           tmp;tmp39,1141
} mongoc_cursor_transform_t;mongoc_cursor_transform_t40,1182
_mongoc_cursor_transform_new (mongoc_cursor_transform_filter_t filter,_mongoc_cursor_transform_new44,1227
_mongoc_cursor_transform_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_transform_destroy66,1826
_mongoc_cursor_transform_next (mongoc_cursor_t *cursor,_mongoc_cursor_transform_next88,2210
_mongoc_cursor_transform_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_transform_clone125,3052
static mongoc_cursor_interface_t gMongocCursorArray = {gMongocCursorArray142,3479
_mongoc_cursor_transform_init (mongoc_cursor_t                 *cursor,_mongoc_cursor_transform_init151,3660

include/mongo/mongoc/mongoc-cursor-transform-private.h,687
#define MONGOC_CURSOR_FILTER_PRIVATE_HMONGOC_CURSOR_FILTER_PRIVATE_H18,635
{__anon976667ee010332,890
   MONGO_CURSOR_TRANSFORM_DROP,MONGO_CURSOR_TRANSFORM_DROP33,892
   MONGO_CURSOR_TRANSFORM_PASS,MONGO_CURSOR_TRANSFORM_PASS34,924
   MONGO_CURSOR_TRANSFORM_MUTATE,MONGO_CURSOR_TRANSFORM_MUTATE35,956
} mongoc_cursor_transform_mode_t;mongoc_cursor_transform_mode_t36,990
(*mongoc_cursor_transform_filter_t)(const bson_t *bson,mongoc_cursor_transform_filter_t39,1064
typedef void (*mongoc_cursor_transform_mutate_t)(const bson_t *bson,mongoc_cursor_transform_mutate_t42,1177
typedef void (*mongoc_cursor_transform_dtor_t)(void *ctx);mongoc_cursor_transform_dtor_t46,1384

include/mongo/mongoc/mongoc-cursor.c,4233
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN31,952
#define CURSOR_FAILED(CURSOR_FAILED34,989
_mongoc_n_return (mongoc_cursor_t * cursor)_mongoc_n_return49,1423
_mongoc_set_cursor_ns (mongoc_cursor_t *cursor,_mongoc_set_cursor_ns83,2206
_mongoc_cursor_new (mongoc_client_t           *client,_mongoc_cursor_new103,2708
#define MARK_FAILED(MARK_FAILED152,4351
mongoc_cursor_destroy (mongoc_cursor_t *cursor)mongoc_cursor_destroy266,7805
_mongoc_cursor_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_destroy282,8033
_mongoc_cursor_fetch_stream (mongoc_cursor_t *cursor)_mongoc_cursor_fetch_stream328,9361
_use_find_command (const mongoc_cursor_t *cursor,_use_find_command354,10180
_mongoc_cursor_initial_query (mongoc_cursor_t *cursor)_mongoc_cursor_initial_query368,10668
_mongoc_cursor_monitor_legacy_query (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_legacy_query414,11932
_mongoc_cursor_append_docs_array (mongoc_cursor_t *cursor,_mongoc_cursor_append_docs_array458,13228
_mongoc_cursor_monitor_succeeded (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_succeeded478,13710
_mongoc_cursor_monitor_failed (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_failed535,15643
_mongoc_cursor_op_query (mongoc_cursor_t        *cursor,_mongoc_cursor_op_query570,16686
_mongoc_cursor_run_command (mongoc_cursor_t *cursor,_mongoc_cursor_run_command705,20723
_invalid_field (const char      *query_field,_invalid_field747,21792
_translate_query_opt (const char *query_field,_translate_query_opt763,22180
_mongoc_cursor_prepare_find_command_flags (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_find_command_flags819,23662
_mongoc_cursor_collection (const mongoc_cursor_t *cursor,_mongoc_cursor_collection847,24408
_mongoc_cursor_prepare_find_command (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_find_command861,24889
_mongoc_cursor_find_command (mongoc_cursor_t *cursor)_mongoc_cursor_find_command937,27291
_mongoc_cursor_get_more (mongoc_cursor_t *cursor)_mongoc_cursor_get_more959,27732
_mongoc_cursor_monitor_legacy_get_more (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_legacy_get_more1003,28635
_mongoc_cursor_op_getmore (mongoc_cursor_t        *cursor,_mongoc_cursor_op_getmore1045,29847
mongoc_cursor_error (mongoc_cursor_t *cursor,mongoc_cursor_error1144,32961
_mongoc_cursor_error (mongoc_cursor_t *cursor,_mongoc_cursor_error1164,33274
mongoc_cursor_next (mongoc_cursor_t  *cursor,mongoc_cursor_next1185,33691
_mongoc_read_from_buffer (mongoc_cursor_t *cursor,_mongoc_read_from_buffer1231,34632
_mongoc_cursor_next (mongoc_cursor_t  *cursor,_mongoc_cursor_next1246,34923
mongoc_cursor_more (mongoc_cursor_t *cursor)mongoc_cursor_more1310,36497
_mongoc_cursor_more (mongoc_cursor_t *cursor)_mongoc_cursor_more1329,36747
mongoc_cursor_get_host (mongoc_cursor_t    *cursor,mongoc_cursor_get_host1344,36994
_mongoc_cursor_get_host (mongoc_cursor_t    *cursor,_mongoc_cursor_get_host1360,37302
mongoc_cursor_clone (const mongoc_cursor_t *cursor)mongoc_cursor_clone1391,38047
_mongoc_cursor_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_clone1408,38321
mongoc_cursor_is_alive (const mongoc_cursor_t *cursor) /* IN */mongoc_cursor_is_alive1469,39758
mongoc_cursor_current (const mongoc_cursor_t *cursor) /* IN */mongoc_cursor_current1482,40074
mongoc_cursor_set_batch_size (mongoc_cursor_t *cursor,mongoc_cursor_set_batch_size1491,40201
mongoc_cursor_get_batch_size (const mongoc_cursor_t *cursor)mongoc_cursor_get_batch_size1499,40390
mongoc_cursor_set_limit (mongoc_cursor_t *cursor,mongoc_cursor_set_limit1507,40517
mongoc_cursor_get_limit (const mongoc_cursor_t *cursor)mongoc_cursor_get_limit1521,40764
mongoc_cursor_get_hint (const mongoc_cursor_t *cursor)mongoc_cursor_get_hint1529,40885
mongoc_cursor_get_id (const mongoc_cursor_t  *cursor)mongoc_cursor_get_id1537,41008
mongoc_cursor_set_max_await_time_ms (mongoc_cursor_t *cursor,mongoc_cursor_set_max_await_time_ms1545,41136
mongoc_cursor_get_max_await_time_ms (const mongoc_cursor_t *cursor)mongoc_cursor_get_max_await_time_ms1556,41393
mongoc_cursor_new_from_command_reply (mongoc_client_t *client,mongoc_cursor_new_from_command_reply1587,42257

include/mongo/mongoc/mongoc-index.c,813
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN23,675
static mongoc_index_opt_t gMongocIndexOptDefault = {gMongocIndexOptDefault26,718
static mongoc_index_opt_geo_t gMongocIndexOptGeoDefault = {gMongocIndexOptGeoDefault44,1496
static mongoc_index_opt_wt_t gMongocIndexOptWTDefault = {gMongocIndexOptWTDefault53,1888
mongoc_index_opt_get_default (void)mongoc_index_opt_get_default60,2180
mongoc_index_opt_geo_get_default (void)mongoc_index_opt_geo_get_default66,2287
mongoc_index_opt_wt_get_default (void)mongoc_index_opt_wt_get_default72,2400
mongoc_index_opt_init (mongoc_index_opt_t *opt)mongoc_index_opt_init78,2486
mongoc_index_opt_geo_init (mongoc_index_opt_geo_t *opt)mongoc_index_opt_geo_init86,2622
void mongoc_index_opt_wt_init (mongoc_index_opt_wt_t *opt)mongoc_index_opt_wt_init93,2764

include/mongo/mongoc/mongoc-write-command.c,3895
#define WRITE_CONCERN_DOC(WRITE_CONCERN_DOC33,901
typedef void (*mongoc_write_op_t) (mongoc_write_command_t       *command,mongoc_write_op_t38,1042
static bson_t gEmptyWriteConcern = BSON_INITIALIZER;gEmptyWriteConcern49,1722
static const char *gCommandNames[] = { "delete", "insert", "update"};gCommandNames52,1837
static const char *gCommandFields[] = { "deletes", "documents", "updates"};gCommandFields53,1907
static const uint32_t gCommandFieldLens[] = { 7, 9, 7 };gCommandFieldLens54,1983
_mongoc_write_command_insert_append (mongoc_write_command_t *command,_mongoc_write_command_insert_append63,2323
_mongoc_write_command_update_append (mongoc_write_command_t *command,_mongoc_write_command_update_append106,3396
_mongoc_write_command_delete_append (mongoc_write_command_t *command,_mongoc_write_command_delete_append140,4389
_mongoc_write_command_init_insert (mongoc_write_command_t    *command,              /* IN */_mongoc_write_command_init_insert171,5141
_mongoc_write_command_init_delete (mongoc_write_command_t   *command,       /* IN */_mongoc_write_command_init_delete199,6107
_mongoc_write_command_init_update (mongoc_write_command_t   *command,       /* IN */_mongoc_write_command_init_update225,6934
_mongoc_write_command_init (bson_t                       *doc,_mongoc_write_command_init254,8016
_mongoc_monitor_legacy_write (mongoc_client_t              *client,_mongoc_monitor_legacy_write287,8984
append_write_err (bson_t       *doc,append_write_err328,10406
append_write_concern_err (bson_t       *doc,append_write_concern_err356,11224
get_upserted_id (const bson_t *update,get_upserted_id383,12098
append_upserted (bson_t             *doc,append_upserted417,13148
_mongoc_monitor_legacy_write_succeeded (mongoc_client_t        *client,_mongoc_monitor_legacy_write_succeeded436,13649
_mongoc_write_command_delete_legacy (mongoc_write_command_t       *command,_mongoc_write_command_delete_legacy571,18453
too_large_error (bson_error_t *error,too_large_error709,22545
_mongoc_write_command_insert_legacy (mongoc_write_command_t       *command,_mongoc_write_command_insert_legacy732,23249
_empty_error (mongoc_write_command_t *command,_empty_error931,29240
_mongoc_write_command_will_overflow (uint32_t len_so_far,_mongoc_write_command_will_overflow949,29726
_mongoc_write_command_update_legacy (mongoc_write_command_t       *command,_mongoc_write_command_update_legacy974,30462
static mongoc_write_op_t gLegacyWriteOps[3] = {gLegacyWriteOps1152,36812
_mongoc_write_command(mongoc_write_command_t       *command,_mongoc_write_command1159,36996
_mongoc_write_command_execute (mongoc_write_command_t       *command,       /* IN */_mongoc_write_command_execute1318,42236
_mongoc_write_command_destroy (mongoc_write_command_t *command)_mongoc_write_command_destroy1370,44145
_mongoc_write_result_init (mongoc_write_result_t *result) /* IN */_mongoc_write_result_init1383,44305
_mongoc_write_result_destroy (mongoc_write_result_t *result)_mongoc_write_result_destroy1400,44585
_mongoc_write_result_append_upsert (mongoc_write_result_t *result,_mongoc_write_result_append_upsert1415,44835
_append_write_concern_err_legacy (mongoc_write_result_t *result,_append_write_concern_err_legacy1440,45562
_append_write_err_legacy (mongoc_write_result_t *result,_append_write_err_legacy1466,46473
_mongoc_write_result_merge_legacy (mongoc_write_result_t  *result,  /* IN */_mongoc_write_result_merge_legacy1503,47671
_mongoc_write_result_merge_arrays (uint32_t               offset,_mongoc_write_result_merge_arrays1611,50821
_mongoc_write_result_merge (mongoc_write_result_t  *result,  /* IN */_mongoc_write_result_merge1663,52385
_set_error_from_response (bson_t *bson_array,_set_error_from_response1795,56732
_mongoc_write_result_complete (mongoc_write_result_t *result,_mongoc_write_result_complete1861,58876

include/mongo/mongoc/mongoc-stream-tls-openssl-bio.c,696
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN38,1061
mongoc_stream_tls_openssl_bio_create (BIO *b)mongoc_stream_tls_openssl_bio_create59,1474
mongoc_stream_tls_openssl_bio_destroy (BIO *b)mongoc_stream_tls_openssl_bio_destroy89,1981
mongoc_stream_tls_openssl_bio_read (BIO  *b,mongoc_stream_tls_openssl_bio_read128,2712
mongoc_stream_tls_openssl_bio_write (BIO        *b,mongoc_stream_tls_openssl_bio_write175,3692
mongoc_stream_tls_openssl_bio_ctrl (BIO  *b,mongoc_stream_tls_openssl_bio_ctrl234,4962
mongoc_stream_tls_openssl_bio_gets (BIO  *b,mongoc_stream_tls_openssl_bio_gets265,5580
mongoc_stream_tls_openssl_bio_puts (BIO        *b,mongoc_stream_tls_openssl_bio_puts291,6108

include/mongo/mongoc/mongoc-read-prefs-private.h,618
#define MONGOC_READ_PREFS_PRIVATE_HMONGOC_READ_PREFS_PRIVATE_H18,632
struct _mongoc_read_prefs_t_mongoc_read_prefs_t32,903
   mongoc_read_mode_t mode;mode34,933
   bson_t             tags;tags35,961
typedef struct _mongoc_apply_read_prefs_result_t {_mongoc_apply_read_prefs_result_t39,994
   bson_t              *query_with_read_prefs;query_with_read_prefs40,1045
   bool                 query_owned;query_owned41,1092
   mongoc_query_flags_t flags;flags42,1129
} mongoc_apply_read_prefs_result_t;mongoc_apply_read_prefs_result_t43,1160
#define READ_PREFS_RESULT_INIT READ_PREFS_RESULT_INIT46,1198

include/mongo/mongoc/mongoc-secure-transport-private.h,83
#define MONGOC_SECURE_TRANSPORT_PRIVATE_HMONGOC_SECURE_TRANSPORT_PRIVATE_H18,638

include/mongo/mongoc/mongoc-gridfs-file-private.h,1479
#define MONGOC_GRIDFS_FILE_PRIVATE_HMONGOC_GRIDFS_FILE_PRIVATE_H18,632
struct _mongoc_gridfs_file_t_mongoc_gridfs_file_t35,961
   mongoc_gridfs_t           *gridfs;gridfs37,992
   bson_t                     bson;bson38,1030
   mongoc_gridfs_file_page_t *page;page39,1066
   uint64_t                   pos;pos40,1102
   int32_t                    n;n41,1137
   bson_error_t               error;error42,1170
   mongoc_cursor_t           *cursor;cursor43,1207
   uint32_t                   cursor_range[2]; /* current chunk, # of chunks */cursor_range44,1245
   bool                       is_dirty;is_dirty45,1325
   bson_value_t               files_id;files_id47,1366
   int64_t                    length;length48,1406
   int32_t                    chunk_size;chunk_size49,1444
   int64_t                    upload_date;upload_date50,1486
   char                      *md5;md552,1530
   char                      *filename;filename53,1565
   char                      *content_type;content_type54,1605
   bson_t                     aliases;aliases55,1649
   bson_t                     metadata;metadata56,1688
   const char                *bson_md5;bson_md557,1728
   const char                *bson_filename;bson_filename58,1768
   const char                *bson_content_type;bson_content_type59,1813
   bson_t                     bson_aliases;bson_aliases60,1862
   bson_t                     bson_metadata;bson_metadata61,1906

include/mongo/mongoc/mongoc-trace.h,280
#define MONGOC_TRACE_PRIVATE_HMONGOC_TRACE_PRIVATE_H19,628
#define TRACE(TRACE33,796
#define ENTRY ENTRY35,971
#define EXIT EXIT36,1102
#define RETURN(RETURN37,1241
#define GOTO(GOTO38,1384
#define DUMP_BYTES(DUMP_BYTES39,1538
#define DUMP_IOVEC(DUMP_IOVEC43,1774

include/mongo/mongoc/mongoc-stream-gridfs.h,61
#define MONGOC_STREAM_GRIDFS_HMONGOC_STREAM_GRIDFS_H18,626

include/mongo/mongoc/mongoc-rand-private.h,59
#define MONGOC_RAND_PRIVATE_HMONGOC_RAND_PRIVATE_H24,756

include/mongo/mongoc/mongoc-server-stream.c,674
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN22,701
#define COALESCE(COALESCE24,744
mongoc_server_stream_new (mongoc_topology_description_type_t topology_type,mongoc_server_stream_new27,816
mongoc_server_stream_cleanup (mongoc_server_stream_t *server_stream)mongoc_server_stream_cleanup45,1383
mongoc_server_stream_max_bson_obj_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_bson_obj_size64,1873
mongoc_server_stream_max_msg_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_msg_size81,2350
mongoc_server_stream_max_write_batch_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_write_batch_size98,2828

include/mongo/mongoc/mongoc-version.h.in,506
#define MONGOC_VERSION_HMONGOC_VERSION_H24,744
#define MONGOC_MAJOR_VERSION MONGOC_MAJOR_VERSION32,878
#define MONGOC_MINOR_VERSION MONGOC_MINOR_VERSION40,1041
#define MONGOC_MICRO_VERSION MONGOC_MICRO_VERSION48,1204
#define MONGOC_PRERELEASE_VERSION MONGOC_PRERELEASE_VERSION56,1383
#define MONGOC_VERSION MONGOC_VERSION64,1498
#define MONGOC_VERSION_S MONGOC_VERSION_S73,1656
#define MONGOC_VERSION_HEX MONGOC_VERSION_HEX82,1824
#define MONGOC_CHECK_VERSION(MONGOC_CHECK_VERSION96,2248

include/mongo/mongoc/mongoc-stream.c,1449
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,1002
# define MONGOC_DEFAULT_TIMEOUT_MSEC MONGOC_DEFAULT_TIMEOUT_MSEC38,1074
mongoc_stream_close (mongoc_stream_t *stream)mongoc_stream_close51,1312
mongoc_stream_failed (mongoc_stream_t *stream)mongoc_stream_failed77,1801
mongoc_stream_destroy (mongoc_stream_t *stream)mongoc_stream_destroy101,2167
mongoc_stream_flush (mongoc_stream_t *stream)mongoc_stream_flush124,2508
mongoc_stream_writev (mongoc_stream_t *stream,mongoc_stream_writev142,2914
mongoc_stream_write (mongoc_stream_t *stream,mongoc_stream_write179,3763
mongoc_stream_readv (mongoc_stream_t *stream,mongoc_stream_readv218,4745
mongoc_stream_read (mongoc_stream_t *stream,mongoc_stream_read259,5784
mongoc_stream_setsockopt (mongoc_stream_t *stream,mongoc_stream_setsockopt285,6295
mongoc_stream_get_base_stream (mongoc_stream_t *stream) /* IN */mongoc_stream_get_base_stream302,6721
mongoc_stream_get_root_stream (mongoc_stream_t *stream)mongoc_stream_get_root_stream315,6948
mongoc_stream_get_tls_stream (mongoc_stream_t *stream) /* IN */mongoc_stream_get_tls_stream328,7164
mongoc_stream_poll (mongoc_stream_poll_t *streams,mongoc_stream_poll339,7392
mongoc_stream_wait (mongoc_stream_t *stream,mongoc_stream_wait408,9085
mongoc_stream_check_closed (mongoc_stream_t *stream)mongoc_stream_check_closed465,10417
_mongoc_stream_writev_full (mongoc_stream_t *stream,_mongoc_stream_writev_full481,10604

include/mongo/mongoc/mongoc-stream-file.h,144
#define MONGOC_STREAM_FILE_HMONGOC_STREAM_FILE_H18,625
typedef struct _mongoc_stream_file_t mongoc_stream_file_t;mongoc_stream_file_t30,825

include/mongo/mongoc/mongoc-crypto-private.h,315
#define MONGOC_CRYPTO_PRIVATE_HMONGOC_CRYPTO_PRIVATE_H28,832
typedef struct _mongoc_crypto_t mongoc_crypto_t;mongoc_crypto_t33,884
struct _mongoc_crypto_t_mongoc_crypto_t35,934
   void (*hmac_sha1) (mongoc_crypto_t     *crypto,hmac_sha137,960
   bool (*sha1)      (mongoc_crypto_t     *crypto,sha143,1261

include/mongo/mongoc/mongoc-matcher.h,124
#define MONGOC_MATCHER_HMONGOC_MATCHER_H18,621
typedef struct _mongoc_matcher_t mongoc_matcher_t;mongoc_matcher_t30,808

include/mongo/mongoc/mongoc-uri.c,5753
struct _mongoc_uri_t_mongoc_uri_t36,996
   char                   *str;str38,1019
   mongoc_host_list_t     *hosts;hosts39,1051
   char                   *username;username40,1085
   char                   *password;password41,1122
   char                   *database;database42,1159
   bson_t                  options;options43,1196
   bson_t                  credentials;credentials44,1232
   mongoc_read_prefs_t    *read_prefs;read_prefs45,1272
   mongoc_read_concern_t  *read_concern;read_concern46,1311
   mongoc_write_concern_t *write_concern;write_concern47,1352
mongoc_uri_do_unescape (char **str)mongoc_uri_do_unescape51,1410
mongoc_uri_lowercase_hostname (const char *src,mongoc_uri_lowercase_hostname62,1560
mongoc_uri_append_host (mongoc_uri_t  *uri,mongoc_uri_append_host81,2120
scan_to_unichar (const char      *str,scan_to_unichar133,3803
mongoc_uri_parse_scheme (const char    *str,mongoc_uri_parse_scheme167,4620
mongoc_uri_parse_userpass (mongoc_uri_t  *uri,mongoc_uri_parse_userpass181,4834
mongoc_uri_parse_port (uint16_t   *port,mongoc_uri_parse_port210,5593
mongoc_uri_parse_host6 (mongoc_uri_t  *uri,mongoc_uri_parse_host6228,5955
mongoc_uri_parse_host (mongoc_uri_t  *uri,mongoc_uri_parse_host257,6561
_mongoc_host_list_from_string (mongoc_host_list_t *host_list,_mongoc_host_list_from_string294,7326
mongoc_uri_parse_hosts (mongoc_uri_t  *uri,mongoc_uri_parse_hosts328,8035
mongoc_uri_parse_database (mongoc_uri_t  *uri,mongoc_uri_parse_database399,10080
mongoc_uri_parse_auth_mechanism_properties (mongoc_uri_t *uri,mongoc_uri_parse_auth_mechanism_properties423,10599
mongoc_uri_parse_tags (mongoc_uri_t *uri, /* IN */mongoc_uri_parse_tags454,11464
mongoc_uri_bson_append_or_replace_key (bson_t *options, const char *option, const char *value)mongoc_uri_bson_append_or_replace_key506,12807
mongoc_uri_option_is_int32 (const char *key)mongoc_uri_option_is_int32539,13595
mongoc_uri_option_is_bool (const char *key)mongoc_uri_option_is_bool556,14215
mongoc_uri_option_is_utf8 (const char *key)mongoc_uri_option_is_utf8567,14554
mongoc_uri_parse_option (mongoc_uri_t *uri,mongoc_uri_parse_option587,15036
mongoc_uri_parse_options (mongoc_uri_t *uri,mongoc_uri_parse_options652,17066
mongoc_uri_finalize_auth (mongoc_uri_t *uri) {mongoc_uri_finalize_auth678,17594
mongoc_uri_parse (mongoc_uri_t *uri,mongoc_uri_parse704,18339
mongoc_uri_get_hosts (const mongoc_uri_t *uri)mongoc_uri_get_hosts744,19098
mongoc_uri_get_replica_set (const mongoc_uri_t *uri)mongoc_uri_get_replica_set752,19208
mongoc_uri_get_credentials (const mongoc_uri_t *uri)mongoc_uri_get_credentials768,19500
mongoc_uri_get_auth_mechanism (const mongoc_uri_t *uri)mongoc_uri_get_auth_mechanism776,19623
mongoc_uri_get_mechanism_properties (const mongoc_uri_t *uri, bson_t *properties)mongoc_uri_get_mechanism_properties792,19918
_mongoc_uri_assign_read_prefs_mode (mongoc_uri_t *uri) /* IN */_mongoc_uri_assign_read_prefs_mode816,20405
_mongoc_uri_build_write_concern (mongoc_uri_t *uri) /* IN */_mongoc_uri_build_write_concern855,21947
mongoc_uri_new (const char *uri_string)mongoc_uri_new923,24216
mongoc_uri_new_for_host_port (const char *hostname,mongoc_uri_new_for_host_port967,25179
mongoc_uri_get_username (const mongoc_uri_t *uri)mongoc_uri_get_username985,25517
mongoc_uri_set_username (mongoc_uri_t *uri, const char *username)mongoc_uri_set_username993,25625
mongoc_uri_get_password (const mongoc_uri_t *uri)mongoc_uri_get_password1015,25983
mongoc_uri_set_password (mongoc_uri_t *uri, const char *password)mongoc_uri_set_password1023,26091
mongoc_uri_get_database (const mongoc_uri_t *uri)mongoc_uri_get_database1045,26449
mongoc_uri_set_database (mongoc_uri_t *uri, const char *database)mongoc_uri_set_database1052,26556
mongoc_uri_get_auth_source (const mongoc_uri_t *uri)mongoc_uri_get_auth_source1074,26913
mongoc_uri_set_auth_source (mongoc_uri_t *uri, const char *value)mongoc_uri_set_auth_source1089,27196
mongoc_uri_get_options (const mongoc_uri_t *uri)mongoc_uri_get_options1107,27524
mongoc_uri_destroy (mongoc_uri_t *uri)mongoc_uri_destroy1115,27631
mongoc_uri_copy (const mongoc_uri_t *uri)mongoc_uri_copy1138,28207
mongoc_uri_get_string (const mongoc_uri_t *uri)mongoc_uri_get_string1168,29055
mongoc_uri_get_read_prefs (const mongoc_uri_t *uri)mongoc_uri_get_read_prefs1176,29166
mongoc_uri_unescape (const char *escaped_string)mongoc_uri_unescape1204,29833
mongoc_uri_get_read_prefs_t (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_read_prefs_t1260,31133
mongoc_uri_set_read_prefs_t (mongoc_uri_t              *uri,mongoc_uri_set_read_prefs_t1269,31257
mongoc_uri_get_read_concern (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_read_concern1281,31565
mongoc_uri_set_read_concern (mongoc_uri_t                *uri,mongoc_uri_set_read_concern1290,31691
mongoc_uri_get_write_concern (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_write_concern1302,32003
mongoc_uri_set_write_concern (mongoc_uri_t                 *uri,mongoc_uri_set_write_concern1311,32131
mongoc_uri_get_ssl (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_ssl1323,32425
mongoc_uri_get_option_as_int32 (const mongoc_uri_t *uri,mongoc_uri_get_option_as_int321356,33402
mongoc_uri_set_option_as_int32 (mongoc_uri_t *uri,mongoc_uri_set_option_as_int321402,34758
mongoc_uri_get_option_as_bool (const mongoc_uri_t *uri,mongoc_uri_get_option_as_bool1447,35908
mongoc_uri_set_option_as_bool (mongoc_uri_t *uri,mongoc_uri_set_option_as_bool1489,37180
mongoc_uri_get_option_as_utf8 (const mongoc_uri_t *uri,mongoc_uri_get_option_as_utf81534,38330
mongoc_uri_set_option_as_utf8 (mongoc_uri_t *uri,mongoc_uri_set_option_as_utf81580,39795

include/mongo/mongoc/mongoc-stream-private.h,348
#define MONGOC_STREAM_PRIVATE_HMONGOC_STREAM_PRIVATE_H18,633
#define MONGOC_STREAM_SOCKET MONGOC_STREAM_SOCKET31,868
#define MONGOC_STREAM_FILE MONGOC_STREAM_FILE32,901
#define MONGOC_STREAM_BUFFERED MONGOC_STREAM_BUFFERED33,934
#define MONGOC_STREAM_GRIDFS MONGOC_STREAM_GRIDFS34,967
#define MONGOC_STREAM_TLS MONGOC_STREAM_TLS35,1000

include/mongo/mongoc/op-header.def,0

include/mongo/mongoc/mongoc-server-stream-private.h,425
#define MONGOC_SERVER_STREAM_HMONGOC_SERVER_STREAM_H18,627
typedef struct _mongoc_server_stream_t_mongoc_server_stream_t34,976
   mongoc_topology_description_type_t  topology_type;topology_type36,1017
   mongoc_server_description_t        *sd;            /* owned */sd37,1071
   mongoc_stream_t                    *stream;        /* borrowed */stream38,1137
} mongoc_server_stream_t;mongoc_server_stream_t39,1206

include/mongo/mongoc/mongoc-collection.c,4515
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN40,1230
#define _BSON_APPEND_WRITE_CONCERN(_BSON_APPEND_WRITE_CONCERN43,1271
validate_name (const char *str)validate_name61,2082
_mongoc_collection_cursor_new (mongoc_collection_t *collection,_mongoc_collection_cursor_new91,2631
_mongoc_collection_write_command_execute (mongoc_write_command_t       *command,_mongoc_collection_write_command_execute108,3411
_mongoc_collection_new (mongoc_client_t              *client,_mongoc_collection_new161,5200
mongoc_collection_destroy (mongoc_collection_t *collection) /* IN */mongoc_collection_destroy221,6935
mongoc_collection_copy (mongoc_collection_t *collection) /* IN */mongoc_collection_copy270,8007
mongoc_collection_aggregate (mongoc_collection_t       *collection, /* IN */mongoc_collection_aggregate328,10116
mongoc_collection_find (mongoc_collection_t       *collection, /* IN */mongoc_collection_find499,15903
mongoc_collection_command (mongoc_collection_t       *collection,mongoc_collection_command553,17757
mongoc_collection_command_simple (mongoc_collection_t       *collection,mongoc_collection_command_simple585,18857
mongoc_collection_count (mongoc_collection_t       *collection,  /* IN */mongoc_collection_count625,20247
mongoc_collection_count_with_opts (mongoc_collection_t       *collection,  /* IN */mongoc_collection_count_with_opts646,20939
mongoc_collection_drop (mongoc_collection_t *collection, /* IN */mongoc_collection_drop745,24127
mongoc_collection_drop_index (mongoc_collection_t *collection, /* IN */mongoc_collection_drop_index780,24992
mongoc_collection_keys_to_index_string (const bson_t *keys)mongoc_collection_keys_to_index_string802,25622
_mongoc_collection_create_index_legacy (mongoc_collection_t      *collection,_mongoc_collection_create_index_legacy858,27042
mongoc_collection_create_index (mongoc_collection_t      *collection,mongoc_collection_create_index963,30166
mongoc_collection_ensure_index (mongoc_collection_t      *collection,mongoc_collection_ensure_index1111,35338
_mongoc_collection_find_indexes_legacy (mongoc_collection_t *collection,_mongoc_collection_find_indexes_legacy1120,35696
mongoc_collection_find_indexes (mongoc_collection_t *collection,mongoc_collection_find_indexes1152,36662
mongoc_collection_insert_bulk (mongoc_collection_t           *collection,mongoc_collection_insert_bulk1232,39414
mongoc_collection_insert (mongoc_collection_t          *collection,mongoc_collection_insert1324,42553
mongoc_collection_update (mongoc_collection_t          *collection,mongoc_collection_update1404,45188
mongoc_collection_save (mongoc_collection_t          *collection,mongoc_collection_save1490,48098
mongoc_collection_remove (mongoc_collection_t          *collection,mongoc_collection_remove1564,50479
mongoc_collection_delete (mongoc_collection_t          *collection,mongoc_collection_delete1607,51781
mongoc_collection_get_read_prefs (const mongoc_collection_t *collection)mongoc_collection_get_read_prefs1635,52686
mongoc_collection_set_read_prefs (mongoc_collection_t       *collection,mongoc_collection_set_read_prefs1659,53180
mongoc_collection_get_read_concern (const mongoc_collection_t *collection)mongoc_collection_get_read_concern1692,54022
mongoc_collection_set_read_concern (mongoc_collection_t          *collection,mongoc_collection_set_read_concern1717,54519
mongoc_collection_get_write_concern (const mongoc_collection_t *collection)mongoc_collection_get_write_concern1750,55394
mongoc_collection_set_write_concern (mongoc_collection_t          *collection,mongoc_collection_set_write_concern1775,55895
mongoc_collection_get_name (mongoc_collection_t *collection)mongoc_collection_get_name1808,56740
mongoc_collection_get_last_error (const mongoc_collection_t *collection) /* IN */mongoc_collection_get_last_error1837,57536
mongoc_collection_validate (mongoc_collection_t *collection, /* IN */mongoc_collection_validate1874,58420
mongoc_collection_rename (mongoc_collection_t *collection,mongoc_collection_rename1934,60044
mongoc_collection_stats (mongoc_collection_t *collection,mongoc_collection_stats2013,62355
mongoc_collection_create_bulk_operation (mongoc_collection_create_bulk_operation2049,63271
mongoc_collection_find_and_modify_with_opts (mongoc_collection_t                 *collection,mongoc_collection_find_and_modify_with_opts2093,64659
mongoc_collection_find_and_modify (mongoc_collection_t *collection,mongoc_collection_find_and_modify2247,69755

include/mongo/mongoc/mongoc-gridfs-private.h,248
#define MONGOC_GRIDFS_PRIVATE_HMONGOC_GRIDFS_PRIVATE_H18,627
struct _mongoc_gridfs_t_mongoc_gridfs_t34,920
   mongoc_client_t     *client;client36,946
   mongoc_collection_t *files;files37,978
   mongoc_collection_t *chunks;chunks38,1009

include/mongo/mongoc/mongoc-errno-private.h,122
#define MONGOC_ERRNO_PRIVATE_HMONGOC_ERRNO_PRIVATE_H18,627
# define MONGOC_ERRNO_IS_AGAIN(MONGOC_ERRNO_IS_AGAIN36,932

include/mongo/mongoc/mongoc-init.h,43
#define MONGOC_INIT_HMONGOC_INIT_H18,618

include/mongo/mongoc/mongoc-client-pool.h,144
#define MONGOC_CLIENT_POOL_HMONGOC_CLIENT_POOL_H18,625
typedef struct _mongoc_client_pool_t mongoc_client_pool_t;mongoc_client_pool_t38,976

include/mongo/mongoc/mongoc-version-functions.c,317
mongoc_get_major_version (void)mongoc_get_major_version27,779
mongoc_get_minor_version (void)mongoc_get_minor_version39,964
mongoc_get_micro_version (void)mongoc_get_micro_version50,1148
mongoc_get_version (void)mongoc_get_version61,1336
mongoc_check_version (int required_major,mongoc_check_version73,1520

include/mongo/mongoc/mongoc-client.c,4873
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN49,1365
mongoc_client_connect_tcp (const mongoc_uri_t       *uri,mongoc_client_connect_tcp90,2774
mongoc_client_connect_unix (const mongoc_uri_t       *uri,mongoc_client_connect_unix206,6042
mongoc_client_default_stream_initiator (const mongoc_uri_t       *uri,mongoc_client_default_stream_initiator282,8234
_mongoc_client_create_stream (mongoc_client_t          *client,_mongoc_client_create_stream394,11815
_mongoc_client_recv (mongoc_client_t        *client,_mongoc_client_recv422,12549
_bson_to_error (const bson_t *b,_bson_to_error460,13584
_mongoc_client_recv_gle (mongoc_client_t        *client,_mongoc_client_recv_gle531,15580
mongoc_client_new(const char *uri_string)mongoc_client_new619,17865
mongoc_client_set_ssl_opts (mongoc_client_t        *client,mongoc_client_set_ssl_opts661,18632
mongoc_client_new_from_uri (const mongoc_uri_t *uri)mongoc_client_new_from_uri696,19461
_mongoc_client_new_from_uri (const mongoc_uri_t *uri, mongoc_topology_t *topology)_mongoc_client_new_from_uri723,20067
mongoc_client_destroy (mongoc_client_t *client)mongoc_client_destroy787,21868
mongoc_client_get_uri (const mongoc_client_t *client)mongoc_client_get_uri824,22803
mongoc_client_get_database (mongoc_client_t *client,mongoc_client_get_database854,23514
mongoc_client_get_default_database (mongoc_client_t *client)mongoc_client_get_default_database886,24382
mongoc_client_get_collection (mongoc_client_t *client,mongoc_client_get_collection927,25411
mongoc_client_get_gridfs (mongoc_client_t *client,mongoc_client_get_gridfs964,26512
mongoc_client_get_write_concern (const mongoc_client_t *client)mongoc_client_get_write_concern997,27285
mongoc_client_set_write_concern (mongoc_client_t              *client,mongoc_client_set_write_concern1022,27746
mongoc_client_get_read_concern (const mongoc_client_t *client)mongoc_client_get_read_concern1055,28635
mongoc_client_set_read_concern (mongoc_client_t             *client,mongoc_client_set_read_concern1080,29092
mongoc_client_get_read_prefs (const mongoc_client_t *client)mongoc_client_get_read_prefs1113,29911
mongoc_client_set_read_prefs (mongoc_client_t           *client,mongoc_client_set_read_prefs1138,30365
mongoc_client_command (mongoc_client_t           *client,mongoc_client_command1154,30831
_mongoc_client_command_with_stream (mongoc_client_t           *client,_mongoc_client_command_with_stream1201,32430
mongoc_client_command_simple (mongoc_client_t           *client,mongoc_client_command_simple1228,33389
mongoc_client_command_simple_with_server_id (mongoc_client_t           *client,mongoc_client_command_simple_with_server_id1274,34813
_mongoc_client_prepare_killcursors_command (int64_t     cursor_id,_mongoc_client_prepare_killcursors_command1312,36069
_mongoc_client_kill_cursor (mongoc_client_t *client,_mongoc_client_kill_cursor1326,36518
_mongoc_client_monitor_op_killcursors (mongoc_cluster_t       *cluster,_mongoc_client_monitor_op_killcursors1369,37938
_mongoc_client_monitor_op_killcursors_succeeded (_mongoc_client_monitor_op_killcursors_succeeded1409,39271
_mongoc_client_monitor_op_killcursors_failed (_mongoc_client_monitor_op_killcursors_failed1454,40685
_mongoc_client_op_killcursors (mongoc_cluster_t       *cluster,_mongoc_client_op_killcursors1491,41697
_mongoc_client_killcursors_command (mongoc_cluster_t       *cluster,_mongoc_client_killcursors_command1540,43235
mongoc_client_kill_cursor (mongoc_client_t *client,mongoc_client_kill_cursor1592,44899
mongoc_client_get_database_names (mongoc_client_t *client,mongoc_client_get_database_names1633,46047
mongoc_client_find_databases (mongoc_client_t *client,mongoc_client_find_databases1669,46952
mongoc_client_get_max_message_size (mongoc_client_t *client) /* IN */mongoc_client_get_max_message_size1691,47461
mongoc_client_get_max_bson_size (mongoc_client_t *client) /* IN */mongoc_client_get_max_bson_size1700,47633
mongoc_client_get_server_status (mongoc_client_t     *client,     /* IN */mongoc_client_get_server_status1709,47804
mongoc_client_set_stream_initiator (mongoc_client_t           *client,mongoc_client_set_stream_initiator1729,48415
_mongoc_client_set_apm_callbacks_private (mongoc_client_t        *client,_mongoc_client_set_apm_callbacks_private1753,49126
mongoc_client_set_apm_callbacks (mongoc_client_t        *client,mongoc_client_set_apm_callbacks1776,49749
mongoc_client_get_server_description (mongoc_client_t *client,mongoc_client_get_server_description1791,50265
mongoc_client_get_server_descriptions (mongoc_client_get_server_descriptions1800,50544
mongoc_server_descriptions_destroy_all (mongoc_server_description_t **sds,mongoc_server_descriptions_destroy_all1840,51565
mongoc_client_select_server (mongoc_client_t     *client,mongoc_client_select_server1854,51868

include/mongo/mongoc/mongoc-topology-description.c,6343
_mongoc_topology_server_dtor (void *server_,_mongoc_topology_server_dtor26,825
mongoc_topology_description_init (mongoc_topology_description_t     *description,mongoc_topology_description_init48,1326
mongoc_topology_description_destroy (mongoc_topology_description_t *description)mongoc_topology_description_destroy87,2413
_mongoc_topology_description_has_primary_cb (void *item,_mongoc_topology_description_has_primary_cb108,2831
_mongoc_topology_description_has_primary (mongoc_topology_description_t *description)_mongoc_topology_description_has_primary138,3744
_mongoc_topology_description_later_election (mongoc_topology_description_t *td,_mongoc_topology_description_later_election165,4522
_mongoc_topology_description_set_max_set_version (_mongoc_topology_description_set_max_set_version185,5295
_mongoc_topology_description_set_max_election_id (_mongoc_topology_description_set_max_election_id203,5829
_mongoc_topology_description_server_is_candidate (_mongoc_topology_description_server_is_candidate211,6032
typedef struct _mongoc_suitable_data_t_mongoc_suitable_data_t266,7448
   mongoc_read_mode_t                 read_mode;read_mode268,7489
   mongoc_topology_description_type_t topology_type;topology_type269,7538
   mongoc_server_description_t       *primary; /* OUT */primary270,7591
   mongoc_server_description_t      **candidates; /* OUT */candidates271,7648
   size_t                             candidates_len; /* OUT */candidates_len272,7708
   bool                               has_secondary; /* OUT */has_secondary273,7772
} mongoc_suitable_data_t;mongoc_suitable_data_t274,7835
_mongoc_replica_set_read_suitable_cb (void *item,_mongoc_replica_set_read_suitable_cb277,7874
_mongoc_find_suitable_mongos_cb (void *item,_mongoc_find_suitable_mongos_cb309,8957
mongoc_topology_description_suitable_servers (mongoc_topology_description_suitable_servers344,10057
mongoc_topology_description_select (mongoc_topology_description_t *topology,mongoc_topology_description_select485,14933
mongoc_topology_description_server_by_id (mongoc_topology_description_t *description,mongoc_topology_description_server_by_id549,17070
_mongoc_topology_description_remove_server (mongoc_topology_description_t *description,_mongoc_topology_description_remove_server584,18086
typedef struct _mongoc_address_and_id_t {_mongoc_address_and_id_t593,18370
   const char *address; /* IN */address594,18412
   bool found; /* OUT */found595,18445
   uint32_t id; /* OUT */id596,18470
} mongoc_address_and_id_t;mongoc_address_and_id_t597,18496
_mongoc_topology_description_has_server_cb (void *item,_mongoc_topology_description_has_server_cb601,18583
_mongoc_topology_description_has_set_version (mongoc_topology_description_t *td)_mongoc_topology_description_has_set_version631,19426
_mongoc_topology_description_has_server (mongoc_topology_description_t *description,_mongoc_topology_description_has_server653,20007
typedef struct _mongoc_address_and_type_t_mongoc_address_and_type_t673,20580
   const char *address;address675,20624
   mongoc_server_description_type_t type;type676,20648
} mongoc_address_and_type_t;mongoc_address_and_type_t677,20690
_mongoc_label_unknown_member_cb (void *item,_mongoc_label_unknown_member_cb680,20732
_mongoc_topology_description_label_unknown_member (mongoc_topology_description_t *description,_mongoc_topology_description_label_unknown_member711,21622
_mongoc_topology_description_set_state (mongoc_topology_description_t *description,_mongoc_topology_description_set_state743,22570
_update_rs_type (mongoc_topology_description_t *topology)_update_rs_type751,22782
_mongoc_topology_description_check_if_has_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_check_if_has_primary780,23562
mongoc_topology_description_invalidate_server (mongoc_topology_description_t *topology,mongoc_topology_description_invalidate_server802,24357
mongoc_topology_description_add_server (mongoc_topology_description_t *topology,mongoc_topology_description_add_server839,25509
_mongoc_topology_description_add_new_servers (_mongoc_topology_description_add_new_servers869,26373
typedef struct _mongoc_primary_and_topology_t {_mongoc_primary_and_topology_t890,26934
   mongoc_topology_description_t *topology;topology891,26982
   mongoc_server_description_t *primary;primary892,27026
} mongoc_primary_and_topology_t;mongoc_primary_and_topology_t893,27067
_mongoc_topology_description_invalidate_primaries_cb (void *item,_mongoc_topology_description_invalidate_primaries_cb897,27144
_mongoc_topology_description_remove_unreported_servers (_mongoc_topology_description_remove_unreported_servers915,27863
_mongoc_topology_description_matches_me (mongoc_server_description_t *server)_mongoc_topology_description_matches_me972,29847
_mongoc_topology_description_update_rs_from_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_update_rs_from_primary1014,31365
_mongoc_topology_description_update_rs_without_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_update_rs_without_primary1099,34722
_mongoc_topology_description_update_rs_with_primary_from_member (mongoc_topology_description_t *_mongoc_topology_description_update_rs_with_primary_from_member1153,36543
_mongoc_topology_description_set_topology_type_to_sharded (mongoc_topology_description_t *topolo_mongoc_topology_description_set_topology_type_to_sharded1200,38175
_mongoc_topology_description_transition_unknown_to_rs_no_primary (mongoc_topology_description_t _mongoc_topology_description_transition_unknown_to_rs_no_primary1224,38962
_mongoc_topology_description_remove_and_check_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_remove_and_check_primary1247,39761
_mongoc_topology_description_update_unknown_with_standalone (mongoc_topology_description_t *topo_mongoc_topology_description_update_unknown_with_standalone1273,40684
typedef void (*transition_t)(mongoc_topology_description_t *topology,transition_t1309,41989
gSDAMTransitionTable[MONGOC_SERVER_DESCRIPTION_TYPES][MONGOC_TOPOLOGY_DESCRIPTION_TYPES] = {gSDAMTransitionTable1313,42142
mongoc_topology_description_handle_ismaster (mongoc_topology_description_handle_ismaster1385,44747

include/mongo/mongoc/mongoc-counters-private.h,856
#define MONGOC_COUNTERS_PRIVATE_HMONGOC_COUNTERS_PRIVATE_H18,630
_mongoc_get_cpu_count (void)_mongoc_get_cpu_count47,1203
#define _mongoc_counter_add(_mongoc_counter_add84,1973
 _mongoc_sched_getcpu (void)_mongoc_sched_getcpu90,2110
# define _mongoc_sched_getcpu _mongoc_sched_getcpu97,2308
# define _mongoc_sched_getcpu(_mongoc_sched_getcpu99,2357
# define SLOTS_PER_CACHELINE SLOTS_PER_CACHELINE104,2430
{__anona33bdada0108109,2485
   int64_t slots [SLOTS_PER_CACHELINE];slots110,2487
} mongoc_counter_slots_t;mongoc_counter_slots_t111,2527
{__anona33bdada0208115,2570
   mongoc_counter_slots_t *cpus;cpus116,2572
} mongoc_counter_t;mongoc_counter_t117,2605
#define COUNTER(COUNTER120,2627
{__anona33bdada0303127,2788
#define COUNTER(COUNTER128,2790
   LAST_COUNTERLAST_COUNTER132,2911
#define COUNTER(COUNTER136,2932

include/mongo/mongoc/mongoc-stream-tls-private.h,842
#define MONGOC_STREAM_TLS_PRIVATE_HMONGOC_STREAM_TLS_PRIVATE_H18,632
struct _mongoc_stream_tls_t_mongoc_stream_tls_t38,1010
   mongoc_stream_t  parent;      /* The TLS stream wrapper */parent40,1040
   mongoc_stream_t *base_stream; /* The underlying actual stream */base_stream41,1102
   void            *ctx;         /* TLS lib specific configuration or wrappers */ctx42,1170
   int32_t          timeout_msec;timeout_msec43,1252
   bool             weak_cert_validation;weak_cert_validation44,1286
   bool (*do_handshake) (mongoc_stream_t *stream, int32_t     timeout_msec);do_handshake45,1328
   bool (*check_cert)   (mongoc_stream_t *stream, const char *host);check_cert46,1405
   bool (*should_retry) (mongoc_stream_t *stream);should_retry47,1474
   bool (*should_read)  (mongoc_stream_t *stream);should_read48,1525

include/mongo/mongoc/mongoc-gridfs-file.h,731
#define MONGOC_GRIDFS_FILE_HMONGOC_GRIDFS_FILE_H18,624
#define MONGOC_GRIDFS_FILE_STR_HEADER(MONGOC_GRIDFS_FILE_STR_HEADER31,841
#define MONGOC_GRIDFS_FILE_BSON_HEADER(MONGOC_GRIDFS_FILE_BSON_HEADER39,1116
typedef struct _mongoc_gridfs_file_t mongoc_gridfs_file_t;mongoc_gridfs_file_t47,1388
typedef struct _mongoc_gridfs_file_opt_t mongoc_gridfs_file_opt_t;mongoc_gridfs_file_opt_t48,1447
struct _mongoc_gridfs_file_opt_t_mongoc_gridfs_file_opt_t51,1516
   const char   *md5;md553,1551
   const char   *filename;filename54,1573
   const char   *content_type;content_type55,1600
   const bson_t *aliases;aliases56,1631
   const bson_t *metadata;metadata57,1657
   uint32_t      chunk_size;chunk_size58,1684

include/mongo/mongoc/mongoc-b64.c,981
#define Assert(Assert45,2251
static const char Base64[] =Base6447,2295
static const char Pad64 = '=';Pad6449,2395
mongoc_b64_ntop (uint8_t const *src,mongoc_b64_ntop114,5597
static int mongoc_b64rmap_initialized = 0;mongoc_b64rmap_initialized252,10911
static uint8_t mongoc_b64rmap[256];mongoc_b64rmap253,10954
static const uint8_t mongoc_b64rmap_special = 0xf0;mongoc_b64rmap_special255,10991
static const uint8_t mongoc_b64rmap_end = 0xfd;mongoc_b64rmap_end256,11043
static const uint8_t mongoc_b64rmap_space = 0xfe;mongoc_b64rmap_space257,11091
static const uint8_t mongoc_b64rmap_invalid = 0xff;mongoc_b64rmap_invalid258,11141
mongoc_b64_initialize_rmap (void)mongoc_b64_initialize_rmap265,11297
mongoc_b64_pton_do(char const *src, uint8_t *target, size_t targsize)mongoc_b64_pton_do294,11933
mongoc_b64_pton_len(char const *src)mongoc_b64_pton_len413,14540
mongoc_b64_pton(char const *src, uint8_t *target, size_t targsize)mongoc_b64_pton508,16404

include/mongo/mongoc/mongoc-matcher-op-private.h,3187
#define MONGOC_MATCHER_OP_PRIVATE_HMONGOC_MATCHER_OP_PRIVATE_H18,632
typedef union  _mongoc_matcher_op_t         mongoc_matcher_op_t;mongoc_matcher_op_t30,836
typedef struct _mongoc_matcher_op_base_t    mongoc_matcher_op_base_t;mongoc_matcher_op_base_t31,901
typedef struct _mongoc_matcher_op_logical_t mongoc_matcher_op_logical_t;mongoc_matcher_op_logical_t32,971
typedef struct _mongoc_matcher_op_compare_t mongoc_matcher_op_compare_t;mongoc_matcher_op_compare_t33,1044
typedef struct _mongoc_matcher_op_exists_t  mongoc_matcher_op_exists_t;mongoc_matcher_op_exists_t34,1117
typedef struct _mongoc_matcher_op_type_t    mongoc_matcher_op_type_t;mongoc_matcher_op_type_t35,1189
typedef struct _mongoc_matcher_op_not_t     mongoc_matcher_op_not_t;mongoc_matcher_op_not_t36,1259
{__anon9de5e397010340,1343
   MONGOC_MATCHER_OPCODE_EQ,MONGOC_MATCHER_OPCODE_EQ41,1345
   MONGOC_MATCHER_OPCODE_GT,MONGOC_MATCHER_OPCODE_GT42,1374
   MONGOC_MATCHER_OPCODE_GTE,MONGOC_MATCHER_OPCODE_GTE43,1403
   MONGOC_MATCHER_OPCODE_IN,MONGOC_MATCHER_OPCODE_IN44,1433
   MONGOC_MATCHER_OPCODE_LT,MONGOC_MATCHER_OPCODE_LT45,1462
   MONGOC_MATCHER_OPCODE_LTE,MONGOC_MATCHER_OPCODE_LTE46,1491
   MONGOC_MATCHER_OPCODE_NE,MONGOC_MATCHER_OPCODE_NE47,1521
   MONGOC_MATCHER_OPCODE_NIN,MONGOC_MATCHER_OPCODE_NIN48,1550
   MONGOC_MATCHER_OPCODE_OR,MONGOC_MATCHER_OPCODE_OR49,1580
   MONGOC_MATCHER_OPCODE_AND,MONGOC_MATCHER_OPCODE_AND50,1609
   MONGOC_MATCHER_OPCODE_NOT,MONGOC_MATCHER_OPCODE_NOT51,1639
   MONGOC_MATCHER_OPCODE_NOR,MONGOC_MATCHER_OPCODE_NOR52,1669
   MONGOC_MATCHER_OPCODE_EXISTS,MONGOC_MATCHER_OPCODE_EXISTS53,1699
   MONGOC_MATCHER_OPCODE_TYPE,MONGOC_MATCHER_OPCODE_TYPE54,1732
} mongoc_matcher_opcode_t;mongoc_matcher_opcode_t55,1763
struct _mongoc_matcher_op_base_t_mongoc_matcher_op_base_t58,1792
   mongoc_matcher_opcode_t opcode;opcode60,1827
struct _mongoc_matcher_op_logical_t_mongoc_matcher_op_logical_t64,1867
   mongoc_matcher_op_base_t base;base66,1905
   mongoc_matcher_op_t *left;left67,1939
   mongoc_matcher_op_t *right;right68,1969
struct _mongoc_matcher_op_compare_t_mongoc_matcher_op_compare_t72,2005
   mongoc_matcher_op_base_t base;base74,2043
   char *path;path75,2077
   bson_iter_t iter;iter76,2092
struct _mongoc_matcher_op_exists_t_mongoc_matcher_op_exists_t80,2118
   mongoc_matcher_op_base_t base;base82,2155
   char *path;path83,2189
   bool exists;exists84,2204
struct _mongoc_matcher_op_type_t_mongoc_matcher_op_type_t88,2225
   mongoc_matcher_op_base_t base;base90,2260
   bson_type_t type;type91,2294
   char *path;path92,2315
struct _mongoc_matcher_op_not_t_mongoc_matcher_op_not_t96,2335
   mongoc_matcher_op_base_t base;base98,2369
   mongoc_matcher_op_t *child;child99,2403
   char *path;path100,2434
union _mongoc_matcher_op_t_mongoc_matcher_op_t104,2454
   mongoc_matcher_op_base_t base;base106,2483
   mongoc_matcher_op_logical_t logical;logical107,2517
   mongoc_matcher_op_compare_t compare;compare108,2557
   mongoc_matcher_op_exists_t exists;exists109,2597
   mongoc_matcher_op_type_t type;type110,2635
   mongoc_matcher_op_not_t not_;not_111,2669

include/mongo/mongoc/mongoc-topology-description-private.h,1587
#define MONGOC_TOPOLOGY_DESCRIPTION_PRIVATE_HMONGOC_TOPOLOGY_DESCRIPTION_PRIVATE_H18,642
   {__anon88e801b5010326,809
      MONGOC_TOPOLOGY_UNKNOWN,MONGOC_TOPOLOGY_UNKNOWN27,814
      MONGOC_TOPOLOGY_SHARDED,MONGOC_TOPOLOGY_SHARDED28,845
      MONGOC_TOPOLOGY_RS_NO_PRIMARY,MONGOC_TOPOLOGY_RS_NO_PRIMARY29,876
      MONGOC_TOPOLOGY_RS_WITH_PRIMARY,MONGOC_TOPOLOGY_RS_WITH_PRIMARY30,913
      MONGOC_TOPOLOGY_SINGLE,MONGOC_TOPOLOGY_SINGLE31,952
      MONGOC_TOPOLOGY_DESCRIPTION_TYPESMONGOC_TOPOLOGY_DESCRIPTION_TYPES32,982
   } mongoc_topology_description_type_t;mongoc_topology_description_type_t33,1022
typedef struct _mongoc_topology_description_t_mongoc_topology_description_t35,1064
   mongoc_topology_description_type_t type;type37,1112
   mongoc_set_t                      *servers;servers38,1156
   char                              *set_name;set_name39,1203
   int64_t                            max_set_version;max_set_version40,1251
   bson_oid_t                         max_election_id;max_election_id41,1306
   bool                               compatible;compatible42,1361
   char                              *compatibility_error;compatibility_error43,1411
   uint32_t                           max_server_id;max_server_id44,1470
   bool                               stale;stale45,1523
} mongoc_topology_description_t;mongoc_topology_description_t46,1568
   {__anon88e801b5020349,1615
      MONGOC_SS_READ,MONGOC_SS_READ50,1620
      MONGOC_SS_WRITEMONGOC_SS_WRITE51,1642
   } mongoc_ss_optype_t;mongoc_ss_optype_t52,1664

include/mongo/mongoc/mongoc-gridfs-file-list-private.h,276
#define MONGOC_GRIDFS_FILE_LIST_PRIVATE_HMONGOC_GRIDFS_FILE_LIST_PRIVATE_H18,637
struct _mongoc_gridfs_file_list_t_mongoc_gridfs_file_list_t34,934
   mongoc_gridfs_t *gridfs;gridfs36,970
   mongoc_cursor_t *cursor;cursor37,998
   bson_error_t     error;error38,1026

include/mongo/mongoc/mongoc-queue-private.h,561
#define MONGOC_QUEUE_PRIVATE_HMONGOC_QUEUE_PRIVATE_H18,627
#define MONGOC_QUEUE_INITIALIZER MONGOC_QUEUE_INITIALIZER32,860
typedef struct _mongoc_queue_t      mongoc_queue_t;mongoc_queue_t35,907
typedef struct _mongoc_queue_item_t mongoc_queue_item_t;mongoc_queue_item_t36,959
struct _mongoc_queue_t_mongoc_queue_t39,1018
   mongoc_queue_item_t *head;head41,1043
   mongoc_queue_item_t *tail;tail42,1073
struct _mongoc_queue_item_t_mongoc_queue_item_t46,1108
   mongoc_queue_item_t *next;next48,1138
   void                *data;data49,1168

include/mongo/mongoc/mongoc-stream-tls.h,141
#define MONGOC_STREAM_TLS_HMONGOC_STREAM_TLS_H18,624
typedef struct   _mongoc_stream_tls_t mongoc_stream_tls_t;mongoc_stream_tls_t33,904

include/mongo/mongoc/mongoc-read-concern.c,697
mongoc_read_concern_new (void)mongoc_read_concern_new36,999
mongoc_read_concern_copy (const mongoc_read_concern_t *read_concern)mongoc_read_concern_copy47,1206
mongoc_read_concern_destroy (mongoc_read_concern_t *read_concern)mongoc_read_concern_destroy67,1612
mongoc_read_concern_get_level (const mongoc_read_concern_t *read_concern)mongoc_read_concern_get_level81,1894
mongoc_read_concern_set_level (mongoc_read_concern_t *read_concern,mongoc_read_concern_set_level105,2571
_mongoc_read_concern_get_bson (mongoc_read_concern_t *read_concern) {_mongoc_read_concern_get_bson134,3336
_mongoc_read_concern_freeze (mongoc_read_concern_t *read_concern)_mongoc_read_concern_freeze154,3888

include/mongo/mongoc/mongoc-counters.defs,0

include/mongo/mongoc/mongoc-client-private.h,1531
#define MONGOC_CLIENT_PRIVATE_HMONGOC_CLIENT_PRIVATE_H18,628
#define WIRE_VERSION_MIN WIRE_VERSION_MIN46,1305
#define WIRE_VERSION_MAX WIRE_VERSION_MAX47,1332
#define WIRE_VERSION_AGG_CURSOR WIRE_VERSION_AGG_CURSOR50,1415
#define WIRE_VERSION_WRITE_CMD WIRE_VERSION_WRITE_CMD52,1522
#define WIRE_VERSION_SCRAM_DEFAULT WIRE_VERSION_SCRAM_DEFAULT54,1633
#define WIRE_VERSION_FIND_CMD WIRE_VERSION_FIND_CMD56,1735
#define WIRE_VERSION_KILLCURSORS_CMD WIRE_VERSION_KILLCURSORS_CMD58,1814
#define WIRE_VERSION_FAM_WRITE_CONCERN WIRE_VERSION_FAM_WRITE_CONCERN60,1913
#define WIRE_VERSION_READ_CONCERN WIRE_VERSION_READ_CONCERN62,1997
struct _mongoc_client_t_mongoc_client_t65,2035
   mongoc_list_t             *conns;conns67,2061
   mongoc_uri_t              *uri;uri68,2098
   mongoc_cluster_t           cluster;cluster69,2133
   bool                       in_exhaust;in_exhaust70,2172
   mongoc_stream_initiator_t  initiator;initiator72,2215
   void                      *initiator_data;initiator_data73,2256
   bool                       use_ssl;use_ssl76,2328
   mongoc_ssl_opt_t           ssl_opts;ssl_opts77,2367
   mongoc_topology_t         *topology;topology80,2415
   mongoc_read_prefs_t       *read_prefs;read_prefs82,2456
   mongoc_read_concern_t     *read_concern;read_concern83,2498
   mongoc_write_concern_t    *write_concern;write_concern84,2542
   mongoc_apm_callbacks_t     apm_callbacks;apm_callbacks86,2588
   void                      *apm_context;apm_context87,2633

include/mongo/mongoc/op-delete.def,0

include/mongo/mongoc/mongoc-stream-buffered.h,65
#define MONGOC_STREAM_BUFFERED_HMONGOC_STREAM_BUFFERED_H18,629

include/mongo/mongoc/mongoc-gridfs-file-list.c,452
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN32,948
_mongoc_gridfs_file_list_new (mongoc_gridfs_t *gridfs,_mongoc_gridfs_file_list_new36,1023
mongoc_gridfs_file_list_next (mongoc_gridfs_file_list_t *list)mongoc_gridfs_file_list_next58,1579
mongoc_gridfs_file_list_error (mongoc_gridfs_file_list_t *list,mongoc_gridfs_file_list_error73,1857
mongoc_gridfs_file_list_destroy (mongoc_gridfs_file_list_t *list)mongoc_gridfs_file_list_destroy81,2049

include/mongo/mongoc/mongoc-gridfs-file-page.h,169
#define MONGOC_GRIDFS_FILE_PAGE_HMONGOC_GRIDFS_FILE_PAGE_H18,629
typedef struct _mongoc_gridfs_file_page_t mongoc_gridfs_file_page_t;mongoc_gridfs_file_page_t34,922

include/mongo/mongoc/mongoc-client-pool-private.h,73
#define MONGOC_CLIENT_POOL_PRIVATE_HMONGOC_CLIENT_POOL_PRIVATE_H18,633

include/mongo/mongoc/mongoc-async-cmd.c,1155
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,992
typedef mongoc_async_cmd_result_t (*_mongoc_async_cmd_phase_t)(_mongoc_async_cmd_phase_t37,1027
static const _mongoc_async_cmd_phase_t gMongocCMDPhases[] = {gMongocCMDPhases49,1459
mongoc_async_cmd_tls_setup (mongoc_stream_t *stream,mongoc_async_cmd_tls_setup60,1823
mongoc_async_cmd_run (mongoc_async_cmd_t *acmd)mongoc_async_cmd_run96,3027
_mongoc_async_cmd_init_send (mongoc_async_cmd_t *acmd,_mongoc_async_cmd_init_send127,3783
_mongoc_async_cmd_state_start (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_state_start150,4570
mongoc_async_cmd_new (mongoc_async_t           *async,mongoc_async_cmd_new162,4807
mongoc_async_cmd_destroy (mongoc_async_cmd_t *acmd)mongoc_async_cmd_destroy219,6418
_mongoc_async_cmd_phase_setup (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_setup239,6805
_mongoc_async_cmd_phase_send (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_send268,7491
_mongoc_async_cmd_phase_recv_len (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_recv_len303,8410
_mongoc_async_cmd_phase_recv_rpc (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_recv_rpc348,9936

include/mongo/mongoc/mongoc-stream-tls-secure-transport.c,1760
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN37,1099
_mongoc_stream_tls_secure_transport_destroy (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_destroy40,1168
_mongoc_stream_tls_secure_transport_failed (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_failed70,2029
_mongoc_stream_tls_secure_transport_close (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_close78,2190
_mongoc_stream_tls_secure_transport_flush (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_flush92,2575
_mongoc_stream_tls_secure_transport_write (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_write103,2896
#define MONGOC_STREAM_TLS_BUFFER_SIZE MONGOC_STREAM_TLS_BUFFER_SIZE154,4235
_mongoc_stream_tls_secure_transport_writev (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_writev156,4293
_mongoc_stream_tls_secure_transport_readv (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_readv276,8001
_mongoc_stream_tls_secure_transport_setsockopt (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_setsockopt347,9918
_mongoc_stream_tls_secure_transport_get_base_stream (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_get_base_stream366,10768
_mongoc_stream_tls_secure_transport_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_tls_secure_transport_check_closed378,11112
mongoc_stream_tls_secure_transport_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_secure_transport_do_handshake389,11483
mongoc_stream_tls_secure_transport_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_secure_transport_check_cert412,12489
mongoc_stream_tls_secure_transport_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_secure_transport_new442,13464

include/mongo/mongoc/mongoc-host-list-private.h,69
#define MONGOC_HOST_LIST_PRIVATE_HMONGOC_HOST_LIST_PRIVATE_H18,631

include/mongo/mongoc/mongoc-stream-tls-openssl.h,71
#define MONGOC_STREAM_TLS_OPENSSL_HMONGOC_STREAM_TLS_OPENSSL_H18,632

include/mongo/mongoc/mongoc-server-description.h,179
#define MONGOC_SERVER_DESCRIPTION_HMONGOC_SERVER_DESCRIPTION_H18,632
typedef struct _mongoc_server_description_t mongoc_server_description_t;mongoc_server_description_t25,750

include/mongo/mongoc/mongoc-counters.c,1150
{__anon1ea2678d010840,907
   uint32_t offset;offset41,909
   uint32_t slot;slot42,929
   char          category[24];category43,947
   char          name[32];name44,978
   char          description[64];description45,1005
} mongoc_counter_info_t;mongoc_counter_info_t46,1039
{__anon1ea2678d020855,1172
   uint32_t size;size56,1174
   uint32_t n_cpu;n_cpu57,1192
   uint32_t n_counters;n_counters58,1211
   uint32_t infos_offset;infos_offset59,1235
   uint32_t values_offset;values_offset60,1261
   uint8_t  padding[44];padding61,1288
} mongoc_counters_t;mongoc_counters_t62,1313
static void *gCounterFallback = NULL;gCounterFallback68,1405
#define COUNTER(COUNTER71,1445
mongoc_counters_use_shm (void)mongoc_counters_use_shm86,1830
mongoc_counters_calc_size (void)mongoc_counters_calc_size103,2179
_mongoc_counters_cleanup (void)_mongoc_counters_cleanup129,2736
mongoc_counters_alloc (size_t size)mongoc_counters_alloc157,3370
mongoc_counters_register (mongoc_counters_t *counters,mongoc_counters_register224,4827
_mongoc_counters_init (void)_mongoc_counters_init276,6368
#define COUNTER(COUNTER297,6969

include/mongo/mongoc/mongoc-database.c,2938
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,1096
_mongoc_database_new (mongoc_client_t              *client,_mongoc_database_new59,1670
mongoc_database_destroy (mongoc_database_t *database)mongoc_database_destroy107,2922
mongoc_database_copy (mongoc_database_t *database)mongoc_database_copy151,3862
mongoc_database_command (mongoc_database_t         *database,mongoc_database_command163,4175
mongoc_database_command_simple (mongoc_database_t         *database,mongoc_database_command_simple187,5223
mongoc_database_drop (mongoc_database_t *database,mongoc_database_drop226,6597
mongoc_database_add_user_legacy (mongoc_database_t *database,mongoc_database_add_user_legacy261,7435
mongoc_database_remove_user (mongoc_database_t *database,mongoc_database_remove_user340,9573
mongoc_database_remove_all_users (mongoc_database_t *database,mongoc_database_remove_all_users384,10788
mongoc_database_add_user (mongoc_database_t *database,mongoc_database_add_user436,12242
mongoc_database_get_read_prefs (const mongoc_database_t *database) /* IN */mongoc_database_get_read_prefs518,14716
mongoc_database_set_read_prefs (mongoc_database_t         *database,mongoc_database_set_read_prefs542,15193
mongoc_database_get_read_concern (const mongoc_database_t *database)mongoc_database_get_read_concern575,15995
mongoc_database_set_read_concern (mongoc_database_t            *database,mongoc_database_set_read_concern600,16465
mongoc_database_get_write_concern (const mongoc_database_t *database)mongoc_database_get_write_concern633,17301
mongoc_database_set_write_concern (mongoc_database_t            *database,mongoc_database_set_write_concern658,17775
mongoc_database_has_collection (mongoc_database_t *database,mongoc_database_has_collection692,18808
{__anonc4a2f36f0108745,19989
   const char *dbname;dbname746,19991
   size_t      dbname_len;dbname_len747,20014
   const char *name;name748,20041
} mongoc_database_find_collections_legacy_ctx_t;mongoc_database_find_collections_legacy_ctx_t749,20062
_mongoc_database_find_collections_legacy_filter (const bson_t *bson,_mongoc_database_find_collections_legacy_filter752,20150
_mongoc_database_find_collections_legacy_mutate (const bson_t *bson,_mongoc_database_find_collections_legacy_mutate772,20796
_mongoc_database_find_collections_legacy (mongoc_database_t *database,_mongoc_database_find_collections_legacy786,21348
mongoc_database_find_collections (mongoc_database_t *database,mongoc_database_find_collections861,23911
mongoc_database_get_collection_names (mongoc_database_t *database,mongoc_database_get_collection_names914,25595
mongoc_database_create_collection (mongoc_database_t *database,mongoc_database_create_collection964,26812
mongoc_database_get_collection (mongoc_database_t *database,mongoc_database_get_collection1124,32618
mongoc_database_get_name (mongoc_database_t *database)mongoc_database_get_name1137,33038

include/mongo/mongoc/mongoc-cursor-array.c,1320
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,902
{__anon3450c684010834,960
   bson_t         array;array35,962
   bool           has_array;has_array36,987
   bool           has_synthetic_bson;has_synthetic_bson37,1016
   bson_iter_t    iter;iter38,1054
   bson_t         bson;   /* current document */bson39,1078
   const char    *field_name;field_name40,1127
} mongoc_cursor_array_t;mongoc_cursor_array_t41,1157
_mongoc_cursor_array_new (const char *field_name)_mongoc_cursor_array_new45,1198
_mongoc_cursor_array_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_array_destroy61,1485
_mongoc_cursor_array_prime (mongoc_cursor_t *cursor)_mongoc_cursor_array_prime85,1867
_mongoc_cursor_array_next (mongoc_cursor_t *cursor,_mongoc_cursor_array_next109,2382
_mongoc_cursor_array_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_array_clone141,3062
_mongoc_cursor_array_more (mongoc_cursor_t *cursor)_mongoc_cursor_array_more158,3401
_mongoc_cursor_array_error  (mongoc_cursor_t *cursor,_mongoc_cursor_array_error181,3792
static mongoc_cursor_interface_t gMongocCursorArray = {gMongocCursorArray198,4124
_mongoc_cursor_array_init (mongoc_cursor_t *cursor,_mongoc_cursor_array_init208,4345
_mongoc_cursor_array_set_bson (mongoc_cursor_t *cursor,_mongoc_cursor_array_set_bson230,4806

include/mongo/mongoc/mongoc-rand-openssl.c,385
int _mongoc_rand_bytes(uint8_t * buf, int num) {_mongoc_rand_bytes28,761
int _mongoc_pseudo_rand_bytes(uint8_t * buf, int num) {_mongoc_pseudo_rand_bytes32,846
void mongoc_rand_seed(const void* buf, int num) {mongoc_rand_seed36,945
void mongoc_rand_add(const void* buf, int num, double entropy) {mongoc_rand_add40,1023
int mongoc_rand_status(void) {mongoc_rand_status44,1124

include/mongo/mongoc/mongoc-cluster-private.h,1161
#define MONGOC_CLUSTER_PRIVATE_HMONGOC_CLUSTER_PRIVATE_H18,629
typedef struct _mongoc_cluster_node_t_mongoc_cluster_node_t45,1285
   mongoc_stream_t *stream;stream47,1325
   int32_t          max_wire_version;max_wire_version49,1354
   int32_t          min_wire_version;min_wire_version50,1392
   int32_t          max_write_batch_size;max_write_batch_size51,1430
   int32_t          max_bson_obj_size;max_bson_obj_size52,1472
   int32_t          max_msg_size;max_msg_size53,1511
   int64_t          timestamp;timestamp55,1546
} mongoc_cluster_node_t;mongoc_cluster_node_t56,1577
typedef struct _mongoc_cluster_t_mongoc_cluster_t58,1603
   int64_t          operation_id;operation_id60,1638
   uint32_t         request_id;request_id61,1672
   uint32_t         sockettimeoutms;sockettimeoutms62,1704
   uint32_t         socketcheckintervalms;socketcheckintervalms63,1741
   mongoc_uri_t    *uri;uri64,1784
   unsigned         requires_auth : 1;requires_auth65,1809
   mongoc_client_t *client;client67,1849
   mongoc_set_t    *nodes;nodes69,1878
   mongoc_array_t   iov;iov70,1905
} mongoc_cluster_t;mongoc_cluster_t71,1930

include/mongo/mongoc/Makefile.am,410
headerdir = $(prefix)/include/libmongoc-@MONGOC_API_VERSION@headerdir1,0
headerdir = $(prefix)/include/libmongoc-@MONGOC_API_VERSION@header1,0
header_DATA = \header_DATA2,61
	$(INST_H_FILES) \$(INST_H_FILES)3,77
	$(MONGOC_DEF_FILES) \$(MONGOC_DEF_FILES)4,96
	src/mongoc/mongoc-config.hsrc/mongoc/mongoc-config.h5,119
MONGOC_DEF_FILES = \MONGOC_DEF_FILES7,148
INST_H_FILES = \INST_H_FILES19,458

include/mongo/mongoc/mongoc-write-concern.c,2392
_mongoc_write_concern_warn_frozen (mongoc_write_concern_t *write_concern)_mongoc_write_concern_warn_frozen24,723
mongoc_write_concern_new (void)mongoc_write_concern_new46,1246
mongoc_write_concern_copy (const mongoc_write_concern_t *write_concern)mongoc_write_concern_copy60,1643
mongoc_write_concern_destroy (mongoc_write_concern_t *write_concern)mongoc_write_concern_destroy85,2252
mongoc_write_concern_get_fsync (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_fsync100,2587
mongoc_write_concern_set_fsync (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_fsync116,2996
mongoc_write_concern_get_journal (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_journal128,3280
mongoc_write_concern_journal_is_set (mongoc_write_concern_journal_is_set136,3446
mongoc_write_concern_set_journal (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_journal153,3882
mongoc_write_concern_get_w (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_w165,4169
mongoc_write_concern_set_w (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_w184,4698
mongoc_write_concern_get_wtimeout (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wtimeout197,4981
mongoc_write_concern_set_wtimeout (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wtimeout216,5521
mongoc_write_concern_get_wmajority (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wmajority232,5873
mongoc_write_concern_set_wmajority (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wmajority252,6538
mongoc_write_concern_get_wtag (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wtag268,6954
mongoc_write_concern_set_wtag (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wtag281,7187
_mongoc_write_concern_get_bson (mongoc_write_concern_t *write_concern) {_mongoc_write_concern_get_bson308,8013
_mongoc_write_concern_get_gle (mongoc_write_concern_t *write_concern) {_mongoc_write_concern_get_gle331,8694
_mongoc_write_concern_freeze (mongoc_write_concern_t *write_concern)_mongoc_write_concern_freeze351,9260
mongoc_write_concern_is_acknowledged (mongoc_write_concern_is_acknowledged404,10828
mongoc_write_concern_is_valid (const mongoc_write_concern_t *write_concern)mongoc_write_concern_is_valid427,11494

include/mongo/mongoc/mongoc-gridfs.c,1181
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
#define MONGOC_GRIDFS_STREAM_CHUNK MONGOC_GRIDFS_STREAM_CHUNK36,1119
_mongoc_gridfs_ensure_index (mongoc_gridfs_t *gridfs,_mongoc_gridfs_ensure_index48,1350
_mongoc_gridfs_new (mongoc_client_t *client,_mongoc_gridfs_new87,2084
mongoc_gridfs_drop (mongoc_gridfs_t *gridfs,mongoc_gridfs_drop143,3624
mongoc_gridfs_destroy (mongoc_gridfs_t *gridfs)mongoc_gridfs_destroy165,3945
mongoc_gridfs_find (mongoc_gridfs_t *gridfs,mongoc_gridfs_find182,4229
mongoc_gridfs_find_one (mongoc_gridfs_t *gridfs,mongoc_gridfs_find_one191,4439
mongoc_gridfs_find_one_by_filename (mongoc_gridfs_t *gridfs,mongoc_gridfs_find_one_by_filename213,4954
mongoc_gridfs_create_file_from_stream (mongoc_gridfs_t          *gridfs,mongoc_gridfs_create_file_from_stream238,5503
mongoc_gridfs_create_file (mongoc_gridfs_t          *gridfs,mongoc_gridfs_create_file284,6617
mongoc_gridfs_get_files (mongoc_gridfs_t *gridfs)mongoc_gridfs_get_files300,6942
mongoc_gridfs_get_chunks (mongoc_gridfs_t *gridfs)mongoc_gridfs_get_chunks308,7070
mongoc_gridfs_remove_by_filename (mongoc_gridfs_t *gridfs,mongoc_gridfs_remove_by_filename317,7184

include/mongo/mongoc/mongoc-matcher-private.h,205
#define MONGOC_MATCHER_PRIVATE_HMONGOC_MATCHER_PRIVATE_H18,629
struct _mongoc_matcher_t_mongoc_matcher_t32,870
   bson_t               query;query34,897
   mongoc_matcher_op_t *optree;optree35,928

include/mongo/mongoc/mongoc-list.c,357
_mongoc_list_append (mongoc_list_t *list,_mongoc_list_append31,854
_mongoc_list_prepend (mongoc_list_t *list,_mongoc_list_prepend60,1453
_mongoc_list_remove (mongoc_list_t *list,_mongoc_list_remove83,1918
_mongoc_list_foreach (mongoc_list_t *list,_mongoc_list_foreach118,2612
_mongoc_list_destroy (mongoc_list_t *list)_mongoc_list_destroy139,3025

include/mongo/mongoc/op-query.def,0

include/mongo/mongoc/mongoc-ssl.c,401
#define MONGOC_SSL_DEFAULT_TRUST_FILE MONGOC_SSL_DEFAULT_TRUST_FILE34,1048
#define MONGOC_SSL_DEFAULT_TRUST_DIR MONGOC_SSL_DEFAULT_TRUST_DIR37,1135
mongoc_ssl_opt_t gMongocSslOptDefault = {gMongocSslOptDefault41,1192
mongoc_ssl_opt_get_default (void)mongoc_ssl_opt_get_default49,1348
mongoc_ssl_extract_subject (const char *filename, const char *passphrase)mongoc_ssl_extract_subject55,1427

include/mongo/mongoc/mongoc-opcode.c,91
_mongoc_opcode_needs_primary (mongoc_opcode_t opcode)_mongoc_opcode_needs_primary37,1011

include/mongo/mongoc/mongoc-cursor-cursorid-private.h,381
#define MONGOC_CURSOR_CURSORID_PRIVATE_HMONGOC_CURSOR_CURSORID_PRIVATE_H18,637
{__anonfb0a0f1d010833,897
   bson_t     *array;array34,899
   bool        in_batch;in_batch35,921
   bool        in_reader;in_reader36,946
   bson_iter_t batch_iter;batch_iter37,972
   bson_t      current_doc;current_doc38,999
} mongoc_cursor_cursorid_t;mongoc_cursor_cursorid_t39,1027

include/mongo/mongoc/mongoc-crypto-common-crypto.c,217
mongoc_crypto_common_crypto_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_common_crypto_hmac_sha127,824
mongoc_crypto_common_crypto_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_common_crypto_sha144,1382

include/mongo/mongoc/mongoc-bulk-operation.h,335
#define MONGOC_BULK_OPERATION_HMONGOC_BULK_OPERATION_H19,629
#define MONGOC_BULK_WRITE_FLAGS_INIT MONGOC_BULK_WRITE_FLAGS_INIT26,717
typedef struct _mongoc_bulk_operation_t mongoc_bulk_operation_t;mongoc_bulk_operation_t31,826
typedef struct _mongoc_bulk_write_flags_t mongoc_bulk_write_flags_t;mongoc_bulk_write_flags_t32,891

include/mongo/mongoc/mongoc-cursor-private.h,2493
#define MONGOC_CURSOR_PRIVATE_HMONGOC_CURSOR_PRIVATE_H18,628
typedef struct _mongoc_cursor_interface_t mongoc_cursor_interface_t;mongoc_cursor_interface_t34,964
struct _mongoc_cursor_interface_t_mongoc_cursor_interface_t37,1035
   mongoc_cursor_t *(*clone)    (const mongoc_cursor_t  *cursor);clone39,1071
   void             (*destroy)  (mongoc_cursor_t        *cursor);destroy40,1137
   bool             (*more)     (mongoc_cursor_t        *cursor);more41,1203
   bool             (*next)     (mongoc_cursor_t        *cursor,next42,1269
   bool             (*error)    (mongoc_cursor_t        *cursor,error44,1398
   void             (*get_host) (mongoc_cursor_t        *cursor,get_host46,1528
struct _mongoc_cursor_t_mongoc_cursor_t51,1662
   mongoc_client_t           *client;client53,1688
   uint32_t                   server_id;server_id55,1727
   uint32_t                   stamp;stamp56,1768
   unsigned                   is_command      : 1;is_command58,1806
   unsigned                   sent            : 1;sent59,1857
   unsigned                   done            : 1;done60,1908
   unsigned                   end_of_event    : 1;end_of_event61,1959
   unsigned                   has_fields      : 1;has_fields62,2010
   unsigned                   in_exhaust      : 1;in_exhaust63,2061
   bson_t                     query;query65,2113
   bson_t                     fields;fields66,2150
   mongoc_read_concern_t     *read_concern;read_concern68,2189
   mongoc_read_prefs_t       *read_prefs;read_prefs69,2233
   mongoc_query_flags_t       flags;flags71,2276
   uint32_t                   skip;skip72,2313
   int64_t                    limit;limit73,2349
   uint32_t                   count;count74,2386
   uint32_t                   batch_size;batch_size75,2423
   uint32_t                   max_await_time_ms;max_await_time_ms76,2465
   char                       ns [140];ns78,2515
   uint32_t                   nslen;nslen79,2555
   uint32_t                   dblen;dblen80,2592
   bson_error_t               error;error82,2630
   mongoc_rpc_t               rpc;rpc85,2712
   mongoc_buffer_t            buffer;buffer86,2747
   bson_reader_t             *reader;reader87,2785
   const bson_t              *current;current88,2823
   mongoc_cursor_interface_t  iface;iface90,2863
   void                      *iface_data;iface_data91,2900
   int64_t                    operation_id;operation_id93,2943

include/mongo/mongoc/mongoc-array.c,303
_mongoc_array_init (mongoc_array_t *array,_mongoc_array_init22,638
_mongoc_array_copy (mongoc_array_t       *dst,_mongoc_array_copy52,1277
_mongoc_array_destroy (mongoc_array_t *array)_mongoc_array_destroy66,1620
_mongoc_array_append_vals (mongoc_array_t *array,_mongoc_array_append_vals75,1743

include/mongo/mongoc/mongoc-log-private.h,57
#define MONGOC_LOG_PRIVATE_HMONGOC_LOG_PRIVATE_H18,625

include/mongo/mongoc/mongoc-config.h.in,709
#define MONGOC_CONFIG_HMONGOC_CONFIG_H19,620
#define MONGOC_ENABLE_SECURE_TRANSPORT MONGOC_ENABLE_SECURE_TRANSPORT26,778
#define MONGOC_ENABLE_COMMON_CRYPTO MONGOC_ENABLE_COMMON_CRYPTO37,1072
#define MONGOC_ENABLE_OPENSSL MONGOC_ENABLE_OPENSSL48,1333
#define MONGOC_ENABLE_LIBCRYPTO MONGOC_ENABLE_LIBCRYPTO59,1572
#define MONGOC_ENABLE_SSL MONGOC_ENABLE_SSL70,1813
#define MONGOC_ENABLE_CRYPTO MONGOC_ENABLE_CRYPTO81,2036
#define MONGOC_ENABLE_SASL MONGOC_ENABLE_SASL92,2263
#define MONGOC_HAVE_SASL_CLIENT_DONE MONGOC_HAVE_SASL_CLIENT_DONE104,2562
#define MONGOC_HAVE_WEAK_SYMBOLS MONGOC_HAVE_WEAK_SYMBOLS117,2984
#define MONGOC_NO_AUTOMATIC_GLOBALS MONGOC_NO_AUTOMATIC_GLOBALS128,3255

include/mongo/mongoc/mongoc-stream-tls-openssl-bio-private.h,95
#define MONGOC_STREAM_TLS_OPENSSL_BIO_PRIVATE_HMONGOC_STREAM_TLS_OPENSSL_BIO_PRIVATE_H18,644

include/mongo/mongoc/mongoc-stream-socket.c,1321
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN24,719
struct _mongoc_stream_socket_t_mongoc_stream_socket_t27,756
   mongoc_stream_t  vtable;vtable29,789
   mongoc_socket_t *sock;sock30,817
get_expiration (int32_t timeout_msec)get_expiration35,875
_mongoc_stream_socket_close (mongoc_stream_t *stream)_mongoc_stream_socket_close48,1119
_mongoc_stream_socket_destroy (mongoc_stream_t *stream)_mongoc_stream_socket_destroy67,1407
_mongoc_stream_socket_failed (mongoc_stream_t *stream)_mongoc_stream_socket_failed87,1698
_mongoc_stream_socket_setsockopt (mongoc_stream_t *stream,_mongoc_stream_socket_setsockopt98,1834
_mongoc_stream_socket_flush (mongoc_stream_t *stream)_mongoc_stream_socket_flush119,2381
_mongoc_stream_socket_readv (mongoc_stream_t *stream,_mongoc_stream_socket_readv127,2481
_mongoc_stream_socket_writev (mongoc_stream_t *stream,_mongoc_stream_socket_writev193,4118
_mongoc_stream_socket_poll (mongoc_stream_poll_t *streams,_mongoc_stream_socket_poll216,4702
mongoc_stream_socket_get_socket (mongoc_stream_socket_t *stream) /* IN */mongoc_stream_socket_get_socket257,5536
_mongoc_stream_socket_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_socket_check_closed266,5678
mongoc_stream_socket_new (mongoc_socket_t *sock) /* IN */mongoc_stream_socket_new300,6344

include/mongo/mongoc/op-msg.def,0

include/mongo/mongoc/mongoc-write-concern-private.h,609
#define MONGOC_WRITE_CONCERN_PRIVATE_HMONGOC_WRITE_CONCERN_PRIVATE_H18,635
#define MONGOC_WRITE_CONCERN_FSYNC_DEFAULT MONGOC_WRITE_CONCERN_FSYNC_DEFAULT30,842
#define MONGOC_WRITE_CONCERN_JOURNAL_DEFAULT MONGOC_WRITE_CONCERN_JOURNAL_DEFAULT31,890
struct _mongoc_write_concern_t_mongoc_write_concern_t34,940
   int8_t    fsync_;fsync_36,973
   int8_t    journal;journal37,994
   int32_t   w;w38,1016
   int32_t   wtimeout;wtimeout39,1032
   char     *wtag;wtag40,1055
   bool      frozen;frozen41,1074
   bson_t    compiled;compiled42,1095
   bson_t    compiled_gle;compiled_gle43,1118

include/mongo/mongoc/mongoc-read-concern-private.h,236
#define MONGOC_READ_CONCERN_PRIVATE_HMONGOC_READ_CONCERN_PRIVATE_H18,634
struct _mongoc_read_concern_t_mongoc_read_concern_t31,873
   char   *level;level33,905
   bool    frozen;frozen34,923
   bson_t  compiled;compiled35,942

include/mongo/mongoc/mongoc-log.c,1164
static mongoc_mutex_t     gLogMutex;gLogMutex33,856
static mongoc_log_func_t  gLogFunc = mongoc_log_default_handler;gLogFunc34,893
static bool               gLogTrace = true;gLogTrace36,978
static void              *gLogData;gLogData38,1029
static MONGOC_ONCE_FUN( _mongoc_ensure_mutex_once)MONGOC_ONCE_FUN40,1066
mongoc_log_set_handler (mongoc_log_func_t  log_func,mongoc_log_set_handler48,1185
_mongoc_log_get_handler (mongoc_log_func_t  *log_func,_mongoc_log_get_handler63,1546
mongoc_log (mongoc_log_level_t  log_level,mongoc_log72,1719
mongoc_log_level_str (mongoc_log_level_t log_level)mongoc_log_level_str107,2494
mongoc_log_default_handler (mongoc_log_level_t  log_level,mongoc_log_default_handler131,3012
_mongoc_log_trace_is_enabled (void)_mongoc_log_trace_is_enabled191,4306
mongoc_log_trace_enable (void)mongoc_log_trace_enable201,4423
mongoc_log_trace_disable (void)mongoc_log_trace_disable209,4512
mongoc_log_trace_bytes (const char *domain, const uint8_t *_b, size_t _l)mongoc_log_trace_bytes217,4603
mongoc_log_trace_iovec (const char *domain, const mongoc_iovec_t *_iov, size_t _iovcnt)mongoc_log_trace_iovec266,5753

include/mongo/mongoc/mongoc-find-and-modify.c,1111
mongoc_find_and_modify_opts_new (void)mongoc_find_and_modify_opts_new34,1028
mongoc_find_and_modify_opts_set_sort (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_sort46,1324
mongoc_find_and_modify_opts_set_update (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_update60,1649
mongoc_find_and_modify_opts_set_fields (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_fields74,1988
mongoc_find_and_modify_opts_set_flags (mongoc_find_and_modify_opts_t        *opts,mongoc_find_and_modify_opts_set_flags88,2327
mongoc_find_and_modify_opts_set_bypass_document_validation (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_bypass_document_validation98,2568
mongoc_find_and_modify_opts_set_max_time_ms (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_max_time_ms110,2955
mongoc_find_and_modify_opts_append (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_append120,3212
mongoc_find_and_modify_opts_destroy (mongoc_find_and_modify_opts_t *opts)mongoc_find_and_modify_opts_destroy136,3627

include/mongo/mongoc/mongoc-apm.c,3533
mongoc_apm_command_started_init (mongoc_apm_command_started_t *event,mongoc_apm_command_started_init31,896
mongoc_apm_command_started_cleanup (mongoc_apm_command_started_t *event)mongoc_apm_command_started_cleanup82,2924
mongoc_apm_command_succeeded_init (mongoc_apm_command_succeeded_t *event,mongoc_apm_command_succeeded_init91,3081
mongoc_apm_command_succeeded_cleanup (mongoc_apm_command_succeeded_t *event)mongoc_apm_command_succeeded_cleanup115,4064
mongoc_apm_command_failed_init (mongoc_apm_command_failed_t *event,mongoc_apm_command_failed_init122,4167
mongoc_apm_command_failed_cleanup (mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_cleanup144,5071
mongoc_apm_command_started_get_command (mongoc_apm_command_started_get_command157,5247
mongoc_apm_command_started_get_database_name (mongoc_apm_command_started_get_database_name165,5379
mongoc_apm_command_started_get_command_name (mongoc_apm_command_started_get_command_name173,5523
mongoc_apm_command_started_get_request_id (mongoc_apm_command_started_get_request_id181,5660
mongoc_apm_command_started_get_operation_id (mongoc_apm_command_started_get_operation_id189,5793
mongoc_apm_command_started_get_host (const mongoc_apm_command_started_t *event)mongoc_apm_command_started_get_host197,5949
mongoc_apm_command_started_get_server_id (const mongoc_apm_command_started_t *event)mongoc_apm_command_started_get_server_id204,6067
mongoc_apm_command_started_get_context (mongoc_apm_command_started_get_context211,6193
mongoc_apm_command_succeeded_get_duration (mongoc_apm_command_succeeded_get_duration221,6358
mongoc_apm_command_succeeded_get_reply (mongoc_apm_command_succeeded_get_reply229,6498
mongoc_apm_command_succeeded_get_command_name (mongoc_apm_command_succeeded_get_command_name237,6630
mongoc_apm_command_succeeded_get_request_id (mongoc_apm_command_succeeded_get_request_id245,6771
mongoc_apm_command_succeeded_get_operation_id (mongoc_apm_command_succeeded_get_operation_id253,6908
mongoc_apm_command_succeeded_get_host (mongoc_apm_command_succeeded_get_host261,7068
mongoc_apm_command_succeeded_get_server_id (mongoc_apm_command_succeeded_get_server_id269,7194
mongoc_apm_command_succeeded_get_context (mongoc_apm_command_succeeded_get_context277,7328
mongoc_apm_command_failed_get_duration (mongoc_apm_command_failed_get_duration287,7494
mongoc_apm_command_failed_get_command_name (mongoc_apm_command_failed_get_command_name295,7626
mongoc_apm_command_failed_get_error (mongoc_apm_command_failed_get_error303,7758
mongoc_apm_command_failed_get_request_id (mongoc_apm_command_failed_get_request_id312,7955
mongoc_apm_command_failed_get_operation_id (mongoc_apm_command_failed_get_operation_id320,8086
mongoc_apm_command_failed_get_host (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_host328,8240
mongoc_apm_command_failed_get_server_id (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_server_id335,8356
mongoc_apm_command_failed_get_context (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_context342,8480
mongoc_apm_callbacks_new (void)mongoc_apm_callbacks_new353,8651
mongoc_apm_callbacks_destroy (mongoc_apm_callbacks_t *callbacks)mongoc_apm_callbacks_destroy362,8797
mongoc_apm_set_command_started_cb (mongoc_apm_set_command_started_cb369,8899
mongoc_apm_set_command_succeeded_cb (mongoc_apm_set_command_succeeded_cb378,9061
mongoc_apm_set_command_failed_cb (mongoc_apm_set_command_failed_cb387,9231

include/mongo/mongoc/mongoc-b64-private.h,57
#define MONGOC_B64_PRIVATE_HMONGOC_B64_PRIVATE_H18,624

include/mongo/mongoc/mongoc-openssl.c,1333
static mongoc_mutex_t * gMongocOpenSslThreadLocks;gMongocOpenSslThreadLocks39,1052
_mongoc_openssl_init (void)_mongoc_openssl_init53,1371
_mongoc_openssl_cleanup (void)_mongoc_openssl_cleanup77,1896
_mongoc_openssl_password_cb (char *buf,_mongoc_openssl_password_cb83,1981
_mongoc_openssl_hostcheck (const char *pattern,_mongoc_openssl_hostcheck110,2564
_mongoc_openssl_check_cert (SSL        *ssl,_mongoc_openssl_check_cert166,4453
_mongoc_openssl_setup_ca (SSL_CTX    *ctx,_mongoc_openssl_setup_ca297,8117
_mongoc_openssl_setup_crl (SSL_CTX    *ctx,_mongoc_openssl_setup_crl313,8424
_mongoc_openssl_setup_pem_file (SSL_CTX    *ctx,_mongoc_openssl_setup_pem_file332,8852
_mongoc_openssl_ctx_new (mongoc_ssl_opt_t *opt)_mongoc_openssl_ctx_new366,9678
_mongoc_openssl_extract_subject (const char *filename, const char *passphrase)_mongoc_openssl_extract_subject423,11431
_mongoc_openssl_thread_id_callback (void)_mongoc_openssl_thread_id_callback474,12442
_mongoc_openssl_thread_id_callback (void)_mongoc_openssl_thread_id_callback485,12602
_mongoc_openssl_thread_locking_callback (int         mode,_mongoc_openssl_thread_locking_callback496,12748
_mongoc_openssl_thread_startup (void)_mongoc_openssl_thread_startup509,13169
_mongoc_openssl_thread_cleanup (void)_mongoc_openssl_thread_cleanup526,13649

include/mongo/mongoc/mongoc-topology-scanner.c,2255
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN34,969
mongoc_topology_scanner_new (const mongoc_uri_t          *uri,mongoc_topology_scanner_new44,1453
mongoc_topology_scanner_set_ssl_opts (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_set_ssl_opts63,1971
mongoc_topology_scanner_set_stream_initiator (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_set_stream_initiator72,2195
mongoc_topology_scanner_destroy (mongoc_topology_scanner_t *ts)mongoc_topology_scanner_destroy82,2513
mongoc_topology_scanner_add (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_add97,2862
mongoc_topology_scanner_add_and_scan (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_add_and_scan117,3333
mongoc_topology_scanner_node_retire (mongoc_topology_scanner_node_t *node)mongoc_topology_scanner_node_retire143,4249
mongoc_topology_scanner_node_disconnect (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_disconnect153,4443
mongoc_topology_scanner_node_destroy (mongoc_topology_scanner_node_t *node, bool failed)mongoc_topology_scanner_node_destroy179,5017
mongoc_topology_scanner_get_node (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_get_node198,5582
mongoc_topology_scanner_has_node_for_host (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_has_node_for_host227,6230
mongoc_topology_scanner_ismaster_handler (mongoc_async_cmd_result_t async_status,mongoc_topology_scanner_ismaster_handler252,6871
mongoc_topology_scanner_node_connect_tcp (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_connect_tcp314,8830
mongoc_topology_scanner_node_connect_unix (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_connect_unix388,10899
mongoc_topology_scanner_node_setup (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_setup462,12908
mongoc_topology_scanner_start (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_start526,14986
mongoc_topology_scanner_work (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_work579,16519
mongoc_topology_scanner_sum_errors (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_sum_errors604,17067
mongoc_topology_scanner_reset (mongoc_topology_scanner_t *ts)mongoc_topology_scanner_reset644,18157

include/mongo/mongoc/mongoc-socket-private.h,193
#define MONGOC_SOCKET_PRIVATE_HMONGOC_SOCKET_PRIVATE_H18,628
struct _mongoc_socket_t_mongoc_socket_t28,829
   SOCKET sd;sd31,869
   int errno_;errno_35,907
   int domain;domain36,922

include/mongo/mongoc/mongoc-stream-gridfs.c,979
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,875
{__anon1fc3ebf2010834,934
   mongoc_stream_t       stream;stream35,936
   mongoc_gridfs_file_t *file;file36,969
} mongoc_stream_gridfs_t;mongoc_stream_gridfs_t37,1000
_mongoc_stream_gridfs_destroy (mongoc_stream_t *stream)_mongoc_stream_gridfs_destroy41,1040
_mongoc_stream_gridfs_failed (mongoc_stream_t *stream)_mongoc_stream_gridfs_failed59,1303
_mongoc_stream_gridfs_close (mongoc_stream_t *stream)_mongoc_stream_gridfs_close70,1439
_mongoc_stream_gridfs_flush (mongoc_stream_t *stream)_mongoc_stream_gridfs_flush85,1700
_mongoc_stream_gridfs_readv (mongoc_stream_t *stream,_mongoc_stream_gridfs_readv101,1966
_mongoc_stream_gridfs_writev (mongoc_stream_t *stream,_mongoc_stream_gridfs_writev127,2663
_mongoc_stream_gridfs_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_gridfs_check_closed154,3252
mongoc_stream_gridfs_new (mongoc_gridfs_file_t *file)mongoc_stream_gridfs_new161,3363

include/mongo/mongoc/mongoc-list-private.h,225
#define MONGOC_LIST_HMONGOC_LIST_H18,618
typedef struct _mongoc_list_t mongoc_list_t;mongoc_list_t30,808
struct _mongoc_list_t_mongoc_list_t33,855
   mongoc_list_t *next;next35,879
   void          *data;data36,903

include/mongo/mongoc/mongoc-error.h,4072
#define MONGOC_ERRORS_HMONGOC_ERRORS_H18,620
{__anon04b57349010331,819
   MONGOC_ERROR_CLIENT = 1,MONGOC_ERROR_CLIENT32,821
   MONGOC_ERROR_STREAM,MONGOC_ERROR_STREAM33,849
   MONGOC_ERROR_PROTOCOL,MONGOC_ERROR_PROTOCOL34,873
   MONGOC_ERROR_CURSOR,MONGOC_ERROR_CURSOR35,899
   MONGOC_ERROR_QUERY,MONGOC_ERROR_QUERY36,923
   MONGOC_ERROR_INSERT,MONGOC_ERROR_INSERT37,946
   MONGOC_ERROR_SASL,MONGOC_ERROR_SASL38,970
   MONGOC_ERROR_BSON,MONGOC_ERROR_BSON39,992
   MONGOC_ERROR_MATCHER,MONGOC_ERROR_MATCHER40,1014
   MONGOC_ERROR_NAMESPACE,MONGOC_ERROR_NAMESPACE41,1039
   MONGOC_ERROR_COMMAND,MONGOC_ERROR_COMMAND42,1066
   MONGOC_ERROR_COLLECTION,MONGOC_ERROR_COLLECTION43,1091
   MONGOC_ERROR_GRIDFS,MONGOC_ERROR_GRIDFS44,1119
   MONGOC_ERROR_SCRAM,MONGOC_ERROR_SCRAM45,1143
   MONGOC_ERROR_SERVER_SELECTION,MONGOC_ERROR_SERVER_SELECTION46,1166
   MONGOC_ERROR_WRITE_CONCERN,MONGOC_ERROR_WRITE_CONCERN47,1200
} mongoc_error_domain_t;mongoc_error_domain_t48,1231
{__anon04b57349020352,1271
   MONGOC_ERROR_STREAM_INVALID_TYPE = 1,MONGOC_ERROR_STREAM_INVALID_TYPE53,1273
   MONGOC_ERROR_STREAM_INVALID_STATE,MONGOC_ERROR_STREAM_INVALID_STATE54,1314
   MONGOC_ERROR_STREAM_NAME_RESOLUTION,MONGOC_ERROR_STREAM_NAME_RESOLUTION55,1352
   MONGOC_ERROR_STREAM_SOCKET,MONGOC_ERROR_STREAM_SOCKET56,1392
   MONGOC_ERROR_STREAM_CONNECT,MONGOC_ERROR_STREAM_CONNECT57,1423
   MONGOC_ERROR_STREAM_NOT_ESTABLISHED,MONGOC_ERROR_STREAM_NOT_ESTABLISHED58,1455
   MONGOC_ERROR_CLIENT_NOT_READY,MONGOC_ERROR_CLIENT_NOT_READY60,1496
   MONGOC_ERROR_CLIENT_TOO_BIG,MONGOC_ERROR_CLIENT_TOO_BIG61,1530
   MONGOC_ERROR_CLIENT_TOO_SMALL,MONGOC_ERROR_CLIENT_TOO_SMALL62,1562
   MONGOC_ERROR_CLIENT_GETNONCE,MONGOC_ERROR_CLIENT_GETNONCE63,1596
   MONGOC_ERROR_CLIENT_AUTHENTICATE,MONGOC_ERROR_CLIENT_AUTHENTICATE64,1629
   MONGOC_ERROR_CLIENT_NO_ACCEPTABLE_PEER,MONGOC_ERROR_CLIENT_NO_ACCEPTABLE_PEER65,1666
   MONGOC_ERROR_CLIENT_IN_EXHAUST,MONGOC_ERROR_CLIENT_IN_EXHAUST66,1709
   MONGOC_ERROR_PROTOCOL_INVALID_REPLY,MONGOC_ERROR_PROTOCOL_INVALID_REPLY68,1745
   MONGOC_ERROR_PROTOCOL_BAD_WIRE_VERSION,MONGOC_ERROR_PROTOCOL_BAD_WIRE_VERSION69,1785
   MONGOC_ERROR_CURSOR_INVALID_CURSOR,MONGOC_ERROR_CURSOR_INVALID_CURSOR71,1829
   MONGOC_ERROR_QUERY_FAILURE,MONGOC_ERROR_QUERY_FAILURE73,1869
   MONGOC_ERROR_BSON_INVALID,MONGOC_ERROR_BSON_INVALID75,1901
   MONGOC_ERROR_MATCHER_INVALID,MONGOC_ERROR_MATCHER_INVALID77,1932
   MONGOC_ERROR_NAMESPACE_INVALID,MONGOC_ERROR_NAMESPACE_INVALID79,1966
   MONGOC_ERROR_NAMESPACE_INVALID_FILTER_TYPE,MONGOC_ERROR_NAMESPACE_INVALID_FILTER_TYPE80,2001
   MONGOC_ERROR_COMMAND_INVALID_ARG,MONGOC_ERROR_COMMAND_INVALID_ARG82,2049
   MONGOC_ERROR_COLLECTION_INSERT_FAILED,MONGOC_ERROR_COLLECTION_INSERT_FAILED84,2087
   MONGOC_ERROR_COLLECTION_UPDATE_FAILED,MONGOC_ERROR_COLLECTION_UPDATE_FAILED85,2129
   MONGOC_ERROR_COLLECTION_DELETE_FAILED,MONGOC_ERROR_COLLECTION_DELETE_FAILED86,2171
   MONGOC_ERROR_COLLECTION_DOES_NOT_EXIST = 26,MONGOC_ERROR_COLLECTION_DOES_NOT_EXIST87,2213
   MONGOC_ERROR_GRIDFS_INVALID_FILENAME,MONGOC_ERROR_GRIDFS_INVALID_FILENAME89,2262
   MONGOC_ERROR_SCRAM_NOT_DONE,MONGOC_ERROR_SCRAM_NOT_DONE91,2304
   MONGOC_ERROR_SCRAM_PROTOCOL_ERROR,MONGOC_ERROR_SCRAM_PROTOCOL_ERROR92,2336
   MONGOC_ERROR_QUERY_COMMAND_NOT_FOUND = 59,MONGOC_ERROR_QUERY_COMMAND_NOT_FOUND94,2375
   MONGOC_ERROR_QUERY_NOT_TAILABLE = 13051,MONGOC_ERROR_QUERY_NOT_TAILABLE95,2421
   MONGOC_ERROR_SERVER_SELECTION_BAD_WIRE_VERSION,MONGOC_ERROR_SERVER_SELECTION_BAD_WIRE_VERSION97,2466
   MONGOC_ERROR_SERVER_SELECTION_FAILURE,MONGOC_ERROR_SERVER_SELECTION_FAILURE98,2517
   MONGOC_ERROR_SERVER_SELECTION_INVALID_ID,MONGOC_ERROR_SERVER_SELECTION_INVALID_ID99,2559
   MONGOC_ERROR_GRIDFS_CHUNK_MISSING,MONGOC_ERROR_GRIDFS_CHUNK_MISSING101,2605
   MONGOC_ERROR_PROTOCOL_ERROR = 17,MONGOC_ERROR_PROTOCOL_ERROR104,2677
   MONGOC_ERROR_WRITE_CONCERN_ERROR = 64,MONGOC_ERROR_WRITE_CONCERN_ERROR106,2715
} mongoc_error_code_t;mongoc_error_code_t107,2757

include/mongo/mongoc/mongoc-stream.h,1333
#define MONGOC_STREAM_HMONGOC_STREAM_H18,625
typedef struct _mongoc_stream_t mongoc_stream_t;mongoc_stream_t31,846
typedef struct _mongoc_stream_poll_t {_mongoc_stream_poll_t33,896
   mongoc_stream_t *stream;stream34,935
   int              events;events35,963
   int              revents;revents36,991
} mongoc_stream_poll_t;mongoc_stream_poll_t37,1020
struct _mongoc_stream_t_mongoc_stream_t39,1045
   int              type;type41,1071
   void             (*destroy)         (mongoc_stream_t *stream);destroy42,1097
   int              (*close)           (mongoc_stream_t *stream);close43,1163
   int              (*flush)           (mongoc_stream_t *stream);flush44,1229
   ssize_t          (*writev)          (mongoc_stream_t *stream,writev45,1295
   ssize_t          (*readv)           (mongoc_stream_t *stream,readv49,1559
   int              (*setsockopt)      (mongoc_stream_t *stream,setsockopt54,1891
   mongoc_stream_t *(*get_base_stream) (mongoc_stream_t *stream);get_base_stream59,2217
   bool             (*check_closed)    (mongoc_stream_t *stream);check_closed60,2283
   ssize_t          (*poll)            (mongoc_stream_poll_t *streams,poll61,2349
   void             (*failed)          (mongoc_stream_t *stream);failed64,2564
   void             *padding [5];padding65,2630

include/mongo/mongoc/mongoc-index.h,2145
#define MONGOC_INDEX_HMONGOC_INDEX_H18,618
{__anon2e470a77010830,817
   uint8_t twod_sphere_version;twod_sphere_version31,819
   uint8_t twod_bits_precision;twod_bits_precision32,851
   double  twod_location_min;twod_location_min33,883
   double  twod_location_max;twod_location_max34,913
   double  haystack_bucket_size;haystack_bucket_size35,943
   uint8_t *padding[32];padding36,976
} mongoc_index_opt_geo_t;mongoc_index_opt_geo_t37,1001
{__anon2e470a77020840,1043
   int type;type41,1045
} mongoc_index_opt_storage_t;mongoc_index_opt_storage_t42,1058
{__anon2e470a77030345,1102
   MONGOC_INDEX_STORAGE_OPT_MMAPV1,MONGOC_INDEX_STORAGE_OPT_MMAPV146,1104
   MONGOC_INDEX_STORAGE_OPT_WIREDTIGER,MONGOC_INDEX_STORAGE_OPT_WIREDTIGER47,1140
} mongoc_index_storage_opt_type_t;mongoc_index_storage_opt_type_t48,1180
{__anon2e470a77040851,1231
   mongoc_index_opt_storage_t  base;base52,1233
   const char                 *config_str;config_str53,1270
   void                       *padding[8];padding54,1313
} mongoc_index_opt_wt_t;mongoc_index_opt_wt_t55,1356
{__anon2e470a77050858,1397
   bool                        is_initialized;is_initialized59,1399
   bool                        background;background60,1446
   bool                        unique;unique61,1489
   const char                 *name;name62,1528
   bool                        drop_dups;drop_dups63,1565
   bool                        sparse;sparse64,1607
   int32_t                     expire_after_seconds;expire_after_seconds65,1646
   int32_t                     v;v66,1699
   const bson_t               *weights;weights67,1733
   const char                 *default_language;default_language68,1773
   const char                 *language_override;language_override69,1822
   mongoc_index_opt_geo_t     *geo_options;geo_options70,1872
   mongoc_index_opt_storage_t *storage_options;storage_options71,1916
   const bson_t               *partial_filter_expression;partial_filter_expression72,1964
   void                       *padding[5];padding73,2022
} mongoc_index_opt_t;mongoc_index_opt_t74,2065

include/mongo/mongoc/mongoc-write-command-private.h,2301
#define MONGOC_WRITE_COMMAND_PRIVATE_HMONGOC_WRITE_COMMAND_PRIVATE_H18,635
#define MONGOC_WRITE_COMMAND_DELETE MONGOC_WRITE_COMMAND_DELETE35,972
#define MONGOC_WRITE_COMMAND_INSERT MONGOC_WRITE_COMMAND_INSERT36,1010
#define MONGOC_WRITE_COMMAND_UPDATE MONGOC_WRITE_COMMAND_UPDATE37,1048
{__anoncc39a09e010341,1101
   MONGOC_BYPASS_DOCUMENT_VALIDATION_FALSE   = 0,MONGOC_BYPASS_DOCUMENT_VALIDATION_FALSE42,1103
   MONGOC_BYPASS_DOCUMENT_VALIDATION_TRUE    = 1 << 0,MONGOC_BYPASS_DOCUMENT_VALIDATION_TRUE43,1153
   MONGOC_BYPASS_DOCUMENT_VALIDATION_DEFAULT = 1 << 1,MONGOC_BYPASS_DOCUMENT_VALIDATION_DEFAULT44,1208
} mongoc_write_bypass_document_validation_t;mongoc_write_bypass_document_validation_t45,1263
struct _mongoc_bulk_write_flags_t_mongoc_bulk_write_flags_t47,1309
   bool ordered;ordered49,1345
   mongoc_write_bypass_document_validation_t bypass_document_validation;bypass_document_validation50,1362
{__anoncc39a09e020855,1455
   int      type;type56,1457
   uint32_t server_id;server_id57,1475
   bson_t  *documents;documents58,1498
   uint32_t n_documents;n_documents59,1521
   mongoc_bulk_write_flags_t flags;flags60,1546
   int64_t operation_id;operation_id61,1582
   union {__anoncc39a09e030a62,1607
      struct {__anoncc39a09e040863,1618
         bool multi;multi64,1633
      } delete_;delete_65,1654
      struct {__anoncc39a09e050866,1671
         bool allow_bulk_op_insert;allow_bulk_op_insert67,1686
      } insert;insert68,1722
   } u;u69,1738
} mongoc_write_command_t;mongoc_write_command_t70,1746
{__anoncc39a09e060874,1789
   bool         omit_nModified;omit_nModified76,1866
   uint32_t     nInserted;nInserted77,1898
   uint32_t     nMatched;nMatched78,1925
   uint32_t     nModified;nModified79,1951
   uint32_t     nRemoved;nRemoved80,1978
   uint32_t     nUpserted;nUpserted81,2004
   bson_t       writeErrors;writeErrors83,2081
   bson_t       upserted;upserted85,2174
   uint32_t     n_writeConcernErrors;n_writeConcernErrors87,2257
   bson_t       writeConcernErrors;writeConcernErrors88,2295
   bool         failed;failed89,2331
   bson_error_t error;error90,2355
   uint32_t     upsert_append_count;upsert_append_count91,2378
} mongoc_write_result_t;mongoc_write_result_t92,2415

include/mongo/mongoc/mongoc-memcmp.c,214
_mongoc_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,_mongoc_dummy_symbol_to_prevent_memcmp_lto22,901
mongoc_memcmp(const void * const b1_, const void * const b2_, size_t len)mongoc_memcmp34,1240

include/mongo/mongoc/mongoc-cursor.h,119
#define MONGOC_CURSOR_HMONGOC_CURSOR_H18,620
typedef struct _mongoc_cursor_t mongoc_cursor_t;mongoc_cursor_t31,836

include/mongo/mongoc/mongoc-async.c,312
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN25,734
mongoc_async_cmd (mongoc_async_t           *async,mongoc_async_cmd28,790
mongoc_async_new ()mongoc_async_new43,1419
mongoc_async_destroy (mongoc_async_t *async)mongoc_async_destroy51,1544
mongoc_async_run (mongoc_async_t *async,mongoc_async_run64,1751

include/mongo/mongoc/mongoc-thread-private.h,2398
#define MONGOC_THREAD_PRIVATE_HMONGOC_THREAD_PRIVATE_H18,627
# define MONGOC_MUTEX_INITIALIZER MONGOC_MUTEX_INITIALIZER31,879
# define mongoc_cond_t mongoc_cond_t32,945
# define mongoc_cond_broadcast mongoc_cond_broadcast33,1000
# define mongoc_cond_init(mongoc_cond_init34,1063
# define mongoc_cond_wait mongoc_cond_wait35,1133
# define mongoc_cond_signal mongoc_cond_signal36,1191
mongoc_cond_timedwait (pthread_cond_t  *cond,mongoc_cond_timedwait38,1274
# define mongoc_cond_destroy mongoc_cond_destroy55,1720
# define mongoc_mutex_t mongoc_mutex_t56,1781
# define mongoc_mutex_init(mongoc_mutex_init57,1837
# define mongoc_mutex_lock mongoc_mutex_lock58,1908
# define mongoc_mutex_unlock mongoc_mutex_unlock59,1967
# define mongoc_mutex_destroy mongoc_mutex_destroy60,2028
# define mongoc_thread_t mongoc_thread_t61,2090
# define mongoc_thread_create(mongoc_thread_create62,2140
# define mongoc_thread_join(mongoc_thread_join63,2219
# define mongoc_once_t mongoc_once_t64,2284
# define mongoc_once mongoc_once65,2339
# define MONGOC_ONCE_FUN(MONGOC_ONCE_FUN66,2392
# define MONGOC_ONCE_RETURN MONGOC_ONCE_RETURN67,2445
#  define MONGOC_ONCE_INIT MONGOC_ONCE_INIT69,2532
#  define MONGOC_ONCE_INIT MONGOC_ONCE_INIT71,2599
# define mongoc_thread_t mongoc_thread_t74,2671
mongoc_thread_create (mongoc_thread_t *thread,mongoc_thread_create76,2741
# define mongoc_thread_join(mongoc_thread_join83,2972
# define mongoc_mutex_t mongoc_mutex_t84,3048
# define mongoc_mutex_init mongoc_mutex_init85,3105
# define mongoc_mutex_lock mongoc_mutex_lock86,3171
# define mongoc_mutex_unlock mongoc_mutex_unlock87,3232
# define mongoc_mutex_destroy mongoc_mutex_destroy88,3293
# define mongoc_cond_t mongoc_cond_t89,3355
# define mongoc_cond_init mongoc_cond_init90,3414
# define mongoc_cond_wait(mongoc_cond_wait91,3482
mongoc_cond_timedwait (mongoc_cond_t  *cond,mongoc_cond_timedwait93,3589
# define mongoc_cond_signal mongoc_cond_signal111,4000
# define mongoc_cond_broadcast mongoc_cond_broadcast112,4062
mongoc_cond_destroy (mongoc_cond_t *_ignored)mongoc_cond_destroy114,4150
# define mongoc_once_t mongoc_once_t118,4213
# define MONGOC_ONCE_INIT MONGOC_ONCE_INIT119,4263
# define mongoc_once(mongoc_once120,4325
# define MONGOC_ONCE_FUN(MONGOC_ONCE_FUN121,4403
# define MONGOC_ONCE_RETURN MONGOC_ONCE_RETURN122,4519

include/mongo/mongoc/mongoc-socket.c,2366
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,860
#define OPERATION_EXPIRED(OPERATION_EXPIRED32,897
_mongoc_socket_setnonblock (SOCKET sd)_mongoc_socket_setnonblock54,1386
_mongoc_socket_wait (SOCKET   sd,           /* IN */_mongoc_socket_wait97,2398
mongoc_socket_poll (mongoc_socket_poll_t *sds,          /* IN */mongoc_socket_poll205,4819
_mongoc_socket_setnodelay (SOCKET sd) /* IN */_mongoc_socket_setnodelay259,5886
mongoc_socket_errno (mongoc_socket_t *sock) /* IN */mongoc_socket_errno304,6704
_mongoc_socket_capture_errno (mongoc_socket_t *sock) /* IN */_mongoc_socket_capture_errno329,7188
_mongoc_socket_errno_is_again (mongoc_socket_t *sock) /* IN */_mongoc_socket_errno_is_again358,7842
mongoc_socket_accept (mongoc_socket_t *sock,      /* IN */mongoc_socket_accept384,8534
mongoc_socket_accept_ex (mongoc_socket_t *sock,      /* IN */mongoc_socket_accept_ex409,9197
mongoc_socket_bind (mongoc_socket_t       *sock,    /* IN */mongoc_socket_bind488,10847
mongoc_socket_close (mongoc_socket_t *sock) /* IN */mongoc_socket_close529,11745
mongoc_socket_connect (mongoc_socket_t       *sock,      /* IN */mongoc_socket_connect579,12773
mongoc_socket_destroy (mongoc_socket_t *sock) /* IN */mongoc_socket_destroy647,14376
mongoc_socket_listen (mongoc_socket_t *sock,    /* IN */mongoc_socket_listen675,14950
mongoc_socket_new (int domain,   /* IN */mongoc_socket_new716,15670
mongoc_socket_recv (mongoc_socket_t *sock,      /* IN */mongoc_socket_recv788,17108
mongoc_socket_setsockopt (mongoc_socket_t *sock,    /* IN */mongoc_socket_setsockopt847,18396
mongoc_socket_send (mongoc_socket_t *sock,      /* IN */mongoc_socket_send888,19453
_mongoc_socket_try_sendv_slow (mongoc_socket_t *sock,   /* IN */_mongoc_socket_try_sendv_slow926,20460
_mongoc_socket_try_sendv (mongoc_socket_t *sock,   /* IN */_mongoc_socket_try_sendv986,21809
mongoc_socket_sendv (mongoc_socket_t  *sock,      /* IN */mongoc_socket_sendv1079,24043
mongoc_socket_getsockname (mongoc_socket_t *sock,    /* IN */mongoc_socket_getsockname1170,26611
mongoc_socket_getnameinfo (mongoc_socket_t *sock) /* IN */mongoc_socket_getnameinfo1189,26969
mongoc_socket_check_closed (mongoc_socket_t *sock) /* IN */mongoc_socket_check_closed1211,27387
mongoc_socket_inet_ntop (struct addrinfo *rp,        /* IN */mongoc_socket_inet_ntop1253,28194

include/mongo/mongoc/mongoc-rpc.c,3031
#define RPC(RPC25,696
#define INT32_FIELD(INT32_FIELD36,985
#define ENUM_FIELD ENUM_FIELD42,1188
#define INT64_FIELD(INT64_FIELD43,1219
#define CSTRING_FIELD(CSTRING_FIELD49,1422
#define BSON_FIELD(BSON_FIELD56,1673
#define BSON_OPTIONAL(BSON_OPTIONAL67,2017
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD69,2086
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD77,2359
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD87,2697
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD93,2919
#define RPC(RPC132,3795
#define INT32_FIELD(INT32_FIELD139,3954
#define ENUM_FIELD ENUM_FIELD141,4032
#define INT64_FIELD(INT64_FIELD142,4063
#define CSTRING_FIELD(CSTRING_FIELD144,4141
#define BSON_FIELD(BSON_FIELD145,4170
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD146,4196
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD147,4228
#define BSON_OPTIONAL(BSON_OPTIONAL148,4261
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD150,4330
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD151,4362
#define RPC(RPC173,4858
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD180,5019
#define RPC(RPC215,5755
#define INT32_FIELD(INT32_FIELD222,5910
#define ENUM_FIELD(ENUM_FIELD224,5983
#define INT64_FIELD(INT64_FIELD226,6055
#define CSTRING_FIELD(CSTRING_FIELD228,6146
#define BSON_FIELD(BSON_FIELD230,6221
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD243,6579
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD256,6999
#define BSON_OPTIONAL(BSON_OPTIONAL270,7410
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD272,7479
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD283,7760
#define RPC(RPC316,8457
#define INT32_FIELD(INT32_FIELD328,8784
#define ENUM_FIELD ENUM_FIELD335,8930
#define INT64_FIELD(INT64_FIELD336,8961
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD343,9107
#define CSTRING_FIELD(CSTRING_FIELD360,9537
#define BSON_FIELD(BSON_FIELD377,9953
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD392,10314
#define BSON_OPTIONAL(BSON_OPTIONAL397,10455
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD401,10532
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD408,10750
_mongoc_rpc_gather (mongoc_rpc_t   *rpc,_mongoc_rpc_gather440,11352
_mongoc_rpc_swab_to_le (mongoc_rpc_t *rpc)_mongoc_rpc_swab_to_le476,12391
_mongoc_rpc_swab_from_le (mongoc_rpc_t *rpc)_mongoc_rpc_swab_from_le517,13426
_mongoc_rpc_printf (mongoc_rpc_t *rpc)_mongoc_rpc_printf558,14512
_mongoc_rpc_scatter (mongoc_rpc_t  *rpc,_mongoc_rpc_scatter593,15442
_mongoc_rpc_reply_get_first (mongoc_rpc_reply_t *reply,_mongoc_rpc_reply_get_first636,16772
_mongoc_rpc_needs_gle (mongoc_rpc_t                 *rpc,_mongoc_rpc_needs_gle676,17723
_mongoc_rpc_prep_command (mongoc_rpc_t        *rpc,_mongoc_rpc_prep_command715,18740
_mongoc_populate_error (const bson_t *doc,_mongoc_populate_error740,19642
_mongoc_rpc_parse_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_error781,20636
bool _mongoc_rpc_parse_command_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_command_error861,23021
bool _mongoc_rpc_parse_query_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_query_error886,23735

include/mongo/mongoc/mongoc-util.c,340
_mongoc_hex_md5 (const char *input)_mongoc_hex_md525,687
_mongoc_usleep (int64_t usec)_mongoc_usleep46,1133
_mongoc_get_command_name (const bson_t *command)_mongoc_get_command_name67,1532
_mongoc_get_db_name (const char *ns,_mongoc_get_db_name107,2369
_mongoc_bson_destroy_if_set (bson_t *bson)_mongoc_bson_destroy_if_set126,2724

include/mongo/mongoc/mongoc-host-list.c,186
_mongoc_host_list_equal (const mongoc_host_list_t *host_a,_mongoc_host_list_equal36,1037
_mongoc_host_list_destroy_all (mongoc_host_list_t *host)_mongoc_host_list_destroy_all54,1536

include/mongo/mongoc/mongoc-read-prefs.h,682
#define MONGOC_READ_PREFS_HMONGOC_READ_PREFS_H18,624
typedef struct _mongoc_read_prefs_t mongoc_read_prefs_t;mongoc_read_prefs_t30,814
{__anone36e5cc8010334,886
   MONGOC_READ_PRIMARY             = (1 << 0),MONGOC_READ_PRIMARY35,888
   MONGOC_READ_SECONDARY           = (1 << 1),MONGOC_READ_SECONDARY36,935
   MONGOC_READ_PRIMARY_PREFERRED   = (1 << 2) | MONGOC_READ_PRIMARY,MONGOC_READ_PRIMARY_PREFERRED37,982
   MONGOC_READ_SECONDARY_PREFERRED = (1 << 2) | MONGOC_READ_SECONDARY,MONGOC_READ_SECONDARY_PREFERRED38,1051
   MONGOC_READ_NEAREST             = (1 << 3) | MONGOC_READ_SECONDARY,MONGOC_READ_NEAREST39,1122
} mongoc_read_mode_t;mongoc_read_mode_t40,1193

include/mongo/mongoc/mongoc-opcode-private.h,63
#define MONGOC_OPCODE_PRIVATE_HMONGOC_OPCODE_PRIVATE_H18,628

include/mongo/mongoc/mongoc-stream-tls-secure-transport-private.h,371
#define MONGOC_STREAM_TLS_SECURE_TRANSPORT_PRIVATE_HMONGOC_STREAM_TLS_SECURE_TRANSPORT_PRIVATE_H18,649
{__anond283af61010838,1048
    SSLContextRef      ssl_ctx_ref;ssl_ctx_ref39,1050
    CFArrayRef         anchors;anchors40,1086
    CFMutableArrayRef  my_cert;my_cert41,1118
} mongoc_stream_tls_secure_transport_t;mongoc_stream_tls_secure_transport_t42,1150

include/mongo/mongoc/mongoc-iovec.h,185
#define MONGOC_IOVEC_HMONGOC_IOVEC_H19,620
{__anon31e192d5010835,783
   u_long  iov_len;iov_len36,785
   char   *iov_base;iov_base37,805
} mongoc_iovec_t;mongoc_iovec_t38,826

include/mongo/mongoc/op-update.def,0

include/mongo/mongoc/mongoc-gridfs-file.c,1928
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
#define MONGOC_GRIDFS_FILE_STR_ACCESSOR(MONGOC_GRIDFS_FILE_STR_ACCESSOR56,1671
#define MONGOC_GRIDFS_FILE_BSON_ACCESSOR(MONGOC_GRIDFS_FILE_BSON_ACCESSOR73,2173
MONGOC_GRIDFS_FILE_STR_ACCESSOR (filename)MONGOC_GRIDFS_FILE_STR_ACCESSOR97,2855
_mongoc_gridfs_file_new_from_bson (mongoc_gridfs_t *gridfs,_mongoc_gridfs_file_new_from_bson183,5050
_mongoc_gridfs_file_new (mongoc_gridfs_t          *gridfs,_mongoc_gridfs_file_new281,8005
mongoc_gridfs_file_destroy (mongoc_gridfs_file_t *file)mongoc_gridfs_file_destroy344,9359
mongoc_gridfs_file_readv (mongoc_gridfs_file_t *file,mongoc_gridfs_file_readv402,10335
mongoc_gridfs_file_writev (mongoc_gridfs_file_t *file,mongoc_gridfs_file_writev467,12180
_mongoc_gridfs_file_extend (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_extend548,14427
_mongoc_gridfs_file_flush_page (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_flush_page605,15748
_mongoc_gridfs_file_keep_cursor (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_keep_cursor661,17082
_mongoc_gridfs_file_refresh_page (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_refresh_page705,18533
mongoc_gridfs_file_seek (mongoc_gridfs_file_t *file,mongoc_gridfs_file_seek854,23486
mongoc_gridfs_file_tell (mongoc_gridfs_file_t *file)mongoc_gridfs_file_tell908,24688
mongoc_gridfs_file_error (mongoc_gridfs_file_t *file,mongoc_gridfs_file_error916,24795
mongoc_gridfs_file_get_id (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_id935,25242
mongoc_gridfs_file_get_length (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_length943,25361
mongoc_gridfs_file_get_chunk_size (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_chunk_size951,25481
mongoc_gridfs_file_get_upload_date (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_upload_date959,25609
mongoc_gridfs_file_remove (mongoc_gridfs_file_t *file,mongoc_gridfs_file_remove967,25736

include/mongo/mongoc/mongoc-stream-tls.c,517
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN40,1150
mongoc_stream_tls_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_do_handshake51,1328
mongoc_stream_tls_should_retry (mongoc_stream_t *stream)mongoc_stream_tls_should_retry69,1771
mongoc_stream_tls_should_read (mongoc_stream_t *stream)mongoc_stream_tls_should_read89,2191
mongoc_stream_tls_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_check_cert110,2624
mongoc_stream_tls_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_new146,3644

include/mongo/mongoc/mongoc-queue.c,394
_mongoc_queue_init (mongoc_queue_t *queue)_mongoc_queue_init24,659
_mongoc_queue_push_head (mongoc_queue_t *queue,_mongoc_queue_push_head33,775
_mongoc_queue_push_tail (mongoc_queue_t *queue,_mongoc_queue_push_tail54,1151
_mongoc_queue_pop_head (mongoc_queue_t *queue)_mongoc_queue_pop_head76,1543
_mongoc_queue_get_length (const mongoc_queue_t *queue)_mongoc_queue_get_length97,1878

include/mongo/mongoc/mongoc-topology-private.h,2597
#define MONGOC_TOPOLOGY_PRIVATE_HMONGOC_TOPOLOGY_PRIVATE_H18,630
#define MONGOC_TOPOLOGY_MIN_HEARTBEAT_FREQUENCY_MS MONGOC_TOPOLOGY_MIN_HEARTBEAT_FREQUENCY_MS27,905
#define MONGOC_TOPOLOGY_SOCKET_CHECK_INTERVAL_MS MONGOC_TOPOLOGY_SOCKET_CHECK_INTERVAL_MS28,960
#define MONGOC_TOPOLOGY_COOLDOWN_MS MONGOC_TOPOLOGY_COOLDOWN_MS29,1014
#define MONGOC_TOPOLOGY_LOCAL_THRESHOLD_MS MONGOC_TOPOLOGY_LOCAL_THRESHOLD_MS30,1055
#define MONGOC_TOPOLOGY_SERVER_SELECTION_TIMEOUT_MS MONGOC_TOPOLOGY_SERVER_SELECTION_TIMEOUT_MS31,1104
#define MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_MULTI_THREADED MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_MULTI_THREADED32,1162
#define MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_SINGLE_THREADED MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_SINGLE_THREADED33,1230
typedef enum {__anon1e5d9dc4010335,1300
   MONGOC_TOPOLOGY_BG_OFF,MONGOC_TOPOLOGY_BG_OFF36,1315
   MONGOC_TOPOLOGY_BG_RUNNING,MONGOC_TOPOLOGY_BG_RUNNING37,1342
   MONGOC_TOPOLOGY_BG_SHUTTING_DOWN,MONGOC_TOPOLOGY_BG_SHUTTING_DOWN38,1373
} mongoc_topology_bg_state_t;mongoc_topology_bg_state_t39,1410
typedef struct _mongoc_topology_t_mongoc_topology_t41,1441
   mongoc_topology_description_t description;description43,1477
   mongoc_uri_t                 *uri;uri44,1523
   mongoc_topology_scanner_t    *scanner;scanner45,1561
   bool                          server_selection_try_once;server_selection_try_once46,1603
   int64_t                       last_scan;last_scan48,1664
   int64_t                       local_threshold_msec;local_threshold_msec49,1708
   int64_t                       connect_timeout_msec;connect_timeout_msec50,1763
   int64_t                       server_selection_timeout_msec;server_selection_timeout_msec51,1818
   int64_t                       heartbeat_msec;heartbeat_msec52,1882
   mongoc_mutex_t                mutex;mutex54,1932
   mongoc_cond_t                 cond_client;cond_client55,1972
   mongoc_cond_t                 cond_server;cond_server56,2018
   mongoc_thread_t               thread;thread57,2064
   mongoc_topology_bg_state_t    bg_thread_state;bg_thread_state59,2106
   bool                          scan_requested;scan_requested60,2156
   bool                          scanning;scanning61,2205
   bool                          got_ismaster;got_ismaster62,2248
   bool                          shutdown_requested;shutdown_requested63,2295
   bool                          single_threaded;single_threaded64,2348
   bool                          stale;stale65,2398
} mongoc_topology_t;mongoc_topology_t66,2438

include/mongo/mongoc/mongoc-memcmp-private.h,63
#define MONGOC_MEMCMP_PRIVATE_HMONGOC_MEMCMP_PRIVATE_H18,627

include/mongo/mongoc/op-insert.def,0

include/mongo/mongoc/mongoc-set-private.h,676
#define MONGOC_SET_PRIVATE_HMONGOC_SET_PRIVATE_H18,625
typedef void (*mongoc_set_item_dtor)(void *item,mongoc_set_item_dtor28,820
typedef bool (*mongoc_set_for_each_cb_t)(void *item,mongoc_set_for_each_cb_t32,974
{__anon6fcd06b3010836,1096
   uint32_t id;id37,1098
   void    *item;item38,1114
} mongoc_set_item_t;mongoc_set_item_t39,1132
{__anon6fcd06b3020842,1169
   mongoc_set_item_t   *items;items43,1171
   size_t               items_len;items_len44,1202
   size_t               items_allocated;items_allocated45,1237
   mongoc_set_item_dtor dtor;dtor46,1278
   void                *dtor_ctx;dtor_ctx47,1308
} mongoc_set_t;mongoc_set_t48,1342

include/mongo/mongoc/mongoc-client.h,459
#define MONGOC_CLIENT_HMONGOC_CLIENT_H18,620
#define MONGOC_NAMESPACE_MAX MONGOC_NAMESPACE_MAX47,1243
#define MONGOC_DEFAULT_CONNECTTIMEOUTMS MONGOC_DEFAULT_CONNECTTIMEOUTMS51,1318
#define MONGOC_DEFAULT_SOCKETTIMEOUTMS MONGOC_DEFAULT_SOCKETTIMEOUTMS64,1711
typedef struct _mongoc_client_t mongoc_client_t;mongoc_client_t74,1907
typedef mongoc_stream_t *(*mongoc_stream_initiator_t) (const mongoc_uri_t       *uri,mongoc_stream_initiator_t93,2585

include/mongo/mongoc/mongoc-version-functions.h,69
#define MONGOC_VERSION_FUNCTIONS_HMONGOC_VERSION_FUNCTIONS_H24,754

include/mongo/mongoc/mongoc-client-pool.c,1641
struct _mongoc_client_pool_t_mongoc_client_pool_t29,907
   mongoc_mutex_t          mutex;mutex31,938
   mongoc_cond_t           cond;cond32,972
   mongoc_queue_t          queue;queue33,1005
   mongoc_topology_t      *topology;topology34,1039
   mongoc_uri_t           *uri;uri35,1076
   uint32_t                min_pool_size;min_pool_size36,1108
   uint32_t                max_pool_size;max_pool_size37,1150
   uint32_t                size;size38,1192
   bool                    ssl_opts_set;ssl_opts_set40,1250
   mongoc_ssl_opt_t        ssl_opts;ssl_opts41,1291
   mongoc_apm_callbacks_t  apm_callbacks;apm_callbacks43,1335
   void                   *apm_context;apm_context44,1377
mongoc_client_pool_set_ssl_opts (mongoc_client_pool_t   *pool,mongoc_client_pool_set_ssl_opts50,1452
mongoc_client_pool_new (const mongoc_uri_t *uri)mongoc_client_pool_new74,2003
mongoc_client_pool_destroy (mongoc_client_pool_t *pool)mongoc_client_pool_destroy125,3205
mongoc_client_pool_pop (mongoc_client_pool_t *pool)mongoc_client_pool_pop152,3751
mongoc_client_pool_try_pop (mongoc_client_pool_t *pool)mongoc_client_pool_try_pop188,4666
mongoc_client_pool_push (mongoc_client_pool_t *pool,mongoc_client_pool_push217,5271
mongoc_client_pool_get_size (mongoc_client_pool_t *pool)mongoc_client_pool_get_size246,5961
mongoc_client_pool_max_size(mongoc_client_pool_t *pool,mongoc_client_pool_max_size260,6177
mongoc_client_pool_min_size(mongoc_client_pool_t *pool,mongoc_client_pool_min_size273,6445
mongoc_client_pool_set_apm_callbacks (mongoc_client_pool_t   *pool,mongoc_client_pool_set_apm_callbacks286,6713

include/mongo/mongoc/mongoc-util-private.h,231
#define MONGOC_UTIL_PRIVATE_HMONGOC_UTIL_PRIVATE_H18,626
# define strcasecmp strcasecmp28,864
# define strncasecmp strncasecmp29,894
# define _ignore_value(_ignore_value34,1061
# define _ignore_value(_ignore_value36,1139

include/mongo/mongoc/mongoc-init.c,595
mongoc_sasl_mutex_alloc (void)mongoc_sasl_mutex_alloc38,1000
mongoc_sasl_mutex_lock (void *mutex)mongoc_sasl_mutex_lock50,1201
mongoc_sasl_mutex_unlock (void *mutex)mongoc_sasl_mutex_unlock59,1324
mongoc_sasl_mutex_free (void *mutex)mongoc_sasl_mutex_free68,1452
static MONGOC_ONCE_FUN( _mongoc_do_init)MONGOC_ONCE_FUN77,1597
mongoc_init (void)mongoc_init121,2499
static MONGOC_ONCE_FUN( _mongoc_do_cleanup)MONGOC_ONCE_FUN127,2613
mongoc_cleanup (void)mongoc_cleanup152,2996
_mongoc_init_ctor (void)_mongoc_init_ctor165,3379
_mongoc_init_dtor (void)_mongoc_init_dtor172,3506

include/mongo/mongoc/mongoc-collection.h,140
#define MONGOC_COLLECTION_HMONGOC_COLLECTION_H18,629
typedef struct _mongoc_collection_t mongoc_collection_t;mongoc_collection_t39,1068

include/mongo/mongoc/mongoc.h,76
#define MONGOC_HMONGOC_H19,614
#define MONGOC_INSIDEMONGOC_INSIDE24,652

include/mongo/mongoc/mongoc-uri.h,162
#define MONGOC_URI_HMONGOC_URI_H18,617
# define MONGOC_DEFAULT_PORT MONGOC_DEFAULT_PORT33,938
typedef struct _mongoc_uri_t mongoc_uri_t;mongoc_uri_t40,1001

include/mongo/mongoc/mongoc-matcher.c,564
_mongoc_matcher_parse_compare (bson_iter_t  *iter,  /* IN */_mongoc_matcher_parse_compare55,1618
_mongoc_matcher_parse (bson_iter_t  *iter,  /* IN */_mongoc_matcher_parse148,5137
_mongoc_matcher_parse_logical (mongoc_matcher_opcode_t  opcode,  /* IN */_mongoc_matcher_parse_logical217,7222
mongoc_matcher_new (const bson_t *query, /* IN */mongoc_matcher_new322,10154
mongoc_matcher_match (const mongoc_matcher_t *matcher,  /* IN */mongoc_matcher_match372,11253
mongoc_matcher_destroy (mongoc_matcher_t *matcher) /* IN */mongoc_matcher_destroy400,11868

include/mongo/mongoc/mongoc-server-description-private.h,2778
#define MONGOC_SERVER_DESCRIPTION_PRIVATE_HMONGOC_SERVER_DESCRIPTION_PRIVATE_H18,640
#define MONGOC_DEFAULT_WIRE_VERSION MONGOC_DEFAULT_WIRE_VERSION23,726
#define MONGOC_DEFAULT_WRITE_BATCH_SIZE MONGOC_DEFAULT_WRITE_BATCH_SIZE24,764
#define MONGOC_DEFAULT_BSON_OBJ_SIZE MONGOC_DEFAULT_BSON_OBJ_SIZE25,809
#define MONGOC_DEFAULT_MAX_MSG_SIZE MONGOC_DEFAULT_MAX_MSG_SIZE26,863
#define MONGOC_NO_SET_VERSION MONGOC_NO_SET_VERSION29,981
   {__anon878a71ef010332,1028
      MONGOC_SERVER_UNKNOWN,MONGOC_SERVER_UNKNOWN33,1033
      MONGOC_SERVER_STANDALONE,MONGOC_SERVER_STANDALONE34,1062
      MONGOC_SERVER_MONGOS,MONGOC_SERVER_MONGOS35,1094
      MONGOC_SERVER_POSSIBLE_PRIMARY,MONGOC_SERVER_POSSIBLE_PRIMARY36,1122
      MONGOC_SERVER_RS_PRIMARY,MONGOC_SERVER_RS_PRIMARY37,1160
      MONGOC_SERVER_RS_SECONDARY,MONGOC_SERVER_RS_SECONDARY38,1192
      MONGOC_SERVER_RS_ARBITER,MONGOC_SERVER_RS_ARBITER39,1226
      MONGOC_SERVER_RS_OTHER,MONGOC_SERVER_RS_OTHER40,1258
      MONGOC_SERVER_RS_GHOST,MONGOC_SERVER_RS_GHOST41,1288
      MONGOC_SERVER_DESCRIPTION_TYPES,MONGOC_SERVER_DESCRIPTION_TYPES42,1318
   } mongoc_server_description_type_t;mongoc_server_description_type_t43,1357
struct _mongoc_server_description_t_mongoc_server_description_t45,1397
   uint32_t                         id;id47,1435
   mongoc_host_list_t               host;host48,1475
   int64_t                          round_trip_time;round_trip_time49,1517
   bson_t                           last_is_master;last_is_master50,1570
   bool                             has_is_master;has_is_master51,1622
   const char                      *connection_address;connection_address52,1673
   const char                      *me;me53,1729
   const char                      *set_name;set_name57,1911
   bson_error_t                     error;error58,1957
   mongoc_server_description_type_t type;type59,2000
   int32_t                          min_wire_version;min_wire_version61,2043
   int32_t                          max_wire_version;max_wire_version62,2097
   int32_t                          max_msg_size;max_msg_size63,2151
   int32_t                          max_bson_obj_size;max_bson_obj_size64,2201
   int32_t                          max_write_batch_size;max_write_batch_size65,2256
   bson_t                           hosts;hosts67,2315
   bson_t                           passives;passives68,2358
   bson_t                           arbiters;arbiters69,2404
   bson_t                           tags;tags71,2451
   const char                      *current_primary;current_primary72,2493
   int64_t                          set_version;set_version73,2546
   bson_oid_t                       election_id;election_id74,2595

include/mongo/mongoc/mongoc-apm-private.h,1976
#define MONGOC_APM_PRIVATE_HMONGOC_APM_PRIVATE_H18,625
struct _mongoc_apm_callbacks_t_mongoc_apm_callbacks_t29,838
   mongoc_apm_command_started_cb_t    started;started31,871
   mongoc_apm_command_succeeded_cb_t  succeeded;succeeded32,918
   mongoc_apm_command_failed_cb_t     failed;failed33,967
struct _mongoc_apm_command_started_t_mongoc_apm_command_started_t36,1017
   bson_t                   *command;command38,1056
   bool                      command_owned;command_owned39,1094
   const char               *database_name;database_name40,1138
   const char               *command_name;command_name41,1182
   int64_t                   request_id;request_id42,1225
   int64_t                   operation_id;operation_id43,1266
   const mongoc_host_list_t *host;host44,1309
   uint32_t                  server_id;server_id45,1344
   void                     *context;context46,1384
struct _mongoc_apm_command_succeeded_t_mongoc_apm_command_succeeded_t49,1426
   int64_t                   duration;duration51,1467
   const bson_t             *reply;reply52,1506
   const char               *command_name;command_name53,1542
   int64_t                   request_id;request_id54,1585
   int64_t                   operation_id;operation_id55,1626
   const mongoc_host_list_t *host;host56,1669
   uint32_t                  server_id;server_id57,1704
   void                     *context;context58,1744
struct _mongoc_apm_command_failed_t_mongoc_apm_command_failed_t61,1786
   int64_t                   duration;duration63,1824
   const char               *command_name;command_name64,1863
   const bson_error_t       *error;error65,1906
   int64_t                   request_id;request_id66,1942
   int64_t                   operation_id;operation_id67,1983
   const mongoc_host_list_t *host;host68,2026
   uint32_t                  server_id;server_id69,2061
   void                     *context;context70,2101

include/mongo/mongoc/mongoc-stream-file.c,1073
struct _mongoc_stream_file_t_mongoc_stream_file_t34,871
   mongoc_stream_t vtable;vtable36,902
   int             fd;fd37,929
_mongoc_stream_file_close (mongoc_stream_t *stream)_mongoc_stream_file_close42,968
_mongoc_stream_file_destroy (mongoc_stream_t *stream)_mongoc_stream_file_destroy66,1325
_mongoc_stream_file_failed (mongoc_stream_t *stream)_mongoc_stream_file_failed85,1595
_mongoc_stream_file_flush (mongoc_stream_t *stream) /* IN */_mongoc_stream_file_flush96,1727
_mongoc_stream_file_readv (mongoc_stream_t *stream,       /* IN */_mongoc_stream_file_readv115,2033
_mongoc_stream_file_writev (mongoc_stream_t *stream,       /* IN */_mongoc_stream_file_writev154,2996
_mongoc_stream_file_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_file_check_closed182,3703
mongoc_stream_file_new (int fd) /* IN */mongoc_stream_file_new189,3812
mongoc_stream_file_new_for_path (const char *path,  /* IN */mongoc_stream_file_new_for_path211,4502
mongoc_stream_file_get_fd (mongoc_stream_file_t *stream)mongoc_stream_file_get_fd236,4976

include/mongo/mongoc/mongoc-buffer.c,681
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN27,750
# define MONGOC_BUFFER_DEFAULT_SIZE MONGOC_BUFFER_DEFAULT_SIZE30,821
#define SPACE_FOR(SPACE_FOR34,871
_mongoc_buffer_init (mongoc_buffer_t   *buffer,_mongoc_buffer_init51,1434
_mongoc_buffer_destroy (mongoc_buffer_t *buffer)_mongoc_buffer_destroy90,2311
_mongoc_buffer_clear (mongoc_buffer_t *buffer,_mongoc_buffer_clear112,2860
_mongoc_buffer_append_from_stream (mongoc_buffer_t *buffer,_mongoc_buffer_append_from_stream141,3658
_mongoc_buffer_fill (mongoc_buffer_t *buffer,_mongoc_buffer_fill202,5472
_mongoc_buffer_try_append_from_stream (mongoc_buffer_t *buffer,_mongoc_buffer_try_append_from_stream284,7930

include/mongo/mongoc/mongoc-array-private.h,496
#define MONGOC_ARRAY_PRIVATE_HMONGOC_ARRAY_PRIVATE_H18,627
typedef struct _mongoc_array_t mongoc_array_t;mongoc_array_t30,826
struct _mongoc_array_t_mongoc_array_t33,875
   size_t  len;len35,900
   size_t  element_size;element_size36,916
   size_t  allocated;allocated37,941
   void   *data;data38,963
#define _mongoc_array_append_val(_mongoc_array_append_val42,985
#define _mongoc_array_index(_mongoc_array_index43,1060
#define _mongoc_array_clear(_mongoc_array_clear44,1120

include/mongo/mongoc/mongoc-gridfs-file-page-private.h,352
#define MONGOC_GRIDFS_FILE_PAGE_PRIVATE_HMONGOC_GRIDFS_FILE_PAGE_PRIVATE_H18,637
struct _mongoc_gridfs_file_page_t_mongoc_gridfs_file_page_t32,880
   const uint8_t *read_buf;read_buf34,916
   uint8_t       *buf;buf35,944
   uint32_t       len;len36,967
   uint32_t       chunk_size;chunk_size37,990
   uint32_t       offset;offset38,1020

include/mongo/mongoc/mongoc-database.h,234
#define MONGOC_DATABASE_HMONGOC_DATABASE_H18,622
typedef struct _mongoc_collection_t mongoc_collection_t;  /* forward decl */mongoc_collection_t36,962
typedef struct _mongoc_database_t mongoc_database_t;mongoc_database_t37,1039

include/mongo/mongoc/mongoc-buffer-private.h,466
#define MONGOC_BUFFER_PRIVATE_HMONGOC_BUFFER_PRIVATE_H18,628
typedef struct _mongoc_buffer_t mongoc_buffer_t;mongoc_buffer_t32,856
struct _mongoc_buffer_t_mongoc_buffer_t35,907
   uint8_t            *data;data37,933
   size_t              datalen;datalen38,962
   off_t               off;off39,994
   size_t              len;len40,1022
   bson_realloc_func   realloc_func;realloc_func41,1050
   void               *realloc_data;realloc_data42,1087

include/mongo/mongoc/mongoc-server-description.c,2309
#define ALPHA ALPHA27,846
static uint8_t kMongocEmptyBson[] = { 5, 0, 0, 0, 0 };kMongocEmptyBson30,866
static bson_oid_t kObjectIdZero = { {0} };kObjectIdZero32,922
mongoc_server_description_cleanup (mongoc_server_description_t *sd)mongoc_server_description_cleanup36,1044
mongoc_server_description_reset (mongoc_server_description_t *sd)mongoc_server_description_reset46,1306
mongoc_server_description_init (mongoc_server_description_t *sd,mongoc_server_description_init83,2406
mongoc_server_description_destroy (mongoc_server_description_t *description)mongoc_server_description_destroy143,4117
mongoc_server_description_has_rs_member(mongoc_server_description_t *server,mongoc_server_description_has_rs_member171,4697
mongoc_server_description_has_set_version (mongoc_server_description_t *description)mongoc_server_description_has_set_version211,5770
mongoc_server_description_has_election_id (mongoc_server_description_t *description)mongoc_server_description_has_election_id230,6292
mongoc_server_description_id (mongoc_server_description_t *description)mongoc_server_description_id249,6745
mongoc_server_description_host (mongoc_server_description_t *description)mongoc_server_description_host268,7237
mongoc_server_description_type (mongoc_server_description_t *description)mongoc_server_description_type288,7710
mongoc_server_description_ismaster (mongoc_server_description_t *description)mongoc_server_description_ismaster330,8892
mongoc_server_description_set_state (mongoc_server_description_t *description,mongoc_server_description_set_state345,9283
mongoc_server_description_set_set_version (mongoc_server_description_t *description,mongoc_server_description_set_set_version364,9783
mongoc_server_description_set_election_id (mongoc_server_description_t *description,mongoc_server_description_set_election_id384,10371
mongoc_server_description_update_rtt (mongoc_server_description_t *server,mongoc_server_description_update_rtt408,11081
mongoc_server_description_handle_ismaster (mongoc_server_description_handle_ismaster427,11667
mongoc_server_description_new_copy (const mongoc_server_description_t *description)mongoc_server_description_new_copy572,17644
mongoc_server_description_filter_eligible (mongoc_server_description_filter_eligible624,19445

include/mongo/mongoc/mongoc-stream-tls-openssl.c,1871
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN41,1136
#define MONGOC_STREAM_TLS_OPENSSL_BUFFER_SIZE MONGOC_STREAM_TLS_OPENSSL_BUFFER_SIZE43,1184
static BIO_METHOD gMongocStreamTlsOpenSslRawMethods = {gMongocStreamTlsOpenSslRawMethods46,1276
_mongoc_stream_tls_openssl_destroy (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_destroy77,2089
_mongoc_stream_tls_openssl_failed (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_failed118,3011
_mongoc_stream_tls_openssl_close (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_close145,3664
_mongoc_stream_tls_openssl_flush (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_flush175,4255
_mongoc_stream_tls_openssl_write (mongoc_stream_tls_t *tls,_mongoc_stream_tls_openssl_write187,4544
_mongoc_stream_tls_openssl_writev (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_writev251,6215
_mongoc_stream_tls_openssl_readv (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_readv394,10592
_mongoc_stream_tls_openssl_setsockopt (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_setsockopt495,13364
_mongoc_stream_tls_openssl_get_base_stream (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_get_base_stream514,14031
_mongoc_stream_tls_openssl_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_tls_openssl_check_closed522,14207
mongoc_stream_tls_openssl_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_openssl_do_handshake538,14576
mongoc_stream_tls_openssl_should_retry (mongoc_stream_t *stream)mongoc_stream_tls_openssl_should_retry574,15273
mongoc_stream_tls_openssl_should_read (mongoc_stream_t *stream)mongoc_stream_tls_openssl_should_read592,15654
mongoc_stream_tls_openssl_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_openssl_check_cert610,16049
mongoc_stream_tls_openssl_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_openssl_new651,17213

include/mongo/mongoc/mongoc-ssl-private.h,57
#define MONGOC_SSL_PRIVATE_HMONGOC_SSL_PRIVATE_H18,625

include/mongo/mongoc/op-get-more.def,0

include/mongo/mongoc/mongoc-cluster.c,4383
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN58,1626
#define CHECK_CLOSED_DURATION_MSEC CHECK_CLOSED_DURATION_MSEC61,1664
#define DB_AND_CMD_FROM_COLLECTION(DB_AND_CMD_FROM_COLLECTION63,1705
_bson_error_message_printf (bson_error_t *error,_bson_error_message_printf94,2958
mongoc_cluster_run_command_internal (mongoc_cluster_t         *cluster,mongoc_cluster_run_command_internal131,4037
mongoc_cluster_run_command_monitored (mongoc_cluster_t         *cluster,mongoc_cluster_run_command_monitored340,11226
mongoc_cluster_run_command (mongoc_cluster_t    *cluster,mongoc_cluster_run_command373,12483
_mongoc_stream_run_ismaster (mongoc_cluster_t *cluster,_mongoc_stream_run_ismaster411,13946
_mongoc_cluster_run_ismaster (mongoc_cluster_t *cluster,_mongoc_cluster_run_ismaster453,14994
_mongoc_cluster_build_basic_auth_digest (mongoc_cluster_t *cluster,_mongoc_cluster_build_basic_auth_digest529,17250
_mongoc_cluster_auth_node_cr (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_cr588,18892
_mongoc_cluster_get_canonicalized_name (mongoc_cluster_t      *cluster, /* IN */_mongoc_cluster_get_canonicalized_name697,22168
_mongoc_cluster_auth_node_sasl (mongoc_cluster_t *cluster,_mongoc_cluster_auth_node_sasl763,23967
_mongoc_cluster_auth_node_plain (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_plain926,29148
_mongoc_cluster_auth_node_x509 (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_x509989,30854
_mongoc_cluster_auth_node_scram (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_scram1045,32556
_mongoc_cluster_auth_node (mongoc_cluster_t *cluster,_mongoc_cluster_auth_node1184,36734
mongoc_cluster_disconnect_node (mongoc_cluster_t *cluster, uint32_t server_id)mongoc_cluster_disconnect_node1284,40105
_mongoc_cluster_node_destroy (mongoc_cluster_node_t *node)_mongoc_cluster_node_destroy1308,40727
_mongoc_cluster_node_dtor (void *data_,_mongoc_cluster_node_dtor1317,40928
_mongoc_cluster_node_new (mongoc_stream_t *stream)_mongoc_cluster_node_new1326,41149
_mongoc_cluster_add_node (mongoc_cluster_t *cluster,_mongoc_cluster_add_node1367,42258
node_not_found (mongoc_server_description_t *sd,node_not_found1410,43711
stream_not_found (mongoc_server_description_t *sd,stream_not_found1429,44178
_mongoc_cluster_stream_for_server_description (mongoc_cluster_t *cluster,_mongoc_cluster_stream_for_server_description1449,44681
mongoc_cluster_stream_for_server (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_server1514,47035
mongoc_cluster_fetch_stream_single (mongoc_cluster_t *cluster,mongoc_cluster_fetch_stream_single1550,48107
mongoc_cluster_fetch_stream_pooled (mongoc_cluster_t *cluster,mongoc_cluster_fetch_stream_pooled1638,51198
mongoc_cluster_init (mongoc_cluster_t   *cluster,mongoc_cluster_init1704,53318
mongoc_cluster_destroy (mongoc_cluster_t *cluster) /* INOUT */mongoc_cluster_destroy1754,54697
_mongoc_cluster_stream_for_optype (mongoc_cluster_t *cluster,_mongoc_cluster_stream_for_optype1789,55447
mongoc_cluster_stream_for_reads (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_reads1845,57057
mongoc_cluster_stream_for_writes (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_writes1872,57898
_mongoc_cluster_inc_egress_rpc (const mongoc_rpc_t *rpc)_mongoc_cluster_inc_egress_rpc1897,58539
_mongoc_cluster_inc_ingress_rpc (const mongoc_rpc_t *rpc)_mongoc_cluster_inc_ingress_rpc1950,59831
_mongoc_cluster_min_of_max_obj_size_sds (void *item,_mongoc_cluster_min_of_max_obj_size_sds1986,60764
_mongoc_cluster_min_of_max_obj_size_nodes (void *item,_mongoc_cluster_min_of_max_obj_size_nodes1999,61115
_mongoc_cluster_min_of_max_msg_size_sds (void *item,_mongoc_cluster_min_of_max_msg_size_sds2012,61464
_mongoc_cluster_min_of_max_msg_size_nodes (void *item,_mongoc_cluster_min_of_max_msg_size_nodes2025,61805
mongoc_cluster_get_max_bson_obj_size (mongoc_cluster_t *cluster)mongoc_cluster_get_max_bson_obj_size2055,62572
mongoc_cluster_get_max_msg_size (mongoc_cluster_t *cluster)mongoc_cluster_get_max_msg_size2093,63610
_mongoc_cluster_check_interval (mongoc_cluster_t *cluster,_mongoc_cluster_check_interval2112,64182
mongoc_cluster_sendv_to_server (mongoc_cluster_t              *cluster,mongoc_cluster_sendv_to_server2217,66867
mongoc_cluster_try_recv (mongoc_cluster_t       *cluster,mongoc_cluster_try_recv2373,71892

include/mongo/mongoc/mongoc-gridfs-file-page.c,1100
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
_mongoc_gridfs_file_page_new (const uint8_t *data,_mongoc_gridfs_file_page_new32,908
_mongoc_gridfs_file_page_seek (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_seek54,1353
_mongoc_gridfs_file_page_read (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_read68,1569
_mongoc_gridfs_file_page_write (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_write105,2488
_mongoc_gridfs_file_page_memset0 (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_memset0149,3727
_mongoc_gridfs_file_page_get_data (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_get_data178,4460
_mongoc_gridfs_file_page_get_len (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_get_len189,4630
_mongoc_gridfs_file_page_tell (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_tell200,4770
_mongoc_gridfs_file_page_is_dirty (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_is_dirty211,4906
_mongoc_gridfs_file_page_destroy (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_destroy222,5051

include/mongo/mongoc/mongoc-gridfs-file-list.h,169
#define MONGOC_GRIDFS_FILE_LIST_HMONGOC_GRIDFS_FILE_LIST_H18,629
typedef struct _mongoc_gridfs_file_list_t mongoc_gridfs_file_list_t;mongoc_gridfs_file_list_t32,858

include/mongo/mongoc/mongoc-topology-scanner-private.h,2099
#define MONGOC_TOPOLOGY_SCANNER_PRIVATE_HMONGOC_TOPOLOGY_SCANNER_PRIVATE_H18,638
typedef void (*mongoc_topology_scanner_cb_t)(uint32_t      id,mongoc_topology_scanner_cb_t37,1045
typedef struct mongoc_topology_scanner_nodemongoc_topology_scanner_node45,1403
   uint32_t                        id;id47,1449
   mongoc_async_cmd_t             *cmd;cmd48,1488
   mongoc_stream_t                *stream;stream49,1528
   int64_t                         timestamp;timestamp50,1571
   int64_t                         last_used;last_used51,1617
   int64_t                         last_failed;last_failed52,1663
   bool                            has_auth;has_auth53,1711
   mongoc_host_list_t              host;host54,1756
   struct addrinfo                *dns_results;dns_results55,1797
   struct addrinfo                *current_dns_result;current_dns_result56,1845
   struct mongoc_topology_scanner *ts;ts57,1900
   struct mongoc_topology_scanner_node *next;next59,1940
   struct mongoc_topology_scanner_node *prev;prev60,1986
   bool                            retired;retired62,2033
   bson_error_t                    last_error;last_error63,2077
} mongoc_topology_scanner_node_t;mongoc_topology_scanner_node_t64,2124
typedef struct mongoc_topology_scannermongoc_topology_scanner66,2159
   mongoc_async_t                 *async;async68,2200
   mongoc_topology_scanner_node_t *nodes;nodes69,2242
   uint32_t                        seq;seq70,2284
   bson_t                          ismaster_cmd;ismaster_cmd71,2324
   mongoc_topology_scanner_cb_t    cb;cb72,2373
   void                           *cb_data;cb_data73,2412
   bool                            in_progress;in_progress74,2456
   const mongoc_uri_t             *uri;uri75,2504
   mongoc_async_cmd_setup_t        setup;setup76,2544
   mongoc_stream_initiator_t       initiator;initiator77,2586
   void                           *initiator_context;initiator_context78,2632
   mongoc_ssl_opt_t *ssl_opts;ssl_opts81,2712
} mongoc_topology_scanner_t;mongoc_topology_scanner_t83,2750

include/mongo/mongoc/mongoc-stream-tls-openssl-private.h,263
#define MONGOC_STREAM_TLS_OPENSSL_PRIVATE_HMONGOC_STREAM_TLS_OPENSSL_PRIVATE_H18,640
{__anon8ea7cc44010836,1003
   BIO                *bio;bio37,1005
   SSL_CTX            *ctx;ctx38,1033
} mongoc_stream_tls_openssl_t;mongoc_stream_tls_openssl_t39,1061

include/mongo/mongoc/mongoc-async-private.h,839
#define MONGOC_ASYNC_PRIVATE_HMONGOC_ASYNC_PRIVATE_H18,627
typedef struct _mongoc_async_mongoc_async31,878
   struct _mongoc_async_cmd *cmds;cmds33,909
   size_t                    ncmds;ncmds34,944
   uint32_t                  request_id;request_id35,980
} mongoc_async_t;mongoc_async_t36,1021
{__anon62787685010339,1053
   MONGOC_ASYNC_CMD_IN_PROGRESS,MONGOC_ASYNC_CMD_IN_PROGRESS40,1055
   MONGOC_ASYNC_CMD_SUCCESS,MONGOC_ASYNC_CMD_SUCCESS41,1088
   MONGOC_ASYNC_CMD_ERROR,MONGOC_ASYNC_CMD_ERROR42,1117
   MONGOC_ASYNC_CMD_TIMEOUT,MONGOC_ASYNC_CMD_TIMEOUT43,1144
} mongoc_async_cmd_result_t;mongoc_async_cmd_result_t44,1173
typedef void (*mongoc_async_cmd_cb_t)(mongoc_async_cmd_result_t result,mongoc_async_cmd_cb_t46,1203
(*mongoc_async_cmd_setup_t)(mongoc_stream_t *stream,mongoc_async_cmd_setup_t53,1574

include/mongo/mongoc/mongoc-uri-private.h,57
#define MONGOC_URI_PRIVATE_HMONGOC_URI_PRIVATE_H18,625

include/mongo/mongoc/mongoc-stream-tls-secure-transport.h,89
#define MONGOC_STREAM_TLS_SECURE_TRANSPORT_HMONGOC_STREAM_TLS_SECURE_TRANSPORT_H18,641

include/mongo/mongoc/mongoc-secure-transport.c,1157
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN43,1356
_bson_append_cftyperef (bson_string_t *retval, const char *label, CFTypeRef str)_bson_append_cftyperef47,1415
_mongoc_secure_transport_dict_get (CFArrayRef values, CFStringRef label)_mongoc_secure_transport_dict_get59,1746
_mongoc_secure_transport_RFC2253_from_cert (SecCertificateRef cert)_mongoc_secure_transport_RFC2253_from_cert83,2419
_mongoc_secure_transport_import_pem (const char *filename, const char *passphrase, CFArrayRef *i_mongoc_secure_transport_import_pem153,4733
_mongoc_secure_transport_extract_subject (const char *filename, const char *passphrase)_mongoc_secure_transport_extract_subject220,6664
mongoc_secure_transport_setup_certificate (mongoc_stream_tls_secure_transport_t *secure_transpormongoc_secure_transport_setup_certificate254,7671
mongoc_secure_transport_setup_ca (mongoc_stream_tls_secure_transport_t *secure_transport,mongoc_secure_transport_setup_ca316,9760
mongoc_secure_transport_read (SSLConnectionRef connection,mongoc_secure_transport_read355,11195
mongoc_secure_transport_write (SSLConnectionRef connection,mongoc_secure_transport_write396,12222

include/mongo/mongoc/mongoc-matcher-op.c,2778
_mongoc_matcher_op_exists_new (const char  *path,   /* IN */_mongoc_matcher_op_exists_new40,1140
_mongoc_matcher_op_type_new (const char  *path, /* IN */_mongoc_matcher_op_type_new74,1958
_mongoc_matcher_op_logical_new (mongoc_matcher_opcode_t  opcode, /* IN */_mongoc_matcher_op_logical_new113,2854
_mongoc_matcher_op_compare_new (mongoc_matcher_opcode_t  opcode, /* IN */_mongoc_matcher_op_compare_new159,4056
_mongoc_matcher_op_not_new (const char          *path,  /* IN */_mongoc_matcher_op_not_new195,5003
_mongoc_matcher_op_destroy (mongoc_matcher_op_t *op) /* IN */_mongoc_matcher_op_destroy228,5756
_mongoc_matcher_op_exists_match (mongoc_matcher_op_exists_t *exists, /* IN */_mongoc_matcher_op_exists_match291,7459
_mongoc_matcher_op_type_match (mongoc_matcher_op_type_t *type, /* IN */_mongoc_matcher_op_type_match326,8299
_mongoc_matcher_op_not_match (mongoc_matcher_op_not_t *not_,  /* IN */_mongoc_matcher_op_not_match363,9162
#define _TYPE_CODE(_TYPE_CODE373,9413
#define _NATIVE_COMPARE(_NATIVE_COMPARE374,9471
#define _EQ_COMPARE(_EQ_COMPARE376,9565
#define _NE_COMPARE(_NE_COMPARE377,9622
#define _GT_COMPARE(_GT_COMPARE378,9679
#define _GTE_COMPARE(_GTE_COMPARE379,9735
#define _LT_COMPARE(_LT_COMPARE380,9792
#define _LTE_COMPARE(_LTE_COMPARE381,9848
_mongoc_matcher_iter_eq_match (bson_iter_t *compare_iter, /* IN */_mongoc_matcher_iter_eq_match414,10878
_mongoc_matcher_op_eq_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_eq_match540,14583
_mongoc_matcher_op_gt_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_gt_match569,15350
_mongoc_matcher_op_gte_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_gte_match641,17586
_mongoc_matcher_op_in_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_in_match714,19861
_mongoc_matcher_op_lt_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_lt_match754,20777
_mongoc_matcher_op_lte_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_lte_match827,23024
_mongoc_matcher_op_ne_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_ne_match901,25324
_mongoc_matcher_op_nin_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_nin_match925,25919
_mongoc_matcher_op_compare_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_compare_match950,26533
_mongoc_matcher_op_logical_match (mongoc_matcher_op_logical_t *logical, /* IN */_mongoc_matcher_op_logical_match1012,28328
_mongoc_matcher_op_match (mongoc_matcher_op_t *op,   /* IN */_mongoc_matcher_op_match1054,29505
_mongoc_matcher_op_to_bson (mongoc_matcher_op_t *op,   /* IN */_mongoc_matcher_op_to_bson1108,31126

include/mongo/mongoc/mongoc-flags.h,2341
#define MONGOC_FLAGS_HMONGOC_FLAGS_H18,619
{__anon4278bcec010342,1208
   MONGOC_DELETE_NONE          = 0,MONGOC_DELETE_NONE43,1210
   MONGOC_DELETE_SINGLE_REMOVE = 1 << 0,MONGOC_DELETE_SINGLE_REMOVE44,1246
} mongoc_delete_flags_t;mongoc_delete_flags_t45,1287
{__anon4278bcec020357,1586
   MONGOC_REMOVE_NONE          = 0,MONGOC_REMOVE_NONE58,1588
   MONGOC_REMOVE_SINGLE_REMOVE = 1 << 0,MONGOC_REMOVE_SINGLE_REMOVE59,1624
} mongoc_remove_flags_t;mongoc_remove_flags_t60,1665
{__anon4278bcec030372,1977
   MONGOC_INSERT_NONE              = 0,MONGOC_INSERT_NONE73,1979
   MONGOC_INSERT_CONTINUE_ON_ERROR = 1 << 0,MONGOC_INSERT_CONTINUE_ON_ERROR74,2019
} mongoc_insert_flags_t;mongoc_insert_flags_t75,2064
#define MONGOC_INSERT_NO_VALIDATE MONGOC_INSERT_NO_VALIDATE78,2091
{__anon4278bcec0403101,3130
   MONGOC_QUERY_NONE              = 0,MONGOC_QUERY_NONE102,3132
   MONGOC_QUERY_TAILABLE_CURSOR   = 1 << 1,MONGOC_QUERY_TAILABLE_CURSOR103,3171
   MONGOC_QUERY_SLAVE_OK          = 1 << 2,MONGOC_QUERY_SLAVE_OK104,3215
   MONGOC_QUERY_OPLOG_REPLAY      = 1 << 3,MONGOC_QUERY_OPLOG_REPLAY105,3259
   MONGOC_QUERY_NO_CURSOR_TIMEOUT = 1 << 4,MONGOC_QUERY_NO_CURSOR_TIMEOUT106,3303
   MONGOC_QUERY_AWAIT_DATA        = 1 << 5,MONGOC_QUERY_AWAIT_DATA107,3347
   MONGOC_QUERY_EXHAUST           = 1 << 6,MONGOC_QUERY_EXHAUST108,3391
   MONGOC_QUERY_PARTIAL           = 1 << 7,MONGOC_QUERY_PARTIAL109,3435
} mongoc_query_flags_t;mongoc_query_flags_t110,3479
{__anon4278bcec0503126,4015
   MONGOC_REPLY_NONE               = 0,MONGOC_REPLY_NONE127,4017
   MONGOC_REPLY_CURSOR_NOT_FOUND   = 1 << 0,MONGOC_REPLY_CURSOR_NOT_FOUND128,4057
   MONGOC_REPLY_QUERY_FAILURE      = 1 << 1,MONGOC_REPLY_QUERY_FAILURE129,4102
   MONGOC_REPLY_SHARD_CONFIG_STALE = 1 << 2,MONGOC_REPLY_SHARD_CONFIG_STALE130,4147
   MONGOC_REPLY_AWAIT_CAPABLE      = 1 << 3,MONGOC_REPLY_AWAIT_CAPABLE131,4192
} mongoc_reply_flags_t;mongoc_reply_flags_t132,4237
{__anon4278bcec0603144,4552
   MONGOC_UPDATE_NONE         = 0,MONGOC_UPDATE_NONE145,4554
   MONGOC_UPDATE_UPSERT       = 1 << 0,MONGOC_UPDATE_UPSERT146,4589
   MONGOC_UPDATE_MULTI_UPDATE = 1 << 1,MONGOC_UPDATE_MULTI_UPDATE147,4629
} mongoc_update_flags_t;mongoc_update_flags_t148,4669
#define MONGOC_UPDATE_NO_VALIDATE MONGOC_UPDATE_NO_VALIDATE151,4696

include/mongo/mongoc/mongoc-cursor-cursorid.c,1367
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,874
_mongoc_cursor_cursorid_new (void)_mongoc_cursor_cursorid_new33,934
_mongoc_cursor_cursorid_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_destroy49,1191
_mongoc_cursor_cursorid_start_batch (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_start_batch75,1669
_mongoc_cursor_cursorid_refresh_from_command (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_refresh_from_command112,2781
_mongoc_cursor_cursorid_read_from_batch (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_read_from_batch149,3803
_mongoc_cursor_cursorid_prime (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_prime173,4404
_mongoc_cursor_prepare_getmore_command (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_getmore_command182,4642
_mongoc_cursor_cursorid_get_more (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_get_more218,5903
_mongoc_cursor_cursorid_next (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_next255,6780
_mongoc_cursor_cursorid_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_clone314,7995
static mongoc_cursor_interface_t gMongocCursorCursorid = {gMongocCursorCursorid327,8225
_mongoc_cursor_cursorid_init (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_init336,8406
_mongoc_cursor_cursorid_init_with_reply (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_init_with_reply353,8782

include/mongo/mongoc/mongoc-stream-buffered.c,1251
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,837
{__anon3c951af6010833,889
   mongoc_stream_t  stream;stream34,891
   mongoc_stream_t *base_stream;base_stream35,919
   mongoc_buffer_t  buffer;buffer36,952
} mongoc_stream_buffered_t;mongoc_stream_buffered_t37,980
mongoc_stream_buffered_destroy (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_destroy58,1420
mongoc_stream_buffered_failed (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_failed95,2296
mongoc_stream_buffered_close (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_close120,2846
mongoc_stream_buffered_flush (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_flush145,3427
mongoc_stream_buffered_writev (mongoc_stream_t *stream,       /* IN */mongoc_stream_buffered_writev174,4235
mongoc_stream_buffered_readv (mongoc_stream_t *stream,       /* IN */mongoc_stream_buffered_readv221,5726
_mongoc_stream_buffered_get_base_stream (mongoc_stream_t *stream) /* IN */_mongoc_stream_buffered_get_base_stream266,7119
_mongoc_stream_buffered_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_buffered_check_closed273,7273
mongoc_stream_buffered_new (mongoc_stream_t *base_stream, /* IN */mongoc_stream_buffered_new305,8175

include/mongo/mongoc/mongoc-crypto-openssl.c,193
mongoc_crypto_openssl_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_openssl_hmac_sha131,836
mongoc_crypto_openssl_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_openssl_sha149,1358

include/mongo/mongoc/mongoc-read-concern.h,315
#define MONGOC_READ_CONCERN_HMONGOC_READ_CONCERN_H18,626
#define MONGOC_READ_CONCERN_LEVEL_LOCAL MONGOC_READ_CONCERN_LEVEL_LOCAL30,818
#define MONGOC_READ_CONCERN_LEVEL_MAJORITY MONGOC_READ_CONCERN_LEVEL_MAJORITY31,869
typedef struct _mongoc_read_concern_t mongoc_read_concern_t;mongoc_read_concern_t33,924

include/mongo/mongoc/mongoc-collection-private.h,722
#define MONGOC_COLLECTION_PRIVATE_HMONGOC_COLLECTION_PRIVATE_H18,637
struct _mongoc_collection_t_mongoc_collection_t33,904
   mongoc_client_t        *client;client35,934
   char                    ns[128];ns36,969
   uint32_t                nslen;nslen37,1005
   char                    db[128];db38,1039
   char                    collection[128];collection39,1075
   uint32_t                collectionlen;collectionlen40,1119
   mongoc_buffer_t         buffer;buffer41,1161
   mongoc_read_prefs_t    *read_prefs;read_prefs42,1196
   mongoc_read_concern_t  *read_concern;read_concern43,1235
   mongoc_write_concern_t *write_concern;write_concern44,1276
   bson_t                 *gle;gle45,1318

include/mongo/mongoc/mongoc-set.c,803
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN23,674
mongoc_set_new (size_t               nitems,mongoc_set_new26,722
mongoc_set_id_cmp (const void *a_,mongoc_set_id_cmp43,1162
mongoc_set_add (mongoc_set_t *set,mongoc_set_add57,1426
mongoc_set_rm (mongoc_set_t *set,mongoc_set_rm79,2051
mongoc_set_get (mongoc_set_t *set,mongoc_set_get106,2615
mongoc_set_get_item (mongoc_set_t *set,mongoc_set_get_item121,2927
mongoc_set_destroy (mongoc_set_t *set)mongoc_set_destroy132,3112
mongoc_set_for_each (mongoc_set_t            *set,mongoc_set_for_each145,3319
_mongoc_set_find (mongoc_set_t            *set,_mongoc_set_find169,3877
mongoc_set_find_item (mongoc_set_t            *set,mongoc_set_find_item191,4280
mongoc_set_find_id (mongoc_set_t            *set,mongoc_set_find_id206,4577

include/mongo/targetver.h,0

include/mongo/MongoDBClient.h,1548
#define _MONGO_DB_CLIENT_H_MONGO_DB_CLIENT_H2,27
enum eReturnValueeReturnValue4,55
	eReturnValue_FAILURE = 0,eReturnValue_FAILURE6,75
	eReturnValue_SUCCESS = 1,eReturnValue_SUCCESS7,102
	eReturnValue_WRONG_ARGUEMENTS = 2,eReturnValue_WRONG_ARGUEMENTS8,129
	eReturnValue_DATABASE_OPEN_CLIENT_CONNECTION_FAILED = 3,eReturnValue_DATABASE_OPEN_CLIENT_CONNECTION_FAILED10,166
	eReturnValue_DATABASE_GET_FAILED = 4,eReturnValue_DATABASE_GET_FAILED11,224
	eReturnValue_DATABASE_GET_COLLECTION_FAILED = 5,eReturnValue_DATABASE_GET_COLLECTION_FAILED12,263
	eReturnValue_DATABASE_CLIENT_CONNECTION_INVALID = 6,eReturnValue_DATABASE_CLIENT_CONNECTION_INVALID14,314
	eReturnValue_DATABASE_INVALID = 7,eReturnValue_DATABASE_INVALID15,368
	eReturnValue_DATABASE_COLLECTION_INVALID = 8,eReturnValue_DATABASE_COLLECTION_INVALID16,404
	eReturnValue_DATABASE_COMMAND_CREATION_FAILED = 9,eReturnValue_DATABASE_COMMAND_CREATION_FAILED18,452
	eReturnValue_DATABASE_PING_COMMAND_FAILED = 10,eReturnValue_DATABASE_PING_COMMAND_FAILED19,504
	eReturnValue_DATABASE_DOCUMENT_CREATION_FAILED = 11,eReturnValue_DATABASE_DOCUMENT_CREATION_FAILED21,554
	eReturnValue_DATABASE_DOCUMENT_INSERT_FAILED = 12,eReturnValue_DATABASE_DOCUMENT_INSERT_FAILED22,608
	eReturnValue_DATABASE_QUERY_CREATION_FAILED = 13,eReturnValue_DATABASE_QUERY_CREATION_FAILED24,661
	eReturnValue_DATABASE_QUERY_FAILED = 14,eReturnValue_DATABASE_QUERY_FAILED25,712
	eReturnValue_DATABASE_DOCUMENT_DELETION_FAILED = 15eReturnValue_DATABASE_DOCUMENT_DELETION_FAILED27,755

mainSystem.cpp,16526
char* version = "11.3";version3,43
char sourceInput[200];sourceInput4,67
FILE* userInitFile;userInitFile5,90
bool fastload = true;fastload6,110
bool hadAuthCode;hadAuthCode7,132
static bool crnl_safe = false;crnl_safe8,150
int externalTagger = 0;externalTagger9,181
char defaultbot[100];defaultbot10,205
char serverlogauthcode[30] ;serverlogauthcode11,227
uint64 chatstarted = 0;chatstarted12,256
char websocketparams[300];websocketparams13,280
char websocketmessage[300];websocketmessage14,307
char jmeter[100];jmeter15,335
int sentenceloopcount = 0;sentenceloopcount16,353
static uint64 lastCrashTime = 0;lastCrashTime17,380
int autorestartdelay = 0;autorestartdelay18,413
int db = 0;db19,439
int gzip = 0;gzip20,451
bool client = false;client21,465
bool newuser = false;newuser22,486
bool restartfromdeath = false;restartfromdeath23,508
char myip[100];myip24,539
int stdlogging = 0;stdlogging25,555
uint64 preparationtime = 0;preparationtime26,575
uint64 replytime = 0;replytime27,603
unsigned int timeLog = 2147483647;timeLog28,625
bool autoreload = true;autoreload29,660
bool sentenceOverflow = false;sentenceOverflow30,684
int sentenceLimit = SENTENCES_LIMIT;sentenceLimit31,715
bool loadingUser = false;loadingUser32,752
bool dieonwritefail = false;dieonwritefail33,778
unsigned int inputLimit = 0;inputLimit34,807
unsigned int fullInputLimit = 0;fullInputLimit35,836
char traceuser[500];traceuser36,869
char* originalUserInput;originalUserInput37,890
bool debugcommand = false;debugcommand38,915
int traceUniversal;traceUniversal39,942
int debugLevel = 0;debugLevel40,962
PRINTER printer = printf;printer41,982
uint64 startNLTime;startNLTime42,1008
unsigned int idetrace = (unsigned int) -1;idetrace43,1028
int outputlevel = 0;outputlevel44,1071
static bool argumentsSeen = false;argumentsSeen45,1092
int argc;argc47,1141
char ** argv;argv48,1151
char* configFile = "cs_init.txt";	// can set config paramsconfigFile49,1165
char* configFile2 = "cs_initmore.txt";	// can set config paramsconfigFile250,1224
char* configLines[MAX_WORD_SIZE];	// can set config paramsconfigLines51,1288
char language[40];							// indicate current language usedlanguage52,1347
char livedataFolder[500];		// where is the livedata folderlivedataFolder53,1406
char languageFolder[500];		// where is the livedata language folderlanguageFolder54,1465
char systemFolder[500];		// where is the livedata system foldersystemFolder55,1533
char usersfolder[100];usersfolder56,1597
char logsfolder[100];logsfolder57,1620
char topicfolder[100];topicfolder58,1642
static char* privateParams = NULL;privateParams59,1665
char treetaggerParams[200];treetaggerParams60,1700
static char encryptParams[300];encryptParams61,1728
static char decryptParams[300];decryptParams62,1760
char buildfiles[100];buildfiles63,1792
char apikey[100];apikey64,1814
int forkcount = 1;forkcount65,1832
char newusername[100] = "";newusername66,1851
char  erasename[100] = "csuser_erase";erasename67,1879
char buildflags[100] = "";buildflags68,1918
bool noboot = false;noboot69,1945
char tmpfolder[100];tmpfolder70,1966
static char* configUrl = NULL;configUrl71,1987
static char* configHeaders[20];configHeaders72,2018
static int headerCount = 0;headerCount73,2050
int configLinesLength;	// can set config paramsconfigLinesLength75,2079
bool build0Requested = false;build0Requested76,2127
bool build1Requested = false;build1Requested77,2157
bool servertrace = false;servertrace78,2187
static int repeatLimit = 0;repeatLimit79,2213
bool pendingRestart = false;pendingRestart80,2241
bool pendingUserReset = false;pendingUserReset81,2270
bool rebooting = false;rebooting82,2301
int outputchoice = -1;outputchoice83,2325
DEBUGAPI debugInput = NULL;debugInput84,2348
DEBUGAPI debugOutput = NULL;debugOutput85,2376
DEBUGAPI debugEndTurn = NULL;debugEndTurn86,2405
DEBUGLOOPAPI debugCall = NULL;debugCall87,2435
DEBUGVARAPI debugVar = NULL;debugVar88,2466
DEBUGVARAPI debugMark = NULL;debugMark89,2495
DEBUGAPI debugMessage = NULL;debugMessage90,2525
DEBUGAPI debugAction = NULL;debugAction91,2555
#define MAX_RETRIES MAX_RETRIES92,2584
char* revertBuffer;			// copy of user input so can :revert if desiredrevertBuffer93,2607
char postProcessing = 0;						// copy of output generated during MAIN control. Postprocessing capostProcessing94,2677
unsigned int tokenCount;						// for document performctokenCount95,2789
bool callback = false;						// when input is callback,alarm,loopback, dont want to enable :retrycallback96,2844
uint64 timerLimit = 0;						// limit time per volleytimerLimit97,2953
int timerCheckRate = 0;					// how often to check calls for timetimerCheckRate98,3006
uint64 volleyStartTime = 0;volleyStartTime99,3071
char forkCount[10];forkCount100,3099
int timerCheckInstance = 0;timerCheckInstance101,3119
char hostname[100];hostname102,3147
bool nosuchbotrestart = false; // restart if no such botnosuchbotrestart103,3167
char* derivationSentence[MAX_SENTENCE_LENGTH];derivationSentence104,3224
char derivationSeparator[MAX_SENTENCE_LENGTH];derivationSeparator105,3271
int derivationLength;derivationLength106,3318
char authorizations[200];	// for allowing debug commandsauthorizations107,3340
char* ourMainInputBuffer = NULL;				// user input buffer - ptr to primaryInputBufferourMainInputBuffer108,3397
char* mainInputBuffer;								// user input buffer - ptr to primaryInputBuffermainInputBuffer109,3482
char* ourMainOutputBuffer;				// main user output bufferourMainOutputBuffer110,3561
char* mainOutputBuffer;								//mainOutputBuffer111,3618
char* readBuffer;								// main scratch reading buffer (files, etc)readBuffer112,3652
bool readingDocument = false;readingDocument113,3721
bool redo = false; // retry backwards any amountredo114,3751
bool oobExists = false;oobExists115,3800
bool docstats = false;docstats116,3824
unsigned int docSentenceCount = 0;docSentenceCount117,3847
char* rawSentenceCopy; // current raw sentencerawSentenceCopy118,3882
char *evsrv_arg = NULL;evsrv_arg119,3929
unsigned short int derivationIndex[256];derivationIndex121,3954
bool overrideAuthorization = false;overrideAuthorization123,3996
clock_t  startSystem;						// time chatscript startedstartSystem125,4033
unsigned int choiceCount = 0;choiceCount126,4087
int always = 1;									// just something to stop the complaint about a loop based on a constantalways127,4117
uint64 callBackTime = 0;			// one-shot pending time - forces callback with "[callback]" when outcallBackTime130,4240
uint64 callBackDelay = 0;			// one-shot pending time - forces callback with "[callback]" when oucallBackDelay131,4386
uint64 loopBackTime = 0;	// ongoing callback forces callback with "[loopback]"  when output was loopBackTime132,4533
uint64 loopBackDelay = 0;	// ongoing callback forces callback with "[loopback]"  when output wasloopBackDelay133,4646
uint64 alarmTime = 0;alarmTime134,4760
uint64 alarmDelay = 0;					// one-shot pending time - forces callback with "[alarm]" when outputalarmDelay135,4782
unsigned int outputLength = 100000;		// max output before breaking.outputLength136,4925
char* extraTopicData = NULL;				// supplemental topic set by :extratopicextraTopicData138,4994
bool server = false;server142,5104
std::string interfaceKind = "0.0.0.0";interfaceKind144,5131
bool server = false;	// default is standalone on Windowsserver146,5183
bool server = true; // default is server on LINUXserver148,5250
bool server = true; // default is server on LINUXserver150,5306
unsigned int port = 1024;						// server portport153,5370
bool commandLineCompile = false;commandLineCompile154,5416
PrepareMode tmpPrepareMode = NO_MODE;						// controls what processing is done in preparation NOtmpPrepareMode156,5450
PrepareMode prepareMode = NO_MODE;						// controls what processing is done in preparation NO_MOprepareMode157,5576
bool noReact = false;noReact158,5699
bool documentMode = false;						// read input as a document not as chatdocumentMode161,5747
FILE* sourceFile = NULL;						// file to use for :sourcesourceFile162,5819
bool multiuser = false;multiuser163,5876
EchoSource echoSource = NO_SOURCE_ECHO;			// for :source, echo that input to nowhere, user, or lechoSource164,5900
uint64 sourceStart = 0;					// beginning time of source filesourceStart165,5999
unsigned int sourceTokens = 0;sourceTokens166,6060
unsigned int sourceLines = 0;sourceLines167,6091
unsigned int volleyCount = 0;					// which user volley is thisvolleyCount170,6146
uint64 tokenControl = 0;						// results from tokenization and prepare processingtokenControl171,6209
unsigned int responseControl = ALL_RESPONSES;					// std output behaviorsresponseControl172,6291
char* copyInput; // ptr to rest of users input after current sentencecopyInput173,6365
static char* oldInputBuffer = NULL;			//  copy of the sentence we are processingoldInputBuffer174,6435
char* currentInput;			// the sentence we are processing  BUG why bothcurrentInput175,6516
bool quitting = false;							// intending to exit chatbotquitting178,6624
ResetMode buildReset = NO_RESET;		// intending to reload system buildReset179,6682
bool autonumber = false;						// display number of volley to userautonumber180,6747
bool showWhy = false;							// show user rules generating his outputshowWhy181,6813
bool showTopic = false;							// show resulting topic on outputshowTopic182,6882
bool showTopics = false;						// show all relevant topicsshowTopics183,6946
bool showInput = false;							// Log internal input additionsshowInput184,7004
bool showReject = false;						// Log internal repeat rejections additionsshowReject185,7066
bool all = false;								// generate all possible answers to inputall186,7140
int regression = NO_REGRESSION;						// regression testing in progressregression187,7207
unsigned int trace = 0;							// current tracing flagstrace188,7278
char debugEntry[1000];debugEntry189,7333
char bootcmd[200];						// current boot tracing flagsbootcmd190,7356
unsigned int timing = 0;						// current timing flagstiming191,7410
bool shortPos = false;							// display pos results as you goshortPos192,7464
int inputRetryRejoinderTopic = NO_REJOINDER;				inputRetryRejoinderTopic194,7527
int inputRetryRejoinderRuleID = NO_REJOINDER;inputRetryRejoinderRuleID195,7576
int sentenceRetryRejoinderTopic = NO_REJOINDER;				sentenceRetryRejoinderTopic196,7622
int sentenceRetryRejoinderRuleID = NO_REJOINDER;sentenceRetryRejoinderRuleID197,7674
char oktest[MAX_WORD_SIZE];						// auto response testoktest199,7724
char activeTopic[200];activeTopic200,7779
char respondLevel = 0;							// rejoinder level of a random choice blockrespondLevel202,7803
static bool oobPossible = false;						// 1st thing could be ooboobPossible203,7876
int inputCounter = 0;							// protecting ^input from cyclinginputCounter205,7941
int totalCounter = 0;							// protecting ^input from cyclingtotalCounter206,8003
char userPrefix[MAX_WORD_SIZE];			// label prefix for user inputuserPrefix208,8066
char botPrefix[MAX_WORD_SIZE];			// label prefix for bot outputbotPrefix209,8131
bool unusedRejoinder = true;							// inputRejoinder has been executed, blocking further calls tunusedRejoinder211,8196
char* inputCopy; // the original input we were given, we will work on thisinputCopy213,8307
RESPONSE responseData[MAX_RESPONSE_SENTENCES+1];responseData216,8404
unsigned char responseOrder[MAX_RESPONSE_SENTENCES+1];responseOrder217,8453
int responseIndex;responseIndex218,8508
int inputSentenceCount;				// which sentence of volley is thisinputSentenceCount220,8528
static void HandlePermanentBuffers(bool init)HandlePermanentBuffers227,8769
void InitStandalone()InitStandalone281,10431
static void SetBotVariable(char* word)SetBotVariable290,10638
static void HandleBoot(WORDP boot, bool reboot)HandleBoot309,11275
unsigned int CountWordsInBuckets(unsigned int& unused, unsigned int* depthcount,int limit)CountWordsInBuckets387,14159
static void ReadBotVariable(char* file)ReadBotVariable412,14734
void CreateSystem()CreateSystem428,15054
void LoadSystem()LoadSystem634,21759
static void ProcessArgument(char* arg)ProcessArgument662,22698
void ProcessArguments(int xargc, char* xargv[])ProcessArguments974,35176
static void ProcessConfigLines(){ProcessConfigLines980,35291
static size_t ConfigCallback(void *contents, size_t size, size_t nmemb, void *userp)ConfigCallback992,35494
static void LoadconfigFromUrl(char*configUrl, char**configUrlHeaders, int headerCount){LoadconfigFromUrl998,35670
static void ReadConfig()ReadConfig1039,37112
static void ClearGlobals()ClearGlobals1086,38343
static void SetDefaultLogsAndFolders()SetDefaultLogsAndFolders1123,39024
void OpenExternalDatabase()OpenExternalDatabase1135,39423
unsigned int InitSystem(int argcx, char * argvx[],char* unchangedPath, char* readablePath, char*InitSystem1178,41115
void PartiallyCloseSystem(bool keepalien) // server data (queues, databases, etc) remain availabPartiallyCloseSystem1349,46138
void CloseSystem()CloseSystem1365,46663
	#define LINUXORMAC LINUXORMAC1393,47247
	#define LINUXORMAC LINUXORMAC1396,47292
int kbhit(void)kbhit1401,47359
int FindOOBEnd(int start)FindOOBEnd1429,47841
void ProcessOOB(char* output)ProcessOOB1440,48129
bool ProcessInputDelays(char* buffer,bool hitkey)ProcessInputDelays1504,50012
char* ReviseOutput(char* out,char* prefix)ReviseOutput1541,51131
void EmitOutput()EmitOutput1566,51523
bool GetInput()GetInput1599,52751
void ProcessInputFile() // will run any number of inputs on auto, or 1 user inputProcessInputFile1648,54471
void MainLoop() //   local machine loopMainLoop1723,56856
static void ClearFunctionTracing()ClearFunctionTracing1759,58366
void ResetToPreUser() // prepare for multiple sentences being processed - data lingers over multResetToPreUser1773,58719
void ResetSentence() // read for next sentence to process from raw system level control onlyResetSentence1808,60021
void ComputeWhy(char* buffer,int n)ComputeWhy1819,60335
static void FactizeResult() // takes the initial given resultFactizeResult1873,61669
static void ConcatResult(char* result,char* limit)ConcatResult1931,63580
void FinishVolley(char* incoming, char* output, char* postvalue, int limit)FinishVolley1972,64719
int PerformChatGivenTopic(char* user, char* usee, char* incoming,char* ip,char* output,char* topPerformChatGivenTopic2095,69555
void EmergencyResetUser()EmergencyResetUser2104,69820
char* realinput = NULL;realinput2123,70433
bool crashBack = false; // are we rejoining from a crash?crashBack2124,70457
bool restartBack = false;restartBack2125,70515
bool crashset = false;crashset2126,70541
static void ValidateUserInput(char* oobSkipped)ValidateUserInput2129,70566
static int Crashed(char* output,bool reloading,char* ip)Crashed2177,72122
static void LimitInput(char* at)LimitInput2226,73564
int PerformChat(char* user, char* usee, char* incoming,char* ip,char* output) // returns volleycPerformChat2247,74343
FunctionResult Reply() Reply2486,81494
void Restart()Restart2528,83019
int ProcessInput(char* input)ProcessInput2573,84128
bool PrepassSentence(char* prepassTopic)PrepassSentence2732,89609
FunctionResult DoSentence(char* input,char* prepassTopic, bool atlimit)DoSentence2771,90992
void OnceCode(const char* var,char* function) //   run before doing any of his inputOnceCode2873,94210
void AddHumanUsed(const char* reply)AddHumanUsed2920,95613
void AddBotUsed(const char* reply,unsigned int len)AddBotUsed2936,96127
bool HasAlreadySaid(char* msg)HasAlreadySaid2951,96619
void FlipResponses()FlipResponses2973,97438
static void SaveResponse(char* msg)SaveResponse2988,97721
char* DoOutputAdjustments(char* msg, unsigned int control,char* &buffer,char* limit)DoOutputAdjustments3010,99053
bool AddResponse(char* msg, unsigned int control)AddResponse3054,100435
void NLPipeline(int mytrace)NLPipeline3101,102604
static void TraceDerivation(bool analyze)TraceDerivation3238,107681
static void TraceTokenization(char* input)TraceTokenization3266,108630
void PrepareSentence(char* input,bool mark,bool user, bool analyze,bool oobstart,bool atlimit) PrepareSentence3278,109080
int main(int argc, char * argv[]) main3542,117617

csocket.h,746
#define HIDDEN_OFFSET HIDDEN_OFFSET14,1089
#define HIDDEN_OVERLAP HIDDEN_OVERLAP15,1132
  typedef char raw_type;       raw_type22,1319
  typedef int socklen_t;socklen_t23,1351
  typedef void raw_type;    raw_type26,1408
#define __PRACTICALSOCKET_INCLUDED____PRACTICALSOCKET_INCLUDED__63,2605
class SocketException : public exception {SocketException72,2768
  string userMessage;  //   Exception messageuserMessage94,3370
class CSocket {CSocket100,3486
  int sockDesc;              //   Socket descriptorsockDesc170,6096
class CommunicatingSocket : public CSocket {CommunicatingSocket178,6299
class TCPSocket : public CommunicatingSocket {TCPSocket231,8196
class TCPServerSocket : public CSocket {TCPServerSocket258,8986

patternSystem.cpp,6030
#define INFINITE_MATCH INFINITE_MATCH22,1192
#define NOT_BIT	NOT_BIT24,1259
#define FREEMODE_BIT	FREEMODE_BIT25,1290
#define QUOTE_BIT	QUOTE_BIT26,1324
#define NOTNOT_BIT	NOTNOT_BIT27,1356
#define GAPSTART GAPSTART29,1390
#define GAPLIMIT GAPLIMIT30,1433
#define GAPLIMITSHIFT GAPLIMITSHIFT31,1476
#define GAP_SHIFT GAP_SHIFT32,1500
#define GAP_SLOT GAP_SLOT33,1521
#define SPECIFIC_SLOT SPECIFIC_SLOT34,1586
#define SPECIFIC_SHIFT SPECIFIC_SHIFT35,1657
#define WILDGAP	WILDGAP37,1684
#define WILDMEMORIZEGAP	WILDMEMORIZEGAP38,1776
#define WILDMEMORIZESPECIFIC	WILDMEMORIZESPECIFIC39,1874
HEAPREF heapPatternThread = NULL;heapPatternThread43,2205
int patternDepth = 0;patternDepth44,2239
int indentBasis = 1;indentBasis45,2261
bool matching = false;matching46,2282
bool patternRetry = false;patternRetry47,2305
static char kindprior[100];kindprior48,2332
bool deeptrace = false;deeptrace49,2360
static char* returnPtr = NULL;returnPtr50,2384
char* patternchoice = NULL;patternchoice51,2415
static unsigned int functionNest = 0;	// recursive depth of macro callingfunctionNest53,2474
#define MAX_PAREN_NEST MAX_PAREN_NEST54,2548
static char* ptrStack[MAX_PAREN_NEST];ptrStack55,2574
static int argStack[MAX_PAREN_NEST];argStack56,2613
static int baseStack[MAX_PAREN_NEST];baseStack57,2650
static uint64 matchedBits[20][4];	 // nesting level zone of bit matchesmatchedBits58,2688
static uint64 retryBits[4];     // last set of match bits before retryretryBits59,2760
unsigned int patternEvaluationCount = 0;    // number of patterns evaluated in this volleypatternEvaluationCount60,2831
void ShowMatchResult(FunctionResult result, char* rule, char* label,int id)ShowMatchResult62,2923
static void MarkMatchLocation(int start, int end, int depth)MarkMatchLocation93,4833
static char* BitIndex(uint64 bits, char* buffer, int offset)BitIndex104,5123
void GetPatternData(char* buffer)GetPatternData119,5462
static void DecodeFNRef(char* side)DecodeFNRef136,6047
static void DecodeAssignment(char* word, char* lhs, char* op, char* rhs)DecodeAssignment145,6291
static void DecodeComparison(char* word, char* lhs, char* op, char* rhs)DecodeComparison159,6697
bool MatchesPattern(char* word, char* pattern) //   does word match pattern of characters and *MatchesPattern176,7164
static bool SysVarExists(char* ptr) //   %system variableSysVarExists209,8863
static bool FindPartialInSentenceTest(char* test, int start, int originalstart, bool reverse,FindPartialInSentenceTest216,9058
static bool MatchTest(bool reverse, WORDP D, int start, char* op, char* compare, int quote,MatchTest254,10584
static bool FindPhrase(char* word, int start, bool reverse, int & actualStart, int& actualEnd)FindPhrase304,13278
static char* PushMatch(int used)PushMatch337,14598
static void PopMatch(char* base, int used)PopMatch355,15102
so that if the match fails, we can revert back to where we were(under some circumstances).circumstances373,15705
#define INFINITE_MATCH INFINITE_MATCH22,1192
#define NOT_BIT	NOT_BIT24,1259
#define FREEMODE_BIT	FREEMODE_BIT25,1290
#define QUOTE_BIT	QUOTE_BIT26,1324
#define NOTNOT_BIT	NOTNOT_BIT27,1356
#define GAPSTART GAPSTART29,1390
#define GAPLIMIT GAPLIMIT30,1433
#define GAPLIMITSHIFT GAPLIMITSHIFT31,1476
#define GAP_SHIFT GAP_SHIFT32,1500
#define GAP_SLOT GAP_SLOT33,1521
#define SPECIFIC_SLOT SPECIFIC_SLOT34,1586
#define SPECIFIC_SHIFT SPECIFIC_SHIFT35,1657
#define WILDGAP	WILDGAP37,1684
#define WILDMEMORIZEGAP	WILDMEMORIZEGAP38,1776
#define WILDMEMORIZESPECIFIC	WILDMEMORIZESPECIFIC39,1874
HEAPREF heapPatternThread = NULL;heapPatternThread43,2205
int patternDepth = 0;patternDepth44,2239
int indentBasis = 1;indentBasis45,2261
bool matching = false;matching46,2282
bool patternRetry = false;patternRetry47,2305
static char kindprior[100];kindprior48,2332
bool deeptrace = false;deeptrace49,2360
static char* returnPtr = NULL;returnPtr50,2384
char* patternchoice = NULL;patternchoice51,2415
static unsigned int functionNest = 0;	// recursive depth of macro callingfunctionNest53,2474
#define MAX_PAREN_NEST MAX_PAREN_NEST54,2548
static char* ptrStack[MAX_PAREN_NEST];ptrStack55,2574
static int argStack[MAX_PAREN_NEST];argStack56,2613
static int baseStack[MAX_PAREN_NEST];baseStack57,2650
static uint64 matchedBits[20][4];	 // nesting level zone of bit matchesmatchedBits58,2688
static uint64 retryBits[4];     // last set of match bits before retryretryBits59,2760
unsigned int patternEvaluationCount = 0;    // number of patterns evaluated in this volleypatternEvaluationCount60,2831
void ShowMatchResult(FunctionResult result, char* rule, char* label,int id)ShowMatchResult62,2923
static void MarkMatchLocation(int start, int end, int depth)MarkMatchLocation93,4833
static char* BitIndex(uint64 bits, char* buffer, int offset)BitIndex104,5123
void GetPatternData(char* buffer)GetPatternData119,5462
static void DecodeFNRef(char* side)DecodeFNRef136,6047
static void DecodeAssignment(char* word, char* lhs, char* op, char* rhs)DecodeAssignment145,6291
static void DecodeComparison(char* word, char* lhs, char* op, char* rhs)DecodeComparison159,6697
bool MatchesPattern(char* word, char* pattern) //   does word match pattern of characters and *MatchesPattern176,7164
static bool SysVarExists(char* ptr) //   %system variableSysVarExists209,8863
static bool FindPartialInSentenceTest(char* test, int start, int originalstart, bool reverse,FindPartialInSentenceTest216,9058
static bool MatchTest(bool reverse, WORDP D, int start, char* op, char* compare, int quote,MatchTest254,10584
static bool FindPhrase(char* word, int start, bool reverse, int & actualStart, int& actualEnd)FindPhrase304,13278
static char* PushMatch(int used)PushMatch337,14598
static void PopMatch(char* base, int used)PopMatch355,15102
so that if the match fails, we can revert back to where we were(under some circumstances).circumstances373,15705

english.h,97
#define _H_H2,11
#define MAINLEVEL MAINLEVEL25,1245
#define MAX_CLAUSES MAX_CLAUSES27,1266

mongodb.h,29
#define _MONGOH_MONGOH2,16

variableSystem.cpp,4066
int bbb = 0;bbb4,80
STACKREF stackedUserVariableThreadList = NULL;stackedUserVariableThreadList14,412
int impliedSet = ALREADY_HANDLED;	// what fact set is involved in operationimpliedSet15,459
int impliedWild = ALREADY_HANDLED;	// what wildcard is involved in operationimpliedWild16,535
char impliedOp = 0;					// for impliedSet, what op is in effect += = impliedOp17,612
HEAPREF variableChangedThreadlist = NULL;variableChangedThreadlist18,682
int wildcardIndex = 0;wildcardIndex20,725
char wildcardOriginalText[MAX_WILDCARDS + 1][MAX_MATCHVAR_SIZE + 1];  // spot wild cards can be wildcardOriginalText21,748
char wildcardCanonicalText[MAX_WILDCARDS + 1][MAX_MATCHVAR_SIZE + 1];  // spot wild cards can bewildcardCanonicalText22,851
unsigned int wildcardPosition[MAX_WILDCARDS + 1]; // spot it started and ended in sentencewildcardPosition23,955
char wildcardSeparator[2];wildcardSeparator24,1046
bool wildcardSeparatorGiven = false;wildcardSeparatorGiven25,1073
WORDP tracedFunctionsList[MAX_TRACED_FUNCTIONS];tracedFunctionsList29,1157
HEAPREF kernelVariableThreadList = NULL;kernelVariableThreadList30,1206
HEAPREF botVariableThreadList = NULL;botVariableThreadList31,1247
unsigned int tracedFunctionsIndex;tracedFunctionsIndex32,1285
unsigned int modifiedTraceVal = 0;modifiedTraceVal33,1320
bool modifiedTrace = false;modifiedTrace34,1355
unsigned int modifiedTimingVal = 0;modifiedTimingVal35,1383
bool modifiedTiming = false;modifiedTiming36,1419
void InitVariableSystem()InitVariableSystem38,1449
int GetWildcardID(char* x) // wildcard id is "_10" or "_3"GetWildcardID47,1689
static void CompleteWildcard()CompleteWildcard56,1965
static void FlipSeparator(char* word, char* buffer)FlipSeparator68,2350
void JoinMatch(int start, int end, int index, bool inpattern)JoinMatch81,2786
void SetWildCard(int start, int end, bool inpattern)SetWildCard169,6544
void SetWildCardGiven(int start, int end, bool inpattern, int index)SetWildCardGiven194,7443
void SetWildCardNull()SetWildCardNull215,8266
void SetWildCardGivenValue(char* original, char* canonical, int start, int end, int index)SetWildCardGivenValue221,8390
void SetWildCardIndexStart(int index)SetWildCardIndexStart240,9240
void SetWildCard(char* value, char* canonicalValue, const char* index, unsigned int position)SetWildCard245,9310
char* GetwildcardText(unsigned int i, bool canon)GetwildcardText272,10313
char* GetUserVariable(const char* word, bool nojson, bool fortrace)GetUserVariable278,10477
void ClearUserVariableSetFlags()ClearUserVariableSetFlags523,20754
void ShowChangedVariables()ShowChangedVariables534,21010
void PrepareVariableChange(WORDP D, char* word, bool init)PrepareVariableChange548,21408
void SetVariable(WORDP D, char* value)SetVariable574,22396
void SetUserVariable(const char* var, char* word, bool assignment)SetUserVariable594,23026
static FunctionResult DoMath(char* oldValue, char* moreValue, char* result, char op, char* fulloDoMath753,27960
FunctionResult Add2UserVariable(char* var, char* moreValue, char* op, char* originalArg)Add2UserVariable833,30914
static void SetBotVars(HEAPREF varthread)SetBotVars916,34072
void ReestablishBotVariables() // refresh bot variables in case user overwrote themReestablishBotVariables927,34307
void NoteBotVariables() // system defined variablesNoteBotVariables933,34477
void MigrateUserVariables()MigrateUserVariables952,35235
void RecoverUserVariables()RecoverUserVariables965,35680
void ClearUserVariables(char* above)ClearUserVariables978,36159
static int compareVariables(const void *var1, const void *var2)compareVariables1003,36941
static void ListVariables(char* header, HEAPREF varthread)ListVariables1008,37077
void DumpUserVariables(bool doall)DumpUserVariables1021,37437
char* ProcessMath(char* ptr, char* oldValue, FunctionResult result) // paren expression returns ProcessMath1074,38995
char* PerformAssignment(char* word, char* ptr, char* buffer, FunctionResult &result, bool nojsonPerformAssignment1119,40210

scriptCompile.cpp,10298
#define PATTERNDEPTH PATTERNDEPTH5,94
static HEAPREF undefinedCallThreadList = NULL;undefinedCallThreadList7,121
static bool nospellcheck = false;nospellcheck8,168
bool disablePatternOptimization = true;disablePatternOptimization9,202
static bool noPatternOptimization = true;noPatternOptimization10,242
static unsigned int conceptID = 0; // name of concept setconceptID11,284
char* patternStarter = NULL;patternStarter12,342
char* patternEnder = NULL;patternEnder13,371
const char* linestartpoint = NULL;linestartpoint14,398
static WORDP currentFunctionDefinition;			// current macro defining or executingcurrentFunctionDefinition15,433
static unsigned int complexity = 0;complexity17,515
static bool livecall = false;livecall18,551
static unsigned int priorLine = 0;priorLine19,581
static char* currentTopicBots = NULL;currentTopicBots20,616
bool autoset = false;autoset21,654
static char macroName[MAX_WORD_SIZE];macroName22,676
static uint64 macroid;macroid23,714
char* dataBase = NULL;dataBase24,737
static char* dataChunk = NULL;dataChunk25,760
static char* outputStart = NULL;outputStart26,791
static char* lineStart = NULL;lineStart27,824
static bool globalBotScope = false;globalBotScope28,855
static HEAPREF beenHereThreadList = NULL;beenHereThreadList29,891
char* newScriptBuffer = NULL;newScriptBuffer30,933
char* oldScriptBuffer = NULL;oldScriptBuffer31,963
static char display[MAX_DISPLAY][100];display32,993
static int displayIndex = 0;displayIndex33,1032
static char* incomingPtrSys = 0;			// cache AFTER token find ptr when peeking.incomingPtrSys34,1061
static char lookaheadSys[MAX_WORD_SIZE];	// cache token found when peekinglookaheadSys35,1140
static unsigned int hasWarnings;			// number of warnings generatedhasWarnings36,1215
unsigned int hasErrors;hasErrors37,1282
uint64 grade = 0;						// vocabulary warninggrade38,1306
char* lastDeprecation = 0;lastDeprecation39,1351
CompileStatus compiling = NOT_COMPILING;			// script compiler in progresscompiling40,1378
bool patternContext = false;	// current compiling a patternpatternContext41,1452
unsigned int buildId; // current buildbuildId42,1512
static int callingSystem = 0;callingSystem43,1551
static bool chunking = false;chunking44,1581
static unsigned int substitutes;substitutes45,1611
static unsigned int cases;cases46,1644
static unsigned int badword;badword47,1671
static unsigned int functionCall;functionCall48,1700
static bool isDescribe = false;isDescribe49,1734
char* tableinput = NULL;tableinput50,1766
char warnings[MAX_WARNINGS][MAX_WORD_SIZE];warnings52,1792
unsigned int warnIndex = 0;warnIndex53,1836
static char baseName[SMALL_WORD_SIZE];baseName54,1864
char errors[MAX_ERRORS][MAX_WORD_SIZE];errors56,1904
unsigned int errorIndex = 0;errorIndex57,1944
static char functionArguments[MAX_ARGUMENT_COUNT+1][500];functionArguments58,1973
static int functionArgumentCount = 0;functionArgumentCount59,2031
char scopeBotName[MAX_WORD_SIZE];scopeBotName60,2069
static bool renameInProgress = false;renameInProgress61,2103
static bool endtopicSeen = false; // needed when ending a planendtopicSeen62,2141
static char* nextToken;			// current lookahead tokennextToken63,2204
unsigned int buildID = 0;buildID65,2258
static char* topicFiles[] = //   files created by a topic refresh from scratch topicFiles67,2285
static FILE* mapFile = NULL;					// for IDEmapFile85,3121
static FILE* patternFile = NULL; // where to store pattern wordspatternFile86,3165
void EraseTopicBin(unsigned int build, char* name)EraseTopicBin88,3231
void InitScriptSystem()InitScriptSystem99,3477
void AddWarning(char* buffer)AddWarning108,3623
bool StartScriptCompiler(bool normal)StartScriptCompiler131,4725
void EndScriptCompiler()EndScriptCompiler150,5401
void ScriptError()ScriptError163,5645
void ScriptWarn()ScriptWarn182,6239
static void AddBeenHere(WORDP D)AddBeenHere196,6632
void UnbindBeenHere()UnbindBeenHere202,6795
void AddError(char* buffer)AddError214,7019
static char* FindComparison(char* word)FindComparison254,8286
static void InsureAppropriateCase(char* word)InsureAppropriateCase290,9559
static int GetFunctionArgument(char* arg) //   get index of argument (0-based) if it is value, eGetFunctionArgument317,10564
static void FindDeprecated(char* ptr, char* value, char* message)FindDeprecated326,10822
static void AddDisplay(char* word)AddDisplay352,11480
static char* ReadDisplay(FILE* in, char* ptr)ReadDisplay363,11823
char* ReadSystemToken(char* ptr, char* word, bool separateUnderscore) //   how we tokenize systeReadSystemToken380,12385
    []() {}  always and separate into individual tokens except for _(_[_{__anon461acc140102410,14298
#define MAX_TOPIC_SIZE MAX_TOPIC_SIZE1356,51243
#define MAX_TOPIC_RULES MAX_TOPIC_RULES1357,51274
#define MAX_TABLE_ARGS MAX_TABLE_ARGS1358,51304
() [ ] { } should be independent tokens. Possessive forms like cat's and cats' should return as __anon461acc1402021381,52541
()[]{}		nesting of some kind (sequence AND, OR, OPTIONAL)__anon461acc1403022483,103631
#define PATTERNDEPTH PATTERNDEPTH5,94
static HEAPREF undefinedCallThreadList = NULL;undefinedCallThreadList7,121
static bool nospellcheck = false;nospellcheck8,168
bool disablePatternOptimization = true;disablePatternOptimization9,202
static bool noPatternOptimization = true;noPatternOptimization10,242
static unsigned int conceptID = 0; // name of concept setconceptID11,284
char* patternStarter = NULL;patternStarter12,342
char* patternEnder = NULL;patternEnder13,371
const char* linestartpoint = NULL;linestartpoint14,398
static WORDP currentFunctionDefinition;			// current macro defining or executingcurrentFunctionDefinition15,433
static unsigned int complexity = 0;complexity17,515
static bool livecall = false;livecall18,551
static unsigned int priorLine = 0;priorLine19,581
static char* currentTopicBots = NULL;currentTopicBots20,616
bool autoset = false;autoset21,654
static char macroName[MAX_WORD_SIZE];macroName22,676
static uint64 macroid;macroid23,714
char* dataBase = NULL;dataBase24,737
static char* dataChunk = NULL;dataChunk25,760
static char* outputStart = NULL;outputStart26,791
static char* lineStart = NULL;lineStart27,824
static bool globalBotScope = false;globalBotScope28,855
static HEAPREF beenHereThreadList = NULL;beenHereThreadList29,891
char* newScriptBuffer = NULL;newScriptBuffer30,933
char* oldScriptBuffer = NULL;oldScriptBuffer31,963
static char display[MAX_DISPLAY][100];display32,993
static int displayIndex = 0;displayIndex33,1032
static char* incomingPtrSys = 0;			// cache AFTER token find ptr when peeking.incomingPtrSys34,1061
static char lookaheadSys[MAX_WORD_SIZE];	// cache token found when peekinglookaheadSys35,1140
static unsigned int hasWarnings;			// number of warnings generatedhasWarnings36,1215
unsigned int hasErrors;hasErrors37,1282
uint64 grade = 0;						// vocabulary warninggrade38,1306
char* lastDeprecation = 0;lastDeprecation39,1351
CompileStatus compiling = NOT_COMPILING;			// script compiler in progresscompiling40,1378
bool patternContext = false;	// current compiling a patternpatternContext41,1452
unsigned int buildId; // current buildbuildId42,1512
static int callingSystem = 0;callingSystem43,1551
static bool chunking = false;chunking44,1581
static unsigned int substitutes;substitutes45,1611
static unsigned int cases;cases46,1644
static unsigned int badword;badword47,1671
static unsigned int functionCall;functionCall48,1700
static bool isDescribe = false;isDescribe49,1734
char* tableinput = NULL;tableinput50,1766
char warnings[MAX_WARNINGS][MAX_WORD_SIZE];warnings52,1792
unsigned int warnIndex = 0;warnIndex53,1836
static char baseName[SMALL_WORD_SIZE];baseName54,1864
char errors[MAX_ERRORS][MAX_WORD_SIZE];errors56,1904
unsigned int errorIndex = 0;errorIndex57,1944
static char functionArguments[MAX_ARGUMENT_COUNT+1][500];functionArguments58,1973
static int functionArgumentCount = 0;functionArgumentCount59,2031
char scopeBotName[MAX_WORD_SIZE];scopeBotName60,2069
static bool renameInProgress = false;renameInProgress61,2103
static bool endtopicSeen = false; // needed when ending a planendtopicSeen62,2141
static char* nextToken;			// current lookahead tokennextToken63,2204
unsigned int buildID = 0;buildID65,2258
static char* topicFiles[] = //   files created by a topic refresh from scratch topicFiles67,2285
static FILE* mapFile = NULL;					// for IDEmapFile85,3121
static FILE* patternFile = NULL; // where to store pattern wordspatternFile86,3165
void EraseTopicBin(unsigned int build, char* name)EraseTopicBin88,3231
void InitScriptSystem()InitScriptSystem99,3477
void AddWarning(char* buffer)AddWarning108,3623
bool StartScriptCompiler(bool normal)StartScriptCompiler131,4725
void EndScriptCompiler()EndScriptCompiler150,5401
void ScriptError()ScriptError163,5645
void ScriptWarn()ScriptWarn182,6239
static void AddBeenHere(WORDP D)AddBeenHere196,6632
void UnbindBeenHere()UnbindBeenHere202,6795
void AddError(char* buffer)AddError214,7019
static char* FindComparison(char* word)FindComparison254,8286
static void InsureAppropriateCase(char* word)InsureAppropriateCase290,9559
static int GetFunctionArgument(char* arg) //   get index of argument (0-based) if it is value, eGetFunctionArgument317,10564
static void FindDeprecated(char* ptr, char* value, char* message)FindDeprecated326,10822
static void AddDisplay(char* word)AddDisplay352,11480
static char* ReadDisplay(FILE* in, char* ptr)ReadDisplay363,11823
char* ReadSystemToken(char* ptr, char* word, bool separateUnderscore) //   how we tokenize systeReadSystemToken380,12385
    []() {}  always and separate into individual tokens except for _(_[_{__anon461acc140402410,14298
#define MAX_TOPIC_SIZE MAX_TOPIC_SIZE1356,51243
#define MAX_TOPIC_RULES MAX_TOPIC_RULES1357,51274
#define MAX_TABLE_ARGS MAX_TABLE_ARGS1358,51304
() [ ] { } should be independent tokens. Possessive forms like cat's and cats' should return as __anon461acc1405021381,52541
()[]{}		nesting of some kind (sequence AND, OR, OPTIONAL)__anon461acc1406022483,103631

zlib/zlib.h,5650
#define ZLIB_HZLIB_H32,1345
#define ZLIB_VERSION ZLIB_VERSION40,1421
#define ZLIB_VERNUM ZLIB_VERNUM41,1451
#define ZLIB_VER_MAJOR ZLIB_VER_MAJOR42,1478
#define ZLIB_VER_MINOR ZLIB_VER_MINOR43,1503
#define ZLIB_VER_REVISION ZLIB_VER_REVISION44,1528
#define ZLIB_VER_SUBREVISION ZLIB_VER_SUBREVISION45,1557
typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));voidpf81,3310
typedef struct z_stream_s {z_stream_s86,3474
    z_const Bytef *next_in;     /* next input byte */next_in87,3502
    uInt     avail_in;  /* number of bytes available at next_in */avail_in88,3556
    uLong    total_in;  /* total number of input bytes read so far */total_in89,3623
    Bytef    *next_out; /* next output byte will go here */next_out91,3694
    uInt     avail_out; /* remaining free space at next_out */avail_out92,3754
    uLong    total_out; /* total number of bytes output so far */total_out93,3817
    z_const char *msg;  /* last error message, NULL if no error */msg95,3884
    struct internal_state FAR *state; /* not visible by applications */state96,3951
    alloc_func zalloc;  /* used to allocate the internal state */zalloc98,4024
    free_func  zfree;   /* used to free the internal state */zfree99,4090
    voidpf     opaque;  /* private data object passed to zalloc and zfree */opaque100,4152
    int     data_type;  /* best guess about the data type: binary or textdata_type102,4230
    uLong   adler;      /* Adler-32 or CRC-32 value of the uncompressed data */adler104,4381
    uLong   reserved;   /* reserved for future use */reserved105,4461
} z_stream;z_stream106,4515
typedef z_stream FAR *z_streamp;z_streamp108,4528
typedef struct gz_header_s {gz_header_s114,4697
    int     text;       /* true if compressed data believed to be text */text115,4726
    uLong   time;       /* modification time */time116,4800
    int     xflags;     /* extra flags (not used when writing a gzip file) */xflags117,4848
    int     os;         /* operating system */os118,4926
    Bytef   *extra;     /* pointer to extra field or Z_NULL if none */extra119,4973
    uInt    extra_len;  /* extra field length (valid if extra != Z_NULL) */extra_len120,5044
    uInt    extra_max;  /* space at extra (only when reading header) */extra_max121,5120
    Bytef   *name;      /* pointer to zero-terminated file name or Z_NULL */name122,5192
    uInt    name_max;   /* space at name (only when reading header) */name_max123,5269
    Bytef   *comment;   /* pointer to zero-terminated comment or Z_NULL */comment124,5340
    uInt    comm_max;   /* space at comment (only when reading header) */comm_max125,5415
    int     hcrc;       /* true if there was or will be a header crc */hcrc126,5489
    int     done;       /* true when done reading gzip header (not useddone127,5561
} gz_header;gz_header129,5689
typedef gz_header FAR *gz_headerp;gz_headerp131,5703
#define Z_NO_FLUSH Z_NO_FLUSH168,7685
#define Z_PARTIAL_FLUSH Z_PARTIAL_FLUSH169,7711
#define Z_SYNC_FLUSH Z_SYNC_FLUSH170,7737
#define Z_FULL_FLUSH Z_FULL_FLUSH171,7763
#define Z_FINISH Z_FINISH172,7789
#define Z_BLOCK Z_BLOCK173,7815
#define Z_TREES Z_TREES174,7841
#define Z_OK Z_OK177,7942
#define Z_STREAM_END Z_STREAM_END178,7968
#define Z_NEED_DICT Z_NEED_DICT179,7994
#define Z_ERRNO Z_ERRNO180,8020
#define Z_STREAM_ERROR Z_STREAM_ERROR181,8048
#define Z_DATA_ERROR Z_DATA_ERROR182,8076
#define Z_MEM_ERROR Z_MEM_ERROR183,8104
#define Z_BUF_ERROR Z_BUF_ERROR184,8132
#define Z_VERSION_ERROR Z_VERSION_ERROR185,8160
#define Z_NO_COMPRESSION Z_NO_COMPRESSION190,8342
#define Z_BEST_SPEED Z_BEST_SPEED191,8377
#define Z_BEST_COMPRESSION Z_BEST_COMPRESSION192,8412
#define Z_DEFAULT_COMPRESSION Z_DEFAULT_COMPRESSION193,8447
#define Z_FILTERED Z_FILTERED196,8509
#define Z_HUFFMAN_ONLY Z_HUFFMAN_ONLY197,8541
#define Z_RLE Z_RLE198,8573
#define Z_FIXED Z_FIXED199,8605
#define Z_DEFAULT_STRATEGY Z_DEFAULT_STRATEGY200,8637
#define Z_BINARY Z_BINARY203,8735
#define Z_TEXT Z_TEXT204,8756
#define Z_ASCII Z_ASCII205,8777
#define Z_UNKNOWN Z_UNKNOWN206,8852
#define Z_DEFLATED Z_DEFLATED209,8933
#define Z_NULL Z_NULL212,9035
#define zlib_version zlib_version214,9100
typedef struct gzFile_s *gzFile;    /* semi-opaque gzip file descriptor */gzFile1300,67762
#  define z_deflateInit(z_deflateInit1779,90436
#  define z_inflateInit(z_inflateInit1781,90552
#  define z_deflateInit2(z_deflateInit21783,90652
#  define z_inflateInit2(z_inflateInit21786,90879
#  define z_inflateBackInit(z_inflateBackInit1789,91033
#  define deflateInit(deflateInit1793,91220
#  define inflateInit(inflateInit1795,91334
#  define deflateInit2(deflateInit21797,91432
#  define inflateInit2(inflateInit21800,91657
#  define inflateBackInit(inflateBackInit1803,91809
struct gzFile_s {gzFile_s1817,92463
    unsigned have;have1818,92481
    unsigned char *next;next1819,92500
    z_off64_t pos;pos1820,92525
#  define z_gzgetc(z_gzgetc1825,92662
#  define gzgetc(gzgetc1828,92772
#    define z_gzopen z_gzopen1849,93732
#    define z_gzseek z_gzseek1850,93764
#    define z_gztell z_gztell1851,93796
#    define z_gzoffset z_gzoffset1852,93828
#    define z_adler32_combine z_adler32_combine1853,93864
#    define z_crc32_combine z_crc32_combine1854,93914
#    define gzopen gzopen1856,93968
#    define gzseek gzseek1857,93996
#    define gztell gztell1858,94024
#    define gzoffset gzoffset1859,94052
#    define adler32_combine adler32_combine1860,94084
#    define crc32_combine crc32_combine1861,94130

zlib/zconf.h,8835
#define ZCONF_HZCONF_H9,228
#  define Z_PREFIX_SETZ_PREFIX_SET18,610
#  define _dist_code _dist_code21,675
#  define _length_code _length_code22,720
#  define _tr_align _tr_align23,767
#  define _tr_flush_bits _tr_flush_bits24,811
#  define _tr_flush_block _tr_flush_block25,860
#  define _tr_init _tr_init26,910
#  define _tr_stored_block _tr_stored_block27,953
#  define _tr_tally _tr_tally28,1004
#  define adler32 adler3229,1048
#  define adler32_combine adler32_combine30,1090
#  define adler32_combine64 adler32_combine6431,1140
#  define adler32_z adler32_z32,1192
#    define compress compress34,1253
#    define compress2 compress235,1298
#    define compressBound compressBound36,1344
#  define crc32 crc3238,1403
#  define crc32_combine crc32_combine39,1443
#  define crc32_combine64 crc32_combine6440,1491
#  define crc32_z crc32_z41,1541
#  define deflate deflate42,1583
#  define deflateBound deflateBound43,1625
#  define deflateCopy deflateCopy44,1672
#  define deflateEnd deflateEnd45,1718
#  define deflateGetDictionary deflateGetDictionary46,1763
#  define deflateInit deflateInit47,1818
#  define deflateInit2 deflateInit248,1864
#  define deflateInit2_ deflateInit2_49,1911
#  define deflateInit_ deflateInit_50,1959
#  define deflateParams deflateParams51,2006
#  define deflatePending deflatePending52,2054
#  define deflatePrime deflatePrime53,2103
#  define deflateReset deflateReset54,2150
#  define deflateResetKeep deflateResetKeep55,2197
#  define deflateSetDictionary deflateSetDictionary56,2248
#  define deflateSetHeader deflateSetHeader57,2303
#  define deflateTune deflateTune58,2354
#  define deflate_copyright deflate_copyright59,2400
#  define get_crc_table get_crc_table60,2452
#    define gz_error gz_error62,2517
#    define gz_intmax gz_intmax63,2562
#    define gz_strwinerror gz_strwinerror64,2608
#    define gzbuffer gzbuffer65,2659
#    define gzclearerr gzclearerr66,2704
#    define gzclose gzclose67,2751
#    define gzclose_r gzclose_r68,2795
#    define gzclose_w gzclose_w69,2841
#    define gzdirect gzdirect70,2887
#    define gzdopen gzdopen71,2932
#    define gzeof gzeof72,2976
#    define gzerror gzerror73,3018
#    define gzflush gzflush74,3062
#    define gzfread gzfread75,3106
#    define gzfwrite gzfwrite76,3150
#    define gzgetc gzgetc77,3195
#    define gzgetc_ gzgetc_78,3238
#    define gzgets gzgets79,3282
#    define gzoffset gzoffset80,3325
#    define gzoffset64 gzoffset6481,3370
#    define gzopen gzopen82,3417
#    define gzopen64 gzopen6483,3460
#      define gzopen_w gzopen_w85,3523
#    define gzprintf gzprintf87,3581
#    define gzputc gzputc88,3626
#    define gzputs gzputs89,3669
#    define gzread gzread90,3712
#    define gzrewind gzrewind91,3755
#    define gzseek gzseek92,3800
#    define gzseek64 gzseek6493,3843
#    define gzsetparams gzsetparams94,3888
#    define gztell gztell95,3936
#    define gztell64 gztell6496,3979
#    define gzungetc gzungetc97,4024
#    define gzvprintf gzvprintf98,4069
#    define gzwrite gzwrite99,4115
#  define inflate inflate101,4168
#  define inflateBack inflateBack102,4210
#  define inflateBackEnd inflateBackEnd103,4256
#  define inflateBackInit inflateBackInit104,4305
#  define inflateBackInit_ inflateBackInit_105,4355
#  define inflateCodesUsed inflateCodesUsed106,4406
#  define inflateCopy inflateCopy107,4457
#  define inflateEnd inflateEnd108,4503
#  define inflateGetDictionary inflateGetDictionary109,4548
#  define inflateGetHeader inflateGetHeader110,4603
#  define inflateInit inflateInit111,4654
#  define inflateInit2 inflateInit2112,4700
#  define inflateInit2_ inflateInit2_113,4747
#  define inflateInit_ inflateInit_114,4795
#  define inflateMark inflateMark115,4842
#  define inflatePrime inflatePrime116,4888
#  define inflateReset inflateReset117,4935
#  define inflateReset2 inflateReset2118,4982
#  define inflateResetKeep inflateResetKeep119,5030
#  define inflateSetDictionary inflateSetDictionary120,5081
#  define inflateSync inflateSync121,5136
#  define inflateSyncPoint inflateSyncPoint122,5182
#  define inflateUndermine inflateUndermine123,5233
#  define inflateValidate inflateValidate124,5284
#  define inflate_copyright inflate_copyright125,5334
#  define inflate_fast inflate_fast126,5386
#  define inflate_table inflate_table127,5433
#    define uncompress uncompress129,5498
#    define uncompress2 uncompress2130,5545
#  define zError zError132,5602
#    define zcalloc zcalloc134,5660
#    define zcfree zcfree135,5704
#  define zlibCompileFlags zlibCompileFlags137,5756
#  define zlibVersion zlibVersion138,5807
#  define Byte Byte141,5900
#  define Bytef Bytef142,5939
#  define alloc_func alloc_func143,5979
#  define charf charf144,6024
#  define free_func free_func145,6064
#    define gzFile gzFile147,6125
#  define gz_header gz_header149,6177
#  define gz_headerp gz_headerp150,6221
#  define in_func in_func151,6266
#  define intf intf152,6308
#  define out_func out_func153,6347
#  define uInt uInt154,6390
#  define uIntf uIntf155,6429
#  define uLong uLong156,6469
#  define uLongf uLongf157,6509
#  define voidp voidp158,6550
#  define voidpc voidpc159,6590
#  define voidpf voidpf160,6631
#  define gz_header_s gz_header_s163,6718
#  define internal_state internal_state164,6764
#  define MSDOSMSDOS169,6864
#  define OS2OS2172,6944
#  define WINDOWSWINDOWS175,7008
#    define WIN32WIN32179,7114
#      define SYS16BITSYS16BIT185,7313
#  define MAXSEG_64KMAXSEG_64K195,7524
#  define UNALIGNED_OKUNALIGNED_OK198,7565
#    define STDCSTDC203,7635
#      define STDC99STDC99207,7714
#  define STDCSTDC212,7828
#  define STDCSTDC215,7917
#  define STDCSTDC218,8016
#  define STDCSTDC221,8099
#  define STDCSTDC225,8199
#    define const const230,8309
#  define z_const z_const235,8440
#  define z_constz_const237,8470
   typedef unsigned long z_size_t;z_size_t241,8510
#  define z_longlong z_longlong243,8551
     typedef unsigned NO_SIZE_T z_size_t;z_size_t245,8607
     typedef size_t z_size_t;z_size_t248,8695
     typedef unsigned long z_size_t;z_size_t250,8733
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL258,8898
#    define MAX_MEM_LEVEL MAX_MEM_LEVEL260,8934
#  define MAX_WBITS MAX_WBITS270,9224
#    define OF(OF290,10006
#    define OF(OF292,10041
#    define Z_ARG(Z_ARG298,10182
#    define Z_ARG(Z_ARG300,10220
#    define SMALL_MEDIUMSMALL_MEDIUM313,10682
#      define FAR FAR315,10727
#      define FAR FAR317,10760
#    define SMALL_MEDIUMSMALL_MEDIUM322,10893
#      define FAR FAR324,10942
#      define FAR FAR326,10975
#        define ZEXTERN ZEXTERN338,11327
#        define ZEXTERN ZEXTERN340,11392
#    define ZEXPORT ZEXPORT355,11893
#      define ZEXPORTVA ZEXPORTVA357,11937
#      define ZEXPORTVA ZEXPORTVA359,11979
#      define ZEXPORT ZEXPORT367,12107
#      define ZEXPORTVA ZEXPORTVA368,12153
#      define ZEXPORT ZEXPORT370,12209
#      define ZEXPORTVA ZEXPORTVA371,12255
#  define ZEXTERN ZEXTERN377,12345
#  define ZEXPORTZEXPORT380,12393
#  define ZEXPORTVAZEXPORTVA383,12436
#  define FARFAR387,12476
typedef unsigned char  Byte;  /* 8 bits */Byte391,12525
typedef unsigned int   uInt;  /* 16 bits or more */uInt393,12575
typedef unsigned long  uLong; /* 32 bits or more */uLong394,12627
#  define Bytef Bytef398,12775
   typedef Byte  FAR Bytef;Bytef400,12806
typedef char  FAR charf;charf402,12841
typedef int   FAR intf;intf403,12866
typedef uInt  FAR uIntf;uIntf404,12890
typedef uLong FAR uLongf;uLongf405,12915
   typedef void const *voidpc;voidpc408,12954
   typedef void FAR   *voidpf;voidpf409,12985
   typedef void       *voidp;voidp410,13016
   typedef Byte const *voidpc;voidpc412,13052
   typedef Byte FAR   *voidpf;voidpf413,13083
   typedef Byte       *voidp;voidp414,13114
#    define Z_U4 Z_U4420,13263
#    define Z_U4 Z_U4422,13325
#    define Z_U4 Z_U4424,13392
   typedef Z_U4 z_crc_t;z_crc_t429,13453
   typedef unsigned long z_crc_t;z_crc_t431,13484
#  define Z_HAVE_STDARG_HZ_HAVE_STDARG_H435,13573
#  define Z_HAVE_UNISTD_HZ_HAVE_UNISTD_H467,14437
#      define z_off_t z_off_t476,14720
#  define Z_LFS64Z_LFS64482,14828
#  define Z_LARGE64Z_LARGE64486,14907
#  define Z_WANT64Z_WANT64490,15015
#  define SEEK_SET SEEK_SET494,15085
#  define SEEK_CUR SEEK_CUR495,15155
#  define SEEK_END SEEK_END496,15224
#  define z_off_t z_off_t500,15326
#  define z_off64_t z_off64_t504,15400
#    define z_off64_t z_off64_t507,15498
#    define z_off64_t z_off64_t509,15536

makett.txt,0

evserver.cpp,2820
#define CLIENT_CHUNK_LENGTH CLIENT_CHUNK_LENGTH60,2698
#define HIDDEN_OVERLAP HIDDEN_OVERLAP61,2733
#define HIDDEN_OFFSET HIDDEN_OFFSET62,2787
string interface_g;interface_g65,2847
int port_g;port_g66,2867
int listen_queue_length_g = 16*1024; // 16 klisten_queue_length_g67,2879
int srv_socket_g = -1;srv_socket_g69,2925
struct ev_loop *l_g = 0;l_g72,2961
ev_io ev_accept_r_g;ev_accept_r_g73,2986
ev_timer tt_g;tt_g74,3007
static int ev_pending = 0;ev_pending75,3022
static int ev_max = 0;ev_max76,3049
#define MAX_CHILDREN_D MAX_CHILDREN_D80,3112
ev_child children_g[MAX_CHILDREN_D];children_g81,3138
int no_children_g = 0;no_children_g82,3175
int cur_children_g = 0;cur_children_g83,3198
bool parent_g = true;parent_g84,3222
typedef vector<char> Buffer_t;Buffer_t95,3534
#define ITER_TO_OFFSET(ITER_TO_OFFSET97,3566
struct Client_tClient_t98,3627
    char magic[9];magic100,3645
    int fd;fd101,3664
    ev_io ev_r;ev_r102,3676
    ev_io ev_w;ev_w103,3692
    struct ev_loop *l;l104,3708
    bool requestValid;requestValid105,3731
    string ip;ip106,3754
    char* bot;bot107,3769
    char* message;message108,3784
    char* user;user109,3803
    char* data = NULL;data110,3819
    Buffer_t incomming;incomming111,3842
	uint64 starttime = ElapsedMilliseconds(); starttime112,3866
    uint64 startnltime = 0;startnltime113,3910
    uint64 endnltime = 0;endnltime114,3938
    uint64 qtime = 0;qtime115,3964
    uint64 nltime = 0;nltime116,3986
    void Qdown()Qdown118,4010
    Client_t(int fd, struct ev_loop *l_p) : fd(fd), l(l_p), requestValid(false)Client_t124,4083
    ~Client_t() // if child dies, this destructor is not called~Client_t134,4456
    void prepare_for_next_request()prepare_for_next_request143,4770
    string get_foreign_address()get_foreign_address155,5154
    int recv_data()recv_data163,5408
    int send_data()send_data185,6000
    void prepare_for_chat()prepare_for_chat226,7130
    int received_request() {received_request238,7521
static int settcpnodelay(int fd)settcpnodelay260,8271
static int setnonblocking(int fd)setnonblocking270,8507
int fork_child(ev_child *child_watcher = 0)fork_child289,9191
char* currentDateTime() {currentDateTime330,10127
static void evsrv_child_died(EV_P_ ev_child *w, int revents) {evsrv_child_died335,10205
int evsrv_init(const string &interfaceKind, int port, char* arg) {evsrv_init365,11391
int evsrv_run()evsrv_run513,15784
static void evsrv_accept(EV_P_ ev_io *w, int revents)evsrv_accept529,16358
static void client_read(EV_P_ ev_io *w, int revents)client_read561,17445
static void client_write(EV_P_ ev_io *w, int revents)client_write611,18798
void Overflow()Overflow630,19283
int evsrv_do_chat(Client_t *client)evsrv_do_chat635,19320

cs_ev.c,88
#define EV_STANDALONE EV_STANDALONE3,38
#define EV_CHILD_ENABLE EV_CHILD_ENABLE4,62

TAGS,0

topicSystem.h,2583
#define _TOPICSYSTEMH_TOPICSYSTEMH2,22
#define LAYER_KERNEL LAYER_KERNEL18,1134
#define LAYER_0 LAYER_019,1158
#define LAYER_1 LAYER_120,1176
#define LAYER_BOOT LAYER_BOOT21,1194
#define LAYER_USER LAYER_USER22,1215
#define MAX_LABEL_SIZE MAX_LABEL_SIZE24,1237
#define NO_REJOINDER NO_REJOINDER26,1265
#define BLOCKED_REJOINDER BLOCKED_REJOINDER27,1292
#define QUESTION QUESTION30,1353
#define STATEMENT STATEMENT31,1374
#define STATEMENT_QUESTION STATEMENT_QUESTION32,1396
#define RANDOM_GAMBIT RANDOM_GAMBIT33,1427
#define GAMBIT GAMBIT34,1456
#define ENDUNIT ENDUNIT36,1478
#define DUPLICATETOPICSEPARATOR DUPLICATETOPICSEPARATOR38,1544
#define USED_CODES USED_CODES40,1581
#define ENDUNITTEXT ENDUNITTEXT41,1633
#define JUMP_OFFSET JUMP_OFFSET42,1702
#define MAX_JUMP_OFFSET MAX_JUMP_OFFSET43,1864
#define MAX_REFERENCE_TOPICS MAX_REFERENCE_TOPICS45,1925
#define SAVEOLDCONTEXT(SAVEOLDCONTEXT47,2011
#define RESTOREOLDCONTEXT(RESTOREOLDCONTEXT49,2166
#define TOPLEVELID(TOPLEVELID52,2350
#define REJOINDERID(REJOINDERID53,2406
#define MAKE_REJOINDERID(MAKE_REJOINDERID54,2456
#define MAKE_GAMBIT_MAX(MAKE_GAMBIT_MAX57,2554
#define GAMBIT_MAX(GAMBIT_MAX58,2591
#define RULE_MAX(RULE_MAX59,2623
#define NEXTRULE NEXTRULE62,2685
#define NEXTTOPLEVEL NEXTTOPLEVEL63,2742
#define NOMORERULES NOMORERULES65,2799
typedef void(*TOPIC_FUNCTION)(char* topicName, uint64 data);TOPIC_FUNCTION66,2868
#define MAX_TOPIC_STACK MAX_TOPIC_STACK68,2930
typedef struct topicBlocktopicBlock101,3881
	char* topicName;topicName103,3909
	char* topicRestriction;topicRestriction104,3927
	char* topicScript;topicScript105,3952
	char* topicSourceFileName;topicSourceFileName106,3972
	unsigned char* topicDebugRule;topicDebugRule107,4000
	unsigned char* topicTimingRule;topicTimingRule108,4032
	unsigned char* topicUsed;topicUsed109,4065
	unsigned int* ruleOffset;ruleOffset110,4092
	unsigned int* gambitTag;gambitTag111,4119
	unsigned int* responderTag;responderTag112,4145
	int topicFlags;topicFlags113,4174
	int topicChecksum;topicChecksum114,4191
	int topicMaxRule;topicMaxRule115,4211
	int topicDebug;topicDebug116,4230
	int topicNoDebug;topicNoDebug117,4247
	int topicTiming;topicTiming118,4266
	int topicLastGambitted;topicLastGambitted119,4284
	int topicLastRejoindered;topicLastRejoindered120,4309
	int topicLastRespondered;topicLastRespondered121,4336
	unsigned short int topicBytesRules;topicBytesRules122,4363
} topicBlock;topicBlock123,4400
#define MAX_RECENT MAX_RECENT127,4445

secure.cpp,286
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN5,48
#define UNICODEUNICODE8,93
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN11,144
#define RECV_DATA_BUF_SIZE RECV_DATA_BUF_SIZE22,342
SecureTcpConnect(SecureTcpConnect37,705
void SecureConnect(char* msg)SecureConnect183,5820

curl/curlrules.h,903
#define __CURL_CURLRULES_H__CURL_CURLRULES_H2,27
#define CurlchkszEQ(CurlchkszEQ132,4872
#define CurlchkszGE(CurlchkszGE134,4923
  __curl_rule_01____curl_rule_01__142,5136
  __curl_rule_02____curl_rule_02__152,5371
  __curl_rule_03____curl_rule_03__162,5631
  __curl_rule_04____curl_rule_04__172,5864
  __curl_rule_05____curl_rule_05__182,6135
#define CURL_ISOCPPCURL_ISOCPP209,7355
#  define __CURL_OFF_T_C_HLPR2(__CURL_OFF_T_C_HLPR2220,7625
#  define __CURL_OFF_T_C_HLPR1(__CURL_OFF_T_C_HLPR1221,7661
#  define CURL_OFF_T_C(CURL_OFF_T_C222,7719
#  define CURL_OFF_TU_C(CURL_OFF_TU_C224,7853
#    define __CURL_OFF_T_C_HLPR2(__CURL_OFF_T_C_HLPR2228,8015
#    define __CURL_OFF_T_C_HLPR2(__CURL_OFF_T_C_HLPR2230,8082
#  define __CURL_OFF_T_C_HLPR1(__CURL_OFF_T_C_HLPR1232,8150
#  define CURL_OFF_T_C(CURL_OFF_T_C233,8226
#  define CURL_OFF_TU_C(CURL_OFF_TU_C234,8304

curl/mprintf.h,467
#define __CURL_MPRINTF_H__CURL_MPRINTF_H2,25
# define printf printf63,2271
# define fprintf fprintf64,2300
# define sprintf sprintf68,2471
# define vsprintf vsprintf69,2505
# define sprintf sprintf71,2547
# define vsprintf vsprintf72,2578
# define snprintf snprintf74,2618
# define vprintf vprintf75,2651
# define vfprintf vfprintf76,2682
# define vsnprintf vsnprintf77,2715
# define aprintf aprintf78,2750
# define vaprintf vaprintf79,2781

curl/easy.h,41
#define __CURL_EASY_H__CURL_EASY_H2,22

curl/libcurl.exp,0

curl/curl.h,58093
#define __CURL_CURL_H__CURL_CURL_H2,22
#define WIN32WIN3247,1746
typedef void CURL;CURL97,3140
#  define CURL_EXTERNCURL_EXTERN104,3244
#    define CURL_EXTERN CURL_EXTERN107,3364
#    define CURL_EXTERN CURL_EXTERN109,3419
#  define CURL_EXTERN CURL_EXTERN112,3539
#  define CURL_EXTERNCURL_EXTERN114,3586
typedef SOCKET curl_socket_t;curl_socket_t120,3712
#define CURL_SOCKET_BAD CURL_SOCKET_BAD121,3742
typedef int curl_socket_t;curl_socket_t123,3787
#define CURL_SOCKET_BAD CURL_SOCKET_BAD124,3814
#define curl_socket_typedefcurl_socket_typedef126,3848
struct curl_httppost {curl_httppost129,3910
  struct curl_httppost *next;       /* next entry in the list */next130,3933
  char *name;                       /* pointer to allocated name */name131,3998
  long namelength;                  /* length of name length */namelength132,4066
  char *contents;                   /* pointer to allocated data contents */contents133,4130
  long contentslength;              /* length of contents field */contentslength134,4207
  char *buffer;                     /* pointer to allocated buffer contents */buffer135,4274
  long bufferlength;                /* length of buffer field */bufferlength136,4353
  char *contenttype;                /* Content-Type */contenttype137,4418
  struct curl_slist* contentheader; /* list of extra headers for this form */contentheader138,4473
  struct curl_httppost *more;       /* if one field name has more than onemore139,4551
  long flags;                       /* as defined below */flags142,4754
#define HTTPPOST_FILENAME HTTPPOST_FILENAME143,4813
#define HTTPPOST_READFILE HTTPPOST_READFILE144,4888
#define HTTPPOST_PTRNAME HTTPPOST_PTRNAME145,4963
#define HTTPPOST_PTRCONTENTS HTTPPOST_PTRCONTENTS147,5096
#define HTTPPOST_BUFFER HTTPPOST_BUFFER149,5233
#define HTTPPOST_PTRBUFFER HTTPPOST_PTRBUFFER150,5299
#define HTTPPOST_CALLBACK HTTPPOST_CALLBACK151,5375
  char *showfilename;               /* The file name to show. If not set, theshowfilename156,5652
  void *userp;                      /* custom pointer used foruserp159,5866
typedef int (*curl_progress_callback)(void *clientp,curl_progress_callback165,6133
typedef int (*curl_xferinfo_callback)(void *clientp,curl_xferinfo_callback173,6556
#define CURL_MAX_WRITE_SIZE CURL_MAX_WRITE_SIZE186,7281
#define CURL_MAX_HTTP_HEADER CURL_MAX_HTTP_HEADER193,7525
#define CURL_WRITEFUNC_PAUSE CURL_WRITEFUNC_PAUSE198,7718
typedef size_t (*curl_write_callback)(char *buffer,curl_write_callback200,7759
typedef enum {__anonf3adbb160103208,8006
  CURLFILETYPE_FILE = 0,CURLFILETYPE_FILE209,8021
  CURLFILETYPE_DIRECTORY,CURLFILETYPE_DIRECTORY210,8046
  CURLFILETYPE_SYMLINK,CURLFILETYPE_SYMLINK211,8072
  CURLFILETYPE_DEVICE_BLOCK,CURLFILETYPE_DEVICE_BLOCK212,8096
  CURLFILETYPE_DEVICE_CHAR,CURLFILETYPE_DEVICE_CHAR213,8125
  CURLFILETYPE_NAMEDPIPE,CURLFILETYPE_NAMEDPIPE214,8153
  CURLFILETYPE_SOCKET,CURLFILETYPE_SOCKET215,8179
  CURLFILETYPE_DOOR, /* is possible only on Sun Solaris now */CURLFILETYPE_DOOR216,8202
  CURLFILETYPE_UNKNOWN /* should never occur */CURLFILETYPE_UNKNOWN218,8266
} curlfiletype;curlfiletype219,8314
#define CURLFINFOFLAG_KNOWN_FILENAME CURLFINFOFLAG_KNOWN_FILENAME221,8331
#define CURLFINFOFLAG_KNOWN_FILETYPE CURLFINFOFLAG_KNOWN_FILETYPE222,8378
#define CURLFINFOFLAG_KNOWN_TIME CURLFINFOFLAG_KNOWN_TIME223,8425
#define CURLFINFOFLAG_KNOWN_PERM CURLFINFOFLAG_KNOWN_PERM224,8472
#define CURLFINFOFLAG_KNOWN_UID CURLFINFOFLAG_KNOWN_UID225,8519
#define CURLFINFOFLAG_KNOWN_GID CURLFINFOFLAG_KNOWN_GID226,8566
#define CURLFINFOFLAG_KNOWN_SIZE CURLFINFOFLAG_KNOWN_SIZE227,8613
#define CURLFINFOFLAG_KNOWN_HLINKCOUNT CURLFINFOFLAG_KNOWN_HLINKCOUNT228,8660
struct curl_fileinfo {curl_fileinfo234,9007
  char *filename;filename235,9030
  curlfiletype filetype;filetype236,9048
  time_t time;time237,9073
  unsigned int perm;perm238,9088
  int uid;uid239,9109
  int gid;gid240,9120
  curl_off_t size;size241,9131
  long int hardlinks;hardlinks242,9150
  struct {__anonf3adbb160208244,9173
    char *time;time246,9258
    char *perm;perm247,9274
    char *user;user248,9290
    char *group;group249,9306
    char *target; /* pointer to the target filename of a symlink */target250,9323
  } strings;strings251,9391
  unsigned int flags;flags253,9405
  char * b_data;b_data256,9452
  size_t b_size;b_size257,9469
  size_t b_used;b_used258,9486
#define CURL_CHUNK_BGN_FUNC_OK CURL_CHUNK_BGN_FUNC_OK262,9557
#define CURL_CHUNK_BGN_FUNC_FAIL CURL_CHUNK_BGN_FUNC_FAIL263,9595
#define CURL_CHUNK_BGN_FUNC_SKIP CURL_CHUNK_BGN_FUNC_SKIP264,9668
typedef long (*curl_chunk_bgn_callback)(const void *transfer_info,curl_chunk_bgn_callback269,9963
#define CURL_CHUNK_END_FUNC_OK CURL_CHUNK_END_FUNC_OK274,10186
#define CURL_CHUNK_END_FUNC_FAIL CURL_CHUNK_END_FUNC_FAIL275,10224
typedef long (*curl_chunk_end_callback)(void *ptr);curl_chunk_end_callback283,10707
#define CURL_FNMATCHFUNC_MATCH CURL_FNMATCHFUNC_MATCH286,10799
#define CURL_FNMATCHFUNC_NOMATCH CURL_FNMATCHFUNC_NOMATCH287,10875
#define CURL_FNMATCHFUNC_FAIL CURL_FNMATCHFUNC_FAIL288,10950
typedef int (*curl_fnmatch_callback)(void *ptr,curl_fnmatch_callback292,11154
#define CURL_SEEKFUNC_OK CURL_SEEKFUNC_OK297,11375
#define CURL_SEEKFUNC_FAIL CURL_SEEKFUNC_FAIL298,11408
#define CURL_SEEKFUNC_CANTSEEK CURL_SEEKFUNC_CANTSEEK299,11472
typedef int (*curl_seek_callback)(void *instream,curl_seek_callback301,11624
#define CURL_READFUNC_ABORT CURL_READFUNC_ABORT307,11927
#define CURL_READFUNC_PAUSE CURL_READFUNC_PAUSE310,12107
typedef size_t (*curl_read_callback)(char *buffer,curl_read_callback312,12147
typedef enum  {__anonf3adbb160303317,12358
  CURLSOCKTYPE_IPCXN,  /* socket created for a specific IP connection */CURLSOCKTYPE_IPCXN318,12374
  CURLSOCKTYPE_ACCEPT, /* socket created by accept() call */CURLSOCKTYPE_ACCEPT319,12447
  CURLSOCKTYPE_LAST    /* never use */CURLSOCKTYPE_LAST320,12508
} curlsocktype;curlsocktype321,12547
#define CURL_SOCKOPT_OK CURL_SOCKOPT_OK325,12655
#define CURL_SOCKOPT_ERROR CURL_SOCKOPT_ERROR326,12681
#define CURL_SOCKOPT_ALREADY_CONNECTED CURL_SOCKOPT_ALREADY_CONNECTED328,12809
typedef int (*curl_sockopt_callback)(void *clientp,curl_sockopt_callback330,12851
struct curl_sockaddr {curl_sockaddr334,13023
  int family;family335,13046
  int socktype;socktype336,13060
  int protocol;protocol337,13076
  unsigned int addrlen; /* addrlen was a socklen_t type before 7.18.0 but itaddrlen338,13092
  struct sockaddr addr;addr341,13292
(*curl_opensocket_callback)(void *clientp,curl_opensocket_callback345,13342
(*curl_closesocket_callback)(void *clientp, curl_socket_t item);curl_closesocket_callback350,13508
typedef enum {__anonf3adbb160403352,13574
  CURLIOE_OK,            /* I/O operation successful */CURLIOE_OK353,13589
  CURLIOE_UNKNOWNCMD,    /* command was unknown to callback */CURLIOE_UNKNOWNCMD354,13645
  CURLIOE_FAILRESTART,   /* failed to restart the read */CURLIOE_FAILRESTART355,13708
  CURLIOE_LAST           /* never use */CURLIOE_LAST356,13766
} curlioerr;curlioerr357,13807
typedef enum  {__anonf3adbb160503359,13821
  CURLIOCMD_NOP,         /* no operation */CURLIOCMD_NOP360,13837
  CURLIOCMD_RESTARTREAD, /* restart the read stream from start */CURLIOCMD_RESTARTREAD361,13881
  CURLIOCMD_LAST         /* never use */CURLIOCMD_LAST362,13947
} curliocmd;curliocmd363,13988
typedef curlioerr (*curl_ioctl_callback)(CURL *handle,curl_ioctl_callback365,14002
typedef void *(*curl_malloc_callback)(size_t size);curl_malloc_callback375,14425
typedef void (*curl_free_callback)(void *ptr);curl_free_callback376,14477
typedef void *(*curl_realloc_callback)(void *ptr, size_t size);curl_realloc_callback377,14524
typedef char *(*curl_strdup_callback)(const char *str);curl_strdup_callback378,14588
typedef void *(*curl_calloc_callback)(size_t nmemb, size_t size);curl_calloc_callback379,14644
typedef enum {__anonf3adbb160603382,14772
  CURLINFO_TEXT = 0,CURLINFO_TEXT383,14787
  CURLINFO_HEADER_IN,    /* 1 */CURLINFO_HEADER_IN384,14808
  CURLINFO_HEADER_OUT,   /* 2 */CURLINFO_HEADER_OUT385,14841
  CURLINFO_DATA_IN,      /* 3 */CURLINFO_DATA_IN386,14874
  CURLINFO_DATA_OUT,     /* 4 */CURLINFO_DATA_OUT387,14907
  CURLINFO_SSL_DATA_IN,  /* 5 */CURLINFO_SSL_DATA_IN388,14940
  CURLINFO_SSL_DATA_OUT, /* 6 */CURLINFO_SSL_DATA_OUT389,14973
  CURLINFO_ENDCURLINFO_END390,15006
} curl_infotype;curl_infotype391,15021
typedef int (*curl_debug_callback)curl_debug_callback393,15039
typedef enum {__anonf3adbb160703407,15596
  CURLE_OK = 0,CURLE_OK408,15611
  CURLE_UNSUPPORTED_PROTOCOL,    /* 1 */CURLE_UNSUPPORTED_PROTOCOL409,15627
  CURLE_FAILED_INIT,             /* 2 */CURLE_FAILED_INIT410,15668
  CURLE_URL_MALFORMAT,           /* 3 */CURLE_URL_MALFORMAT411,15709
  CURLE_NOT_BUILT_IN,            /* 4 - [was obsoleted in August 2007 forCURLE_NOT_BUILT_IN412,15750
  CURLE_COULDNT_RESOLVE_PROXY,   /* 5 */CURLE_COULDNT_RESOLVE_PROXY414,15904
  CURLE_COULDNT_RESOLVE_HOST,    /* 6 */CURLE_COULDNT_RESOLVE_HOST415,15945
  CURLE_COULDNT_CONNECT,         /* 7 */CURLE_COULDNT_CONNECT416,15986
  CURLE_FTP_WEIRD_SERVER_REPLY,  /* 8 */CURLE_FTP_WEIRD_SERVER_REPLY417,16027
  CURLE_REMOTE_ACCESS_DENIED,    /* 9 a service was denied by the serverCURLE_REMOTE_ACCESS_DENIED418,16068
  CURLE_FTP_ACCEPT_FAILED,       /* 10 - [was obsoleted in April 2006 forCURLE_FTP_ACCEPT_FAILED421,16279
  CURLE_FTP_WEIRD_PASS_REPLY,    /* 11 */CURLE_FTP_WEIRD_PASS_REPLY423,16430
  CURLE_FTP_ACCEPT_TIMEOUT,      /* 12 - timeout occurred accepting serverCURLE_FTP_ACCEPT_TIMEOUT424,16472
  CURLE_FTP_WEIRD_PASV_REPLY,    /* 13 */CURLE_FTP_WEIRD_PASV_REPLY427,16694
  CURLE_FTP_WEIRD_227_FORMAT,    /* 14 */CURLE_FTP_WEIRD_227_FORMAT428,16736
  CURLE_FTP_CANT_GET_HOST,       /* 15 */CURLE_FTP_CANT_GET_HOST429,16778
  CURLE_HTTP2,                   /* 16 - A problem in the http2 framing layer.CURLE_HTTP2430,16820
  CURLE_FTP_COULDNT_SET_TYPE,    /* 17 */CURLE_FTP_COULDNT_SET_TYPE433,17048
  CURLE_PARTIAL_FILE,            /* 18 */CURLE_PARTIAL_FILE434,17090
  CURLE_FTP_COULDNT_RETR_FILE,   /* 19 */CURLE_FTP_COULDNT_RETR_FILE435,17132
  CURLE_OBSOLETE20,              /* 20 - NOT USED */CURLE_OBSOLETE20436,17174
  CURLE_QUOTE_ERROR,             /* 21 - quote command failure */CURLE_QUOTE_ERROR437,17227
  CURLE_HTTP_RETURNED_ERROR,     /* 22 */CURLE_HTTP_RETURNED_ERROR438,17293
  CURLE_WRITE_ERROR,             /* 23 */CURLE_WRITE_ERROR439,17335
  CURLE_OBSOLETE24,              /* 24 - NOT USED */CURLE_OBSOLETE24440,17377
  CURLE_UPLOAD_FAILED,           /* 25 - failed upload "command" */CURLE_UPLOAD_FAILED441,17430
  CURLE_READ_ERROR,              /* 26 - couldn't open/read from file */CURLE_READ_ERROR442,17498
  CURLE_OUT_OF_MEMORY,           /* 27 */CURLE_OUT_OF_MEMORY443,17571
  CURLE_OPERATION_TIMEDOUT,      /* 28 - the timeout time was reached */CURLE_OPERATION_TIMEDOUT448,17786
  CURLE_OBSOLETE29,              /* 29 - NOT USED */CURLE_OBSOLETE29449,17859
  CURLE_FTP_PORT_FAILED,         /* 30 - FTP PORT operation failed */CURLE_FTP_PORT_FAILED450,17912
  CURLE_FTP_COULDNT_USE_REST,    /* 31 - the REST command failed */CURLE_FTP_COULDNT_USE_REST451,17982
  CURLE_OBSOLETE32,              /* 32 - NOT USED */CURLE_OBSOLETE32452,18050
  CURLE_RANGE_ERROR,             /* 33 - RANGE "command" didn't work */CURLE_RANGE_ERROR453,18103
  CURLE_HTTP_POST_ERROR,         /* 34 */CURLE_HTTP_POST_ERROR454,18175
  CURLE_SSL_CONNECT_ERROR,       /* 35 - wrong when connecting with SSL */CURLE_SSL_CONNECT_ERROR455,18217
  CURLE_BAD_DOWNLOAD_RESUME,     /* 36 - couldn't resume download */CURLE_BAD_DOWNLOAD_RESUME456,18292
  CURLE_FILE_COULDNT_READ_FILE,  /* 37 */CURLE_FILE_COULDNT_READ_FILE457,18361
  CURLE_LDAP_CANNOT_BIND,        /* 38 */CURLE_LDAP_CANNOT_BIND458,18403
  CURLE_LDAP_SEARCH_FAILED,      /* 39 */CURLE_LDAP_SEARCH_FAILED459,18445
  CURLE_OBSOLETE40,              /* 40 - NOT USED */CURLE_OBSOLETE40460,18487
  CURLE_FUNCTION_NOT_FOUND,      /* 41 */CURLE_FUNCTION_NOT_FOUND461,18540
  CURLE_ABORTED_BY_CALLBACK,     /* 42 */CURLE_ABORTED_BY_CALLBACK462,18582
  CURLE_BAD_FUNCTION_ARGUMENT,   /* 43 */CURLE_BAD_FUNCTION_ARGUMENT463,18624
  CURLE_OBSOLETE44,              /* 44 - NOT USED */CURLE_OBSOLETE44464,18666
  CURLE_INTERFACE_FAILED,        /* 45 - CURLOPT_INTERFACE failed */CURLE_INTERFACE_FAILED465,18719
  CURLE_OBSOLETE46,              /* 46 - NOT USED */CURLE_OBSOLETE46466,18788
  CURLE_TOO_MANY_REDIRECTS ,     /* 47 - catch endless re-direct loops */CURLE_TOO_MANY_REDIRECTS467,18841
  CURLE_UNKNOWN_OPTION,          /* 48 - User specified an unknown option */CURLE_UNKNOWN_OPTION468,18915
  CURLE_TELNET_OPTION_SYNTAX ,   /* 49 - Malformed telnet option */CURLE_TELNET_OPTION_SYNTAX469,18992
  CURLE_OBSOLETE50,              /* 50 - NOT USED */CURLE_OBSOLETE50470,19060
  CURLE_PEER_FAILED_VERIFICATION, /* 51 - peer's certificate or fingerprintCURLE_PEER_FAILED_VERIFICATION471,19113
  CURLE_GOT_NOTHING,             /* 52 - when this is a specific error */CURLE_GOT_NOTHING473,19250
  CURLE_SSL_ENGINE_NOTFOUND,     /* 53 - SSL crypto engine not found */CURLE_SSL_ENGINE_NOTFOUND474,19324
  CURLE_SSL_ENGINE_SETFAILED,    /* 54 - can not set SSL crypto engine asCURLE_SSL_ENGINE_SETFAILED475,19396
  CURLE_SEND_ERROR,              /* 55 - failed sending network data */CURLE_SEND_ERROR477,19517
  CURLE_RECV_ERROR,              /* 56 - failure in receiving network data */CURLE_RECV_ERROR478,19589
  CURLE_OBSOLETE57,              /* 57 - NOT IN USE */CURLE_OBSOLETE57479,19667
  CURLE_SSL_CERTPROBLEM,         /* 58 - problem with the local certificate */CURLE_SSL_CERTPROBLEM480,19722
  CURLE_SSL_CIPHER,              /* 59 - couldn't use specified cipher */CURLE_SSL_CIPHER481,19801
  CURLE_SSL_CACERT,              /* 60 - problem with the CA cert (path?) */CURLE_SSL_CACERT482,19875
  CURLE_BAD_CONTENT_ENCODING,    /* 61 - Unrecognized/bad encoding */CURLE_BAD_CONTENT_ENCODING483,19952
  CURLE_LDAP_INVALID_URL,        /* 62 - Invalid LDAP URL */CURLE_LDAP_INVALID_URL484,20022
  CURLE_FILESIZE_EXCEEDED,       /* 63 - Maximum file size exceeded */CURLE_FILESIZE_EXCEEDED485,20083
  CURLE_USE_SSL_FAILED,          /* 64 - Requested FTP SSL level failed */CURLE_USE_SSL_FAILED486,20154
  CURLE_SEND_FAIL_REWIND,        /* 65 - Sending the data requires a rewindCURLE_SEND_FAIL_REWIND487,20229
  CURLE_SSL_ENGINE_INITFAILED,   /* 66 - failed to initialise ENGINE */CURLE_SSL_ENGINE_INITFAILED489,20356
  CURLE_LOGIN_DENIED,            /* 67 - user, password or similar was notCURLE_LOGIN_DENIED490,20428
  CURLE_TFTP_NOTFOUND,           /* 68 - file not found on server */CURLE_TFTP_NOTFOUND492,20574
  CURLE_TFTP_PERM,               /* 69 - permission problem on server */CURLE_TFTP_PERM493,20643
  CURLE_REMOTE_DISK_FULL,        /* 70 - out of disk space on server */CURLE_REMOTE_DISK_FULL494,20716
  CURLE_TFTP_ILLEGAL,            /* 71 - Illegal TFTP operation */CURLE_TFTP_ILLEGAL495,20788
  CURLE_TFTP_UNKNOWNID,          /* 72 - Unknown transfer ID */CURLE_TFTP_UNKNOWNID496,20855
  CURLE_REMOTE_FILE_EXISTS,      /* 73 - File already exists */CURLE_REMOTE_FILE_EXISTS497,20919
  CURLE_TFTP_NOSUCHUSER,         /* 74 - No such user */CURLE_TFTP_NOSUCHUSER498,20983
  CURLE_CONV_FAILED,             /* 75 - conversion failed */CURLE_CONV_FAILED499,21040
  CURLE_CONV_REQD,               /* 76 - caller must register conversionCURLE_CONV_REQD500,21102
  CURLE_SSL_CACERT_BADFILE,      /* 77 - could not load CACERT file, missingCURLE_SSL_CACERT_BADFILE505,21469
  CURLE_REMOTE_FILE_NOT_FOUND,   /* 78 - remote file not found */CURLE_REMOTE_FILE_NOT_FOUND507,21601
  CURLE_SSH,                     /* 79 - error from the SSH layer, somewhatCURLE_SSH508,21667
  CURLE_SSL_SHUTDOWN_FAILED,     /* 80 - Failed to shut down the SSLCURLE_SSL_SHUTDOWN_FAILED512,21891
  CURLE_AGAIN,                   /* 81 - socket is not ready for send/recv,CURLE_AGAIN514,22010
  CURLE_SSL_CRL_BADFILE,         /* 82 - could not load CRL file, missing orCURLE_SSL_CRL_BADFILE517,22214
  CURLE_SSL_ISSUER_ERROR,        /* 83 - Issuer check failed.  (Added inCURLE_SSL_ISSUER_ERROR519,22361
  CURLE_FTP_PRET_FAILED,         /* 84 - a PRET command failed */CURLE_FTP_PRET_FAILED521,22481
  CURLE_RTSP_CSEQ_ERROR,         /* 85 - mismatch of RTSP CSeq numbers */CURLE_RTSP_CSEQ_ERROR522,22547
  CURLE_RTSP_SESSION_ERROR,      /* 86 - mismatch of RTSP Session Ids */CURLE_RTSP_SESSION_ERROR523,22621
  CURLE_FTP_BAD_FILE_LIST,       /* 87 - unable to parse FTP file list */CURLE_FTP_BAD_FILE_LIST524,22694
  CURLE_CHUNK_FAILED,            /* 88 - chunk callback reported error */CURLE_CHUNK_FAILED525,22768
  CURLE_NO_CONNECTION_AVAILABLE, /* 89 - No connection available, theCURLE_NO_CONNECTION_AVAILABLE526,22842
  CURL_LAST /* never use! */CURL_LAST528,22974
} CURLcode;CURLcode529,23003
#define CURLE_OBSOLETE16 CURLE_OBSOLETE16535,23203
#define CURLE_OBSOLETE10 CURLE_OBSOLETE10538,23297
#define CURLE_OBSOLETE12 CURLE_OBSOLETE12539,23346
#define CURLOPT_ENCODING CURLOPT_ENCODING542,23435
#define CURLE_UNKNOWN_TELNET_OPTION CURLE_UNKNOWN_TELNET_OPTION545,23538
#define CURLE_SSL_PEER_CERTIFICATE CURLE_SSL_PEER_CERTIFICATE549,23684
#define CURLE_OBSOLETE CURLE_OBSOLETE553,23839
#define CURLE_BAD_PASSWORD_ENTERED CURLE_BAD_PASSWORD_ENTERED554,23914
#define CURLE_BAD_CALLING_ORDER CURLE_BAD_CALLING_ORDER555,23966
#define CURLE_FTP_USER_PASSWORD_INCORRECT CURLE_FTP_USER_PASSWORD_INCORRECT556,24015
#define CURLE_FTP_CANT_RECONNECT CURLE_FTP_CANT_RECONNECT557,24074
#define CURLE_FTP_COULDNT_GET_SIZE CURLE_FTP_COULDNT_GET_SIZE558,24124
#define CURLE_FTP_COULDNT_SET_ASCII CURLE_FTP_COULDNT_SET_ASCII559,24176
#define CURLE_FTP_WEIRD_USER_REPLY CURLE_FTP_WEIRD_USER_REPLY560,24229
#define CURLE_FTP_WRITE_ERROR CURLE_FTP_WRITE_ERROR561,24281
#define CURLE_LIBRARY_NOT_FOUND CURLE_LIBRARY_NOT_FOUND562,24328
#define CURLE_MALFORMAT_USER CURLE_MALFORMAT_USER563,24377
#define CURLE_SHARE_IN_USE CURLE_SHARE_IN_USE564,24423
#define CURLE_URL_MALFORMAT_USER CURLE_URL_MALFORMAT_USER565,24467
#define CURLE_FTP_ACCESS_DENIED CURLE_FTP_ACCESS_DENIED567,24520
#define CURLE_FTP_COULDNT_SET_BINARY CURLE_FTP_COULDNT_SET_BINARY568,24579
#define CURLE_FTP_QUOTE_ERROR CURLE_FTP_QUOTE_ERROR569,24643
#define CURLE_TFTP_DISKFULL CURLE_TFTP_DISKFULL570,24691
#define CURLE_TFTP_EXISTS CURLE_TFTP_EXISTS571,24742
#define CURLE_HTTP_RANGE_ERROR CURLE_HTTP_RANGE_ERROR572,24793
#define CURLE_FTP_SSL_FAILED CURLE_FTP_SSL_FAILED573,24842
#define CURLE_OPERATION_TIMEOUTED CURLE_OPERATION_TIMEOUTED577,24933
#define CURLE_HTTP_NOT_FOUND CURLE_HTTP_NOT_FOUND579,24993
#define CURLE_HTTP_PORT_FAILED CURLE_HTTP_PORT_FAILED580,25048
#define CURLE_FTP_COULDNT_STOR_FILE CURLE_FTP_COULDNT_STOR_FILE581,25102
#define CURLE_FTP_PARTIAL_FILE CURLE_FTP_PARTIAL_FILE583,25159
#define CURLE_FTP_BAD_DOWNLOAD_RESUME CURLE_FTP_BAD_DOWNLOAD_RESUME584,25209
#define CURLE_ALREADY_COMPLETE CURLE_ALREADY_COMPLETE589,25445
#define CURLOPT_FILE CURLOPT_FILE592,25533
#define CURLOPT_INFILE CURLOPT_INFILE593,25600
#define CURLOPT_WRITEHEADER CURLOPT_WRITEHEADER594,25668
#define CURLOPT_WRITEINFO CURLOPT_WRITEINFO598,25809
#define CURLOPT_CLOSEPOLICY CURLOPT_CLOSEPOLICY599,25854
typedef CURLcode (*curl_conv_callback)(char *buffer, size_t length);curl_conv_callback604,25987
typedef CURLcode (*curl_ssl_ctx_callback)(CURL *curl,    /* easy handle */curl_ssl_ctx_callback606,26057
typedef enum {__anonf3adbb160803611,26342
  CURLPROXY_HTTP = 0,   /* added in 7.10, new in 7.19.4 default is to useCURLPROXY_HTTP612,26357
  CURLPROXY_HTTP_1_0 = 1,   /* added in 7.19.4, force to use CONNECTCURLPROXY_HTTP_1_0614,26478
  CURLPROXY_SOCKS4 = 4, /* support added in 7.15.2, enum existed alreadyCURLPROXY_SOCKS4616,26591
  CURLPROXY_SOCKS5 = 5, /* added in 7.10 */CURLPROXY_SOCKS5618,26702
  CURLPROXY_SOCKS4A = 6, /* added in 7.18.0 */CURLPROXY_SOCKS4A619,26746
  CURLPROXY_SOCKS5_HOSTNAME = 7 /* Use the SOCKS5 protocol but pass along theCURLPROXY_SOCKS5_HOSTNAME620,26793
} curl_proxytype;  /* this enum was added in 7.10 */curl_proxytype623,26998
#define CURLAUTH_NONE CURLAUTH_NONE642,27876
#define CURLAUTH_BASIC CURLAUTH_BASIC643,27925
#define CURLAUTH_DIGEST CURLAUTH_DIGEST644,27979
#define CURLAUTH_NEGOTIATE CURLAUTH_NEGOTIATE645,28033
#define CURLAUTH_GSSNEGOTIATE CURLAUTH_GSSNEGOTIATE647,28143
#define CURLAUTH_NTLM CURLAUTH_NTLM648,28192
#define CURLAUTH_DIGEST_IE CURLAUTH_DIGEST_IE649,28246
#define CURLAUTH_NTLM_WB CURLAUTH_NTLM_WB650,28300
#define CURLAUTH_ONLY CURLAUTH_ONLY651,28354
#define CURLAUTH_ANY CURLAUTH_ANY652,28409
#define CURLAUTH_ANYSAFE CURLAUTH_ANYSAFE653,28461
#define CURLSSH_AUTH_ANY CURLSSH_AUTH_ANY655,28531
#define CURLSSH_AUTH_NONE CURLSSH_AUTH_NONE656,28609
#define CURLSSH_AUTH_PUBLICKEY CURLSSH_AUTH_PUBLICKEY657,28686
#define CURLSSH_AUTH_PASSWORD CURLSSH_AUTH_PASSWORD658,28755
#define CURLSSH_AUTH_HOST CURLSSH_AUTH_HOST659,28808
#define CURLSSH_AUTH_KEYBOARD CURLSSH_AUTH_KEYBOARD660,28867
#define CURLSSH_AUTH_AGENT CURLSSH_AUTH_AGENT661,28932
#define CURLSSH_AUTH_DEFAULT CURLSSH_AUTH_DEFAULT662,29006
#define CURLGSSAPI_DELEGATION_NONE CURLGSSAPI_DELEGATION_NONE664,29053
#define CURLGSSAPI_DELEGATION_POLICY_FLAG CURLGSSAPI_DELEGATION_POLICY_FLAG665,29132
#define CURLGSSAPI_DELEGATION_FLAG CURLGSSAPI_DELEGATION_FLAG666,29210
#define CURL_ERROR_SIZE CURL_ERROR_SIZE668,29282
enum curl_khtype {curl_khtype670,29311
  CURLKHTYPE_UNKNOWN,CURLKHTYPE_UNKNOWN671,29330
  CURLKHTYPE_RSA1,CURLKHTYPE_RSA1672,29352
  CURLKHTYPE_RSA,CURLKHTYPE_RSA673,29371
  CURLKHTYPE_DSSCURLKHTYPE_DSS674,29389
struct curl_khkey {curl_khkey677,29410
  const char *key; /* points to a zero-terminated string encoded with base64key678,29430
  size_t len;len680,29576
  enum curl_khtype keytype;keytype681,29590
enum curl_khstat {curl_khstat686,29711
  CURLKHSTAT_FINE_ADD_TO_FILE,CURLKHSTAT_FINE_ADD_TO_FILE687,29730
  CURLKHSTAT_FINE,CURLKHSTAT_FINE688,29761
  CURLKHSTAT_REJECT, /* reject the connection, return an error */CURLKHSTAT_REJECT689,29780
  CURLKHSTAT_DEFER,  /* do not accept it, but we can't answer right now soCURLKHSTAT_DEFER690,29846
  CURLKHSTAT_LAST    /* not for use, only a marker for last-in-list */CURLKHSTAT_LAST693,30057
enum curl_khmatch {curl_khmatch697,30194
  CURLKHMATCH_OK,       /* match */CURLKHMATCH_OK698,30214
  CURLKHMATCH_MISMATCH, /* host found, key mismatch! */CURLKHMATCH_MISMATCH699,30250
  CURLKHMATCH_MISSING,  /* no matching host/key found */CURLKHMATCH_MISSING700,30306
  CURLKHMATCH_LAST      /* not for use, only a marker for last-in-list */CURLKHMATCH_LAST701,30363
  (*curl_sshkeycallback) (CURL *easy,     /* easy handle */curl_sshkeycallback705,30453
typedef enum {__anonf3adbb160903712,30864
  CURLUSESSL_NONE,    /* do not attempt to use SSL */CURLUSESSL_NONE713,30879
  CURLUSESSL_TRY,     /* try using SSL, proceed anyway otherwise */CURLUSESSL_TRY714,30933
  CURLUSESSL_CONTROL, /* SSL for the control connection or fail */CURLUSESSL_CONTROL715,31001
  CURLUSESSL_ALL,     /* SSL for all communication or fail */CURLUSESSL_ALL716,31068
  CURLUSESSL_LAST     /* not an option, never use */CURLUSESSL_LAST717,31130
} curl_usessl;curl_usessl718,31183
#define CURLSSLOPT_ALLOW_BEAST CURLSSLOPT_ALLOW_BEAST727,31637
#define CURLFTPSSL_NONE CURLFTPSSL_NONE735,31903
#define CURLFTPSSL_TRY CURLFTPSSL_TRY736,31943
#define CURLFTPSSL_CONTROL CURLFTPSSL_CONTROL737,31981
#define CURLFTPSSL_ALL CURLFTPSSL_ALL738,32027
#define CURLFTPSSL_LAST CURLFTPSSL_LAST739,32065
#define curl_ftpssl curl_ftpssl740,32105
typedef enum {__anonf3adbb160a03744,32216
  CURLFTPSSL_CCC_NONE,    /* do not send CCC */CURLFTPSSL_CCC_NONE745,32231
  CURLFTPSSL_CCC_PASSIVE, /* Let the server initiate the shutdown */CURLFTPSSL_CCC_PASSIVE746,32279
  CURLFTPSSL_CCC_ACTIVE,  /* Initiate the shutdown */CURLFTPSSL_CCC_ACTIVE747,32348
  CURLFTPSSL_CCC_LAST     /* not an option, never use */CURLFTPSSL_CCC_LAST748,32402
} curl_ftpccc;curl_ftpccc749,32459
typedef enum {__anonf3adbb160b03752,32525
  CURLFTPAUTH_DEFAULT, /* let libcurl decide */CURLFTPAUTH_DEFAULT753,32540
  CURLFTPAUTH_SSL,     /* use "AUTH SSL" */CURLFTPAUTH_SSL754,32588
  CURLFTPAUTH_TLS,     /* use "AUTH TLS" */CURLFTPAUTH_TLS755,32632
  CURLFTPAUTH_LAST /* not an option, never use */CURLFTPAUTH_LAST756,32676
} curl_ftpauth;curl_ftpauth757,32726
typedef enum {__anonf3adbb160c03760,32806
  CURLFTP_CREATE_DIR_NONE,  /* do NOT create missing dirs! */CURLFTP_CREATE_DIR_NONE761,32821
  CURLFTP_CREATE_DIR,       /* (FTP/SFTP) if CWD fails, try MKD and then CWDCURLFTP_CREATE_DIR762,32883
  CURLFTP_CREATE_DIR_RETRY, /* (FTP only) if CWD fails, try MKD and then CWDCURLFTP_CREATE_DIR_RETRY765,33082
  CURLFTP_CREATE_DIR_LAST   /* not an option, never use */CURLFTP_CREATE_DIR_LAST767,33219
} curl_ftpcreatedir;curl_ftpcreatedir768,33278
typedef enum {__anonf3adbb160d03771,33354
  CURLFTPMETHOD_DEFAULT,   /* let libcurl pick */CURLFTPMETHOD_DEFAULT772,33369
  CURLFTPMETHOD_MULTICWD,  /* single CWD operation for each path part */CURLFTPMETHOD_MULTICWD773,33419
  CURLFTPMETHOD_NOCWD,     /* no CWD at all */CURLFTPMETHOD_NOCWD774,33492
  CURLFTPMETHOD_SINGLECWD, /* one CWD to full dir, then work on file */CURLFTPMETHOD_SINGLECWD775,33539
  CURLFTPMETHOD_LAST       /* not an option, never use */CURLFTPMETHOD_LAST776,33611
} curl_ftpmethod;curl_ftpmethod777,33669
#define CURLHEADER_UNIFIED CURLHEADER_UNIFIED780,33732
#define CURLHEADER_SEPARATE CURLHEADER_SEPARATE781,33762
#define CURLPROTO_HTTP CURLPROTO_HTTP784,33862
#define CURLPROTO_HTTPS CURLPROTO_HTTPS785,33894
#define CURLPROTO_FTP CURLPROTO_FTP786,33926
#define CURLPROTO_FTPS CURLPROTO_FTPS787,33958
#define CURLPROTO_SCP CURLPROTO_SCP788,33990
#define CURLPROTO_SFTP CURLPROTO_SFTP789,34022
#define CURLPROTO_TELNET CURLPROTO_TELNET790,34054
#define CURLPROTO_LDAP CURLPROTO_LDAP791,34086
#define CURLPROTO_LDAPS CURLPROTO_LDAPS792,34118
#define CURLPROTO_DICT CURLPROTO_DICT793,34150
#define CURLPROTO_FILE CURLPROTO_FILE794,34182
#define CURLPROTO_TFTP CURLPROTO_TFTP795,34215
#define CURLPROTO_IMAP CURLPROTO_IMAP796,34248
#define CURLPROTO_IMAPS CURLPROTO_IMAPS797,34281
#define CURLPROTO_POP3 CURLPROTO_POP3798,34314
#define CURLPROTO_POP3S CURLPROTO_POP3S799,34347
#define CURLPROTO_SMTP CURLPROTO_SMTP800,34380
#define CURLPROTO_SMTPS CURLPROTO_SMTPS801,34413
#define CURLPROTO_RTSP CURLPROTO_RTSP802,34446
#define CURLPROTO_RTMP CURLPROTO_RTMP803,34479
#define CURLPROTO_RTMPT CURLPROTO_RTMPT804,34512
#define CURLPROTO_RTMPE CURLPROTO_RTMPE805,34545
#define CURLPROTO_RTMPTE CURLPROTO_RTMPTE806,34578
#define CURLPROTO_RTMPS CURLPROTO_RTMPS807,34611
#define CURLPROTO_RTMPTS CURLPROTO_RTMPTS808,34644
#define CURLPROTO_GOPHER CURLPROTO_GOPHER809,34677
#define CURLPROTO_ALL CURLPROTO_ALL810,34710
#define CURLOPTTYPE_LONG CURLOPTTYPE_LONG814,34852
#define CURLOPTTYPE_OBJECTPOINT CURLOPTTYPE_OBJECTPOINT815,34888
#define CURLOPTTYPE_FUNCTIONPOINT CURLOPTTYPE_FUNCTIONPOINT816,34928
#define CURLOPTTYPE_OFF_T CURLOPTTYPE_OFF_T817,34968
#define CINIT(CINIT827,35182
#define LONG LONG830,35322
#define OBJECTPOINT OBJECTPOINT831,35361
#define FUNCTIONPOINT FUNCTIONPOINT832,35407
#define OFF_T OFF_T833,35455
#define CINIT(CINIT834,35495
typedef enum {__anonf3adbb160e03843,35736
  CINIT(WRITEDATA, OBJECTPOINT, 1),CINIT845,35829
  CINIT(URL,  OBJECTPOINT, 2),CINIT848,35898
  CINIT(PORT, LONG, 3),CINIT851,35988
  CINIT(PROXY, OBJECTPOINT, 4),CINIT854,36043
  CINIT(USERPWD, OBJECTPOINT, 5),CINIT857,36130
  CINIT(PROXYUSERPWD, OBJECTPOINT, 6),CINIT860,36208
  CINIT(RANGE, OBJECTPOINT, 7),CINIT863,36300
  CINIT(READDATA, OBJECTPOINT, 9),CINIT868,36412
  CINIT(ERRORBUFFER, OBJECTPOINT, 10),CINIT872,36600
  CINIT(WRITEFUNCTION, FUNCTIONPOINT, 11),CINIT876,36790
  CINIT(READFUNCTION, FUNCTIONPOINT, 12),CINIT880,36980
  CINIT(TIMEOUT, LONG, 13),CINIT883,37088
  CINIT(INFILESIZE, LONG, 14),CINIT894,37578
  CINIT(POSTFIELDS, OBJECTPOINT, 15),CINIT897,37644
  CINIT(REFERER, OBJECTPOINT, 16),CINIT900,37735
  CINIT(FTPPORT, OBJECTPOINT, 17),CINIT904,37892
  CINIT(USERAGENT, OBJECTPOINT, 18),CINIT907,37986
  CINIT(LOW_SPEED_LIMIT, LONG, 19),CINIT916,38328
  CINIT(LOW_SPEED_TIME, LONG, 20),CINIT919,38398
  CINIT(RESUME_FROM, LONG, 21),CINIT927,38684
  CINIT(COOKIE, OBJECTPOINT, 22),CINIT930,38748
  CINIT(HTTPHEADER, OBJECTPOINT, 23),CINIT934,38916
  CINIT(HTTPPOST, OBJECTPOINT, 24),CINIT937,39030
  CINIT(SSLCERT, OBJECTPOINT, 25),CINIT940,39129
  CINIT(KEYPASSWD, OBJECTPOINT, 26),CINIT943,39213
  CINIT(CRLF, LONG, 27),CINIT946,39280
  CINIT(QUOTE, OBJECTPOINT, 28),CINIT949,39349
  CINIT(HEADERDATA, OBJECTPOINT, 29),CINIT953,39508
  CINIT(COOKIEFILE, OBJECTPOINT, 31),CINIT957,39642
  CINIT(SSLVERSION, LONG, 32),CINIT961,39770
  CINIT(TIMECONDITION, LONG, 33),CINIT964,39863
  CINIT(TIMEVALUE, LONG, 34),CINIT968,39997
  CINIT(CUSTOMREQUEST, OBJECTPOINT, 36),CINIT976,40195
  CINIT(STDERR, OBJECTPOINT, 37),CINIT979,40306
  CINIT(POSTQUOTE, OBJECTPOINT, 39),CINIT984,40422
  CINIT(OBSOLETE40, OBJECTPOINT, 40), /* OBSOLETE, do not use! */CINIT986,40460
  CINIT(VERBOSE, LONG, 41),      /* talk a lot */CINIT988,40527
  CINIT(HEADER, LONG, 42),       /* throw the header out too */CINIT989,40577
  CINIT(NOPROGRESS, LONG, 43),   /* shut off the progress meter */CINIT990,40641
  CINIT(NOBODY, LONG, 44),       /* use HEAD to get http document */CINIT991,40708
  CINIT(FAILONERROR, LONG, 45),  /* no output on http error codes >= 300 */CINIT992,40777
  CINIT(UPLOAD, LONG, 46),       /* this is an upload */CINIT993,40853
  CINIT(POST, LONG, 47),         /* HTTP POST method */CINIT994,40910
  CINIT(DIRLISTONLY, LONG, 48),  /* bare names when listing directories */CINIT995,40966
  CINIT(APPEND, LONG, 50),       /* Append instead of overwrite on upload! */CINIT997,41042
  CINIT(NETRC, LONG, 51),CINIT1001,41254
  CINIT(FOLLOWLOCATION, LONG, 52),  /* use Location: Luke! */CINIT1003,41281
  CINIT(TRANSFERTEXT, LONG, 53), /* transfer data in text/ASCII format */CINIT1005,41344
  CINIT(PUT, LONG, 54),          /* HTTP PUT */CINIT1006,41418
  CINIT(PROGRESSFUNCTION, FUNCTIONPOINT, 56),CINIT1014,41685
  CINIT(PROGRESSDATA, OBJECTPOINT, 57),CINIT1018,41828
#define CURLOPT_XFERINFODATA CURLOPT_XFERINFODATA1019,41868
  CINIT(AUTOREFERER, LONG, 58),CINIT1022,41997
  CINIT(PROXYPORT, LONG, 59),CINIT1026,42123
  CINIT(POSTFIELDSIZE, LONG, 60),CINIT1029,42222
  CINIT(HTTPPROXYTUNNEL, LONG, 61),CINIT1032,42313
  CINIT(INTERFACE, OBJECTPOINT, 62),CINIT1035,42420
  CINIT(KRBLEVEL, OBJECTPOINT, 63),CINIT1040,42687
  CINIT(SSL_VERIFYPEER, LONG, 64),CINIT1043,42800
  CINIT(CAINFO, OBJECTPOINT, 65),CINIT1047,42959
  CINIT(MAXREDIRS, LONG, 68),CINIT1053,43090
  CINIT(FILETIME, LONG, 69),CINIT1057,43240
  CINIT(TELNETOPTIONS, OBJECTPOINT, 70),CINIT1060,43325
  CINIT(MAXCONNECTS, LONG, 71),CINIT1063,43414
  CINIT(OBSOLETE72, LONG, 72), /* OBSOLETE, do not use! */CINIT1065,43447
  CINIT(FRESH_CONNECT, LONG, 74),CINIT1072,43740
  CINIT(FORBID_REUSE, LONG, 75),CINIT1077,44004
  CINIT(RANDOM_FILE, OBJECTPOINT, 76),CINIT1081,44166
  CINIT(EGDSOCKET, OBJECTPOINT, 77),CINIT1084,44266
  CINIT(CONNECTTIMEOUT, LONG, 78),CINIT1088,44461
  CINIT(HEADERFUNCTION, FUNCTIONPOINT, 79),CINIT1092,44644
  CINIT(HTTPGET, LONG, 80),CINIT1097,44834
  CINIT(SSL_VERIFYHOST, LONG, 81),CINIT1102,45042
  CINIT(COOKIEJAR, OBJECTPOINT, 82),CINIT1106,45225
  CINIT(SSL_CIPHER_LIST, OBJECTPOINT, 83),CINIT1109,45304
  CINIT(HTTP_VERSION, LONG, 84),CINIT1113,45463
  CINIT(FTP_USE_EPSV, LONG, 85),CINIT1118,45675
  CINIT(SSLCERTTYPE, OBJECTPOINT, 86),CINIT1121,45785
  CINIT(SSLKEY, OBJECTPOINT, 87),CINIT1124,45879
  CINIT(SSLKEYTYPE, OBJECTPOINT, 88),CINIT1127,45990
  CINIT(SSLENGINE, OBJECTPOINT, 89),CINIT1130,46074
  CINIT(SSLENGINE_DEFAULT, LONG, 90),CINIT1135,46212
  CINIT(DNS_USE_GLOBAL_CACHE, LONG, 91), /* DEPRECATED, do not use! */CINIT1138,46308
  CINIT(DNS_CACHE_TIMEOUT, LONG, 92),CINIT1141,46406
  CINIT(PREQUOTE, OBJECTPOINT, 93),CINIT1144,46501
  CINIT(DEBUGFUNCTION, FUNCTIONPOINT, 94),CINIT1147,46569
  CINIT(DEBUGDATA, OBJECTPOINT, 95),CINIT1150,46657
  CINIT(COOKIESESSION, LONG, 96),CINIT1153,46742
  CINIT(CAPATH, OBJECTPOINT, 97),CINIT1157,46900
  CINIT(BUFFERSIZE, LONG, 98),CINIT1160,46992
  CINIT(NOSIGNAL, LONG, 99),CINIT1165,47233
  CINIT(SHARE, OBJECTPOINT, 100),CINIT1168,47316
  CINIT(PROXYTYPE, LONG, 101),CINIT1172,47493
  CINIT(ACCEPT_ENCODING, OBJECTPOINT, 102),CINIT1177,47697
  CINIT(PRIVATE, OBJECTPOINT, 103),CINIT1180,47778
  CINIT(HTTP200ALIASES, OBJECTPOINT, 104),CINIT1183,47876
  CINIT(UNRESTRICTED_AUTH, LONG, 105),CINIT1188,48129
  CINIT(FTP_USE_EPRT, LONG, 106),CINIT1193,48390
  CINIT(HTTPAUTH, LONG, 107),CINIT1198,48645
  CINIT(SSL_CTX_FUNCTION, FUNCTIONPOINT, 108),CINIT1203,48851
  CINIT(SSL_CTX_DATA, OBJECTPOINT, 109),CINIT1207,48984
  CINIT(FTP_CREATE_MISSING_DIRS, LONG, 110),CINIT1213,49217
  CINIT(PROXYAUTH, LONG, 111),CINIT1218,49488
  CINIT(FTP_RESPONSE_TIMEOUT, LONG, 112),CINIT1224,49768
#define CURLOPT_SERVER_RESPONSE_TIMEOUT CURLOPT_SERVER_RESPONSE_TIMEOUT1225,49810
  CINIT(IPRESOLVE, LONG, 113),CINIT1230,50110
  CINIT(MAXFILESIZE, LONG, 114),CINIT1237,50401
  CINIT(INFILESIZE_LARGE, OFF_T, 115),CINIT1242,50569
  CINIT(RESUME_FROM_LARGE, OFF_T, 116),CINIT1247,50722
  CINIT(MAXFILESIZE_LARGE, OFF_T, 117),CINIT1252,50906
  CINIT(NETRC_FILE, OBJECTPOINT, 118),CINIT1258,51198
  CINIT(USE_SSL, LONG, 119),CINIT1265,51476
  CINIT(POSTFIELDSIZE_LARGE, OFF_T, 120),CINIT1268,51570
  CINIT(TCP_NODELAY, LONG, 121),CINIT1271,51660
  CINIT(FTPSSLAUTH, LONG, 129),CINIT1291,52472
  CINIT(IOCTLFUNCTION, FUNCTIONPOINT, 130),CINIT1293,52505
  CINIT(IOCTLDATA, OBJECTPOINT, 131),CINIT1294,52549
  CINIT(FTP_ACCOUNT, OBJECTPOINT, 134),CINIT1301,52759
  CINIT(COOKIELIST, OBJECTPOINT, 135),CINIT1304,52840
  CINIT(IGNORE_CONTENT_LENGTH, LONG, 136),CINIT1307,52910
  CINIT(FTP_SKIP_PASV_IP, LONG, 137),CINIT1313,53213
  CINIT(FTP_FILEMETHOD, LONG, 138),CINIT1317,53339
  CINIT(LOCALPORT, LONG, 139),CINIT1320,53424
  CINIT(LOCALPORTRANGE, LONG, 140),CINIT1325,53609
  CINIT(CONNECT_ONLY, LONG, 141),CINIT1329,53767
  CINIT(CONV_FROM_NETWORK_FUNCTION, FUNCTIONPOINT, 142),CINIT1333,53927
  CINIT(CONV_TO_NETWORK_FUNCTION, FUNCTIONPOINT, 143),CINIT1337,54108
  CINIT(CONV_FROM_UTF8_FUNCTION, FUNCTIONPOINT, 144),CINIT1342,54337
  CINIT(MAX_SEND_SPEED_LARGE, OFF_T, 145),CINIT1346,54539
  CINIT(MAX_RECV_SPEED_LARGE, OFF_T, 146),CINIT1347,54582
  CINIT(FTP_ALTERNATIVE_TO_USER, OBJECTPOINT, 147),CINIT1350,54688
  CINIT(SOCKOPTFUNCTION, FUNCTIONPOINT, 148),CINIT1353,54794
  CINIT(SOCKOPTDATA, OBJECTPOINT, 149),CINIT1354,54840
  CINIT(SSL_SESSIONID_CACHE, LONG, 150),CINIT1358,54977
  CINIT(SSH_AUTH_TYPES, LONG, 151),CINIT1361,55062
  CINIT(SSH_PUBLIC_KEYFILE, OBJECTPOINT, 152),CINIT1364,55164
  CINIT(SSH_PRIVATE_KEYFILE, OBJECTPOINT, 153),CINIT1365,55211
  CINIT(FTP_SSL_CCC, LONG, 154),CINIT1368,55322
  CINIT(TIMEOUT_MS, LONG, 155),CINIT1371,55423
  CINIT(CONNECTTIMEOUT_MS, LONG, 156),CINIT1372,55455
  CINIT(HTTP_TRANSFER_DECODING, LONG, 157),CINIT1376,55640
  CINIT(HTTP_CONTENT_DECODING, LONG, 158),CINIT1377,55684
  CINIT(NEW_FILE_PERMS, LONG, 159),CINIT1381,55863
  CINIT(NEW_DIRECTORY_PERMS, LONG, 160),CINIT1382,55899
  CINIT(POSTREDIR, LONG, 161),CINIT1386,56093
  CINIT(SSH_HOST_PUBLIC_KEY_MD5, OBJECTPOINT, 162),CINIT1389,56182
  CINIT(OPENSOCKETFUNCTION, FUNCTIONPOINT, 163),CINIT1395,56471
  CINIT(OPENSOCKETDATA, OBJECTPOINT, 164),CINIT1396,56520
  CINIT(COPYPOSTFIELDS, OBJECTPOINT, 165),CINIT1399,56600
  CINIT(PROXY_TRANSFER_MODE, LONG, 166),CINIT1402,56717
  CINIT(SEEKFUNCTION, FUNCTIONPOINT, 167),CINIT1405,56817
  CINIT(SEEKDATA, OBJECTPOINT, 168),CINIT1406,56860
  CINIT(CRLFILE, OBJECTPOINT, 169),CINIT1409,56915
  CINIT(ISSUERCERT, OBJECTPOINT, 170),CINIT1412,56979
  CINIT(ADDRESS_SCOPE, LONG, 171),CINIT1415,57048
  CINIT(CERTINFO, LONG, 172),CINIT1419,57215
  CINIT(USERNAME, OBJECTPOINT, 173),CINIT1422,57293
  CINIT(PASSWORD, OBJECTPOINT, 174),CINIT1423,57330
  CINIT(PROXYUSERNAME, OBJECTPOINT, 175),CINIT1426,57428
  CINIT(PROXYPASSWORD, OBJECTPOINT, 176),CINIT1427,57470
  CINIT(NOPROXY, OBJECTPOINT, 177),CINIT1436,57985
  CINIT(TFTP_BLKSIZE, LONG, 178),CINIT1439,58060
  CINIT(SOCKS5_GSSAPI_SERVICE, OBJECTPOINT, 179),CINIT1442,58117
  CINIT(SOCKS5_GSSAPI_NEC, LONG, 180),CINIT1445,58190
  CINIT(PROTOCOLS, LONG, 181),CINIT1451,58490
  CINIT(REDIR_PROTOCOLS, LONG, 182),CINIT1457,58800
  CINIT(SSH_KNOWNHOSTS, OBJECTPOINT, 183),CINIT1460,58885
  CINIT(SSH_KEYFUNCTION, FUNCTIONPOINT, 184),CINIT1464,59018
  CINIT(SSH_KEYDATA, OBJECTPOINT, 185),CINIT1467,59118
  CINIT(MAIL_FROM, OBJECTPOINT, 186),CINIT1470,59196
  CINIT(MAIL_RCPT, OBJECTPOINT, 187),CINIT1473,59273
  CINIT(FTP_USE_PRET, LONG, 188),CINIT1476,59347
  CINIT(RTSP_REQUEST, LONG, 189),CINIT1479,59441
  CINIT(RTSP_SESSION_ID, OBJECTPOINT, 190),CINIT1482,59512
  CINIT(RTSP_STREAM_URI, OBJECTPOINT, 191),CINIT1485,59585
  CINIT(RTSP_TRANSPORT, OBJECTPOINT, 192),CINIT1488,59684
  CINIT(RTSP_CLIENT_CSEQ, LONG, 193),CINIT1491,59793
  CINIT(RTSP_SERVER_CSEQ, LONG, 194),CINIT1494,59897
  CINIT(INTERLEAVEDATA, OBJECTPOINT, 195),CINIT1497,59986
  CINIT(INTERLEAVEFUNCTION, FUNCTIONPOINT, 196),CINIT1500,60100
  CINIT(WILDCARDMATCH, LONG, 197),CINIT1503,60184
  CINIT(CHUNK_BGN_FUNCTION, FUNCTIONPOINT, 198),CINIT1507,60325
  CINIT(CHUNK_END_FUNCTION, FUNCTIONPOINT, 199),CINIT1511,60473
  CINIT(FNMATCH_FUNCTION, FUNCTIONPOINT, 200),CINIT1514,60590
  CINIT(CHUNK_DATA, OBJECTPOINT, 201),CINIT1517,60699
  CINIT(FNMATCH_DATA, OBJECTPOINT, 202),CINIT1520,60777
  CINIT(RESOLVE, OBJECTPOINT, 203),CINIT1523,60870
  CINIT(TLSAUTH_USERNAME, OBJECTPOINT, 204),CINIT1526,60952
  CINIT(TLSAUTH_PASSWORD, OBJECTPOINT, 205),CINIT1529,61043
  CINIT(TLSAUTH_TYPE, OBJECTPOINT, 206),CINIT1532,61143
  CINIT(TRANSFER_ENCODING, LONG, 207),CINIT1544,61620
  CINIT(CLOSESOCKETFUNCTION, FUNCTIONPOINT, 208),CINIT1548,61789
  CINIT(CLOSESOCKETDATA, OBJECTPOINT, 209),CINIT1549,61839
  CINIT(GSSAPI_DELEGATION, LONG, 210),CINIT1552,61927
  CINIT(DNS_SERVERS, OBJECTPOINT, 211),CINIT1555,62022
  CINIT(ACCEPTTIMEOUT_MS, LONG, 212),CINIT1559,62162
  CINIT(TCP_KEEPALIVE, LONG, 213),CINIT1562,62227
  CINIT(TCP_KEEPIDLE, LONG, 214),CINIT1565,62327
  CINIT(TCP_KEEPINTVL, LONG, 215),CINIT1566,62361
  CINIT(SSL_OPTIONS, LONG, 216),CINIT1569,62475
  CINIT(MAIL_AUTH, OBJECTPOINT, 217),CINIT1572,62546
  CINIT(SASL_IR, LONG, 218),CINIT1575,62630
  CINIT(XFERINFOFUNCTION, FUNCTIONPOINT, 219),CINIT1580,62877
  CINIT(XOAUTH2_BEARER, OBJECTPOINT, 220),CINIT1583,62958
  CINIT(DNS_INTERFACE, OBJECTPOINT, 221),CINIT1588,63141
  CINIT(DNS_LOCAL_IP4, OBJECTPOINT, 222),CINIT1592,63299
  CINIT(DNS_LOCAL_IP6, OBJECTPOINT, 223),CINIT1596,63457
  CINIT(LOGIN_OPTIONS, OBJECTPOINT, 224),CINIT1599,63544
  CINIT(SSL_ENABLE_NPN, LONG, 225),CINIT1602,63664
  CINIT(SSL_ENABLE_ALPN, LONG, 226),CINIT1605,63779
  CINIT(EXPECT_100_TIMEOUT_MS, LONG, 227),CINIT1609,63950
  CINIT(PROXYHEADER, OBJECTPOINT, 228),CINIT1613,64100
  CINIT(HEADEROPT, LONG, 229),CINIT1616,64187
  CURLOPT_LASTENTRY /* the last unused */CURLOPT_LASTENTRY1618,64219
} CURLoption;CURLoption1619,64261
#define CURLOPT_POST301 CURLOPT_POST3011628,64542
#define CURLOPT_SSLKEYPASSWD CURLOPT_SSLKEYPASSWD1633,64674
#define CURLOPT_FTPAPPEND CURLOPT_FTPAPPEND1634,64721
#define CURLOPT_FTPLISTONLY CURLOPT_FTPLISTONLY1635,64762
#define CURLOPT_FTP_SSL CURLOPT_FTP_SSL1636,64810
#define CURLOPT_SSLCERTPASSWD CURLOPT_SSLCERTPASSWD1640,64891
#define CURLOPT_KRB4LEVEL CURLOPT_KRB4LEVEL1641,64939
#define CURL_IPRESOLVE_WHATEVER CURL_IPRESOLVE_WHATEVER1652,65345
#define CURL_IPRESOLVE_V4 CURL_IPRESOLVE_V41654,65493
#define CURL_IPRESOLVE_V6 CURL_IPRESOLVE_V61655,65559
#define CURLOPT_RTSPHEADER CURLOPT_RTSPHEADER1658,65696
enum {__anonf3adbb160f031661,65813
  CURL_HTTP_VERSION_NONE, /* setting this means we don't care, and that we'dCURL_HTTP_VERSION_NONE1662,65820
  CURL_HTTP_VERSION_1_0,  /* please use HTTP 1.0 in the request */CURL_HTTP_VERSION_1_01665,66011
  CURL_HTTP_VERSION_1_1,  /* please use HTTP 1.1 in the request */CURL_HTTP_VERSION_1_11666,66078
  CURL_HTTP_VERSION_2_0,  /* please use HTTP 2.0 in the request */CURL_HTTP_VERSION_2_01667,66145
  CURL_HTTP_VERSION_LAST /* *ILLEGAL* http version */CURL_HTTP_VERSION_LAST1669,66213
enum {__anonf3adbb1610031675,66316
    CURL_RTSPREQ_NONE, /* first in list */CURL_RTSPREQ_NONE1676,66323
    CURL_RTSPREQ_OPTIONS,CURL_RTSPREQ_OPTIONS1677,66366
    CURL_RTSPREQ_DESCRIBE,CURL_RTSPREQ_DESCRIBE1678,66392
    CURL_RTSPREQ_ANNOUNCE,CURL_RTSPREQ_ANNOUNCE1679,66419
    CURL_RTSPREQ_SETUP,CURL_RTSPREQ_SETUP1680,66446
    CURL_RTSPREQ_PLAY,CURL_RTSPREQ_PLAY1681,66470
    CURL_RTSPREQ_PAUSE,CURL_RTSPREQ_PAUSE1682,66493
    CURL_RTSPREQ_TEARDOWN,CURL_RTSPREQ_TEARDOWN1683,66517
    CURL_RTSPREQ_GET_PARAMETER,CURL_RTSPREQ_GET_PARAMETER1684,66544
    CURL_RTSPREQ_SET_PARAMETER,CURL_RTSPREQ_SET_PARAMETER1685,66576
    CURL_RTSPREQ_RECORD,CURL_RTSPREQ_RECORD1686,66608
    CURL_RTSPREQ_RECEIVE,CURL_RTSPREQ_RECEIVE1687,66633
    CURL_RTSPREQ_LAST /* last in list */CURL_RTSPREQ_LAST1688,66659
enum CURL_NETRC_OPTION {CURL_NETRC_OPTION1692,66767
  CURL_NETRC_IGNORED,     /* The .netrc will never be read.CURL_NETRC_IGNORED1693,66792
  CURL_NETRC_OPTIONAL,    /* A user:password in the URL will be preferredCURL_NETRC_OPTIONAL1695,66905
  CURL_NETRC_REQUIRED,    /* A user:password in the URL will be ignored.CURL_NETRC_REQUIRED1697,67033
  CURL_NETRC_LASTCURL_NETRC_LAST1700,67231
enum {__anonf3adbb1611031703,67253
  CURL_SSLVERSION_DEFAULT,CURL_SSLVERSION_DEFAULT1704,67260
  CURL_SSLVERSION_TLSv1, /* TLS 1.x */CURL_SSLVERSION_TLSv11705,67287
  CURL_SSLVERSION_SSLv2,CURL_SSLVERSION_SSLv21706,67326
  CURL_SSLVERSION_SSLv3,CURL_SSLVERSION_SSLv31707,67351
  CURL_SSLVERSION_TLSv1_0,CURL_SSLVERSION_TLSv1_01708,67376
  CURL_SSLVERSION_TLSv1_1,CURL_SSLVERSION_TLSv1_11709,67403
  CURL_SSLVERSION_TLSv1_2,CURL_SSLVERSION_TLSv1_21710,67430
  CURL_SSLVERSION_LAST /* never use, keep last */CURL_SSLVERSION_LAST1712,67458
enum CURL_TLSAUTH {CURL_TLSAUTH1715,67512
  CURL_TLSAUTH_NONE,CURL_TLSAUTH_NONE1716,67532
  CURL_TLSAUTH_SRP,CURL_TLSAUTH_SRP1717,67553
  CURL_TLSAUTH_LAST /* never use, keep last */CURL_TLSAUTH_LAST1718,67573
#define CURL_REDIR_GET_ALL CURL_REDIR_GET_ALL1726,67859
#define CURL_REDIR_POST_301 CURL_REDIR_POST_3011727,67889
#define CURL_REDIR_POST_302 CURL_REDIR_POST_3021728,67919
#define CURL_REDIR_POST_303 CURL_REDIR_POST_3031729,67949
#define CURL_REDIR_POST_ALL CURL_REDIR_POST_ALL1730,67979
typedef enum {__anonf3adbb1612031733,68076
  CURL_TIMECOND_NONE,CURL_TIMECOND_NONE1734,68091
  CURL_TIMECOND_IFMODSINCE,CURL_TIMECOND_IFMODSINCE1736,68114
  CURL_TIMECOND_IFUNMODSINCE,CURL_TIMECOND_IFUNMODSINCE1737,68142
  CURL_TIMECOND_LASTMOD,CURL_TIMECOND_LASTMOD1738,68172
  CURL_TIMECOND_LASTCURL_TIMECOND_LAST1740,68198
} curl_TimeCond;curl_TimeCond1741,68219
CURL_EXTERN int (curl_strequal)(const char *s1, const char *s2);curl_strequal1746,68362
CURL_EXTERN int (curl_strnequal)(const char *s1, const char *s2, size_t n);curl_strnequal1747,68427
#define CFINIT(CFINIT1755,68599
#define CFINIT(CFINIT1758,68715
typedef enum {__anonf3adbb1613031761,68762
  CFINIT(NOTHING),        /********* the first one is unused ************/CFINIT1762,68777
  CFINIT(COPYNAME),CFINIT1765,68862
  CFINIT(PTRNAME),CFINIT1766,68882
  CFINIT(NAMELENGTH),CFINIT1767,68901
  CFINIT(COPYCONTENTS),CFINIT1768,68923
  CFINIT(PTRCONTENTS),CFINIT1769,68947
  CFINIT(CONTENTSLENGTH),CFINIT1770,68970
  CFINIT(FILECONTENT),CFINIT1771,68996
  CFINIT(ARRAY),CFINIT1772,69019
  CFINIT(OBSOLETE),CFINIT1773,69036
  CFINIT(FILE),CFINIT1774,69056
  CFINIT(BUFFER),CFINIT1776,69073
  CFINIT(BUFFERPTR),CFINIT1777,69091
  CFINIT(BUFFERLENGTH),CFINIT1778,69112
  CFINIT(CONTENTTYPE),CFINIT1780,69137
  CFINIT(CONTENTHEADER),CFINIT1781,69160
  CFINIT(FILENAME),CFINIT1782,69185
  CFINIT(END),CFINIT1783,69205
  CFINIT(OBSOLETE2),CFINIT1784,69220
  CFINIT(STREAM),CFINIT1786,69242
  CURLFORM_LASTENTRY /* the last unused */CURLFORM_LASTENTRY1788,69261
} CURLformoption;CURLformoption1789,69304
struct curl_forms {curl_forms1794,69408
  CURLformoption option;option1795,69428
  const char     *value;value1796,69453
typedef enum {__anonf3adbb1614031815,70352
  CURL_FORMADD_OK, /* first, no error */CURL_FORMADD_OK1816,70367
  CURL_FORMADD_MEMORY,CURL_FORMADD_MEMORY1818,70409
  CURL_FORMADD_OPTION_TWICE,CURL_FORMADD_OPTION_TWICE1819,70432
  CURL_FORMADD_NULL,CURL_FORMADD_NULL1820,70461
  CURL_FORMADD_UNKNOWN_OPTION,CURL_FORMADD_UNKNOWN_OPTION1821,70482
  CURL_FORMADD_INCOMPLETE,CURL_FORMADD_INCOMPLETE1822,70513
  CURL_FORMADD_ILLEGAL_ARRAY,CURL_FORMADD_ILLEGAL_ARRAY1823,70540
  CURL_FORMADD_DISABLED, /* libcurl was built with this disabled */CURL_FORMADD_DISABLED1824,70570
  CURL_FORMADD_LAST /* last */CURL_FORMADD_LAST1826,70639
} CURLFORMcode;CURLFORMcode1827,70670
typedef size_t (*curl_formget_callback)(void *arg, const char *buf,curl_formget_callback1850,71392
struct curl_slist {curl_slist1984,75313
  char *data;data1985,75333
  struct curl_slist *next;next1986,75347
struct curl_certinfo {curl_certinfo2022,76275
  int num_of_certs;             /* number of certificates with information */num_of_certs2023,76298
  struct curl_slist **certinfo; /* for each index in this array, there's acertinfo2024,76376
typedef enum {__anonf3adbb1615032030,76645
  CURLSSLBACKEND_NONE = 0,CURLSSLBACKEND_NONE2031,76660
  CURLSSLBACKEND_OPENSSL = 1,CURLSSLBACKEND_OPENSSL2032,76687
  CURLSSLBACKEND_GNUTLS = 2,CURLSSLBACKEND_GNUTLS2033,76717
  CURLSSLBACKEND_NSS = 3,CURLSSLBACKEND_NSS2034,76746
  CURLSSLBACKEND_QSOSSL = 4,CURLSSLBACKEND_QSOSSL2035,76772
  CURLSSLBACKEND_GSKIT = 5,CURLSSLBACKEND_GSKIT2036,76801
  CURLSSLBACKEND_POLARSSL = 6,CURLSSLBACKEND_POLARSSL2037,76829
  CURLSSLBACKEND_CYASSL = 7,CURLSSLBACKEND_CYASSL2038,76860
  CURLSSLBACKEND_SCHANNEL = 8,CURLSSLBACKEND_SCHANNEL2039,76889
  CURLSSLBACKEND_DARWINSSL = 9,CURLSSLBACKEND_DARWINSSL2040,76920
  CURLSSLBACKEND_AXTLS = 10CURLSSLBACKEND_AXTLS2041,76952
} curl_sslbackend;curl_sslbackend2042,76980
struct curl_tlssessioninfo {curl_tlssessioninfo2047,77202
  curl_sslbackend backend;backend2048,77231
  void *internals;internals2049,77258
#define CURLINFO_STRING CURLINFO_STRING2052,77281
#define CURLINFO_LONG CURLINFO_LONG2053,77316
#define CURLINFO_DOUBLE CURLINFO_DOUBLE2054,77351
#define CURLINFO_SLIST CURLINFO_SLIST2055,77386
#define CURLINFO_MASK CURLINFO_MASK2056,77421
#define CURLINFO_TYPEMASK CURLINFO_TYPEMASK2057,77456
typedef enum {__anonf3adbb1616032059,77492
  CURLINFO_NONE, /* first, never use this */CURLINFO_NONE2060,77507
  CURLINFO_EFFECTIVE_URL    = CURLINFO_STRING + 1,CURLINFO_EFFECTIVE_URL2061,77552
  CURLINFO_RESPONSE_CODE    = CURLINFO_LONG   + 2,CURLINFO_RESPONSE_CODE2062,77603
  CURLINFO_TOTAL_TIME       = CURLINFO_DOUBLE + 3,CURLINFO_TOTAL_TIME2063,77654
  CURLINFO_NAMELOOKUP_TIME  = CURLINFO_DOUBLE + 4,CURLINFO_NAMELOOKUP_TIME2064,77705
  CURLINFO_CONNECT_TIME     = CURLINFO_DOUBLE + 5,CURLINFO_CONNECT_TIME2065,77756
  CURLINFO_PRETRANSFER_TIME = CURLINFO_DOUBLE + 6,CURLINFO_PRETRANSFER_TIME2066,77807
  CURLINFO_SIZE_UPLOAD      = CURLINFO_DOUBLE + 7,CURLINFO_SIZE_UPLOAD2067,77858
  CURLINFO_SIZE_DOWNLOAD    = CURLINFO_DOUBLE + 8,CURLINFO_SIZE_DOWNLOAD2068,77909
  CURLINFO_SPEED_DOWNLOAD   = CURLINFO_DOUBLE + 9,CURLINFO_SPEED_DOWNLOAD2069,77960
  CURLINFO_SPEED_UPLOAD     = CURLINFO_DOUBLE + 10,CURLINFO_SPEED_UPLOAD2070,78011
  CURLINFO_HEADER_SIZE      = CURLINFO_LONG   + 11,CURLINFO_HEADER_SIZE2071,78063
  CURLINFO_REQUEST_SIZE     = CURLINFO_LONG   + 12,CURLINFO_REQUEST_SIZE2072,78115
  CURLINFO_SSL_VERIFYRESULT = CURLINFO_LONG   + 13,CURLINFO_SSL_VERIFYRESULT2073,78167
  CURLINFO_FILETIME         = CURLINFO_LONG   + 14,CURLINFO_FILETIME2074,78219
  CURLINFO_CONTENT_LENGTH_DOWNLOAD   = CURLINFO_DOUBLE + 15,CURLINFO_CONTENT_LENGTH_DOWNLOAD2075,78271
  CURLINFO_CONTENT_LENGTH_UPLOAD     = CURLINFO_DOUBLE + 16,CURLINFO_CONTENT_LENGTH_UPLOAD2076,78332
  CURLINFO_STARTTRANSFER_TIME = CURLINFO_DOUBLE + 17,CURLINFO_STARTTRANSFER_TIME2077,78393
  CURLINFO_CONTENT_TYPE     = CURLINFO_STRING + 18,CURLINFO_CONTENT_TYPE2078,78447
  CURLINFO_REDIRECT_TIME    = CURLINFO_DOUBLE + 19,CURLINFO_REDIRECT_TIME2079,78499
  CURLINFO_REDIRECT_COUNT   = CURLINFO_LONG   + 20,CURLINFO_REDIRECT_COUNT2080,78551
  CURLINFO_PRIVATE          = CURLINFO_STRING + 21,CURLINFO_PRIVATE2081,78603
  CURLINFO_HTTP_CONNECTCODE = CURLINFO_LONG   + 22,CURLINFO_HTTP_CONNECTCODE2082,78655
  CURLINFO_HTTPAUTH_AVAIL   = CURLINFO_LONG   + 23,CURLINFO_HTTPAUTH_AVAIL2083,78707
  CURLINFO_PROXYAUTH_AVAIL  = CURLINFO_LONG   + 24,CURLINFO_PROXYAUTH_AVAIL2084,78759
  CURLINFO_OS_ERRNO         = CURLINFO_LONG   + 25,CURLINFO_OS_ERRNO2085,78811
  CURLINFO_NUM_CONNECTS     = CURLINFO_LONG   + 26,CURLINFO_NUM_CONNECTS2086,78863
  CURLINFO_SSL_ENGINES      = CURLINFO_SLIST  + 27,CURLINFO_SSL_ENGINES2087,78915
  CURLINFO_COOKIELIST       = CURLINFO_SLIST  + 28,CURLINFO_COOKIELIST2088,78967
  CURLINFO_LASTSOCKET       = CURLINFO_LONG   + 29,CURLINFO_LASTSOCKET2089,79019
  CURLINFO_FTP_ENTRY_PATH   = CURLINFO_STRING + 30,CURLINFO_FTP_ENTRY_PATH2090,79071
  CURLINFO_REDIRECT_URL     = CURLINFO_STRING + 31,CURLINFO_REDIRECT_URL2091,79123
  CURLINFO_PRIMARY_IP       = CURLINFO_STRING + 32,CURLINFO_PRIMARY_IP2092,79175
  CURLINFO_APPCONNECT_TIME  = CURLINFO_DOUBLE + 33,CURLINFO_APPCONNECT_TIME2093,79227
  CURLINFO_CERTINFO         = CURLINFO_SLIST  + 34,CURLINFO_CERTINFO2094,79279
  CURLINFO_CONDITION_UNMET  = CURLINFO_LONG   + 35,CURLINFO_CONDITION_UNMET2095,79331
  CURLINFO_RTSP_SESSION_ID  = CURLINFO_STRING + 36,CURLINFO_RTSP_SESSION_ID2096,79383
  CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG   + 37,CURLINFO_RTSP_CLIENT_CSEQ2097,79435
  CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG   + 38,CURLINFO_RTSP_SERVER_CSEQ2098,79487
  CURLINFO_RTSP_CSEQ_RECV   = CURLINFO_LONG   + 39,CURLINFO_RTSP_CSEQ_RECV2099,79539
  CURLINFO_PRIMARY_PORT     = CURLINFO_LONG   + 40,CURLINFO_PRIMARY_PORT2100,79591
  CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,CURLINFO_LOCAL_IP2101,79643
  CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,CURLINFO_LOCAL_PORT2102,79695
  CURLINFO_TLS_SESSION      = CURLINFO_SLIST  + 43,CURLINFO_TLS_SESSION2103,79747
  CURLINFO_LASTONE          = 43CURLINFO_LASTONE2106,79840
} CURLINFO;CURLINFO2107,79873
#define CURLINFO_HTTP_CODE CURLINFO_HTTP_CODE2111,79988
typedef enum {__anonf3adbb1617032113,80039
  CURLCLOSEPOLICY_NONE, /* first, never use this */CURLCLOSEPOLICY_NONE2114,80054
  CURLCLOSEPOLICY_OLDEST,CURLCLOSEPOLICY_OLDEST2116,80107
  CURLCLOSEPOLICY_LEAST_RECENTLY_USED,CURLCLOSEPOLICY_LEAST_RECENTLY_USED2117,80133
  CURLCLOSEPOLICY_LEAST_TRAFFIC,CURLCLOSEPOLICY_LEAST_TRAFFIC2118,80172
  CURLCLOSEPOLICY_SLOWEST,CURLCLOSEPOLICY_SLOWEST2119,80205
  CURLCLOSEPOLICY_CALLBACK,CURLCLOSEPOLICY_CALLBACK2120,80232
  CURLCLOSEPOLICY_LAST /* last, never use this */CURLCLOSEPOLICY_LAST2122,80261
} curl_closepolicy;curl_closepolicy2123,80311
#define CURL_GLOBAL_SSL CURL_GLOBAL_SSL2125,80332
#define CURL_GLOBAL_WIN32 CURL_GLOBAL_WIN322126,80363
#define CURL_GLOBAL_ALL CURL_GLOBAL_ALL2127,80396
#define CURL_GLOBAL_NOTHING CURL_GLOBAL_NOTHING2128,80456
#define CURL_GLOBAL_DEFAULT CURL_GLOBAL_DEFAULT2129,80486
#define CURL_GLOBAL_ACK_EINTR CURL_GLOBAL_ACK_EINTR2130,80530
typedef enum {__anonf3adbb1618032138,80751
  CURL_LOCK_DATA_NONE = 0,CURL_LOCK_DATA_NONE2139,80766
  CURL_LOCK_DATA_SHARE,CURL_LOCK_DATA_SHARE2144,80944
  CURL_LOCK_DATA_COOKIE,CURL_LOCK_DATA_COOKIE2145,80968
  CURL_LOCK_DATA_DNS,CURL_LOCK_DATA_DNS2146,80993
  CURL_LOCK_DATA_SSL_SESSION,CURL_LOCK_DATA_SSL_SESSION2147,81015
  CURL_LOCK_DATA_CONNECT,CURL_LOCK_DATA_CONNECT2148,81045
  CURL_LOCK_DATA_LASTCURL_LOCK_DATA_LAST2149,81071
} curl_lock_data;curl_lock_data2150,81093
typedef enum {__anonf3adbb1619032153,81146
  CURL_LOCK_ACCESS_NONE = 0,   /* unspecified action */CURL_LOCK_ACCESS_NONE2154,81161
  CURL_LOCK_ACCESS_SHARED = 1, /* for read perhaps */CURL_LOCK_ACCESS_SHARED2155,81217
  CURL_LOCK_ACCESS_SINGLE = 2, /* for write perhaps */CURL_LOCK_ACCESS_SINGLE2156,81271
  CURL_LOCK_ACCESS_LAST        /* never use */CURL_LOCK_ACCESS_LAST2157,81326
} curl_lock_access;curl_lock_access2158,81373
typedef void (*curl_lock_function)(CURL *handle,curl_lock_function2160,81394
typedef void (*curl_unlock_function)(CURL *handle,curl_unlock_function2164,81612
typedef void CURLSH;CURLSH2168,81775
typedef enum {__anonf3adbb161a032170,81797
  CURLSHE_OK,  /* all is fine */CURLSHE_OK2171,81812
  CURLSHE_BAD_OPTION, /* 1 */CURLSHE_BAD_OPTION2172,81845
  CURLSHE_IN_USE,     /* 2 */CURLSHE_IN_USE2173,81875
  CURLSHE_INVALID,    /* 3 */CURLSHE_INVALID2174,81905
  CURLSHE_NOMEM,      /* 4 out of memory */CURLSHE_NOMEM2175,81935
  CURLSHE_NOT_BUILT_IN, /* 5 feature not present in lib */CURLSHE_NOT_BUILT_IN2176,81979
  CURLSHE_LAST        /* never use */CURLSHE_LAST2177,82038
} CURLSHcode;CURLSHcode2178,82076
typedef enum {__anonf3adbb161b032180,82091
  CURLSHOPT_NONE,  /* don't use */CURLSHOPT_NONE2181,82106
  CURLSHOPT_SHARE,   /* specify a data type to share */CURLSHOPT_SHARE2182,82141
  CURLSHOPT_UNSHARE, /* specify which data type to stop sharing */CURLSHOPT_UNSHARE2183,82197
  CURLSHOPT_LOCKFUNC,   /* pass in a 'curl_lock_function' pointer */CURLSHOPT_LOCKFUNC2184,82264
  CURLSHOPT_UNLOCKFUNC, /* pass in a 'curl_unlock_function' pointer */CURLSHOPT_UNLOCKFUNC2185,82333
  CURLSHOPT_USERDATA,   /* pass in a user data pointer used in the lock/unlockCURLSHOPT_USERDATA2186,82404
  CURLSHOPT_LAST  /* never use */CURLSHOPT_LAST2188,82532
} CURLSHoption;CURLSHoption2189,82566
typedef enum {__anonf3adbb161c032199,82915
  CURLVERSION_FIRST,CURLVERSION_FIRST2200,82930
  CURLVERSION_SECOND,CURLVERSION_SECOND2201,82951
  CURLVERSION_THIRD,CURLVERSION_THIRD2202,82973
  CURLVERSION_FOURTH,CURLVERSION_FOURTH2203,82994
  CURLVERSION_LAST /* never actually use this */CURLVERSION_LAST2204,83016
} CURLversion;CURLversion2205,83065
#define CURLVERSION_NOW CURLVERSION_NOW2212,83392
typedef struct {__anonf3adbb161d082214,83436
  CURLversion age;          /* age of the returned struct */age2215,83453
  const char *version;      /* LIBCURL_VERSION */version2216,83514
  unsigned int version_num; /* LIBCURL_VERSION_NUM */version_num2217,83564
  const char *host;         /* OS/host/cpu/machine when configured */host2218,83618
  int features;             /* bitmask, see defines below */features2219,83688
  const char *ssl_version;  /* human readable string */ssl_version2220,83749
  long ssl_version_num;     /* not used anymore, always 0 */ssl_version_num2221,83805
  const char *libz_version; /* human readable string */libz_version2222,83866
  const char * const *protocols;protocols2224,83988
  const char *ares;ares2227,84085
  int ares_num;ares_num2228,84105
  const char *libidn;libidn2231,84172
  int iconv_ver_num;iconv_ver_num2236,84310
  const char *libssh_version; /* human readable string */libssh_version2238,84332
} curl_version_info_data;curl_version_info_data2240,84391
#define CURL_VERSION_IPV6 CURL_VERSION_IPV62242,84418
#define CURL_VERSION_KERBEROS4 CURL_VERSION_KERBEROS42243,84476
#define CURL_VERSION_SSL CURL_VERSION_SSL2244,84548
#define CURL_VERSION_LIBZ CURL_VERSION_LIBZ2245,84617
#define CURL_VERSION_NTLM CURL_VERSION_NTLM2246,84688
#define CURL_VERSION_GSSNEGOTIATE CURL_VERSION_GSSNEGOTIATE2247,84756
#define CURL_VERSION_DEBUG CURL_VERSION_DEBUG2249,84883
#define CURL_VERSION_ASYNCHDNS CURL_VERSION_ASYNCHDNS2250,84958
#define CURL_VERSION_SPNEGO CURL_VERSION_SPNEGO2251,85029
#define CURL_VERSION_LARGEFILE CURL_VERSION_LARGEFILE2252,85099
#define CURL_VERSION_IDN CURL_VERSION_IDN2253,85175
#define CURL_VERSION_SSPI CURL_VERSION_SSPI2254,85255
#define CURL_VERSION_CONV CURL_VERSION_CONV2255,85318
#define CURL_VERSION_CURLDEBUG CURL_VERSION_CURLDEBUG2256,85395
#define CURL_VERSION_TLSAUTH_SRP CURL_VERSION_TLSAUTH_SRP2257,85472
#define CURL_VERSION_NTLM_WB CURL_VERSION_NTLM_WB2258,85545
#define CURL_VERSION_HTTP2 CURL_VERSION_HTTP22259,85624
#define CURL_VERSION_GSSAPI CURL_VERSION_GSSAPI2260,85692
#define CURLPAUSE_RECV CURLPAUSE_RECV2305,86844
#define CURLPAUSE_RECV_CONT CURLPAUSE_RECV_CONT2306,86879
#define CURLPAUSE_SEND CURLPAUSE_SEND2308,86912
#define CURLPAUSE_SEND_CONT CURLPAUSE_SEND_CONT2309,86947
#define CURLPAUSE_ALL CURLPAUSE_ALL2311,86980
#define CURLPAUSE_CONT CURLPAUSE_CONT2312,87040
#define curl_easy_setopt(curl_easy_setopt2333,87831
#define curl_easy_getinfo(curl_easy_getinfo2334,87909
#define curl_share_setopt(curl_share_setopt2335,87987
#define curl_multi_setopt(curl_multi_setopt2336,88065

curl/curlver.h,442
#define __CURL_CURLVER_H__CURL_CURLVER_H2,25
#define LIBCURL_COPYRIGHT LIBCURL_COPYRIGHT33,1365
#define LIBCURL_VERSION LIBCURL_VERSION37,1537
#define LIBCURL_VERSION_MAJOR LIBCURL_VERSION_MAJOR41,1660
#define LIBCURL_VERSION_MINOR LIBCURL_VERSION_MINOR42,1692
#define LIBCURL_VERSION_PATCH LIBCURL_VERSION_PATCH43,1725
#define LIBCURL_VERSION_NUM LIBCURL_VERSION_NUM60,2421
#define LIBCURL_TIMESTAMP LIBCURL_TIMESTAMP71,2746

curl/multi.h,3908
#define __CURL_MULTI_H__CURL_MULTI_H2,23
typedef void CURLM;CURLM59,2099
typedef enum {__anon6ac4414b010361,2120
  CURLM_CALL_MULTI_PERFORM = -1, /* please call curl_multi_perform() orCURLM_CALL_MULTI_PERFORM62,2135
  CURLM_OK,CURLM_OK64,2272
  CURLM_BAD_HANDLE,      /* the passed-in handle is not a valid CURLM handle */CURLM_BAD_HANDLE65,2284
  CURLM_BAD_EASY_HANDLE, /* an easy handle was not good/valid */CURLM_BAD_EASY_HANDLE66,2364
  CURLM_OUT_OF_MEMORY,   /* if you ever get this, you're in deep sh*t */CURLM_OUT_OF_MEMORY67,2429
  CURLM_INTERNAL_ERROR,  /* this is a libcurl bug */CURLM_INTERNAL_ERROR68,2502
  CURLM_BAD_SOCKET,      /* the passed in socket argument did not match */CURLM_BAD_SOCKET69,2555
  CURLM_UNKNOWN_OPTION,  /* curl_multi_setopt() with unsupported option */CURLM_UNKNOWN_OPTION70,2630
  CURLM_ADDED_ALREADY,   /* an easy handle already added to a multi handle wasCURLM_ADDED_ALREADY71,2705
  CURLM_LASTCURLM_LAST73,2846
} CURLMcode;CURLMcode74,2859
#define CURLM_CALL_MULTI_SOCKET CURLM_CALL_MULTI_SOCKET79,3071
typedef enum {__anon6ac4414b020381,3129
  CURLMSG_NONE, /* first, not used */CURLMSG_NONE82,3144
  CURLMSG_DONE, /* This easy handle has completed. 'result' containsCURLMSG_DONE83,3182
  CURLMSG_LAST /* last, not used */CURLMSG_LAST85,3302
} CURLMSG;CURLMSG86,3338
struct CURLMsg {CURLMsg88,3350
  CURLMSG msg;       /* what this message means */msg89,3367
  CURL *easy_handle; /* the handle it concerns */easy_handle90,3418
  union {__anon6ac4414b030a91,3468
    void *whatever;    /* message-specific data */whatever92,3478
    CURLcode result;   /* return code for transfer */result93,3529
  } data;data94,3583
typedef struct CURLMsg CURLMsg;CURLMsg96,3596
#define CURL_WAIT_POLLIN CURL_WAIT_POLLIN101,3766
#define CURL_WAIT_POLLPRI CURL_WAIT_POLLPRI102,3801
#define CURL_WAIT_POLLOUT CURL_WAIT_POLLOUT103,3836
struct curl_waitfd {curl_waitfd105,3872
  curl_socket_t fd;fd106,3893
  short events;events107,3913
  short revents; /* not supported yet */revents108,3929
#define CURL_POLL_NONE CURL_POLL_NONE251,9551
#define CURL_POLL_IN CURL_POLL_IN252,9578
#define CURL_POLL_OUT CURL_POLL_OUT253,9605
#define CURL_POLL_INOUT CURL_POLL_INOUT254,9632
#define CURL_POLL_REMOVE CURL_POLL_REMOVE255,9659
#define CURL_SOCKET_TIMEOUT CURL_SOCKET_TIMEOUT257,9687
#define CURL_CSELECT_IN CURL_CSELECT_IN259,9732
#define CURL_CSELECT_OUT CURL_CSELECT_OUT260,9763
#define CURL_CSELECT_ERR CURL_CSELECT_ERR261,9794
typedef int (*curl_socket_callback)(CURL *easy,      /* easy handle */curl_socket_callback263,9826
typedef int (*curl_multi_timer_callback)(CURLM *multi,    /* multi handle */curl_multi_timer_callback280,10690
#define curl_multi_socket(curl_multi_socket300,11724
#define CINIT(CINIT318,12296
#define LONG LONG321,12449
#define OBJECTPOINT OBJECTPOINT322,12488
#define FUNCTIONPOINT FUNCTIONPOINT323,12534
#define OFF_T OFF_T324,12582
#define CINIT(CINIT325,12622
typedef enum {__anon6ac4414b0403328,12696
  CINIT(SOCKETFUNCTION, FUNCTIONPOINT, 1),CINIT330,12764
  CINIT(SOCKETDATA, OBJECTPOINT, 2),CINIT333,12867
  CINIT(PIPELINING, LONG, 3),CINIT336,12967
  CINIT(TIMERFUNCTION, FUNCTIONPOINT, 4),CINIT339,13051
  CINIT(TIMERDATA, OBJECTPOINT, 5),CINIT342,13152
  CINIT(MAXCONNECTS, LONG, 6),CINIT345,13247
  CINIT(MAX_HOST_CONNECTIONS, LONG, 7),CINIT348,13342
  CINIT(MAX_PIPELINE_LENGTH, LONG, 8),CINIT351,13432
  CINIT(CONTENT_LENGTH_PENALTY_SIZE, OFF_T, 9),CINIT355,13575
  CINIT(CHUNK_LENGTH_PENALTY_SIZE, OFF_T, 10),CINIT359,13725
  CINIT(PIPELINING_SITE_BL, OBJECTPOINT, 11),CINIT363,13851
  CINIT(PIPELINING_SERVER_BL, OBJECTPOINT, 12),CINIT367,13971
  CINIT(MAX_TOTAL_CONNECTIONS, LONG, 13),CINIT370,14072
  CURLMOPT_LASTENTRY /* the last unused */CURLMOPT_LASTENTRY372,14115
} CURLMoption;CURLMoption373,14158

curl/curlbuild.h,869
#define __CURL_CURLBUILD_H__CURL_CURLBUILD_H2,27
#    define CURL_SIZEOF_LONG CURL_SIZEOF_LONG171,6930
#    define CURL_TYPEOF_CURL_OFF_T CURL_TYPEOF_CURL_OFF_T172,6971
#    define CURL_FORMAT_CURL_OFF_T CURL_FORMAT_CURL_OFF_T173,7020
#    define CURL_FORMAT_CURL_OFF_TU CURL_FORMAT_CURL_OFF_TU174,7065
#    define CURL_FORMAT_OFF_T CURL_FORMAT_OFF_T175,7110
#    define CURL_SIZEOF_CURL_OFF_T CURL_SIZEOF_CURL_OFF_T176,7156
#    define CURL_SUFFIX_CURL_OFF_T CURL_SUFFIX_CURL_OFF_T177,7197
#    define CURL_SUFFIX_CURL_OFF_TU CURL_SUFFIX_CURL_OFF_TU178,7239
#  define CURL_TYPEOF_CURL_SOCKLEN_T CURL_TYPEOF_CURL_SOCKLEN_T189,7641
#  define CURL_SIZEOF_CURL_SOCKLEN_T CURL_SIZEOF_CURL_SOCKLEN_T190,7682
  typedef CURL_TYPEOF_CURL_SOCKLEN_T curl_socklen_t;curl_socklen_t580,22193
  typedef CURL_TYPEOF_CURL_OFF_T curl_off_t;curl_off_t586,22327

markSystem.h,621
#define _MARKSYSTEMH__MARKSYSTEMH_2,22
typedef void (*ExternalTaggerFunction)();ExternalTaggerFunction16,1133
#define SEQUENCE_LIMIT SEQUENCE_LIMIT17,1175
#define MAX_XREF_SENTENCE MAX_XREF_SENTENCE18,1255
#define REF_ELEMENT_SIZE REF_ELEMENT_SIZE19,1334
#define  MAXREFSENTENCE_BYTES MAXREFSENTENCE_BYTES20,1424
#define EXACTNOTSET EXACTNOTSET22,1495
#define EXACTUSEDUP EXACTUSEDUP23,1517
#define DONTUSEEXACT DONTUSEEXACT24,1540
#define REMOVE_SUBJECT REMOVE_SUBJECT25,1564
#define RAW RAW27,1595
#define RAWCASE RAWCASE28,1658
#define FIXED FIXED29,1721
#define CANONICAL CANONICAL30,1772

postgres.cpp,2366
static  PGconn     *conn; // shared db open stuffconn6,77
static bool connDummy = false;connDummy7,127
static char pguserFilename[MAX_WORD_SIZE];pguserFilename8,158
static  PGconn     *usersconn; // shared db open stuff used instead of files for userwritesusersconn10,257
static char* pgfilesbuffer = 0;pgfilesbuffer11,349
char postgresparams[300]; // init string for pguserpostgresparams12,381
static bool postgresInited = false;postgresInited13,433
char postgresuserread[300];postgresuserread16,519
char postgresuserinsert[300];postgresuserinsert17,547
char postgresuserupdate[300];postgresuserupdate18,577
char *pguserread = 0;pguserread19,607
char *pguserinsert = 0;pguserinsert20,629
char *pguserupdate = 0;pguserupdate21,653
char const * pgdefault_usercreate = "CREATE TABLE userfiles (userid varchar(400) PRIMARY KEY, fipgdefault_usercreate28,872
char const * pgdefault_userread = "SELECT file FROM userfiles WHERE userid = $1::varchar ;";pgdefault_userread29,981
char const * pgdefault_userinsert = "INSERT INTO userfiles (file, userid) VALUES ($1::bytea, $2:pgdefault_userinsert30,1074
char const * pgdefault_userupdate = "UPDATE userfiles SET file = $1::bytea WHERE userid = $2::vapgdefault_userupdate31,1184
void PostgresScriptShutDown() // script opened filePostgresScriptShutDown37,1362
FunctionResult DBCloseCode(char* buffer)DBCloseCode43,1461
FunctionResult DBInitCode(char* buffer)DBInitCode61,1887
char hexbytes[] =  {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};hexbytes111,3232
static void AdjustQuotes(char* fix,bool nocloser)AdjustQuotes113,3319
void PGUserFilesCloseCode()PGUserFilesCloseCode141,4038
FILE* pguserCreate(const char* name)pguserCreate154,4294
FILE* pguserOpen(const char* name)pguserOpen160,4397
int pguserClose(FILE*)pguserClose166,4498
static size_t convertFromHex(unsigned char* ptr,unsigned char* from)convertFromHex171,4537
size_t pguserRead(void* buf,size_t size, size_t count, FILE* file)pguserRead197,5109
static void convert2Hex(unsigned char* ptr, size_t len, unsigned char* buffer)convert2Hex235,6169
size_t pguserWrite(const void* buf,size_t size, size_t count, FILE* file)pguserWrite250,6526
void PGInitUserFilesCode(char* postgresparams)PGInitUserFilesCode307,8071
FunctionResult DBExecuteCode(char* buffer)DBExecuteCode390,10956

evserver/libev.m4,0

evserver/install-sh,0

evserver/configure.ac,0

evserver/ltmain.sh,3479
  alias -g '${1+"$@"}'='"$@"'-g86,3698
func_dirname_and_basename ()func_dirname_and_basename159,5729
func_echo ()func_echo244,8242
func_verbose ()func_verbose251,8382
func_error ()func_error263,8685
func_warning ()func_warning270,8843
func_fatal_error ()func_fatal_error280,9063
func_fatal_help ()func_fatal_help289,9254
func_grep ()func_grep299,9503
func_mkdir_p ()func_mkdir_p307,9648
func_mktempdir ()func_mktempdir354,11308
func_quote_for_eval ()func_quote_for_eval391,12468
func_quote_for_expand ()func_quote_for_expand418,13388
func_show_eval ()func_show_eval446,14213
func_show_eval_locale ()func_show_eval_locale470,14840
func_version ()func_version497,15345
func_usage ()func_usage510,15607
func_help ()func_help525,15884
func_missing_arg ()func_missing_arg547,16436
  cat <<EOFEOF577,17047
func_fatal_configuration ()func_fatal_configuration609,17721
func_config ()func_config619,17975
func_features ()func_features637,18441
func_enable_tag ()func_enable_tag658,18957
func_check_version_match ()func_check_version_match825,23052
        cat >&2 <<_LT_EOF_LT_EOF830,23228
        cat >&2 <<_LT_EOF_LT_EOF837,23523
      cat >&2 <<_LT_EOF_LT_EOF845,23832
func_lalib_p ()func_lalib_p894,25179
func_lalib_unsafe_p ()func_lalib_unsafe_p908,25733
func_ltwrapper_script_p ()func_ltwrapper_script_p928,26209
func_ltwrapper_executable_p ()func_ltwrapper_executable_p937,26441
func_ltwrapper_scriptname ()func_ltwrapper_scriptname951,26822
func_ltwrapper_p ()func_ltwrapper_p965,27325
func_execute_cmds ()func_execute_cmds975,27606
func_source ()func_source994,28134
func_infer_tag ()func_infer_tag1010,28523
func_write_libtool_object ()func_write_libtool_object1066,30611
      cat >${write_libobj}T <<EOFEOF1082,30908
func_mode_compile ()func_mode_compile1101,31316
func_mode_help ()func_mode_help1451,40694
func_mode_execute ()func_mode_execute1637,47526
func_mode_finish ()func_mode_finish1768,50831
func_mode_install ()func_mode_install1848,53286
func_generate_dlsyms ()func_generate_dlsyms2289,65046
static const void *lt_preloaded_setup() {*lt_preloaded_setup2466,70251
func_win32_libid ()func_win32_libid2552,73052
func_extract_an_archive ()func_extract_an_archive2596,74059
func_extract_archives ()func_extract_archives2611,74486
func_emit_wrapper_part1 ()func_emit_wrapper_part12700,77425
  alias -g '\${1+\"\$@\"}'='\"\$@\"'-g2730,78372
func_emit_wrapper_part2 ()func_emit_wrapper_part22798,80563
func_emit_wrapper ()func_emit_wrapper2943,84416
func_to_host_path ()func_to_host_path2978,85634
func_to_host_pathlist ()func_to_host_pathlist3049,88422
func_emit_cwrapperexe_src ()func_emit_cwrapperexe_src3132,92088
	cat <<EOFEOF3134,92119
	    cat <<"EOF"EOF3150,92690
	    cat <<EOFEOF3291,96119
	    cat <<EOFEOF3300,96311
	      cat <<EOFEOF3307,96579
	      cat <<"EOF"EOF3311,96675
	      cat <<EOFEOF3318,96836
	      cat <<"EOF"EOF3323,96972
	      cat <<EOFEOF3330,97117
	      cat <<EOFEOF3334,97226
	    cat <<"EOF"EOF3340,97332
	    cat <<"EOF"EOF3393,99094
	    cat <<EOFEOF3434,100415
	    cat <<"EOF"EOF3443,100677
	    cat <<"EOF"EOF3458,101132
	    cat <<"EOF"EOF3474,101353
		cat <<"EOF"EOF3561,104558
		cat <<"EOF"EOF3574,104937
	    cat <<"EOF"EOF3581,105066
func_mode_link ()func_mode_link4032,114970
	  cat > conftest.c <<EOFEOF6543,184458
func_mode_uninstall ()func_mode_uninstall8197,237559

evserver/LICENSE,0

evserver/ev_port.c,325
port_associate_and_check (EV_P_ int fd, int ev)port_associate_and_check59,2889
port_modify (EV_P_ int fd, int oev, int nev)port_modify78,3254
port_poll (EV_P_ ev_tstamp timeout)port_poll93,3571
port_init (EV_P_ int flags)port_init140,5099
port_destroy (EV_P)port_destroy167,6112
port_fork (EV_P)port_fork173,6179

evserver/configure,0

evserver/event.h,2195
#define EVENT_H_EVENT_H_41,2140
# define EVLOOP_NONBLOCK EVLOOP_NONBLOCK50,2240
# define EVLOOP_ONESHOT EVLOOP_ONESHOT53,2308
# define EV_TIMEOUT EV_TIMEOUT56,2369
#define EVLIST_TIMEOUT EVLIST_TIMEOUT71,2663
#define EVLIST_INSERTED EVLIST_INSERTED72,2692
#define EVLIST_SIGNAL EVLIST_SIGNAL73,2721
#define EVLIST_ACTIVE EVLIST_ACTIVE74,2750
#define EVLIST_INTERNAL EVLIST_INTERNAL75,2779
#define EVLIST_INIT EVLIST_INIT76,2808
struct eventevent78,2838
  union {__anon562c189e010a81,2888
    struct ev_io io;io82,2898
    struct ev_signal sig;sig83,2919
  } iosig;iosig84,2945
  struct ev_timer to;to85,2956
  struct event_base *ev_base;ev_base88,3007
  void (*ev_callback)(int, short, void *arg);ev_callback89,3037
  void *ev_arg;ev_arg90,3083
  int ev_fd;ev_fd91,3099
  int ev_pri;ev_pri92,3112
  int ev_res;ev_res93,3126
  int ev_flags;ev_flags94,3140
  short ev_events;ev_events95,3156
#define EV_READ EV_READ98,3179
#define EV_WRITE EV_WRITE99,3222
#define EV_PERSIST EV_PERSIST100,3266
#define EVENT_SIGNAL(EVENT_SIGNAL102,3307
#define EVENT_FD(EVENT_FD103,3362
#define event_initialized(event_initialized105,3418
#define evtimer_add(evtimer_add107,3485
#define evtimer_set(evtimer_set108,3539
#define evtimer_del(evtimer_del109,3606
#define evtimer_pending(evtimer_pending110,3656
#define evtimer_initialized(evtimer_initialized111,3726
#define timeout_add(timeout_add113,3785
#define timeout_set(timeout_set114,3841
#define timeout_del(timeout_del115,3903
#define timeout_pending(timeout_pending116,3955
#define timeout_initialized(timeout_initialized117,4015
#define signal_add(signal_add119,4076
#define signal_set(signal_set120,4130
#define signal_del(signal_del121,4219
#define signal_pending(signal_pending122,4269
#define signal_initialized(signal_initialized123,4338
#define EVLOOP_ONCE EVLOOP_ONCE131,4547
#define _EVENT_LOG_DEBUG _EVENT_LOG_DEBUG136,4678
#define _EVENT_LOG_MSG _EVENT_LOG_MSG137,4705
#define _EVENT_LOG_WARN _EVENT_LOG_WARN138,4732
#define _EVENT_LOG_ERR _EVENT_LOG_ERR139,4759
typedef void (*event_log_cb)(int severity, const char *msg);event_log_cb140,4786

evserver/ev_select.c,477
#  define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET51,2300
#  define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET53,2340
# define EV_SELECT_USE_FD_SET EV_SELECT_USE_FD_SET59,2445
# define NFDBITS NFDBITS61,2493
# define NFDBYTES NFDBYTES65,2546
select_modify (EV_P_ int fd, int oev, int nev)select_modify71,2619
select_poll (EV_P_ ev_tstamp timeout)select_poll140,4446
select_init (EV_P_ int flags)select_init275,8047
select_destroy (EV_P)select_destroy304,8661

evserver/ev_vars.h,27
#define VARx(VARx40,2109

evserver/Changes,0

evserver/ev.c,24973
#  define EV_USE_FLOOR EV_USE_FLOOR50,2320
#   define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL56,2416
#    define EV_USE_REALTIME EV_USE_REALTIME58,2477
#    define EV_USE_MONOTONIC EV_USE_MONOTONIC61,2546
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL65,2634
#   define EV_USE_MONOTONIC EV_USE_MONOTONIC70,2727
#   define EV_USE_REALTIME EV_USE_REALTIME73,2792
#   define EV_USE_MONOTONIC EV_USE_MONOTONIC77,2865
#   define EV_USE_REALTIME EV_USE_REALTIME80,2930
#    define EV_USE_NANOSLEEP EV_USE_NANOSLEEP86,3025
#   define EV_USE_NANOSLEEP EV_USE_NANOSLEEP90,3111
#   define EV_USE_SELECT EV_USE_SELECT95,3212
#  define EV_USE_SELECT EV_USE_SELECT99,3296
#   define EV_USE_POLL EV_USE_POLL104,3383
#  define EV_USE_POLL EV_USE_POLL108,3463
#   define EV_USE_EPOLL EV_USE_EPOLL113,3562
#  define EV_USE_EPOLL EV_USE_EPOLL117,3644
#   define EV_USE_KQUEUE EV_USE_KQUEUE122,3742
#  define EV_USE_KQUEUE EV_USE_KQUEUE126,3826
#   define EV_USE_PORT EV_USE_PORT131,3923
#  define EV_USE_PORT EV_USE_PORT135,4003
#   define EV_USE_INOTIFY EV_USE_INOTIFY140,4106
#  define EV_USE_INOTIFY EV_USE_INOTIFY144,4186
#   define EV_USE_SIGNALFD EV_USE_SIGNALFD149,4290
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD153,4372
#   define EV_USE_EVENTFD EV_USE_EVENTFD158,4452
#  define EV_USE_EVENTFD EV_USE_EVENTFD162,4532
# define EV_NO_SMP EV_NO_SMP190,4893
# define ECB_NO_THREADS ECB_NO_THREADS192,4937
# define ECB_NO_SMP ECB_NO_SMP196,5002
# define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN205,5137
#  define EV_SELECT_IS_WINSOCKET EV_SELECT_IS_WINSOCKET208,5220
#define _DARWIN_UNLIMITED_SELECT _DARWIN_UNLIMITED_SELECT219,5565
# define EV_NSIG EV_NSIG227,5826
# define EV_NSIG EV_NSIG229,5871
# define EV_NSIG EV_NSIG231,5919
# define EV_NSIG EV_NSIG233,5971
# define EV_NSIG EV_NSIG235,6025
# define EV_NSIG EV_NSIG237,6078
# define EV_NSIG EV_NSIG239,6130
# define EV_NSIG EV_NSIG241,6188
# define EV_NSIG EV_NSIG243,6277
# define EV_NSIG EV_NSIG248,6491
# define EV_USE_FLOOR EV_USE_FLOOR252,6540
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL257,6632
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL259,6684
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC265,6827
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC267,6875
# define EV_USE_REALTIME EV_USE_REALTIME272,6944
#  define EV_USE_NANOSLEEP EV_USE_NANOSLEEP277,7056
#  define EV_USE_NANOSLEEP EV_USE_NANOSLEEP279,7104
# define EV_USE_SELECT EV_USE_SELECT284,7171
#  define EV_USE_POLL EV_USE_POLL289,7257
#  define EV_USE_POLL EV_USE_POLL291,7288
#  define EV_USE_EPOLL EV_USE_EPOLL297,7443
#  define EV_USE_EPOLL EV_USE_EPOLL299,7493
# define EV_USE_KQUEUE EV_USE_KQUEUE304,7556
# define EV_USE_PORT EV_USE_PORT308,7609
#  define EV_USE_INOTIFY EV_USE_INOTIFY313,7739
#  define EV_USE_INOTIFY EV_USE_INOTIFY315,7785
# define EV_PID_HASHSIZE EV_PID_HASHSIZE320,7852
# define EV_INOTIFY_HASHSIZE EV_INOTIFY_HASHSIZE324,7938
#  define EV_USE_EVENTFD EV_USE_EVENTFD329,8099
#  define EV_USE_EVENTFD EV_USE_EVENTFD331,8145
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD337,8288
#  define EV_USE_SIGNALFD EV_USE_SIGNALFD339,8335
# define EV_VERIFY EV_VERIFY350,8500
# define EV_USE_4HEAP EV_USE_4HEAP354,8573
# define EV_HEAP_CACHE_AT EV_HEAP_CACHE_AT358,8644
#  define clock_gettime(clock_gettime366,8918
#  define EV_USE_MONOTONIC EV_USE_MONOTONIC368,9016
#  define EV_USE_CLOCK_SYSCALL EV_USE_CLOCK_SYSCALL371,9082
# define EV_USE_POLL EV_USE_POLL380,9300
# define EV_USE_MONOTONIC EV_USE_MONOTONIC385,9380
# define EV_USE_REALTIME EV_USE_REALTIME390,9463
# define EV_USE_INOTIFY EV_USE_INOTIFY395,9541
#  define EV_USE_INOTIFY EV_USE_INOTIFY411,9936
#  define EFD_NONBLOCK EFD_NONBLOCK423,10180
#   define EFD_CLOEXEC EFD_CLOEXEC427,10262
#   define EFD_CLOEXEC EFD_CLOEXEC429,10303
#  define SFD_NONBLOCK SFD_NONBLOCK439,10573
#   define SFD_CLOEXEC SFD_CLOEXEC443,10655
#   define SFD_CLOEXEC SFD_CLOEXEC445,10696
struct signalfd_siginfosignalfd_siginfo450,10822
  uint32_t ssi_signo;ssi_signo452,10848
  char pad[128 - sizeof (uint32_t)];pad453,10870
# define EV_FREQUENT_CHECK EV_FREQUENT_CHECK460,10943
# define EV_FREQUENT_CHECK EV_FREQUENT_CHECK462,10993
#define MIN_INTERVAL MIN_INTERVAL469,11168
#define MIN_TIMEJUMP MIN_TIMEJUMP472,11314
#define MAX_BLOCKTIME MAX_BLOCKTIME473,11412
#define EV_TV_SET(EV_TV_SET475,11504
#define EV_TS_SET(EV_TS_SET476,11610
#define ECB_HECB_H510,13323
  typedef   signed char   int8_t;int8_t513,13352
  typedef unsigned char  uint8_t;uint8_t514,13386
  typedef   signed short  int16_t;int16_t515,13420
  typedef unsigned short uint16_t;uint16_t516,13455
  typedef   signed int    int32_t;int32_t517,13490
  typedef unsigned int   uint32_t;uint32_t518,13525
    typedef   signed long long int64_t;int64_t520,13575
    typedef unsigned long long uint64_t;uint64_t521,13615
    typedef   signed __int64   int64_t;int64_t523,13695
    typedef unsigned __int64   uint64_t;uint64_t524,13735
    #define ECB_GCC_VERSION(ECB_GCC_VERSION539,14380
    #define ECB_GCC_VERSION(ECB_GCC_VERSION541,14431
# define ECB_NO_SMP ECB_NO_SMP551,14817
  #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE555,14880
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE561,15115
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE562,15218
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE563,15310
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE565,15463
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE566,15549
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE567,15635
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE569,15817
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE572,16031
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE575,16262
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE577,16376
      #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE578,16515
      #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE579,16654
      #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE581,16812
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE588,17031
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE593,17403
    #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE594,17461
    #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE595,17577
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE598,17678
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE601,17853
    #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE602,17914
    #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE603,17975
    #define ECB_NEEDS_PTHREADS ECB_NEEDS_PTHREADS617,18430
    #define ECB_MEMORY_FENCE_NEEDS_PTHREADS ECB_MEMORY_FENCE_NEEDS_PTHREADS618,18463
    static pthread_mutex_t ecb_mf_lock = PTHREAD_MUTEX_INITIALIZER;ecb_mf_lock620,18510
    #define ECB_MEMORY_FENCE ECB_MEMORY_FENCE621,18578
  #define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE626,18781
  #define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE630,18909
#define ECB_C99 ECB_C99635,19050
  #define ecb_inline ecb_inline638,19113
  #define ecb_inline ecb_inline640,19175
  #define ecb_inline ecb_inline642,19228
  #define ecb_inline ecb_inline644,19269
  #define ecb_restrict ecb_restrict648,19330
  #define ecb_restrict ecb_restrict650,19380
  #define ecb_restrictecb_restrict652,19418
typedef int ecb_bool;ecb_bool655,19449
#define ECB_CONCAT_(ECB_CONCAT_657,19472
#define ECB_CONCAT(ECB_CONCAT658,19505
#define ECB_STRINGIFY_(ECB_STRINGIFY_659,19548
#define ECB_STRINGIFY(ECB_STRINGIFY660,19578
#define ecb_function_ ecb_function_662,19622
  #define ecb_attribute(ecb_attribute665,19681
  #define ecb_is_constant(ecb_is_constant666,19746
  #define ecb_expect(ecb_expect667,19815
  #define ecb_prefetch(ecb_prefetch668,19890
  #define ecb_attribute(ecb_attribute670,19977
  #define ecb_is_constant(ecb_is_constant671,20011
  #define ecb_expect(ecb_expect672,20054
  #define ecb_prefetch(ecb_prefetch673,20102
  #define ecb_decltype(ecb_decltype678,20212
  #define ecb_decltype(ecb_decltype680,20279
#define ecb_noinline ecb_noinline683,20325
#define ecb_noreturn ecb_noreturn684,20379
#define ecb_unused ecb_unused685,20433
#define ecb_const ecb_const686,20485
#define ecb_pure ecb_pure687,20536
  #define ecb_artificial ecb_artificial690,20612
  #define ecb_hot ecb_hot691,20670
  #define ecb_cold ecb_cold692,20721
  #define ecb_artificialecb_artificial694,20779
  #define ecb_hotecb_hot695,20804
  #define ecb_coldecb_cold696,20822
#define ecb_expect_false(ecb_expect_false702,21065
#define ecb_expect_true(ecb_expect_true703,21121
#define ecb_likely(ecb_likely705,21226
#define ecb_unlikely(ecb_unlikely706,21277
  #define ecb_ld32(ecb_ld32711,21487
  #define ecb_ld64(ecb_ld64712,21544
  #define ecb_ctz32(ecb_ctz32713,21601
  #define ecb_ctz64(ecb_ctz64714,21652
  #define ecb_popcount32(ecb_popcount32715,21703
  ecb_ctz32 (uint32_t x)ecb_ctz32720,21856
  ecb_ctz64 (uint64_t x)ecb_ctz64745,22423
  ecb_popcount32 (uint32_t x)ecb_popcount32753,22621
  ecb_function_ int ecb_ld32 (uint32_t x)ecb_ld32764,22879
  ecb_function_ int ecb_ld64 (uint64_t x)ecb_ld64778,23214
ecb_function_ uint8_t  ecb_bitrev8  (uint8_t  x)ecb_bitrev8789,23418
ecb_function_ uint16_t ecb_bitrev16 (uint16_t x)ecb_bitrev16796,23626
ecb_function_ uint32_t ecb_bitrev32 (uint32_t x)ecb_bitrev32807,23989
ecb_popcount64 (uint64_t x)ecb_popcount64822,24529
ecb_inline uint8_t  ecb_rotl8  (uint8_t  x, unsigned int count) { return (x >> ( 8 - count)) | (ecb_rotl8836,25219
ecb_inline uint8_t  ecb_rotr8  (uint8_t  x, unsigned int count) { return (x << ( 8 - count)) | (ecb_rotr8837,25330
ecb_inline uint16_t ecb_rotl16 (uint16_t x, unsigned int count) { return (x >> (16 - count)) | (ecb_rotl16838,25441
ecb_inline uint16_t ecb_rotr16 (uint16_t x, unsigned int count) { return (x << (16 - count)) | (ecb_rotr16839,25552
ecb_inline uint32_t ecb_rotl32 (uint32_t x, unsigned int count) { return (x >> (32 - count)) | (ecb_rotl32840,25663
ecb_inline uint32_t ecb_rotr32 (uint32_t x, unsigned int count) { return (x << (32 - count)) | (ecb_rotr32841,25774
ecb_inline uint64_t ecb_rotl64 (uint64_t x, unsigned int count) { return (x >> (64 - count)) | (ecb_rotl64842,25885
ecb_inline uint64_t ecb_rotr64 (uint64_t x, unsigned int count) { return (x << (64 - count)) | (ecb_rotr64843,25996
  #define ecb_bswap16(ecb_bswap16846,26133
  #define ecb_bswap32(ecb_bswap32847,26188
  #define ecb_bswap64(ecb_bswap64848,26236
  ecb_bswap16 (uint16_t x)ecb_bswap16852,26376
  ecb_bswap32 (uint32_t x)ecb_bswap32859,26528
  ecb_bswap64 (uint64_t x)ecb_bswap64866,26722
  #define ecb_unreachable(ecb_unreachable873,26862
  ecb_inline void ecb_unreachable (void) { }ecb_unreachable877,27050
#define ecb_assume(ecb_assume881,27173
ecb_byteorder_helper (void)ecb_byteorder_helper885,27338
ecb_inline ecb_bool ecb_big_endian    (void) { return ecb_byteorder_helper () == 0x11; }ecb_big_endian892,27491
ecb_inline ecb_bool ecb_little_endian (void) { return ecb_byteorder_helper () == 0x44; }ecb_little_endian894,27636
  #define ecb_mod(ecb_mod897,27762
  #define ecb_mod(ecb_mod899,27831
  static inline T ecb_div_rd (T val, T div)ecb_div_rd904,27958
  static inline T ecb_div_ru (T val, T div)ecb_div_ru909,28106
  #define ecb_div_rd(ecb_div_rd914,28237
  #define ecb_div_ru(ecb_div_ru915,28344
  static inline int ecb_array_length (const T (&arr)[N])ecb_array_length921,28627
  #define ecb_array_length(ecb_array_length926,28712
# define ECB_MEMORY_FENCE ECB_MEMORY_FENCE945,29363
# define ECB_MEMORY_FENCE_ACQUIRE ECB_MEMORY_FENCE_ACQUIRE946,29406
# define ECB_MEMORY_FENCE_RELEASE ECB_MEMORY_FENCE_RELEASE947,29457
#define expect_false(expect_false950,29516
#define expect_true(expect_true951,29567
#define noinline noinline952,29618
#define inline_size inline_size954,29659
# define inline_speed inline_speed957,29718
# define inline_speed inline_speed959,29762
#define NUMPRI NUMPRI962,29813
# define ABSPRI(ABSPRI965,29884
# define ABSPRI(ABSPRI967,29921
#define EMPTY EMPTY970,29979
#define EMPTY2(EMPTY2971,30054
typedef ev_watcher *W;W973,30112
typedef ev_watcher_list *WL;WL974,30135
typedef ev_watcher_time *WT;WT975,30164
#define ev_active(ev_active977,30194
#define ev_at(ev_at978,30232
static EV_ATOMIC_T have_realtime; /* did clock_gettime (CLOCK_REALTIME) work? */have_realtime983,30439
static EV_ATOMIC_T have_monotonic; /* did clock_gettime (CLOCK_MONOTONIC) work? */have_monotonic987,30549
# define EV_FD_TO_WIN32_HANDLE(EV_FD_TO_WIN32_HANDLE991,30670
# define EV_WIN32_HANDLE_TO_FD(EV_WIN32_HANDLE_TO_FD994,30762
# define EV_WIN32_CLOSE_FD(EV_WIN32_CLOSE_FD997,30862
# define ev_floor(ev_floor1010,31143
ev_floor (ev_tstamp v)ev_floor1017,31305
ev_linux_version (void)ev_linux_version1059,32302
ev_printerr (const char *msg)ev_printerr1098,32919
static void (*syserr_cb)(const char *msg);syserr_cb1104,33005
ev_set_syserr_cb (void (*cb)(const char *msg))ev_set_syserr_cb1107,33063
ev_syserr (const char *msg)ev_syserr1113,33163
ev_realloc_emul (void *ptr, long size)ev_realloc_emul1135,33497
static void *(*alloc)(void *ptr, long size) = ev_realloc_emul;alloc1153,33867
ev_set_allocator (void *(*cb)(void *ptr, long size))ev_set_allocator1156,33945
ev_realloc (void *ptr, long size)ev_realloc1162,34037
#define ev_malloc(ev_malloc1179,34346
#define ev_free(ev_free1180,34393
#define EV_ANFD_REIFY EV_ANFD_REIFY1185,34564
{__anon006c2e3201081189,34641
  WL head;head1190,34643
  unsigned char events; /* the events watched for */events1191,34654
  unsigned char reify;  /* flag set when this ANFD needs reification (EV_ANFD_REIFY, EV__IOFDSETreify1192,34707
  unsigned char emask;  /* the epoll backend stores the actual kernel mask in here */emask1193,34808
  unsigned char unused;unused1194,34894
  unsigned int egen;    /* generation counter to counter epoll bugs */egen1196,34935
  SOCKET handle;handle1199,35055
  OVERLAPPED or, ow;or1202,35095
  OVERLAPPED or, ow;ow1202,35095
} ANFD;ANFD1204,35123
{__anon006c2e3202081208,35202
  W w;w1209,35204
  int events; /* the pending event set for the given watcher */events1210,35211
} ANPENDING;ANPENDING1211,35275
{__anon006c2e3203081216,35361
  WL head;head1217,35363
} ANFS;ANFS1218,35374
  typedef struct {__anon006c2e3204081224,35451
    ev_tstamp at;at1225,35470
    WT w;w1226,35488
  } ANHE;ANHE1227,35498
  #define ANHE_w(ANHE_w1229,35509
  #define ANHE_at(ANHE_at1230,35581
  #define ANHE_at_cache(ANHE_at_cache1231,35654
  typedef WT ANHE;ANHE1234,35761
  #define ANHE_w(ANHE_w1236,35781
  #define ANHE_at(ANHE_at1237,35814
  #define ANHE_at_cache(ANHE_at_cache1238,35851
  struct ev_loopev_loop1243,35908
    ev_tstamp ev_rt_now;ev_rt_now1245,35929
    #define ev_rt_now ev_rt_now1246,35954
    #define VAR(VAR1247,35996
  static struct ev_loop default_loop_struct;default_loop_struct1253,36100
  EV_API_DECL struct ev_loop *ev_default_loop_ptr = 0; /* needs to be initialised to make it a dev_default_loop_ptr1254,36145
  EV_API_DECL ev_tstamp ev_rt_now = 0; /* needs to be initialised to make it a definition despitev_rt_now1258,36277
  #define VAR(VAR1259,36385
  static int ev_default_loop_ptr;ev_default_loop_ptr1263,36462
# define EV_RELEASE_CB EV_RELEASE_CB1268,36524
# define EV_ACQUIRE_CB EV_ACQUIRE_CB1269,36596
# define EV_INVOKE_PENDING EV_INVOKE_PENDING1270,36668
# define EV_RELEASE_CB EV_RELEASE_CB1272,36718
# define EV_ACQUIRE_CB EV_ACQUIRE_CB1273,36749
# define EV_INVOKE_PENDING EV_INVOKE_PENDING1274,36780
#define EVBREAK_RECURSE EVBREAK_RECURSE1277,36840
ev_time (void)ev_time1283,36985
get_clock (void)get_clock1301,37308
ev_now (EV_P)ev_now1317,37572
ev_sleep (ev_tstamp delay)ev_sleep1324,37623
#define MALLOC_ROUND MALLOC_ROUND1349,38219
array_nextsize (int elem, int cur, int cnt)array_nextsize1354,38444
array_realloc (int elem, void *base, int *cur, int cnt)array_realloc1375,38941
#define array_init_zero(array_init_zero1381,39086
#define array_needsize(array_needsize1384,39182
#define array_free(array_free1403,39821
pendingcb (EV_P_ ev_prepare *w, int revents)pendingcb1410,40080
ev_feed_event (EV_P_ void *w, int revents)ev_feed_event1415,40144
feed_reverse (EV_P_ W w)feed_reverse1432,40595
feed_reverse_done (EV_P_ int revents)feed_reverse_done1439,40731
queue_events (EV_P_ W *events, int eventcnt, int type)queue_events1447,40873
fd_event_nocheck (EV_P_ int fd, int revents)fd_event_nocheck1458,41119
fd_event (EV_P_ int fd, int revents)fd_event1475,41530
ev_feed_fd_event (EV_P_ int fd, int revents)ev_feed_fd_event1484,41681
fd_reify (EV_P)fd_reify1493,41921
fd_change (EV_P_ int fd, int flags)fd_change1553,43436
fd_kill (EV_P_ int fd)fd_kill1568,43830
fd_valid (int fd)fd_valid1581,44113
fd_ebadf (EV_P)fd_ebadf1592,44308
fd_enomem (EV_P)fd_enomem1604,44569
fd_rearm_all (EV_P)fd_rearm_all1618,44818
fd_intern (int fd)fd_intern1634,45141
#define DHEAP DHEAP1661,45863
#define HEAP0 HEAP01662,45879
#define HPARENT(HPARENT1663,45942
#define UPHEAP_DONE(UPHEAP_DONE1664,45999
downheap (ANHE *heap, int N, int k)downheap1668,46081
#define HEAP0 HEAP01712,47516
#define HPARENT(HPARENT1713,47532
#define UPHEAP_DONE(UPHEAP_DONE1714,47562
downheap (ANHE *heap, int N, int k)downheap1718,47638
upheap (ANHE *heap, int k)upheap1748,48134
adjustheap (ANHE *heap, int N, int k)adjustheap1770,48530
reheap (ANHE *heap, int N)reheap1780,48793
{__anon006c2e3205081794,49204
  EV_ATOMIC_T pending;pending1795,49206
  WL head;head1799,49264
} ANSIG;ANSIG1800,49275
static ANSIG signals [EV_NSIG - 1];signals1802,49285
evpipe_init (EV_P)evpipe_init1809,49474
evpipe_write (EV_P_ EV_ATOMIC_T *flag)evpipe_write1841,50240
pipecb (EV_P_ ev_io *iow, int revents)pipecb1886,51489
ev_feed_signal (int signum)ev_feed_signal1938,52505
ev_sighandler (int signum)ev_sighandler1955,52754
ev_feed_signal_event (EV_P_ int signum)ev_feed_signal_event1965,52883
sigfdcb (EV_P_ ev_io *iow, int revents)sigfdcb1990,53407
static WL childs [EV_PID_HASHSIZE];childs2013,53940
static ev_signal childev;childev2015,53977
# define WIFCONTINUED(WIFCONTINUED2018,54025
child_reap (EV_P_ int chain, int pid, int status)child_reap2023,54124
# define WCONTINUED WCONTINUED2042,54719
childcb (EV_P_ ev_signal *sw, int revents)childcb2047,54805
ev_version_major (void)ev_version_major2091,55921
ev_version_minor (void)ev_version_minor2097,55990
enable_secure (void)enable_secure2104,56164
ev_supported_backends (void)ev_supported_backends2115,56318
ev_recommended_backends (void)ev_recommended_backends2129,56655
ev_embeddable_backends (void)ev_embeddable_backends2151,57366
ev_backend (EV_P)ev_backend2163,57682
ev_iteration (EV_P)ev_iteration2170,57755
ev_depth (EV_P)ev_depth2176,57814
ev_set_io_collect_interval (EV_P_ ev_tstamp interval)ev_set_io_collect_interval2182,57861
ev_set_timeout_collect_interval (EV_P_ ev_tstamp interval)ev_set_timeout_collect_interval2188,57952
ev_set_userdata (EV_P_ void *data)ev_set_userdata2194,58053
ev_userdata (EV_P)ev_userdata2200,58119
ev_set_invoke_pending_cb (EV_P_ void (*invoke_pending_cb)(EV_P))ev_set_invoke_pending_cb2206,58167
ev_set_loop_release_cb (EV_P_ void (*release)(EV_P), void (*acquire)(EV_P))ev_set_loop_release_cb2212,58275
loop_init (EV_P_ unsigned int flags)loop_init2221,58501
ev_loop_destroy (EV_P)ev_loop_destroy2316,60911
loop_fork (EV_P)loop_fork2438,63235
ev_loop_new (unsigned int flags)ev_loop_new2484,64172
verify_watcher (EV_P_ W w)verify_watcher2502,64492
verify_heap (EV_P_ ANHE *heap, int N)verify_heap2511,64773
array_verify (EV_P_ W *ws, int cnt)array_verify2526,65267
ev_verify (EV_P)ev_verify2538,65497
ev_default_loop (unsigned int flags)ev_default_loop2617,67320
ev_loop_fork (EV_P)ev_loop_fork2646,67934
ev_invoke (EV_P_ void *w, int revents)ev_invoke2654,68104
ev_pending_count (EV_P)ev_pending_count2660,68193
ev_invoke_pending (EV_P)ev_invoke_pending2672,68352
idle_reify (EV_P)idle_reify2691,68772
timers_reify (EV_P)timers_reify2714,69164
periodic_recalc (EV_P_ ev_periodic *w)periodic_recalc2753,70180
periodics_reify (EV_P)periodics_reify2778,70760
periodics_reschedule (EV_P)periodics_reschedule2821,72095
timers_reschedule (EV_P_ ev_tstamp adjust)timers_reschedule2844,72599
time_update (EV_P_ ev_tstamp max_block)time_update2859,72942
ev_run (EV_P_ int flags)ev_run2928,74869
ev_break (EV_P_ int how)ev_break3097,79584
ev_ref (EV_P)ev_ref3103,79638
ev_unref (EV_P)ev_unref3109,79677
ev_now_update (EV_P)ev_now_update3115,79718
ev_suspend (EV_P)ev_suspend3121,79778
ev_resume (EV_P)ev_resume3127,79830
wlist_add (WL *head, WL elem)wlist_add3143,80223
wlist_del (WL *head, WL elem)wlist_del3150,80313
clear_pending (EV_P_ W w)clear_pending3166,80582
ev_clear_pending (EV_P_ void *w)ev_clear_pending3176,80732
pri_adjust (EV_P_ W w)pri_adjust3193,81028
ev_start (EV_P_ W w, int active)ev_start3202,81217
ev_stop (EV_P_ W w)ev_stop3210,81335
ev_io_start (EV_P_ ev_io *w)ev_io_start3219,81491
ev_io_stop (EV_P_ ev_io *w)ev_io_stop3242,82068
ev_timer_start (EV_P_ ev_timer *w)ev_timer_start3261,82473
ev_timer_stop (EV_P_ ev_timer *w)ev_timer_stop3285,83085
ev_timer_again (EV_P_ ev_timer *w)ev_timer_again3315,83629
ev_timer_remaining (EV_P_ ev_timer *w)ev_timer_remaining3342,84118
ev_periodic_start (EV_P_ ev_periodic *w)ev_periodic_start3349,84254
ev_periodic_stop (EV_P_ ev_periodic *w)ev_periodic_stop3379,85065
ev_periodic_again (EV_P_ ev_periodic *w)ev_periodic_again3407,85618
# define SA_RESTART SA_RESTART3416,85798
ev_signal_start (EV_P_ ev_signal *w)ev_signal_start3422,85864
ev_signal_stop (EV_P_ ev_signal *w)ev_signal_stop3503,87890
ev_child_start (EV_P_ ev_child *w)ev_child_start3544,88654
ev_child_stop (EV_P_ ev_child *w)ev_child_stop3561,89021
#  define lstat(lstat3581,89334
#define DEF_STAT_INTERVAL DEF_STAT_INTERVAL3584,89379
#define NFS_STAT_INTERVAL NFS_STAT_INTERVAL3585,89416
#define MIN_STAT_INTERVAL MIN_STAT_INTERVAL3586,89503
# define EV_INOTIFY_BUFSIZE EV_INOTIFY_BUFSIZE3593,89711
infy_add (EV_P_ ev_stat *w)infy_add3596,89808
infy_del (EV_P_ ev_stat *w)infy_del3661,92183
infy_wd (EV_P_ int slot, int wd, struct inotify_event *ev)infy_wd3678,92500
infy_cb (EV_P_ ev_io *w, int revents)infy_cb3709,93393
ev_check_2625 (EV_P)ev_check_26253724,93759
infy_newfd (void)infy_newfd3736,93979
infy_init (EV_P)infy_init3747,94185
infy_fork (EV_P)infy_fork3769,94526
# define EV_LSTAT(EV_LSTAT3817,95520
# define EV_LSTAT(EV_LSTAT3819,95565
ev_stat_stat (EV_P_ ev_stat *w)ev_stat_stat3823,95614
stat_timer_cb (EV_P_ ev_timer *w_, int revents)stat_timer_cb3832,95791
ev_stat_start (EV_P_ ev_stat *w)ev_stat_start3872,96966
ev_stat_stop (EV_P_ ev_stat *w)ev_stat_stop3903,97546
ev_idle_start (EV_P_ ev_idle *w)ev_idle_start3929,97919
ev_idle_stop (EV_P_ ev_idle *w)ev_idle_stop3952,98317
ev_prepare_start (EV_P_ ev_prepare *w)ev_prepare_start3976,98736
ev_prepare_stop (EV_P_ ev_prepare *w)ev_prepare_stop3991,99028
ev_check_start (EV_P_ ev_check *w)ev_check_start4014,99397
ev_check_stop (EV_P_ ev_check *w)ev_check_stop4029,99671
ev_embed_sweep (EV_P_ ev_embed *w)ev_embed_sweep4052,100037
embed_io_cb (EV_P_ ev_io *io, int revents)embed_io_cb4058,100124
embed_prepare_cb (EV_P_ ev_prepare *prepare, int revents)embed_prepare_cb4069,100358
embed_fork_cb (EV_P_ ev_fork *fork_w, int revents)embed_fork_cb4085,100646
ev_embed_start (EV_P_ ev_embed *w)ev_embed_start4110,101037
ev_embed_stop (EV_P_ ev_embed *w)ev_embed_stop4141,101731
ev_fork_start (EV_P_ ev_fork *w)ev_fork_start4161,102062
ev_fork_stop (EV_P_ ev_fork *w)ev_fork_stop4176,102327
ev_cleanup_start (EV_P_ ev_cleanup *w)ev_cleanup_start4199,102680
ev_cleanup_stop (EV_P_ ev_cleanup *w)ev_cleanup_stop4216,103057
ev_async_start (EV_P_ ev_async *w)ev_async_start4240,103443
ev_async_stop (EV_P_ ev_async *w)ev_async_stop4259,103756
ev_async_send (EV_P_ ev_async *w)ev_async_send4280,104086
struct ev_onceev_once4289,104267
  ev_io io;io4291,104284
  ev_timer to;to4292,104296
  void (*cb)(int revents, void *arg);cb4293,104311
  void *arg;arg4294,104349
once_cb (EV_P_ struct ev_once *once, int revents)once_cb4298,104378
once_cb_io (EV_P_ ev_io *w, int revents)once_cb_io4311,104630
once_cb_to (EV_P_ ev_timer *w, int revents)once_cb_to4319,104849
ev_once (EV_P_ int fd, int events, ev_tstamp timeout, void (*cb)(int revents, void *arg), void *ev_once4327,105064
ev_walk (EV_P_ int types, void (*cb)(EV_P_ int type, void *w))ev_walk4359,105810

evserver/ev.3,1408
.TH LIBEV 3 "2012-02-04" "libev-4.11" "libev - high performance full featured event loop"LIBEV127,3566
.SH "NAME"NAME132,3800
.SH "SYNOPSIS"SYNOPSIS134,3878
.SH "ABOUT THIS DOCUMENT"ABOUT THIS DOCUMENT198,5729
.SH "WHAT TO READ WHEN IN A HURRY"WHAT TO READ WHEN IN A HURRY213,6394
.SH "ABOUT LIBEV"ABOUT LIBEV220,6925
.SH "ERROR HANDLING"ERROR HANDLING271,10025
.SH "GLOBAL FUNCTIONS"GLOBAL FUNCTIONS290,11038
.SH "FUNCTIONS CONTROLLING EVENT LOOPS"FUNCTIONS CONTROLLING EVENT LOOPS444,18007
.SH "ANATOMY OF A WATCHER"ANATOMY OF A WATCHER1196,57594
.SH "WATCHER TYPES"WATCHER TYPES1655,79562
.SH "OTHER FUNCTIONS"OTHER FUNCTIONS3578,170589
.SH "COMMON OR USEFUL IDIOMS (OR BOTH)"COMMON OR USEFUL IDIOMS (OR BOTH)3625,172986
.SH "LIBEVENT EMULATION"LIBEVENT EMULATION4003,186322
.SH "\*(C+ SUPPORT"\*(C+ SUPPORT4033,187532
.SH "OTHER LANGUAGE BINDINGS"OTHER LANGUAGE BINDINGS4234,195821
.SH "MACRO MAGIC"MACRO MAGIC4281,198208
.SH "EMBEDDING"EMBEDDING4357,201468
.SH "INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT"INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT4950,230331
.SH "PORTABILITY NOTES"PORTABILITY NOTES5083,236702
.SH "ALGORITHMIC COMPLEXITIES"ALGORITHMIC COMPLEXITIES5337,250365
.SH "PORTING FROM LIBEV 3.X TO 4.X"PORTING FROM LIBEV 3.X TO 4.X5401,254298
.SH "GLOSSARY"GLOSSARY5458,257026
.SH "AUTHOR"AUTHOR5513,259158

evserver/config.h.in,0

evserver/config.guess,0

evserver/depcomp,0

evserver/ev_wrap.h,3566
#define EV_WRAP_HEV_WRAP_H3,79
#define now_floor now_floor4,97
#define mn_now mn_now5,135
#define rtmn_diff rtmn_diff6,167
#define io_blocktime io_blocktime7,205
#define timeout_blocktime timeout_blocktime8,249
#define backend backend9,303
#define activecnt activecnt10,337
#define loop_done loop_done11,375
#define backend_fd backend_fd12,413
#define backend_mintime backend_mintime13,453
#define backend_modify backend_modify14,503
#define backend_poll backend_poll15,551
#define anfds anfds16,595
#define anfdmax anfdmax17,625
#define pendings pendings18,659
#define pendingmax pendingmax19,695
#define pendingcnt pendingcnt20,735
#define pending_w pending_w21,775
#define rfeeds rfeeds22,813
#define rfeedmax rfeedmax23,845
#define rfeedcnt rfeedcnt24,881
#define evfd evfd25,917
#define evpipe evpipe26,945
#define pipe_w pipe_w27,977
#define pipe_write_wanted pipe_write_wanted28,1009
#define pipe_write_skipped pipe_write_skipped29,1063
#define curpid curpid30,1119
#define postfork postfork31,1151
#define vec_ri vec_ri32,1187
#define vec_ro vec_ro33,1219
#define vec_wi vec_wi34,1251
#define vec_wo vec_wo35,1283
#define vec_eo vec_eo36,1315
#define vec_max vec_max37,1347
#define polls polls38,1381
#define pollmax pollmax39,1411
#define pollcnt pollcnt40,1445
#define pollidxs pollidxs41,1479
#define pollidxmax pollidxmax42,1515
#define epoll_events epoll_events43,1555
#define epoll_eventmax epoll_eventmax44,1599
#define epoll_eperms epoll_eperms45,1647
#define epoll_epermcnt epoll_epermcnt46,1691
#define epoll_epermmax epoll_epermmax47,1739
#define kqueue_changes kqueue_changes48,1787
#define kqueue_changemax kqueue_changemax49,1835
#define kqueue_changecnt kqueue_changecnt50,1887
#define kqueue_events kqueue_events51,1939
#define kqueue_eventmax kqueue_eventmax52,1985
#define port_events port_events53,2035
#define port_eventmax port_eventmax54,2077
#define iocp iocp55,2123
#define fdchanges fdchanges56,2151
#define fdchangemax fdchangemax57,2189
#define fdchangecnt fdchangecnt58,2231
#define timers timers59,2273
#define timermax timermax60,2305
#define timercnt timercnt61,2341
#define periodics periodics62,2377
#define periodicmax periodicmax63,2415
#define periodiccnt periodiccnt64,2457
#define idles idles65,2499
#define idlemax idlemax66,2529
#define idlecnt idlecnt67,2563
#define idleall idleall68,2597
#define prepares prepares69,2631
#define preparemax preparemax70,2667
#define preparecnt preparecnt71,2707
#define checks checks72,2747
#define checkmax checkmax73,2779
#define checkcnt checkcnt74,2815
#define forks forks75,2851
#define forkmax forkmax76,2881
#define forkcnt forkcnt77,2915
#define cleanups cleanups78,2949
#define cleanupmax cleanupmax79,2985
#define cleanupcnt cleanupcnt80,3025
#define async_pending async_pending81,3065
#define asyncs asyncs82,3111
#define asyncmax asyncmax83,3143
#define asynccnt asynccnt84,3179
#define fs_fd fs_fd85,3215
#define fs_w fs_w86,3245
#define fs_2625 fs_262587,3273
#define fs_hash fs_hash88,3307
#define sig_pending sig_pending89,3341
#define sigfd sigfd90,3383
#define sigfd_w sigfd_w91,3413
#define sigfd_set sigfd_set92,3447
#define origflags origflags93,3485
#define loop_count loop_count94,3523
#define loop_depth loop_depth95,3563
#define userdata userdata96,3603
#define release_cb release_cb97,3639
#define acquire_cb acquire_cb98,3679
#define invoke_cb invoke_cb99,3719

evserver/missing,0

evserver/ev++.h,7945
#define EVPP_H__EVPP_H__41,2115
# define EV_USE_STDEXCEPT EV_USE_STDEXCEPT50,2216
namespace ev {ev57,2303
  typedef ev_tstamp tstamp;tstamp59,2319
  enum {__anoncc2df5ad010361,2348
    UNDEF    = EV_UNDEF,UNDEF62,2357
    NONE     = EV_NONE,NONE63,2382
    READ     = EV_READ,READ64,2406
    WRITE    = EV_WRITE,WRITE65,2430
    TIMEOUT  = EV_TIMEOUT,TIMEOUT67,2470
    TIMER    = EV_TIMER,TIMER69,2504
    PERIODIC = EV_PERIODIC,PERIODIC70,2529
    SIGNAL   = EV_SIGNAL,SIGNAL71,2557
    CHILD    = EV_CHILD,CHILD72,2583
    STAT     = EV_STAT,STAT73,2608
    IDLE     = EV_IDLE,IDLE74,2632
    CHECK    = EV_CHECK,CHECK75,2656
    PREPARE  = EV_PREPARE,PREPARE76,2681
    FORK     = EV_FORK,FORK77,2708
    ASYNC    = EV_ASYNC,ASYNC78,2732
    EMBED    = EV_EMBED,EMBED79,2757
    ERROR    = EV_ERRORERROR81,2837
  {__anoncc2df5ad020385,2874
    AUTO      = EVFLAG_AUTO,AUTO86,2878
    NOENV     = EVFLAG_NOENV,NOENV87,2907
    FORKCHECK = EVFLAG_FORKCHECK,FORKCHECK88,2937
    SELECT    = EVBACKEND_SELECT,SELECT90,2972
    POLL      = EVBACKEND_POLL,POLL91,3006
    EPOLL     = EVBACKEND_EPOLL,EPOLL92,3038
    KQUEUE    = EVBACKEND_KQUEUE,KQUEUE93,3071
    DEVPOLL   = EVBACKEND_DEVPOLL,DEVPOLL94,3105
    PORT      = EVBACKEND_PORTPORT95,3140
  {__anoncc2df5ad030399,3184
    NONBLOCK = EVLOOP_NONBLOCK,NONBLOCK101,3203
    ONESHOT  = EVLOOP_ONESHOT,ONESHOT102,3235
    NOWAIT   = EVRUN_NOWAIT,NOWAIT104,3273
    ONCE     = EVRUN_ONCEONCE105,3302
  enum how_thow_t108,3334
    ONE = EVBREAK_ONE,ONE110,3351
    ALL = EVBREAK_ALLALL111,3374
  struct bad_loopbad_loop114,3402
    bad_loop ()bad_loop120,3496
#  define EV_AX EV_AX136,3726
#  define EV_AX_ EV_AX_137,3752
#  define EV_AXEV_AX139,3785
#  define EV_AX_EV_AX_140,3801
  struct loop_refloop_ref143,3826
    loop_ref (EV_P) throw ()loop_ref145,3848
    bool operator == (const loop_ref &other) const throw ()operator ==152,3936
    bool operator != (const loop_ref &other) const throw ()operator !=161,4096
    bool operator == (const EV_P) const throw ()operator ==171,4275
    bool operator != (const EV_P) const throw ()operator !=176,4371
    bool is_default () const throw ()is_default191,4631
    void loop (int flags = 0)loop198,4747
    void unloop (how_t how = ONE) throw ()unloop203,4819
    void run (int flags = 0)run209,4911
    void break_loop (how_t how = ONE) throw ()break_loop214,4982
    void post_fork () throw ()post_fork219,5071
    unsigned int backend () const throw ()backend224,5143
    tstamp now () const throw ()now229,5232
    void ref () throw ()ref234,5307
    void unref () throw ()unref239,5367
    unsigned int iteration () const throw ()iteration245,5450
    unsigned int depth () const throw ()depth250,5543
    void set_io_collect_interval (tstamp interval) throw ()set_io_collect_interval255,5628
    void set_timeout_collect_interval (tstamp interval) throw ()set_timeout_collect_interval260,5753
    void once (int fd, int events, tstamp timeout, void (*cb)(int, void *), void *arg = 0) throwonce267,5920
    void once (int fd, int events, tstamp timeout, K *object) throw ()once274,6155
    void once (int fd, int events, tstamp timeout, K *object) throw ()once281,6365
    static void method_thunk (int revents, void *arg)method_thunk287,6571
    void once (int fd, int events, tstamp timeout, K *object) throw ()once295,6772
    static void method_noargs_thunk (int revents, void *arg)method_noargs_thunk301,6973
    void once (int fd, int events, tstamp timeout) throw ()once309,7159
    static void simpler_func_thunk (int revents, void *arg)simpler_func_thunk315,7320
    void once (int fd, int events, tstamp timeout) throw ()once323,7485
    static void simplest_func_thunk (int revents, void *arg)simplest_func_thunk329,7644
    void feed_fd_event (int fd, int revents) throw ()feed_fd_event335,7742
    void feed_signal_event (int signum) throw ()feed_signal_event340,7854
    struct ev_loop* EV_AX;EV_AX346,7980
  struct dynamic_loop : loop_refdynamic_loop352,8041
    dynamic_loop (unsigned int flags = AUTO) throw (bad_loop)dynamic_loop355,8079
    ~dynamic_loop () throw ()~dynamic_loop362,8236
  struct default_loop : loop_refdefault_loop377,8448
    default_loop (unsigned int flags = AUTO) throw (bad_loop)default_loop379,8485
  inline loop_ref get_default_loop () throw ()get_default_loop399,8870
#  define EV_PX EV_PX414,9090
#  define EV_PX_ EV_PX_415,9121
#  define EV_PXEV_PX417,9159
#  define EV_PX_EV_PX_418,9175
  struct base : ev_watcherbase422,9244
      void set (EV_P) throw ()set428,9331
    base (EV_PX) throw ()base434,9417
    void set_ (const void *data, void (*cb)(EV_P_ ev_watcher *w, int revents)) throw ()set_442,9536
    void set (void *data = 0) throw ()set450,9798
    static void function_thunk (EV_P_ ev_watcher *w, int revents)function_thunk456,9943
    void set (K *object) throw ()set464,10165
    void set (K *object) throw ()set471,10317
    static void method_thunk (EV_P_ ev_watcher *w, int revents)method_thunk477,10477
    void set (K *object) throw ()set485,10715
    static void method_noargs_thunk (EV_P_ ev_watcher *w, int revents)method_noargs_thunk491,10858
    void operator ()(int events = EV_UNDEF)operator ()497,10997
    bool is_active () const throw ()is_active504,11168
    bool is_pending () const throw ()is_pending509,11285
    void feed_event (int revents) throw ()feed_event514,11404
  inline tstamp now (EV_P) throw ()now520,11541
  inline void delay (tstamp interval) throw ()delay525,11612
  inline int version_major () throw ()version_major530,11693
  inline int version_minor () throw ()version_minor535,11773
  inline unsigned int supported_backends () throw ()supported_backends540,11853
  inline unsigned int recommended_backends () throw ()recommended_backends545,11952
  inline unsigned int embeddable_backends () throw ()embeddable_backends550,12055
  inline void set_allocator (void *(*cb)(void *ptr, long size)) throw ()set_allocator555,12156
  inline void set_syserr_cb (void (*cb)(const char *msg)) throw ()set_syserr_cb560,12265
    #define EV_CONSTRUCT(EV_CONSTRUCT566,12390
    #define EV_CONSTRUCT(EV_CONSTRUCT572,12766
  #define EV_BEGIN_WATCHER(EV_BEGIN_WATCHER580,13158
  #define EV_END_WATCHER(EV_END_WATCHER611,15773
  EV_BEGIN_WATCHER (io, io)EV_BEGIN_WATCHER614,15869
    void set (int events) throw ()set623,16099
    void start (int fd, int events) throw ()start631,16293
  EV_END_WATCHER (io, io)EV_END_WATCHER636,16390
    void start (ev_tstamp after, ev_tstamp repeat = 0.) throw ()start647,16682
    void again () throw ()again653,16803
    ev_tstamp remaining ()remaining658,16903
  EV_END_WATCHER (timer, timer)EV_END_WATCHER662,17013
    void start (ev_tstamp at, ev_tstamp interval = 0.) throw ()start674,17349
    void again () throw ()again680,17468
  EV_END_WATCHER (periodic, periodic)EV_END_WATCHER684,17573
    void start (int signum) throw ()start697,17875
  EV_END_WATCHER (sig, signal)EV_END_WATCHER702,17960
    void start (int pid, int trace = 0) throw ()start715,18269
  EV_END_WATCHER (child, child)EV_END_WATCHER720,18370
    void start (const char *path, ev_tstamp interval = 0.) throw ()start733,18698
    void update () throw ()update740,18838
  EV_END_WATCHER (stat, stat)EV_END_WATCHER744,18935
  EV_END_WATCHER (idle, idle)EV_END_WATCHER750,19057
  EV_END_WATCHER (prepare, prepare)EV_END_WATCHER756,19188
  EV_END_WATCHER (check, check)EV_END_WATCHER762,19319
    void start (struct ev_loop *embedded_loop) throw ()start775,19639
    void sweep ()sweep781,19751
  EV_END_WATCHER (embed, embed)EV_END_WATCHER785,19841
  EV_END_WATCHER (fork, fork)EV_END_WATCHER791,19965
    bool async_pending () throw ()async_pending801,20159

evserver/README,0

evserver/Makefile.am,472
AUTOMAKE_OPTIONS = foreignAUTOMAKE_OPTIONS1,0
VERSION_INFO = 4:0:0VERSION_INFO3,28
EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \EXTRA_DIST5,50
man_MANS = ev.3man_MANS10,247
man_MANS = ev.3ev.310,247
include_HEADERS = ev.h ev++.h event.hinclude_HEADERS12,264
lib_LTLIBRARIES = libev.lalibev.la14,303
libev_la_SOURCES = ev.c event.clibev_la_SOURCES16,331
libev_la_LDFLAGS = -version-info $(VERSION_INFO)libev_la_LDFLAGS17,363
ev.3: ev.podev.319,413

evserver/config.sub,0

evserver/event.c,2653
# define dLOOPev dLOOPev51,2253
# define dLOOPbase dLOOPbase52,2323
# define dLOOPevdLOOPev54,2394
# define dLOOPbasedLOOPbase55,2411
struct event_baseevent_base59,2496
  int dummy;dummy61,2516
static struct event_base *ev_x_cur;ev_x_cur64,2533
ev_tv_get (struct timeval *tv)ev_tv_get67,2587
#define EVENT_STRINGIFY(EVENT_STRINGIFY78,2760
#define EVENT_VERSION(EVENT_VERSION79,2791
const char *event_get_version (void)event_get_version81,2863
const char *event_get_method (void)event_get_method87,3015
void *event_init (void)event_init92,3074
void event_base_free (struct event_base *base)event_base_free108,3489
int event_dispatch (void)event_dispatch118,3644
void event_set_log_callback (event_log_cb cb)event_set_log_callback124,3737
int event_loop (int flags)event_loop130,3807
int event_loopexit (struct timeval *tv)event_loopexit135,3883
ev_x_cb (struct event *ev, int revents)ev_x_cb141,3985
ev_x_cb_sig (EV_P_ struct ev_signal *w, int revents)ev_x_cb_sig150,4182
ev_x_cb_io (EV_P_ struct ev_io *w, int revents)ev_x_cb_io161,4414
ev_x_cb_to (EV_P_ struct ev_timer *w, int revents)ev_x_cb_to172,4675
void event_set (struct event *ev, int fd, short events, void (*cb)(int, short, void *), void *arevent_set181,4858
int event_once (int fd, short events, void (*cb)(int, short, void *), void *arg, struct timeval event_once200,5374
int event_add (struct event *ev, struct timeval *tv)event_add205,5542
int event_del (struct event *ev)event_del247,6440
void event_active (struct event *ev, int res, short ncalls)event_active264,6763
int event_pending (struct event *ev, short events, struct timeval *tv)event_pending278,7104
int event_priority_init (int npri)event_priority_init312,7920
int event_priority_set (struct event *ev, int pri)event_priority_set317,8012
int event_base_set (struct event_base *base, struct event *ev)event_base_set324,8101
int event_base_loop (struct event_base *base, int flags)event_base_loop331,8204
int event_base_dispatch (struct event_base *base)event_base_dispatch340,8317
ev_x_loopexit_cb (int revents, void *base)ev_x_loopexit_cb346,8420
int event_base_loopexit (struct event_base *base, struct timeval *tv)event_base_loopexit353,8514
struct ev_x_onceev_x_once363,8735
  int fd;fd365,8754
  void (*cb)(int, short, void *);cb366,8764
  void *arg;arg367,8798
ev_x_once_cb (int revents, void *arg)ev_x_once_cb371,8827
int event_base_once (struct event_base *base, int fd, short events, void (*cb)(int, short, void event_base_once379,8988
int event_base_priority_init (struct event_base *base, int npri)event_base_priority_init396,9416

evserver/Symbols.event,0

evserver/ev.pod,9018
=head1 NAMENAME1,0
=head1 SYNOPSISSYNOPSIS5,79
=head2 EXAMPLE PROGRAMEXAMPLE PROGRAM9,116
=head1 ABOUT THIS DOCUMENTABOUT THIS DOCUMENT67,1724
=head1 WHAT TO READ WHEN IN A HURRYWHAT TO READ WHEN IN A HURRY83,2351
=head1 ABOUT LIBEVABOUT LIBEV91,2720
=head2 FEATURESFEATURES106,3364
=head2 CONVENTIONSCONVENTIONS124,4238
=head2 TIME REPRESENTATIONTIME REPRESENTATION134,4710
=head1 ERROR HANDLINGERROR HANDLING146,5286
=head1 GLOBAL FUNCTIONSGLOBAL FUNCTIONS167,6191
=head1 FUNCTIONS CONTROLLING EVENT LOOPSFUNCTIONS CONTROLLING EVENT LOOPS325,12110
=head1 ANATOMY OF A WATCHERANATOMY OF A WATCHER1076,45619
=head2 GENERIC WATCHER FUNCTIONSGENERIC WATCHER FUNCTIONS1226,50706
=head2 WATCHER STATESWATCHER STATES1380,56606
=head2 WATCHER PRIORITY MODELSWATCHER PRIORITY MODELS1442,59229
=head1 WATCHER TYPESWATCHER TYPES1546,63621
=head2 C<ev_io> - is this file descriptor readable or writable?C<ev_io> - is this file descriptor readable or writable?1562,64395
=head3 The special problem of disappearing file descriptorsThe special problem of disappearing file descriptors1595,66138
=head3 The special problem of dup'ed file descriptorsThe special problem of dup'ed file descriptors1616,67267
=head3 The special problem of filesThe special problem of files1627,67786
=head3 The special problem of forkThe special problem of fork1660,69552
=head3 The special problem of SIGPIPEThe special problem of SIGPIPE1670,69988
=head3 The special problem of accept()ing when you can'tThe special problem of accept()ing when you can't1681,70522
=head3 Watcher-Specific FunctionsWatcher-Specific Functions1720,72516
=head3 ExamplesExamples1742,73004
=head2 C<ev_timer> - relative and optionally repeating timeoutsC<ev_timer> - relative and optionally repeating timeouts1763,73616
=head3 Be smart about timeoutsBe smart about timeouts1782,74639
=head3 The special problem of being too earlyThe special problem of being too early1971,81671
=head3 The special problem of time updatesThe special problem of time updates2008,83505
=head3 The special problem of unsynchronised clocksThe special problem of unsynchronised clocks2028,84438
=head3 The special problems of suspended animationThe special problems of suspended animation2061,86024
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2091,87615
=head3 ExamplesExamples2155,90036
=head2 C<ev_periodic> - to cron or not to cron?C<ev_periodic> - to cron or not to cron?2188,90911
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2219,92513
=head3 ExamplesExamples2351,98145
=head2 C<ev_signal> - signal me when a signal gets signalled!C<ev_signal> - signal me when a signal gets signalled!2387,99182
=head3 The special problem of inheritance over fork/execve/pthread_createThe special problem of inheritance over fork/execve/pthread_create2415,100644
=head3 The special problem of threads signal handlingThe special problem of threads signal handling2445,102138
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2459,102871
=head3 ExamplesExamples2476,103219
=head2 C<ev_child> - watch out for process status changesC<ev_child> - watch out for process status changes2491,103532
=head3 Process InteractionProcess Interaction2509,104431
=head3 Overriding the Built-In ProcessingOverriding the Built-In Processing2518,104838
=head3 Stopping the Child WatcherStopping the Child Watcher2528,105368
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2536,105687
=head3 ExamplesExamples2568,106770
=head2 C<ev_stat> - did the file attributes just change?C<ev_stat> - did the file attributes just change?2598,107328
=head3 ABI Issues (Largefile Support)ABI Issues (Largefile Support)2634,109193
=head3 Inotify and KqueueInotify and Kqueue2651,110110
=head3 C<stat ()> is a synchronous operationC<stat ()> is a synchronous operation2672,111187
=head3 The special problem of stat time resolutionThe special problem of stat time resolution2690,111946
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2716,113296
=head3 ExamplesExamples2767,115182
=head2 C<ev_idle> - when you've got nothing better to do...C<ev_idle> - when you've got nothing better to do...2822,116706
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2843,117732
=head3 ExamplesExamples2855,118003
=head2 C<ev_prepare> and C<ev_check> - customise your event loop!C<ev_prepare> and C<ev_check> - customise your event loop!2873,118496
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members2925,121376
=head3 ExamplesExamples2940,121758
=head2 C<ev_embed> - when one backend isn't enough...C<ev_embed> - when one backend isn't enough...3071,125972
=head3 C<ev_embed> and forkC<ev_embed> and fork3120,128580
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3128,128917
=head3 ExamplesExamples3154,129772
=head2 C<ev_fork> - the audacity to resume the event loop after a forkC<ev_fork> - the audacity to resume the event loop after a fork3203,131414
=head3 The special problem of life after fork - how is it possible?The special problem of life after fork - how is it possible?3213,131955
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3247,133689
=head2 C<ev_cleanup> - even the best things endC<ev_cleanup> - even the best things end3260,133957
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3275,134663
=head2 C<ev_async> - how to wake up an event loopC<ev_async> - how to wake up an event loop3300,135175
=head3 QueueingQueueing3319,136209
=head3 Watcher-Specific Functions and Data MembersWatcher-Specific Functions and Data Members3406,138426
=head1 OTHER FUNCTIONSOTHER FUNCTIONS3457,140470
=head1 COMMON OR USEFUL IDIOMS (OR BOTH)COMMON OR USEFUL IDIOMS (OR BOTH)3511,142358
=head2 ASSOCIATING CUSTOM DATA WITH A WATCHERASSOCIATING CUSTOM DATA WITH A WATCHER3517,142602
=head2 BUILDING YOUR OWN COMPOSITE WATCHERSBUILDING YOUR OWN COMPOSITE WATCHERS3550,143566
=head2 AVOIDING FINISHING BEFORE RETURNINGAVOIDING FINISHING BEFORE RETURNING3585,144558
=head2 MODEL/NESTED EVENT LOOP INVOCATIONS AND EXIT CONDITIONSMODEL/NESTED EVENT LOOP INVOCATIONS AND EXIT CONDITIONS3625,146102
=head2 THREAD LOCKING EXAMPLETHREAD LOCKING EXAMPLE3664,147349
=head2 THREADS, COROUTINES, CONTINUATIONS, QUEUES... INSTEAD OF CALLBACKSTHREADS, COROUTINES, CONTINUATIONS, QUEUES... INSTEAD OF CALLBACKS3802,151381
=head1 LIBEVENT EMULATIONLIBEVENT EMULATION3861,153746
=head1 C++ SUPPORTC++ SUPPORT3896,154881
=head1 OTHER LANGUAGE BINDINGSOTHER LANGUAGE BINDINGS4100,161229
=head1 MACRO MAGICMACRO MAGIC4160,163108
=head1 EMBEDDINGEMBEDDING4235,165606
=head2 FILESETSFILESETS4247,166099
=head3 CORE EVENT LOOPCORE EVENT LOOP4252,166220
=head3 LIBEVENT COMPATIBILITY APILIBEVENT COMPATIBILITY API4292,167668
=head3 AUTOCONF SUPPORTAUTOCONF SUPPORT4309,167995
=head2 PREPROCESSOR SYMBOLS/MACROSPREPROCESSOR SYMBOLS/MACROS4320,168344
=head2 EXPORTED API SYMBOLSEXPORTED API SYMBOLS4791,187652
=head2 EXAMPLESEXAMPLES4816,188538
=head1 INTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENTINTERACTION WITH OTHER PROGRAMS, LIBRARIES OR THE ENVIRONMENT4845,189484
=head2 THREADS AND COROUTINESTHREADS AND COROUTINES4847,189554
=head3 THREADSTHREADS4849,189585
=head3 COROUTINESCOROUTINES4908,191996
=head2 COMPILER WARNINGSCOMPILER WARNINGS4921,192609
=head2 VALGRINDVALGRIND4950,193918
=head1 PORTABILITY NOTESPORTABILITY NOTES4983,195315
=head2 GNU/LINUX 32 BIT LIMITATIONSGNU/LINUX 32 BIT LIMITATIONS4985,195341
=head2 OS/X AND DARWIN BUGSOS/X AND DARWIN BUGS5001,196024
=head3 C<kqueue> is buggyC<kqueue> is buggy5007,196211
=head3 C<poll> is buggyC<poll> is buggy5017,196594
=head3 C<select> is buggyC<select> is buggy5027,196967
=head2 SOLARIS PROBLEMS AND WORKAROUNDSSOLARIS PROBLEMS AND WORKAROUNDS5038,197375
=head3 C<errno> reentrancyC<errno> reentrancy5040,197416
=head3 Event port backendEvent port backend5050,197825
=head2 AIX POLL BUGAIX POLL BUG5064,198434
=head2 WIN32 PLATFORM LIMITATIONS AND WORKAROUNDSWIN32 PLATFORM LIMITATIONS AND WORKAROUNDS5071,198720
=head3 General issuesGeneral issues5073,198771
=head3 The winsocket C<select> functionThe winsocket C<select> function5125,201196
=head3 Limited number of file descriptorsLimited number of file descriptors5144,202053
=head2 PORTABILITY REQUIREMENTSPORTABILITY REQUIREMENTS5169,203413
=head1 ALGORITHMIC COMPLEXITIESALGORITHMIC COMPLEXITIES5236,206269
=head1 PORTING FROM LIBEV 3.X TO 4.XPORTING FROM LIBEV 3.X TO 4.X5308,209180
=head1 GLOSSARYGLOSSARY5368,211080
=head1 AUTHORAUTHOR5440,212839

evserver/ev.h,184
#define EV_H_EV_H_41,2118
# define EV_CPP(EV_CPP44,2152
# define EV_CPP(EV_CPP46,2179
#define EV_H_EV_H_41,2118
# define EV_CPP(EV_CPP44,2152
# define EV_CPP(EV_CPP46,2179

evserver/ev_poll.c,265
pollidx_init (int *base, int count)pollidx_init43,2142
poll_modify (EV_P_ int fd, int oev, int nev)poll_modify52,2354
poll_poll (EV_P_ ev_tstamp timeout)poll_poll89,3113
poll_init (EV_P_ int flags)poll_init130,4133
poll_destroy (EV_P)poll_destroy143,4377

evserver/mkinstalldirs,0

evserver/ev_win32.c,206
volatile double SIGFPE_REQ = 0.0f;SIGFPE_REQ49,2456
ev_pipe (int filedes [2])ev_pipe53,2527
#define pipe(pipe135,4721
#define EV_HAVE_EV_TIME EV_HAVE_EV_TIME137,4764
ev_time (void)ev_time139,4800

evserver/Symbols.ev,0

evserver/ev_kqueue.c,424
kqueue_change (EV_P_ int fd, int filter, int flags, int fflags)kqueue_change47,2222
# define EV_ENABLE EV_ENABLE57,2541
# define NOTE_EOF NOTE_EOF60,2586
kqueue_modify (EV_P_ int fd, int oev, int nev)kqueue_modify64,2626
kqueue_poll (EV_P_ ev_tstamp timeout)kqueue_poll86,3193
kqueue_init (EV_P_ int flags)kqueue_init156,5294
kqueue_destroy (EV_P)kqueue_destroy179,5943
kqueue_fork (EV_P)kqueue_fork186,6042

evserver/Makefile.in,13733
VPATH = @srcdir@VPATH19,659
pkgdatadir = $(datadir)/@PACKAGE@pkgdatadir20,676
pkgincludedir = $(includedir)/@PACKAGE@pkgincludedir21,710
pkglibdir = $(libdir)/@PACKAGE@pkglibdir22,750
pkglibexecdir = $(libexecdir)/@PACKAGE@pkglibexecdir23,782
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cdam__cd24,822
install_sh_DATA = $(install_sh) -c -m 644install_sh_DATA25,881
install_sh_PROGRAM = $(install_sh) -cinstall_sh_PROGRAM26,923
install_sh_SCRIPT = $(install_sh) -cinstall_sh_SCRIPT27,961
INSTALL_HEADER = $(INSTALL_DATA)INSTALL_HEADER28,998
transform = $(program_transform_name)transform29,1031
NORMAL_INSTALL = :NORMAL_INSTALL30,1069
PRE_INSTALL = :PRE_INSTALL31,1088
POST_INSTALL = :POST_INSTALL32,1104
NORMAL_UNINSTALL = :NORMAL_UNINSTALL33,1121
PRE_UNINSTALL = :PRE_UNINSTALL34,1142
POST_UNINSTALL = :POST_UNINSTALL35,1160
build_triplet = @build@build_triplet36,1179
host_triplet = @host@host_triplet37,1203
subdir = .subdir38,1225
DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \DIST_COMMON39,1236
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4ACLOCAL_M443,1472
am__aclocal_m4_deps = $(top_srcdir)/libev.m4 \am__aclocal_m4_deps44,1510
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \am__configure_deps46,1585
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \am__CONFIG_DISTCLEAN_FILES48,1672
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirsmkinstalldirs50,1780
CONFIG_HEADER = config.hCONFIG_HEADER51,1833
CONFIG_CLEAN_FILES =CONFIG_CLEAN_FILES52,1858
CONFIG_CLEAN_VPATH_FILES =CONFIG_CLEAN_VPATH_FILES53,1879
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;am__vpath_adj_setup54,1906
am__vpath_adj = case $$p in \am__vpath_adj55,1976
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;am__strip_dir59,2095
am__install_max = 40am__install_max60,2145
am__nobase_strip_setup = \am__nobase_strip_setup61,2166
am__nobase_strip = \am__nobase_strip63,2257
am__nobase_list = $(am__nobase_strip_setup); \am__nobase_list65,2347
am__base_list = \am__base_list72,2752
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(man3dir)" \am__installdirs75,2863
LTLIBRARIES = $(lib_LTLIBRARIES)LTLIBRARIES77,2955
libev_la_LIBADD =libev_la_LIBADD78,2988
am_libev_la_OBJECTS = ev.lo event.loam_libev_la_OBJECTS79,3006
libev_la_OBJECTS = $(am_libev_la_OBJECTS)libev_la_OBJECTS80,3043
libev_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \libev_la_LINK81,3085
DEFAULT_INCLUDES = -I.@am__isrc@DEFAULT_INCLUDES84,3242
depcomp = $(SHELL) $(top_srcdir)/depcompdepcomp85,3275
am__depfiles_maybe = depfilesam__depfiles_maybe86,3316
am__mv = mv -fam__mv87,3346
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \COMPILE88,3361
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \LTCOMPILE90,3470
CCLD = $(CC)CCLD93,3654
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \LINK94,3667
SOURCES = $(libev_la_SOURCES)SOURCES97,3809
DIST_SOURCES = $(libev_la_SOURCES)DIST_SOURCES98,3839
man3dir = $(mandir)/man3man3dir99,3874
NROFF = nroffNROFF100,3899
MANS = $(man_MANS)MANS101,3913
HEADERS = $(include_HEADERS)HEADERS102,3932
ETAGS = etagsETAGS103,3961
CTAGS = ctagsCTAGS104,3975
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)DISTFILES105,3989
distdir = $(PACKAGE)-$(VERSION)distdir106,4058
top_distdir = $(distdir)top_distdir107,4090
am__remove_distdir = \am__remove_distdir108,4115
DIST_ARCHIVES = $(distdir).tar.gzDIST_ARCHIVES112,4278
GZIP_ENV = --bestGZIP_ENV113,4312
distuninstallcheck_listfiles = find . -type f -printdistuninstallcheck_listfiles114,4330
distcleancheck_listfiles = find . -type f -printdistcleancheck_listfiles115,4383
ACLOCAL = @ACLOCAL@ACLOCAL116,4432
AMTAR = @AMTAR@AMTAR117,4452
AR = @AR@AR118,4468
AUTOCONF = @AUTOCONF@AUTOCONF119,4478
AUTOHEADER = @AUTOHEADER@AUTOHEADER120,4500
AUTOMAKE = @AUTOMAKE@AUTOMAKE121,4526
AWK = @AWK@AWK122,4548
CC = @CC@CC123,4560
CCDEPMODE = @CCDEPMODE@CCDEPMODE124,4570
CFLAGS = @CFLAGS@CFLAGS125,4594
CPP = @CPP@CPP126,4612
CPPFLAGS = @CPPFLAGS@CPPFLAGS127,4624
CYGPATH_W = @CYGPATH_W@CYGPATH_W128,4646
DEFS = @DEFS@DEFS129,4670
DEPDIR = @DEPDIR@DEPDIR130,4684
DSYMUTIL = @DSYMUTIL@DSYMUTIL131,4702
DUMPBIN = @DUMPBIN@DUMPBIN132,4724
ECHO_C = @ECHO_C@ECHO_C133,4744
ECHO_N = @ECHO_N@ECHO_N134,4762
ECHO_T = @ECHO_T@ECHO_T135,4780
EGREP = @EGREP@EGREP136,4798
EXEEXT = @EXEEXT@EXEEXT137,4814
FGREP = @FGREP@FGREP138,4832
GREP = @GREP@GREP139,4848
INSTALL = @INSTALL@INSTALL140,4862
INSTALL_DATA = @INSTALL_DATA@INSTALL_DATA141,4882
INSTALL_PROGRAM = @INSTALL_PROGRAM@INSTALL_PROGRAM142,4912
INSTALL_SCRIPT = @INSTALL_SCRIPT@INSTALL_SCRIPT143,4948
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@INSTALL_STRIP_PROGRAM144,4982
LD = @LD@LD145,5030
LDFLAGS = @LDFLAGS@LDFLAGS146,5040
LIBOBJS = @LIBOBJS@LIBOBJS147,5060
LIBS = @LIBS@LIBS148,5080
LIBTOOL = @LIBTOOL@LIBTOOL149,5094
LIPO = @LIPO@LIPO150,5114
LN_S = @LN_S@LN_S151,5128
LTLIBOBJS = @LTLIBOBJS@LTLIBOBJS152,5142
MAINT = @MAINT@MAINT153,5166
MAKEINFO = @MAKEINFO@MAKEINFO154,5182
MKDIR_P = @MKDIR_P@MKDIR_P155,5204
NM = @NM@NM156,5224
NMEDIT = @NMEDIT@NMEDIT157,5234
OBJDUMP = @OBJDUMP@OBJDUMP158,5252
OBJEXT = @OBJEXT@OBJEXT159,5272
OTOOL = @OTOOL@OTOOL160,5290
OTOOL64 = @OTOOL64@OTOOL64161,5306
PACKAGE = @PACKAGE@PACKAGE162,5326
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@PACKAGE_BUGREPORT163,5346
PACKAGE_NAME = @PACKAGE_NAME@PACKAGE_NAME164,5386
PACKAGE_STRING = @PACKAGE_STRING@PACKAGE_STRING165,5416
PACKAGE_TARNAME = @PACKAGE_TARNAME@PACKAGE_TARNAME166,5450
PACKAGE_URL = @PACKAGE_URL@PACKAGE_URL167,5486
PACKAGE_VERSION = @PACKAGE_VERSION@PACKAGE_VERSION168,5514
PATH_SEPARATOR = @PATH_SEPARATOR@PATH_SEPARATOR169,5550
RANLIB = @RANLIB@RANLIB170,5584
SED = @SED@SED171,5602
SET_MAKE = @SET_MAKE@SET_MAKE172,5614
SHELL = @SHELL@SHELL173,5636
STRIP = @STRIP@STRIP174,5652
VERSION = @VERSION@VERSION175,5668
abs_builddir = @abs_builddir@abs_builddir176,5688
abs_srcdir = @abs_srcdir@abs_srcdir177,5718
abs_top_builddir = @abs_top_builddir@abs_top_builddir178,5744
abs_top_srcdir = @abs_top_srcdir@abs_top_srcdir179,5782
ac_ct_CC = @ac_ct_CC@ac_ct_CC180,5816
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@ac_ct_DUMPBIN181,5838
am__include = @am__include@am__include182,5870
am__leading_dot = @am__leading_dot@am__leading_dot183,5898
am__quote = @am__quote@am__quote184,5934
am__tar = @am__tar@am__tar185,5958
am__untar = @am__untar@am__untar186,5978
bindir = @bindir@bindir187,6002
build = @build@build188,6020
build_alias = @build_alias@build_alias189,6036
build_cpu = @build_cpu@build_cpu190,6064
build_os = @build_os@build_os191,6088
build_vendor = @build_vendor@build_vendor192,6110
builddir = @builddir@builddir193,6140
datadir = @datadir@datadir194,6162
datarootdir = @datarootdir@datarootdir195,6182
docdir = @docdir@docdir196,6210
dvidir = @dvidir@dvidir197,6228
exec_prefix = @exec_prefix@exec_prefix198,6246
host = @host@host199,6274
host_alias = @host_alias@host_alias200,6288
host_cpu = @host_cpu@host_cpu201,6314
host_os = @host_os@host_os202,6336
host_vendor = @host_vendor@host_vendor203,6356
htmldir = @htmldir@htmldir204,6384
includedir = @includedir@includedir205,6404
infodir = @infodir@infodir206,6430
install_sh = @install_sh@install_sh207,6450
libdir = @libdir@libdir208,6476
libexecdir = @libexecdir@libexecdir209,6494
localedir = @localedir@localedir210,6520
localstatedir = @localstatedir@localstatedir211,6544
lt_ECHO = @lt_ECHO@lt_ECHO212,6576
mandir = @mandir@mandir213,6596
mkdir_p = @mkdir_p@mkdir_p214,6614
oldincludedir = @oldincludedir@oldincludedir215,6634
pdfdir = @pdfdir@pdfdir216,6666
prefix = @prefix@prefix217,6684
program_transform_name = @program_transform_name@program_transform_name218,6702
psdir = @psdir@psdir219,6752
sbindir = @sbindir@sbindir220,6768
sharedstatedir = @sharedstatedir@sharedstatedir221,6788
srcdir = @srcdir@srcdir222,6822
sysconfdir = @sysconfdir@sysconfdir223,6840
target_alias = @target_alias@target_alias224,6866
top_build_prefix = @top_build_prefix@top_build_prefix225,6896
top_builddir = @top_builddir@top_builddir226,6934
top_srcdir = @top_srcdir@top_srcdir227,6964
AUTOMAKE_OPTIONS = foreignAUTOMAKE_OPTIONS228,6990
VERSION_INFO = 4:0:0VERSION_INFO229,7017
EXTRA_DIST = LICENSE Changes libev.m4 autogen.sh \EXTRA_DIST230,7038
man_MANS = ev.3man_MANS235,7235
include_HEADERS = ev.h ev++.h event.hinclude_HEADERS236,7251
libev_la_SOURCES = ev.c event.clibev_la_SOURCES238,7316
libev_la_LDFLAGS = -version-info $(VERSION_INFO)libev_la_LDFLAGS239,7348
all: config.hall240,7397
am--refresh:am--refresh245,7481
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)$(srcdir)/Makefile.in247,7498
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.statusMakefile261,7974
$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)$(top_builddir)/config.status271,8335
$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)$(top_srcdir)/configure274,8457
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)$(ACLOCAL_M4)276,8563
$(am__aclocal_m4_deps):$(am__aclocal_m4_deps)278,8678
config.h: stamp-h1config.h280,8703
stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.statusstamp-h1286,8821
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) $(srcdir)/config.h.in289,8957
distclean-hdr:distclean-hdr294,9097
install-libLTLIBRARIES: $(lib_LTLIBRARIES)install-libLTLIBRARIES296,9138
uninstall-libLTLIBRARIES:uninstall-libLTLIBRARIES310,9728
clean-libLTLIBRARIES:clean-libLTLIBRARIES319,10099
libev.la: $(libev_la_OBJECTS) $(libev_la_DEPENDENCIES) libev.la327,10400
mostlyclean-compile:mostlyclean-compile330,10539
distclean-compile:distclean-compile333,10581
.c.o:.c.o339,10755
.c.obj:.c.obj346,11123
.c.lo:.c.lo353,11527
mostlyclean-libtool:mostlyclean-libtool360,11908
clean-libtool:clean-libtool363,11943
distclean-libtool:distclean-libtool366,11980
install-man3: $(man_MANS)install-man3368,12025
uninstall-man3:uninstall-man3395,13095
install-includeHEADERS: $(include_HEADERS)install-includeHEADERS406,13570
uninstall-includeHEADERS:uninstall-includeHEADERS419,14059
ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)ID427,14383
tags: TAGStags435,14730
TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \TAGS437,14742
ctags: CTAGSctags458,15476
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \CTAGS459,15489
GTAGS:GTAGS471,15982
distclean-tags:distclean-tags476,16103
distdir: $(DISTFILES)distdir479,16166
dist-gzip: distdirdist-gzip531,18498
dist-bzip2: distdirdist-bzip2535,18620
dist-lzma: distdirdist-lzma539,18731
dist-xz: distdirdist-xz543,18841
dist-tarZ: distdirdist-tarZ547,18942
dist-shar: distdirdist-shar551,19050
dist-zip: distdirdist-zip555,19157
dist dist-all: distdirdist560,19257
dist dist-all: distdirdist-all560,19257
distcheck: distdistcheck567,19542
distuninstallcheck:distuninstallcheck621,21653
distcleancheck: distcleandistcleancheck630,22001
check-am: all-amcheck-am639,22336
check: check-amcheck640,22353
all-am: Makefile $(LTLIBRARIES) $(MANS) $(HEADERS) config.hall-am641,22369
installdirs:installdirs642,22429
install: install-aminstall646,22581
install-exec: install-exec-aminstall-exec647,22601
install-data: install-data-aminstall-data648,22631
uninstall: uninstall-amuninstall649,22661
install-am: all-aminstall-am651,22686
installcheck: installcheck-aminstallcheck654,22764
install-strip:install-strip655,22794
mostlyclean-generic:mostlyclean-generic660,23042
clean-generic:clean-generic662,23064
distclean-generic:distclean-generic664,23080
maintainer-clean-generic:maintainer-clean-generic668,23266
clean: clean-amclean671,23418
clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \clean-am673,23435
distclean: distclean-amdistclean676,23513
distclean-am: clean-am distclean-compile distclean-generic \distclean-am680,23613
dvi: dvi-amdvi683,23723
dvi-am:dvi-am685,23736
html: html-amhtml687,23745
html-am:html-am689,23760
info: info-aminfo691,23770
info-am:info-am693,23785
install-data-am: install-includeHEADERS install-maninstall-data-am695,23795
install-dvi: install-dvi-aminstall-dvi697,23848
install-dvi-am:install-dvi-am699,23877
install-exec-am: install-libLTLIBRARIESinstall-exec-am701,23894
install-html: install-html-aminstall-html703,23935
install-html-am:install-html-am705,23966
install-info: install-info-aminstall-info707,23984
install-info-am:install-info-am709,24015
install-man: install-man3install-man711,24033
install-pdf: install-pdf-aminstall-pdf713,24060
install-pdf-am:install-pdf-am715,24089
install-ps: install-ps-aminstall-ps717,24106
install-ps-am:install-ps-am719,24133
installcheck-am:installcheck-am721,24149
maintainer-clean: maintainer-clean-ammaintainer-clean723,24167
maintainer-clean-am: distclean-am maintainer-clean-genericmaintainer-clean-am728,24319
mostlyclean: mostlyclean-ammostlyclean730,24379
mostlyclean-am: mostlyclean-compile mostlyclean-generic \mostlyclean-am732,24408
pdf: pdf-ampdf735,24488
pdf-am:pdf-am737,24501
ps: ps-amps739,24510
ps-am:ps-am741,24521
uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES \uninstall-am743,24529
uninstall-man: uninstall-man3uninstall-man746,24611
ev.3: ev.podev.3769,25693

evserver/ev_epoll.c,302
#define EV_EMASK_EPERM EV_EMASK_EPERM68,3408
epoll_modify (EV_P_ int fd, int oev, int nev)epoll_modify71,3449
epoll_poll (EV_P_ ev_tstamp timeout)epoll_poll142,5578
epoll_init (EV_P_ int flags)epoll_init236,8837
epoll_destroy (EV_P)epoll_destroy261,9468
epoll_fork (EV_P)epoll_fork268,9572

evserver/aclocal.m4,6132
m4_define([_LT_COPYING], [dnl_LT_COPYING32,1479
AC_DEFUN([LT_INIT],LT_INIT88,3459
m4_define([_LT_CONFIG_LIBTOOL_INIT],_LT_CONFIG_LIBTOOL_INIT297,9406
m4_define([_LT_OUTPUT_LIBTOOL_INIT])_LT_OUTPUT_LIBTOOL_INIT304,9554
m4_define([_LT_CONFIG_LIBTOOL],_LT_CONFIG_LIBTOOL310,9721
m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])_LT_OUTPUT_LIBTOOL_COMMANDS317,9868
m4_define([_LT_FORMAT_COMMENT],_LT_FORMAT_COMMENT332,10319
m4_define([_LT_DECL],_LT_DECL348,10879
m4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])_LT_TAGDECL362,11403
m4_define([lt_decl_tag_varnames],lt_decl_tag_varnames367,11575
m4_define([_lt_decl_filter],_lt_decl_filter373,11772
m4_define([lt_decl_quote_varnames],lt_decl_quote_varnames385,12224
m4_define([lt_decl_dquote_varnames],lt_decl_dquote_varnames391,12407
m4_define([lt_decl_varnames_tagged],lt_decl_varnames_tagged397,12591
m4_define([_lt_decl_varnames_tagged],_lt_decl_varnames_tagged402,12811
m4_define([lt_decl_all_varnames],lt_decl_all_varnames408,13006
m4_define([_lt_decl_all_varnames],_lt_decl_all_varnames414,13168
m4_define([_LT_CONFIG_STATUS_DECLARE],_LT_CONFIG_STATUS_DECLARE425,13586
m4_define([_LT_LIBTOOL_DECLARE],_LT_LIBTOOL_DECLARE458,14769
m4_define([_LT_LIBTOOL_TAG_VARS],_LT_LIBTOOL_TAG_VARS486,15844
m4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])_LT_TAGVAR493,16053
m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],_LT_OUTPUT_LIBTOOL_COMMANDS_INIT520,17258
AC_DEFUN([LT_OUTPUT],LT_OUTPUT577,18914
AC_DEFUN([LT_SUPPORTED_TAG], [])LT_SUPPORTED_TAG772,24401
m4_define([_LT_LANG_C_enabled], [])_LT_LANG_C_enabled776,24468
m4_define([_LT_TAGS], [])_LT_TAGS777,24504
AC_DEFUN([LT_LANG],LT_LANG783,24636
m4_define([_LT_SHELL_INIT],_LT_SHELL_INIT1058,35112
AC_DEFUN([_LT_COMPILER_OPTION],_LT_COMPILER_OPTION1417,45461
AC_DEFUN([_LT_LINKER_OPTION],_LT_LINKER_OPTION1468,47463
AC_DEFUN([LT_CMD_MAX_LEN],LT_CMD_MAX_LEN1510,48627
AC_DEFUN([LT_SYS_DLOPEN_SELF],LT_SYS_DLOPEN_SELF1739,55591
AC_DEFUN([_LT_PATH_TOOL_PREFIX],_LT_PATH_TOOL_PREFIX2756,91164
AC_DEFUN([LT_PATH_LD],LT_PATH_LD2841,93755
AC_DEFUN([LT_PATH_NM],LT_PATH_NM3194,104122
AC_DEFUN([LT_LIB_M],LT_LIB_M3282,106928
AC_DEFUN([LT_PROG_GCJ],LT_PROG_GCJ6994,250465
AC_DEFUN([LT_PROG_RC],LT_PROG_RC7010,250859
AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])LTOPTIONS_VERSION7396,261308
m4_define([_LT_MANGLE_OPTION],_LT_MANGLE_OPTION7401,261444
m4_define([_LT_SET_OPTION],_LT_SET_OPTION7410,261772
m4_define([_LT_IF_OPTION],_LT_IF_OPTION7421,262159
m4_define([_LT_UNLESS_OPTIONS],_LT_UNLESS_OPTIONS7429,262440
m4_define([_LT_MANGLE_DEFUN],_LT_MANGLE_DEFUN7474,264111
m4_define([LT_OPTION_DEFINE],LT_OPTION_DEFINE7480,264319
m4_define([_LT_ENABLE_SHARED],_LT_ENABLE_SHARED7542,265993
AC_DEFUN([AC_ENABLE_SHARED],AC_ENABLE_SHARED7574,267001
AC_DEFUN([AC_DISABLE_SHARED],AC_DISABLE_SHARED7578,267100
m4_define([_LT_ENABLE_STATIC],_LT_ENABLE_STATIC7596,267642
AC_DEFUN([AC_ENABLE_STATIC],AC_ENABLE_STATIC7628,268645
AC_DEFUN([AC_DISABLE_STATIC],AC_DISABLE_STATIC7632,268744
m4_define([_LT_ENABLE_FAST_INSTALL],_LT_ENABLE_FAST_INSTALL7650,269316
m4_define([_LT_WITH_PIC],_LT_WITH_PIC7706,271291
m4_define([_LTDL_MODE], [])_LTDL_MODE7733,272076
m4_define([_LTDL_TYPE], [])_LTDL_TYPE7741,272371
AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])LTSUGAR_VERSION7759,273051
m4_define([lt_join],lt_join7768,273358
m4_define([_lt_join],_lt_join7772,273500
m4_define([lt_car], [[$1]])lt_car7783,273799
m4_define([lt_cdr],lt_cdr7784,273827
m4_define([lt_unquote], $1)lt_unquote7788,273973
m4_define([lt_append],lt_append7801,274564
m4_define([lt_combine],lt_combine7813,275020
m4_define([lt_if_append_uniq],lt_if_append_uniq7826,275633
m4_define([lt_dict_add],lt_dict_add7836,275890
m4_define([lt_dict_add_subkey],lt_dict_add_subkey7842,276040
m4_define([lt_dict_fetch],lt_dict_fetch7848,276180
m4_define([lt_if_dict_fetch],lt_if_dict_fetch7856,276456
m4_define([lt_dict_filter],lt_dict_filter7864,276683
m4_define([LT_PACKAGE_VERSION], [2.2.6b])LT_PACKAGE_VERSION7885,277389
m4_define([LT_PACKAGE_REVISION], [1.3017])LT_PACKAGE_REVISION7886,277431
AC_DEFUN([LTVERSION_VERSION],LTVERSION_VERSION7888,277475
AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])LTOBSOLETE_VERSION7930,279368
AC_DEFUN([AM_AUTOMAKE_VERSION],AM_AUTOMAKE_VERSION7999,283884
m4_define([_AM_AUTOCONF_VERSION], [])_AM_AUTOCONF_VERSION8012,284418
AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],AM_SET_CURRENT_AUTOMAKE_VERSION8018,284651
AC_DEFUN([AM_AUX_DIR_EXPAND],AM_AUX_DIR_EXPAND8070,287138
AC_DEFUN([AM_CONDITIONAL],AM_CONDITIONAL8091,287799
AC_DEFUN([_AM_DEPENDENCIES],_AM_DEPENDENCIES8139,289501
AC_DEFUN([AM_SET_DEPDIR],AM_SET_DEPDIR8274,294791
AC_DEFUN([AM_DEP_TRACK],AM_DEP_TRACK8282,294939
AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],_AM_OUTPUT_DEPENDENCY_COMMANDS8308,295831
AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],AM_OUTPUT_DEPENDENCY_COMMANDS8369,298356
AC_DEFUN([AM_INIT_AUTOMAKE],AM_INIT_AUTOMAKE8400,299683
m4_define([_AC_COMPILER_EXEEXT],_AC_COMPILER_EXEEXT8489,303111
AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],_AC_AM_CONFIG_HEADER_HOOK8500,303584
AC_DEFUN([AM_PROG_INSTALL_SH],AM_PROG_INSTALL_SH8523,304284
AC_DEFUN([AM_SET_LEADING_DOT],AM_SET_LEADING_DOT8545,304947
AC_DEFUN([AM_MAINTAINER_MODE],AM_MAINTAINER_MODE8574,305877
AC_DEFUN([AM_MAKE_INCLUDE],AM_MAKE_INCLUDE8609,307342
AC_DEFUN([AM_MISSING_PROG],AM_MISSING_PROG8661,308719
AC_DEFUN([AM_MISSING_HAS_RUN],AM_MISSING_HAS_RUN8671,309008
AC_DEFUN([AM_PROG_MKDIR_P],AM_PROG_MKDIR_P8700,309806
AC_DEFUN([_AM_MANGLE_OPTION],_AM_MANGLE_OPTION8729,310860
AC_DEFUN([_AM_SET_OPTION],_AM_SET_OPTION8735,311081
AC_DEFUN([_AM_SET_OPTIONS],_AM_SET_OPTIONS8741,311271
AC_DEFUN([_AM_IF_OPTION],_AM_IF_OPTION8747,311515
AC_DEFUN([AM_SANITY_CHECK],AM_SANITY_CHECK8763,311998
AC_DEFUN([AM_PROG_INSTALL_STRIP],AM_PROG_INSTALL_STRIP8830,314394
AC_DEFUN([_AM_SUBST_NOTMAKE])_AM_SUBST_NOTMAKE8855,315407
AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])AM_SUBST_NOTMAKE8860,315535
AC_DEFUN([_AM_PROG_TAR],_AM_PROG_TAR8885,316373

evserver/autogen.sh,0

postgres/3rd_party_licenses.txt,0

postgres/pg_config_ext.h,43
#define PG_INT64_TYPE PG_INT64_TYPE7,210

postgres/postgres_ext.h,1258
#define POSTGRES_EXT_HPOSTGRES_EXT_H24,913
typedef unsigned int Oid;Oid31,1020
#define InvalidOid	InvalidOid34,1066
#define InvalidOid	InvalidOid36,1101
#define OID_MAX OID_MAX39,1139
typedef PG_INT64_TYPE pg_int64;pg_int6443,1311
#define PG_DIAG_SEVERITY	PG_DIAG_SEVERITY51,1501
#define PG_DIAG_SQLSTATE	PG_DIAG_SQLSTATE52,1531
#define PG_DIAG_MESSAGE_PRIMARY PG_DIAG_MESSAGE_PRIMARY53,1561
#define PG_DIAG_MESSAGE_DETAIL	PG_DIAG_MESSAGE_DETAIL54,1597
#define PG_DIAG_MESSAGE_HINT	PG_DIAG_MESSAGE_HINT55,1632
#define PG_DIAG_STATEMENT_POSITION PG_DIAG_STATEMENT_POSITION56,1665
#define PG_DIAG_INTERNAL_POSITION PG_DIAG_INTERNAL_POSITION57,1704
#define PG_DIAG_INTERNAL_QUERY	PG_DIAG_INTERNAL_QUERY58,1742
#define PG_DIAG_CONTEXT	PG_DIAG_CONTEXT59,1777
#define PG_DIAG_SCHEMA_NAME	PG_DIAG_SCHEMA_NAME60,1807
#define PG_DIAG_TABLE_NAME	PG_DIAG_TABLE_NAME61,1840
#define PG_DIAG_COLUMN_NAME	PG_DIAG_COLUMN_NAME62,1872
#define PG_DIAG_DATATYPE_NAME	PG_DIAG_DATATYPE_NAME63,1905
#define PG_DIAG_CONSTRAINT_NAME PG_DIAG_CONSTRAINT_NAME64,1939
#define PG_DIAG_SOURCE_FILE	PG_DIAG_SOURCE_FILE65,1975
#define PG_DIAG_SOURCE_LINE	PG_DIAG_SOURCE_LINE66,2008
#define PG_DIAG_SOURCE_FUNCTION PG_DIAG_SOURCE_FUNCTION67,2041

postgres/pg_config_os.h,397
#define __win32_h_included__win32_h_included5,66
#define _timeb _timeb11,153
#define _ftime(_ftime12,174
#define _errno _errno13,201
#define popen(popen14,222
#define close(close17,289
#define read(read18,316
#define write(write19,349
#define EINTR EINTR24,454
#define EWOULDBLOCK EWOULDBLOCK26,497
#define ECONNRESET ECONNRESET29,558
#define EINPROGRESS EINPROGRESS32,618

postgres/license.txt,0

postgres/libpq-fe.h,6667
#define LIBPQ_FE_HLIBPQ_FE_H16,504
#define PG_COPYRES_ATTRS	PG_COPYRES_ATTRS34,741
#define PG_COPYRES_TUPLES	PG_COPYRES_TUPLES35,774
#define PG_COPYRES_EVENTS	PG_COPYRES_EVENTS36,839
#define PG_COPYRES_NOTICEHOOKS	PG_COPYRES_NOTICEHOOKS37,873
{__anond2076811010348,1162
	CONNECTION_OK,CONNECTION_OK49,1164
	CONNECTION_BAD,CONNECTION_BAD50,1180
	CONNECTION_STARTED,			/* Waiting for connection to be made.  */CONNECTION_STARTED57,1373
	CONNECTION_MADE,			/* Connection OK; waiting to send.	   */CONNECTION_MADE58,1438
	CONNECTION_AWAITING_RESPONSE,		/* Waiting for a response from theCONNECTION_AWAITING_RESPONSE59,1499
	CONNECTION_AUTH_OK,			/* Received authentication; waiting forCONNECTION_AUTH_OK61,1597
	CONNECTION_SETENV,			/* Negotiating environment. */CONNECTION_SETENV63,1691
	CONNECTION_SSL_STARTUP,		/* Negotiating SSL. */CONNECTION_SSL_STARTUP64,1744
	CONNECTION_NEEDED			/* Internal state: connect() needed */CONNECTION_NEEDED65,1793
} ConnStatusType;ConnStatusType66,1853
{__anond2076811020369,1885
	PGRES_POLLING_FAILED = 0,PGRES_POLLING_FAILED70,1887
	PGRES_POLLING_READING,		/* These two indicate that one may	  */PGRES_POLLING_READING71,1914
	PGRES_POLLING_WRITING,		/* use select before polling again.   */PGRES_POLLING_WRITING72,1979
	PGRES_POLLING_OK,PGRES_POLLING_OK73,2045
	PGRES_POLLING_ACTIVE		/* unused; keep for awhile for backwardsPGRES_POLLING_ACTIVE74,2064
} PostgresPollingStatusType;PostgresPollingStatusType76,2156
{__anond2076811030379,2199
	PGRES_EMPTY_QUERY = 0,		/* empty query string was executed */PGRES_EMPTY_QUERY80,2201
	PGRES_COMMAND_OK,			/* a query command that doesn't returnPGRES_COMMAND_OK81,2264
	PGRES_TUPLES_OK,			/* a query command that returns tuples wasPGRES_TUPLES_OK84,2395
	PGRES_COPY_OUT,				/* Copy Out data transfer in progress */PGRES_COPY_OUT87,2553
	PGRES_COPY_IN,				/* Copy In data transfer in progress */PGRES_COPY_IN88,2614
	PGRES_BAD_RESPONSE,			/* an unexpected response was recv'd from thePGRES_BAD_RESPONSE89,2673
	PGRES_NONFATAL_ERROR,		/* notice or warning message */PGRES_NONFATAL_ERROR91,2764
	PGRES_FATAL_ERROR,			/* query failed */PGRES_FATAL_ERROR92,2820
	PGRES_COPY_BOTH,			/* Copy In/Out data transfer in progress */PGRES_COPY_BOTH93,2861
	PGRES_SINGLE_TUPLE			/* single tuple from larger resultset */PGRES_SINGLE_TUPLE94,2925
} ExecStatusType;ExecStatusType95,2988
{__anond2076811040398,3020
	PQTRANS_IDLE,				/* connection idle */PQTRANS_IDLE99,3022
	PQTRANS_ACTIVE,				/* command in progress */PQTRANS_ACTIVE100,3062
	PQTRANS_INTRANS,			/* idle, within transaction block */PQTRANS_INTRANS101,3108
	PQTRANS_INERROR,			/* idle, within failed transaction */PQTRANS_INERROR102,3165
	PQTRANS_UNKNOWN				/* cannot determine status */PQTRANS_UNKNOWN103,3223
} PGTransactionStatusType;PGTransactionStatusType104,3273
{__anond20768110503107,3314
	PQERRORS_TERSE,				/* single-line error messages */PQERRORS_TERSE108,3316
	PQERRORS_DEFAULT,			/* recommended style */PQERRORS_DEFAULT109,3369
	PQERRORS_VERBOSE			/* all the facts, ma'am */PQERRORS_VERBOSE110,3414
} PGVerbosity;PGVerbosity111,3461
{__anond20768110603119,3619
	PQPING_OK,					/* server is accepting connections */PQPING_OK120,3621
	PQPING_REJECT,				/* server is alive but rejecting connections */PQPING_REJECT121,3675
	PQPING_NO_RESPONSE,			/* could not establish connection */PQPING_NO_RESPONSE122,3742
	PQPING_NO_ATTEMPT			/* connection not attempted (bad params) */PQPING_NO_ATTEMPT123,3802
} PGPing;PGPing124,3867
typedef struct pg_conn PGconn;PGconn129,4011
typedef struct pg_result PGresult;PGresult136,4335
typedef struct pg_cancel PGcancel;PGcancel142,4556
typedef struct pgNotifypgNotify150,4895
	char	   *relname;		/* notification condition name */relname152,4921
	int			be_pid;			/* process ID of notifying server process */be_pid153,4975
	char	   *extra;			/* notification parameter */extra154,5037
	struct pgNotify *next;		/* list link */next156,5156
} PGnotify;PGnotify157,5197
typedef void (*PQnoticeReceiver) (void *arg, const PGresult *res);PQnoticeReceiver160,5261
typedef void (*PQnoticeProcessor) (void *arg, const char *message);PQnoticeProcessor161,5328
typedef char pqbool;pqbool164,5431
typedef struct _PQprintOpt_PQprintOpt166,5453
	pqbool		header;			/* print output field headings and row count */header168,5482
	pqbool		align;			/* fill align the fields */align169,5549
	pqbool		standard;		/* old brain dead format */standard170,5595
	pqbool		html3;			/* output html tables */html3171,5643
	pqbool		expanded;		/* expand tables */expanded172,5686
	pqbool		pager;			/* use pager for output if needed */pager173,5726
	char	   *fieldSep;		/* field separator */fieldSep174,5781
	char	   *tableOpt;		/* insert to HTML <table ...> */tableOpt175,5824
	char	   *caption;		/* HTML <caption> */caption176,5878
	char	  **fieldName;		/* null terminated array of replacement fieldfieldName177,5919
} PQprintOpt;PQprintOpt179,6007
typedef struct _PQconninfoOption_PQconninfoOption190,6403
	char	   *keyword;		/* The keyword of the option			*/keyword192,6438
	char	   *envvar;			/* Fallback environment variable name	*/envvar193,6492
	char	   *compiled;		/* Fallback compiled in default value	*/compiled194,6553
	char	   *val;			/* Option's current value, or NULL		 */val195,6615
	char	   *label;			/* Label for field in connect dialog	*/label196,6672
	char	   *dispchar;		/* Indicates how to display this field in adispchar197,6731
	int			dispsize;		/* Field size in characters for dialog	*/dispsize202,6976
} PQconninfoOption;PQconninfoOption203,7036
{__anond20768110708210,7164
	int			len;len211,7166
	int			isint;isint212,7178
	{__anond2076811080a214,7199
		int		   *ptr;		/* can't use void (dec compiler barfs)	 */ptr215,7202
		int			integer;integer216,7262
	}			u;u217,7279
} PQArgBlock;PQArgBlock218,7287
typedef struct pgresAttDescpgresAttDesc224,7422
	char	   *name;			/* column name */name226,7452
	Oid			tableid;		/* source table, if known */tableid227,7488
	int			columnid;		/* source column, if known */columnid228,7534
	int			format;			/* format code for value (text/binary) */format229,7582
	Oid			typid;			/* type id */typid230,7641
	int			typlen;			/* type size */typlen231,7671
	int			atttypmod;		/* type-specific modifier info */atttypmod232,7704
} PGresAttDesc;PGresAttDesc233,7757
#define PQsetdb(PQsetdb258,8577
typedef void (*pgthreadlock_t) (int acquire);pgthreadlock_t353,12213
#define PQfreeNotify(PQfreeNotify484,17210
#define PQnoPasswordSupplied	PQnoPasswordSupplied488,17370

postgres/pg_config.h,4195
#define ACCEPT_TYPE_ARG1 ACCEPT_TYPE_ARG114,561
#define ACCEPT_TYPE_ARG2 ACCEPT_TYPE_ARG217,646
#define ACCEPT_TYPE_ARG3 ACCEPT_TYPE_ARG320,736
#define ACCEPT_TYPE_RETURN ACCEPT_TYPE_RETURN23,810
#define ALIGNOF_DOUBLE ALIGNOF_DOUBLE26,905
#define ALIGNOF_INT ALIGNOF_INT29,975
#define ALIGNOF_LONG ALIGNOF_LONG32,1043
#define ALIGNOF_LONG_LONG_INT ALIGNOF_LONG_LONG_INT35,1121
#define ALIGNOF_SHORT ALIGNOF_SHORT38,1200
#define DEF_PGPORT DEF_PGPORT44,1480
#define DEF_PGPORT_STR DEF_PGPORT_STR47,1571
#define FLEXIBLE_ARRAY_MEMBERFLEXIBLE_ARRAY_MEMBER56,2085
#define ENABLE_THREAD_SAFETY ENABLE_THREAD_SAFETY63,2306
# define gettimeofday(gettimeofday72,2540
#define HAVE_DECL_FDATASYNC HAVE_DECL_FDATASYNC89,2991
#define HAVE_DECL_F_FULLFSYNC HAVE_DECL_F_FULLFSYNC93,3112
#define HAVE_DECL_SNPRINTF HAVE_DECL_SNPRINTF97,3232
#define HAVE_DECL_VSNPRINTF HAVE_DECL_VSNPRINTF101,3350
#define HAVE_FCVT HAVE_FCVT116,3805
#define HAVE_FINITE HAVE_FINITE122,3951
#define HAVE_FSEEKO HAVE_FSEEKO137,4391
#define HAVE_FUNCNAME__FUNCTION HAVE_FUNCNAME__FUNCTION143,4565
#define HAVE_INT_TIMEZONEHAVE_INT_TIMEZONE188,5853
#define HAVE_IPV6 HAVE_IPV6191,5928
#define HAVE_ISINF HAVE_ISINF194,5988
#define HAVE_LL_CONSTANTS HAVE_LL_CONSTANTS238,7281
#define HAVE_LOCALE_T HAVE_LOCALE_T242,7374
#define HAVE_LONG_LONG_INT_64HAVE_LONG_LONG_INT_64249,7565
#define HAVE_MBSTOWCS_L HAVE_MBSTOWCS_L253,7660
#define HAVE_MEMMOVE HAVE_MEMMOVE256,7741
#define HAVE_MEMORY_H HAVE_MEMORY_H259,7823
#define HAVE_MINIDUMP_TYPE HAVE_MINIDUMP_TYPE262,7910
#define HAVE_NETINET_IN_H HAVE_NETINET_IN_H265,8002
#define HAVE_PWD_H HAVE_PWD_H292,8779
#define HAVE_RINT HAVE_RINT311,9341
#define HAVE_SIG_ATOMIC_T HAVE_SIG_ATOMIC_T341,10245
#define HAVE_SPINLOCKS HAVE_SPINLOCKS347,10398
#define HAVE_STDLIB_H HAVE_STDLIB_H356,10649
#define HAVE_STRERROR HAVE_STRERROR360,10751
#define HAVE_STRINGIZE HAVE_STRINGIZE367,10937
#define HAVE_STRING_H HAVE_STRING_H373,11111
#define HAVE_STRUCT_ADDRINFO HAVE_STRUCT_ADDRINFO389,11544
#define HAVE_STRUCT_SOCKADDR_STORAGE HAVE_STRUCT_SOCKADDR_STORAGE403,11974
#define HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY408,12116
#define HAVE_SYMLINK HAVE_SYMLINK427,12800
#define HAVE_SYS_SOCKET_H HAVE_SYS_SOCKET_H457,13682
#define HAVE_SYS_STAT_H HAVE_SYS_STAT_H460,13771
#define HAVE_SYS_TIME_H HAVE_SYS_TIME_H463,13858
#define HAVE_SYS_TYPES_H HAVE_SYS_TYPES_H466,13946
#define HAVE_TOWLOWER HAVE_TOWLOWER482,14428
#define HAVE_UNISTD_H HAVE_UNISTD_H497,14847
#define HAVE_UTIME HAVE_UTIME506,15083
#define HAVE_UTIME_H HAVE_UTIME_H512,15241
#define HAVE_VSNPRINTF HAVE_VSNPRINTF515,15321
#define HAVE_WCHAR_H HAVE_WCHAR_H518,15404
#define HAVE_WCSTOMBS HAVE_WCSTOMBS521,15483
#define HAVE_WCSTOMBS_L HAVE_WCSTOMBS_L524,15565
#define HAVE_WCTYPE_H HAVE_WCTYPE_H527,15650
#define HAVE__VA_ARGS HAVE__VA_ARGS545,16272
#define INT64_FORMAT INT64_FORMAT548,16370
#define MAXIMUM_ALIGNOF MAXIMUM_ALIGNOF560,16707
#define MEMSET_LOOP_LIMIT MEMSET_LOOP_LIMIT563,16775
#define PACKAGE_BUGREPORT PACKAGE_BUGREPORT566,16886
#define PACKAGE_NAME PACKAGE_NAME569,16988
#define PACKAGE_STRING PACKAGE_STRING572,17082
#define PACKAGE_VERSION PACKAGE_VERSION575,17170
#define PG_INT64_TYPE PG_INT64_TYPE578,17261
#define PG_VERSION PG_VERSION581,17335
#define PG_VERSION_NUM PG_VERSION_NUM584,17400
#define PACKAGE_TARNAME PACKAGE_TARNAME587,17489
#define PG_KRB_SRVNAM PG_KRB_SRVNAM591,17637
#define PG_VERSION_STR PG_VERSION_STR594,17742
#define SIZEOF_LONG SIZEOF_LONG601,17990
#define SIZEOF_SIZE_T SIZEOF_SIZE_T605,18079
#define SIZEOF_SIZE_T SIZEOF_SIZE_T607,18109
#define SIZEOF_VOID_P SIZEOF_VOID_P612,18207
#define SIZEOF_VOID_P SIZEOF_VOID_P614,18237
#define STDC_HEADERS STDC_HEADERS618,18324
#define UINT64_FORMAT UINT64_FORMAT628,18601
#define PG_USE_INLINE PG_USE_INLINE638,18974
#define USE_REPL_SNPRINTF USE_REPL_SNPRINTF654,19439
#define USE_SYSV_SHARED_MEMORY USE_SYSV_SHARED_MEMORY663,19682
#define USE_WIN32_SEMAPHORESUSE_WIN32_SEMAPHORES669,19855
#define inline inline686,20418

easywclient/test/Makefile,253
CXXFLAGS = -std=gnu++1y -Wall -I..CXXFLAGS3,18
test: easywsclient.ttest6,81
clean:clean8,152
easywsclient.t: easywsclient.t.o easywsclient.o gtest-all.oeasywsclient.t12,216
easywsclient.o: easywsclient.cpp easywsclient.hppeasywsclient.o13,276

easywclient/test/gtest.mk,196
GTEST_PATH ?= /usr/src/gtestGTEST_PATH3,100
GTEST_OBJS = gtest-all.oGTEST_OBJS4,129
all:all21,611
gtest_clean:gtest_clean22,616
gtest-all.o: CXXFLAGS += -I$(GTEST_PATH)gtest-all.o24,646

easywclient/test/testServer.js,1524
var WebSocketServer = require('ws').Server;WebSocketServer17,244
var http = require('http');http18,288
var app = http.createServer();app19,316
var server; // assigned by app.listen() belowserver20,347
var wssEchoWithSize = new WebSocketServer({server: app, path: '/echoWithSize'});wssEchoWithSize22,394
    ws.on('message', function(data, flags) {AnonymousFunction35a22f8d020024,523
    ws.on('close', function() {AnonymousFunction35a22f8d030028,658
    ws.on('error', function(e) {AnonymousFunction35a22f8d040030,698
wssEchoWithSize.on('connection', function(ws) {AnonymousFunction35a22f8d010023,475
var wssBinaryEchoWithSize = new WebSocketServer({server: app, path: '/binaryEchoWithSize'});wssBinaryEchoWithSize34,744
    ws.on('message', function(data, flags) {AnonymousFunction35a22f8d060036,891
    ws.on('close', function() {AnonymousFunction35a22f8d070045,1310
    ws.on('error', function(e) {AnonymousFunction35a22f8d080047,1350
wssBinaryEchoWithSize.on('connection', function(ws) {AnonymousFunction35a22f8d050035,837
var wssKillServer = new WebSocketServer({server: app, path: '/killServer'});wssKillServer51,1396
    ws.on('message', function(data, flags) {AnonymousFunction35a22f8d0a0053,1519
    ws.on('close', function() {AnonymousFunction35a22f8d0b0057,1634
    ws.on('error', function(e) {AnonymousFunction35a22f8d0c0059,1674
wssKillServer.on('connection', function(ws) {AnonymousFunction35a22f8d090052,1473
var PORT = parseInt(process.env.PORT || '8123');PORT63,1720

easywclient/test/easywsclient.t.cpp,972
namespace {__anon1fb7d2b9011118,313
class WSAInitWSAInit21,340
    WSAInit()WSAInit24,366
    ~WSAInit()~WSAInit33,571
class KillServerKillServer40,631
    KillServer() : d_ws(WebSocket::from_url("ws://localhost:8123/killServer"))KillServer43,660
    ~KillServer()~KillServer47,773
    std::unique_ptr<WebSocket> d_ws;d_ws54,937
std::string makeString(size_t length)makeString57,978
TEST(easywsclient, textFramesWork)TEST70,1199
        ws->dispatch([gotMessageOut=&gotMessage, messageOut=&message, ws=ws.get()](const std::st__anon1fb7d2b9020280,1500
TEST(easywsclient, longTextFramesWork)TEST92,1846
            ws->dispatch([gotMessageOut=&gotMessage, messageOut=&message, ws=ws.get()](const std__anon1fb7d2b90302123,3240
TEST(easywsclient, binaryFramesWork)TEST136,3646
        ws->dispatchBinary([gotMessageOut=&gotMessage, messageOut=&message, ws=ws.get()](const s__anon1fb7d2b90402145,3994
int main(int argc, char **argv)main157,4389

easywclient/easywsclient.hpp,1887
#define EASYWSCLIENT_HPP_20120819_MIOFVASDTNUASZDQPLFDEASYWSCLIENT_HPP_20120819_MIOFVASDTNUASZDQPLFD2,55
namespace easywsclient {easywsclient14,402
struct Callback_Imp { virtual void operator()(const std::string& message) = 0; };Callback_Imp16,428
struct BytesCallback_Imp { virtual void operator()(const std::vector<uint8_t>& message) = 0; };BytesCallback_Imp17,510
class WebSocket {WebSocket19,607
    typedef WebSocket * pointer;pointer21,635
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;readyStateValues22,668
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;CLOSING22,668
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;CLOSED22,668
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;CONNECTING22,668
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;OPEN22,668
    typedef enum readyStateValues { CLOSING, CLOSED, CONNECTING, OPEN } readyStateValues;readyStateValues22,668
    virtual ~WebSocket() { }~WebSocket30,1032
    void dispatch(Callable callable)dispatch40,1467
        struct _Callback : public Callback_Imp {_Callback43,1651
            Callable& callable;callable44,1700
            _Callback(Callable& callable) : callable(callable) { }_Callback45,1732
            void operator()(const std::string& message) { callable(message); }operator ()46,1799
    void dispatchBinary(Callable callable)dispatchBinary53,1992
        struct _Callback : public BytesCallback_Imp {_Callback56,2196
            Callable& callable;callable57,2250
            _Callback(Callable& callable) : callable(callable) { }_Callback58,2282
            void operator()(const std::vector<uint8_t>& message) { callable(message); }operator ()59,2349

easywclient/Makefile,640
CXXFLAGS = -std=gnu++0x -WallCXXFLAGS1,0
LDLIBS = -lstdc++LDLIBS2,30
all: example-client example-client-cpp11all4,71
clean:clean5,112
test:test8,189
testserver: node_modulestestserver10,218
node_modules:node_modules12,267
example-client-cpp11: example-client-cpp11.o easywsclient.oexample-client-cpp1114,294
example-client-cpp11.o: example-client-cpp11.cpp easywsclient.hppexample-client-cpp11.o15,354
example-client: example-client.o easywsclient.oexample-client16,420
example-client.o: example-client.cpp easywsclient.hppexample-client.o17,468
easywsclient.o: easywsclient.cpp easywsclient.hppeasywsclient.o18,522

easywclient/example-client-cpp11.cpp,107
int main()main14,353
        ws->dispatch([wsp](const std::string & message) {__anonca55abd7010235,902

easywclient/easywsclient.cpp,4735
        #define _CRT_SECURE_NO_WARNINGS _CRT_SECURE_NO_WARNINGS4,78
        #define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN7,226
        typedef int ssize_t;ssize_t19,532
        #define _SSIZE_T_DEFINED_SSIZE_T_DEFINED20,561
        typedef SOCKET socket_t;socket_t23,635
        #define _SOCKET_T_DEFINED_SOCKET_T_DEFINED24,668
        #define snprintf snprintf27,734
        typedef __int8 int8_t;int8_t33,871
        typedef unsigned __int8 uint8_t;uint8_t34,902
        typedef __int32 int32_t;int32_t35,943
        typedef unsigned __int32 uint32_t;uint32_t36,976
        typedef __int64 int64_t;int64_t37,1019
        typedef unsigned __int64 uint64_t;uint64_t38,1052
    #define socketerrno socketerrno40,1106
    #define SOCKET_EAGAIN_EINPROGRESS SOCKET_EAGAIN_EINPROGRESS41,1148
    #define SOCKET_EWOULDBLOCK SOCKET_EWOULDBLOCK42,1201
        typedef int socket_t;socket_t56,1558
        #define _SOCKET_T_DEFINED_SOCKET_T_DEFINED57,1588
        #define INVALID_SOCKET INVALID_SOCKET60,1660
        #define SOCKET_ERROR SOCKET_ERROR63,1732
    #define closesocket(closesocket65,1779
    #define socketerrno socketerrno67,1840
    #define SOCKET_EAGAIN_EINPROGRESS SOCKET_EAGAIN_EINPROGRESS68,1870
    #define SOCKET_EWOULDBLOCK SOCKET_EWOULDBLOCK69,1915
namespace { // private module-only namespace__anonfec3d548011180,2106
socket_t hostname_connect(const std::string& hostname, int port) {hostname_connect82,2152
class _DummyWebSocket : public easywsclient::WebSocket_DummyWebSocket113,3078
    void poll(int timeout) { }poll116,3145
    void send(const std::string& message) { }send117,3176
    void sendBinary(const std::string& message) { }sendBinary118,3222
    void sendBinary(const std::vector<uint8_t>& message) { }sendBinary119,3274
    void sendPing() { }sendPing120,3335
    void close() { } close121,3359
    readyStateValues getReadyState() const { return CLOSED; }getReadyState122,3381
    void _dispatch(Callback_Imp & callable) { }_dispatch123,3443
    void _dispatchBinary(BytesCallback_Imp& callable) { }_dispatchBinary124,3491
class _RealWebSocket : public easywsclient::WebSocket_RealWebSocket128,3554
    struct wsheader_type {wsheader_type151,5014
        unsigned header_size;header_size152,5041
        bool fin;fin153,5071
        bool mask;mask154,5089
        enum opcode_type {opcode_type155,5108
            CONTINUATION = 0x0,CONTINUATION156,5135
            TEXT_FRAME = 0x1,TEXT_FRAME157,5167
            BINARY_FRAME = 0x2,BINARY_FRAME158,5197
            CLOSE = 8,CLOSE159,5229
            PING = 9,PING160,5252
            PONG = 0xa,PONG161,5274
        } opcode;opcode162,5298
        int N0;N0163,5316
        uint64_t N;N164,5332
        uint8_t masking_key[4];masking_key165,5352
    std::vector<uint8_t> rxbuf;rxbuf168,5392
    std::vector<uint8_t> txbuf;txbuf169,5424
    std::vector<uint8_t> receivedData;receivedData170,5456
    socket_t sockfd;sockfd172,5496
    readyStateValues readyState;readyState173,5517
    bool useMask;useMask174,5550
    _RealWebSocket(socket_t sockfd, bool useMask) : sockfd(sockfd), readyState(OPEN), useMask(us_RealWebSocket176,5569
    readyStateValues getReadyState() const {getReadyState179,5681
    void poll(int timeout) { // timeout in millisecondspoll183,5758
    virtual void _dispatch(Callback_Imp & callable) {_dispatch250,8210
        struct CallbackAdapter : public BytesCallback_ImpCallbackAdapter251,8264
            Callback_Imp& callable;callable254,8415
            CallbackAdapter(Callback_Imp& callable) : callable(callable) { }CallbackAdapter255,8451
            void operator()(const std::vector<uint8_t>& message) {operator ()256,8528
    virtual void _dispatchBinary(BytesCallback_Imp & callable) {_dispatchBinary265,8832
    void sendPing() {sendPing342,12576
    void send(const std::string& message) {send347,12713
    void sendBinary(const std::string& message) {sendBinary351,12857
    void sendBinary(const std::vector<uint8_t>& message) {sendBinary355,13009
    void sendData(wsheader_type::opcode_type type, uint64_t message_size, Iterator message_beginsendData360,13199
    void close() {close420,15903
easywsclient::WebSocket::pointer from_url(const std::string& url, bool useMask, const std::strinfrom_url430,16265
namespace easywsclient {easywsclient511,19802
WebSocket::pointer WebSocket::create_dummy() {create_dummy513,19828
WebSocket::pointer WebSocket::from_url(const std::string& url, const std::string& origin) {from_url519,19954
WebSocket::pointer WebSocket::from_url_no_mask(const std::string& url, const std::string& originfrom_url_no_mask523,20091

easywclient/README.md,155
easywsclienteasywsclient1,0
NewsNews28,1375
UsageUsage41,1858
ExampleExample100,3607
ThreadingThreading123,4285
Future WorkFuture Work131,4590

easywclient/package.json,622
  "name": "easywsclient",name2,2
  "version": "0.0.0",version3,28
  "description": "",description4,50
  "main": "",main5,71
    "test": "echo \"Error: no test specified\" && exit 1"test7,100
  "scripts": {scripts6,85
    "type": "git",type10,181
    "url": "git://github.com/dhbaird/easywsclient.git"url11,200
  "repository": {repository9,163
  "author": "David Baird <dhbaird@gmail.com>",author13,260
  "license": "MIT",license14,307
    "url": "https://github.com/dhbaird/easywsclient/issues"url16,339
  "bugs": {bugs15,327
    "ws": "~0.4.31"ws19,424
  "dependencies": {dependencies18,404

easywclient/example-server.js,523
var WebSocketServer = require('ws').Server;WebSocketServer17,244
var http = require('http');http18,288
var server = http.createServer();server20,317
var wss = new WebSocketServer({server: server, path: '/foo'});wss21,351
    ws.on('message', function(data, flags) {AnonymousFunction01357037020024,485
    ws.on('close', function() {AnonymousFunction01357037030030,770
    ws.on('error', function(e) {AnonymousFunction01357037040033,851
wss.on('connection', function(ws) {AnonymousFunction01357037010022,414

easywclient/example-client.cpp,141
static WebSocket::pointer ws = NULL;ws12,280
void handle_message(const std::string & message)handle_message14,318
int main()main20,458

easywclient/license.txt,0

zif.h,266
#define ZIFH_ZIFH_4,76
struct zif_t {zif_t6,91
    char* uncompressed_buf;uncompressed_buf7,106
    size_t uncompressed_buf_len;uncompressed_buf_len8,134
    char* compressed_buf;compressed_buf9,167
    size_t compressed_buf_len;compressed_buf_len10,193

common.h,958
#define _MAXH__MAXH_2,15
#define NOMAIN NOMAIN41,1775
#define DISCARD_TEXT_COMPRESSION DISCARD_TEXT_COMPRESSION42,1792
#define DISCARDMICROSOFTSQL DISCARDMICROSOFTSQL43,1827
	typedef long long long_t; long_t90,3005
	typedef unsigned long long ulong_t; ulong_t91,3033
	#define stricmp stricmp95,3139
	#define strnicmp strnicmp96,3168
	#define _CRT_SECURE_NO_DEPRECATE_CRT_SECURE_NO_DEPRECATE110,3505
	#define _CRT_SECURE_NO_WARNINGS _CRT_SECURE_NO_WARNINGS111,3539
	#define _CRT_NONSTDC_NO_DEPRECATE_CRT_NONSTDC_NO_DEPRECATE112,3574
	#define _CRT_NONSTDC_NO_WARNINGS _CRT_NONSTDC_NO_WARNINGS113,3609
	#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN115,3673
		#define LINUX LINUX134,4157
	#define EV_STANDALONE EV_STANDALONE181,4921
	#define EV_CHILD_ENABLE EV_CHILD_ENABLE182,4946
			#define LOCKUSERFILE LOCKUSERFILE185,5019
    #define GetCurrentDir GetCurrentDir232,6154
    #define GetCurrentDir GetCurrentDir236,6241

mprintf.h,467
#define __CURL_MPRINTF_H__CURL_MPRINTF_H2,25
# define printf printf63,2271
# define fprintf fprintf64,2300
# define sprintf sprintf68,2471
# define vsprintf vsprintf69,2505
# define sprintf sprintf71,2547
# define vsprintf vsprintf72,2578
# define snprintf snprintf74,2618
# define vprintf vprintf75,2651
# define vfprintf vfprintf76,2682
# define vsnprintf vsnprintf77,2715
# define aprintf aprintf78,2750
# define vaprintf vaprintf79,2781

functionExecute.h,1631
#define _EXECUTE_EXECUTE2,17
#define MAX_DISPLAY MAX_DISPLAY21,1147
#define LCLVARDATA_PREFIX LCLVARDATA_PREFIX22,1172
#define FAILCODES FAILCODES24,1203
#define SUCCESSCODES SUCCESSCODES25,1393
#define ENDCODES ENDCODES26,1520
#define RESULTBEYONDTOPIC RESULTBEYONDTOPIC27,1566
#define RETRYCODES RETRYCODES28,1713
typedef FunctionResult (*EXECUTEPTR)(char* buffer);EXECUTEPTR29,1821
#define SAMELINE SAMELINE31,1874
typedef struct SystemFunctionInfo SystemFunctionInfo34,1895
	const char* word;					//   dictionary word entryword36,1932
	EXECUTEPTR fn;				//   function to use to get itfn37,1982
	int argumentCount;			//   how many callArgumentList it takesargumentCount38,2032
	int	properties;				//   non-zero means does its own argument tracingproperties39,2094
	const char* comment;comment40,2164
} SystemFunctionInfo;SystemFunctionInfo41,2186
#define VARIABLE_ARG_COUNT VARIABLE_ARG_COUNT44,2236
#define STREAM_ARG STREAM_ARG45,2276
#define UNEVALED UNEVALED46,2298
#define NOEVAL_ARG1 NOEVAL_ARG147,2343
#define NOEVAL_ARG2 NOEVAL_ARG248,2374
#define NOEVAL_ARG3 NOEVAL_ARG349,2405
#define NOEVAL_ARG4 NOEVAL_ARG450,2436
#define NOEVAL_ARG5 NOEVAL_ARG551,2467
enum TestMode { TestMode57,2749
	FAILCOMMAND = 0,FAILCOMMAND58,2766
	COMMANDED = 1,COMMANDED59,2784
	NOPROCESS = 2,NOPROCESS60,2800
	BEGINANEW = 3,BEGINANEW61,2816
	OUTPUTASGIVEN = 4,OUTPUTASGIVEN62,2832
	RESTART = 5,RESTART63,2852
	TRACECMD = 6,TRACECMD64,2866
#define MAX_ARG_LIST MAX_ARG_LIST76,3202
#define MAX_CALL_DEPTH MAX_CALL_DEPTH77,3227
#define MAX_ARG_LIMIT MAX_ARG_LIMIT94,3749

mainSystem.h,2229
#define MAINSYSTEMHMAINSYSTEMH2,20
#define ID_SIZE ID_SIZE17,1130
#define OUTPUT_BUFFER_SIZE OUTPUT_BUFFER_SIZE18,1150
typedef struct RESPONSERESPONSE20,1184
    char* response;						// answer sentences, 1 or more per input lineresponse22,1210
    char* patternchoice;patternchoice23,1281
    unsigned int responseInputIndex;                        // which input sentence does this stresponseInputIndex24,1306
	int topic;										// topic of ruletopic25,1411
	char id[24];											// .100.30id26,1449
} RESPONSE;RESPONSE27,1484
#define SENTENCES_LIMIT SENTENCES_LIMIT29,1497
#define MAX_RESPONSE_SENTENCES MAX_RESPONSE_SENTENCES30,1568
#define MAX_SENTENCE_LENGTH MAX_SENTENCE_LENGTH31,1602
#define REAL_SENTENCE_WORD_LIMIT REAL_SENTENCE_WORD_LIMIT32,1705
#define TIMEOUT_INSTANCE TIMEOUT_INSTANCE33,1797
#define PENDING_RESTART PENDING_RESTART35,1831
typedef char* (*DEBUGAPI)(char* buffer);DEBUGAPI38,1926
typedef char* (*DEBUGLOOPAPI)(char* buffer,bool in);DEBUGLOOPAPI39,1967
typedef char* (*DEBUGVARAPI)(char* var, char* value);DEBUGVARAPI40,2020
#define START_BIT START_BIT64,2793
 enum PrepareMode { // how to treat inputPrepareMode68,2922
	NO_MODE = 0,				// std processing of user inputsNO_MODE69,2964
	POS_MODE = 1,				// just pos tag the inputsPOS_MODE70,3014
	PREPARE_MODE = 2,			// just prepare the inputsPREPARE_MODE71,3059
	POSVERIFY_MODE = 4,POSVERIFY_MODE72,3107
	POSTIME_MODE = 8,POSTIME_MODE73,3128
	PENN_MODE = 16,PENN_MODE74,3147
	REGRESS_MODE = 32,			// inputs are from a regression testREGRESS_MODE75,3164
	TOKENIZE_MODE = 64,			// just prepare the inputsTOKENIZE_MODE76,3223
 enum ResetMode {ResetMode79,3278
	 NO_RESET = 0,NO_RESET80,3296
	 MILD_RESET = 1,MILD_RESET81,3312
	 FULL_RESET = 2FULL_RESET82,3330
 enum RegressionMode { RegressionMode85,3352
	NO_REGRESSION = 0,NO_REGRESSION86,3376
	NORMAL_REGRESSION = 1,NORMAL_REGRESSION87,3396
	REGRESS_REGRESSION = 2,REGRESS_REGRESSION88,3420
 enum EchoSource {EchoSource92,3473
	NO_SOURCE_ECHO = 0,NO_SOURCE_ECHO93,3492
	SOURCE_ECHO_USER = 1,SOURCE_ECHO_USER94,3513
	SOURCE_ECHO_LOG = 2,SOURCE_ECHO_LOG95,3536
#define MAX_TRACED_FUNCTIONS MAX_TRACED_FUNCTIONS97,3561

json.h,29
#define _JSONH__JSONH_2,16

outputSystem.h,90
#define _OUTPUTPROCESSH__OUTPUTPROCESSH_2,25
#define CHOICE_LIMIT CHOICE_LIMIT19,1161

dictionarySystem.h,23200
#define _DICTIONARYSYSTEM_H_DICTIONARYSYSTEM_H2,28
typedef unsigned int DICTINDEX;	//   indexed ref to a dictionary entryDICTINDEX18,1147
#define NOUN	NOUN33,1994
#define VERB	VERB34,2073
#define ESSENTIAL_POS	ESSENTIAL_POS35,2139
#define ADJECTIVE	ADJECTIVE36,2180
#define ADVERB	ADVERB37,2259
#define BASIC_POS	BASIC_POS38,2338
#define PREPOSITION	PREPOSITION41,2499
#define ESSENTIAL_FLAGS	ESSENTIAL_FLAGS42,2594
#define CONJUNCTION_COORDINATE CONJUNCTION_COORDINATE45,2789
#define CONJUNCTION_SUBORDINATE CONJUNCTION_SUBORDINATE46,2859
#define CONJUNCTION	CONJUNCTION47,2952
#define PREDETERMINER PREDETERMINER50,3084
#define DETERMINER DETERMINER51,3149
#define POSSESSIVE	POSSESSIVE52,3212
#define PRONOUN_POSSESSIVE	PRONOUN_POSSESSIVE53,3339
#define POSSESSIVE_BITS	POSSESSIVE_BITS54,3440
#define DETERMINER_BITS	DETERMINER_BITS55,3502
#define COMMA COMMA60,3682
#define REQUIRE_CONCEPT	REQUIRE_CONCEPT61,3724
#define PAREN	PAREN62,3852
#define PUNCTUATION	PUNCTUATION63,3894
#define QUOTE QUOTE64,4011
#define CURRENCY	CURRENCY65,4077
#define ADJECTIVE_NORMAL	ADJECTIVE_NORMAL68,4191
#define ADJECTIVE_NUMBER	ADJECTIVE_NUMBER69,4286
#define ADJECTIVE_NOUN	ADJECTIVE_NOUN70,4383
#define ADJECTIVE_PARTICIPLE	ADJECTIVE_PARTICIPLE71,4521
#define ADJECTIVE_BITS ADJECTIVE_BITS72,4677
#define INTERJECTION	INTERJECTION75,4798
#define THERE_EXISTENTIAL	THERE_EXISTENTIAL76,4845
#define FOREIGN_WORD	FOREIGN_WORD77,4983
#define TO_INFINITIVE	TO_INFINITIVE78,5045
#define NOUN_ADJECTIVE	NOUN_ADJECTIVE81,5143
#define NOUN_SINGULAR	NOUN_SINGULAR82,5312
#define NOUN_PLURAL	NOUN_PLURAL83,5374
#define NOUN_PROPER_SINGULAR	NOUN_PROPER_SINGULAR84,5436
#define NOUN_PROPER_PLURAL	NOUN_PROPER_PLURAL85,5558
#define NOUN_GERUND	NOUN_GERUND86,5625
#define NOUN_NUMBER	NOUN_NUMBER87,5690
#define NOUN_INFINITIVE NOUN_INFINITIVE88,5759
#define NOUN_PROPER	NOUN_PROPER89,5824
#define NORMAL_NOUN_BITS NORMAL_NOUN_BITS90,5892
#define NOUN_BITS NOUN_BITS91,5995
#define VERB_PRESENT	VERB_PRESENT94,6094
#define VERB_PRESENT_3PS	VERB_PRESENT_3PS95,6193
#define VERB_PRESENT_PARTICIPLE VERB_PRESENT_PARTICIPLE96,6288
#define VERB_PAST	VERB_PAST97,6368
#define VERB_PAST_PARTICIPLE VERB_PAST_PARTICIPLE98,6428
#define VERB_INFINITIVE	VERB_INFINITIVE99,6498
#define PARTICLE	PARTICLE100,6614
#define VERB_BITS VERB_BITS101,6791
#define PRONOUN_SUBJECT PRONOUN_SUBJECT104,6948
#define PRONOUN_OBJECT	PRONOUN_OBJECT105,7025
#define PRONOUN_BITS	PRONOUN_BITS106,7098
#define	AUX_DO AUX_DO109,7213
#define AUX_HAVE	AUX_HAVE110,7256
#define	AUX_BE	AUX_BE111,7299
#define AUX_VERB_PRESENT	AUX_VERB_PRESENT112,7341
#define AUX_VERB_FUTURE	AUX_VERB_FUTURE113,7389
#define AUX_VERB_PAST	AUX_VERB_PAST114,7437
#define AUX_VERB_TENSES AUX_VERB_TENSES115,7483
#define AUX_VERB AUX_VERB116,7577
#define STARTTAGS	STARTTAGS118,7644
#define AS_IS	AS_IS121,7828
#define NOUN_HUMAN	NOUN_HUMAN123,7961
#define NOUN_FIRSTNAME	NOUN_FIRSTNAME124,8068
#define NOUN_SHE	NOUN_SHE125,8179
#define NOUN_HE	NOUN_HE126,8295
#define NOUN_THEY	NOUN_THEY127,8409
#define NOUN_TITLE_OF_ADDRESS	NOUN_TITLE_OF_ADDRESS128,8455
#define NOUN_TITLE_OF_WORK	NOUN_TITLE_OF_WORK129,8524
#define LOWERCASE_TITLE	LOWERCASE_TITLE130,8574
#define NOUN_ABSTRACT	NOUN_ABSTRACT131,8678
#define MORE_FORM	MORE_FORM132,8773
#define MOST_FORM	MOST_FORM133,8818
#define QWORD QWORD135,8864
#define PLACE_NUMBER	PLACE_NUMBER137,8981
#define SINGULAR_PERSON	SINGULAR_PERSON138,9067
#define IDIOM IDIOM140,9237
#define NOUN_TITLE	NOUN_TITLE144,9431
#define NOUN_HUMANGROUP	NOUN_HUMANGROUP145,9506
#define NOUN_MALEHUMAN NOUN_MALEHUMAN146,9586
#define NOUN_FEMALEHUMAN NOUN_FEMALEHUMAN147,9668
#define NOUN_HUMANNAME NOUN_HUMANNAME148,9753
#define TAG_TEST TAG_TEST150,9822
#define NOUN_DESCRIPTION_BITS NOUN_DESCRIPTION_BITS152,10117
#define ANIMATE_BEING ANIMATE_BEING157,10350
#define 	HOWWORD HOWWORD158,10399
#define TIMEWORD TIMEWORD159,10446
#define LOCATIONWORD	LOCATIONWORD160,10490
#define VERB_CONJUGATE3	VERB_CONJUGATE3163,10661
#define VERB_CONJUGATE2	VERB_CONJUGATE2164,10752
#define VERB_CONJUGATE1	VERB_CONJUGATE1165,10865
#define PRESENTATION_VERB	PRESENTATION_VERB167,10976
#define COMMON_PARTICIPLE_VERB	COMMON_PARTICIPLE_VERB168,11065
#define NOCONCEPTLIST	NOCONCEPTLIST170,11201
#define PRONOUN_RELATIVE	PRONOUN_RELATIVE171,11332
#define INSEPARABLE_PHRASAL_VERB	INSEPARABLE_PHRASAL_VERB174,11410
#define MUST_BE_SEPARATE_PHRASAL_VERB	MUST_BE_SEPARATE_PHRASAL_VERB175,11497
#define SEPARABLE_PHRASAL_VERB	SEPARABLE_PHRASAL_VERB176,11639
#define PHRASAL_VERB PHRASAL_VERB177,11715
#define VERB_NOOBJECT VERB_NOOBJECT180,11864
#define VERB_INDIRECTOBJECT VERB_INDIRECTOBJECT181,11915
#define VERB_DIRECTOBJECT VERB_DIRECTOBJECT182,11968
#define VERB_TAKES_GERUND	VERB_TAKES_GERUND183,12021
#define VERB_TAKES_ADJECTIVE	VERB_TAKES_ADJECTIVE184,12092
#define VERB_TAKES_INDIRECT_THEN_TOINFINITIVE	VERB_TAKES_INDIRECT_THEN_TOINFINITIVE185,12238
#define VERB_TAKES_INDIRECT_THEN_VERBINFINITIVE	VERB_TAKES_INDIRECT_THEN_VERBINFINITIVE186,12467
#define VERB_TAKES_TOINFINITIVE	VERB_TAKES_TOINFINITIVE187,12700
#define VERB_TAKES_VERBINFINITIVE	VERB_TAKES_VERBINFINITIVE188,12858
#define OMITTABLE_TIME_PREPOSITION	OMITTABLE_TIME_PREPOSITION193,13353
#define ALWAYS_PROPER_NAME_MERGE	ALWAYS_PROPER_NAME_MERGE194,13441
#define CONJUNCT_SUBORD_NOUN CONJUNCT_SUBORD_NOUN195,13557
#define ONLY_NONE	ONLY_NONE198,13736
#define PROBABLE_ADVERB PROBABLE_ADVERB199,13780
#define PROBABLE_ADJECTIVE PROBABLE_ADJECTIVE200,13829
#define PROBABLE_VERB PROBABLE_VERB201,13881
#define PROBABLE_NOUN PROBABLE_NOUN202,13929
#define PRONOUN_PLURAL	PRONOUN_PLURAL204,13978
#define PRONOUN_SINGULAR	PRONOUN_SINGULAR205,14027
#define ACTUAL_TIME ACTUAL_TIME206,14077
#define PREDETERMINER_TARGET	PREDETERMINER_TARGET207,14150
#define ADJECTIVE_POSTPOSITIVE	ADJECTIVE_POSTPOSITIVE209,14253
#define DETERMINER_SINGULAR	DETERMINER_SINGULAR210,14367
#define DETERMINER_PLURAL DETERMINER_PLURAL211,14419
#define TAKES_POSTPOSITIVE_ADJECTIVE TAKES_POSTPOSITIVE_ADJECTIVE212,14470
#define GRADE5_6	GRADE5_6214,14627
#define GRADE3_4	GRADE3_4215,14673
#define GRADE1_2 GRADE1_2216,14719
#define KINDERGARTEN	KINDERGARTEN217,14767
#define AGE_LEARNED AGE_LEARNED218,14826
#define SUBSTITUTE_RECIPIENT	SUBSTITUTE_RECIPIENT220,14933
#define NOUN_NODETERMINER	NOUN_NODETERMINER221,14986
#define	WEB_URL	WEB_URL222,15145
#define ORDINAL	ORDINAL223,15193
#define PRONOUN_REFLEXIVE	PRONOUN_REFLEXIVE224,15357
#define PRONOUN_INDIRECTOBJECT	PRONOUN_INDIRECTOBJECT228,15568
#define MODEL_NUMBER	MODEL_NUMBER229,15651
#define COMMON1	COMMON1230,15784
#define COMMON2	COMMON2231,15828
#define COMMON3	COMMON3232,15886
#define COMMON4	COMMON4233,15945
#define COMMON5	COMMON5234,16008
#define COMMON6	COMMON6235,16072
#define COMMON7	COMMON7236,16138
#define COMMONNESS	COMMONNESS237,16212
#define MONTH	MONTH239,16273
#define SPELLING_EXCEPTION	SPELLING_EXCEPTION240,16337
#define ADJECTIVE_NOT_PREDICATE	ADJECTIVE_NOT_PREDICATE241,16435
#define ADJECTIVE_ONLY_PREDICATE	ADJECTIVE_ONLY_PREDICATE242,16490
#define NO_PROPER_MERGE	NO_PROPER_MERGE246,16615
#define MARKED_WORD	MARKED_WORD247,16711
#define PATTERN_WORD PATTERN_WORD248,16909
#define HAS_SUBSTITUTE	HAS_SUBSTITUTE250,16958
#define EXTENT_ADVERB	EXTENT_ADVERB251,17043
#define FACTITIVE_ADJECTIVE_VERB	FACTITIVE_ADJECTIVE_VERB260,17448
#define FACTITIVE_NOUN_VERB	FACTITIVE_NOUN_VERB261,17523
#define ADJECTIVE_GOOD_SUBJECT_COMPLEMENT ADJECTIVE_GOOD_SUBJECT_COMPLEMENT262,17589
#define QUOTEABLE_VERB	QUOTEABLE_VERB263,17751
#define ADJECTIVE_TAKING_NOUN_INFINITIVE ADJECTIVE_TAKING_NOUN_INFINITIVE264,17829
#define OMITTABLE_THAT_VERB	OMITTABLE_THAT_VERB265,17974
#define NEGATIVE_ADVERB_STARTER	NEGATIVE_ADVERB_STARTER266,18080
#define NON_COMPLEMENT_ADJECTIVE	NON_COMPLEMENT_ADJECTIVE267,18205
#define PREP_ALLOWS_UNDETERMINED_NOUN PREP_ALLOWS_UNDETERMINED_NOUN268,18334
#define CONJUNCTIONS_OF_TIME	CONJUNCTIONS_OF_TIME269,18415
#define CONJUNCTIONS_OF_SPACE	CONJUNCTIONS_OF_SPACE270,18481
#define CONJUNCTIONS_OF_ADVERB	CONJUNCTIONS_OF_ADVERB271,18550
#define NONDESCRIPTIVE_ADJECTIVE	NONDESCRIPTIVE_ADJECTIVE272,18622
#define NEGATIVE_SV_INVERTER	NEGATIVE_SV_INVERTER273,18732
#define LOCATIONAL_INVERTER	LOCATIONAL_INVERTER274,18847
#define ADVERB_POSTADJECTIVE	ADVERB_POSTADJECTIVE275,18971
#define QUANTITY_NOUN	QUANTITY_NOUN276,19094
#define CONJUNCTIVE_ADVERB	CONJUNCTIVE_ADVERB277,19195
#define CORRELATIVE_ADVERB	CORRELATIVE_ADVERB278,19298
#define POTENTIAL_CLAUSE_STARTER	POTENTIAL_CLAUSE_STARTER279,19392
#define VERB_ALLOWS_OF_AFTER	VERB_ALLOWS_OF_AFTER280,19505
#define INDEFINITE_PRONOUN	INDEFINITE_PRONOUN281,19604
#define PERSONAL_PRONOUN	PERSONAL_PRONOUN282,19678
#define ADJECTIVE_NOT_PRE	ADJECTIVE_NOT_PRE283,19716
#define OBJECT_AS_ADJECTIVE	OBJECT_AS_ADJECTIVE284,19840
#define DISTANCE_NOUN DISTANCE_NOUN285,19934
#define DISTANCE_ADVERB DISTANCE_ADVERB286,19995
#define TIME_ADVERB TIME_ADVERB287,20054
#define TIME_NOUN TIME_NOUN288,20112
#define TIME_ADJECTIVE	TIME_ADJECTIVE289,20173
#define DISTANCE_ADJECTIVE DISTANCE_ADJECTIVE290,20229
#define OF_PROPER	OF_PROPER291,20289
#define JSON_ARRAY_UNIQUE JSON_ARRAY_UNIQUE297,20551
#define JSON_OBJECT_DUPLICATE JSON_OBJECT_DUPLICATE298,20579
#define FACTATTRIBUTE	FACTATTRIBUTE302,20643
#define MARKED_FACT MARKED_FACT308,20924
#define ITERATOR_FACT	ITERATOR_FACT309,21082
#define MARKED_FACT2 MARKED_FACT2310,21137
#define FACTDEAD	FACTDEAD311,21259
#define FACTTRANSIENT	FACTTRANSIENT312,21316
#define FACTAUTODELETE FACTAUTODELETE315,21427
#define OVERRIDE_MEMBER_FACT OVERRIDE_MEMBER_FACT316,21494
#define ORIGINAL_ONLY ORIGINAL_ONLY317,21571
#define FACTBUILD2	FACTBUILD2318,21636
#define FACTBUILD1	FACTBUILD1319,21669
#define USER_FLAG4	USER_FLAG4322,21769
#define USER_FLAG3	USER_FLAG3323,21801
#define USER_FLAG2	USER_FLAG2324,21833
#define USER_FLAG1	USER_FLAG1325,21865
#define USER_FLAGS	USER_FLAGS327,21898
#define START_ONLY START_ONLY328,21931
#define FACTBOOT FACTBOOT329,22003
#define JSON_OBJECT_FACT	JSON_OBJECT_FACT330,22112
#define JSON_ARRAY_FACT	JSON_ARRAY_FACT331,22177
#define JSON_ARRAY_VALUE	JSON_ARRAY_VALUE333,22243
#define JSON_OBJECT_VALUE	JSON_OBJECT_VALUE334,22308
#define JSON_STRING_VALUE	JSON_STRING_VALUE335,22374
#define JSON_PRIMITIVE_VALUE JSON_PRIMITIVE_VALUE336,22439
#define JSON_FLAGS JSON_FLAGS337,22507
#define JSON_OBJECT_FLAGS JSON_OBJECT_FLAGS338,22647
#define FACTSUBJECT FACTSUBJECT340,22777
#define FACTVERB	FACTVERB341,22858
#define FACTOBJECT	FACTOBJECT342,22991
#define FACTDUPLICATE	FACTDUPLICATE343,23148
#define RAWCASE_ONLY RAWCASE_ONLY345,23215
#define END_ONLY END_ONLY348,23322
#define MAINOBJECT	MAINOBJECT354,23537
#define MAININDIRECTOBJECT	MAININDIRECTOBJECT355,23569
#define MAINVERB	MAINVERB356,23608
#define MAINSUBJECT	MAINSUBJECT357,23638
#define SUBJECT2	SUBJECT2359,23758
#define VERB2	VERB2360,23788
#define INDIRECTOBJECT2	INDIRECTOBJECT2361,23816
#define OBJECT2	OBJECT2362,23853
#define CLAUSE CLAUSE364,23884
#define VERBAL VERBAL365,23917
#define PHRASE	PHRASE366,23950
#define QUOTATION_UTTERANCE QUOTATION_UTTERANCE368,24119
#define OBJECT_COMPLEMENT	OBJECT_COMPLEMENT369,24162
#define TO_INFINITIVE_OBJECT TO_INFINITIVE_OBJECT370,24343
#define VERB_INFINITIVE_OBJECT	VERB_INFINITIVE_OBJECT371,24459
#define OMITTED_SUBJECT_VERB	OMITTED_SUBJECT_VERB372,24572
#define CONJUNCT_CLAUSE CONJUNCT_CLAUSE377,24826
#define CONJUNCT_SENTENCE	CONJUNCT_SENTENCE378,24865
#define CONJUNCT_NOUN	CONJUNCT_NOUN379,24904
#define CONJUNCT_VERB CONJUNCT_VERB380,24940
#define CONJUNCT_ADJECTIVE	CONJUNCT_ADJECTIVE381,24977
#define CONJUNCT_ADVERB	CONJUNCT_ADVERB382,25017
#define CONJUNCT_PHRASE	CONJUNCT_PHRASE383,25054
#define CONJUNCT_KINDS	CONJUNCT_KINDS384,25091
#define SENTENCE_END SENTENCE_END386,25246
#define WHENUNIT	WHENUNIT387,25289
#define WHEREUNIT	WHEREUNIT388,25320
#define WHYUNIT	WHYUNIT389,25352
#define HOWUNIT	HOWUNIT390,25383
#define ADVERBIALTYPE ADVERBIALTYPE391,25414
#define REFLEXIVE	REFLEXIVE392,25481
#define COMMA_PHRASE COMMA_PHRASE393,25518
#define BYOBJECT2	BYOBJECT2394,25582
#define OFOBJECT2	OFOBJECT2395,25614
#define POSTNOMINAL_ADJECTIVE	POSTNOMINAL_ADJECTIVE396,25647
#define APPOSITIVE	APPOSITIVE398,25828
#define ADJECTIVE_COMPLEMENT	ADJECTIVE_COMPLEMENT399,25889
#define ABSOLUTE_PHRASE	ABSOLUTE_PHRASE400,26030
#define SUBJECT_COMPLEMENT	SUBJECT_COMPLEMENT401,26103
#define OMITTED_OF_PREP	OMITTED_OF_PREP404,26395
#define OMITTED_TIME_PREP	OMITTED_TIME_PREP405,26443
#define ADVERBIAL	ADVERBIAL406,26493
#define ADJECTIVAL	ADJECTIVAL407,26537
#define ADDRESS ADDRESS408,26582
#define TAGQUESTION	TAGQUESTION409,26648
#define DISTANCE_NOUN_MODIFY_ADVERB	DISTANCE_NOUN_MODIFY_ADVERB410,26693
#define TIME_NOUN_MODIFY_ADVERB	TIME_NOUN_MODIFY_ADVERB411,26751
#define TIME_NOUN_MODIFY_ADJECTIVE	TIME_NOUN_MODIFY_ADJECTIVE412,26806
#define DISTANCE_NOUN_MODIFY_ADJECTIVE	DISTANCE_NOUN_MODIFY_ADJECTIVE413,26867
#define PASSIVE_VERB PASSIVE_VERB414,26928
#define TOPIC_KEEP TOPIC_KEEP421,27043
#define TOPIC_REPEAT TOPIC_REPEAT422,27086
#define TOPIC_RANDOM TOPIC_RANDOM423,27139
#define TOPIC_SYSTEM TOPIC_SYSTEM424,27209
#define TOPIC_NOSTAY TOPIC_NOSTAY425,27309
#define TOPIC_PRIORITY TOPIC_PRIORITY426,27371
#define TOPIC_LOWPRIORITY TOPIC_LOWPRIORITY427,27437
#define TOPIC_NOBLOCKING TOPIC_NOBLOCKING428,27506
#define TOPIC_NOKEYS TOPIC_NOKEYS429,27588
#define TOPIC_NOPATTERNS TOPIC_NOPATTERNS430,27686
#define TOPIC_NOSAMPLES TOPIC_NOSAMPLES431,27778
#define TOPIC_NOGAMBITS TOPIC_NOGAMBITS432,27867
#define TOPIC_SAFE	TOPIC_SAFE433,27946
#define TOPIC_SHARE	TOPIC_SHARE434,27992
#define TOPIC_RANDOM_GAMBIT	TOPIC_RANDOM_GAMBIT435,28053
#define TOPIC_GAMBITTED TOPIC_GAMBITTED438,28137
#define TOPIC_RESPONDED TOPIC_RESPONDED439,28228
#define TOPIC_REJOINDERED TOPIC_REJOINDERED440,28322
#define ACCESS_FLAGS ACCESS_FLAGS441,28418
#define TOPIC_BLOCKED	TOPIC_BLOCKED442,28498
#define TOPIC_USED	TOPIC_USED443,28582
#define TRANSIENT_FLAGS TRANSIENT_FLAGS444,28678
#define TRACE_ON	TRACE_ON448,28775
#define TRACE_MATCH TRACE_MATCH449,28806
#define TRACE_VARIABLE	TRACE_VARIABLE450,28839
#define TRACE_PREPARE	TRACE_PREPARE453,28883
#define TRACE_OUTPUT	TRACE_OUTPUT454,28917
#define TRACE_PATTERN	TRACE_PATTERN455,28950
#define TRACE_HIERARCHY	TRACE_HIERARCHY458,28993
#define TRACE_INFER	TRACE_INFER459,29029
#define TRACE_SUBSTITUTE	TRACE_SUBSTITUTE460,29062
#define TRACE_FACT	TRACE_FACT461,29098
#define TRACE_VARIABLESET	TRACE_VARIABLESET462,29130
#define TRACE_USERFN	TRACE_USERFN463,29167
#define TRACE_USER	TRACE_USER464,29200
#define TRACE_POS	TRACE_POS465,29232
#define TRACE_QUERY	TRACE_QUERY466,29263
#define TRACE_TCP	TRACE_TCP467,29296
#define TRACE_USERCACHE	TRACE_USERCACHE468,29327
#define TRACE_SQL	TRACE_SQL469,29363
#define TRACE_LABEL	TRACE_LABEL470,29394
#define TRACE_SAMPLE	TRACE_SAMPLE471,29427
#define TRACE_INPUT	TRACE_INPUT472,29460
#define TRACE_SPELLING	TRACE_SPELLING473,29493
#define TRACE_TOPIC	TRACE_TOPIC474,29528
#define TRACE_SCRIPT	TRACE_SCRIPT475,29561
#define TRACE_JSON	TRACE_JSON476,29594
#define TRACE_NOT_THIS_TOPIC TRACE_NOT_THIS_TOPIC477,29626
#define TRACE_FLOW	TRACE_FLOW478,29666
#define TRACE_COVERAGE	TRACE_COVERAGE479,29698
#define TRACE_ALWAYS	TRACE_ALWAYS480,29733
#define TRACE_ECHO	TRACE_ECHO482,29767
#define TRACE_USERFACT	TRACE_USERFACT483,29813
#define TRACE_TREETAGGER	TRACE_TREETAGGER484,29848
#define TIME_ON	TIME_ON488,29909
#define TIME_PREPARE	TIME_PREPARE491,29949
#define TIME_PATTERN	TIME_PATTERN492,29982
#define TIME_USERFN	TIME_USERFN495,30024
#define TIME_USER	TIME_USER496,30057
#define TIME_QUERY	TIME_QUERY497,30088
#define TIME_TCP	TIME_TCP498,30120
#define TIME_USERCACHE	TIME_USERCACHE499,30150
#define TIME_SQL	TIME_SQL500,30185
#define TIME_TOPIC	TIME_TOPIC501,30215
#define TIME_JSON	TIME_JSON502,30247
#define TIME_NOT_THIS_TOPIC TIME_NOT_THIS_TOPIC503,30278
#define TIME_FLOW	TIME_FLOW504,30317
#define TIME_ALWAYS	TIME_ALWAYS505,30348
#define DISCARD DISCARD508,30413
#define KEEP KEEP509,30431
#define TRACE TRACE510,30446
#define ONE_REJOINDER ONE_REJOINDER512,30463
#define HAS HAS517,30595
#define IS IS518,30630
#define INCLUDE INCLUDE519,30662
#define CANONLYBE CANONLYBE520,30710
#define HASORIGINAL HASORIGINAL521,30766
#define PRIORPOS PRIORPOS522,30810
#define POSTPOS POSTPOS523,30831
#define PASSIVEVERB PASSIVEVERB524,30849
#define HASPROPERTY HASPROPERTY526,30894
#define HASALLPROPERTIES HASALLPROPERTIES527,30916
#define HASCANONICALPROPERTY HASCANONICALPROPERTY528,30945
#define NOTPOSSIBLEVERBPARTICLEPAIR NOTPOSSIBLEVERBPARTICLEPAIR529,30977
#define PARSEMARK PARSEMARK531,31054
#define ISORIGINAL ISORIGINAL534,31098
#define ISCANONICAL ISCANONICAL535,31136
#define PRIORCANONICAL PRIORCANONICAL536,31185
#define ISMEMBER ISMEMBER537,31211
#define PRIORORIGINAL PRIORORIGINAL538,31256
#define POSTORIGINAL POSTORIGINAL539,31282
#define POSITION POSITION542,31326
#define START START543,31367
#define END END544,31390
#define RESETLOCATION RESETLOCATION545,31411
#define HAS2VERBS HAS2VERBS547,31438
#define ISQWORD ISQWORD548,31460
#define ISQUESTION ISQUESTION549,31479
#define ISABSTRACT ISABSTRACT550,31501
#define POSSIBLEINFINITIVE POSSIBLEINFINITIVE551,31523
#define POSSIBLEADJECTIVE POSSIBLEADJECTIVE552,31553
#define POSSIBLETOLESSVERB POSSIBLETOLESSVERB553,31582
#define POSSIBLEADJECTIVEPARTICIPLE POSSIBLEADJECTIVEPARTICIPLE554,31612
#define HOWSTART HOWSTART555,31651
#define POSSIBLEPHRASAL POSSIBLEPHRASAL556,31671
#define POSSIBLEPARTICLE POSSIBLEPARTICLE557,31698
#define ISCOMPARATIVE ISCOMPARATIVE558,31726
#define ISEXCLAIM ISEXCLAIM559,31751
#define ISORIGINALMEMBER ISORIGINALMEMBER560,31772
#define ISSUPERLATIVE ISSUPERLATIVE561,31800
#define SINGULAR SINGULAR562,31825
#define ISPROBABLE ISPROBABLE563,31845
#define PLURAL PLURAL564,31867
#define DUALNOUN DUALNOUN565,31885
#define LASTCONTROL LASTCONTROL566,31905
#define SKIP SKIP568,31970
#define STAY STAY569,32037
#define NOTCONTROL NOTCONTROL570,32052
#define DO_ESSENTIALS	DO_ESSENTIALS577,32340
#define DO_SUBSTITUTES	DO_SUBSTITUTES578,32387
#define DO_CONTRACTIONS	DO_CONTRACTIONS579,32434
#define DO_INTERJECTIONS	DO_INTERJECTIONS580,32482
#define DO_BRITISH	DO_BRITISH581,32530
#define DO_SPELLING	DO_SPELLING582,32575
#define DO_TEXTING	DO_TEXTING583,32621
#define DO_NOISE	DO_NOISE584,32666
#define DO_PRIVATE	DO_PRIVATE586,32761
#define DO_NUMBER_MERGE	DO_NUMBER_MERGE587,32812
#define DO_PROPERNAME_MERGE	DO_PROPERNAME_MERGE588,32867
#define DO_SPELLCHECK	DO_SPELLCHECK589,32926
#define DO_INTERJECTION_SPLITTING	DO_INTERJECTION_SPLITTING590,32981
#define DO_POSTAG	DO_POSTAG593,33083
#define DO_PARSE	DO_PARSE594,33136
#define NO_IMPERATIVE	NO_IMPERATIVE595,33220
#define NO_WITHIN	NO_WITHIN596,33266
#define DO_DATE_MERGE	DO_DATE_MERGE597,33345
#define NO_SENTENCE_END	NO_SENTENCE_END598,33391
#define NO_INFER_QUESTION	NO_INFER_QUESTION599,33441
#define DO_SUBSTITUTE_SYSTEM	DO_SUBSTITUTE_SYSTEM601,33514
#define PRESENT	PRESENT604,33735
#define PAST	PAST605,33779
#define FUTURE	FUTURE606,33885
#define PRESENT_PERFECT	PRESENT_PERFECT607,33929
#define CONTINUOUS	CONTINUOUS608,34033
#define PERFECT	PERFECT609,34081
#define PASSIVE	PASSIVE610,34127
#define NO_HYPHEN_END	NO_HYPHEN_END613,34224
#define NO_COLON_END	NO_COLON_END614,34328
#define NO_SEMICOLON_END	NO_SEMICOLON_END615,34428
#define STRICT_CASING	STRICT_CASING616,34537
#define ONLY_LOWERCASE	ONLY_LOWERCASE617,34637
#define TOKEN_AS_IS	TOKEN_AS_IS618,34749
#define SPLIT_QUOTE	SPLIT_QUOTE619,34831
#define LEAVE_QUOTE	LEAVE_QUOTE620,34918
#define UNTOUCHED_INPUT	UNTOUCHED_INPUT622,35054
#define IMPLIED_SUBJECT	IMPLIED_SUBJECT625,35208
#define QUESTIONMARK	QUESTIONMARK626,35287
#define EXCLAMATIONMARK	EXCLAMATIONMARK627,35334
#define PERIODMARK	PERIODMARK628,35385
#define USERINPUT	USERINPUT629,35432
#define COMMANDMARK COMMANDMARK630,35477
#define IMPLIED_YOU IMPLIED_YOU631,35522
#define FOREIGN_TOKENS	FOREIGN_TOKENS632,35623
#define FAULTY_PARSE	FAULTY_PARSE633,35670
#define QUOTATION	QUOTATION634,35718
#define NOT_SENTENCE	NOT_SENTENCE635,35761
#define NO_PROPER_SPELLCHECK	NO_PROPER_SPELLCHECK638,35845
#define NO_LOWERCASE_PROPER_MERGE	NO_LOWERCASE_PROPER_MERGE639,35900
#define DO_SPLIT_UNDERSCORE	DO_SPLIT_UNDERSCORE640,35959
#define MARK_LOWER	MARK_LOWER641,36014
#define NO_FIX_UTF	NO_FIX_UTF644,36098
#define NO_CONDITIONAL_IDIOM NO_CONDITIONAL_IDIOM645,36146
#define JSON_DIRECT_FROM_OOB	JSON_DIRECT_FROM_OOB647,36232
#define SENTENCE_TOKENFLAGS SENTENCE_TOKENFLAGS652,36339
#define    OUTPUT_ONCE	OUTPUT_ONCE655,36592
#define    OUTPUT_KEEPSET	OUTPUT_KEEPSET656,36629
#define    OUTPUT_KEEPVAR	OUTPUT_KEEPVAR657,36696
#define    OUTPUT_KEEPQUERYSET	OUTPUT_KEEPQUERYSET658,36780
#define    OUTPUT_SILENT	OUTPUT_SILENT659,36864
#define    OUTPUT_NOCOMMANUMBER OUTPUT_NOCOMMANUMBER660,36939
#define    OUTPUT_NOTREALBUFFER OUTPUT_NOTREALBUFFER661,37007
#define	   OUTPUT_ISOLATED_PERIOD OUTPUT_ISOLATED_PERIOD662,37086
#define    OUTPUT_NOQUOTES	OUTPUT_NOQUOTES663,37166
#define	   OUTPUT_LOOP	OUTPUT_LOOP664,37235
#define	   OUTPUT_UNTOUCHEDSTRING OUTPUT_UNTOUCHEDSTRING665,37325
#define	   OUTPUT_FACTREAD	OUTPUT_FACTREAD666,37392
#define    OUTPUT_EVALCODE	OUTPUT_EVALCODE667,37458
#define	   OUTPUT_DQUOTE_FLIP	OUTPUT_DQUOTE_FLIP668,37513
#define	   OUTPUT_ECHO	OUTPUT_ECHO669,37554
#define	   OUTPUT_STRING_EVALED OUTPUT_STRING_EVALED670,37590
#define    OUTPUT_NOUNDERSCORE OUTPUT_NOUNDERSCORE671,37688
#define    OUTPUT_FNDEFINITION OUTPUT_FNDEFINITION672,37763
#define    OUTPUT_RAW	OUTPUT_RAW673,37838
#define    OUTPUT_RETURNVALUE_ONLY	OUTPUT_RETURNVALUE_ONLY674,37938
#define    OUTPUT_FULLFLOAT	OUTPUT_FULLFLOAT675,38032
#define    OUTPUT_NODEBUG	OUTPUT_NODEBUG676,38090
#define RESPONSE_UPPERSTART	RESPONSE_UPPERSTART679,38239
#define RESPONSE_REMOVESPACEBEFORECOMMA	RESPONSE_REMOVESPACEBEFORECOMMA680,38326
#define RESPONSE_ALTERUNDERSCORES	RESPONSE_ALTERUNDERSCORES681,38410
#define RESPONSE_REMOVETILDE	RESPONSE_REMOVETILDE682,38457
#define RESPONSE_NOCONVERTSPECIAL	RESPONSE_NOCONVERTSPECIAL683,38500
#define RESPONSE_CURLYQUOTES	RESPONSE_CURLYQUOTES684,38547
#define ALL_RESPONSES ALL_RESPONSES685,38590
#define RESPONSE_NOFACTUALIZE RESPONSE_NOFACTUALIZE686,38750
#define ASSIGNMENT	ASSIGNMENT687,38805
typedef void (*DICTIONARY_FUNCTION)(WORDP D, uint64 data);DICTIONARY_FUNCTION690,38868

mysql/include/libmysql.c,15959
#define HAVE_STRUCT_TIMESPEC HAVE_STRUCT_TIMESPEC15,744
#define INADDR_NONE	INADDR_NONE48,1402
#define perror(perror64,1682
#define SOCKET_ERROR SOCKET_ERROR67,1725
#define MAX_LONG_DATA_LENGTH MAX_LONG_DATA_LENGTH74,1849
#define unsigned_field(unsigned_field75,1883
static my_bool mysql_client_init= 0;mysql_client_init79,2002
static my_bool org_my_init_done= 0;org_my_init_done80,2039
typedef struct st_mysql_stmt_extensionst_mysql_stmt_extension82,2076
  MEM_ROOT fields_mem_root;fields_mem_root84,2117
} MYSQL_STMT_EXT;MYSQL_STMT_EXT85,2145
int STDCALL mysql_server_init(int argc MY_ATTRIBUTE((unused)),mysql_server_init106,2627
void STDCALL mysql_server_end()mysql_server_end187,4778
my_bool STDCALL mysql_thread_init()mysql_thread_init214,5197
void STDCALL mysql_thread_end()mysql_thread_end219,5265
append_wild(char *to, char *end, const char *wild)append_wild230,5375
mysql_debug(const char *debug MY_ATTRIBUTE((unused)))mysql_debug255,5985
my_bool	STDCALL mysql_change_user(MYSQL *mysql, const char *user,mysql_change_user288,6859
void read_user_name(char *name)read_user_name361,8666
void read_user_name(char *name)read_user_name391,9314
my_bool handle_local_infile(MYSQL *mysql, const char *net_filename)handle_local_infile399,9476
typedef struct st_default_local_infilest_default_local_infile494,12511
  int fd;fd496,12552
  int error_num;error_num497,12562
  const char *filename;filename498,12579
  char error_msg[LOCAL_INFILE_ERROR_LEN];error_msg499,12603
} default_local_infile_data;default_local_infile_data500,12645
static int default_local_infile_init(void **ptr, const char *filename,default_local_infile_init521,13036
static int default_local_infile_read(void *ptr, char *buf, uint buf_len)default_local_infile_read565,14211
static void default_local_infile_end(void *ptr)default_local_infile_end593,14939
default_local_infile_error(void *ptr, char *error_msg, uint error_msg_len)default_local_infile_error620,15485
mysql_set_local_infile_handler(MYSQL *mysql,mysql_set_local_infile_handler635,15915
void mysql_set_local_infile_default(MYSQL *mysql)mysql_set_local_infile_default651,16631
mysql_query(MYSQL *mysql, const char *query)mysql_query666,17232
mysql_fetch_field(MYSQL_RES *result)mysql_fetch_field677,17562
mysql_data_seek(MYSQL_RES *result, my_ulonglong row)mysql_data_seek690,17928
mysql_row_seek(MYSQL_RES *result, MYSQL_ROW_OFFSET row)mysql_row_seek708,18593
mysql_field_seek(MYSQL_RES *result, MYSQL_FIELD_OFFSET field_offset)mysql_field_seek718,18812
mysql_list_dbs(MYSQL *mysql, const char *wild)mysql_list_dbs731,19205
mysql_list_tables(MYSQL *mysql, const char *wild)mysql_list_tables749,19752
MYSQL_FIELD *cli_list_fields(MYSQL *mysql)cli_list_fields761,20025
mysql_list_fields(MYSQL *mysql, const char *table, const char *wild)mysql_list_fields790,20906
mysql_list_processes(MYSQL *mysql)mysql_list_processes822,21901
mysql_shutdown(MYSQL *mysql, enum mysql_enum_shutdown_level shutdown_level)mysql_shutdown842,22433
mysql_refresh(MYSQL *mysql,uint options)mysql_refresh857,22812
mysql_kill(MYSQL *mysql,ulong pid)mysql_kill867,23010
mysql_set_server_option(MYSQL *mysql, enum enum_mysql_set_option option)mysql_set_server_option887,23697
mysql_dump_debug_info(MYSQL *mysql)mysql_dump_debug_info897,23957
const char *cli_read_statistics(MYSQL *mysql)cli_read_statistics904,24092
mysql_stat(MYSQL *mysql)mysql_stat922,24571
mysql_ping(MYSQL *mysql)mysql_ping932,24790
mysql_get_server_info(MYSQL *mysql)mysql_get_server_info944,25042
mysql_get_host_info(MYSQL *mysql)mysql_get_host_info951,25146
mysql_get_proto_info(MYSQL *mysql)mysql_get_proto_info958,25227
mysql_get_client_info(void)mysql_get_client_info964,25324
ulong STDCALL mysql_get_client_version(void)mysql_get_client_version969,25396
my_bool STDCALL mysql_eof(MYSQL_RES *res)mysql_eof974,25473
MYSQL_FIELD * STDCALL mysql_fetch_field_direct(MYSQL_RES *res,uint fieldnr)mysql_fetch_field_direct979,25539
MYSQL_FIELD * STDCALL mysql_fetch_fields(MYSQL_RES *res)mysql_fetch_fields984,25654
MYSQL_ROW_OFFSET STDCALL mysql_row_tell(MYSQL_RES *res)mysql_row_tell989,25740
MYSQL_FIELD_OFFSET STDCALL mysql_field_tell(MYSQL_RES *res)mysql_field_tell994,25828
unsigned int STDCALL mysql_field_count(MYSQL *mysql)mysql_field_count1001,25937
my_ulonglong STDCALL mysql_affected_rows(MYSQL *mysql)mysql_affected_rows1006,26024
my_ulonglong STDCALL mysql_insert_id(MYSQL *mysql)mysql_insert_id1011,26115
const char *STDCALL mysql_sqlstate(MYSQL *mysql)mysql_sqlstate1016,26198
uint STDCALL mysql_warning_count(MYSQL *mysql)mysql_warning_count1021,26314
const char *STDCALL mysql_info(MYSQL *mysql)mysql_info1026,26397
ulong STDCALL mysql_thread_id(MYSQL *mysql)mysql_thread_id1039,26597
const char * STDCALL mysql_character_set_name(MYSQL *mysql)mysql_character_set_name1050,26933
void STDCALL mysql_get_character_set_info(MYSQL *mysql, MY_CHARSET_INFO *csinfo)mysql_get_character_set_info1055,27031
uint STDCALL mysql_thread_safe(void)mysql_thread_safe1071,27554
my_bool STDCALL mysql_embedded(void)mysql_embedded1077,27609
void my_net_local_init(NET *net)my_net_local_init1094,27980
mysql_hex_string(char *to, const char *from, ulong length)mysql_hex_string1132,29542
mysql_escape_string(char *to,const char *from,ulong length)mysql_escape_string1153,30055
mysql_real_escape_string(MYSQL *mysql, char *to,const char *from,mysql_real_escape_string1186,31250
mysql_real_escape_string_quote(MYSQL *mysql, char *to, const char *from,mysql_real_escape_string_quote1229,32953
myodbc_remove_escape(MYSQL *mysql,char *name)myodbc_remove_escape1239,33386
#define DEFAULT_PREFETCH_ROWS DEFAULT_PREFETCH_ROWS1280,34534
#define RESET_SERVER_SIDE RESET_SERVER_SIDE1305,35584
#define RESET_LONG_DATA RESET_LONG_DATA1306,35612
#define RESET_STORE_RESULT RESET_STORE_RESULT1307,35638
#define RESET_CLEAR_ERROR RESET_CLEAR_ERROR1308,35667
#define MAX_DATE_REP_LENGTH MAX_DATE_REP_LENGTH1318,35926
#define MAX_TIME_REP_LENGTH MAX_TIME_REP_LENGTH1324,36069
#define MAX_DATETIME_REP_LENGTH MAX_DATETIME_REP_LENGTH1330,36211
#define MAX_DOUBLE_STRING_REP_LENGTH MAX_DOUBLE_STRING_REP_LENGTH1332,36247
#define IS_TRUNCATED(IS_TRUNCATED1336,36331
#define BIND_RESULT_DONE BIND_RESULT_DONE1340,36538
#define REPORT_DATA_TRUNCATION REPORT_DATA_TRUNCATION1346,36715
static my_bool my_realloc_str(NET *net, ulong length)my_realloc_str1365,37280
static void stmt_clear_error(MYSQL_STMT *stmt)stmt_clear_error1389,37944
void set_stmt_error(MYSQL_STMT * stmt, int errcode,set_stmt_error1404,38234
void set_stmt_errmsg(MYSQL_STMT *stmt, NET *net)set_stmt_errmsg1429,38826
my_bool cli_read_prepare_result(MYSQL *mysql, MYSQL_STMT *stmt)cli_read_prepare_result1460,39529
mysql_stmt_init(MYSQL *mysql)mysql_stmt_init1547,42427
mysql_stmt_prepare(MYSQL_STMT *stmt, const char *query, ulong length)mysql_stmt_prepare1619,44939
static void alloc_stmt_fields(MYSQL_STMT *stmt)alloc_stmt_fields1710,47729
static void update_stmt_fields(MYSQL_STMT *stmt)update_stmt_fields1784,50241
mysql_stmt_result_metadata(MYSQL_STMT *stmt)mysql_stmt_result_metadata1852,52590
mysql_stmt_param_metadata(MYSQL_STMT *stmt)mysql_stmt_param_metadata1900,53860
static void store_param_type(unsigned char **pos, MYSQL_BIND *param)store_param_type1917,54172
static void store_param_tinyint(NET *net, MYSQL_BIND *param)store_param_tinyint1941,54861
static void store_param_short(NET *net, MYSQL_BIND *param)store_param_short1946,54976
static void store_param_int32(NET *net, MYSQL_BIND *param)store_param_int321953,55136
static void store_param_int64(NET *net, MYSQL_BIND *param)store_param_int641960,55296
static void store_param_float(NET *net, MYSQL_BIND *param)store_param_float1967,55463
static void store_param_double(NET *net, MYSQL_BIND *param)store_param_double1974,55627
static void store_param_time(NET *net, MYSQL_BIND *param)store_param_time1981,55794
static void net_store_datetime(NET *net, MYSQL_TIME *tm)net_store_datetime2005,56396
static void store_param_date(NET *net, MYSQL_BIND *param)store_param_date2032,57032
static void store_param_datetime(NET *net, MYSQL_BIND *param)store_param_datetime2039,57229
static void store_param_str(NET *net, MYSQL_BIND *param)store_param_str2045,57375
static void store_param_null(NET *net, MYSQL_BIND *param)store_param_null2069,57991
static my_bool store_param(MYSQL_STMT *stmt, MYSQL_BIND *param)store_param2082,58295
static inline int add_binary_row(NET *net, MYSQL_STMT *stmt, ulong pkt_len, MYSQL_ROWS ***prev_padd_binary_row2109,59056
static my_bool execute(MYSQL_STMT *stmt, char *packet, ulong length)execute2134,59850
int cli_stmt_execute(MYSQL_STMT *stmt)cli_stmt_execute2206,62288
static int stmt_read_row_buffered(MYSQL_STMT *stmt, unsigned char **row)stmt_read_row_buffered2304,65090
static int stmt_read_row_unbuffered(MYSQL_STMT *stmt, unsigned char **row)stmt_read_row_unbuffered2335,65999
stmt_read_row_from_cursor(MYSQL_STMT *stmt, unsigned char **row)stmt_read_row_from_cursor2394,67454
stmt_read_row_no_data(MYSQL_STMT *stmt  MY_ATTRIBUTE((unused)),stmt_read_row_no_data2444,68957
stmt_read_row_no_result_set(MYSQL_STMT *stmt  MY_ATTRIBUTE((unused)),stmt_read_row_no_result_set2451,69128
my_bool STDCALL mysql_stmt_attr_set(MYSQL_STMT *stmt,mysql_stmt_attr_set2474,69600
my_bool STDCALL mysql_stmt_attr_get(MYSQL_STMT *stmt,mysql_stmt_attr_get2509,70527
static void reinit_result_set_metadata(MYSQL_STMT *stmt)reinit_result_set_metadata2541,71329
static void prepare_to_fetch_result(MYSQL_STMT *stmt)prepare_to_fetch_result2577,72481
int STDCALL mysql_stmt_execute(MYSQL_STMT *stmt)mysql_stmt_execute2648,75078
ulong STDCALL mysql_stmt_param_count(MYSQL_STMT * stmt)mysql_stmt_param_count2681,75840
my_ulonglong STDCALL mysql_stmt_affected_rows(MYSQL_STMT *stmt)mysql_stmt_affected_rows2691,76035
unsigned int STDCALL mysql_stmt_field_count(MYSQL_STMT *stmt)mysql_stmt_field_count2702,76232
my_ulonglong STDCALL mysql_stmt_insert_id(MYSQL_STMT *stmt)mysql_stmt_insert_id2723,76889
static my_bool int_is_null_true= 1;		/* Used for MYSQL_TYPE_NULL */int_is_null_true2729,76981
static my_bool int_is_null_false= 0;int_is_null_false2730,77049
my_bool STDCALL mysql_stmt_bind_param(MYSQL_STMT *stmt, MYSQL_BIND *my_bind)mysql_stmt_bind_param2902,85840
mysql_stmt_send_long_data(MYSQL_STMT *stmt, uint param_number,mysql_stmt_send_long_data3063,91163
static void read_binary_time(MYSQL_TIME *tm, uchar **pos)read_binary_time3147,93786
static void read_binary_datetime(MYSQL_TIME *tm, uchar **pos)read_binary_datetime3177,94474
static void read_binary_date(MYSQL_TIME *tm, uchar **pos)read_binary_date3207,95108
static void fetch_string_with_conversion(MYSQL_BIND *param, char *value,fetch_string_with_conversion3240,95732
static void fetch_long_with_conversion(MYSQL_BIND *param, MYSQL_FIELD *field,fetch_long_with_conversion3374,99540
static void fetch_float_with_conversion(MYSQL_BIND *param, MYSQL_FIELD *field,fetch_float_with_conversion3483,102724
static void fetch_datetime_with_conversion(MYSQL_BIND *param,fetch_datetime_with_conversion3600,106055
static void fetch_result_with_conversion(MYSQL_BIND *param, MYSQL_FIELD *field,fetch_result_with_conversion3674,108209
static void fetch_result_tinyint(MYSQL_BIND *param, MYSQL_FIELD *field,fetch_result_tinyint3790,111125
static void fetch_result_short(MYSQL_BIND *param, MYSQL_FIELD *field,fetch_result_short3800,111459
static void fetch_result_int32(MYSQL_BIND *param,fetch_result_int323810,111812
static void fetch_result_int64(MYSQL_BIND *param,fetch_result_int643821,112218
static void fetch_result_float(MYSQL_BIND *param,fetch_result_float3832,112634
static void fetch_result_double(MYSQL_BIND *param,fetch_result_double3842,112896
static void fetch_result_time(MYSQL_BIND *param,fetch_result_time3852,113163
static void fetch_result_date(MYSQL_BIND *param,fetch_result_date3860,113409
static void fetch_result_datetime(MYSQL_BIND *param,fetch_result_datetime3868,113655
static void fetch_result_bin(MYSQL_BIND *param,fetch_result_bin3876,113917
static void fetch_result_str(MYSQL_BIND *param,fetch_result_str3888,114316
static void skip_result_fixed(MYSQL_BIND *param,skip_result_fixed3909,114982
static void skip_result_with_length(MYSQL_BIND *param MY_ATTRIBUTE((unused)),skip_result_with_length3918,115143
static void skip_result_string(MYSQL_BIND *param MY_ATTRIBUTE((unused)),skip_result_string3928,115358
static my_bool is_binary_compatible(enum enum_field_types type1,is_binary_compatible3954,115950
    range1[]= { MYSQL_TYPE_SHORT, MYSQL_TYPE_YEAR, MYSQL_TYPE_NULL },range13958,116119
    range1[]= { MYSQL_TYPE_SHORT, MYSQL_TYPE_YEAR, MYSQL_TYPE_NULL },MYSQL_TYPE_SHORT3958,116119
    range1[]= { MYSQL_TYPE_SHORT, MYSQL_TYPE_YEAR, MYSQL_TYPE_NULL },MYSQL_TYPE_YEAR3958,116119
    range1[]= { MYSQL_TYPE_SHORT, MYSQL_TYPE_YEAR, MYSQL_TYPE_NULL },MYSQL_TYPE_NULL3958,116119
   *range_list[]= { range1, range2, range3, range4 },range_list3966,116658
   *range_list[]= { range1, range2, range3, range4 },range13966,116658
   *range_list[]= { range1, range2, range3, range4 },range23966,116658
   *range_list[]= { range1, range2, range3, range4 },range33966,116658
   *range_list[]= { range1, range2, range3, range4 },range43966,116658
static my_bool setup_one_fetch_function(MYSQL_BIND *param, MYSQL_FIELD *field)setup_one_fetch_function4013,118118
my_bool STDCALL mysql_stmt_bind_result(MYSQL_STMT *stmt, MYSQL_BIND *my_bind)mysql_stmt_bind_result4167,122651
static int stmt_fetch_row(MYSQL_STMT *stmt, uchar *row)stmt_fetch_row4239,124722
int cli_unbuffered_fetch(MYSQL *mysql, char **row)cli_unbuffered_fetch4300,126386
int STDCALL mysql_stmt_fetch(MYSQL_STMT *stmt)mysql_stmt_fetch4331,127015
int STDCALL mysql_stmt_fetch_column(MYSQL_STMT *stmt, MYSQL_BIND *my_bind,mysql_stmt_fetch_column4369,127987
int cli_read_binary_rows(MYSQL_STMT *stmt)cli_read_binary_rows4415,129181
static void stmt_update_metadata(MYSQL_STMT *stmt, MYSQL_ROWS *data)stmt_update_metadata4511,131979
int STDCALL mysql_stmt_store_result(MYSQL_STMT *stmt)mysql_stmt_store_result4546,132804
mysql_stmt_row_seek(MYSQL_STMT *stmt, MYSQL_ROW_OFFSET row)mysql_stmt_row_seek4663,136100
mysql_stmt_row_tell(MYSQL_STMT *stmt)mysql_stmt_row_tell4678,136382
mysql_stmt_data_seek(MYSQL_STMT *stmt, my_ulonglong row)mysql_stmt_data_seek4691,136574
my_ulonglong STDCALL mysql_stmt_num_rows(MYSQL_STMT *stmt)mysql_stmt_num_rows4714,137079
static my_bool reset_stmt_handle(MYSQL_STMT *stmt, uint flags)reset_stmt_handle4728,137376
my_bool STDCALL mysql_stmt_free_result(MYSQL_STMT *stmt)mysql_stmt_free_result4795,139539
my_bool STDCALL mysql_stmt_close(MYSQL_STMT *stmt)mysql_stmt_close4820,140203
my_bool STDCALL mysql_stmt_reset(MYSQL_STMT *stmt)mysql_stmt_reset4877,141891
uint STDCALL mysql_stmt_errno(MYSQL_STMT * stmt)mysql_stmt_errno4897,142459
const char *STDCALL mysql_stmt_sqlstate(MYSQL_STMT * stmt)mysql_stmt_sqlstate4903,142580
const char *STDCALL mysql_stmt_error(MYSQL_STMT * stmt)mysql_stmt_error4913,142752
my_bool STDCALL mysql_commit(MYSQL * mysql)mysql_commit4928,143083
my_bool STDCALL mysql_rollback(MYSQL * mysql)mysql_rollback4938,143267
my_bool STDCALL mysql_autocommit(MYSQL * mysql, my_bool auto_mode)mysql_autocommit4949,143464
my_bool STDCALL mysql_more_results(MYSQL *mysql)mysql_more_results4969,144100
int STDCALL mysql_next_result(MYSQL *mysql)mysql_next_result4983,144401
int STDCALL mysql_stmt_next_result(MYSQL_STMT *stmt)mysql_stmt_next_result5009,144974
MYSQL_RES * STDCALL mysql_use_result(MYSQL *mysql)mysql_use_result5052,145797
my_bool STDCALL mysql_read_query_result(MYSQL *mysql)mysql_read_query_result5057,145900
mysql_reset_connection(MYSQL *mysql)mysql_reset_connection5063,146025

mysql/include/mysql_com_server.h,483
#define _mysql_com_server_h_mysql_com_server_h22,869
typedef void (*before_header_callback_fn)before_header_callback_fn26,921
typedef void (*after_header_callback_fn)after_header_callback_fn29,1019
struct st_net_serverst_net_server32,1128
  before_header_callback_fn m_before_header;m_before_header34,1151
  after_header_callback_fn m_after_header;m_after_header35,1196
  void *m_user_data;m_user_data36,1239
typedef struct st_net_server NET_SERVER;NET_SERVER39,1264

mysql/include/byte_order_generic.h,596
static inline int16 sint2korr(const uchar *A)sint2korr20,842
static inline int32 sint4korr(const uchar *A)sint4korr28,976
static inline uint16 uint2korr(const uchar *A)uint2korr38,1192
static inline uint32 uint4korr(const uchar *A)uint4korr46,1331
static inline ulonglong uint8korr(const uchar *A)uint8korr56,1556
static inline longlong  sint8korr(const uchar *A)sint8korr71,1995
static inline void int2store(uchar *T, uint16 A)int2store76,2084
static inline void int4store(uchar *T, uint32 A)int4store83,2222
static inline void int8store(uchar *T, ulonglong A)int8store91,2381

mysql/include/my_command.h,1412
#define _mysql_command_h_mysql_command_h17,734
enum enum_server_commandenum_server_command24,936
  COM_SLEEP,COM_SLEEP26,963
  COM_QUIT,COM_QUIT27,976
  COM_INIT_DB,COM_INIT_DB28,988
  COM_QUERY,COM_QUERY29,1003
  COM_FIELD_LIST,COM_FIELD_LIST30,1016
  COM_CREATE_DB,COM_CREATE_DB31,1034
  COM_DROP_DB,COM_DROP_DB32,1051
  COM_REFRESH,COM_REFRESH33,1066
  COM_SHUTDOWN,COM_SHUTDOWN34,1081
  COM_STATISTICS,COM_STATISTICS35,1097
  COM_PROCESS_INFO,COM_PROCESS_INFO36,1115
  COM_CONNECT,COM_CONNECT37,1135
  COM_PROCESS_KILL,COM_PROCESS_KILL38,1150
  COM_DEBUG,COM_DEBUG39,1170
  COM_PING,COM_PING40,1183
  COM_TIME,COM_TIME41,1195
  COM_DELAYED_INSERT,COM_DELAYED_INSERT42,1207
  COM_CHANGE_USER,COM_CHANGE_USER43,1229
  COM_BINLOG_DUMP,COM_BINLOG_DUMP44,1248
  COM_TABLE_DUMP,COM_TABLE_DUMP45,1267
  COM_CONNECT_OUT,COM_CONNECT_OUT46,1285
  COM_REGISTER_SLAVE,COM_REGISTER_SLAVE47,1304
  COM_STMT_PREPARE,COM_STMT_PREPARE48,1326
  COM_STMT_EXECUTE,COM_STMT_EXECUTE49,1346
  COM_STMT_SEND_LONG_DATA,COM_STMT_SEND_LONG_DATA50,1366
  COM_STMT_CLOSE,COM_STMT_CLOSE51,1393
  COM_STMT_RESET,COM_STMT_RESET52,1411
  COM_SET_OPTION,COM_SET_OPTION53,1429
  COM_STMT_FETCH,COM_STMT_FETCH54,1447
  COM_DAEMON,COM_DAEMON55,1465
  COM_BINLOG_DUMP_GTID,COM_BINLOG_DUMP_GTID56,1479
  COM_RESET_CONNECTION,COM_RESET_CONNECTION57,1503
  COM_ENDCOM_END61,1623

mysql/include/thr_rwlock.h,1564
#define THR_RWLOCK_INCLUDEDTHR_RWLOCK_INCLUDED2,28
typedef struct st_my_rw_lock_tst_my_rw_lock_t43,1419
  SRWLOCK srwlock;             /* native reader writer lock */srwlock45,1452
  BOOL have_exclusive_srwlock; /* used for unlock */have_exclusive_srwlock46,1515
} native_rw_lock_t;native_rw_lock_t47,1568
static inline int native_rw_init(native_rw_lock_t *rwp)native_rw_init52,1645
static inline int native_rw_destroy(native_rw_lock_t *rwp)native_rw_destroy64,1911
static inline int native_rw_rdlock(native_rw_lock_t *rwp)native_rw_rdlock73,2078
static inline int native_rw_tryrdlock(native_rw_lock_t *rwp)native_rw_tryrdlock83,2256
static inline int native_rw_wrlock(native_rw_lock_t *rwp)native_rw_wrlock94,2466
static inline int native_rw_trywrlock(native_rw_lock_t *rwp)native_rw_trywrlock105,2684
static inline int native_rw_unlock(native_rw_lock_t *rwp)native_rw_unlock117,2934
typedef struct st_rw_pr_lock_t {st_rw_pr_lock_t165,4659
  native_mutex_t lock;lock170,4785
  native_cond_t no_active_readers;no_active_readers175,4911
  uint active_readers;active_readers177,4981
  uint writers_waiting_readers;writers_waiting_readers179,5063
  my_bool active_writer;active_writer181,5149
  my_thread_t writer_thread;writer_thread184,5251
} rw_pr_lock_t;rw_pr_lock_t186,5287
rw_pr_lock_assert_write_owner(const rw_pr_lock_t *rwlock MY_ATTRIBUTE((unused)))rw_pr_lock_assert_write_owner195,5528
rw_pr_lock_assert_not_write_owner(const rw_pr_lock_t *rwlock MY_ATTRIBUTE((unused)))rw_pr_lock_assert_not_write_owner204,5770

mysql/include/my_byteorder.h,1774
#define MY_BYTEORDER_INCLUDEDMY_BYTEORDER_INCLUDED2,30
static inline int32 sint3korr(const uchar *A)sint3korr31,1167
static inline uint32 uint3korr(const uchar *A)uint3korr45,1529
static inline ulonglong uint5korr(const uchar *A)uint5korr54,1712
static inline ulonglong uint6korr(const uchar *A)uint6korr65,1989
static inline void int3store(uchar *T, uint A)int3store77,2314
static inline void int5store(uchar *T, ulonglong A)int5store84,2446
static inline void int6store(uchar *T, ulonglong A)int6store93,2641
static inline int16 sint2korr(const char *pT)sint2korr105,2885
static inline uint16    uint2korr(const char *pT)uint2korr110,3013
static inline uint32    uint3korr(const char *pT)uint3korr115,3145
static inline int32     sint3korr(const char *pT)sint3korr120,3277
static inline uint32    uint4korr(const char *pT)uint4korr125,3409
static inline int32     sint4korr(const char *pT)sint4korr130,3541
static inline ulonglong uint6korr(const char *pT)uint6korr135,3673
static inline ulonglong uint8korr(const char *pT)uint8korr140,3805
static inline longlong  sint8korr(const char *pT)sint8korr145,3937
static inline void int2store(char *pT, uint16 A)int2store151,4070
static inline void int3store(char *pT, uint A)int3store156,4185
static inline void int4store(char *pT, uint32 A)int4store161,4298
static inline void int5store(char *pT, ulonglong A)int5store166,4413
static inline void int6store(char *pT, ulonglong A)int6store171,4531
static inline void int8store(char *pT, ulonglong A)int8store176,4649
static inline void float4store(char *V, float M)float4store196,5062
static inline void float8get(double *V, const char *M)float8get201,5178
static inline void float8store(char *V, double M)float8store206,5310

mysql/include/my_config.h,6875
#define MY_CONFIG_HMY_CONFIG_H17,749
#define _LARGEFILE_SOURCE _LARGEFILE_SOURCE23,856
#define HAVE_MALLOC_H HAVE_MALLOC_H44,1349
#define HAVE_ALIGNED_MALLOC HAVE_ALIGNED_MALLOC73,2092
#define HAVE_COMPRESS HAVE_COMPRESS81,2316
#define HAVE_STRNLEN HAVE_STRNLEN128,3610
#define HAVE_TELL HAVE_TELL133,3737
#define HAVE_LOG2 HAVE_LOG2161,4467
#define HAVE_ISINF HAVE_ISINF163,4488
#define SIZEOF_VOIDP SIZEOF_VOIDP172,4637
#define SIZEOF_CHARP SIZEOF_CHARP173,4664
#define SIZEOF_LONG SIZEOF_LONG174,4691
#define SIZEOF_SHORT SIZEOF_SHORT175,4718
#define SIZEOF_INT SIZEOF_INT176,4745
#define SIZEOF_LONG_LONG SIZEOF_LONG_LONG177,4772
#define SIZEOF_OFF_T SIZEOF_OFF_T178,4799
#define SIZEOF_TIME_T SIZEOF_TIME_T179,4826
#define STACK_DIRECTION STACK_DIRECTION189,5093
#define NO_FCNTL_NONBLOCK NO_FCNTL_NONBLOCK191,5152
#define HAVE_STRUCT_SOCKADDR_IN6 HAVE_STRUCT_SOCKADDR_IN6206,5612
#define HAVE_STRUCT_IN6_ADDR HAVE_STRUCT_IN6_ADDR207,5647
#define HAVE_IPV6 HAVE_IPV6208,5678
#define MACHINE_TYPE MACHINE_TYPE217,5841
#define SYSTEM_TYPE SYSTEM_TYPE222,6017
#define FN_NO_CASE_SENSE FN_NO_CASE_SENSE227,6233
#define MAX_INDEXES MAX_INDEXES232,6296
#define ENABLED_PROFILING ENABLED_PROFILING236,6430
#define ENABLED_LOCAL_INFILE ENABLED_LOCAL_INFILE238,6481
#define OPTIMIZER_TRACE OPTIMIZER_TRACE239,6512
#define DEFAULT_MYSQL_HOME DEFAULT_MYSQL_HOME240,6538
#define SHAREDIR SHAREDIR241,6607
#define DEFAULT_BASEDIR DEFAULT_BASEDIR242,6632
#define MYSQL_DATADIR MYSQL_DATADIR243,6698
#define MYSQL_KEYRINGDIR MYSQL_KEYRINGDIR244,6767
#define DEFAULT_CHARSET_HOME DEFAULT_CHARSET_HOME245,6842
#define PLUGINDIR PLUGINDIR246,6913
#define DEFAULT_TMPDIR DEFAULT_TMPDIR248,7016
#define INSTALL_SBINDIR INSTALL_SBINDIR249,7042
#define INSTALL_BINDIR INSTALL_BINDIR250,7073
#define INSTALL_MYSQLSHAREDIR INSTALL_MYSQLSHAREDIR251,7103
#define INSTALL_SHAREDIR INSTALL_SHAREDIR252,7142
#define INSTALL_PLUGINDIR INSTALL_PLUGINDIR253,7176
#define INSTALL_INCLUDEDIR INSTALL_INCLUDEDIR254,7216
#define INSTALL_SCRIPTDIR INSTALL_SCRIPTDIR255,7254
#define INSTALL_MYSQLDATADIR INSTALL_MYSQLDATADIR256,7291
#define INSTALL_MYSQLKEYRINGDIR INSTALL_MYSQLKEYRINGDIR257,7328
#define INSTALL_INFODIR INSTALL_INFODIR259,7406
#define INSTALL_MYSQLTESTDIR INSTALL_MYSQLTESTDIR260,7438
#define INSTALL_DOCREADMEDIR INSTALL_DOCREADMEDIR261,7481
#define INSTALL_DOCDIR INSTALL_DOCDIR262,7515
#define INSTALL_MANDIR INSTALL_MANDIR263,7546
#define INSTALL_SUPPORTFILESDIR INSTALL_SUPPORTFILESDIR264,7576
#define INSTALL_LIBDIR INSTALL_LIBDIR265,7625
#define MYSQL_DEFAULT_CHARSET_NAME MYSQL_DEFAULT_CHARSET_NAME294,8090
#define MYSQL_DEFAULT_COLLATION_NAME MYSQL_DEFAULT_COLLATION_NAME295,8134
#define HAVE_CHARSET_armscii8 HAVE_CHARSET_armscii8296,8191
#define HAVE_CHARSET_ascii HAVE_CHARSET_ascii297,8223
#define HAVE_CHARSET_big5 HAVE_CHARSET_big5298,8252
#define HAVE_CHARSET_cp1250 HAVE_CHARSET_cp1250299,8280
#define HAVE_CHARSET_cp1251 HAVE_CHARSET_cp1251300,8310
#define HAVE_CHARSET_cp1256 HAVE_CHARSET_cp1256301,8340
#define HAVE_CHARSET_cp1257 HAVE_CHARSET_cp1257302,8370
#define HAVE_CHARSET_cp850 HAVE_CHARSET_cp850303,8400
#define HAVE_CHARSET_cp852 HAVE_CHARSET_cp852304,8429
#define HAVE_CHARSET_cp866 HAVE_CHARSET_cp866305,8459
#define HAVE_CHARSET_cp932 HAVE_CHARSET_cp932306,8488
#define HAVE_CHARSET_dec8 HAVE_CHARSET_dec8307,8517
#define HAVE_CHARSET_eucjpms HAVE_CHARSET_eucjpms308,8545
#define HAVE_CHARSET_euckr HAVE_CHARSET_euckr309,8576
#define HAVE_CHARSET_gb2312 HAVE_CHARSET_gb2312310,8605
#define HAVE_CHARSET_gbk HAVE_CHARSET_gbk311,8635
#define HAVE_CHARSET_gb18030 HAVE_CHARSET_gb18030312,8662
#define HAVE_CHARSET_geostd8 HAVE_CHARSET_geostd8313,8693
#define HAVE_CHARSET_greek HAVE_CHARSET_greek314,8724
#define HAVE_CHARSET_hebrew HAVE_CHARSET_hebrew315,8753
#define HAVE_CHARSET_hp8 HAVE_CHARSET_hp8316,8783
#define HAVE_CHARSET_keybcs2 HAVE_CHARSET_keybcs2317,8810
#define HAVE_CHARSET_koi8r HAVE_CHARSET_koi8r318,8841
#define HAVE_CHARSET_koi8u HAVE_CHARSET_koi8u319,8870
#define HAVE_CHARSET_latin1 HAVE_CHARSET_latin1320,8899
#define HAVE_CHARSET_latin2 HAVE_CHARSET_latin2321,8929
#define HAVE_CHARSET_latin5 HAVE_CHARSET_latin5322,8959
#define HAVE_CHARSET_latin7 HAVE_CHARSET_latin7323,8989
#define HAVE_CHARSET_macce HAVE_CHARSET_macce324,9019
#define HAVE_CHARSET_macroman HAVE_CHARSET_macroman325,9048
#define HAVE_CHARSET_sjis HAVE_CHARSET_sjis326,9080
#define HAVE_CHARSET_swe7 HAVE_CHARSET_swe7327,9108
#define HAVE_CHARSET_tis620 HAVE_CHARSET_tis620328,9136
#define HAVE_CHARSET_ucs2 HAVE_CHARSET_ucs2329,9166
#define HAVE_CHARSET_ujis HAVE_CHARSET_ujis330,9194
#define HAVE_CHARSET_utf8mb4 HAVE_CHARSET_utf8mb4331,9222
#define HAVE_CHARSET_utf8 HAVE_CHARSET_utf8333,9287
#define HAVE_CHARSET_utf16 HAVE_CHARSET_utf16334,9315
#define HAVE_CHARSET_utf32 HAVE_CHARSET_utf32335,9344
#define HAVE_UCA_COLLATIONS HAVE_UCA_COLLATIONS336,9373
#define WITH_PARTITION_STORAGE_ENGINE WITH_PARTITION_STORAGE_ENGINE341,9426
#define WITH_PERFSCHEMA_STORAGE_ENGINE WITH_PERFSCHEMA_STORAGE_ENGINE346,9496
#define HAVE_IMPLICIT_DEPENDENT_NAME_TYPING HAVE_IMPLICIT_DEPENDENT_NAME_TYPING383,10717
#define DOT_FRM_VERSION DOT_FRM_VERSION389,10789
#define MYSQL_VERSION_MAJOR MYSQL_VERSION_MAJOR390,10815
#define MYSQL_VERSION_MINOR MYSQL_VERSION_MINOR391,10845
#define MYSQL_VERSION_PATCH MYSQL_VERSION_PATCH392,10875
#define MYSQL_VERSION_EXTRA MYSQL_VERSION_EXTRA393,10906
#define PACKAGE PACKAGE394,10937
#define PACKAGE_BUGREPORT PACKAGE_BUGREPORT395,10961
#define PACKAGE_NAME PACKAGE_NAME396,10990
#define PACKAGE_STRING PACKAGE_STRING397,11026
#define PACKAGE_TARNAME PACKAGE_TARNAME398,11071
#define PACKAGE_VERSION PACKAGE_VERSION399,11103
#define VERSION VERSION400,11136
#define PROTOCOL_VERSION PROTOCOL_VERSION401,11161
#define CPU_LEVEL1_DCACHE_LINESIZE CPU_LEVEL1_DCACHE_LINESIZE406,11209
#define HAVE_FCNTL_H HAVE_FCNTL_H423,11473
#define HAVE_GETADDRINFO HAVE_GETADDRINFO424,11496
#define HAVE_INTTYPES_H HAVE_INTTYPES_H425,11523
#define HAVE_SELECT HAVE_SELECT428,11616
#define HAVE_SIGNAL_H HAVE_SIGNAL_H430,11645
#define HAVE_STDARG_H HAVE_STDARG_H431,11669
#define HAVE_STDINT_H HAVE_STDINT_H432,11693
#define HAVE_STDLIB_H HAVE_STDLIB_H433,11717
#define HAVE_STRDUP HAVE_STRDUP434,11741
#define HAVE_STRTOK_R HAVE_STRTOK_R435,11763
#define HAVE_STRTOLL HAVE_STRTOLL436,11787
#define HAVE_SYS_STAT_H HAVE_SYS_STAT_H437,11810
#define HAVE_SYS_TYPES_H HAVE_SYS_TYPES_H438,11836
#define SIZEOF_CHAR SIZEOF_CHAR439,11863
#define DEFAULT_SECURE_FILE_PRIV_DIR DEFAULT_SECURE_FILE_PRIV_DIR447,11973
#define DEFAULT_SECURE_FILE_PRIV_EMBEDDED_DIR DEFAULT_SECURE_FILE_PRIV_EMBEDDED_DIR448,12013

mysql/include/my_thread_local.h,565
#define MY_THREAD_LOCAL_INCLUDEDMY_THREAD_LOCAL_INCLUDED17,778
typedef uint32 my_thread_id;my_thread_id24,880
typedef DWORD thread_local_key_t;thread_local_key_t29,938
static inline int my_create_thread_local_key(thread_local_key_t *key,my_create_thread_local_key34,1028
static inline int my_delete_thread_local_key(thread_local_key_t key)my_delete_thread_local_key45,1308
static inline void* my_get_thread_local(thread_local_key_t key)my_get_thread_local54,1467
static inline int my_set_thread_local(thread_local_key_t key,my_set_thread_local63,1625

mysql/include/plugin.h,9846
#define _my_plugin_h_my_plugin_h17,766
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT33,1173
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT35,1246
    #define  MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT39,1363
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT41,1415
#define MYSQL_PLUGIN_EXPORTMYSQL_PLUGIN_EXPORT45,1510
#define MYSQL_THD MYSQL_THD51,1588
#define MYSQL_THD MYSQL_THD53,1617
typedef void * MYSQL_PLUGIN;MYSQL_PLUGIN56,1649
#define MYSQL_XIDDATASIZE MYSQL_XIDDATASIZE62,1739
struct st_mysql_xid {st_mysql_xid71,2050
  long formatID;formatID72,2072
  long gtrid_length;gtrid_length73,2089
  long bqual_length;bqual_length74,2110
  char data[MYSQL_XIDDATASIZE];  /* Not \0-terminated */data75,2131
typedef struct st_mysql_xid MYSQL_XID;MYSQL_XID77,2191
#define MYSQL_PLUGIN_INTERFACE_VERSION MYSQL_PLUGIN_INTERFACE_VERSION83,2353
#define MYSQL_UDF_PLUGIN MYSQL_UDF_PLUGIN88,2439
#define MYSQL_STORAGE_ENGINE_PLUGIN MYSQL_STORAGE_ENGINE_PLUGIN89,2514
#define MYSQL_FTPARSER_PLUGIN MYSQL_FTPARSER_PLUGIN90,2589
#define MYSQL_DAEMON_PLUGIN MYSQL_DAEMON_PLUGIN91,2664
#define MYSQL_INFORMATION_SCHEMA_PLUGIN MYSQL_INFORMATION_SCHEMA_PLUGIN92,2737
#define MYSQL_AUDIT_PLUGIN MYSQL_AUDIT_PLUGIN93,2807
#define MYSQL_REPLICATION_PLUGIN MYSQL_REPLICATION_PLUGIN94,2882
#define MYSQL_AUTHENTICATION_PLUGIN MYSQL_AUTHENTICATION_PLUGIN95,2955
#define MYSQL_VALIDATE_PASSWORD_PLUGIN MYSQL_VALIDATE_PASSWORD_PLUGIN96,3032
#define MYSQL_GROUP_REPLICATION_PLUGIN MYSQL_GROUP_REPLICATION_PLUGIN97,3112
#define MYSQL_KEYRING_PLUGIN MYSQL_KEYRING_PLUGIN98,3190
#define MYSQL_MAX_PLUGIN_TYPE_NUM MYSQL_MAX_PLUGIN_TYPE_NUM99,3263
#define PLUGIN_LICENSE_PROPRIETARY PLUGIN_LICENSE_PROPRIETARY102,3406
#define PLUGIN_LICENSE_GPL PLUGIN_LICENSE_GPL103,3443
#define PLUGIN_LICENSE_BSD PLUGIN_LICENSE_BSD104,3472
#define PLUGIN_LICENSE_PROPRIETARY_STRING PLUGIN_LICENSE_PROPRIETARY_STRING106,3502
#define PLUGIN_LICENSE_GPL_STRING PLUGIN_LICENSE_GPL_STRING107,3558
#define PLUGIN_LICENSE_BSD_STRING PLUGIN_LICENSE_BSD_STRING108,3598
#define __MYSQL_DECLARE_PLUGIN(__MYSQL_DECLARE_PLUGIN118,3867
#define __MYSQL_DECLARE_PLUGIN(__MYSQL_DECLARE_PLUGIN123,4207
#define mysql_declare_plugin(mysql_declare_plugin129,4571
#define mysql_declare_plugin_end mysql_declare_plugin_end135,4817
enum enum_mysql_show_typeenum_mysql_show_type140,4938
  SHOW_UNDEF, SHOW_BOOL,SHOW_UNDEF142,4966
  SHOW_UNDEF, SHOW_BOOL,SHOW_BOOL142,4966
  SHOW_INT,        ///< shown as _unsigned_ intSHOW_INT143,4991
  SHOW_LONG,       ///< shown as _unsigned_ longSHOW_LONG144,5039
  SHOW_LONGLONG,   ///< shown as _unsigned_ longlongSHOW_LONGLONG145,5088
  SHOW_CHAR, SHOW_CHAR_PTR,SHOW_CHAR146,5141
  SHOW_CHAR, SHOW_CHAR_PTR,SHOW_CHAR_PTR146,5141
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_ARRAY147,5169
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_FUNC147,5169
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_DOUBLE147,5169
enum enum_mysql_show_scopeenum_mysql_show_scope161,5472
  SHOW_SCOPE_UNDEF,SHOW_SCOPE_UNDEF163,5501
  SHOW_SCOPE_GLOBALSHOW_SCOPE_GLOBAL164,5521
  SHOW_SCOPE_SESSION,SHOW_SCOPE_SESSION168,5619
  SHOW_SCOPE_ALLSHOW_SCOPE_ALL169,5641
struct st_mysql_show_varst_mysql_show_var176,5713
  const char *name;name178,5740
  char *value;value179,5760
  enum enum_mysql_show_type type;type180,5775
  enum enum_mysql_show_scope scope;scope181,5809
#define SHOW_VAR_MAX_NAME_LEN SHOW_VAR_MAX_NAME_LEN184,5849
#define SHOW_VAR_FUNC_BUFF_SIZE SHOW_VAR_FUNC_BUFF_SIZE185,5882
typedef int (*mysql_show_var_func)(MYSQL_THD, struct st_mysql_show_var*, char *);mysql_show_var_func186,5919
#define PLUGIN_OPT_NO_INSTALL PLUGIN_OPT_NO_INSTALL193,6041
#define PLUGIN_OPT_NO_UNINSTALL PLUGIN_OPT_NO_UNINSTALL194,6110
#define PLUGIN_VAR_BOOL PLUGIN_VAR_BOOL202,6252
#define PLUGIN_VAR_INT PLUGIN_VAR_INT203,6291
#define PLUGIN_VAR_LONG PLUGIN_VAR_LONG204,6330
#define PLUGIN_VAR_LONGLONG PLUGIN_VAR_LONGLONG205,6369
#define PLUGIN_VAR_STR PLUGIN_VAR_STR206,6408
#define PLUGIN_VAR_ENUM PLUGIN_VAR_ENUM207,6447
#define PLUGIN_VAR_SET PLUGIN_VAR_SET208,6486
#define PLUGIN_VAR_DOUBLE PLUGIN_VAR_DOUBLE209,6525
#define PLUGIN_VAR_UNSIGNED PLUGIN_VAR_UNSIGNED210,6564
#define PLUGIN_VAR_THDLOCAL PLUGIN_VAR_THDLOCAL211,6603
#define PLUGIN_VAR_READONLY PLUGIN_VAR_READONLY212,6675
#define PLUGIN_VAR_NOSYSVAR PLUGIN_VAR_NOSYSVAR213,6749
#define PLUGIN_VAR_NOCMDOPT PLUGIN_VAR_NOCMDOPT214,6816
#define PLUGIN_VAR_NOCMDARG PLUGIN_VAR_NOCMDARG215,6887
#define PLUGIN_VAR_RQCMDARG PLUGIN_VAR_RQCMDARG216,6957
#define PLUGIN_VAR_OPCMDARG PLUGIN_VAR_OPCMDARG217,7033
#define PLUGIN_VAR_MEMALLOC PLUGIN_VAR_MEMALLOC218,7109
typedef int (*mysql_var_check_func)(MYSQL_THD thd,mysql_var_check_func242,7992
typedef void (*mysql_var_update_func)(MYSQL_THD thd,mysql_var_update_func260,8664
#define PLUGIN_VAR_MASK PLUGIN_VAR_MASK268,8920
#define MYSQL_PLUGIN_VAR_HEADER MYSQL_PLUGIN_VAR_HEADER273,9131
#define MYSQL_SYSVAR_NAME(MYSQL_SYSVAR_NAME280,9333
#define MYSQL_SYSVAR(MYSQL_SYSVAR281,9387
#define DECLARE_MYSQL_SYSVAR_BASIC(DECLARE_MYSQL_SYSVAR_BASIC292,9717
#define DECLARE_MYSQL_SYSVAR_SIMPLE(DECLARE_MYSQL_SYSVAR_SIMPLE298,9904
#define DECLARE_MYSQL_SYSVAR_TYPELIB(DECLARE_MYSQL_SYSVAR_TYPELIB305,10126
#define DECLARE_THDVAR_FUNC(DECLARE_THDVAR_FUNC311,10315
#define DECLARE_MYSQL_THDVAR_BASIC(DECLARE_MYSQL_THDVAR_BASIC314,10398
#define DECLARE_MYSQL_THDVAR_SIMPLE(DECLARE_MYSQL_THDVAR_SIMPLE321,10619
#define DECLARE_MYSQL_THDVAR_TYPELIB(DECLARE_MYSQL_THDVAR_TYPELIB329,10875
#define MYSQL_SYSVAR_BOOL(MYSQL_SYSVAR_BOOL342,11204
#define MYSQL_SYSVAR_STR(MYSQL_SYSVAR_STR347,11424
#define MYSQL_SYSVAR_INT(MYSQL_SYSVAR_INT352,11644
#define MYSQL_SYSVAR_UINT(MYSQL_SYSVAR_UINT357,11893
#define MYSQL_SYSVAR_LONG(MYSQL_SYSVAR_LONG362,12174
#define MYSQL_SYSVAR_ULONG(MYSQL_SYSVAR_ULONG367,12426
#define MYSQL_SYSVAR_LONGLONG(MYSQL_SYSVAR_LONGLONG372,12710
#define MYSQL_SYSVAR_ULONGLONG(MYSQL_SYSVAR_ULONGLONG377,12975
#define MYSQL_SYSVAR_ENUM(MYSQL_SYSVAR_ENUM382,13272
#define MYSQL_SYSVAR_SET(MYSQL_SYSVAR_SET387,13522
#define MYSQL_SYSVAR_DOUBLE(MYSQL_SYSVAR_DOUBLE392,13775
#define MYSQL_THDVAR_BOOL(MYSQL_THDVAR_BOOL397,14033
#define MYSQL_THDVAR_STR(MYSQL_THDVAR_STR402,14266
#define MYSQL_THDVAR_INT(MYSQL_THDVAR_INT407,14499
#define MYSQL_THDVAR_UINT(MYSQL_THDVAR_UINT412,14761
#define MYSQL_THDVAR_LONG(MYSQL_THDVAR_LONG417,15055
#define MYSQL_THDVAR_ULONG(MYSQL_THDVAR_ULONG422,15320
#define MYSQL_THDVAR_LONGLONG(MYSQL_THDVAR_LONGLONG427,15617
#define MYSQL_THDVAR_ULONGLONG(MYSQL_THDVAR_ULONGLONG432,15895
#define MYSQL_THDVAR_ENUM(MYSQL_THDVAR_ENUM437,16205
#define MYSQL_THDVAR_SET(MYSQL_THDVAR_SET442,16468
#define MYSQL_THDVAR_DOUBLE(MYSQL_THDVAR_DOUBLE447,16734
#define SYSVAR(SYSVAR454,17028
#define THDVAR(THDVAR458,17143
struct st_mysql_pluginst_mysql_plugin466,17288
  int type;             /* the plugin type (a MYSQL_XXX_PLUGIN value)   */type468,17313
  void *info;           /* pointer to type-specific plugin descriptor   */info469,17388
  const char *name;     /* plugin name                                  */name470,17463
  const char *author;   /* plugin author (for I_S.PLUGINS)              */author471,17538
  const char *descr;    /* general descriptive text (for I_S.PLUGINS)   */descr472,17613
  int license;          /* the plugin license (PLUGIN_LICENSE_XXX)      */license473,17688
  int (*init)(MYSQL_PLUGIN);  /* the function to invoke when plugin is loaded */init474,17763
  int (*deinit)(MYSQL_PLUGIN);/* the function to invoke when plugin is unloaded */deinit475,17844
  unsigned int version; /* plugin version (for I_S.PLUGINS)             */version476,17927
  struct st_mysql_show_var *status_vars;status_vars477,18002
  struct st_mysql_sys_var **system_vars;system_vars478,18043
  void * __reserved1;   /* reserved for dependency checking             */__reserved1479,18084
  unsigned long flags;  /* flags for plugin */flags480,18159
#define MYSQL_FTPARSER_INTERFACE_VERSION MYSQL_FTPARSER_INTERFACE_VERSION486,18347
#define MYSQL_REWRITE_PRE_PARSE_INTERFACE_VERSION MYSQL_REWRITE_PRE_PARSE_INTERFACE_VERSION492,18536
#define MYSQL_REWRITE_POST_PARSE_INTERFACE_VERSION MYSQL_REWRITE_POST_PARSE_INTERFACE_VERSION493,18593
#define MYSQL_DAEMON_INTERFACE_VERSION MYSQL_DAEMON_INTERFACE_VERSION500,18849
struct st_mysql_daemonst_mysql_daemon507,19009
  int interface_version;interface_version509,19034
#define MYSQL_INFORMATION_SCHEMA_INTERFACE_VERSION MYSQL_INFORMATION_SCHEMA_INTERFACE_VERSION518,19262
struct st_mysql_information_schemast_mysql_information_schema525,19434
  int interface_version;interface_version527,19471
#define MYSQL_HANDLERTON_INTERFACE_VERSION MYSQL_HANDLERTON_INTERFACE_VERSION536,19706
struct st_mysql_storage_enginest_mysql_storage_engine544,19909
  int interface_version;interface_version546,19942
 #define MYSQL_REPLICATION_INTERFACE_VERSION MYSQL_REPLICATION_INTERFACE_VERSION555,20055
 struct Mysql_replication {Mysql_replication560,20151
   int interface_version;interface_version561,20179
#define MYSQL_VALUE_TYPE_STRING MYSQL_VALUE_TYPE_STRING574,20617
#define MYSQL_VALUE_TYPE_REAL MYSQL_VALUE_TYPE_REAL575,20651
#define MYSQL_VALUE_TYPE_INT MYSQL_VALUE_TYPE_INT576,20685
struct st_mysql_valuest_mysql_value578,20720
  int (*value_type)(struct st_mysql_value *);value_type580,20744
  const char *(*val_str)(struct st_mysql_value *, char *buffer, int *length);val_str581,20790
  int (*val_real)(struct st_mysql_value *, double *realbuf);val_real582,20868
  int (*val_int)(struct st_mysql_value *, long long *intbuf);val_int583,20929
  int (*is_unsigned)(struct st_mysql_value *);is_unsigned584,20991

mysql/include/keycache.h,5321
#define _keycache_h_keycache_h19,802
typedef struct st_block_link BLOCK_LINK;BLOCK_LINK28,980
typedef struct st_hash_link HASH_LINK;HASH_LINK30,1042
typedef struct st_keycache_thread_varst_keycache_thread_var33,1114
  mysql_cond_t suspend;suspend35,1154
  struct st_keycache_thread_var *next,**prev;next36,1178
  struct st_keycache_thread_var *next,**prev;prev36,1178
  void *opt_info;opt_info37,1224
} st_keycache_thread_var;st_keycache_thread_var38,1242
typedef struct st_keycache_wqueuest_keycache_wqueue41,1314
  st_keycache_thread_var *last_thread;  /* circular list of waiting threads */last_thread43,1350
} KEYCACHE_WQUEUE;KEYCACHE_WQUEUE44,1429
#define CHANGED_BLOCKS_HASH CHANGED_BLOCKS_HASH46,1449
typedef struct st_key_cachest_key_cache53,1607
  my_bool key_cache_inited;key_cache_inited55,1637
  my_bool in_resize;             /* true during resize operation             */in_resize56,1665
  my_bool resize_in_flush;       /* true during flush of resize operation    */resize_in_flush57,1745
  my_bool can_be_used;           /* usage of cache for read/write is allowed */can_be_used58,1825
  size_t key_cache_mem_size;      /* specified size of the cache memory       */key_cache_mem_size59,1905
  uint key_cache_block_size;     /* size of the page buffer of a cache block */key_cache_block_size60,1986
  ulonglong min_warm_blocks;     /* min number of warm blocks;               */min_warm_blocks61,2066
  ulonglong age_threshold;       /* age threshold for hot blocks             */age_threshold62,2146
  ulonglong keycache_time;       /* total number of block link operations    */keycache_time63,2226
  uint hash_entries;             /* max number of entries in the hash table  */hash_entries64,2306
  int hash_links;                /* max number of hash links                 */hash_links65,2386
  int hash_links_used;           /* number of hash links currently used      */hash_links_used66,2466
  int disk_blocks;               /* max number of blocks in the cache        */disk_blocks67,2546
  ulong blocks_used; /* maximum number of concurrently used blocks */blocks_used68,2626
  ulong blocks_unused; /* number of currently unused blocks */blocks_unused69,2696
  ulong blocks_changed;          /* number of currently dirty blocks         */blocks_changed70,2759
  ulong warm_blocks;             /* number of blocks in warm sub-chain       */warm_blocks71,2839
  ulong cnt_for_resize_op;       /* counter to block resize operation        */cnt_for_resize_op72,2919
  long blocks_available;      /* number of blocks available in the LRU chain */blocks_available73,2999
  HASH_LINK **hash_root;         /* arr. of entries into hash table buckets  */hash_root74,3079
  HASH_LINK *hash_link_root;     /* memory for hash table links              */hash_link_root75,3159
  HASH_LINK *free_hash_list;     /* list of free hash links                  */free_hash_list76,3239
  BLOCK_LINK *free_block_list;   /* list of free blocks */free_block_list77,3319
  BLOCK_LINK *block_root;        /* memory for block links                   */block_root78,3378
  uchar *block_mem;              /* memory for block buffers                 */block_mem79,3458
  BLOCK_LINK *used_last;         /* ptr to the last block of the LRU chain   */used_last80,3538
  BLOCK_LINK *used_ins;          /* ptr to the insertion block in LRU chain  */used_ins81,3618
  mysql_mutex_t cache_lock;      /* to lock access to the cache structure    */cache_lock82,3698
  KEYCACHE_WQUEUE resize_queue;  /* threads waiting during resize operation  */resize_queue83,3778
  KEYCACHE_WQUEUE waiting_for_resize_cnt;waiting_for_resize_cnt88,3974
  KEYCACHE_WQUEUE waiting_for_hash_link; /* waiting for a free hash link     */waiting_for_hash_link89,4016
  KEYCACHE_WQUEUE waiting_for_block;    /* requests waiting for a free block */waiting_for_block90,4096
  BLOCK_LINK *changed_blocks[CHANGED_BLOCKS_HASH]; /* hash for dirty file bl.*/changed_blocks91,4176
  BLOCK_LINK *file_blocks[CHANGED_BLOCKS_HASH];    /* hash for other file bl.*/file_blocks92,4256
  ulonglong param_buff_size;      /* size the memory allocated for the cache  */param_buff_size99,4454
  ulonglong param_block_size;     /* size of the blocks in the key cache      */param_block_size100,4535
  ulonglong param_division_limit; /* min. percentage of warm blocks           */param_division_limit101,4616
  ulonglong param_age_threshold;  /* determines when hot block is downgraded  */param_age_threshold102,4697
  ulong global_blocks_changed;	/* number of currently dirty blocks         */global_blocks_changed105,4856
  ulonglong global_cache_w_requests;/* number of write requests (write hits) */global_cache_w_requests106,4934
  ulonglong global_cache_write;     /* number of writes from cache to files  */global_cache_write107,5014
  ulonglong global_cache_r_requests;/* number of read requests (read hits)   */global_cache_r_requests108,5094
  ulonglong global_cache_read;      /* number of reads from files to cache   */global_cache_read109,5174
  int blocks;                   /* max number of blocks in the cache        */blocks111,5255
  my_bool in_init;		/* Set to 1 in MySQL during init/resize     */in_init112,5334
} KEY_CACHE;KEY_CACHE113,5401

mysql/include/plugin_group_replication.h,3599
#define MYSQL_PLUGIN_GROUP_REPLICATION_INCLUDEDMYSQL_PLUGIN_GROUP_REPLICATION_INCLUDED17,788
#define MYSQL_GROUP_REPLICATION_INTERFACE_VERSION MYSQL_GROUP_REPLICATION_INTERFACE_VERSION22,937
typedef struct st_group_replication_connection_status_callbacksst_group_replication_connection_status_callbacks33,1242
  void* const context;context35,1308
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name36,1331
  void (*set_group_name)(void* const context, const char& value, size_t length);set_group_name37,1414
  void (*set_source_uuid)(void* const context, const char& value, size_t length);set_source_uuid38,1495
  void (*set_service_state)(void* const context, bool state);set_service_state39,1577
} GROUP_REPLICATION_CONNECTION_STATUS_CALLBACKS;GROUP_REPLICATION_CONNECTION_STATUS_CALLBACKS40,1639
typedef struct st_group_replication_group_members_callbacksst_group_replication_group_members_callbacks51,1932
  void* const context;context53,1994
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name54,2017
  void (*set_member_id)(void* const context, const char& value, size_t length);set_member_id55,2100
  void (*set_member_host)(void* const context, const char& value, size_t length);set_member_host56,2180
  void (*set_member_port)(void* const context, unsigned int value);set_member_port57,2262
  void (*set_member_state)(void* const context, const char& value, size_t length);set_member_state58,2330
} GROUP_REPLICATION_GROUP_MEMBERS_CALLBACKS;GROUP_REPLICATION_GROUP_MEMBERS_CALLBACKS59,2413
typedef struct st_group_replication_member_stats_callbacksst_group_replication_member_stats_callbacks70,2707
  void* const context;context72,2768
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name73,2791
  void (*set_view_id)(void* const context, const char& value, size_t length);set_view_id74,2874
  void (*set_member_id)(void* const context, const char& value, size_t length);set_member_id75,2952
  void (*set_transactions_committed)(void* const context, const char& value, size_t length);set_transactions_committed76,3032
  void (*set_last_conflict_free_transaction)(void* const context, const char& value, size_t lengset_last_conflict_free_transaction77,3125
  void (*set_transactions_in_queue)(void* const context, unsigned long long int value);set_transactions_in_queue78,3226
  void (*set_transactions_certified)(void* const context, unsigned long long int value);set_transactions_certified79,3314
  void (*set_transactions_conflicts_detected)(void* const context, unsigned long long int value)set_transactions_conflicts_detected80,3403
  void (*set_transactions_rows_in_validation)(void* const context, unsigned long long int value)set_transactions_rows_in_validation81,3501
} GROUP_REPLICATION_GROUP_MEMBER_STATS_CALLBACKS;GROUP_REPLICATION_GROUP_MEMBER_STATS_CALLBACKS82,3599
struct st_mysql_group_replicationst_mysql_group_replication84,3650
  int interface_version;interface_version86,3686
  int (*start)();start91,3780
  int (*stop)();stop95,3865
  bool (*is_running)();is_running99,3971
  int (*set_retrieved_certification_info)(void* info);set_retrieved_certification_info106,4176
  bool (*get_connection_status_info)get_connection_status_info117,4555
  bool (*get_group_members_info)get_group_members_info129,4984
  bool (*get_group_member_stats_info)get_group_member_stats_info142,5444
  unsigned int (*get_members_number_info)();get_members_number_info148,5612

mysql/include/binary_log_types.h,2059
#define BINARY_LOG_TYPES_INCLUDEDBINARY_LOG_TYPES_INCLUDED27,981
typedef enum enum_field_types {enum_field_types38,1105
  MYSQL_TYPE_DECIMAL, MYSQL_TYPE_TINY,MYSQL_TYPE_DECIMAL39,1137
  MYSQL_TYPE_DECIMAL, MYSQL_TYPE_TINY,MYSQL_TYPE_TINY39,1137
  MYSQL_TYPE_SHORT,  MYSQL_TYPE_LONG,MYSQL_TYPE_SHORT40,1176
  MYSQL_TYPE_SHORT,  MYSQL_TYPE_LONG,MYSQL_TYPE_LONG40,1176
  MYSQL_TYPE_FLOAT,  MYSQL_TYPE_DOUBLE,MYSQL_TYPE_FLOAT41,1214
  MYSQL_TYPE_FLOAT,  MYSQL_TYPE_DOUBLE,MYSQL_TYPE_DOUBLE41,1214
  MYSQL_TYPE_NULL,   MYSQL_TYPE_TIMESTAMP,MYSQL_TYPE_NULL42,1254
  MYSQL_TYPE_NULL,   MYSQL_TYPE_TIMESTAMP,MYSQL_TYPE_TIMESTAMP42,1254
  MYSQL_TYPE_LONGLONG,MYSQL_TYPE_INT24,MYSQL_TYPE_LONGLONG43,1297
  MYSQL_TYPE_LONGLONG,MYSQL_TYPE_INT24,MYSQL_TYPE_INT2443,1297
  MYSQL_TYPE_DATE,   MYSQL_TYPE_TIME,MYSQL_TYPE_DATE44,1337
  MYSQL_TYPE_DATE,   MYSQL_TYPE_TIME,MYSQL_TYPE_TIME44,1337
  MYSQL_TYPE_DATETIME, MYSQL_TYPE_YEAR,MYSQL_TYPE_DATETIME45,1375
  MYSQL_TYPE_DATETIME, MYSQL_TYPE_YEAR,MYSQL_TYPE_YEAR45,1375
  MYSQL_TYPE_NEWDATE, MYSQL_TYPE_VARCHAR,MYSQL_TYPE_NEWDATE46,1415
  MYSQL_TYPE_NEWDATE, MYSQL_TYPE_VARCHAR,MYSQL_TYPE_VARCHAR46,1415
  MYSQL_TYPE_BIT,MYSQL_TYPE_BIT47,1457
  MYSQL_TYPE_TIMESTAMP2,MYSQL_TYPE_TIMESTAMP248,1475
  MYSQL_TYPE_DATETIME2,MYSQL_TYPE_DATETIME249,1500
  MYSQL_TYPE_TIME2,MYSQL_TYPE_TIME250,1524
  MYSQL_TYPE_JSON=245,MYSQL_TYPE_JSON51,1544
  MYSQL_TYPE_NEWDECIMAL=246,MYSQL_TYPE_NEWDECIMAL52,1567
  MYSQL_TYPE_ENUM=247,MYSQL_TYPE_ENUM53,1596
  MYSQL_TYPE_SET=248,MYSQL_TYPE_SET54,1619
  MYSQL_TYPE_TINY_BLOB=249,MYSQL_TYPE_TINY_BLOB55,1641
  MYSQL_TYPE_MEDIUM_BLOB=250,MYSQL_TYPE_MEDIUM_BLOB56,1669
  MYSQL_TYPE_LONG_BLOB=251,MYSQL_TYPE_LONG_BLOB57,1699
  MYSQL_TYPE_BLOB=252,MYSQL_TYPE_BLOB58,1727
  MYSQL_TYPE_VAR_STRING=253,MYSQL_TYPE_VAR_STRING59,1750
  MYSQL_TYPE_STRING=254,MYSQL_TYPE_STRING60,1779
  MYSQL_TYPE_GEOMETRY=255MYSQL_TYPE_GEOMETRY61,1804
} enum_field_types;enum_field_types62,1830
#define DATETIME_MAX_DECIMALS DATETIME_MAX_DECIMALS64,1851

mysql/include/mysqld_ername.h,0

mysql/include/m_ctype.h,14903
#define _m_ctype_h_m_ctype_h21,827
#define MY_CS_NAME_SIZE	MY_CS_NAME_SIZE29,956
#define MY_CS_CTYPE_TABLE_SIZE	MY_CS_CTYPE_TABLE_SIZE30,985
#define MY_CS_TO_LOWER_TABLE_SIZE	MY_CS_TO_LOWER_TABLE_SIZE31,1021
#define MY_CS_TO_UPPER_TABLE_SIZE	MY_CS_TO_UPPER_TABLE_SIZE32,1059
#define MY_CS_SORT_ORDER_TABLE_SIZE	MY_CS_SORT_ORDER_TABLE_SIZE33,1097
#define MY_CS_TO_UNI_TABLE_SIZE	MY_CS_TO_UNI_TABLE_SIZE34,1137
#define CHARSET_DIR	CHARSET_DIR36,1175
#define my_wc_t my_wc_t38,1208
#define MY_CS_REPLACEMENT_CHARACTER MY_CS_REPLACEMENT_CHARACTER40,1231
#define MB2(MB249,1469
#define MY_PUT_MB2(MY_PUT_MB250,1534
typedef struct unicase_info_char_stunicase_info_char_st58,1717
  uint32 toupper;toupper60,1755
  uint32 tolower;tolower61,1773
  uint32 sort;sort62,1791
} MY_UNICASE_CHARACTER;MY_UNICASE_CHARACTER63,1806
typedef struct unicase_info_stunicase_info_st66,1832
  my_wc_t maxchar;maxchar68,1865
  const MY_UNICASE_CHARACTER **page;page69,1884
} MY_UNICASE_INFO;MY_UNICASE_INFO70,1921
#define MY_UCA_MAX_CONTRACTION MY_UCA_MAX_CONTRACTION78,2119
#define MY_UCA_MAX_WEIGHT_SIZE MY_UCA_MAX_WEIGHT_SIZE79,2152
#define MY_UCA_WEIGHT_LEVELS MY_UCA_WEIGHT_LEVELS80,2185
typedef struct my_contraction_tmy_contraction_t82,2219
  my_wc_t ch[MY_UCA_MAX_CONTRACTION];   /* Character sequence              */ch84,2253
  uint16 weight[MY_UCA_MAX_WEIGHT_SIZE];/* Its weight string, 0-terminated */weight85,2331
  my_bool with_context;with_context86,2409
} MY_CONTRACTION;MY_CONTRACTION87,2433
typedef struct my_contraction_list_tmy_contraction_list_t91,2454
  size_t nitems;         /* Number of items in the list                  */nitems93,2493
  MY_CONTRACTION *item;  /* List of contractions                         */item94,2569
  char *flags;           /* Character flags, e.g. "is contraction head") */flags95,2645
} MY_CONTRACTIONS;MY_CONTRACTIONS96,2721
typedef struct my_uca_level_info_stmy_uca_level_info_st106,3102
  my_wc_t maxchar;maxchar108,3140
  uchar   *lengths;lengths109,3159
  uint16  **weights;weights110,3179
  MY_CONTRACTIONS contractions;contractions111,3200
} MY_UCA_WEIGHT_LEVEL;MY_UCA_WEIGHT_LEVEL112,3232
typedef struct uca_info_stuca_info_st115,3257
  MY_UCA_WEIGHT_LEVEL level[MY_UCA_WEIGHT_LEVELS];level117,3286
  my_wc_t first_non_ignorable;first_non_ignorable120,3364
  my_wc_t last_non_ignorable;last_non_ignorable121,3395
  my_wc_t first_primary_ignorable;first_primary_ignorable122,3425
  my_wc_t last_primary_ignorable;last_primary_ignorable123,3460
  my_wc_t first_secondary_ignorable;first_secondary_ignorable124,3494
  my_wc_t last_secondary_ignorable;last_secondary_ignorable125,3531
  my_wc_t first_tertiary_ignorable;first_tertiary_ignorable126,3567
  my_wc_t last_tertiary_ignorable;last_tertiary_ignorable127,3603
  my_wc_t first_trailing;first_trailing128,3638
  my_wc_t last_trailing;last_trailing129,3664
  my_wc_t first_variable;first_variable130,3689
  my_wc_t last_variable;last_variable131,3715
} MY_UCA_INFO;MY_UCA_INFO133,3741
typedef struct uni_ctype_stuni_ctype_st140,3793
  uchar  pctype;pctype142,3823
  uchar  *ctype;ctype143,3840
} MY_UNI_CTYPE;MY_UNI_CTYPE144,3857
#define MY_CS_ILSEQ	MY_CS_ILSEQ149,3949
#define MY_CS_ILUNI	MY_CS_ILUNI150,4024
#define MY_CS_TOOSMALL MY_CS_TOOSMALL151,4099
#define MY_CS_TOOSMALL2 MY_CS_TOOSMALL2152,4178
#define MY_CS_TOOSMALL3 MY_CS_TOOSMALL3153,4257
#define MY_CS_TOOSMALL4 MY_CS_TOOSMALL4155,4394
#define MY_CS_TOOSMALL5 MY_CS_TOOSMALL5156,4469
#define MY_CS_TOOSMALL6 MY_CS_TOOSMALL6157,4544
#define MY_CS_TOOSMALLN(MY_CS_TOOSMALLN159,4669
#define MY_SEQ_INTTAIL	MY_SEQ_INTTAIL161,4711
#define MY_SEQ_SPACES	MY_SEQ_SPACES162,4736
#define MY_CS_COMPILED MY_CS_COMPILED165,4798
#define MY_CS_CONFIG MY_CS_CONFIG166,4866
#define MY_CS_INDEX MY_CS_INDEX167,4934
#define MY_CS_LOADED MY_CS_LOADED168,5002
#define MY_CS_BINSORT	MY_CS_BINSORT169,5070
#define MY_CS_PRIMARY	MY_CS_PRIMARY170,5136
#define MY_CS_STRNXFRM	MY_CS_STRNXFRM171,5202
#define MY_CS_UNICODE	MY_CS_UNICODE172,5269
#define MY_CS_READY	MY_CS_READY173,5335
#define MY_CS_AVAILABLE	MY_CS_AVAILABLE174,5399
#define MY_CS_CSSORT	MY_CS_CSSORT175,5467
#define MY_CS_HIDDEN	MY_CS_HIDDEN176,5533
#define MY_CS_PUREASCII MY_CS_PUREASCII177,5599
#define MY_CS_NONASCII MY_CS_NONASCII178,5667
#define MY_CS_UNICODE_SUPPLEMENT MY_CS_UNICODE_SUPPLEMENT179,5735
#define MY_CS_LOWER_SORT MY_CS_LOWER_SORT180,5807
#define MY_CHARSET_UNDEFINED MY_CHARSET_UNDEFINED181,5874
#define MY_REPERTOIRE_ASCII MY_REPERTOIRE_ASCII184,5939
#define MY_REPERTOIRE_EXTENDED MY_REPERTOIRE_EXTENDED185,6017
#define MY_REPERTOIRE_UNICODE30 MY_REPERTOIRE_UNICODE30186,6095
#define MY_STRXFRM_LEVEL1 MY_STRXFRM_LEVEL1189,6198
#define MY_STRXFRM_LEVEL2 MY_STRXFRM_LEVEL2190,6272
#define MY_STRXFRM_LEVEL3 MY_STRXFRM_LEVEL3191,6346
#define MY_STRXFRM_LEVEL4 MY_STRXFRM_LEVEL4192,6420
#define MY_STRXFRM_LEVEL5 MY_STRXFRM_LEVEL5193,6494
#define MY_STRXFRM_LEVEL6 MY_STRXFRM_LEVEL6194,6568
#define MY_STRXFRM_LEVEL_ALL MY_STRXFRM_LEVEL_ALL195,6642
#define MY_STRXFRM_NLEVELS MY_STRXFRM_NLEVELS196,6719
#define MY_STRXFRM_PAD_WITH_SPACE MY_STRXFRM_PAD_WITH_SPACE198,6797
#define MY_STRXFRM_PAD_TO_MAXLEN MY_STRXFRM_PAD_TO_MAXLEN199,6875
#define MY_STRXFRM_DESC_LEVEL1 MY_STRXFRM_DESC_LEVEL1201,6954
#define MY_STRXFRM_DESC_LEVEL2 MY_STRXFRM_DESC_LEVEL2202,7031
#define MY_STRXFRM_DESC_LEVEL3 MY_STRXFRM_DESC_LEVEL3203,7108
#define MY_STRXFRM_DESC_LEVEL4 MY_STRXFRM_DESC_LEVEL4204,7185
#define MY_STRXFRM_DESC_LEVEL5 MY_STRXFRM_DESC_LEVEL5205,7262
#define MY_STRXFRM_DESC_LEVEL6 MY_STRXFRM_DESC_LEVEL6206,7339
#define MY_STRXFRM_DESC_SHIFT MY_STRXFRM_DESC_SHIFT207,7416
#define MY_STRXFRM_UNUSED_00004000 MY_STRXFRM_UNUSED_00004000209,7454
#define MY_STRXFRM_UNUSED_00008000 MY_STRXFRM_UNUSED_00008000210,7532
#define MY_STRXFRM_REVERSE_LEVEL1 MY_STRXFRM_REVERSE_LEVEL1212,7611
#define MY_STRXFRM_REVERSE_LEVEL2 MY_STRXFRM_REVERSE_LEVEL2213,7691
#define MY_STRXFRM_REVERSE_LEVEL3 MY_STRXFRM_REVERSE_LEVEL3214,7771
#define MY_STRXFRM_REVERSE_LEVEL4 MY_STRXFRM_REVERSE_LEVEL4215,7851
#define MY_STRXFRM_REVERSE_LEVEL5 MY_STRXFRM_REVERSE_LEVEL5216,7931
#define MY_STRXFRM_REVERSE_LEVEL6 MY_STRXFRM_REVERSE_LEVEL6217,8011
#define MY_STRXFRM_REVERSE_SHIFT MY_STRXFRM_REVERSE_SHIFT218,8091
typedef struct my_uni_idx_stmy_uni_idx_st221,8131
  uint16      from;from223,8162
  uint16      to;to224,8182
  const uchar *tab;tab225,8200
} MY_UNI_IDX;MY_UNI_IDX226,8220
{__anonfc697a040108229,8250
  uint beg;beg230,8252
  uint end;end231,8264
  uint mb_len;mb_len232,8276
} my_match_t;my_match_t233,8291
typedef struct my_charset_loader_stmy_charset_loader_st237,8331
  char error[128];error239,8369
  void *(*once_alloc)(size_t);once_alloc240,8388
  void *(*mem_malloc)(size_t);mem_malloc241,8419
  void *(*mem_realloc)(void *, size_t);mem_realloc242,8450
  void (*mem_free)(void *);mem_free243,8490
  void (*reporter)(enum loglevel, const char *format, ...);reporter244,8518
  int  (*add_collation)(struct charset_info_st *cs);add_collation245,8578
} MY_CHARSET_LOADER;MY_CHARSET_LOADER246,8631
typedef struct my_collation_handler_stmy_collation_handler_st252,8770
  my_bool (*init)(struct charset_info_st *, MY_CHARSET_LOADER *);init254,8811
  int     (*strnncoll)(const struct charset_info_st *,strnncoll256,8904
  int     (*strnncollsp)(const struct charset_info_st *,strnncollsp258,9024
  size_t  (*strnxfrm)(const struct charset_info_st *,strnxfrm261,9220
  size_t    (*strnxfrmlen)(const struct charset_info_st *, size_t);strnxfrmlen264,9406
  my_bool (*like_range)(const struct charset_info_st *,like_range265,9474
  int     (*wildcmp)(const struct charset_info_st *,wildcmp271,9705
  int  (*strcasecmp)(const struct charset_info_st *, const char *,strcasecmp276,9923
  uint (*instr)(const struct charset_info_st *,instr279,10029
  void (*hash_sort)(const struct charset_info_st *cs, const uchar *key,hash_sort285,10250
  my_bool (*propagate)(const struct charset_info_st *cs, const uchar *str,propagate287,10379
} MY_COLLATION_HANDLER;MY_COLLATION_HANDLER289,10490
typedef int (*my_charset_conv_mb_wc)(const struct charset_info_st *,my_charset_conv_mb_wc297,10825
typedef int (*my_charset_conv_wc_mb)(const struct charset_info_st *, my_wc_t,my_charset_conv_wc_mb299,10973
typedef size_t (*my_charset_conv_case)(const struct charset_info_st *,my_charset_conv_case301,11107
typedef struct my_charset_handler_stmy_charset_handler_st306,11324
  my_bool (*init)(struct charset_info_st *, MY_CHARSET_LOADER *loader);init308,11363
  uint    (*ismbchar)(const struct charset_info_st *, const char *,ismbchar310,11462
  uint    (*mbcharlen)(const struct charset_info_st *, uint c);mbcharlen312,11567
  size_t  (*numchars)(const struct charset_info_st *, const char *b,numchars313,11631
  size_t  (*charpos)(const struct charset_info_st *, const char *b,charpos315,11738
  size_t  (*well_formed_len)(const struct charset_info_st *,well_formed_len317,11855
  size_t  (*lengthsp)(const struct charset_info_st *, const char *ptr,lengthsp320,12031
  size_t  (*numcells)(const struct charset_info_st *, const char *b,numcells322,12140
  my_charset_conv_mb_wc mb_wc;mb_wc326,12277
  my_charset_conv_wc_mb wc_mb;wc_mb327,12308
  int (*ctype)(const struct charset_info_st *cs, int *ctype,ctype330,12362
  size_t  (*caseup_str)(const struct charset_info_st *, char *);caseup_str334,12521
  size_t  (*casedn_str)(const struct charset_info_st *, char *);casedn_str335,12586
  my_charset_conv_case caseup;caseup337,12652
  my_charset_conv_case casedn;casedn338,12683
  size_t (*snprintf)(const struct charset_info_st *, char *to, size_t n,snprintf341,12752
  size_t (*long10_to_str)(const struct charset_info_st *, char *to, size_t n,long10_to_str344,12927
  size_t (*longlong10_to_str)(const struct charset_info_st *, char *to,longlong10_to_str346,13057
  void (*fill)(const struct charset_info_st *, char *to, size_t len,fill349,13198
  long        (*strntol)(const struct charset_info_st *, const char *s,strntol353,13341
  ulong      (*strntoul)(const struct charset_info_st *, const char *s,strntoul355,13479
  longlong   (*strntoll)(const struct charset_info_st *, const char *s,strntoll357,13617
  ulonglong (*strntoull)(const struct charset_info_st *, const char *s,strntoull359,13755
  double      (*strntod)(const struct charset_info_st *, char *s,strntod361,13893
  longlong    (*strtoll10)(const struct charset_info_st *cs,strtoll10363,14015
  ulonglong   (*strntoull10rnd)(const struct charset_info_st *cs,strntoull10rnd365,14149
  size_t        (*scan)(const struct charset_info_st *, const char *b,scan369,14388
} MY_CHARSET_HANDLER;MY_CHARSET_HANDLER371,14507
#define CHARSET_INFO_DEFINEDCHARSET_INFO_DEFINED382,14818
typedef struct charset_info_stcharset_info_st385,14920
  uint      number;number387,14953
  uint      primary_number;primary_number388,14973
  uint      binary_number;binary_number389,15001
  uint      state;state390,15028
  const char *csname;csname391,15047
  const char *name;name392,15069
  const char *comment;comment393,15089
  const char *tailoring;tailoring394,15112
  const uchar *ctype;ctype395,15137
  const uchar *to_lower;to_lower396,15159
  const uchar *to_upper;to_upper397,15184
  const uchar *sort_order;sort_order398,15209
  MY_UCA_INFO *uca; /* This can be changed in apply_one_rule() */uca399,15236
  const uint16     *tab_to_uni;tab_to_uni400,15302
  const MY_UNI_IDX *tab_from_uni;tab_from_uni401,15334
  const MY_UNICASE_INFO *caseinfo;caseinfo402,15368
  const struct lex_state_maps_st *state_maps; /* parser internal data */state_maps403,15403
  const uchar *ident_map; /* parser internal data */ident_map404,15476
  uint      strxfrm_multiply;strxfrm_multiply405,15529
  uchar     caseup_multiply;caseup_multiply406,15559
  uchar     casedn_multiply;casedn_multiply407,15588
  uint      mbminlen;mbminlen408,15617
  uint      mbmaxlen;mbmaxlen409,15639
  uint      mbmaxlenlen;mbmaxlenlen410,15661
  my_wc_t   min_sort_char;min_sort_char411,15686
  my_wc_t   max_sort_char; /* For LIKE optimization */max_sort_char412,15713
  uchar     pad_char;pad_char413,15768
  my_bool   escape_with_backslash_is_dangerous;escape_with_backslash_is_dangerous414,15790
  uchar     levels_for_compare;levels_for_compare415,15838
  uchar     levels_for_order;levels_for_order416,15870
  MY_CHARSET_HANDLER *cset;cset418,15903
  MY_COLLATION_HANDLER *coll;coll419,15931
} CHARSET_INFO;CHARSET_INFO421,15964
#define ILLEGAL_CHARSET_INFO_NUMBER ILLEGAL_CHARSET_INFO_NUMBER422,15980
#define MY_UTF8MB3 MY_UTF8MB3474,18300
#define MY_UTF8MB4 MY_UTF8MB4475,18342
#define	_MY_U	_MY_U714,29812
#define	_MY_L	_MY_L715,29846
#define	_MY_NMR	_MY_NMR716,29880
#define	_MY_SPC	_MY_SPC717,29921
#define	_MY_PNT	_MY_PNT718,29965
#define	_MY_CTR	_MY_CTR719,30003
#define	_MY_B	_MY_B720,30047
#define	_MY_X	_MY_X721,30078
#define	my_isascii(my_isascii724,30123
#define	my_toascii(my_toascii725,30162
#define my_tocntrl(my_tocntrl726,30197
#define my_toprint(my_toprint727,30230
#define my_toupper(my_toupper728,30263
#define my_tolower(my_tolower729,30323
#define	my_isalpha(my_isalpha730,30383
#define	my_isupper(my_isupper731,30457
#define	my_islower(my_islower732,30521
#define	my_isdigit(my_isdigit733,30585
#define	my_isxdigit(my_isxdigit734,30651
#define	my_isalnum(my_isalnum735,30715
#define	my_isspace(my_isspace736,30799
#define	my_ispunct(my_ispunct737,30865
#define	my_isprint(my_isprint738,30931
#define	my_isgraph(my_isgraph739,31033
#define	my_iscntrl(my_iscntrl740,31127
#define my_isvar(my_isvar743,31247
#define my_isvar_start(my_isvar_start744,31317
#define my_binary_compare(my_binary_compare746,31388
#define use_strnxfrm(use_strnxfrm747,31453
#define my_strnxfrm(my_strnxfrm748,31522
#define my_strnncoll(my_strnncoll750,31649
#define my_like_range(my_like_range751,31736
#define my_wildcmp(my_wildcmp753,31875
#define my_strcasecmp(my_strcasecmp754,31972
#define my_charpos(my_charpos755,32049
#define use_mb(use_mb758,32160
#define my_ismbchar(my_ismbchar759,32228
#define my_mbcharlen(my_mbcharlen760,32303
#define my_mbcharlen_2(my_mbcharlen_2771,32736
#define my_mbmaxlenlen(my_mbmaxlenlen780,33090
#define my_ismb1st(my_ismb1st790,33462
#define my_caseup_str(my_caseup_str794,33664
#define my_casedn_str(my_casedn_str795,33736
#define my_strntol(my_strntol796,33808
#define my_strntoul(my_strntoul797,33892
#define my_strntoll(my_strntoll798,33977
#define my_strntoull(my_strntoull799,34062
#define my_strntod(my_strntod800,34148

mysql/include/big_endian.h,1169
static inline void float4store(uchar  *T, float  A)float4store21,802
static inline void float4get  (float  *V, const uchar *M)float4get27,995
static inline void float8store(uchar  *T, double V)float8store35,1227
static inline void float8get  (double *V, const uchar *M)float8get45,1568
static inline void ushortget(uint16 *V, const uchar *pM)ushortget57,1972
static inline void shortget (int16  *V, const uchar *pM)shortget60,2132
static inline void longget  (int32  *V, const uchar *pM)longget63,2287
static inline void ulongget (uint32 *V, const uchar *pM)ulongget70,2521
static inline void shortstore(uchar *T, int16 A)shortstore77,2756
static inline void longstore (uchar *T, int32 A)longstore81,2913
static inline void floatget(float *V, const uchar *M)floatget87,3088
static inline void floatstore(uchar *T, float V)floatstore92,3180
static inline void doubleget(double *V, const uchar *M)doubleget97,3270
static inline void doublestore(uchar *T, double V)doublestore102,3365
static inline void longlongget(longlong *V, const uchar *M)longlongget107,3456
static inline void longlongstore(uchar *T, longlong V)longlongstore111,3557

mysql/include/my_global.h,12095
#define MY_GLOBAL_INCLUDEDMY_GLOBAL_INCLUDED18,775
#define __STDC_LIMIT_MACROS	__STDC_LIMIT_MACROS30,1061
#define __STDC_FORMAT_MACROS	__STDC_FORMAT_MACROS31,1119
#define _USE_MATH_DEFINES _USE_MATH_DEFINES32,1186
#define INNODB_COMPATIBILITY_HOOKSINNODB_COMPATIBILITY_HOOKS87,2494
#define C_MODE_START C_MODE_START91,2610
#define C_MODE_END	C_MODE_END92,2647
#define C_MODE_STARTC_MODE_START94,2674
#define C_MODE_ENDC_MODE_END95,2695
#define HAVE_PSI_INTERFACEHAVE_PSI_INTERFACE99,2760
#define IF_WIN(IF_WIN104,2908
#define IF_WIN(IF_WIN106,2936
#define SIZEOF_OFF_T SIZEOF_OFF_T116,3145
static inline void sleep(unsigned long seconds)sleep118,3169
#define F_OK F_OK124,3284
#define W_OK W_OK125,3299
#define R_OK R_OK126,3314
#define F_RDLCK F_RDLCK129,3431
#define F_WRLCK F_WRLCK130,3449
#define F_UNLCK F_UNLCK131,3467
#define F_TO_EOF F_TO_EOF132,3485
#define O_NONBLOCK O_NONBLOCK134,3514
#define SHUT_RDWR SHUT_RDWR141,3676
#define shared_memory_buffer_length shared_memory_buffer_length144,3762
#define default_shared_memory_base_name default_shared_memory_base_name145,3804
#define my_container_of(my_container_of155,4112
#define compile_time_assert(compile_time_assert159,4295
#define QUOTE_ARG(QUOTE_ARG165,4620
#define STRINGIFY_ARG(STRINGIFY_ARG166,4679
#define SO_EXT SO_EXT169,4764
#define SO_EXT SO_EXT171,4811
#define SO_EXT SO_EXT173,4841
typedef unsigned int uint;uint177,4894
typedef unsigned short ushort;ushort178,4921
#define swap_variables(swap_variables181,4960
#define MY_TEST(MY_TEST182,5031
#define set_if_bigger(set_if_bigger183,5065
#define set_if_smaller(set_if_smaller184,5133
#define test_all_bits(test_all_bits185,5201
#define array_elements(array_elements186,5249
#define TRUE	TRUE190,5359
#define FALSE	FALSE191,5396
typedef int	File;		/* File descriptor */File196,5495
typedef SOCKET my_socket;my_socket198,5550
typedef int	my_socket;	/* File descriptor for sockets */my_socket200,5582
#define INVALID_SOCKET INVALID_SOCKET201,5639
typedef void	(*sig_return)();/* Returns type from signal */sig_return204,5685
typedef char	pchar;		/* Mixed prototypes can take char */pchar207,5778
typedef char	pbool;		/* Mixed prototypes can take char */pbool208,5836
typedef int	(*qsort_cmp)(const void *,const void *);qsort_cmp214,6038
typedef int	(*qsort_cmp2)(const void*, const void *,const void *);qsort_cmp2215,6091
typedef int       socket_len_t;socket_len_t218,6183
typedef int       sigset_t;sigset_t219,6215
typedef int       mode_t;mode_t220,6243
typedef SSIZE_T   ssize_t;ssize_t221,6269
typedef socket_len_t SOCKET_SIZE_TYPE; /* Used by NDB */SOCKET_SIZE_TYPE225,6341
#define O_SHARE	O_SHARE230,6469
#define O_BINARY	O_BINARY232,6544
#define FILE_BINARY	FILE_BINARY235,6629
#define HAVE_FCNTL_LOCKHAVE_FCNTL_LOCK238,6725
#define F_TO_EOF	F_TO_EOF239,6749
#define O_TEMPORARY	O_TEMPORARY244,6862
#define O_SHORT_LIVED	O_SHORT_LIVED247,6913
#define O_NOFOLLOW O_NOFOLLOW250,6963
#define _SH_DENYRWD _SH_DENYRWD255,7055
#define _SH_DENYWRD _SH_DENYWRD256,7124
#define _SH_DENYRDD _SH_DENYRDD257,7193
#define _SH_DENYDEL _SH_DENYDEL258,7262
#define FN_LEN	FN_LEN263,7377
#define FN_HEADLEN	FN_HEADLEN264,7421
#define FN_EXTLEN	FN_EXTLEN265,7486
#define FN_REFLEN	FN_REFLEN266,7554
#define FN_REFLEN_SE	FN_REFLEN_SE267,7611
#define FN_EXTCHAR	FN_EXTCHAR268,7678
#define FN_HOMELIB	FN_HOMELIB269,7701
#define FN_CURLIB	FN_CURLIB270,7764
#define FN_PARENTDIR	FN_PARENTDIR271,7829
#define FN_LIBCHAR	FN_LIBCHAR274,7911
#define FN_LIBCHAR2	FN_LIBCHAR2275,7935
#define FN_DIRSEP FN_DIRSEP276,7959
#define FN_EXEEXT FN_EXEEXT277,8036
#define FN_SOEXT FN_SOEXT278,8063
#define FN_ROOTDIR	FN_ROOTDIR279,8090
#define FN_DEVCHAR	FN_DEVCHAR280,8114
#define FN_NETWORK_DRIVES	FN_NETWORK_DRIVES281,8137
#define FN_LIBCHAR	FN_LIBCHAR283,8210
#define FN_LIBCHAR2	FN_LIBCHAR2284,8233
#define FN_DIRSEP FN_DIRSEP285,8257
#define FN_EXEEXT FN_EXEEXT286,8322
#define FN_SOEXT FN_SOEXT287,8345
#define FN_ROOTDIR	FN_ROOTDIR288,8371
#define MY_FILE_MIN MY_FILE_MIN304,8936
#define MY_FILE_MIN MY_FILE_MIN306,8968
#define MY_NFILE MY_NFILE320,9442
#define MY_NFILE MY_NFILE322,9487
#define OS_FILE_LIMIT	OS_FILE_LIMIT325,9515
#define IO_SIZE	IO_SIZE332,9731
#define MALLOC_OVERHEAD MALLOC_OVERHEAD337,9867
#define ONCE_ALLOC_INIT	ONCE_ALLOC_INIT340,9921
#define RECORD_CACHE_SIZE	RECORD_CACHE_SIZE342,10003
#define KEY_CACHE_SIZE	KEY_CACHE_SIZE344,10086
#define KEY_CACHE_BLOCK_SIZE	KEY_CACHE_BLOCK_SIZE346,10173
inline double my_ulonglong2double(unsigned long long value)my_ulonglong2double353,10299
#define ulonglong2double ulonglong2double360,10485
#define my_off_t2double my_off_t2double361,10530
inline unsigned long long my_double2ulonglong(double d)my_double2ulonglong363,10595
#define double2ulonglong double2ulonglong371,10813
#define ulonglong2double(ulonglong2double375,10904
#define my_off_t2double(my_off_t2double376,10959
#define double2ulonglong(double2ulonglong379,11045
#define INT_MIN64 INT_MIN64382,11108
#define INT_MAX64 INT_MAX64383,11156
#define INT_MIN32 INT_MIN32384,11201
#define INT_MAX32 INT_MAX32385,11240
#define UINT_MAX32 UINT_MAX32386,11276
#define INT_MIN24 INT_MIN24387,11312
#define INT_MAX24 INT_MAX24388,11350
#define UINT_MAX24 UINT_MAX24389,11385
#define INT_MIN16 INT_MIN16390,11420
#define INT_MAX16 INT_MAX16391,11454
#define UINT_MAX16 UINT_MAX16392,11485
#define INT_MIN8 INT_MIN8393,11516
#define INT_MAX8 INT_MAX8394,11548
#define UINT_MAX8 UINT_MAX8395,11577
#define SIZE_T_MAX SIZE_T_MAX398,11626
  #define my_isfinite(my_isfinite409,11919
  #define my_isnan(my_isnan410,11961
  #define my_isinf(my_isinf411,11997
    #define my_isfinite(my_isfinite414,12102
    #define my_isfinite(my_isfinite416,12164
    #define my_isfinite(my_isfinite418,12210
  #define my_isnan(my_isnan420,12256
    #define my_isinf(my_isinf423,12370
    #define my_isinf(my_isinf425,12429
typedef long		my_ptrdiff_t;my_ptrdiff_t434,12643
typedef long long	my_ptrdiff_t;my_ptrdiff_t436,12677
#define MY_ALIGN(MY_ALIGN439,12717
#define ALIGN_SIZE(ALIGN_SIZE440,12770
#define ADD_TO_PTR(ADD_TO_PTR442,12856
#define PTR_BYTE_DIFF(PTR_BYTE_DIFF443,12919
#define my_offsetof(my_offsetof457,13509
#define NullS	NullS460,13614
#define STDCALL STDCALL463,13655
#define STDCALLSTDCALL465,13687
typedef unsigned char	uchar;	/* Short for unsigned char */uchar470,13750
typedef signed char int8;       /* Signed integer >= 8  bits */int8471,13809
typedef unsigned char uint8;    /* Unsigned integer >= 8  bits */uint8472,13873
typedef short int16;int16473,13939
typedef unsigned short uint16;uint16474,13960
typedef int int32;int32476,14011
typedef unsigned int uint32;uint32477,14030
typedef long int32;int32479,14082
typedef unsigned long uint32;uint32480,14102
typedef unsigned long	ulong;		  /* Short for unsigned long */ulong486,14218
typedef unsigned long long int ulonglong; /* ulong or unsigned long long */ulonglong493,14470
typedef long long int	longlong;longlong494,14546
typedef longlong int64;int64495,14578
typedef ulonglong uint64;uint64496,14602
typedef unsigned __int64 my_ulonglong;my_ulonglong499,14650
typedef unsigned long long my_ulonglong;my_ulonglong501,14695
typedef int intptr;intptr505,14775
typedef long intptr;intptr507,14829
typedef long long intptr;intptr509,14889
#define MY_ERRPTR MY_ERRPTR514,15013
typedef unsigned long long my_off_t;my_off_t517,15071
typedef unsigned long long os_off_t;os_off_t518,15108
typedef off_t os_off_t;os_off_t520,15151
typedef ulonglong my_off_t;my_off_t522,15196
typedef unsigned long my_off_t;my_off_t524,15230
#define MY_FILEPOS_ERROR	MY_FILEPOS_ERROR527,15287
typedef ulonglong table_map;          /* Used for table bits in join */table_map532,15378
typedef ulonglong nesting_map;  /* Used for flags of nesting constructs */nesting_map533,15450
#define socket_errno	socket_errno536,15546
#define SOCKET_EINTR	SOCKET_EINTR537,15585
#define SOCKET_EAGAIN	SOCKET_EAGAIN538,15615
#define SOCKET_EWOULDBLOCK SOCKET_EWOULDBLOCK539,15652
#define SOCKET_EADDRINUSE SOCKET_EADDRINUSE540,15694
#define SOCKET_ETIMEDOUT SOCKET_ETIMEDOUT541,15734
#define SOCKET_ECONNRESET SOCKET_ECONNRESET542,15772
#define SOCKET_ENFILE	SOCKET_ENFILE543,15812
#define SOCKET_EMFILE	SOCKET_EMFILE544,15841
#define socket_errno	socket_errno546,15887
#define closesocket(closesocket547,15914
#define SOCKET_EINTR	SOCKET_EINTR548,15946
#define SOCKET_EAGAIN	SOCKET_EAGAIN549,15973
#define SOCKET_EWOULDBLOCK SOCKET_EWOULDBLOCK550,16002
#define SOCKET_EADDRINUSE SOCKET_EADDRINUSE551,16041
#define SOCKET_ETIMEDOUT SOCKET_ETIMEDOUT552,16078
#define SOCKET_ECONNRESET SOCKET_ECONNRESET553,16113
#define SOCKET_ENFILE	SOCKET_ENFILE554,16150
#define SOCKET_EMFILE	SOCKET_EMFILE555,16179
typedef int		myf;	/* Type of MyFlags in my_funcs */myf558,16216
typedef char		my_bool; /* Small bool */my_bool559,16268
#define MYF(MYF562,16367
#define YESNO(YESNO565,16419
#define MY_HOW_OFTEN_TO_WRITE	MY_HOW_OFTEN_TO_WRITE567,16458
#define MYSQL_UNIVERSAL_CLIENT_CHARSET MYSQL_UNIVERSAL_CLIENT_CHARSET572,16585
#define MYSQL_UNIVERSAL_CLIENT_CHARSET MYSQL_UNIVERSAL_CLIENT_CHARSET574,16637
#define dlsym(dlsym578,16731
#define dlopen(dlopen579,16798
#define dlclose(dlclose580,16862
#define HAVE_DLOPENHAVE_DLOPEN582,16929
#define DLERROR_GENERATE(DLERROR_GENERATE584,16956
#define dlerror(dlerror598,17395
#define dlopen_errno dlopen_errno599,17416
#define DLERROR_GENERATE(DLERROR_GENERATE602,17472
#define dlopen_errno dlopen_errno603,17537
#define MY_INT32_NUM_DECIMAL_DIGITS MY_INT32_NUM_DECIMAL_DIGITS607,17638
#define MY_INT64_NUM_DECIMAL_DIGITS MY_INT64_NUM_DECIMAL_DIGITS610,17732
#define MY_MAX(MY_MAX613,17849
#define MY_MIN(MY_MIN614,17894
#define bool bool617,17984
#define MYSQL_PLUGIN_IMPORT MYSQL_PLUGIN_IMPORT626,18262
#define MYSQL_PLUGIN_IMPORTMYSQL_PLUGIN_IMPORT628,18318
#define NO_EMBEDDED_ACCESS_CHECKSNO_EMBEDDED_ACCESS_CHECKS634,18400
enum loglevel {loglevel640,18546
   ERROR_LEVEL=       0,ERROR_LEVEL641,18562
   WARNING_LEVEL=     1,WARNING_LEVEL642,18587
   INFORMATION_LEVEL= 2INFORMATION_LEVEL643,18612
static inline struct tm *localtime_r(const time_t *timep, struct tm *tmp)localtime_r652,18857
static inline struct tm *gmtime_r(const time_t *clock, struct tm *res)gmtime_r658,18977
union ft64 {ft64671,19320
  FILETIME ft;ft672,19333
  __int64 i64;i64673,19348
struct timespec {timespec676,19368
  union ft64 tv;tv677,19386
  long max_timeout_msec;max_timeout_msec679,19474
static inline void set_timespec_nsec(struct timespec *abstime, ulonglong nsec)set_timespec_nsec688,19602
static inline void set_timespec(struct timespec *abstime, ulonglong sec)set_timespec712,20490
static inline int cmp_timespec(struct timespec *ts1, struct timespec *ts2)cmp_timespec724,20773
static inline ulonglong diff_timespec(struct timespec *ts1, struct timespec *ts2)diff_timespec742,21234
typedef int MY_MODE;MY_MODE753,21508
typedef mode_t MY_MODE;MY_MODE755,21535
#define USER_READ USER_READ759,21603
#define USER_WRITE USER_WRITE760,21637
#define USER_EXECUTE USER_EXECUTE761,21671
#define GROUP_READ GROUP_READ762,21705
#define GROUP_WRITE GROUP_WRITE763,21739
#define GROUP_EXECUTE GROUP_EXECUTE764,21773
#define OTHERS_READ OTHERS_READ765,21807
#define OTHERS_WRITE OTHERS_WRITE766,21841
#define OTHERS_EXECUTE OTHERS_EXECUTE767,21875
#define USER_RWX USER_RWX768,21909
#define GROUP_RWX GROUP_RWX769,21971
#define OTHERS_RWX OTHERS_RWX770,22036
#define DEFAULT_SSL_CA_CERT DEFAULT_SSL_CA_CERT773,22120
#define DEFAULT_SSL_CA_KEY DEFAULT_SSL_CA_KEY774,22161
#define DEFAULT_SSL_SERVER_CERT DEFAULT_SSL_SERVER_CERT775,22206
#define DEFAULT_SSL_SERVER_KEY DEFAULT_SSL_SERVER_KEY776,22256
  #define strcasecmp strcasecmp779,22345

mysql/include/plugin_ftparser.h,1950
#define _my_plugin_ftparser_h_my_plugin_ftparser_h17,775
enum enum_ftparser_modeenum_ftparser_mode27,1022
  MYSQL_FTPARSER_SIMPLE_MODE= 0,MYSQL_FTPARSER_SIMPLE_MODE37,1355
  MYSQL_FTPARSER_WITH_STOPWORDS= 1,MYSQL_FTPARSER_WITH_STOPWORDS48,1717
  MYSQL_FTPARSER_FULL_BOOLEAN_INFO= 2MYSQL_FTPARSER_FULL_BOOLEAN_INFO61,2286
enum enum_ft_token_typeenum_ft_token_type75,2681
  FT_TOKEN_EOF= 0,FT_TOKEN_EOF77,2707
  FT_TOKEN_WORD= 1,FT_TOKEN_WORD78,2726
  FT_TOKEN_LEFT_PAREN= 2,FT_TOKEN_LEFT_PAREN79,2746
  FT_TOKEN_RIGHT_PAREN= 3,FT_TOKEN_RIGHT_PAREN80,2772
  FT_TOKEN_STOPWORD= 4FT_TOKEN_STOPWORD81,2799
typedef struct st_mysql_ftparser_boolean_infost_mysql_ftparser_boolean_info117,4289
  enum enum_ft_token_type type;type119,4337
  int yesno;yesno120,4369
  int weight_adjust;weight_adjust121,4382
  char wasign;wasign122,4403
  char trunc;trunc123,4418
  int position;position124,4432
  char prev;prev126,4500
  char *quot;quot127,4513
} MYSQL_FTPARSER_BOOLEAN_INFO;MYSQL_FTPARSER_BOOLEAN_INFO128,4527
#define MYSQL_FTFLAGS_NEED_COPY MYSQL_FTFLAGS_NEED_COPY140,5085
typedef struct st_mysql_ftparser_paramst_mysql_ftparser_param180,6719
  int (*mysql_parse)(struct st_mysql_ftparser_param *,mysql_parse182,6760
  int (*mysql_add_word)(struct st_mysql_ftparser_param *,mysql_add_word184,6861
  void *ftparser_state;ftparser_state187,7037
  void *mysql_ftparam;mysql_ftparam188,7061
  const struct charset_info_st *cs;cs189,7084
  char *doc;doc190,7120
  int length;length191,7133
  int flags;flags192,7147
  enum enum_ftparser_mode mode;mode193,7160
} MYSQL_FTPARSER_PARAM;MYSQL_FTPARSER_PARAM194,7192
struct st_mysql_ftparserst_mysql_ftparser204,7444
  int interface_version;interface_version206,7471
  int (*parse)(MYSQL_FTPARSER_PARAM *param);parse207,7496
  int (*init)(MYSQL_FTPARSER_PARAM *param);init208,7541
  int (*deinit)(MYSQL_FTPARSER_PARAM *param);deinit209,7585

mysql/include/little_endian.h,1640
#define LITTLE_ENDIAN_INCLUDEDLITTLE_ENDIAN_INCLUDED2,31
static inline void float4get  (float  *V, const uchar *M) float4get24,868
static inline void float4store(uchar  *V, float  M)float4store29,965
static inline void float8get  (double *V, const uchar *M)float8get34,1056
static inline void float8store(uchar  *V, double M)float8store39,1152
static inline void floatget   (float  *V, const uchar *M) { float4get(V, M); }floatget44,1242
static inline void floatstore (uchar  *V, float M)        { float4store(V, M); }floatstore45,1321
static inline void doublestore(uchar *T, double V)doublestore49,1504
static inline void doubleget(double *V, const uchar *M)doubleget58,1909
static inline void doublestore(uchar  *T, double V)       { memcpy(T, &V, sizeof(double)); }doublestore72,2314
static inline void doubleget  (double *V, const uchar *M) { memcpy(V, M, sizeof(double)); }doubleget73,2407
static inline void ushortget(uint16 *V, const uchar *pM) { *V= uint2korr(pM); }ushortget77,2537
static inline void shortget (int16  *V, const uchar *pM) { *V= sint2korr(pM); }shortget78,2617
static inline void longget  (int32  *V, const uchar *pM) { *V= sint4korr(pM); }longget79,2697
static inline void ulongget (uint32 *V, const uchar *pM) { *V= uint4korr(pM); }ulongget80,2777
static inline void shortstore(uchar *T, int16 V) { int2store(T, V); }shortstore81,2857
static inline void longstore (uchar *T, int32 V) { int4store(T, V); }longstore82,2927
static inline void longlongget(longlong *V, const uchar *M)longlongget84,2998
static inline void longlongstore(uchar *T, longlong V)longlongstore88,3099

mysql/include/thr_cond.h,933
#define THR_COND_INCLUDEDTHR_COND_INCLUDED2,26
typedef CONDITION_VARIABLE native_cond_t;native_cond_t41,1344
static DWORD get_milliseconds(const struct timespec *abstime)get_milliseconds51,1494
static inline int native_cond_init(native_cond_t *cond)native_cond_init99,2684
static inline int native_cond_destroy(native_cond_t *cond)native_cond_destroy110,2909
static inline int native_cond_timedwait(native_cond_t *cond,native_cond_timedwait119,3075
static inline int native_cond_wait(native_cond_t *cond, native_mutex_t *mutex)native_cond_wait133,3491
static inline int native_cond_signal(native_cond_t *cond)native_cond_signal144,3733
static inline int native_cond_broadcast(native_cond_t *cond)native_cond_broadcast154,3902
static inline int my_cond_timedwait(native_cond_t *cond, my_mutex_t *mp,my_cond_timedwait172,4382
static inline int my_cond_wait(native_cond_t *cond, my_mutex_t *mpmy_cond_wait186,4799

mysql/include/mysql_version.h,808
#define _mysql_version_h_mysql_version_h9,262
#define PROTOCOL_VERSION PROTOCOL_VERSION11,288
#define MYSQL_SERVER_VERSION MYSQL_SERVER_VERSION12,327
#define MYSQL_BASE_VERSION MYSQL_BASE_VERSION13,371
#define MYSQL_SERVER_SUFFIX_DEF MYSQL_SERVER_SUFFIX_DEF14,419
#define FRM_VER FRM_VER15,457
#define MYSQL_VERSION_ID MYSQL_VERSION_ID16,495
#define MYSQL_PORT MYSQL_PORT17,537
#define MYSQL_PORT_DEFAULT MYSQL_PORT_DEFAULT18,578
#define MYSQL_UNIX_ADDR MYSQL_UNIX_ADDR19,616
#define MYSQL_CONFIG_NAME MYSQL_CONFIG_NAME20,669
#define MYSQL_COMPILATION_COMMENT MYSQL_COMPILATION_COMMENT21,709
#define LIBMYSQL_VERSION LIBMYSQL_VERSION22,775
#define LIBMYSQL_VERSION_ID LIBMYSQL_VERSION_ID23,819
#define SYS_SCHEMA_VERSION SYS_SCHEMA_VERSION24,861
#define LICENSE LICENSE27,921

mysql/include/sslopt-vars.h,1145
#define SSLOPT_VARS_INCLUDEDSSLOPT_VARS_INCLUDED17,774
const char *ssl_mode_names_lib[] =ssl_mode_names_lib25,952
TYPELIB ssl_mode_typelib = {array_elements(ssl_mode_names_lib) - 1, "",ssl_mode_typelib28,1071
static uint opt_ssl_mode     = SSL_MODE_PREFERRED;opt_ssl_mode31,1199
static char *opt_ssl_ca      = 0;opt_ssl_ca32,1250
static char *opt_ssl_capath  = 0;opt_ssl_capath33,1284
static char *opt_ssl_cert    = 0;opt_ssl_cert34,1318
static char *opt_ssl_cipher  = 0;opt_ssl_cipher35,1352
static char *opt_ssl_key     = 0;opt_ssl_key36,1386
static char *opt_ssl_crl     = 0;opt_ssl_crl37,1420
static char *opt_ssl_crlpath = 0;opt_ssl_crlpath38,1454
static char *opt_tls_version = 0;opt_tls_version39,1488
static my_bool ssl_mode_set_explicitly= FALSE;ssl_mode_set_explicitly40,1522
static my_bool opt_use_ssl_arg= TRUE;opt_use_ssl_arg41,1569
static my_bool opt_ssl_verify_server_cert_arg= FALSE;opt_ssl_verify_server_cert_arg42,1607
static void set_client_ssl_options(MYSQL *mysql)set_client_ssl_options44,1662
#define SSL_SET_OPTIONS(SSL_SET_OPTIONS71,2728
#define SSL_SET_OPTIONS(SSL_SET_OPTIONS73,2796

mysql/include/my_getopt.h,2657
#define _my_getopt_h_my_getopt_h18,770
#define GET_NO_ARG GET_NO_ARG24,870
#define GET_BOOL GET_BOOL25,895
#define GET_INT GET_INT26,920
#define GET_UINT GET_UINT27,945
#define GET_LONG GET_LONG28,970
#define GET_ULONG GET_ULONG29,995
#define GET_LL GET_LL30,1020
#define GET_ULL GET_ULL31,1045
#define GET_STR GET_STR32,1070
#define GET_STR_ALLOC GET_STR_ALLOC33,1095
#define GET_DISABLED GET_DISABLED34,1120
#define GET_ENUM GET_ENUM35,1145
#define GET_SET GET_SET36,1170
#define GET_DOUBLE GET_DOUBLE37,1195
#define GET_FLAGSET GET_FLAGSET38,1220
#define GET_PASSWORD GET_PASSWORD39,1245
#define GET_INT32 GET_INT3242,1291
#define GET_UINT32 GET_UINT3243,1317
#define GET_ASK_ADDR	GET_ASK_ADDR51,1485
#define GET_TYPE_MASK	GET_TYPE_MASK52,1511
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG };get_opt_arg_type61,1842
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG };NO_ARG61,1842
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG };OPT_ARG61,1842
enum get_opt_arg_type { NO_ARG, OPT_ARG, REQUIRED_ARG };REQUIRED_ARG61,1842
struct my_optionmy_option65,1920
  const char *name;                     /**< Name of the option. name=NULLname67,1939
  int        id;                        /**< For 0<id<=255 it's means oneid71,2184
  const char *comment;                  /**< option comment, for autom. --help.comment86,3268
  void       *value;                    /**< A pointer to the variable value */value90,3528
  void       *u_max_value;              /**< The user def. max variable value */u_max_value91,3608
  struct st_typelib *typelib;           /**< Pointer to possible values */typelib92,3689
  ulong     var_type;                   /**< GET_BOOL, GET_ULL, etc */var_type93,3764
  enum get_opt_arg_type arg_type;       /**< e.g. REQUIRED_ARG or OPT_ARG */arg_type94,3835
  longlong   def_value;                 /**< Default value */def_value95,3912
  longlong   min_value;                 /**< Min allowed value (for numbers) */min_value96,3974
  ulonglong  max_value;                 /**< Max allowed value (for numbers) */max_value97,4054
  longlong   sub_size;                  /**< Unused                          */sub_size98,4134
  long       block_size;                /**< Value should be a mult. of this (for numbers) */block_size99,4214
  void       *app_type;                 /**< To be used by an application */app_type100,4308
typedef my_bool (*my_get_one_option)(int, const struct my_option *, char *);my_get_one_option104,4390
typedef void *(*my_getopt_value)(const char *, size_t, const struct my_option *,my_getopt_value111,4753

mysql/include/decimal.h,1390
#define DECIMAL_INCLUDEDDECIMAL_INCLUDED17,770
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}__anon530a7d62010320,809
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}TRUNCATE20,809
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}HALF_EVEN20,809
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}HALF_UP20,809
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}CEILING20,809
{TRUNCATE=0, HALF_EVEN, HALF_UP, CEILING, FLOOR}FLOOR20,809
  decimal_round_mode;decimal_round_mode21,858
typedef int32 decimal_digit_t;decimal_digit_t22,880
typedef struct st_decimal_t {st_decimal_t33,1277
  int    intg, frac, len;intg34,1307
  int    intg, frac, len;frac34,1307
  int    intg, frac, len;len34,1307
  my_bool sign;sign35,1333
  decimal_digit_t *buf;buf36,1349
} decimal_t;decimal_t37,1373
#define string2decimal(string2decimal95,3757
#define string2decimal_fixed(string2decimal_fixed96,3822
#define decimal_make_zero(decimal_make_zero100,3925
#define decimal_string_size(decimal_string_size112,4418
#define E_DEC_OK E_DEC_OK125,4866
#define E_DEC_TRUNCATED E_DEC_TRUNCATED126,4900
#define E_DEC_OVERFLOW E_DEC_OVERFLOW127,4934
#define E_DEC_DIV_ZERO E_DEC_DIV_ZERO128,4968
#define E_DEC_BAD_NUM E_DEC_BAD_NUM129,5002
#define E_DEC_OOM E_DEC_OOM130,5036
#define E_DEC_ERROR E_DEC_ERROR132,5071
#define E_DEC_FATAL_ERROR E_DEC_FATAL_ERROR133,5105

mysql/include/sslopt-case.h,0

mysql/include/m_string.h,2185
#define _m_string_h_m_string_h18,768
#define bfill bfill24,872
#define bzero bzero25,922
#define bmove bmove26,972
#define strmov strmov27,1023
#define strnmov strnmov28,1091
static inline char *my_stpcpy(char *dst, const char *src)my_stpcpy78,2640
static inline char *my_stpncpy(char *dst, const char *src, size_t n)my_stpncpy102,3215
static inline longlong my_strtoll(const char *nptr, char **endptr, int base)my_strtoll112,3448
static inline ulonglong my_strtoull(const char *nptr, char **endptr, int base)my_strtoull121,3640
static inline char *my_strtok_r(char *str, const char *delim, char **saveptr)my_strtok_r130,3836
static inline int native_strcasecmp(const char *s1, const char *s2)native_strcasecmp140,4096
static inline int native_strncasecmp(const char *s1, const char *s2, size_t n)native_strncasecmp150,4326
typedef enum {__anon3ce91b760103167,4719
  MY_GCVT_ARG_FLOAT,MY_GCVT_ARG_FLOAT168,4734
  MY_GCVT_ARG_DOUBLEMY_GCVT_ARG_DOUBLE169,4755
} my_gcvt_arg_type;my_gcvt_arg_type170,4776
#define NOT_FIXED_DEC NOT_FIXED_DEC178,5059
#define FLOATING_POINT_BUFFER FLOATING_POINT_BUFFER185,5275
#define MAX_DECPT_FOR_F_FORMAT MAX_DECPT_FOR_F_FORMAT195,5759
#define MY_GCVT_MAX_FIELD_WIDTH MY_GCVT_MAX_FIELD_WIDTH202,6009
#define ll2str(ll2str213,6503
#define longlong10_to_str(longlong10_to_str214,6552
#define strtoll(strtoll216,6626
#define strtoull(strtoull217,6669
#define longlong2str(longlong2str222,6860
typedef struct st_mysql_lex_string LEX_STRING;LEX_STRING235,7135
typedef struct st_mysql_const_lex_string LEX_CSTRING;LEX_CSTRING236,7182
#define STRING_WITH_LEN(STRING_WITH_LEN238,7237
#define USTRING_WITH_LEN(USTRING_WITH_LEN239,7287
#define C_STRING_WITH_LEN(C_STRING_WITH_LEN240,7347
static inline const uchar *skip_trailing_space(const uchar *ptr,size_t len)skip_trailing_space277,9019
static inline const uchar *skip_trailing_space(const uchar *ptr, size_t len)skip_trailing_space314,10136
static inline void lex_string_set(LEX_STRING *lex_str, const char *c_str)lex_string_set329,10432
static inline void lex_cstring_set(LEX_CSTRING *lex_str, const char *c_str)lex_cstring_set335,10577

mysql/include/plugin_keyring.h,639
#define MYSQL_PLUGIN_KEYRING_INCLUDEDMYSQL_PLUGIN_KEYRING_INCLUDED17,777
#define MYSQL_KEYRING_INTERFACE_VERSION MYSQL_KEYRING_INTERFACE_VERSION24,893
struct st_mysql_keyringst_mysql_keyring31,1033
  int interface_version;interface_version33,1059
  my_bool (*mysql_key_store)(const char *key_id, const char *key_type,mysql_key_store52,1743
  my_bool (*mysql_key_fetch)(const char *key_id, char **key_type,mysql_key_fetch73,2611
  my_bool (*mysql_key_remove)(const char *key_id, const char *user_id);mysql_key_remove89,3064
  my_bool (*mysql_key_generate)(const char *key_id, const char *key_type,mysql_key_generate106,3587

mysql/include/mysql_time.h,1278
#define _mysql_time_h__mysql_time_h_17,752
enum enum_mysql_timestamp_typeenum_mysql_timestamp_type28,1128
  MYSQL_TIMESTAMP_NONE= -2, MYSQL_TIMESTAMP_ERROR= -1,MYSQL_TIMESTAMP_NONE30,1161
  MYSQL_TIMESTAMP_NONE= -2, MYSQL_TIMESTAMP_ERROR= -1,MYSQL_TIMESTAMP_ERROR30,1161
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME= 1, MYSQL_TIMESTAMP_TIME= 2MYSQL_TIMESTAMP_DATE31,1216
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME= 1, MYSQL_TIMESTAMP_TIME= 2MYSQL_TIMESTAMP_DATETIME31,1216
  MYSQL_TIMESTAMP_DATE= 0, MYSQL_TIMESTAMP_DATETIME= 1, MYSQL_TIMESTAMP_TIME= 2MYSQL_TIMESTAMP_TIME31,1216
typedef struct st_mysql_timest_mysql_time47,1926
  unsigned int  year, month, day, hour, minute, second;year49,1957
  unsigned int  year, month, day, hour, minute, second;month49,1957
  unsigned int  year, month, day, hour, minute, second;day49,1957
  unsigned int  year, month, day, hour, minute, second;hour49,1957
  unsigned int  year, month, day, hour, minute, second;minute49,1957
  unsigned int  year, month, day, hour, minute, second;second49,1957
  unsigned long second_part;  /**< microseconds */second_part50,2013
  my_bool       neg;neg51,2064
  enum enum_mysql_timestamp_type time_type;time_type52,2085
} MYSQL_TIME;MYSQL_TIME53,2129

mysql/include/my_thread.h,1905
#define MY_THREAD_INCLUDEDMY_THREAD_INCLUDED19,836
#define ETIME ETIME28,979
#define ETIMEDOUT ETIMEDOUT32,1059
#define DEFAULT_THREAD_STACK	DEFAULT_THREAD_STACK40,1297
#define DEFAULT_THREAD_STACK	DEFAULT_THREAD_STACK42,1344
#define EXTERNC EXTERNC46,1412
#define EXTERNCEXTERNC48,1445
typedef volatile LONG    my_thread_once_t;my_thread_once_t54,1497
typedef DWORD            my_thread_t;my_thread_t55,1540
typedef struct thread_attrthread_attr56,1578
  DWORD dwStackSize;dwStackSize58,1607
  int detachstate;detachstate59,1628
} my_thread_attr_t;my_thread_attr_t60,1647
#define MY_THREAD_CREATE_JOINABLE MY_THREAD_CREATE_JOINABLE61,1667
#define MY_THREAD_CREATE_DETACHED MY_THREAD_CREATE_DETACHED62,1703
typedef void * (__cdecl *my_start_routine)(void *);my_start_routine63,1739
#define MY_THREAD_ONCE_INIT MY_THREAD_ONCE_INIT64,1791
#define MY_THREAD_ONCE_INPROGRESS MY_THREAD_ONCE_INPROGRESS65,1827
#define MY_THREAD_ONCE_DONE MY_THREAD_ONCE_DONE66,1863
typedef struct st_my_thread_handlest_my_thread_handle77,2249
  my_thread_t thread;thread79,2286
  HANDLE handle;handle81,2322
} my_thread_handle;my_thread_handle83,2346
static inline my_thread_t my_thread_self()my_thread_self87,2448
static inline int my_thread_equal(my_thread_t t1, my_thread_t t2)my_thread_equal96,2579
static inline int my_thread_attr_init(my_thread_attr_t *attr)my_thread_attr_init105,2728
static inline int my_thread_attr_destroy(my_thread_attr_t *attr)my_thread_attr_destroy117,2990
static inline int my_thread_attr_setstacksize(my_thread_attr_t *attr,my_thread_attr_setstacksize129,3258
static inline int my_thread_attr_setdetachstate(my_thread_attr_t *attr,my_thread_attr_setdetachstate140,3528
static inline int my_thread_attr_getstacksize(my_thread_attr_t *attr,my_thread_attr_getstacksize151,3800
static inline void my_thread_yield()my_thread_yield162,4073

mysql/include/my_list.h,384
#define _list_h__list_h_17,762
typedef struct st_list {st_list23,820
  struct st_list *prev,*next;prev24,845
  struct st_list *prev,*next;next24,845
  void *data;data25,875
} LIST;LIST26,889
typedef int (*list_walk_action)(void *,void *);list_walk_action28,898
#define list_rest(list_rest38,1313
#define list_push(list_push39,1346
#define list_pop(list_pop40,1392

mysql/include/sslopt-longopts.h,0

mysql/include/typelib.h,641
#define _typelib_h_typelib_h18,769
typedef struct st_typelib {	/* Different types saved here */st_typelib22,812
  unsigned int count;		/* How many types */count23,873
  const char *name;		/* Name of typelib */name24,917
  const char **type_names;type_names25,960
  unsigned int *type_lengths;type_lengths26,987
} TYPELIB;TYPELIB27,1017
#define FIND_TYPE_BASIC FIND_TYPE_BASIC32,1222
#define FIND_TYPE_NO_PREFIX FIND_TYPE_NO_PREFIX34,1320
#define FIND_TYPE_NO_OVERWRITE FIND_TYPE_NO_OVERWRITE36,1428
#define FIND_TYPE_ALLOW_NUMBER FIND_TYPE_ALLOW_NUMBER38,1514
#define FIND_TYPE_COMMA_TERM FIND_TYPE_COMMA_TERM40,1608

mysql/include/mysql_com.h,16678
#define _mysql_com_h_mysql_com_h21,824
#define HOSTNAME_LENGTH HOSTNAME_LENGTH24,899
#define SYSTEM_CHARSET_MBMAXLEN SYSTEM_CHARSET_MBMAXLEN25,926
#define FILENAME_CHARSET_MBMAXLEN FILENAME_CHARSET_MBMAXLEN26,960
#define NAME_CHAR_LEN	NAME_CHAR_LEN27,996
#define USERNAME_CHAR_LENGTH USERNAME_CHAR_LENGTH28,1064
#define USERNAME_CHAR_LENGTH_STR USERNAME_CHAR_LENGTH_STR29,1096
#define NAME_LEN NAME_LEN31,1151
#define USERNAME_LENGTH USERNAME_LENGTH33,1230
#define MYSQL_AUTODETECT_CHARSET_NAME MYSQL_AUTODETECT_CHARSET_NAME35,1310
#define SERVER_VERSION_LENGTH SERVER_VERSION_LENGTH37,1356
#define SQLSTATE_LENGTH SQLSTATE_LENGTH38,1389
#define TABLE_COMMENT_INLINE_MAXLEN TABLE_COMMENT_INLINE_MAXLEN43,1451
#define TABLE_COMMENT_MAXLEN TABLE_COMMENT_MAXLEN44,1520
#define COLUMN_COMMENT_MAXLEN COLUMN_COMMENT_MAXLEN45,1554
#define INDEX_COMMENT_MAXLEN INDEX_COMMENT_MAXLEN46,1589
#define TABLE_PARTITION_COMMENT_MAXLEN TABLE_PARTITION_COMMENT_MAXLEN47,1623
#define MAX_PACKET_LENGTH MAX_PACKET_LENGTH55,1923
#define USER_HOST_BUFF_SIZE USER_HOST_BUFF_SIZE63,2185
#define LOCAL_HOST	LOCAL_HOST65,2252
#define LOCAL_HOST_NAMEDPIPE LOCAL_HOST_NAMEDPIPE66,2283
#define MYSQL_NAMEDPIPE MYSQL_NAMEDPIPE70,2338
#define MYSQL_SERVICENAME MYSQL_SERVICENAME71,2370
#define FRM_GCOL_HEADER_SIZE FRM_GCOL_HEADER_SIZE75,2505
#define GENERATED_COLUMN_EXPRESSION_MAXLEN GENERATED_COLUMN_EXPRESSION_MAXLEN79,2618
#define SCRAMBLE_LENGTH SCRAMBLE_LENGTH84,2818
#define AUTH_PLUGIN_DATA_PART_1_LENGTH AUTH_PLUGIN_DATA_PART_1_LENGTH85,2845
#define SCRAMBLED_PASSWORD_CHAR_LENGTH SCRAMBLED_PASSWORD_CHAR_LENGTH87,2966
#define NOT_NULL_FLAG	NOT_NULL_FLAG90,3029
#define PRI_KEY_FLAG	PRI_KEY_FLAG91,3080
#define UNIQUE_KEY_FLAG UNIQUE_KEY_FLAG92,3141
#define MULTIPLE_KEY_FLAG MULTIPLE_KEY_FLAG93,3204
#define BLOB_FLAG	BLOB_FLAG94,3262
#define UNSIGNED_FLAG	UNSIGNED_FLAG95,3306
#define ZEROFILL_FLAG	ZEROFILL_FLAG96,3356
#define BINARY_FLAG	BINARY_FLAG97,3406
#define ENUM_FLAG	ENUM_FLAG100,3505
#define AUTO_INCREMENT_FLAG AUTO_INCREMENT_FLAG101,3551
#define TIMESTAMP_FLAG	TIMESTAMP_FLAG102,3621
#define SET_FLAG	SET_FLAG103,3677
#define NO_DEFAULT_VALUE_FLAG NO_DEFAULT_VALUE_FLAG104,3721
#define ON_UPDATE_NOW_FLAG ON_UPDATE_NOW_FLAG105,3795
#define NUM_FLAG	NUM_FLAG106,3871
#define PART_KEY_FLAG	PART_KEY_FLAG107,3928
#define GROUP_FLAG	GROUP_FLAG108,3988
#define UNIQUE_FLAG	UNIQUE_FLAG109,4040
#define BINCMP_FLAG	BINCMP_FLAG110,4098
#define GET_FIXED_FIELDS_FLAG GET_FIXED_FIELDS_FLAG111,4157
#define FIELD_IN_PART_FUNC_FLAG FIELD_IN_PART_FUNC_FLAG112,4235
#define FIELD_IN_ADD_INDEX FIELD_IN_ADD_INDEX117,4437
#define FIELD_IS_RENAMED FIELD_IS_RENAMED118,4474
#define FIELD_FLAGS_STORAGE_MEDIA FIELD_FLAGS_STORAGE_MEDIA119,4551
#define FIELD_FLAGS_STORAGE_MEDIA_MASK FIELD_FLAGS_STORAGE_MEDIA_MASK120,4628
#define FIELD_FLAGS_COLUMN_FORMAT FIELD_FLAGS_COLUMN_FORMAT121,4700
#define FIELD_FLAGS_COLUMN_FORMAT_MASK FIELD_FLAGS_COLUMN_FORMAT_MASK122,4777
#define FIELD_IS_DROPPED FIELD_IS_DROPPED123,4849
#define EXPLICIT_NULL_FLAG EXPLICIT_NULL_FLAG124,4926
#define REFRESH_GRANT	REFRESH_GRANT127,5066
#define REFRESH_LOG	REFRESH_LOG128,5118
#define REFRESH_TABLES	REFRESH_TABLES129,5169
#define REFRESH_HOSTS	REFRESH_HOSTS130,5218
#define REFRESH_STATUS	REFRESH_STATUS131,5266
#define REFRESH_THREADS	REFRESH_THREADS132,5322
#define REFRESH_SLAVE REFRESH_SLAVE133,5375
#define REFRESH_MASTER REFRESH_MASTER135,5472
#define REFRESH_ERROR_LOG REFRESH_ERROR_LOG137,5582
#define REFRESH_ENGINE_LOG REFRESH_ENGINE_LOG138,5650
#define REFRESH_BINARY_LOG REFRESH_BINARY_LOG139,5722
#define REFRESH_RELAY_LOG REFRESH_RELAY_LOG140,5785
#define REFRESH_GENERAL_LOG REFRESH_GENERAL_LOG141,5847
#define REFRESH_SLOW_LOG REFRESH_SLOW_LOG142,5911
#define REFRESH_READ_LOCK	REFRESH_READ_LOCK145,6033
#define REFRESH_FAST	REFRESH_FAST146,6092
#define REFRESH_QUERY_CACHE	REFRESH_QUERY_CACHE149,6189
#define REFRESH_QUERY_CACHE_FREE REFRESH_QUERY_CACHE_FREE150,6223
#define REFRESH_DES_KEY_FILE	REFRESH_DES_KEY_FILE151,6288
#define REFRESH_USER_RESOURCES	REFRESH_USER_RESOURCES152,6326
#define REFRESH_FOR_EXPORT REFRESH_FOR_EXPORT153,6366
#define REFRESH_OPTIMIZER_COSTS REFRESH_OPTIMIZER_COSTS154,6442
#define CLIENT_LONG_PASSWORD	CLIENT_LONG_PASSWORD156,6513
#define CLIENT_FOUND_ROWS	CLIENT_FOUND_ROWS157,6576
#define CLIENT_LONG_FLAG	CLIENT_LONG_FLAG158,6641
#define CLIENT_CONNECT_WITH_DB	CLIENT_CONNECT_WITH_DB159,6695
#define CLIENT_NO_SCHEMA	CLIENT_NO_SCHEMA160,6764
#define CLIENT_COMPRESS	CLIENT_COMPRESS161,6832
#define CLIENT_ODBC	CLIENT_ODBC162,6895
#define CLIENT_LOCAL_FILES	CLIENT_LOCAL_FILES163,6937
#define CLIENT_IGNORE_SPACE	CLIENT_IGNORE_SPACE164,6998
#define CLIENT_PROTOCOL_41	CLIENT_PROTOCOL_41165,7061
#define CLIENT_INTERACTIVE	CLIENT_INTERACTIVE166,7115
#define CLIENT_SSL CLIENT_SSL167,7183
#define CLIENT_IGNORE_SIGPIPE CLIENT_IGNORE_SIGPIPE168,7256
#define CLIENT_TRANSACTIONS	CLIENT_TRANSACTIONS169,7318
#define CLIENT_RESERVED CLIENT_RESERVED170,7389
#define CLIENT_RESERVED2 CLIENT_RESERVED2171,7462
#define CLIENT_MULTI_STATEMENTS CLIENT_MULTI_STATEMENTS172,7540
#define CLIENT_MULTI_RESULTS CLIENT_MULTI_RESULTS173,7624
#define CLIENT_PS_MULTI_RESULTS CLIENT_PS_MULTI_RESULTS174,7703
#define CLIENT_PLUGIN_AUTH CLIENT_PLUGIN_AUTH176,7783
#define CLIENT_CONNECT_ATTRS CLIENT_CONNECT_ATTRS177,7867
#define CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA180,8026
#define CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS CLIENT_CAN_HANDLE_EXPIRED_PASSWORDS183,8158
#define CLIENT_SESSION_TRACK CLIENT_SESSION_TRACK189,8358
#define CLIENT_DEPRECATE_EOF CLIENT_DEPRECATE_EOF191,8439
#define CLIENT_SSL_VERIFY_SERVER_CERT CLIENT_SSL_VERIFY_SERVER_CERT193,8481
#define CLIENT_REMEMBER_OPTIONS CLIENT_REMEMBER_OPTIONS194,8531
#define CAN_CLIENT_COMPRESS CAN_CLIENT_COMPRESS197,8597
#define CAN_CLIENT_COMPRESS CAN_CLIENT_COMPRESS199,8647
#define CLIENT_ALL_FLAGS CLIENT_ALL_FLAGS203,8755
#define CLIENT_BASIC_FLAGS CLIENT_BASIC_FLAGS237,10379
#define SERVER_STATUS_IN_TRANS SERVER_STATUS_IN_TRANS248,10806
#define SERVER_STATUS_AUTOCOMMIT SERVER_STATUS_AUTOCOMMIT249,10843
#define SERVER_MORE_RESULTS_EXISTS SERVER_MORE_RESULTS_EXISTS250,10913
#define SERVER_QUERY_NO_GOOD_INDEX_USED SERVER_QUERY_NO_GOOD_INDEX_USED251,10991
#define SERVER_QUERY_NO_INDEX_USED SERVER_QUERY_NO_INDEX_USED252,11034
#define SERVER_STATUS_CURSOR_EXISTS SERVER_STATUS_CURSOR_EXISTS258,11273
#define SERVER_STATUS_LAST_ROW_SENT SERVER_STATUS_LAST_ROW_SENT263,11415
#define SERVER_STATUS_DB_DROPPED SERVER_STATUS_DB_DROPPED264,11455
#define SERVER_STATUS_NO_BACKSLASH_ESCAPES SERVER_STATUS_NO_BACKSLASH_ESCAPES265,11528
#define SERVER_STATUS_METADATA_CHANGED SERVER_STATUS_METADATA_CHANGED271,11735
#define SERVER_QUERY_WAS_SLOW SERVER_QUERY_WAS_SLOW272,11779
#define SERVER_PS_OUT_PARAMS SERVER_PS_OUT_PARAMS277,11887
#define SERVER_STATUS_IN_TRANS_READONLY SERVER_STATUS_IN_TRANS_READONLY286,12249
#define SERVER_SESSION_STATE_CHANGED SERVER_SESSION_STATE_CHANGED292,12449
#define SERVER_STATUS_CLEAR_SET SERVER_STATUS_CLEAR_SET302,12801
#define MYSQL_ERRMSG_SIZE	MYSQL_ERRMSG_SIZE312,13369
#define NET_READ_TIMEOUT	NET_READ_TIMEOUT313,13399
#define NET_WRITE_TIMEOUT	NET_WRITE_TIMEOUT314,13450
#define NET_WAIT_TIMEOUT	NET_WAIT_TIMEOUT315,13503
#define ONLY_KILL_QUERY ONLY_KILL_QUERY317,13563
typedef struct st_vio Vio;Vio321,13631
#define MAX_TINYINT_WIDTH MAX_TINYINT_WIDTH323,13659
#define MAX_SMALLINT_WIDTH MAX_SMALLINT_WIDTH324,13736
#define MAX_MEDIUMINT_WIDTH MAX_MEDIUMINT_WIDTH325,13814
#define MAX_INT_WIDTH MAX_INT_WIDTH326,13892
#define MAX_BIGINT_WIDTH MAX_BIGINT_WIDTH327,13969
#define MAX_CHAR_WIDTH	MAX_CHAR_WIDTH328,14040
#define MAX_BLOB_WIDTH	MAX_BLOB_WIDTH329,14102
typedef struct st_net {st_net331,14165
  Vio *vio;vio332,14189
  unsigned char *buff,*buff_end,*write_pos,*read_pos;buff333,14201
  unsigned char *buff,*buff_end,*write_pos,*read_pos;buff_end333,14201
  unsigned char *buff,*buff_end,*write_pos,*read_pos;write_pos333,14201
  unsigned char *buff,*buff_end,*write_pos,*read_pos;read_pos333,14201
  my_socket fd;					/* For Perl DBI/dbd */fd334,14255
  unsigned long remain_in_buf,length, buf_length, where_b;remain_in_buf340,14499
  unsigned long remain_in_buf,length, buf_length, where_b;length340,14499
  unsigned long remain_in_buf,length, buf_length, where_b;buf_length340,14499
  unsigned long remain_in_buf,length, buf_length, where_b;where_b340,14499
  unsigned long max_packet,max_packet_size;max_packet341,14558
  unsigned long max_packet,max_packet_size;max_packet_size341,14558
  unsigned int pkt_nr,compress_pkt_nr;pkt_nr342,14602
  unsigned int pkt_nr,compress_pkt_nr;compress_pkt_nr342,14602
  unsigned int write_timeout, read_timeout, retry_count;write_timeout343,14641
  unsigned int write_timeout, read_timeout, retry_count;read_timeout343,14641
  unsigned int write_timeout, read_timeout, retry_count;retry_count343,14641
  int fcntl;fcntl344,14698
  unsigned int *return_status;return_status345,14711
  unsigned char reading_or_writing;reading_or_writing346,14742
  char save_char;save_char347,14778
  my_bool unused1; /* Please remove with the next incompatible ABI change */unused1348,14796
  my_bool unused2; /* Please remove with the next incompatible ABI change */unused2349,14873
  my_bool compress;compress350,14950
  my_bool unused3; /* Please remove with the next incompatible ABI change. */unused3351,14970
  unsigned char *unused;unused359,15261
  unsigned int last_errno;last_errno360,15286
  unsigned char error; error361,15313
  my_bool unused4; /* Please remove with the next incompatible ABI change. */unused4362,15337
  my_bool unused5; /* Please remove with the next incompatible ABI change. */unused5363,15415
  char last_error[MYSQL_ERRMSG_SIZE];last_error365,15573
  char sqlstate[SQLSTATE_LENGTH+1];sqlstate367,15686
  void *extension;extension376,16075
} NET;NET377,16094
#define packet_error packet_error380,16103
#define CLIENT_MULTI_QUERIES CLIENT_MULTI_QUERIES382,16178
#define FIELD_TYPE_DECIMAL FIELD_TYPE_DECIMAL383,16238
#define FIELD_TYPE_NEWDECIMAL FIELD_TYPE_NEWDECIMAL384,16288
#define FIELD_TYPE_TINY FIELD_TYPE_TINY385,16341
#define FIELD_TYPE_SHORT FIELD_TYPE_SHORT386,16388
#define FIELD_TYPE_LONG FIELD_TYPE_LONG387,16436
#define FIELD_TYPE_FLOAT FIELD_TYPE_FLOAT388,16483
#define FIELD_TYPE_DOUBLE FIELD_TYPE_DOUBLE389,16531
#define FIELD_TYPE_NULL FIELD_TYPE_NULL390,16580
#define FIELD_TYPE_TIMESTAMP FIELD_TYPE_TIMESTAMP391,16627
#define FIELD_TYPE_LONGLONG FIELD_TYPE_LONGLONG392,16679
#define FIELD_TYPE_INT24 FIELD_TYPE_INT24393,16730
#define FIELD_TYPE_DATE FIELD_TYPE_DATE394,16778
#define FIELD_TYPE_TIME FIELD_TYPE_TIME395,16825
#define FIELD_TYPE_DATETIME FIELD_TYPE_DATETIME396,16872
#define FIELD_TYPE_YEAR FIELD_TYPE_YEAR397,16923
#define FIELD_TYPE_NEWDATE FIELD_TYPE_NEWDATE398,16970
#define FIELD_TYPE_ENUM FIELD_TYPE_ENUM399,17020
#define FIELD_TYPE_SET FIELD_TYPE_SET400,17067
#define FIELD_TYPE_TINY_BLOB FIELD_TYPE_TINY_BLOB401,17113
#define FIELD_TYPE_MEDIUM_BLOB FIELD_TYPE_MEDIUM_BLOB402,17165
#define FIELD_TYPE_LONG_BLOB FIELD_TYPE_LONG_BLOB403,17219
#define FIELD_TYPE_BLOB FIELD_TYPE_BLOB404,17271
#define FIELD_TYPE_VAR_STRING FIELD_TYPE_VAR_STRING405,17318
#define FIELD_TYPE_STRING FIELD_TYPE_STRING406,17371
#define FIELD_TYPE_CHAR FIELD_TYPE_CHAR407,17420
#define FIELD_TYPE_INTERVAL FIELD_TYPE_INTERVAL408,17467
#define FIELD_TYPE_GEOMETRY FIELD_TYPE_GEOMETRY409,17514
#define FIELD_TYPE_BIT FIELD_TYPE_BIT410,17565
#define MYSQL_SHUTDOWN_KILLABLE_CONNECT MYSQL_SHUTDOWN_KILLABLE_CONNECT416,17685
#define MYSQL_SHUTDOWN_KILLABLE_TRANS MYSQL_SHUTDOWN_KILLABLE_TRANS417,17752
#define MYSQL_SHUTDOWN_KILLABLE_LOCK_TABLE MYSQL_SHUTDOWN_KILLABLE_LOCK_TABLE418,17819
#define MYSQL_SHUTDOWN_KILLABLE_UPDATE MYSQL_SHUTDOWN_KILLABLE_UPDATE419,17886
enum mysql_enum_shutdown_level {mysql_enum_shutdown_level421,17954
  SHUTDOWN_DEFAULT = 0,SHUTDOWN_DEFAULT427,18166
  SHUTDOWN_WAIT_CONNECTIONS= MYSQL_SHUTDOWN_KILLABLE_CONNECT,SHUTDOWN_WAIT_CONNECTIONS429,18238
  SHUTDOWN_WAIT_TRANSACTIONS= MYSQL_SHUTDOWN_KILLABLE_TRANS,SHUTDOWN_WAIT_TRANSACTIONS431,18342
  SHUTDOWN_WAIT_UPDATES= MYSQL_SHUTDOWN_KILLABLE_UPDATE,SHUTDOWN_WAIT_UPDATES433,18477
  SHUTDOWN_WAIT_ALL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE << 1),SHUTDOWN_WAIT_ALL_BUFFERS435,18597
  SHUTDOWN_WAIT_CRITICAL_BUFFERS= (MYSQL_SHUTDOWN_KILLABLE_UPDATE << 1) + 1,SHUTDOWN_WAIT_CRITICAL_BUFFERS437,18737
  KILL_QUERY= 254,KILL_QUERY439,18859
  KILL_CONNECTION= 255KILL_CONNECTION440,18878
enum enum_cursor_typeenum_cursor_type444,18906
  CURSOR_TYPE_NO_CURSOR= 0,CURSOR_TYPE_NO_CURSOR446,18930
  CURSOR_TYPE_READ_ONLY= 1,CURSOR_TYPE_READ_ONLY447,18958
  CURSOR_TYPE_FOR_UPDATE= 2,CURSOR_TYPE_FOR_UPDATE448,18986
  CURSOR_TYPE_SCROLLABLE= 4CURSOR_TYPE_SCROLLABLE449,19015
enum enum_mysql_set_optionenum_mysql_set_option454,19083
  MYSQL_OPTION_MULTI_STATEMENTS_ON,MYSQL_OPTION_MULTI_STATEMENTS_ON456,19112
  MYSQL_OPTION_MULTI_STATEMENTS_OFFMYSQL_OPTION_MULTI_STATEMENTS_OFF457,19148
enum enum_session_state_typeenum_session_state_type467,19442
  SESSION_TRACK_SYSTEM_VARIABLES,                       /* Session system variables */SESSION_TRACK_SYSTEM_VARIABLES469,19473
  SESSION_TRACK_SCHEMA,                          /* Current schema */SESSION_TRACK_SCHEMA470,19560
  SESSION_TRACK_STATE_CHANGE,                  /* track session state changes */SESSION_TRACK_STATE_CHANGE471,19630
  SESSION_TRACK_GTIDS,SESSION_TRACK_GTIDS472,19711
  SESSION_TRACK_TRANSACTION_CHARACTERISTICS,  /* Transaction chistics */SESSION_TRACK_TRANSACTION_CHARACTERISTICS473,19734
  SESSION_TRACK_TRANSACTION_STATE             /* Transaction state */SESSION_TRACK_TRANSACTION_STATE474,19807
#define SESSION_TRACK_BEGIN SESSION_TRACK_BEGIN477,19881
#define SESSION_TRACK_END SESSION_TRACK_END479,19941
#define IS_SESSION_STATE_TYPE(IS_SESSION_STATE_TYPE481,20000
#define net_new_transaction(net_new_transaction484,20104
struct rand_struct {rand_struct509,20950
  unsigned long seed1,seed2,max_value;seed1510,20971
  unsigned long seed1,seed2,max_value;seed2510,20971
  unsigned long seed1,seed2,max_value;max_value510,20971
  double max_value_dbl;max_value_dbl511,21010
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,Item_result520,21120
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,STRING_RESULT520,21120
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,REAL_RESULT520,21120
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,INT_RESULT520,21120
enum Item_result {STRING_RESULT=0, REAL_RESULT, INT_RESULT, ROW_RESULT,ROW_RESULT520,21120
                  DECIMAL_RESULT};DECIMAL_RESULT521,21192
typedef struct st_udf_argsst_udf_args523,21228
  unsigned int arg_count;		/* Number of arguments */arg_count525,21257
  enum Item_result *arg_type;		/* Pointer to item_results */arg_type526,21310
  char **args;				/* Pointer to argument */args527,21371
  unsigned long *lengths;		/* Length of string arguments */lengths528,21415
  char *maybe_null;			/* Set to 1 for all maybe_null args */maybe_null529,21475
  char **attributes;                    /* Pointer to attribute name */attributes530,21536
  unsigned long *attribute_lengths;     /* Length of attribute arguments */attribute_lengths531,21608
  void *extension;extension532,21684
} UDF_ARGS;UDF_ARGS533,21703
typedef struct st_udf_initst_udf_init537,21765
  my_bool maybe_null;          /* 1 if function can return NULL */maybe_null539,21794
  unsigned int decimals;       /* for real functions */decimals540,21861
  unsigned long max_length;    /* For string functions */max_length541,21917
  char *ptr;                   /* free pointer for function data */ptr542,21975
  my_bool const_item;          /* 1 if function always returns the same value */const_item543,22043
  void *extension;extension544,22124
} UDF_INIT;UDF_INIT545,22143
#define NET_HEADER_SIZE NET_HEADER_SIZE552,22297
#define COMP_HEADER_SIZE COMP_HEADER_SIZE553,22351
#define NULL_LENGTH NULL_LENGTH608,24287
#define MYSQL_STMT_HEADER MYSQL_STMT_HEADER609,24355
#define MYSQL_LONG_DATA_HEADER MYSQL_LONG_DATA_HEADER610,24389
#define NOT_FIXED_DEC NOT_FIXED_DEC612,24424

mysql/include/mysql/service_mysql_keyring.h,788
#define MYSQL_SERVICE_MYSQL_PLUGIN_KEYRING_INCLUDEDMYSQL_SERVICE_MYSQL_PLUGIN_KEYRING_INCLUDED17,796
extern struct mysql_keyring_service_stmysql_keyring_service_st23,889
  int (*my_key_store_func)(const char *, const char *, const char *,my_key_store_func25,930
  int (*my_key_fetch_func)(const char *, char **, const char *, void **,my_key_fetch_func27,1049
  int (*my_key_remove_func)(const char *, const char *);my_key_remove_func29,1160
  int (*my_key_generate_func)(const char *, const char *, const char *,my_key_generate_func30,1217
} *mysql_keyring_service;mysql_keyring_service32,1328
#define my_key_store(my_key_store36,1384
#define my_key_fetch(my_key_fetch39,1577
#define my_key_remove(my_key_remove42,1770
#define my_key_generate(my_key_generate44,1872

mysql/include/mysql/plugin_auth.h.pp,0

mysql/include/mysql/com_data.h,3544
#define PLUGIN_PROTOCOL_INCLUDEDPLUGIN_PROTOCOL_INCLUDED16,769
typedef struct st_com_init_db_datast_com_init_db_data31,1057
  const char *db_name;db_name33,1094
  unsigned long length;length34,1117
} COM_INIT_DB_DATA;COM_INIT_DB_DATA35,1141
typedef struct st_com_refresh_datast_com_refresh_data37,1162
  unsigned char options;options39,1199
} COM_REFRESH_DATA;COM_REFRESH_DATA40,1224
typedef struct st_com_shutdown_datast_com_shutdown_data42,1245
  enum mysql_enum_shutdown_level level;level44,1283
} COM_SHUTDOWN_DATA;COM_SHUTDOWN_DATA45,1323
typedef struct st_com_kill_datast_com_kill_data47,1345
  unsigned long id;id49,1379
} COM_KILL_DATA;COM_KILL_DATA50,1399
typedef struct st_com_set_option_datast_com_set_option_data52,1417
  unsigned int opt_command;opt_command54,1457
} COM_SET_OPTION_DATA;COM_SET_OPTION_DATA55,1485
typedef struct st_com_stmt_execute_datast_com_stmt_execute_data57,1509
  unsigned long stmt_id;stmt_id59,1551
  unsigned long flags;flags60,1576
  unsigned char *params;params61,1599
  unsigned long params_length;params_length62,1624
} COM_STMT_EXECUTE_DATA;COM_STMT_EXECUTE_DATA63,1655
typedef struct st_com_stmt_fetch_datast_com_stmt_fetch_data65,1681
  unsigned long stmt_id;stmt_id67,1721
  unsigned long num_rows;num_rows68,1746
} COM_STMT_FETCH_DATA;COM_STMT_FETCH_DATA69,1772
typedef struct st_com_stmt_send_long_data_datast_com_stmt_send_long_data_data71,1796
  unsigned long stmt_id;stmt_id73,1845
  unsigned int  param_number;param_number74,1870
  unsigned char *longdata;longdata75,1900
  unsigned long length;length76,1927
} COM_STMT_SEND_LONG_DATA_DATA;COM_STMT_SEND_LONG_DATA_DATA77,1951
typedef struct st_com_stmt_prepare_datast_com_stmt_prepare_data79,1984
  const char *query;query81,2026
  unsigned int length;length82,2047
} COM_STMT_PREPARE_DATA;COM_STMT_PREPARE_DATA83,2070
typedef struct st_stmt_close_datast_stmt_close_data85,2096
  unsigned int stmt_id;stmt_id87,2132
} COM_STMT_CLOSE_DATA;COM_STMT_CLOSE_DATA88,2156
typedef struct st_com_stmt_reset_datast_com_stmt_reset_data90,2180
  unsigned int stmt_id;stmt_id92,2220
} COM_STMT_RESET_DATA;COM_STMT_RESET_DATA93,2244
typedef struct st_com_query_datast_com_query_data95,2268
  const char *query;query97,2303
  unsigned int length;length98,2324
} COM_QUERY_DATA;COM_QUERY_DATA99,2347
typedef struct st_com_field_list_datast_com_field_list_data101,2366
  unsigned char   *table_name;table_name103,2406
  unsigned int    table_name_length;table_name_length104,2437
  const unsigned char *query;query105,2474
  unsigned int        query_length;query_length106,2504
} COM_FIELD_LIST_DATA;COM_FIELD_LIST_DATA107,2540
union COM_DATA {COM_DATA109,2564
  COM_INIT_DB_DATA com_init_db;com_init_db110,2581
  COM_REFRESH_DATA com_refresh;com_refresh111,2613
  COM_SHUTDOWN_DATA com_shutdown;com_shutdown112,2645
  COM_KILL_DATA com_kill;com_kill113,2679
  COM_SET_OPTION_DATA com_set_option;com_set_option114,2705
  COM_STMT_EXECUTE_DATA com_stmt_execute;com_stmt_execute115,2743
  COM_STMT_FETCH_DATA com_stmt_fetch;com_stmt_fetch116,2785
  COM_STMT_SEND_LONG_DATA_DATA com_stmt_send_long_data;com_stmt_send_long_data117,2823
  COM_STMT_PREPARE_DATA com_stmt_prepare;com_stmt_prepare118,2879
  COM_STMT_CLOSE_DATA com_stmt_close;com_stmt_close119,2921
  COM_STMT_RESET_DATA com_stmt_reset;com_stmt_reset120,2959
  COM_QUERY_DATA com_query;com_query121,2997
  COM_FIELD_LIST_DATA com_field_list;com_field_list122,3025

mysql/include/mysql/mysql_lex_string.h,465
#define MYSQL_LEX_STRING_INCLUDEDMYSQL_LEX_STRING_INCLUDED17,773
struct st_mysql_lex_stringst_mysql_lex_string19,808
  char *str;str21,837
  size_t length;length22,850
typedef struct st_mysql_lex_string MYSQL_LEX_STRING;MYSQL_LEX_STRING24,870
struct st_mysql_const_lex_stringst_mysql_const_lex_string26,924
  const char *str;str28,959
  size_t length;length29,978
typedef struct st_mysql_const_lex_string MYSQL_LEX_CSTRING;MYSQL_LEX_CSTRING31,998

mysql/include/mysql/plugin.h,9846
#define _my_plugin_h_my_plugin_h17,766
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT33,1173
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT35,1246
    #define  MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT39,1363
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT41,1415
#define MYSQL_PLUGIN_EXPORTMYSQL_PLUGIN_EXPORT45,1510
#define MYSQL_THD MYSQL_THD51,1588
#define MYSQL_THD MYSQL_THD53,1617
typedef void * MYSQL_PLUGIN;MYSQL_PLUGIN56,1649
#define MYSQL_XIDDATASIZE MYSQL_XIDDATASIZE62,1739
struct st_mysql_xid {st_mysql_xid71,2050
  long formatID;formatID72,2072
  long gtrid_length;gtrid_length73,2089
  long bqual_length;bqual_length74,2110
  char data[MYSQL_XIDDATASIZE];  /* Not \0-terminated */data75,2131
typedef struct st_mysql_xid MYSQL_XID;MYSQL_XID77,2191
#define MYSQL_PLUGIN_INTERFACE_VERSION MYSQL_PLUGIN_INTERFACE_VERSION83,2353
#define MYSQL_UDF_PLUGIN MYSQL_UDF_PLUGIN88,2439
#define MYSQL_STORAGE_ENGINE_PLUGIN MYSQL_STORAGE_ENGINE_PLUGIN89,2514
#define MYSQL_FTPARSER_PLUGIN MYSQL_FTPARSER_PLUGIN90,2589
#define MYSQL_DAEMON_PLUGIN MYSQL_DAEMON_PLUGIN91,2664
#define MYSQL_INFORMATION_SCHEMA_PLUGIN MYSQL_INFORMATION_SCHEMA_PLUGIN92,2737
#define MYSQL_AUDIT_PLUGIN MYSQL_AUDIT_PLUGIN93,2807
#define MYSQL_REPLICATION_PLUGIN MYSQL_REPLICATION_PLUGIN94,2882
#define MYSQL_AUTHENTICATION_PLUGIN MYSQL_AUTHENTICATION_PLUGIN95,2955
#define MYSQL_VALIDATE_PASSWORD_PLUGIN MYSQL_VALIDATE_PASSWORD_PLUGIN96,3032
#define MYSQL_GROUP_REPLICATION_PLUGIN MYSQL_GROUP_REPLICATION_PLUGIN97,3112
#define MYSQL_KEYRING_PLUGIN MYSQL_KEYRING_PLUGIN98,3190
#define MYSQL_MAX_PLUGIN_TYPE_NUM MYSQL_MAX_PLUGIN_TYPE_NUM99,3263
#define PLUGIN_LICENSE_PROPRIETARY PLUGIN_LICENSE_PROPRIETARY102,3406
#define PLUGIN_LICENSE_GPL PLUGIN_LICENSE_GPL103,3443
#define PLUGIN_LICENSE_BSD PLUGIN_LICENSE_BSD104,3472
#define PLUGIN_LICENSE_PROPRIETARY_STRING PLUGIN_LICENSE_PROPRIETARY_STRING106,3502
#define PLUGIN_LICENSE_GPL_STRING PLUGIN_LICENSE_GPL_STRING107,3558
#define PLUGIN_LICENSE_BSD_STRING PLUGIN_LICENSE_BSD_STRING108,3598
#define __MYSQL_DECLARE_PLUGIN(__MYSQL_DECLARE_PLUGIN118,3867
#define __MYSQL_DECLARE_PLUGIN(__MYSQL_DECLARE_PLUGIN123,4207
#define mysql_declare_plugin(mysql_declare_plugin129,4571
#define mysql_declare_plugin_end mysql_declare_plugin_end135,4817
enum enum_mysql_show_typeenum_mysql_show_type140,4938
  SHOW_UNDEF, SHOW_BOOL,SHOW_UNDEF142,4966
  SHOW_UNDEF, SHOW_BOOL,SHOW_BOOL142,4966
  SHOW_INT,        ///< shown as _unsigned_ intSHOW_INT143,4991
  SHOW_LONG,       ///< shown as _unsigned_ longSHOW_LONG144,5039
  SHOW_LONGLONG,   ///< shown as _unsigned_ longlongSHOW_LONGLONG145,5088
  SHOW_CHAR, SHOW_CHAR_PTR,SHOW_CHAR146,5141
  SHOW_CHAR, SHOW_CHAR_PTR,SHOW_CHAR_PTR146,5141
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_ARRAY147,5169
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_FUNC147,5169
  SHOW_ARRAY, SHOW_FUNC, SHOW_DOUBLESHOW_DOUBLE147,5169
enum enum_mysql_show_scopeenum_mysql_show_scope161,5472
  SHOW_SCOPE_UNDEF,SHOW_SCOPE_UNDEF163,5501
  SHOW_SCOPE_GLOBALSHOW_SCOPE_GLOBAL164,5521
  SHOW_SCOPE_SESSION,SHOW_SCOPE_SESSION168,5619
  SHOW_SCOPE_ALLSHOW_SCOPE_ALL169,5641
struct st_mysql_show_varst_mysql_show_var176,5713
  const char *name;name178,5740
  char *value;value179,5760
  enum enum_mysql_show_type type;type180,5775
  enum enum_mysql_show_scope scope;scope181,5809
#define SHOW_VAR_MAX_NAME_LEN SHOW_VAR_MAX_NAME_LEN184,5849
#define SHOW_VAR_FUNC_BUFF_SIZE SHOW_VAR_FUNC_BUFF_SIZE185,5882
typedef int (*mysql_show_var_func)(MYSQL_THD, struct st_mysql_show_var*, char *);mysql_show_var_func186,5919
#define PLUGIN_OPT_NO_INSTALL PLUGIN_OPT_NO_INSTALL193,6041
#define PLUGIN_OPT_NO_UNINSTALL PLUGIN_OPT_NO_UNINSTALL194,6110
#define PLUGIN_VAR_BOOL PLUGIN_VAR_BOOL202,6252
#define PLUGIN_VAR_INT PLUGIN_VAR_INT203,6291
#define PLUGIN_VAR_LONG PLUGIN_VAR_LONG204,6330
#define PLUGIN_VAR_LONGLONG PLUGIN_VAR_LONGLONG205,6369
#define PLUGIN_VAR_STR PLUGIN_VAR_STR206,6408
#define PLUGIN_VAR_ENUM PLUGIN_VAR_ENUM207,6447
#define PLUGIN_VAR_SET PLUGIN_VAR_SET208,6486
#define PLUGIN_VAR_DOUBLE PLUGIN_VAR_DOUBLE209,6525
#define PLUGIN_VAR_UNSIGNED PLUGIN_VAR_UNSIGNED210,6564
#define PLUGIN_VAR_THDLOCAL PLUGIN_VAR_THDLOCAL211,6603
#define PLUGIN_VAR_READONLY PLUGIN_VAR_READONLY212,6675
#define PLUGIN_VAR_NOSYSVAR PLUGIN_VAR_NOSYSVAR213,6749
#define PLUGIN_VAR_NOCMDOPT PLUGIN_VAR_NOCMDOPT214,6816
#define PLUGIN_VAR_NOCMDARG PLUGIN_VAR_NOCMDARG215,6887
#define PLUGIN_VAR_RQCMDARG PLUGIN_VAR_RQCMDARG216,6957
#define PLUGIN_VAR_OPCMDARG PLUGIN_VAR_OPCMDARG217,7033
#define PLUGIN_VAR_MEMALLOC PLUGIN_VAR_MEMALLOC218,7109
typedef int (*mysql_var_check_func)(MYSQL_THD thd,mysql_var_check_func242,7992
typedef void (*mysql_var_update_func)(MYSQL_THD thd,mysql_var_update_func260,8664
#define PLUGIN_VAR_MASK PLUGIN_VAR_MASK268,8920
#define MYSQL_PLUGIN_VAR_HEADER MYSQL_PLUGIN_VAR_HEADER273,9131
#define MYSQL_SYSVAR_NAME(MYSQL_SYSVAR_NAME280,9333
#define MYSQL_SYSVAR(MYSQL_SYSVAR281,9387
#define DECLARE_MYSQL_SYSVAR_BASIC(DECLARE_MYSQL_SYSVAR_BASIC292,9717
#define DECLARE_MYSQL_SYSVAR_SIMPLE(DECLARE_MYSQL_SYSVAR_SIMPLE298,9904
#define DECLARE_MYSQL_SYSVAR_TYPELIB(DECLARE_MYSQL_SYSVAR_TYPELIB305,10126
#define DECLARE_THDVAR_FUNC(DECLARE_THDVAR_FUNC311,10315
#define DECLARE_MYSQL_THDVAR_BASIC(DECLARE_MYSQL_THDVAR_BASIC314,10398
#define DECLARE_MYSQL_THDVAR_SIMPLE(DECLARE_MYSQL_THDVAR_SIMPLE321,10619
#define DECLARE_MYSQL_THDVAR_TYPELIB(DECLARE_MYSQL_THDVAR_TYPELIB329,10875
#define MYSQL_SYSVAR_BOOL(MYSQL_SYSVAR_BOOL342,11204
#define MYSQL_SYSVAR_STR(MYSQL_SYSVAR_STR347,11424
#define MYSQL_SYSVAR_INT(MYSQL_SYSVAR_INT352,11644
#define MYSQL_SYSVAR_UINT(MYSQL_SYSVAR_UINT357,11893
#define MYSQL_SYSVAR_LONG(MYSQL_SYSVAR_LONG362,12174
#define MYSQL_SYSVAR_ULONG(MYSQL_SYSVAR_ULONG367,12426
#define MYSQL_SYSVAR_LONGLONG(MYSQL_SYSVAR_LONGLONG372,12710
#define MYSQL_SYSVAR_ULONGLONG(MYSQL_SYSVAR_ULONGLONG377,12975
#define MYSQL_SYSVAR_ENUM(MYSQL_SYSVAR_ENUM382,13272
#define MYSQL_SYSVAR_SET(MYSQL_SYSVAR_SET387,13522
#define MYSQL_SYSVAR_DOUBLE(MYSQL_SYSVAR_DOUBLE392,13775
#define MYSQL_THDVAR_BOOL(MYSQL_THDVAR_BOOL397,14033
#define MYSQL_THDVAR_STR(MYSQL_THDVAR_STR402,14266
#define MYSQL_THDVAR_INT(MYSQL_THDVAR_INT407,14499
#define MYSQL_THDVAR_UINT(MYSQL_THDVAR_UINT412,14761
#define MYSQL_THDVAR_LONG(MYSQL_THDVAR_LONG417,15055
#define MYSQL_THDVAR_ULONG(MYSQL_THDVAR_ULONG422,15320
#define MYSQL_THDVAR_LONGLONG(MYSQL_THDVAR_LONGLONG427,15617
#define MYSQL_THDVAR_ULONGLONG(MYSQL_THDVAR_ULONGLONG432,15895
#define MYSQL_THDVAR_ENUM(MYSQL_THDVAR_ENUM437,16205
#define MYSQL_THDVAR_SET(MYSQL_THDVAR_SET442,16468
#define MYSQL_THDVAR_DOUBLE(MYSQL_THDVAR_DOUBLE447,16734
#define SYSVAR(SYSVAR454,17028
#define THDVAR(THDVAR458,17143
struct st_mysql_pluginst_mysql_plugin466,17288
  int type;             /* the plugin type (a MYSQL_XXX_PLUGIN value)   */type468,17313
  void *info;           /* pointer to type-specific plugin descriptor   */info469,17388
  const char *name;     /* plugin name                                  */name470,17463
  const char *author;   /* plugin author (for I_S.PLUGINS)              */author471,17538
  const char *descr;    /* general descriptive text (for I_S.PLUGINS)   */descr472,17613
  int license;          /* the plugin license (PLUGIN_LICENSE_XXX)      */license473,17688
  int (*init)(MYSQL_PLUGIN);  /* the function to invoke when plugin is loaded */init474,17763
  int (*deinit)(MYSQL_PLUGIN);/* the function to invoke when plugin is unloaded */deinit475,17844
  unsigned int version; /* plugin version (for I_S.PLUGINS)             */version476,17927
  struct st_mysql_show_var *status_vars;status_vars477,18002
  struct st_mysql_sys_var **system_vars;system_vars478,18043
  void * __reserved1;   /* reserved for dependency checking             */__reserved1479,18084
  unsigned long flags;  /* flags for plugin */flags480,18159
#define MYSQL_FTPARSER_INTERFACE_VERSION MYSQL_FTPARSER_INTERFACE_VERSION486,18347
#define MYSQL_REWRITE_PRE_PARSE_INTERFACE_VERSION MYSQL_REWRITE_PRE_PARSE_INTERFACE_VERSION492,18536
#define MYSQL_REWRITE_POST_PARSE_INTERFACE_VERSION MYSQL_REWRITE_POST_PARSE_INTERFACE_VERSION493,18593
#define MYSQL_DAEMON_INTERFACE_VERSION MYSQL_DAEMON_INTERFACE_VERSION500,18849
struct st_mysql_daemonst_mysql_daemon507,19009
  int interface_version;interface_version509,19034
#define MYSQL_INFORMATION_SCHEMA_INTERFACE_VERSION MYSQL_INFORMATION_SCHEMA_INTERFACE_VERSION518,19262
struct st_mysql_information_schemast_mysql_information_schema525,19434
  int interface_version;interface_version527,19471
#define MYSQL_HANDLERTON_INTERFACE_VERSION MYSQL_HANDLERTON_INTERFACE_VERSION536,19706
struct st_mysql_storage_enginest_mysql_storage_engine544,19909
  int interface_version;interface_version546,19942
 #define MYSQL_REPLICATION_INTERFACE_VERSION MYSQL_REPLICATION_INTERFACE_VERSION555,20055
 struct Mysql_replication {Mysql_replication560,20151
   int interface_version;interface_version561,20179
#define MYSQL_VALUE_TYPE_STRING MYSQL_VALUE_TYPE_STRING574,20617
#define MYSQL_VALUE_TYPE_REAL MYSQL_VALUE_TYPE_REAL575,20651
#define MYSQL_VALUE_TYPE_INT MYSQL_VALUE_TYPE_INT576,20685
struct st_mysql_valuest_mysql_value578,20720
  int (*value_type)(struct st_mysql_value *);value_type580,20744
  const char *(*val_str)(struct st_mysql_value *, char *buffer, int *length);val_str581,20790
  int (*val_real)(struct st_mysql_value *, double *realbuf);val_real582,20868
  int (*val_int)(struct st_mysql_value *, long long *intbuf);val_int583,20929
  int (*is_unsigned)(struct st_mysql_value *);is_unsigned584,20991

mysql/include/mysql/service_rpl_transaction_write_set.h,824
struct st_trans_write_setst_trans_write_set52,1754
  unsigned int m_flags; // reservedm_flags54,1782
  unsigned long write_set_size; // Size of the PKE set of the transaction.write_set_size55,1818
  unsigned long long* write_set;  // A pointer to the PKE set.write_set56,1893
typedef struct st_trans_write_set Transaction_write_set;Transaction_write_set58,1959
extern struct transaction_write_set_service_st {transaction_write_set_service_st60,2017
  Transaction_write_set* (*get_transaction_write_set)(unsigned long m_thread_id);get_transaction_write_set61,2066
} *transaction_write_set_service;transaction_write_set_service62,2148
#define get_transaction_write_set(get_transaction_write_set66,2212
#define MYSQL_SERVICE_TRANSACTION_WRITE_SET_INCLUDEDMYSQL_SERVICE_TRANSACTION_WRITE_SET_INCLUDED79,2460

mysql/include/mysql/service_mysql_alloc.h,1453
#define MYSQL_SERVICE_MYSQL_ALLOC_INCLUDEDMYSQL_SERVICE_MYSQL_ALLOC_INCLUDED17,788
typedef int myf_t;myf_t31,990
typedef void * (*mysql_malloc_t)(PSI_memory_key key, size_t size, myf_t flags);mysql_malloc_t33,1010
typedef void * (*mysql_realloc_t)(PSI_memory_key key, void *ptr, size_t size, myf_t flags);mysql_realloc_t34,1090
typedef void (*mysql_claim_t)(void *ptr);mysql_claim_t35,1182
typedef void (*mysql_free_t)(void *ptr);mysql_free_t36,1224
typedef void * (*my_memdup_t)(PSI_memory_key key, const void *from, size_t length, myf_t flags);my_memdup_t37,1265
typedef char * (*my_strdup_t)(PSI_memory_key key, const char *from, myf_t flags);my_strdup_t38,1362
typedef char * (*my_strndup_t)(PSI_memory_key key, const char *from, size_t length, myf_t flags)my_strndup_t39,1444
struct mysql_malloc_service_stmysql_malloc_service_st41,1543
  mysql_malloc_t mysql_malloc;mysql_malloc43,1576
  mysql_realloc_t mysql_realloc;mysql_realloc44,1607
  mysql_claim_t mysql_claim;mysql_claim45,1640
  mysql_free_t mysql_free;mysql_free46,1669
  my_memdup_t my_memdup;my_memdup47,1696
  my_strdup_t my_strdup;my_strdup48,1721
  my_strndup_t my_strndup;my_strndup49,1746
#define my_malloc my_malloc56,1868
#define my_realloc my_realloc57,1921
#define my_claim my_claim58,1976
#define my_free my_free59,2027
#define my_memdup my_memdup60,2076
#define my_strdup my_strdup61,2126
#define my_strndup my_strndup62,2176

mysql/include/mysql/plugin_group_replication.h,3599
#define MYSQL_PLUGIN_GROUP_REPLICATION_INCLUDEDMYSQL_PLUGIN_GROUP_REPLICATION_INCLUDED17,788
#define MYSQL_GROUP_REPLICATION_INTERFACE_VERSION MYSQL_GROUP_REPLICATION_INTERFACE_VERSION22,937
typedef struct st_group_replication_connection_status_callbacksst_group_replication_connection_status_callbacks33,1242
  void* const context;context35,1308
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name36,1331
  void (*set_group_name)(void* const context, const char& value, size_t length);set_group_name37,1414
  void (*set_source_uuid)(void* const context, const char& value, size_t length);set_source_uuid38,1495
  void (*set_service_state)(void* const context, bool state);set_service_state39,1577
} GROUP_REPLICATION_CONNECTION_STATUS_CALLBACKS;GROUP_REPLICATION_CONNECTION_STATUS_CALLBACKS40,1639
typedef struct st_group_replication_group_members_callbacksst_group_replication_group_members_callbacks51,1932
  void* const context;context53,1994
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name54,2017
  void (*set_member_id)(void* const context, const char& value, size_t length);set_member_id55,2100
  void (*set_member_host)(void* const context, const char& value, size_t length);set_member_host56,2180
  void (*set_member_port)(void* const context, unsigned int value);set_member_port57,2262
  void (*set_member_state)(void* const context, const char& value, size_t length);set_member_state58,2330
} GROUP_REPLICATION_GROUP_MEMBERS_CALLBACKS;GROUP_REPLICATION_GROUP_MEMBERS_CALLBACKS59,2413
typedef struct st_group_replication_member_stats_callbacksst_group_replication_member_stats_callbacks70,2707
  void* const context;context72,2768
  void (*set_channel_name)(void* const context, const char& value, size_t length);set_channel_name73,2791
  void (*set_view_id)(void* const context, const char& value, size_t length);set_view_id74,2874
  void (*set_member_id)(void* const context, const char& value, size_t length);set_member_id75,2952
  void (*set_transactions_committed)(void* const context, const char& value, size_t length);set_transactions_committed76,3032
  void (*set_last_conflict_free_transaction)(void* const context, const char& value, size_t lengset_last_conflict_free_transaction77,3125
  void (*set_transactions_in_queue)(void* const context, unsigned long long int value);set_transactions_in_queue78,3226
  void (*set_transactions_certified)(void* const context, unsigned long long int value);set_transactions_certified79,3314
  void (*set_transactions_conflicts_detected)(void* const context, unsigned long long int value)set_transactions_conflicts_detected80,3403
  void (*set_transactions_rows_in_validation)(void* const context, unsigned long long int value)set_transactions_rows_in_validation81,3501
} GROUP_REPLICATION_GROUP_MEMBER_STATS_CALLBACKS;GROUP_REPLICATION_GROUP_MEMBER_STATS_CALLBACKS82,3599
struct st_mysql_group_replicationst_mysql_group_replication84,3650
  int interface_version;interface_version86,3686
  int (*start)();start91,3780
  int (*stop)();stop95,3865
  bool (*is_running)();is_running99,3971
  int (*set_retrieved_certification_info)(void* info);set_retrieved_certification_info106,4176
  bool (*get_connection_status_info)get_connection_status_info117,4555
  bool (*get_group_members_info)get_group_members_info129,4984
  bool (*get_group_member_stats_info)get_group_member_stats_info142,5444
  unsigned int (*get_members_number_info)();get_members_number_info148,5612

mysql/include/mysql/services.h.pp,0

mysql/include/mysql/service_ssl_wrapper.h,110
#define SSL_WRAPPER_INCLUDEDSSL_WRAPPER_INCLUDED2,29
namespace ssl_wrappe_servicessl_wrappe_service21,820

mysql/include/mysql/service_thd_wait.h,1144
#define MYSQL_SERVICE_THD_WAIT_INCLUDEDMYSQL_SERVICE_THD_WAIT_INCLUDED17,785
#define MYSQL_THD MYSQL_THD51,2137
#define MYSQL_THD MYSQL_THD53,2166
typedef enum _thd_wait_type_e {_thd_wait_type_e77,3146
  THD_WAIT_SLEEP= 1,THD_WAIT_SLEEP78,3178
  THD_WAIT_DISKIO= 2,THD_WAIT_DISKIO79,3199
  THD_WAIT_ROW_LOCK= 3,THD_WAIT_ROW_LOCK80,3221
  THD_WAIT_GLOBAL_LOCK= 4,THD_WAIT_GLOBAL_LOCK81,3245
  THD_WAIT_META_DATA_LOCK= 5,THD_WAIT_META_DATA_LOCK82,3272
  THD_WAIT_TABLE_LOCK= 6,THD_WAIT_TABLE_LOCK83,3302
  THD_WAIT_USER_LOCK= 7,THD_WAIT_USER_LOCK84,3328
  THD_WAIT_BINLOG= 8,THD_WAIT_BINLOG85,3353
  THD_WAIT_GROUP_COMMIT= 9,THD_WAIT_GROUP_COMMIT86,3375
  THD_WAIT_SYNC= 10,THD_WAIT_SYNC87,3403
  THD_WAIT_LAST= 11THD_WAIT_LAST88,3424
} thd_wait_type;thd_wait_type89,3444
extern struct thd_wait_service_st {thd_wait_service_st91,3462
  void (*thd_wait_begin_func)(MYSQL_THD, int);thd_wait_begin_func92,3498
  void (*thd_wait_end_func)(MYSQL_THD);thd_wait_end_func93,3545
} *thd_wait_service;thd_wait_service94,3585
#define thd_wait_begin(thd_wait_begin98,3636
#define thd_wait_end(thd_wait_end100,3737

mysql/include/mysql/plugin_auth_common.h,1746
#define MYSQL_PLUGIN_AUTH_COMMON_INCLUDEDMYSQL_PLUGIN_AUTH_COMMON_INCLUDED23,930
#define MYSQL_USERNAME_LENGTH MYSQL_USERNAME_LENGTH26,1019
#define CR_AUTH_PLUGIN_ERROR CR_AUTH_PLUGIN_ERROR38,1334
#define CR_AUTH_HANDSHAKE CR_AUTH_HANDSHAKE45,1579
#define CR_AUTH_USER_CREDENTIALS CR_AUTH_USER_CREDENTIALS52,1795
#define CR_ERROR CR_ERROR63,2266
#define CR_OK CR_OK71,2636
#define CR_OK_HANDSHAKE_COMPLETE CR_OK_HANDSHAKE_COMPLETE84,3183
#define PROXY_FLAG PROXY_FLAG90,3358
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN98,3567
typedef struct st_plugin_vio_infost_plugin_vio_info103,3631
  enum { MYSQL_VIO_INVALID, MYSQL_VIO_TCP, MYSQL_VIO_SOCKET,__anondb1bca600103105,3667
  enum { MYSQL_VIO_INVALID, MYSQL_VIO_TCP, MYSQL_VIO_SOCKET,MYSQL_VIO_INVALID105,3667
  enum { MYSQL_VIO_INVALID, MYSQL_VIO_TCP, MYSQL_VIO_SOCKET,MYSQL_VIO_TCP105,3667
  enum { MYSQL_VIO_INVALID, MYSQL_VIO_TCP, MYSQL_VIO_SOCKET,MYSQL_VIO_SOCKET105,3667
         MYSQL_VIO_PIPE, MYSQL_VIO_MEMORY } protocol;MYSQL_VIO_PIPE106,3728
         MYSQL_VIO_PIPE, MYSQL_VIO_MEMORY } protocol;MYSQL_VIO_MEMORY106,3728
         MYSQL_VIO_PIPE, MYSQL_VIO_MEMORY } protocol;protocol106,3728
  int socket;     /**< it's set, if the protocol is SOCKET or TCP */socket107,3782
  HANDLE handle;  /**< it's set, if the protocol is PIPE or MEMORY */handle109,3865
} MYSQL_PLUGIN_VIO_INFO;MYSQL_PLUGIN_VIO_INFO111,3942
typedef struct st_plugin_viost_plugin_vio116,4025
  int (*read_packet)(struct st_plugin_vio *vio, read_packet123,4246
  int (*write_packet)(struct st_plugin_vio *vio, write_packet130,4486
  void (*info)(struct st_plugin_vio *vio, struct st_plugin_vio_info *info);info138,4736
} MYSQL_PLUGIN_VIO;MYSQL_PLUGIN_VIO140,4813

mysql/include/mysql/plugin_ftparser.h,1950
#define _my_plugin_ftparser_h_my_plugin_ftparser_h17,775
enum enum_ftparser_modeenum_ftparser_mode27,1022
  MYSQL_FTPARSER_SIMPLE_MODE= 0,MYSQL_FTPARSER_SIMPLE_MODE37,1355
  MYSQL_FTPARSER_WITH_STOPWORDS= 1,MYSQL_FTPARSER_WITH_STOPWORDS48,1717
  MYSQL_FTPARSER_FULL_BOOLEAN_INFO= 2MYSQL_FTPARSER_FULL_BOOLEAN_INFO61,2286
enum enum_ft_token_typeenum_ft_token_type75,2681
  FT_TOKEN_EOF= 0,FT_TOKEN_EOF77,2707
  FT_TOKEN_WORD= 1,FT_TOKEN_WORD78,2726
  FT_TOKEN_LEFT_PAREN= 2,FT_TOKEN_LEFT_PAREN79,2746
  FT_TOKEN_RIGHT_PAREN= 3,FT_TOKEN_RIGHT_PAREN80,2772
  FT_TOKEN_STOPWORD= 4FT_TOKEN_STOPWORD81,2799
typedef struct st_mysql_ftparser_boolean_infost_mysql_ftparser_boolean_info117,4289
  enum enum_ft_token_type type;type119,4337
  int yesno;yesno120,4369
  int weight_adjust;weight_adjust121,4382
  char wasign;wasign122,4403
  char trunc;trunc123,4418
  int position;position124,4432
  char prev;prev126,4500
  char *quot;quot127,4513
} MYSQL_FTPARSER_BOOLEAN_INFO;MYSQL_FTPARSER_BOOLEAN_INFO128,4527
#define MYSQL_FTFLAGS_NEED_COPY MYSQL_FTFLAGS_NEED_COPY140,5085
typedef struct st_mysql_ftparser_paramst_mysql_ftparser_param180,6719
  int (*mysql_parse)(struct st_mysql_ftparser_param *,mysql_parse182,6760
  int (*mysql_add_word)(struct st_mysql_ftparser_param *,mysql_add_word184,6861
  void *ftparser_state;ftparser_state187,7037
  void *mysql_ftparam;mysql_ftparam188,7061
  const struct charset_info_st *cs;cs189,7084
  char *doc;doc190,7120
  int length;length191,7133
  int flags;flags192,7147
  enum enum_ftparser_mode mode;mode193,7160
} MYSQL_FTPARSER_PARAM;MYSQL_FTPARSER_PARAM194,7192
struct st_mysql_ftparserst_mysql_ftparser204,7444
  int interface_version;interface_version206,7471
  int (*parse)(MYSQL_FTPARSER_PARAM *param);parse207,7496
  int (*init)(MYSQL_FTPARSER_PARAM *param);init208,7541
  int (*deinit)(MYSQL_FTPARSER_PARAM *param);deinit209,7585

mysql/include/mysql/plugin_trace.h,1386
#define PLUGIN_TRACE_INCLUDEDPLUGIN_TRACE_INCLUDED17,775
#define PROTOCOL_STAGE_LIST(PROTOCOL_STAGE_LIST110,4030
#define TRACE_EVENT_LIST(TRACE_EVENT_LIST169,6952
struct st_trace_event_argsst_trace_event_args219,8658
  const char           *plugin_name;plugin_name221,8687
  int                   cmd;cmd222,8724
  const unsigned char  *hdr;hdr223,8753
  size_t                hdr_len;hdr_len224,8782
  const unsigned char  *pkt;pkt225,8815
  size_t                pkt_len;pkt_len226,8844
#define protocol_stage_enum(protocol_stage_enum232,8942
enum protocol_stage {protocol_stage234,8996
  PROTOCOL_STAGE_LIST(enum)PROTOCOL_STAGE_LIST235,9018
#define trace_event_enum(trace_event_enum239,9072
enum trace_event {trace_event241,9120
  TRACE_EVENT_LIST(enum)TRACE_EVENT_LIST242,9139
void* (tracing_start_callback)(struct st_mysql_client_plugin_TRACE *self,tracing_start_callback272,9892
void (tracing_stop_callback)(struct st_mysql_client_plugin_TRACE *self,tracing_stop_callback289,10425
int (trace_event_handler)(struct st_mysql_client_plugin_TRACE *self,trace_event_handler310,11121
struct st_mysql_client_plugin_TRACEst_mysql_client_plugin_TRACE318,11462
  tracing_start_callback *tracing_start;tracing_start321,11529
  tracing_stop_callback  *tracing_stop;tracing_stop322,11570
  trace_event_handler    *trace_event;trace_event323,11610

mysql/include/mysql/plugin_auth.h,1828
#define MYSQL_PLUGIN_AUTH_INCLUDEDMYSQL_PLUGIN_AUTH_INCLUDED25,889
#define MYSQL_AUTHENTICATION_INTERFACE_VERSION MYSQL_AUTHENTICATION_INTERFACE_VERSION29,952
#define PASSWORD_USED_NO PASSWORD_USED_NO35,1096
#define PASSWORD_USED_YES PASSWORD_USED_YES36,1131
#define PASSWORD_USED_NO_MENTION PASSWORD_USED_NO_MENTION37,1166
#define AUTH_FLAG_PRIVILEGED_USER_FOR_PASSWORD_CHANGE AUTH_FLAG_PRIVILEGED_USER_FOR_PASSWORD_CHANGE41,1230
#define AUTH_FLAG_USES_INTERNAL_STORAGE AUTH_FLAG_USES_INTERNAL_STORAGE42,1294
typedef struct st_mysql_server_auth_infost_mysql_server_auth_info47,1428
  char *user_name;user_name53,1610
  unsigned int user_name_length;user_name_length58,1665
  const char *auth_string;auth_string64,1803
  unsigned long auth_string_length;auth_string_length69,1868
  char authenticated_as[MYSQL_USERNAME_LENGTH+1]; authenticated_as76,2101
  char external_user[512];external_user84,2340
  int  password_used;password_used94,2616
  const char *host_or_ip;host_or_ip100,2760
  unsigned int host_or_ip_length;host_or_ip_length105,2823
} MYSQL_SERVER_AUTH_INFO;MYSQL_SERVER_AUTH_INFO107,2858
struct st_mysql_authst_mysql_auth112,2934
  int interface_version;                        /** version plugin uses */interface_version114,2957
  const char *client_auth_plugin;client_auth_plugin119,3161
  int (*authenticate_user)(MYSQL_PLUGIN_VIO *vio, MYSQL_SERVER_AUTH_INFO *info);authenticate_user126,3472
  int (*generate_authentication_string)(char *outbuf,generate_authentication_string143,4252
  int (*validate_authentication_string)(char* const inbuf, unsigned int buflen);validate_authentication_string155,4582
  int (*set_salt)(const char *password, unsigned int password_len,set_salt170,5126
  const unsigned long authentication_flags;authentication_flags175,5308

mysql/include/mysql/thread_type.h,788
#define THREAD_TYPE_INCLUDEDTHREAD_TYPE_INCLUDED19,838
enum enum_thread_typeenum_thread_type26,956
  NON_SYSTEM_THREAD= 0,NON_SYSTEM_THREAD28,980
  SYSTEM_THREAD_SLAVE_IO= 1,SYSTEM_THREAD_SLAVE_IO29,1004
  SYSTEM_THREAD_SLAVE_SQL= 2,SYSTEM_THREAD_SLAVE_SQL30,1033
  SYSTEM_THREAD_NDBCLUSTER_BINLOG= 4,SYSTEM_THREAD_NDBCLUSTER_BINLOG31,1063
  SYSTEM_THREAD_EVENT_SCHEDULER= 8,SYSTEM_THREAD_EVENT_SCHEDULER32,1101
  SYSTEM_THREAD_EVENT_WORKER= 16,SYSTEM_THREAD_EVENT_WORKER33,1137
  SYSTEM_THREAD_INFO_REPOSITORY= 32,SYSTEM_THREAD_INFO_REPOSITORY34,1171
  SYSTEM_THREAD_SLAVE_WORKER= 64,SYSTEM_THREAD_SLAVE_WORKER35,1208
  SYSTEM_THREAD_COMPRESS_GTID_TABLE= 128,SYSTEM_THREAD_COMPRESS_GTID_TABLE36,1242
  SYSTEM_THREAD_BACKGROUND= 256SYSTEM_THREAD_BACKGROUND37,1284

mysql/include/mysql/services.h,64
#define MYSQL_SERVICES_INCLUDEDMYSQL_SERVICES_INCLUDED58,1879

mysql/include/mysql/get_password.h,154
#define MYSQL_GET_PASSWORD_H_INCLUDEDMYSQL_GET_PASSWORD_H_INCLUDED22,875
typedef char *(* strdup_handler_t)(const char *, int);strdup_handler_t28,954

mysql/include/mysql/service_command.h,2573
#define MYSQL_SERVICE_COMMAND_INCLUDEDMYSQL_SERVICE_COMMAND_INCLUDED2,39
struct st_send_fieldst_send_field41,1323
  const char *db_name;db_name43,1346
  const char *table_name;table_name44,1369
  const char *org_table_name;org_table_name45,1395
  const char *col_name;col_name46,1425
  const char *org_col_name;org_col_name47,1449
  unsigned long length;length48,1477
  unsigned int charsetnr;charsetnr49,1501
  unsigned int flags;flags50,1527
  unsigned int decimals;decimals51,1549
  enum_field_types type;type52,1574
struct st_command_service_cbsst_command_service_cbs56,1604
  int (*start_result_metadata)(void *ctx, uint num_cols, uint flags,start_result_metadata110,3447
  int (*field_metadata)(void *ctx, struct st_send_field *field,field_metadata124,3844
  int (*end_result_metadata)(void *ctx, uint server_status,end_result_metadata138,4366
  int (*start_row)(void *ctx);start_row150,4671
  int (*end_row)(void *ctx);end_row161,4900
  void (*abort_row)(void *ctx);abort_row177,5272
  ulong (*get_client_capabilities)(void *ctx);get_client_capabilities186,5459
  int (*get_null)(void * ctx);get_null198,5701
  int (*get_integer)(void * ctx, longlong value);get_integer213,6100
  int (*get_longlong)(void * ctx, longlong value, uint is_unsigned);get_longlong226,6415
  int (*get_decimal)(void * ctx, const decimal_t * value);get_decimal238,6684
  int (*get_double)(void * ctx, double value, uint32_t decimals);get_double254,7131
  int (*get_date)(void * ctx, const MYSQL_TIME * value);get_date266,7411
  int (*get_time)(void * ctx, const MYSQL_TIME * value, uint decimals);get_time279,7725
  int (*get_datetime)(void * ctx, const MYSQL_TIME * value, uint decimals);get_datetime292,8058
  int (*get_string)(void * ctx, const char * value, size_t length,get_string314,8714
  void (*handle_ok)(void * ctx,handle_ok329,9363
  void (*handle_error)(void * ctx, uint sql_errno, const char * err_msg,handle_error342,9785
  void (*shutdown)(void *ctx, int server_shutdown);shutdown352,10148
enum cs_text_or_binarycs_text_or_binary355,10204
  CS_TEXT_REPRESENTATION= 1,   /* Let the server convert everything to string */CS_TEXT_REPRESENTATION357,10229
  CS_BINARY_REPRESENTATION= 2, /* Let the server use native types */CS_BINARY_REPRESENTATION358,10310
extern struct command_service_st {command_service_st361,10383
  int (*run_command)(MYSQL_SESSION session,run_command362,10418
} *command_service;command_service369,10802
#define command_service_run_command(command_service_run_command373,10852

mysql/include/mysql/plugin_keyring.h,639
#define MYSQL_PLUGIN_KEYRING_INCLUDEDMYSQL_PLUGIN_KEYRING_INCLUDED17,777
#define MYSQL_KEYRING_INTERFACE_VERSION MYSQL_KEYRING_INTERFACE_VERSION24,893
struct st_mysql_keyringst_mysql_keyring31,1033
  int interface_version;interface_version33,1059
  my_bool (*mysql_key_store)(const char *key_id, const char *key_type,mysql_key_store52,1743
  my_bool (*mysql_key_fetch)(const char *key_id, char **key_type,mysql_key_fetch73,2611
  my_bool (*mysql_key_remove)(const char *key_id, const char *user_id);mysql_key_remove89,3064
  my_bool (*mysql_key_generate)(const char *key_id, const char *key_type,mysql_key_generate106,3587

mysql/include/mysql/plugin_audit.h.pp,0

mysql/include/mysql/plugin_ftparser.h.pp,0

mysql/include/mysql/service_my_snprintf.h,472
#define MYSQL_SERVICE_MY_SNPRINTF_INCLUDEDMYSQL_SERVICE_MY_SNPRINTF_INCLUDED2,43
extern struct my_snprintf_service_st {my_snprintf_service_st80,2832
  size_t (*my_snprintf_type)(char*, size_t, const char*, ...);my_snprintf_type81,2871
  size_t (*my_vsnprintf_type)(char *, size_t, const char*, va_list);my_vsnprintf_type82,2934
} *my_snprintf_service;my_snprintf_service83,3003
#define my_vsnprintf my_vsnprintf87,3057
#define my_snprintf my_snprintf88,3117

mysql/include/mysql/service_rpl_transaction_ctx.h,897
struct st_transaction_termination_ctxst_transaction_termination_ctx38,1280
  unsigned long m_thread_id;m_thread_id40,1320
  unsigned int m_flags; // reservedm_flags41,1349
  char m_rollback_transaction;m_rollback_transaction48,1528
  char m_generated_gtid;m_generated_gtid55,1694
  int m_sidno;m_sidno56,1719
  long long int m_gno;m_gno57,1734
typedef struct st_transaction_termination_ctx Transaction_termination_ctx;Transaction_termination_ctx59,1760
extern struct rpl_transaction_ctx_service_st {rpl_transaction_ctx_service_st61,1836
  int (*set_transaction_ctx)(Transaction_termination_ctx transaction_termination_ctx);set_transaction_ctx62,1883
} *rpl_transaction_ctx_service;rpl_transaction_ctx_service63,1970
#define set_transaction_ctx(set_transaction_ctx67,2032
#define MYSQL_SERVICE_RPL_TRANSACTION_CTX_INCLUDEDMYSQL_SERVICE_RPL_TRANSACTION_CTX_INCLUDED80,2303

mysql/include/mysql/thread_pool_priv.h,410
#define THREAD_POOL_PRIV_INCLUDEDTHREAD_POOL_PRIV_INCLUDED19,771
#define MYSQL_SERVER MYSQL_SERVER33,1364
struct Connection_handler_functionsConnection_handler_functions57,2101
  uint max_threads;max_threads62,2222
  bool (*add_connection)(Channel_info *channel_info);add_connection73,2483
  void (*end)(void);end78,2617
typedef void (do_thd_impl_uint64)(THD*, uint64);do_thd_impl_uint64106,3372

mysql/include/mysql/client_plugin.h.pp,0

mysql/include/mysql/client_plugin.h,1414
#define MYSQL_CLIENT_PLUGIN_INCLUDEDMYSQL_CLIENT_PLUGIN_INCLUDED24,894
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT43,1315
    #define MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT45,1388
    #define  MYSQL_PLUGIN_EXPORT MYSQL_PLUGIN_EXPORT49,1505
    #define MYSQL_PLUGIN_EXPORTMYSQL_PLUGIN_EXPORT51,1557
#define MYSQL_PLUGIN_EXPORTMYSQL_PLUGIN_EXPORT55,1651
#define MYSQL_CLIENT_reserved1 MYSQL_CLIENT_reserved164,1753
#define MYSQL_CLIENT_reserved2 MYSQL_CLIENT_reserved265,1800
#define MYSQL_CLIENT_AUTHENTICATION_PLUGIN MYSQL_CLIENT_AUTHENTICATION_PLUGIN66,1847
#define MYSQL_CLIENT_TRACE_PLUGIN MYSQL_CLIENT_TRACE_PLUGIN67,1894
#define MYSQL_CLIENT_AUTHENTICATION_PLUGIN_INTERFACE_VERSION MYSQL_CLIENT_AUTHENTICATION_PLUGIN_INTERFACE_VERSION69,1942
#define MYSQL_CLIENT_TRACE_PLUGIN_INTERFACE_VERSION MYSQL_CLIENT_TRACE_PLUGIN_INTERFACE_VERSION70,2011
#define MYSQL_CLIENT_MAX_PLUGINS MYSQL_CLIENT_MAX_PLUGINS72,2081
#define mysql_declare_client_plugin(mysql_declare_client_plugin74,2129
#define mysql_end_client_plugin mysql_end_client_plugin79,2408
#define MYSQL_CLIENT_PLUGIN_HEADER MYSQL_CLIENT_PLUGIN_HEADER82,2493
struct st_mysql_client_pluginst_mysql_client_plugin95,3184
struct st_mysql_client_plugin_AUTHENTICATIONst_mysql_client_plugin_AUTHENTICATION105,3365
  int (*authenticate_user)(MYSQL_PLUGIN_VIO *vio, struct st_mysql *mysql);authenticate_user108,3441

mysql/include/mysql/service_my_plugin_log.h,577
#define MYSQL_SERVICE_MY_PLUGIN_LOG_INCLUDEDMYSQL_SERVICE_MY_PLUGIN_LOG_INCLUDED24,917
enum plugin_log_levelplugin_log_level31,1069
  MY_ERROR_LEVEL,MY_ERROR_LEVEL33,1093
  MY_WARNING_LEVEL,MY_WARNING_LEVEL34,1111
  MY_INFORMATION_LEVELMY_INFORMATION_LEVEL35,1131
extern struct my_plugin_log_servicemy_plugin_log_service43,1201
  int (*my_plugin_log_message)(MYSQL_PLUGIN *, enum plugin_log_level, const char *, ...);my_plugin_log_message46,1275
} *my_plugin_log_service;my_plugin_log_service47,1365
#define my_plugin_log_message my_plugin_log_message51,1421

mysql/include/mysql/service_rules_table.h,1862
#define SERVICE_RULES_TABLE_INCLUDEDSERVICE_RULES_TABLE_INCLUDED3,56
namespace rules_table_servicerules_table_service41,1172
class CursorCursor63,1625
  typedef int column_id;column_id66,1648
  static const column_id ILLEGAL_COLUMN_ID= -1;ILLEGAL_COLUMN_ID68,1674
  Cursor() :Cursor77,1931
  column_id pattern_column() const { return m_pattern_column; }pattern_column81,2007
  column_id pattern_database_column() constpattern_database_column82,2071
  column_id replacement_column() const { return m_replacement_column; }replacement_column86,2161
  column_id enabled_column() const { return m_enabled_column; }enabled_column87,2233
  column_id message_column() const { return m_message_column; }message_column88,2297
  column_id pattern_digest_column() const { return m_pattern_digest_column; }pattern_digest_column89,2361
  column_id normalized_pattern_column() const {normalized_pattern_column90,2439
  bool table_is_malformed() { return m_table_is_malformed; }table_is_malformed99,2716
  bool operator== (const Cursor &other)operator ==118,3366
  bool operator!= (const Cursor &other) { return !(*this == other); }operator !=127,3572
  Cursor &operator++ ()operator ++133,3808
  int m_pattern_column;m_pattern_column164,4556
  int m_pattern_database_column;m_pattern_database_column165,4580
  int m_replacement_column;m_replacement_column166,4613
  int m_enabled_column;m_enabled_column167,4641
  int m_message_column;m_message_column168,4665
  int m_pattern_digest_column;m_pattern_digest_column169,4689
  int m_normalized_pattern_column;m_normalized_pattern_column170,4720
  THD *m_thd;m_thd172,4756
  TABLE_LIST *m_table_list;m_table_list173,4770
  bool m_is_finished;m_is_finished175,4799
  bool m_table_is_malformed;m_table_is_malformed176,4821
  int m_last_read_status;m_last_read_status177,4850

mysql/include/mysql/plugin_validate_password.h,554
#define MYSQL_PLUGIN_VALIDATE_PASSWORD_INCLUDEDMYSQL_PLUGIN_VALIDATE_PASSWORD_INCLUDED17,793
#define MYSQL_VALIDATE_PASSWORD_INTERFACE_VERSION MYSQL_VALIDATE_PASSWORD_INTERFACE_VERSION22,942
typedef void* mysql_string_handle;mysql_string_handle29,1093
struct st_mysql_validate_passwordst_mysql_validate_password31,1129
  int interface_version;interface_version33,1165
  int (*validate_password)(mysql_string_handle password);validate_password39,1353
  int (*get_password_strength)(mysql_string_handle password);get_password_strength44,1511

mysql/include/mysql/plugin_audit.h,13216
#define _my_audit_h_my_audit_h18,767
#define MYSQL_AUDIT_INTERFACE_VERSION MYSQL_AUDIT_INTERFACE_VERSION28,949
{__anon20f8fb1d010336,1065
  MYSQL_AUDIT_GENERAL_CLASS          = 0,MYSQL_AUDIT_GENERAL_CLASS37,1067
  MYSQL_AUDIT_CONNECTION_CLASS       = 1,MYSQL_AUDIT_CONNECTION_CLASS38,1109
  MYSQL_AUDIT_PARSE_CLASS            = 2,MYSQL_AUDIT_PARSE_CLASS39,1151
  MYSQL_AUDIT_AUTHORIZATION_CLASS    = 3,MYSQL_AUDIT_AUTHORIZATION_CLASS40,1193
  MYSQL_AUDIT_TABLE_ACCESS_CLASS     = 4,MYSQL_AUDIT_TABLE_ACCESS_CLASS41,1235
  MYSQL_AUDIT_GLOBAL_VARIABLE_CLASS  = 5,MYSQL_AUDIT_GLOBAL_VARIABLE_CLASS42,1277
  MYSQL_AUDIT_SERVER_STARTUP_CLASS   = 6,MYSQL_AUDIT_SERVER_STARTUP_CLASS43,1319
  MYSQL_AUDIT_SERVER_SHUTDOWN_CLASS  = 7,MYSQL_AUDIT_SERVER_SHUTDOWN_CLASS44,1361
  MYSQL_AUDIT_COMMAND_CLASS          = 8,MYSQL_AUDIT_COMMAND_CLASS45,1403
  MYSQL_AUDIT_QUERY_CLASS            = 9,MYSQL_AUDIT_QUERY_CLASS46,1445
  MYSQL_AUDIT_STORED_PROGRAM_CLASS   = 10,MYSQL_AUDIT_STORED_PROGRAM_CLASS47,1487
  MYSQL_AUDIT_CLASS_MASK_SIZEMYSQL_AUDIT_CLASS_MASK_SIZE49,1574
} mysql_event_class_t;mysql_event_class_t50,1604
struct st_mysql_auditst_mysql_audit57,1727
  int interface_version;interface_version62,1785
  void (*release_thd)(MYSQL_THD);release_thd70,2062
  int (*event_notify)(MYSQL_THD, mysql_event_class_t, const void *);event_notify78,2327
  unsigned long class_mask[MYSQL_AUDIT_CLASS_MASK_SIZE];class_mask84,2504
typedef enum enum_sql_command enum_sql_command_t;enum_sql_command_t92,2634
{__anon20f8fb1d0203100,2801
  MYSQL_AUDIT_GENERAL_LOG    = 1 << 0,MYSQL_AUDIT_GENERAL_LOG102,2861
  MYSQL_AUDIT_GENERAL_ERROR  = 1 << 1,MYSQL_AUDIT_GENERAL_ERROR104,2956
  MYSQL_AUDIT_GENERAL_RESULT = 1 << 2,MYSQL_AUDIT_GENERAL_RESULT106,3055
  MYSQL_AUDIT_GENERAL_STATUS = 1 << 3MYSQL_AUDIT_GENERAL_STATUS108,3151
} mysql_event_general_subclass_t;mysql_event_general_subclass_t109,3189
#define MYSQL_AUDIT_GENERAL_ALL MYSQL_AUDIT_GENERAL_ALL111,3224
struct mysql_event_generalmysql_event_general120,3570
  mysql_event_general_subclass_t event_subclass;event_subclass122,3599
  int                            general_error_code;general_error_code123,3648
  unsigned long                  general_thread_id;general_thread_id124,3701
  MYSQL_LEX_CSTRING              general_user;general_user125,3753
  MYSQL_LEX_CSTRING              general_command;general_command126,3800
  MYSQL_LEX_CSTRING              general_query;general_query127,3850
  struct charset_info_st         *general_charset;general_charset128,3898
  unsigned long long             general_time;general_time129,3949
  unsigned long long             general_rows;general_rows130,3996
  MYSQL_LEX_CSTRING              general_host;general_host131,4043
  MYSQL_LEX_CSTRING              general_sql_command;general_sql_command132,4090
  MYSQL_LEX_CSTRING              general_external_user;general_external_user133,4144
  MYSQL_LEX_CSTRING              general_ip;general_ip134,4200
{__anon20f8fb1d0303143,4367
  MYSQL_AUDIT_CONNECTION_CONNECT          = 1 << 0,MYSQL_AUDIT_CONNECTION_CONNECT145,4426
  MYSQL_AUDIT_CONNECTION_DISCONNECT       = 1 << 1,MYSQL_AUDIT_CONNECTION_DISCONNECT147,4526
  MYSQL_AUDIT_CONNECTION_CHANGE_USER      = 1 << 2,MYSQL_AUDIT_CONNECTION_CHANGE_USER149,4634
  MYSQL_AUDIT_CONNECTION_PRE_AUTHENTICATE = 1 << 3MYSQL_AUDIT_CONNECTION_PRE_AUTHENTICATE151,4725
} mysql_event_connection_subclass_t;mysql_event_connection_subclass_t152,4776
#define MYSQL_AUDIT_CONNECTION_ALL MYSQL_AUDIT_CONNECTION_ALL154,4814
struct mysql_event_connectionmysql_event_connection163,5214
  mysql_event_connection_subclass_t event_subclass;event_subclass166,5271
  int                               status;status168,5366
  unsigned long                     connection_id;connection_id170,5434
  MYSQL_LEX_CSTRING                 user;user172,5524
  MYSQL_LEX_CSTRING                 priv_user;priv_user174,5591
  MYSQL_LEX_CSTRING                 external_user;external_user176,5667
  MYSQL_LEX_CSTRING                 proxy_user;proxy_user178,5764
  MYSQL_LEX_CSTRING                 host;host180,5838
  MYSQL_LEX_CSTRING                 ip;ip182,5911
  MYSQL_LEX_CSTRING                 database;database184,6004
  int                               connection_type;connection_type193,6203
{__anon20f8fb1d0403202,6364
  MYSQL_AUDIT_PARSE_PREPARSE  = 1 << 0,MYSQL_AUDIT_PARSE_PREPARSE204,6408
  MYSQL_AUDIT_PARSE_POSTPARSE = 1 << 1MYSQL_AUDIT_PARSE_POSTPARSE206,6489
} mysql_event_parse_subclass_t;mysql_event_parse_subclass_t207,6528
#define MYSQL_AUDIT_PARSE_ALL MYSQL_AUDIT_PARSE_ALL209,6561
{__anon20f8fb1d0503213,6697
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_NONE                  = 0,MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_NONE214,6699
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_QUERY_REWRITTEN       = 1 << 0,MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_QUERY_REWRITTEN216,6843
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_IS_PREPARED_STATEMENT = 1 << 1MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_IS_PREPARED_STATEMENT218,6998
} mysql_event_parse_rewrite_plugin_flag;mysql_event_parse_rewrite_plugin_flag219,7064
struct mysql_event_parsemysql_event_parse222,7151
  mysql_event_parse_subclass_t           event_subclass;event_subclass225,7225
  mysql_event_parse_rewrite_plugin_flag *flags;flags228,7321
  MYSQL_LEX_CSTRING                     query;query231,7410
  MYSQL_LEX_CSTRING                     *rewritten_query;rewritten_query234,7543
{__anon20f8fb1d0603243,7729
  MYSQL_AUDIT_AUTHORIZATION_USER      = 1 << 0,MYSQL_AUDIT_AUTHORIZATION_USER244,7731
  MYSQL_AUDIT_AUTHORIZATION_DB        = 1 << 1,MYSQL_AUDIT_AUTHORIZATION_DB246,7831
  MYSQL_AUDIT_AUTHORIZATION_TABLE     = 1 << 2,MYSQL_AUDIT_AUTHORIZATION_TABLE248,7928
  MYSQL_AUDIT_AUTHORIZATION_COLUMN    = 1 << 3,MYSQL_AUDIT_AUTHORIZATION_COLUMN250,8026
  MYSQL_AUDIT_AUTHORIZATION_PROCEDURE = 1 << 4,MYSQL_AUDIT_AUTHORIZATION_PROCEDURE252,8127
  MYSQL_AUDIT_AUTHORIZATION_PROXY     = 1 << 5MYSQL_AUDIT_AUTHORIZATION_PROXY254,8224
} mysql_event_authorization_subclass_t;mysql_event_authorization_subclass_t255,8271
#define MYSQL_AUDIT_AUTHORIZATION_ALL MYSQL_AUDIT_AUTHORIZATION_ALL257,8312
struct mysql_event_authorizationmysql_event_authorization268,8866
  mysql_event_authorization_subclass_t event_subclass;event_subclass271,8926
  int                                  status;status273,9004
  unsigned int                         connection_id;connection_id275,9075
  enum_sql_command_t                   sql_command_id;sql_command_id277,9154
  MYSQL_LEX_CSTRING                    query;query279,9234
  const struct charset_info_st         *query_charset;query_charset281,9308
  MYSQL_LEX_CSTRING                    database;database283,9387
  MYSQL_LEX_CSTRING                    table;table285,9457
  MYSQL_LEX_CSTRING                    object;object287,9550
  unsigned long                        requested_privilege;requested_privilege289,9642
  unsigned long                        granted_privilege;granted_privilege291,9755
{__anon20f8fb1d0703300,9942
  MYSQL_AUDIT_TABLE_ACCESS_READ   = 1 << 0,MYSQL_AUDIT_TABLE_ACCESS_READ302,9986
  MYSQL_AUDIT_TABLE_ACCESS_INSERT = 1 << 1,MYSQL_AUDIT_TABLE_ACCESS_INSERT304,10076
  MYSQL_AUDIT_TABLE_ACCESS_UPDATE = 1 << 2,MYSQL_AUDIT_TABLE_ACCESS_UPDATE306,10165
  MYSQL_AUDIT_TABLE_ACCESS_DELETE = 1 << 3MYSQL_AUDIT_TABLE_ACCESS_DELETE308,10254
} mysql_event_table_access_subclass_t;mysql_event_table_access_subclass_t309,10297
#define MYSQL_AUDIT_TABLE_ACCESS_ALL MYSQL_AUDIT_TABLE_ACCESS_ALL311,10337
struct mysql_event_table_accessmysql_event_table_access321,10735
  mysql_event_table_access_subclass_t event_subclass;event_subclass324,10794
  unsigned long                           connection_id;connection_id326,10872
  enum_sql_command_t                      sql_command_id;sql_command_id328,10954
  MYSQL_LEX_CSTRING                       query;query330,11032
  const struct charset_info_st            *query_charset;query_charset332,11109
  MYSQL_LEX_CSTRING                       table_database;table_database334,11191
  MYSQL_LEX_CSTRING                       table_name;table_name336,11270
{__anon20f8fb1d0803345,11456
  MYSQL_AUDIT_GLOBAL_VARIABLE_GET = 1 << 0,MYSQL_AUDIT_GLOBAL_VARIABLE_GET347,11509
  MYSQL_AUDIT_GLOBAL_VARIABLE_SET = 1 << 1MYSQL_AUDIT_GLOBAL_VARIABLE_SET349,11598
} mysql_event_global_variable_subclass_t;mysql_event_global_variable_subclass_t350,11641
#define MYSQL_AUDIT_GLOBAL_VARIABLE_ALL MYSQL_AUDIT_GLOBAL_VARIABLE_ALL352,11684
struct mysql_event_global_variablemysql_event_global_variable356,11901
  mysql_event_global_variable_subclass_t event_subclass;event_subclass359,11963
  unsigned long                          connection_id;connection_id361,12044
  enum_sql_command_t                     sql_command_id;sql_command_id363,12125
  MYSQL_LEX_CSTRING                      variable_name;variable_name365,12206
  MYSQL_LEX_CSTRING                      variable_value;variable_value367,12287
{__anon20f8fb1d0903376,12474
  MYSQL_AUDIT_SERVER_STARTUP_STARTUP = 1 << 0MYSQL_AUDIT_SERVER_STARTUP_STARTUP378,12549
} mysql_event_server_startup_subclass_t;mysql_event_server_startup_subclass_t379,12595
#define MYSQL_AUDIT_SERVER_STARTUP_ALL MYSQL_AUDIT_SERVER_STARTUP_ALL381,12637
struct mysql_event_server_startupmysql_event_server_startup388,12821
  mysql_event_server_startup_subclass_t event_subclass;event_subclass391,12882
  const char                            **argv;argv393,12971
  unsigned int                          argc;argc395,13058
{__anon20f8fb1d0a03404,13236
  MYSQL_AUDIT_SERVER_SHUTDOWN_SHUTDOWN = 1 << 0MYSQL_AUDIT_SERVER_SHUTDOWN_SHUTDOWN406,13283
} mysql_event_server_shutdown_subclass_t;mysql_event_server_shutdown_subclass_t407,13331
#define MYSQL_AUDIT_SERVER_SHUTDOWN_ALL MYSQL_AUDIT_SERVER_SHUTDOWN_ALL409,13374
{__anon20f8fb1d0b03417,13540
  MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_SHUTDOWN,MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_SHUTDOWN419,13577
  MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_ABORTMYSQL_AUDIT_SERVER_SHUTDOWN_REASON_ABORT421,13652
} mysql_server_shutdown_reason_t;mysql_server_shutdown_reason_t422,13695
struct mysql_event_server_shutdownmysql_event_server_shutdown429,13839
  mysql_event_server_shutdown_subclass_t event_subclass;event_subclass432,13901
  int                                    exit_code;exit_code434,14013
  mysql_server_shutdown_reason_t         reason;reason436,14091
{__anon20f8fb1d0c03445,14256
  MYSQL_AUDIT_COMMAND_START = 1 << 0,MYSQL_AUDIT_COMMAND_START447,14288
  MYSQL_AUDIT_COMMAND_END   = 1 << 1MYSQL_AUDIT_COMMAND_END449,14354
} mysql_event_command_subclass_t;mysql_event_command_subclass_t450,14391
#define MYSQL_AUDIT_COMMAND_ALL MYSQL_AUDIT_COMMAND_ALL452,14426
typedef enum enum_server_command enum_server_command_t;enum_server_command_t459,14622
struct mysql_event_commandmysql_event_command467,14824
  mysql_event_command_subclass_t event_subclass;event_subclass470,14886
  int                            status;status472,14966
  unsigned long                  connection_id;connection_id474,15031
  enum_server_command_t          command_id;command_id476,15100
{__anon20f8fb1d0d03485,15257
  MYSQL_AUDIT_QUERY_START             = 1 << 0,MYSQL_AUDIT_QUERY_START487,15287
  MYSQL_AUDIT_QUERY_NESTED_START      = 1 << 1,MYSQL_AUDIT_QUERY_NESTED_START489,15370
  MYSQL_AUDIT_QUERY_STATUS_END        = 1 << 2,MYSQL_AUDIT_QUERY_STATUS_END491,15451
  MYSQL_AUDIT_QUERY_NESTED_STATUS_END = 1 << 3MYSQL_AUDIT_QUERY_NESTED_STATUS_END493,15539
} mysql_event_query_subclass_t;mysql_event_query_subclass_t494,15586
#define MYSQL_AUDIT_QUERY_ALL MYSQL_AUDIT_QUERY_ALL496,15619
struct mysql_event_querymysql_event_query505,15965
  mysql_event_query_subclass_t event_subclass;event_subclass508,16017
  int                          status;status510,16087
  unsigned long                connection_id;connection_id512,16150
  enum_sql_command_t           sql_command_id;sql_command_id514,16221
  MYSQL_LEX_CSTRING            query;query516,16288
  const struct charset_info_st *query_charset;query_charset518,16354
{__anon20f8fb1d0e03527,16531
  MYSQL_AUDIT_STORED_PROGRAM_EXECUTE = 1 << 0MYSQL_AUDIT_STORED_PROGRAM_EXECUTE529,16574
} mysql_event_stored_program_subclass_t;mysql_event_stored_program_subclass_t530,16620
#define MYSQL_AUDIT_STORED_PROGRAM_ALL MYSQL_AUDIT_STORED_PROGRAM_ALL532,16662
struct mysql_event_stored_programmysql_event_stored_program539,16826
  mysql_event_stored_program_subclass_t event_subclass;event_subclass542,16887
  unsigned long                         connection_id;connection_id544,16967
  enum_sql_command_t                    sql_command_id;sql_command_id546,17047
  MYSQL_LEX_CSTRING                     query;query548,17128
  const struct charset_info_st          *query_charset;query_charset550,17203
  MYSQL_LEX_CSTRING                     database;database552,17310
  MYSQL_LEX_CSTRING                     name;name554,17397
  void                                  *parameters;parameters556,17479

mysql/include/mysql/service_parser.h,3314
#define MYSQL_SERVICE_PARSER_INCLUDEDMYSQL_SERVICE_PARSER_INCLUDED2,38
#define MYSQL_THD MYSQL_THD29,984
typedef Item* MYSQL_ITEM;MYSQL_ITEM30,1007
#define MYSQL_THD MYSQL_THD32,1039
typedef void* MYSQL_ITEM;MYSQL_ITEM33,1063
#define PARSER_SERVICE_DIGEST_LENGTH PARSER_SERVICE_DIGEST_LENGTH47,1280
#define STATEMENT_TYPE_SELECT STATEMENT_TYPE_SELECT49,1332
#define STATEMENT_TYPE_OTHER STATEMENT_TYPE_OTHER50,1364
int (*parse_node_visit_function)(MYSQL_ITEM item, unsigned char* arg);parse_node_visit_function53,1404
int (*sql_condition_handler_function)(int sql_errno,sql_condition_handler_function57,1485
extern struct mysql_parser_service_st {mysql_parser_service_st64,1735
  MYSQL_THD (*mysql_current_session)();mysql_current_session66,1776
  MYSQL_THD (*mysql_open_session)();mysql_open_session68,1817
  void (*mysql_start_thread)(MYSQL_THD thd, void *(*callback_fun)(void*),mysql_start_thread70,1855
  void (*mysql_join_thread)(struct st_my_thread_handle *thread_handle);mysql_join_thread74,2043
  void (*mysql_set_current_database)(MYSQL_THD thd, const MYSQL_LEX_STRING db);mysql_set_current_database76,2116
  int (*mysql_parse)(MYSQL_THD thd, const MYSQL_LEX_STRING query,mysql_parse99,2876
  int (*mysql_get_statement_type)(MYSQL_THD thd);mysql_get_statement_type104,3114
  int (*mysql_get_statement_digest)(MYSQL_THD thd, unsigned char *digest);mysql_get_statement_digest117,3470
  int (*mysql_get_number_params)(MYSQL_THD thd);mysql_get_number_params128,3801
  int (*mysql_extract_prepared_params)(MYSQL_THD thd, int *positions);mysql_extract_prepared_params145,4424
  int (*mysql_visit_tree)(MYSQL_THD thd, parse_node_visit_function processor,mysql_visit_tree158,4800
  MYSQL_LEX_STRING (*mysql_item_string)(MYSQL_ITEM item);mysql_item_string173,5275
  void (*mysql_free_string)(MYSQL_LEX_STRING string);mysql_free_string181,5448
  MYSQL_LEX_STRING (*mysql_get_query)(MYSQL_THD thd);mysql_get_query192,5727
  MYSQL_LEX_STRING (*mysql_get_normalized_query)(MYSQL_THD thd);mysql_get_normalized_query203,6029
} *mysql_parser_service;mysql_parser_service204,6094
#define mysql_parser_current_session(mysql_parser_current_session208,6149
#define mysql_parser_open_session(mysql_parser_open_session211,6240
#define mysql_parser_start_thread(mysql_parser_start_thread214,6324
#define mysql_parser_join_thread(mysql_parser_join_thread217,6466
#define mysql_parser_set_current_database(mysql_parser_set_current_database220,6574
#define mysql_parser_parse(mysql_parser_parse223,6688
#define mysql_parser_get_statement_type(mysql_parser_get_statement_type229,6998
#define mysql_parser_get_statement_digest(mysql_parser_get_statement_digest232,7100
#define mysql_parser_get_number_params(mysql_parser_get_number_params235,7222
#define mysql_parser_extract_prepared_params(mysql_parser_extract_prepared_params238,7322
#define mysql_parser_visit_tree(mysql_parser_visit_tree241,7456
#define mysql_parser_item_string(mysql_parser_item_string244,7574
#define mysql_parser_free_string(mysql_parser_free_string247,7664
#define mysql_parser_get_query(mysql_parser_get_query250,7758
#define mysql_parser_get_normalized_query(mysql_parser_get_normalized_query253,7842
typedef void *(*callback_function)(void*);callback_function257,7954

mysql/include/mysql/service_srv_session_info.h,1621
#define MYSQL_SERVICE_SRV_SESSION_INFO_INCLUDEDMYSQL_SERVICE_SRV_SESSION_INFO_INCLUDED2,48
extern struct srv_session_info_service_st {srv_session_info_service_st39,1359
  MYSQL_THD (*get_thd)(MYSQL_SESSION session);get_thd40,1403
  my_thread_id (*get_session_id)(MYSQL_SESSION session);get_session_id42,1451
  LEX_CSTRING (*get_current_db)(MYSQL_SESSION session);get_current_db44,1509
  uint16_t (*get_client_port)(MYSQL_SESSION session);get_client_port46,1566
  int (*set_client_port)(MYSQL_SESSION session, uint16_t port);set_client_port47,1620
  int (*set_connection_type)(MYSQL_SESSION session, enum enum_vio_type type);set_connection_type49,1685
  int (*killed)(MYSQL_SESSION session);killed51,1764
  unsigned int (*session_count)();session_count53,1805
  unsigned int (*thread_count)(const void *plugin);thread_count54,1840
} *srv_session_info_service;srv_session_info_service55,1892
#define srv_session_info_get_thd(srv_session_info_get_thd59,1951
#define srv_session_info_get_session_id(srv_session_info_get_session_id60,2049
#define srv_session_info_get_current_db(srv_session_info_get_current_db61,2151
#define srv_session_info_get_client_port(srv_session_info_get_client_port62,2253
#define srv_session_info_set_client_port(srv_session_info_set_client_port63,2356
#define srv_session_info_set_connection_type(srv_session_info_set_connection_type64,2467
#define srv_session_info_killed(srv_session_info_killed65,2586
#define srv_session_info_session_count(srv_session_info_session_count66,2680
#define srv_session_info_thread_count(srv_session_info_thread_count67,2779

mysql/include/mysql/service_thread_scheduler.h,543
#define SERVICE_THREAD_SCHEDULER_INCLUDEDSERVICE_THREAD_SCHEDULER_INCLUDED19,779
extern struct my_thread_scheduler_service {my_thread_scheduler_service28,928
  int (*connection_handler_set)(struct Connection_handler_functions *,connection_handler_set29,972
  int (*connection_handler_reset)();connection_handler_reset31,1106
} *my_thread_scheduler_service;my_thread_scheduler_service32,1143
#define my_connection_handler_set(my_connection_handler_set37,1206
#define my_connection_handler_reset(my_connection_handler_reset39,1312

mysql/include/mysql/psi/mysql_ps.h,947
#define MYSQL_PS_HMYSQL_PS_H17,748
#define PSI_PS_CALL(PSI_PS_CALL27,904
  #define MYSQL_CREATE_PS(MYSQL_CREATE_PS31,1019
  #define MYSQL_EXECUTE_PS(MYSQL_EXECUTE_PS33,1217
  #define MYSQL_DESTROY_PS(MYSQL_DESTROY_PS35,1331
  #define MYSQL_REPREPARE_PS(MYSQL_REPREPARE_PS37,1429
  #define MYSQL_CREATE_PS(MYSQL_CREATE_PS40,1537
  #define MYSQL_EXECUTE_PS(MYSQL_EXECUTE_PS42,1640
  #define MYSQL_DESTROY_PS(MYSQL_DESTROY_PS44,1712
  #define MYSQL_REPREPARE_PS(MYSQL_REPREPARE_PS46,1776
inline_mysql_create_prepared_stmt(void *identity, uint stmt_id,inline_mysql_create_prepared_stmt52,1919
inline_mysql_execute_prepared_stmt(PSI_statement_locker *locker,inline_mysql_execute_prepared_stmt66,2526
inline_mysql_destroy_prepared_stmt(PSI_prepared_stmt *prepared_stmt)inline_mysql_destroy_prepared_stmt74,2795
inline_mysql_reprepare_prepared_stmt(PSI_prepared_stmt *prepared_stmt)inline_mysql_reprepare_prepared_stmt81,2973

mysql/include/mysql/psi/mysql_transaction.h,2896
#define MYSQL_TRANSACTION_HMYSQL_TRANSACTION_H17,757
#define PSI_TRANSACTION_CALL(PSI_TRANSACTION_CALL27,933
  #define MYSQL_START_TRANSACTION(MYSQL_START_TRANSACTION37,1149
  #define MYSQL_START_TRANSACTION(MYSQL_START_TRANSACTION40,1310
  #define MYSQL_SET_TRANSACTION_GTID(MYSQL_SET_TRANSACTION_GTID45,1444
  #define MYSQL_SET_TRANSACTION_GTID(MYSQL_SET_TRANSACTION_GTID48,1559
  #define MYSQL_SET_TRANSACTION_XID(MYSQL_SET_TRANSACTION_XID53,1680
  #define MYSQL_SET_TRANSACTION_XID(MYSQL_SET_TRANSACTION_XID56,1793
  #define MYSQL_SET_TRANSACTION_XA_STATE(MYSQL_SET_TRANSACTION_XA_STATE61,1913
  #define MYSQL_SET_TRANSACTION_XA_STATE(MYSQL_SET_TRANSACTION_XA_STATE64,2028
  #define MYSQL_SET_TRANSACTION_TRXID(MYSQL_SET_TRANSACTION_TRXID69,2149
  #define MYSQL_SET_TRANSACTION_TRXID(MYSQL_SET_TRANSACTION_TRXID72,2258
  #define MYSQL_INC_TRANSACTION_SAVEPOINTS(MYSQL_INC_TRANSACTION_SAVEPOINTS77,2376
  #define MYSQL_INC_TRANSACTION_SAVEPOINTS(MYSQL_INC_TRANSACTION_SAVEPOINTS80,2495
  #define MYSQL_INC_TRANSACTION_ROLLBACK_TO_SAVEPOINT(MYSQL_INC_TRANSACTION_ROLLBACK_TO_SAVEPOINT85,2618
  #define MYSQL_INC_TRANSACTION_ROLLBACK_TO_SAVEPOINT(MYSQL_INC_TRANSACTION_ROLLBACK_TO_SAVEPOINT88,2759
  #define MYSQL_INC_TRANSACTION_RELEASE_SAVEPOINT(MYSQL_INC_TRANSACTION_RELEASE_SAVEPOINT93,2893
  #define MYSQL_INC_TRANSACTION_RELEASE_SAVEPOINT(MYSQL_INC_TRANSACTION_RELEASE_SAVEPOINT96,3026
  #define MYSQL_ROLLBACK_TRANSACTION(MYSQL_ROLLBACK_TRANSACTION101,3156
  #define MYSQL_ROLLBACK_TRANSACTION(MYSQL_ROLLBACK_TRANSACTION104,3255
  #define MYSQL_COMMIT_TRANSACTION(MYSQL_COMMIT_TRANSACTION109,3357
  #define MYSQL_COMMIT_TRANSACTION(MYSQL_COMMIT_TRANSACTION112,3452
inline_mysql_start_transaction(PSI_transaction_locker_state *state,inline_mysql_start_transaction118,3598
inline_mysql_set_transaction_gtid(PSI_transaction_locker *locker,inline_mysql_set_transaction_gtid138,4537
inline_mysql_set_transaction_xid(PSI_transaction_locker *locker,inline_mysql_set_transaction_xid147,4837
inline_mysql_set_transaction_xa_state(PSI_transaction_locker *locker,inline_mysql_set_transaction_xa_state156,5123
inline_mysql_set_transaction_trxid(PSI_transaction_locker *locker,inline_mysql_set_transaction_trxid164,5369
inline_mysql_inc_transaction_savepoints(PSI_transaction_locker *locker,inline_mysql_inc_transaction_savepoints172,5613
inline_mysql_inc_transaction_rollback_to_savepoint(PSI_transaction_locker *locker,inline_mysql_inc_transaction_rollback_to_savepoint180,5861
inline_mysql_inc_transaction_release_savepoint(PSI_transaction_locker *locker,inline_mysql_inc_transaction_release_savepoint188,6142
inline_mysql_rollback_transaction(struct PSI_transaction_locker *locker)inline_mysql_rollback_transaction196,6411
inline_mysql_commit_transaction(struct PSI_transaction_locker *locker)inline_mysql_commit_transaction203,6596

mysql/include/mysql/psi/mysql_file.h,6236
#define MYSQL_FILE_HMYSQL_FILE_H17,751
#define PSI_FILE_CALL(PSI_FILE_CALL47,1717
#define mysql_file_register(mysql_file_register60,1941
  #define mysql_file_fgets(mysql_file_fgets69,2173
  #define mysql_file_fgets(mysql_file_fgets72,2278
  #define mysql_file_fgetc(mysql_file_fgetc82,2505
  #define mysql_file_fgetc(mysql_file_fgetc84,2588
  #define mysql_file_fputs(mysql_file_fputs93,2797
  #define mysql_file_fputs(mysql_file_fputs96,2894
  #define mysql_file_fputc(mysql_file_fputc106,3116
  #define mysql_file_fputc(mysql_file_fputc109,3213
#define mysql_file_fprintf mysql_file_fprintf118,3406
  #define mysql_file_vfprintf(mysql_file_vfprintf126,3620
  #define mysql_file_vfprintf(mysql_file_vfprintf129,3731
  #define mysql_file_fflush(mysql_file_fflush139,3976
  #define mysql_file_fflush(mysql_file_fflush142,4067
#define mysql_file_feof(mysql_file_feof151,4245
  #define mysql_file_fstat(mysql_file_fstat159,4450
  #define mysql_file_fstat(mysql_file_fstat162,4555
  #define mysql_file_stat(mysql_file_stat172,4792
  #define mysql_file_stat(mysql_file_stat175,4901
  #define mysql_file_chsize(mysql_file_chsize185,5148
  #define mysql_file_chsize(mysql_file_chsize188,5263
  #define mysql_file_fopen(mysql_file_fopen198,5514
  #define mysql_file_fopen(mysql_file_fopen201,5625
  #define mysql_file_fclose(mysql_file_fclose218,6306
  #define mysql_file_fclose(mysql_file_fclose221,6407
  #define mysql_file_fread(mysql_file_fread231,6646
  #define mysql_file_fread(mysql_file_fread234,6761
  #define mysql_file_fwrite(mysql_file_fwrite244,7018
  #define mysql_file_fwrite(mysql_file_fwrite247,7135
  #define mysql_file_fseek(mysql_file_fseek257,7387
  #define mysql_file_fseek(mysql_file_fseek260,7496
  #define mysql_file_ftell(mysql_file_ftell270,7734
  #define mysql_file_ftell(mysql_file_ftell273,7831
  #define mysql_file_create(mysql_file_create283,8072
  #define mysql_file_create(mysql_file_create286,8191
  #define mysql_file_create_temp(mysql_file_create_temp296,8480
  #define mysql_file_create_temp(mysql_file_create_temp299,8611
  #define mysql_file_open(mysql_file_open309,8871
  #define mysql_file_open(mysql_file_open312,8980
  #define mysql_file_close(mysql_file_close322,9215
  #define mysql_file_close(mysql_file_close325,9312
  #define mysql_file_read(mysql_file_read335,9535
  #define mysql_file_read(mysql_file_read338,9642
  #define mysql_file_write(mysql_file_write348,9884
  #define mysql_file_write(mysql_file_write351,9993
  #define mysql_file_pread(mysql_file_pread361,10235
  #define mysql_file_pread(mysql_file_pread364,10350
  #define mysql_file_pwrite(mysql_file_pwrite374,10607
  #define mysql_file_pwrite(mysql_file_pwrite377,10724
  #define mysql_file_seek(mysql_file_seek387,10972
  #define mysql_file_seek(mysql_file_seek390,11079
  #define mysql_file_tell(mysql_file_tell400,11311
  #define mysql_file_tell(mysql_file_tell403,11406
  #define mysql_file_delete(mysql_file_delete413,11638
  #define mysql_file_delete(mysql_file_delete416,11745
  #define mysql_file_rename(mysql_file_rename426,11990
  #define mysql_file_rename(mysql_file_rename429,12105
  #define mysql_file_create_with_symlink(mysql_file_create_with_symlink440,12426
  #define mysql_file_create_with_symlink(mysql_file_create_with_symlink444,12623
  #define mysql_file_delete_with_symlink(mysql_file_delete_with_symlink455,12972
  #define mysql_file_delete_with_symlink(mysql_file_delete_with_symlink458,13103
  #define mysql_file_rename_with_symlink(mysql_file_rename_with_symlink469,13432
  #define mysql_file_rename_with_symlink(mysql_file_rename_with_symlink472,13571
  #define mysql_file_sync(mysql_file_sync482,13838
  #define mysql_file_sync(mysql_file_sync485,13935
struct st_mysql_filest_mysql_file493,14072
  FILE *m_file;m_file496,14119
  struct PSI_file *m_psi;m_psi502,14291
typedef struct st_mysql_file MYSQL_FILE;MYSQL_FILE510,14436
static inline void inline_mysql_file_register(inline_mysql_file_register512,14478
inline_mysql_file_fgets(inline_mysql_file_fgets530,14871
inline_mysql_file_fgetc(inline_mysql_file_fgetc556,15564
inline_mysql_file_fputs(inline_mysql_file_fputs582,16192
inline_mysql_file_fputc(inline_mysql_file_fputc610,16888
inline_mysql_file_fprintf(MYSQL_FILE *file, const char *format, ...)inline_mysql_file_fprintf636,17531
inline_mysql_file_vfprintf(inline_mysql_file_vfprintf666,18332
inline_mysql_file_fflush(inline_mysql_file_fflush692,19037
static inline int inline_mysql_file_feof(MYSQL_FILE *file)inline_mysql_file_feof717,19651
inline_mysql_file_fstat(inline_mysql_file_fstat724,19814
inline_mysql_file_stat(inline_mysql_file_stat750,20503
inline_mysql_file_chsize(inline_mysql_file_chsize776,21207
inline_mysql_file_fopen(inline_mysql_file_fopen803,21969
inline_mysql_file_fclose(inline_mysql_file_fclose846,23121
inline_mysql_file_fread(inline_mysql_file_fread877,23893
inline_mysql_file_fwrite(inline_mysql_file_fwrite908,24783
inline_mysql_file_fseek(inline_mysql_file_fseek939,25697
inline_mysql_file_ftell(inline_mysql_file_ftell965,26418
inline_mysql_file_create(inline_mysql_file_create991,27083
inline_mysql_file_create_temp(inline_mysql_file_create_temp1017,27875
inline_mysql_file_open(inline_mysql_file_open1044,28724
inline_mysql_file_close(inline_mysql_file_close1070,29440
inline_mysql_file_read(inline_mysql_file_read1096,30073
inline_mysql_file_write(inline_mysql_file_write1127,30934
inline_mysql_file_pread(inline_mysql_file_pread1158,31817
inline_mysql_file_pwrite(inline_mysql_file_pwrite1189,32714
inline_mysql_file_seek(inline_mysql_file_seek1220,33635
inline_mysql_file_tell(inline_mysql_file_tell1246,34327
inline_mysql_file_delete(inline_mysql_file_delete1272,34962
inline_mysql_file_rename(inline_mysql_file_rename1298,35629
inline_mysql_file_create_with_symlink(inline_mysql_file_create_with_symlink1324,36323
inline_mysql_file_delete_with_symlink(inline_mysql_file_delete_with_symlink1353,37255
inline_mysql_file_rename_with_symlink(inline_mysql_file_rename_with_symlink1379,37961
inline_mysql_file_sync(inline_mysql_file_sync1405,38693

mysql/include/mysql/psi/mysql_idle.h,519
#define MYSQL_IDLE_HMYSQL_IDLE_H17,751
#define PSI_IDLE_CALL(PSI_IDLE_CALL27,904
  #define MYSQL_START_IDLE_WAIT(MYSQL_START_IDLE_WAIT45,1315
  #define MYSQL_START_IDLE_WAIT(MYSQL_START_IDLE_WAIT48,1438
  #define MYSQL_END_IDLE_WAIT(MYSQL_END_IDLE_WAIT60,1731
  #define MYSQL_END_IDLE_WAIT(MYSQL_END_IDLE_WAIT63,1816
inline_mysql_start_idle_wait(PSI_idle_locker_state *state,inline_mysql_start_idle_wait73,2039
inline_mysql_end_idle_wait(struct PSI_idle_locker *locker)inline_mysql_end_idle_wait86,2392

mysql/include/mysql/psi/psi.h,45669
#define MYSQL_PERFORMANCE_SCHEMA_INTERFACE_HMYSQL_PERFORMANCE_SCHEMA_INTERFACE_H17,775
#define DISABLE_ALL_PSIDISABLE_ALL_PSI20,845
typedef struct MDL_key MDL_key;MDL_key48,1527
typedef int opaque_mdl_type;opaque_mdl_type51,1586
typedef int opaque_mdl_duration;opaque_mdl_duration54,1646
typedef int opaque_mdl_status;opaque_mdl_status57,1719
typedef int opaque_vio_type;opaque_vio_type60,1777
  struct opaque_THDopaque_THD73,2014
    int dummy;dummy75,2038
  typedef struct opaque_THD THD;THD77,2058
typedef struct PSI_mutex PSI_mutex;PSI_mutex94,2374
typedef struct PSI_rwlock PSI_rwlock;PSI_rwlock101,2508
typedef struct PSI_cond PSI_cond;PSI_cond108,2645
typedef struct PSI_table_share PSI_table_share;PSI_table_share115,2787
typedef struct PSI_table PSI_table;PSI_table122,2938
typedef struct PSI_thread PSI_thread;PSI_thread129,3072
typedef struct PSI_file PSI_file;PSI_file136,3211
typedef struct PSI_socket PSI_socket;PSI_socket143,3354
typedef struct PSI_prepared_stmt PSI_prepared_stmt;PSI_prepared_stmt150,3509
typedef struct PSI_table_locker PSI_table_locker;PSI_table_locker157,3674
typedef struct PSI_statement_locker PSI_statement_locker;PSI_statement_locker164,3835
typedef struct PSI_transaction_locker PSI_transaction_locker;PSI_transaction_locker171,4008
typedef struct PSI_idle_locker PSI_idle_locker;PSI_idle_locker178,4181
typedef struct PSI_digest_locker PSI_digest_locker;PSI_digest_locker185,4354
typedef struct PSI_sp_share PSI_sp_share;PSI_sp_share192,4522
typedef struct PSI_sp_locker PSI_sp_locker;PSI_sp_locker199,4673
typedef struct PSI_metadata_lock PSI_metadata_lock;PSI_metadata_lock206,4829
struct PSI_stage_progressPSI_stage_progress212,4983
  ulonglong m_work_completed;m_work_completed214,5011
  ulonglong m_work_estimated;m_work_estimated215,5041
typedef struct PSI_stage_progress PSI_stage_progress;PSI_stage_progress217,5074
enum PSI_table_io_operationPSI_table_io_operation220,5185
  PSI_TABLE_FETCH_ROW= 0,PSI_TABLE_FETCH_ROW223,5235
  PSI_TABLE_WRITE_ROW= 1,PSI_TABLE_WRITE_ROW225,5281
  PSI_TABLE_UPDATE_ROW= 2,PSI_TABLE_UPDATE_ROW227,5328
  PSI_TABLE_DELETE_ROW= 3PSI_TABLE_DELETE_ROW229,5376
typedef enum PSI_table_io_operation PSI_table_io_operation;PSI_table_io_operation231,5405
struct PSI_table_locker_statePSI_table_locker_state244,5902
  uint m_flags;m_flags247,5959
  enum PSI_table_io_operation m_io_operation;m_io_operation249,6006
  struct PSI_table *m_table;m_table251,6083
  struct PSI_table_share *m_table_share;m_table_share253,6142
  struct PSI_thread *m_thread;m_thread255,6208
  ulonglong m_timer_start;m_timer_start257,6261
  ulonglong (*m_timer)(void);m_timer259,6313
  void *m_wait;m_wait261,6367
  uint m_index;m_index267,6496
typedef struct PSI_table_locker_state PSI_table_locker_state;PSI_table_locker_state269,6515
struct PSI_bootstrapPSI_bootstrap272,6635
  void* (*get_interface)(int version);get_interface287,7049
typedef struct PSI_bootstrap PSI_bootstrap;PSI_bootstrap289,7091
#define DISABLE_PSI_THREADDISABLE_PSI_THREAD296,7214
#define DISABLE_PSI_MUTEXDISABLE_PSI_MUTEX300,7275
#define DISABLE_PSI_RWLOCKDISABLE_PSI_RWLOCK304,7336
#define DISABLE_PSI_CONDDISABLE_PSI_COND308,7396
#define DISABLE_PSI_FILEDISABLE_PSI_FILE312,7454
#define DISABLE_PSI_TABLEDISABLE_PSI_TABLE316,7513
#define DISABLE_PSI_SOCKETDISABLE_PSI_SOCKET320,7574
#define DISABLE_PSI_STAGEDISABLE_PSI_STAGE324,7635
#define DISABLE_PSI_STATEMENTDISABLE_PSI_STATEMENT328,7699
#define DISABLE_PSI_SPDISABLE_PSI_SP332,7760
#define DISABLE_PSI_IDLEDISABLE_PSI_IDLE336,7816
#define DISABLE_PSI_STATEMENT_DIGESTDISABLE_PSI_STATEMENT_DIGEST340,7886
#define DISABLE_PSI_METADATADISABLE_PSI_METADATA344,7960
#define DISABLE_PSI_MEMORYDISABLE_PSI_MEMORY348,8024
#define DISABLE_PSI_TRANSACTIONDISABLE_PSI_TRANSACTION352,8091
#define DISABLE_PSI_SPDISABLE_PSI_SP356,8154
#define DISABLE_PSI_PSDISABLE_PSI_PS360,8208
#define HAVE_PSI_MUTEX_INTERFACEHAVE_PSI_MUTEX_INTERFACE388,8965
#define HAVE_PSI_RWLOCK_INTERFACEHAVE_PSI_RWLOCK_INTERFACE398,9149
#define HAVE_PSI_COND_INTERFACEHAVE_PSI_COND_INTERFACE408,9328
#define HAVE_PSI_FILE_INTERFACEHAVE_PSI_FILE_INTERFACE418,9505
#define HAVE_PSI_THREAD_INTERFACEHAVE_PSI_THREAD_INTERFACE427,9687
#define HAVE_PSI_TABLE_INTERFACEHAVE_PSI_TABLE_INTERFACE437,9869
#define HAVE_PSI_STAGE_INTERFACEHAVE_PSI_STAGE_INTERFACE447,10050
#define HAVE_PSI_STATEMENT_INTERFACEHAVE_PSI_STATEMENT_INTERFACE457,10243
#define HAVE_PSI_SP_INTERFACEHAVE_PSI_SP_INTERFACE466,10430
#define HAVE_PSI_PS_INTERFACEHAVE_PSI_PS_INTERFACE476,10644
#define HAVE_PSI_STATEMENT_DIGEST_INTERFACEHAVE_PSI_STATEMENT_DIGEST_INTERFACE487,10868
#define HAVE_PSI_TRANSACTION_INTERFACEHAVE_PSI_TRANSACTION_INTERFACE498,11085
#define HAVE_PSI_SOCKET_INTERFACEHAVE_PSI_SOCKET_INTERFACE508,11278
#define HAVE_PSI_MEMORY_INTERFACEHAVE_PSI_MEMORY_INTERFACE518,11463
#define HAVE_PSI_IDLE_INTERFACEHAVE_PSI_IDLE_INTERFACE528,11642
#define HAVE_PSI_METADATA_INTERFACEHAVE_PSI_METADATA_INTERFACE538,11831
#define PSI_VERSION_1 PSI_VERSION_1546,11985
#define PSI_VERSION_2 PSI_VERSION_2553,12146
#define PSI_CURRENT_VERSION PSI_CURRENT_VERSION560,12319
#define USE_PSI_1USE_PSI_1564,12386
typedef struct PSI_mutex_locker PSI_mutex_locker;PSI_mutex_locker573,12531
typedef struct PSI_rwlock_locker PSI_rwlock_locker;PSI_rwlock_locker580,12696
typedef struct PSI_cond_locker PSI_cond_locker;PSI_cond_locker587,12864
typedef struct PSI_file_locker PSI_file_locker;PSI_file_locker594,13023
typedef struct PSI_socket_locker PSI_socket_locker;PSI_socket_locker601,13186
typedef struct PSI_metadata_locker PSI_metadata_locker;PSI_metadata_locker608,13352
enum PSI_mutex_operationPSI_mutex_operation611,13462
  PSI_MUTEX_LOCK= 0,PSI_MUTEX_LOCK614,13504
  PSI_MUTEX_TRYLOCK= 1PSI_MUTEX_TRYLOCK616,13548
typedef enum PSI_mutex_operation PSI_mutex_operation;PSI_mutex_operation618,13574
enum PSI_rwlock_operationPSI_rwlock_operation626,13828
  PSI_RWLOCK_READLOCK= 0,PSI_RWLOCK_READLOCK629,13876
  PSI_RWLOCK_WRITELOCK= 1,PSI_RWLOCK_WRITELOCK631,13923
  PSI_RWLOCK_TRYREADLOCK= 2,PSI_RWLOCK_TRYREADLOCK633,13978
  PSI_RWLOCK_TRYWRITELOCK= 3,PSI_RWLOCK_TRYWRITELOCK635,14036
  PSI_RWLOCK_SHAREDLOCK= 4,PSI_RWLOCK_SHAREDLOCK638,14089
  PSI_RWLOCK_SHAREDEXCLUSIVELOCK= 5,PSI_RWLOCK_SHAREDEXCLUSIVELOCK640,14149
  PSI_RWLOCK_EXCLUSIVELOCK= 6,PSI_RWLOCK_EXCLUSIVELOCK642,14211
  PSI_RWLOCK_TRYSHAREDLOCK= 7,PSI_RWLOCK_TRYSHAREDLOCK644,14272
  PSI_RWLOCK_TRYSHAREDEXCLUSIVELOCK= 8,PSI_RWLOCK_TRYSHAREDEXCLUSIVELOCK646,14343
  PSI_RWLOCK_TRYEXCLUSIVELOCK= 9PSI_RWLOCK_TRYEXCLUSIVELOCK648,14416
typedef enum PSI_rwlock_operation PSI_rwlock_operation;PSI_rwlock_operation651,14453
enum PSI_cond_operationPSI_cond_operation654,14567
  PSI_COND_WAIT= 0,PSI_COND_WAIT657,14608
  PSI_COND_TIMEDWAIT= 1PSI_COND_TIMEDWAIT659,14657
typedef enum PSI_cond_operation PSI_cond_operation;PSI_cond_operation661,14684
enum PSI_file_operationPSI_file_operation664,14789
  PSI_FILE_CREATE= 0,PSI_FILE_CREATE667,14858
  PSI_FILE_CREATE_TMP= 1,PSI_FILE_CREATE_TMP669,14943
  PSI_FILE_OPEN= 2,PSI_FILE_OPEN671,15006
  PSI_FILE_STREAM_OPEN= 3,PSI_FILE_STREAM_OPEN673,15064
  PSI_FILE_CLOSE= 4,PSI_FILE_CLOSE675,15130
  PSI_FILE_STREAM_CLOSE= 5,PSI_FILE_STREAM_CLOSE677,15191
  PSI_FILE_READ= 6,PSI_FILE_READ682,15324
  PSI_FILE_WRITE= 7,PSI_FILE_WRITE687,15482
  PSI_FILE_SEEK= 8,PSI_FILE_SEEK689,15564
  PSI_FILE_TELL= 9,PSI_FILE_TELL691,15645
  PSI_FILE_FLUSH= 10,PSI_FILE_FLUSH693,15705
  PSI_FILE_STAT= 11,PSI_FILE_STAT695,15764
  PSI_FILE_FSTAT= 12,PSI_FILE_FSTAT697,15823
  PSI_FILE_CHSIZE= 13,PSI_FILE_CHSIZE699,15889
  PSI_FILE_DELETE= 14,PSI_FILE_DELETE701,15989
  PSI_FILE_RENAME= 15,PSI_FILE_RENAME703,16089
  PSI_FILE_SYNC= 16PSI_FILE_SYNC705,16166
typedef enum PSI_file_operation PSI_file_operation;PSI_file_operation707,16189
enum PSI_table_lock_operationPSI_table_lock_operation710,16300
  PSI_TABLE_LOCK= 0,PSI_TABLE_LOCK713,16374
  PSI_TABLE_EXTERNAL_LOCK= 1PSI_TABLE_EXTERNAL_LOCK715,16445
typedef enum PSI_table_lock_operation PSI_table_lock_operation;PSI_table_lock_operation717,16477
enum PSI_socket_statePSI_socket_state720,16582
  PSI_SOCKET_STATE_IDLE= 1,PSI_SOCKET_STATE_IDLE723,16651
  PSI_SOCKET_STATE_ACTIVE= 2PSI_SOCKET_STATE_ACTIVE725,16717
typedef enum PSI_socket_state PSI_socket_state;PSI_socket_state727,16749
enum PSI_socket_operationPSI_socket_operation730,16852
  PSI_SOCKET_CREATE= 0,PSI_SOCKET_CREATE733,16944
  PSI_SOCKET_CONNECT= 1,PSI_SOCKET_CONNECT735,17045
  PSI_SOCKET_BIND= 2,PSI_SOCKET_BIND737,17148
  PSI_SOCKET_CLOSE= 3,PSI_SOCKET_CLOSE739,17214
  PSI_SOCKET_SEND= 4,PSI_SOCKET_SEND741,17270
  PSI_SOCKET_RECV= 5,PSI_SOCKET_RECV743,17328
  PSI_SOCKET_SENDTO= 6,PSI_SOCKET_SENDTO745,17385
  PSI_SOCKET_RECVFROM= 7,PSI_SOCKET_RECVFROM747,17448
  PSI_SOCKET_SENDMSG= 8,PSI_SOCKET_SENDMSG749,17510
  PSI_SOCKET_RECVMSG= 9,PSI_SOCKET_RECVMSG751,17574
  PSI_SOCKET_SEEK= 10,PSI_SOCKET_SEEK753,17654
  PSI_SOCKET_OPT= 11,PSI_SOCKET_OPT755,17745
  PSI_SOCKET_STAT= 12,PSI_SOCKET_STAT757,17832
  PSI_SOCKET_SHUTDOWN= 13,PSI_SOCKET_SHUTDOWN759,17902
  PSI_SOCKET_SELECT= 14PSI_SOCKET_SELECT761,17986
typedef enum PSI_socket_operation PSI_socket_operation;PSI_socket_operation763,18013
typedef unsigned int PSI_mutex_key;PSI_mutex_key770,18237
typedef unsigned int PSI_rwlock_key;PSI_rwlock_key778,18447
typedef unsigned int PSI_cond_key;PSI_cond_key786,18660
typedef unsigned int PSI_thread_key;PSI_thread_key794,18869
typedef unsigned int PSI_file_key;PSI_file_key802,19099
#define PSI_FILE_KEY_DEFINEDPSI_FILE_KEY_DEFINED803,19134
typedef unsigned int PSI_stage_key;PSI_stage_key811,19338
typedef unsigned int PSI_statement_key;PSI_statement_key818,19558
typedef unsigned int PSI_socket_key;PSI_socket_key825,19770
struct PSI_mutex_info_v1PSI_mutex_info_v1840,20053
  PSI_mutex_key *m_key;m_key845,20148
  const char *m_name;m_name849,20222
  int m_flags;m_flags854,20319
typedef struct PSI_mutex_info_v1 PSI_mutex_info_v1;PSI_mutex_info_v1856,20337
struct PSI_rwlock_info_v1PSI_rwlock_info_v1863,20503
  PSI_rwlock_key *m_key;m_key868,20600
  const char *m_name;m_name872,20676
  int m_flags;m_flags877,20774
typedef struct PSI_rwlock_info_v1 PSI_rwlock_info_v1;PSI_rwlock_info_v1879,20792
struct PSI_cond_info_v1PSI_cond_info_v1886,20961
  PSI_cond_key *m_key;m_key891,21054
  const char *m_name;m_name895,21126
  int m_flags;m_flags900,21222
typedef struct PSI_cond_info_v1 PSI_cond_info_v1;PSI_cond_info_v1902,21240
struct PSI_thread_info_v1PSI_thread_info_v1909,21415
  PSI_thread_key *m_key;m_key914,21512
  const char *m_name;m_name918,21599
  int m_flags;m_flags923,21697
typedef struct PSI_thread_info_v1 PSI_thread_info_v1;PSI_thread_info_v1925,21715
struct PSI_file_info_v1PSI_file_info_v1932,21890
  PSI_file_key *m_key;m_key937,21983
  const char *m_name;m_name941,22066
  int m_flags;m_flags946,22173
typedef struct PSI_file_info_v1 PSI_file_info_v1;PSI_file_info_v1948,22191
struct PSI_stage_info_v1PSI_stage_info_v1955,22364
  PSI_stage_key m_key;m_key958,22426
  const char *m_name;m_name960,22504
  int m_flags;m_flags962,22582
typedef struct PSI_stage_info_v1 PSI_stage_info_v1;PSI_stage_info_v1964,22600
struct PSI_statement_info_v1PSI_statement_info_v1971,22783
  PSI_statement_key m_key;m_key974,22853
  const char *m_name;m_name976,22939
  int m_flags;m_flags978,23021
typedef struct PSI_statement_info_v1 PSI_statement_info_v1;PSI_statement_info_v1980,23039
struct PSI_socket_info_v1PSI_socket_info_v1987,23224
  PSI_socket_key *m_key;m_key992,23321
  const char *m_name;m_name996,23408
  int m_flags;m_flags1001,23517
typedef struct PSI_socket_info_v1 PSI_socket_info_v1;PSI_socket_info_v11003,23535
struct PSI_idle_locker_state_v1PSI_idle_locker_state_v11014,23953
  uint m_flags;m_flags1017,24012
  struct PSI_thread *m_thread;m_thread1019,24053
  ulonglong m_timer_start;m_timer_start1021,24106
  ulonglong (*m_timer)(void);m_timer1023,24158
  void *m_wait;m_wait1025,24212
typedef struct PSI_idle_locker_state_v1 PSI_idle_locker_state_v1;PSI_idle_locker_state_v11027,24231
struct PSI_mutex_locker_state_v1PSI_mutex_locker_state_v11038,24662
  uint m_flags;m_flags1041,24722
  enum PSI_mutex_operation m_operation;m_operation1043,24766
  struct PSI_mutex *m_mutex;m_mutex1045,24830
  struct PSI_thread *m_thread;m_thread1047,24884
  ulonglong m_timer_start;m_timer_start1049,24937
  ulonglong (*m_timer)(void);m_timer1051,24989
  void *m_wait;m_wait1053,25043
typedef struct PSI_mutex_locker_state_v1 PSI_mutex_locker_state_v1;PSI_mutex_locker_state_v11055,25062
struct PSI_rwlock_locker_state_v1PSI_rwlock_locker_state_v11067,25562
  uint m_flags;m_flags1070,25623
  enum PSI_rwlock_operation m_operation;m_operation1072,25667
  struct PSI_rwlock *m_rwlock;m_rwlock1074,25733
  struct PSI_thread *m_thread;m_thread1076,25789
  ulonglong m_timer_start;m_timer_start1078,25842
  ulonglong (*m_timer)(void);m_timer1080,25894
  void *m_wait;m_wait1082,25948
typedef struct PSI_rwlock_locker_state_v1 PSI_rwlock_locker_state_v1;PSI_rwlock_locker_state_v11084,25967
struct PSI_cond_locker_state_v1PSI_cond_locker_state_v11095,26404
  uint m_flags;m_flags1098,26463
  enum PSI_cond_operation m_operation;m_operation1100,26507
  struct PSI_cond *m_cond;m_cond1102,26574
  struct PSI_mutex *m_mutex;m_mutex1104,26625
  struct PSI_thread *m_thread;m_thread1106,26679
  ulonglong m_timer_start;m_timer_start1108,26732
  ulonglong (*m_timer)(void);m_timer1110,26784
  void *m_wait;m_wait1112,26838
typedef struct PSI_cond_locker_state_v1 PSI_cond_locker_state_v1;PSI_cond_locker_state_v11114,26857
struct PSI_file_locker_state_v1PSI_file_locker_state_v11127,27395
  uint m_flags;m_flags1130,27454
  enum PSI_file_operation m_operation;m_operation1132,27498
  struct PSI_file *m_file;m_file1134,27560
  const char *m_name;m_name1136,27615
  void *m_class;m_class1138,27666
  struct PSI_thread *m_thread;m_thread1140,27708
  size_t m_number_of_bytes;m_number_of_bytes1142,27775
  ulonglong m_timer_start;m_timer_start1144,27825
  ulonglong (*m_timer)(void);m_timer1146,27877
  void *m_wait;m_wait1148,27931
typedef struct PSI_file_locker_state_v1 PSI_file_locker_state_v1;PSI_file_locker_state_v11150,27950
struct PSI_metadata_locker_state_v1PSI_metadata_locker_state_v11161,28390
  uint m_flags;m_flags1164,28453
  struct PSI_metadata_lock *m_metadata_lock;m_metadata_lock1166,28501
  struct PSI_thread *m_thread;m_thread1168,28571
  ulonglong m_timer_start;m_timer_start1170,28624
  ulonglong (*m_timer)(void);m_timer1172,28676
  void *m_wait;m_wait1174,28730
typedef struct PSI_metadata_locker_state_v1 PSI_metadata_locker_state_v1;PSI_metadata_locker_state_v11176,28749
#define PSI_SCHEMA_NAME_LEN PSI_SCHEMA_NAME_LEN1179,28888
struct PSI_statement_locker_state_v1PSI_statement_locker_state_v11191,29355
  my_bool m_discarded;m_discarded1194,29419
  my_bool m_in_prepare;m_in_prepare1196,29468
  uchar m_no_index_used;m_no_index_used1198,29529
  uchar m_no_good_index_used;m_no_good_index_used1200,29596
  uint m_flags;m_flags1202,29651
  void *m_class;m_class1204,29699
  struct PSI_thread *m_thread;m_thread1206,29741
  ulonglong m_timer_start;m_timer_start1208,29794
  ulonglong (*m_timer)(void);m_timer1210,29846
  void *m_statement;m_statement1212,29900
  ulonglong m_lock_time;m_lock_time1214,29943
  ulonglong m_rows_sent;m_rows_sent1216,29988
  ulonglong m_rows_examined;m_rows_examined1218,30037
  ulong m_created_tmp_disk_tables;m_created_tmp_disk_tables1220,30117
  ulong m_created_tmp_tables;m_created_tmp_tables1222,30195
  ulong m_select_full_join;m_select_full_join1224,30270
  ulong m_select_full_range_join;m_select_full_range_join1226,30349
  ulong m_select_range;m_select_range1228,30424
  ulong m_select_range_check;m_select_range_check1230,30495
  ulong m_select_scan;m_select_scan1232,30565
  ulong m_sort_merge_passes;m_sort_merge_passes1234,30634
  ulong m_sort_range;m_sort_range1236,30702
  ulong m_sort_rows;m_sort_rows1238,30762
  ulong m_sort_scan;m_sort_scan1240,30822
  const struct sql_digest_storage *m_digest;m_digest1242,30870
  char m_schema_name[PSI_SCHEMA_NAME_LEN];m_schema_name1244,30945
  uint m_schema_name_length;m_schema_name_length1246,31034
  uint m_cs_number;m_cs_number1248,31104
  PSI_sp_share *m_parent_sp_share;m_parent_sp_share1249,31124
  PSI_prepared_stmt *m_parent_prepared_stmt;m_parent_prepared_stmt1250,31159
typedef struct PSI_statement_locker_state_v1 PSI_statement_locker_state_v1;PSI_statement_locker_state_v11252,31207
struct PSI_transaction_locker_state_v1PSI_transaction_locker_state_v11264,31721
  uint m_flags;m_flags1267,31787
  void *m_class;m_class1269,31835
  struct PSI_thread *m_thread;m_thread1271,31877
  ulonglong m_timer_start;m_timer_start1273,31930
  ulonglong (*m_timer)(void);m_timer1275,31982
  void *m_transaction;m_transaction1277,32036
  my_bool m_read_only;m_read_only1279,32120
  my_bool m_autocommit;m_autocommit1281,32187
  ulong m_statement_count;m_statement_count1283,32242
  ulong m_savepoint_count;m_savepoint_count1285,32306
  ulong m_rollback_to_savepoint_count;m_rollback_to_savepoint_count1287,32375
  ulong m_release_savepoint_count;m_release_savepoint_count1289,32452
typedef struct PSI_transaction_locker_state_v1 PSI_transaction_locker_state_v1;PSI_transaction_locker_state_v11292,32491
struct PSI_socket_locker_state_v1PSI_socket_locker_state_v11303,32939
  uint m_flags;m_flags1306,33000
  struct PSI_socket *m_socket;m_socket1308,33041
  struct PSI_thread *m_thread;m_thread1310,33097
  size_t m_number_of_bytes;m_number_of_bytes1312,33164
  ulonglong m_timer_start;m_timer_start1314,33214
  ulonglong (*m_timer)(void);m_timer1316,33266
  enum PSI_socket_operation m_operation;m_operation1318,33324
  const char* m_src_file;m_src_file1320,33387
  int m_src_line;m_src_line1322,33442
  void *m_wait;m_wait1324,33484
typedef struct PSI_socket_locker_state_v1 PSI_socket_locker_state_v1;PSI_socket_locker_state_v11326,33503
struct PSI_sp_locker_state_v1PSI_sp_locker_state_v11328,33574
  uint m_flags;m_flags1331,33631
  struct PSI_thread *m_thread;m_thread1333,33672
  ulonglong m_timer_start;m_timer_start1335,33725
  ulonglong (*m_timer)(void);m_timer1337,33777
  PSI_sp_share* m_sp_share;m_sp_share1339,33840
typedef struct PSI_sp_locker_state_v1 PSI_sp_locker_state_v1;PSI_sp_locker_state_v11341,33871
typedef void (*register_mutex_v1_t)register_mutex_v1_t1351,34193
typedef void (*register_rwlock_v1_t)register_rwlock_v1_t1360,34485
typedef void (*register_cond_v1_t)register_cond_v1_t1369,34775
typedef void (*register_thread_v1_t)register_thread_v1_t1378,35065
typedef void (*register_file_v1_t)register_file_v1_t1387,35355
typedef void (*register_stage_v1_t)register_stage_v1_t1396,35617
typedef void (*register_statement_v1_t)register_statement_v1_t1405,35886
typedef void (*register_socket_v1_t)register_socket_v1_t1414,36186
typedef struct PSI_mutex* (*init_mutex_v1_t)init_mutex_v1_t1423,36465
typedef void (*destroy_mutex_v1_t)(struct PSI_mutex *mutex);destroy_mutex_v1_t1430,36640
typedef struct PSI_rwlock* (*init_rwlock_v1_t)init_rwlock_v1_t1438,36877
typedef void (*destroy_rwlock_v1_t)(struct PSI_rwlock *rwlock);destroy_rwlock_v1_t1445,37058
typedef struct PSI_cond* (*init_cond_v1_t)init_cond_v1_t1453,37287
typedef void (*destroy_cond_v1_t)(struct PSI_cond *cond);destroy_cond_v1_t1460,37457
typedef struct PSI_socket* (*init_socket_v1_t)init_socket_v1_t1470,37748
typedef void (*destroy_socket_v1_t)(struct PSI_socket *socket);destroy_socket_v1_t1478,37979
typedef struct PSI_table_share* (*get_table_share_v1_t)get_table_share_v1_t1486,38227
typedef void (*release_table_share_v1_t)(struct PSI_table_share *share);release_table_share_v1_t1493,38407
typedef void (*drop_table_share_v1_t)drop_table_share_v1_t1503,38739
typedef struct PSI_table* (*open_table_v1_t)open_table_v1_t1513,39054
typedef void (*unbind_table_v1_t)unbind_table_v1_t1521,39328
typedef PSI_table* (*rebind_table_v1_t)rebind_table_v1_t1530,39571
typedef void (*close_table_v1_t)(struct TABLE_SHARE *server_share,close_table_v1_t1538,39826
typedef void (*create_file_v1_t)(PSI_file_key key, const char *name,create_file_v1_t1549,40257
typedef int (*spawn_thread_v1_t)(PSI_thread_key key,spawn_thread_v1_t1561,40676
typedef struct PSI_thread* (*new_thread_v1_t)new_thread_v1_t1572,41090
typedef void (*set_thread_THD_v1_t)(struct PSI_thread *thread,set_thread_THD_v1_t1580,41334
typedef void (*set_thread_id_v1_t)(struct PSI_thread *thread,set_thread_id_v1_t1588,41563
typedef void (*set_thread_os_id_v1_t)(struct PSI_thread *thread);set_thread_os_id_v1_t1596,41858
typedef struct PSI_thread* (*get_thread_v1_t)(void);get_thread_v1_t1605,42174
typedef void (*set_thread_user_v1_t)(const char *user, int user_len);set_thread_user_v1_t1612,42351
typedef void (*set_thread_account_v1_t)(const char *user, int user_len,set_thread_account_v1_t1621,42626
typedef void (*set_thread_db_v1_t)(const char* db, int db_len);set_thread_db_v1_t1629,42906
typedef void (*set_thread_command_v1_t)(int command);set_thread_command_v1_t1635,43070
typedef void (*set_connection_type_v1_t)(opaque_vio_type conn_type);set_connection_type_v1_t1641,43226
typedef void (*set_thread_start_time_v1_t)(time_t start_time);set_thread_start_time_v1_t1648,43396
typedef void (*set_thread_state_v1_t)(const char* state);set_thread_state_v1_t1654,43544
typedef void (*set_thread_info_v1_t)(const char* info, uint info_len);set_thread_info_v1_t1661,43749
typedef void (*set_thread_v1_t)(struct PSI_thread *thread);set_thread_v1_t1672,44197
typedef void (*delete_current_thread_v1_t)(void);delete_current_thread_v1_t1675,44308
typedef void (*delete_thread_v1_t)(struct PSI_thread *thread);delete_thread_v1_t1678,44399
typedef struct PSI_file_locker* (*get_thread_file_name_locker_v1_t)get_thread_file_name_locker_v1_t1689,44779
typedef struct PSI_file_locker* (*get_thread_file_stream_locker_v1_t)get_thread_file_stream_locker_v1_t1701,45188
typedef struct PSI_file_locker* (*get_thread_file_descriptor_locker_v1_t)get_thread_file_descriptor_locker_v1_t1712,45558
typedef void (*unlock_mutex_v1_t)unlock_mutex_v1_t1720,45814
typedef void (*unlock_rwlock_v1_t)unlock_rwlock_v1_t1727,45976
typedef void (*signal_cond_v1_t)signal_cond_v1_t1734,46140
typedef void (*broadcast_cond_v1_t)broadcast_cond_v1_t1741,46301
typedef struct PSI_idle_locker* (*start_idle_wait_v1_t)start_idle_wait_v1_t1751,46572
typedef void (*end_idle_wait_v1_t)end_idle_wait_v1_t1758,46821
typedef struct PSI_mutex_locker* (*start_mutex_wait_v1_t)start_mutex_wait_v1_t1770,47183
typedef void (*end_mutex_wait_v1_t)end_mutex_wait_v1_t1781,47541
typedef struct PSI_rwlock_locker* (*start_rwlock_rdwait_v1_t)start_rwlock_rdwait_v1_t1789,47794
typedef void (*end_rwlock_rdwait_v1_t)end_rwlock_rdwait_v1_t1800,48166
typedef struct PSI_rwlock_locker* (*start_rwlock_wrwait_v1_t)start_rwlock_wrwait_v1_t1808,48424
typedef void (*end_rwlock_wrwait_v1_t)end_rwlock_wrwait_v1_t1819,48797
typedef struct PSI_cond_locker* (*start_cond_wait_v1_t)start_cond_wait_v1_t1827,49054
typedef void (*end_cond_wait_v1_t)end_cond_wait_v1_t1839,49438
typedef struct PSI_table_locker* (*start_table_io_wait_v1_t)start_table_io_wait_v1_t1848,49705
typedef void (*end_table_io_wait_v1_t)end_table_io_wait_v1_t1860,50091
typedef struct PSI_table_locker* (*start_table_lock_wait_v1_t)start_table_lock_wait_v1_t1870,50379
typedef void (*end_table_lock_wait_v1_t)(struct PSI_table_locker *locker);end_table_lock_wait_v1_t1881,50721
typedef void (*unlock_table_v1_t)(struct PSI_table *table);unlock_table_v1_t1883,50797
typedef void (*start_file_open_wait_v1_t)start_file_open_wait_v1_t1892,51061
typedef struct PSI_file* (*end_file_open_wait_v1_t)end_file_open_wait_v1_t1901,51394
typedef void (*end_file_open_wait_and_bind_to_descriptor_v1_t)end_file_open_wait_and_bind_to_descriptor_v1_t1909,51680
typedef void (*end_temp_file_open_wait_and_bind_to_descriptor_v1_t)end_temp_file_open_wait_and_bind_to_descriptor_v1_t1918,52058
typedef void (*start_file_wait_v1_t)start_file_wait_v1_t1929,52493
typedef void (*end_file_wait_v1_t)end_file_wait_v1_t1945,53122
typedef void (*start_file_close_wait_v1_t)start_file_close_wait_v1_t1955,53412
typedef void (*end_file_close_wait_v1_t)end_file_close_wait_v1_t1964,53714
typedef PSI_stage_progress* (*start_stage_v1_t)start_stage_v1_t1974,54018
typedef PSI_stage_progress* (*get_current_stage_progress_v1_t)(void);get_current_stage_progress_v1_t1977,54126
typedef void (*end_stage_v1_t) (void);end_stage_v1_t1980,54227
typedef struct PSI_statement_locker* (*get_thread_statement_locker_v1_t)get_thread_statement_locker_v1_t1989,54482
typedef struct PSI_statement_locker* (*refine_statement_v1_t)refine_statement_v1_t2000,54906
typedef void (*start_statement_v1_t)start_statement_v1_t2012,55324
typedef void (*set_statement_text_v1_t)set_statement_text_v1_t2023,55655
typedef void (*set_statement_lock_time_t)set_statement_lock_time_t2032,55904
typedef void (*set_statement_rows_sent_t)set_statement_rows_sent_t2040,56134
typedef void (*set_statement_rows_examined_t)set_statement_rows_examined_t2048,56368
typedef void (*inc_statement_created_tmp_disk_tables_t)inc_statement_created_tmp_disk_tables_t2056,56623
typedef void (*inc_statement_created_tmp_tables_t)inc_statement_created_tmp_tables_t2064,56879
typedef void (*inc_statement_select_full_join_t)inc_statement_select_full_join_t2072,57128
typedef void (*inc_statement_select_full_range_join_t)inc_statement_select_full_range_join_t2080,57381
typedef void (*inc_statement_select_range_t)inc_statement_select_range_t2088,57635
typedef void (*inc_statement_select_range_check_t)inc_statement_select_range_check_t2096,57880
typedef void (*inc_statement_select_scan_t)inc_statement_select_scan_t2104,58124
typedef void (*inc_statement_sort_merge_passes_t)inc_statement_sort_merge_passes_t2112,58367
typedef void (*inc_statement_sort_range_t)inc_statement_sort_range_t2120,58609
typedef void (*inc_statement_sort_rows_t)inc_statement_sort_rows_t2128,58843
typedef void (*inc_statement_sort_scan_t)inc_statement_sort_scan_t2136,59076
typedef void (*set_statement_no_index_used_t)set_statement_no_index_used_t2144,59297
typedef void (*set_statement_no_good_index_used_t)set_statement_no_good_index_used_t2152,59514
typedef void (*end_statement_v1_t)end_statement_v1_t2161,59748
typedef struct PSI_transaction_locker* (*get_thread_transaction_locker_v1_t)get_thread_transaction_locker_v1_t2174,60231
typedef void (*start_transaction_v1_t)start_transaction_v1_t2185,60633
typedef void (*set_transaction_xid_v1_t)set_transaction_xid_v1_t2195,60939
typedef void (*set_transaction_xa_state_v1_t)set_transaction_xa_state_v1_t2204,61212
typedef void (*set_transaction_gtid_v1_t)set_transaction_gtid_v1_t2214,61532
typedef void (*set_transaction_trxid_v1_t)set_transaction_trxid_v1_t2223,61801
typedef void (*inc_transaction_savepoints_v1_t)inc_transaction_savepoints_v1_t2232,62045
typedef void (*inc_transaction_rollback_to_savepoint_v1_t)inc_transaction_rollback_to_savepoint_v1_t2240,62292
typedef void (*inc_transaction_release_savepoint_v1_t)inc_transaction_release_savepoint_v1_t2248,62546
typedef void (*end_transaction_v1_t)end_transaction_v1_t2256,62829
typedef struct PSI_socket_locker* (*start_socket_wait_v1_t)start_socket_wait_v1_t2268,63232
typedef void (*end_socket_wait_v1_t)end_socket_wait_v1_t2285,63891
typedef void (*set_socket_state_v1_t)(struct PSI_socket *socket,set_socket_state_v1_t2293,64113
typedef void (*set_socket_info_v1_t)(struct PSI_socket *socket,set_socket_info_v1_t2304,64500
typedef void (*set_socket_thread_owner_v1_t)(struct PSI_socket *socket);set_socket_thread_owner_v1_t2313,64834
typedef PSI_prepared_stmt* (*create_prepared_stmt_v1_t)create_prepared_stmt_v1_t2319,65001
typedef void (*destroy_prepared_stmt_v1_t)destroy_prepared_stmt_v1_t2328,65290
typedef void (*reprepare_prepared_stmt_v1_t)reprepare_prepared_stmt_v1_t2335,65454
typedef void (*execute_prepared_stmt_v1_t)execute_prepared_stmt_v1_t2343,65707
typedef struct PSI_digest_locker * (*digest_start_v1_t)digest_start_v1_t2350,65933
typedef void (*digest_end_v1_t)digest_end_v1_t2359,66234
typedef PSI_sp_locker* (*start_sp_v1_t)start_sp_v1_t2362,66346
typedef void (*end_sp_v1_t)end_sp_v1_t2365,66460
typedef void (*drop_sp_v1_t)drop_sp_v1_t2368,66523
typedef struct PSI_sp_share* (*get_sp_share_v1_t)get_sp_share_v1_t2380,66887
typedef void (*release_sp_share_v1_t)(struct PSI_sp_share *share);release_sp_share_v1_t2389,67157
typedef PSI_metadata_lock* (*create_metadata_lock_v1_t)create_metadata_lock_v1_t2391,67225
typedef void (*set_metadata_lock_status_v1_t)(PSI_metadata_lock *lock,set_metadata_lock_status_v1_t2400,67467
typedef void (*destroy_metadata_lock_v1_t)(PSI_metadata_lock *lock);destroy_metadata_lock_v1_t2403,67616
typedef struct PSI_metadata_locker* (*start_metadata_wait_v1_t)start_metadata_wait_v1_t2405,67686
typedef void (*end_metadata_wait_v1_t)end_metadata_wait_v1_t2410,67873
typedef int (*set_thread_connect_attrs_v1_t)(const char *buffer, uint length,set_thread_connect_attrs_v1_t2423,68345
struct PSI_v1PSI_v12430,68564
  register_mutex_v1_t register_mutex;register_mutex2433,68614
  register_rwlock_v1_t register_rwlock;register_rwlock2435,68687
  register_cond_v1_t register_cond;register_cond2437,68760
  register_thread_v1_t register_thread;register_thread2439,68831
  register_file_v1_t register_file;register_file2441,68904
  register_stage_v1_t register_stage;register_stage2443,68974
  register_statement_v1_t register_statement;register_statement2445,69050
  register_socket_v1_t register_socket;register_socket2447,69131
  init_mutex_v1_t init_mutex;init_mutex2449,69201
  destroy_mutex_v1_t destroy_mutex;destroy_mutex2451,69264
  init_rwlock_v1_t init_rwlock;init_rwlock2453,69331
  destroy_rwlock_v1_t destroy_rwlock;destroy_rwlock2455,69397
  init_cond_v1_t init_cond;init_cond2457,69464
  destroy_cond_v1_t destroy_cond;destroy_cond2459,69524
  init_socket_v1_t init_socket;init_socket2461,69589
  destroy_socket_v1_t destroy_socket;destroy_socket2463,69655
  get_table_share_v1_t get_table_share;get_table_share2466,69729
  release_table_share_v1_t release_table_share;release_table_share2468,69808
  drop_table_share_v1_t drop_table_share;drop_table_share2470,69892
  open_table_v1_t open_table;open_table2472,69964
  unbind_table_v1_t unbind_table;unbind_table2474,70026
  rebind_table_v1_t rebind_table;rebind_table2476,70092
  close_table_v1_t close_table;close_table2478,70157
  create_file_v1_t create_file;create_file2480,70220
  spawn_thread_v1_t spawn_thread;spawn_thread2482,70284
  new_thread_v1_t new_thread;new_thread2484,70348
  set_thread_id_v1_t set_thread_id;set_thread_id2486,70411
  set_thread_THD_v1_t set_thread_THD;set_thread_THD2488,70481
  set_thread_os_id_v1_t set_thread_os_id;set_thread_os_id2490,70555
  get_thread_v1_t get_thread;get_thread2492,70627
  set_thread_user_v1_t set_thread_user;set_thread_user2494,70692
  set_thread_account_v1_t set_thread_account;set_thread_account2496,70770
  set_thread_db_v1_t set_thread_db;set_thread_db2498,70849
  set_thread_command_v1_t set_thread_command;set_thread_command2500,70923
  set_connection_type_v1_t set_connection_type;set_connection_type2502,71008
  set_thread_start_time_v1_t set_thread_start_time;set_thread_start_time2504,71097
  set_thread_state_v1_t set_thread_state;set_thread_state2506,71185
  set_thread_info_v1_t set_thread_info;set_thread_info2508,71262
  set_thread_v1_t set_thread;set_thread2510,71332
  delete_current_thread_v1_t delete_current_thread;delete_current_thread2512,71403
  delete_thread_v1_t delete_thread;delete_thread2514,71488
  get_thread_file_name_locker_v1_t get_thread_file_name_locker;get_thread_file_name_locker2516,71571
  get_thread_file_stream_locker_v1_t get_thread_file_stream_locker;get_thread_file_stream_locker2518,71684
  get_thread_file_descriptor_locker_v1_t get_thread_file_descriptor_locker;get_thread_file_descriptor_locker2520,71805
  unlock_mutex_v1_t unlock_mutex;unlock_mutex2522,71913
  unlock_rwlock_v1_t unlock_rwlock;unlock_rwlock2524,71980
  signal_cond_v1_t signal_cond;signal_cond2526,72047
  broadcast_cond_v1_t broadcast_cond;broadcast_cond2528,72113
  start_idle_wait_v1_t start_idle_wait;start_idle_wait2530,72186
  end_idle_wait_v1_t end_idle_wait;end_idle_wait2532,72259
  start_mutex_wait_v1_t start_mutex_wait;start_mutex_wait2534,72331
  end_mutex_wait_v1_t end_mutex_wait;end_mutex_wait2536,72407
  start_rwlock_rdwait_v1_t start_rwlock_rdwait;start_rwlock_rdwait2538,72484
  end_rwlock_rdwait_v1_t end_rwlock_rdwait;end_rwlock_rdwait2540,72569
  start_rwlock_wrwait_v1_t start_rwlock_wrwait;start_rwlock_wrwait2542,72652
  end_rwlock_wrwait_v1_t end_rwlock_wrwait;end_rwlock_wrwait2544,72737
  start_cond_wait_v1_t start_cond_wait;start_cond_wait2546,72816
  end_cond_wait_v1_t end_cond_wait;end_cond_wait2548,72889
  start_table_io_wait_v1_t start_table_io_wait;start_table_io_wait2550,72964
  end_table_io_wait_v1_t end_table_io_wait;end_table_io_wait2552,73049
  start_table_lock_wait_v1_t start_table_lock_wait;start_table_lock_wait2554,73134
  end_table_lock_wait_v1_t end_table_lock_wait;end_table_lock_wait2556,73225
  start_file_open_wait_v1_t start_file_open_wait;start_file_open_wait2558,73313
  end_file_open_wait_v1_t end_file_open_wait;end_file_open_wait2560,73401
    end_file_open_wait_and_bind_to_descriptor;end_file_open_wait_and_bind_to_descriptor2563,73557
    end_temp_file_open_wait_and_bind_to_descriptor;end_temp_file_open_wait_and_bind_to_descriptor2566,73724
  start_file_wait_v1_t start_file_wait;start_file_wait2568,73811
  end_file_wait_v1_t end_file_wait;end_file_wait2570,73884
  start_file_close_wait_v1_t start_file_close_wait;start_file_close_wait2572,73961
  end_file_close_wait_v1_t end_file_close_wait;end_file_close_wait2574,74052
  start_stage_v1_t start_stage;start_stage2576,74131
  get_current_stage_progress_v1_t get_current_stage_progress;get_current_stage_progress2578,74209
  end_stage_v1_t end_stage;end_stage2580,74300
  get_thread_statement_locker_v1_t get_thread_statement_locker;get_thread_statement_locker2582,74375
  refine_statement_v1_t refine_statement;refine_statement2584,74475
  start_statement_v1_t start_statement;start_statement2586,74552
  set_statement_text_v1_t set_statement_text;set_statement_text2588,74630
  set_statement_lock_time_t set_statement_lock_time;set_statement_lock_time2590,74716
  set_statement_rows_sent_t set_statement_rows_sent;set_statement_rows_sent2592,74809
  set_statement_rows_examined_t set_statement_rows_examined;set_statement_rows_examined2594,74906
  inc_statement_created_tmp_disk_tables_t inc_statement_created_tmp_disk_tables;inc_statement_created_tmp_disk_tables2596,75019
  inc_statement_created_tmp_tables_t inc_statement_created_tmp_tables;inc_statement_created_tmp_tables2598,75147
  inc_statement_select_full_join_t inc_statement_select_full_join;inc_statement_select_full_join2600,75263
  inc_statement_select_full_range_join_t inc_statement_select_full_range_join;inc_statement_select_full_range_join2602,75381
  inc_statement_select_range_t inc_statement_select_range;inc_statement_select_range2604,75501
  inc_statement_select_range_check_t inc_statement_select_range_check;inc_statement_select_range_check2606,75607
  inc_statement_select_scan_t inc_statement_select_scan;inc_statement_select_scan2608,75718
  inc_statement_sort_merge_passes_t inc_statement_sort_merge_passes;inc_statement_sort_merge_passes2610,75821
  inc_statement_sort_range_t inc_statement_sort_range;inc_statement_sort_range2612,75929
  inc_statement_sort_rows_t inc_statement_sort_rows;inc_statement_sort_rows2614,76022
  inc_statement_sort_scan_t inc_statement_sort_scan;inc_statement_sort_scan2616,76113
  set_statement_no_index_used_t set_statement_no_index_used;set_statement_no_index_used2618,76208
  set_statement_no_good_index_used_t set_statement_no_good_index_used;set_statement_no_good_index_used2620,76316
  end_statement_v1_t end_statement;end_statement2622,76420
  get_thread_transaction_locker_v1_t get_thread_transaction_locker;get_thread_transaction_locker2624,76505
  start_transaction_v1_t start_transaction;start_transaction2626,76610
  set_transaction_xid_v1_t set_transaction_xid;set_transaction_xid2628,76693
  set_transaction_xa_state_v1_t set_transaction_xa_state;set_transaction_xa_state2630,76785
  set_transaction_gtid_v1_t set_transaction_gtid;set_transaction_gtid2632,76883
  set_transaction_trxid_v1_t set_transaction_trxid;set_transaction_trxid2634,76974
  inc_transaction_savepoints_v1_t inc_transaction_savepoints;inc_transaction_savepoints2636,77072
  inc_transaction_rollback_to_savepoint_v1_t inc_transaction_rollback_to_savepoint;inc_transaction_rollback_to_savepoint2638,77191
  inc_transaction_release_savepoint_v1_t inc_transaction_release_savepoint;inc_transaction_release_savepoint2640,77328
  end_transaction_v1_t end_transaction;end_transaction2642,77439
  start_socket_wait_v1_t start_socket_wait;start_socket_wait2644,77516
  end_socket_wait_v1_t end_socket_wait;end_socket_wait2646,77595
  set_socket_state_v1_t set_socket_state;set_socket_state2648,77671
  set_socket_info_v1_t set_socket_info;set_socket_info2650,77748
  set_socket_thread_owner_v1_t set_socket_thread_owner;set_socket_thread_owner2652,77831
  create_prepared_stmt_v1_t create_prepared_stmt;create_prepared_stmt2654,77927
  destroy_prepared_stmt_v1_t destroy_prepared_stmt;destroy_prepared_stmt2656,78018
  reprepare_prepared_stmt_v1_t reprepare_prepared_stmt;reprepare_prepared_stmt2658,78113
  execute_prepared_stmt_v1_t execute_prepared_stmt;execute_prepared_stmt2660,78210
  digest_start_v1_t digest_start;digest_start2662,78294
  digest_end_v1_t digest_end;digest_end2664,78358
  set_thread_connect_attrs_v1_t set_thread_connect_attrs;set_thread_connect_attrs2666,78432
  start_sp_v1_t start_sp;start_sp2668,78518
  end_sp_v1_t end_sp;end_sp2670,78572
  drop_sp_v1_t drop_sp;drop_sp2672,78621
  get_sp_share_v1_t get_sp_share;get_sp_share2674,78677
  release_sp_share_v1_t release_sp_share;release_sp_share2676,78747
  register_memory_v1_t register_memory;register_memory2678,78824
  memory_alloc_v1_t memory_alloc;memory_alloc2680,78896
  memory_realloc_v1_t memory_realloc;memory_realloc2682,78964
  memory_claim_v1_t memory_claim;memory_claim2684,79034
  memory_free_v1_t memory_free;memory_free2686,79099
  unlock_table_v1_t unlock_table;unlock_table2688,79132
  create_metadata_lock_v1_t create_metadata_lock;create_metadata_lock2690,79167
  set_metadata_lock_status_v1_t set_metadata_lock_status;set_metadata_lock_status2691,79217
  destroy_metadata_lock_v1_t destroy_metadata_lock;destroy_metadata_lock2692,79275
  start_metadata_wait_v1_t start_metadata_wait;start_metadata_wait2694,79328
  end_metadata_wait_v1_t end_metadata_wait;end_metadata_wait2695,79376
#define HAVE_PSI_2HAVE_PSI_22703,79505
struct PSI_v2PSI_v22719,79799
  int placeholder;placeholder2722,79836
struct PSI_mutex_info_v2PSI_mutex_info_v22727,79913
  int placeholder;placeholder2730,79961
struct PSI_rwlock_info_v2PSI_rwlock_info_v22734,80003
  int placeholder;placeholder2737,80052
struct PSI_cond_info_v2PSI_cond_info_v22741,80094
  int placeholder;placeholder2744,80141
struct PSI_thread_info_v2PSI_thread_info_v22748,80183
  int placeholder;placeholder2751,80232
struct PSI_file_info_v2PSI_file_info_v22755,80274
  int placeholder;placeholder2758,80321
struct PSI_stage_info_v2PSI_stage_info_v22762,80363
  int placeholder;placeholder2765,80411
struct PSI_statement_info_v2PSI_statement_info_v22769,80453
  int placeholder;placeholder2772,80505
struct PSI_transaction_info_v2PSI_transaction_info_v22776,80547
  int placeholder;placeholder2779,80601
struct PSI_idle_locker_state_v2PSI_idle_locker_state_v22783,80643
  int placeholder;placeholder2786,80698
struct PSI_mutex_locker_state_v2PSI_mutex_locker_state_v22790,80740
  int placeholder;placeholder2793,80796
struct PSI_rwlock_locker_state_v2PSI_rwlock_locker_state_v22797,80838
  int placeholder;placeholder2800,80895
struct PSI_cond_locker_state_v2PSI_cond_locker_state_v22804,80937
  int placeholder;placeholder2807,80992
struct PSI_file_locker_state_v2PSI_file_locker_state_v22811,81034
  int placeholder;placeholder2814,81089
struct PSI_statement_locker_state_v2PSI_statement_locker_state_v22818,81131
  int placeholder;placeholder2821,81191
struct PSI_transaction_locker_state_v2PSI_transaction_locker_state_v22825,81233
  int placeholder;placeholder2828,81295
struct PSI_socket_locker_state_v2PSI_socket_locker_state_v22832,81337
  int placeholder;placeholder2835,81394
struct PSI_metadata_locker_state_v2PSI_metadata_locker_state_v22838,81417
  int placeholder;placeholder2840,81455
typedef struct PSI_v1 PSI;PSI2880,82164
typedef struct PSI_mutex_info_v1 PSI_mutex_info;PSI_mutex_info2881,82191
typedef struct PSI_rwlock_info_v1 PSI_rwlock_info;PSI_rwlock_info2882,82240
typedef struct PSI_cond_info_v1 PSI_cond_info;PSI_cond_info2883,82291
typedef struct PSI_thread_info_v1 PSI_thread_info;PSI_thread_info2884,82338
typedef struct PSI_file_info_v1 PSI_file_info;PSI_file_info2885,82389
typedef struct PSI_stage_info_v1 PSI_stage_info;PSI_stage_info2886,82436
typedef struct PSI_statement_info_v1 PSI_statement_info;PSI_statement_info2887,82485
typedef struct PSI_transaction_info_v1 PSI_transaction_info;PSI_transaction_info2888,82542
typedef struct PSI_socket_info_v1 PSI_socket_info;PSI_socket_info2889,82603
typedef struct PSI_idle_locker_state_v1 PSI_idle_locker_state;PSI_idle_locker_state2890,82654
typedef struct PSI_mutex_locker_state_v1 PSI_mutex_locker_state;PSI_mutex_locker_state2891,82717
typedef struct PSI_rwlock_locker_state_v1 PSI_rwlock_locker_state;PSI_rwlock_locker_state2892,82782
typedef struct PSI_cond_locker_state_v1 PSI_cond_locker_state;PSI_cond_locker_state2893,82849
typedef struct PSI_file_locker_state_v1 PSI_file_locker_state;PSI_file_locker_state2894,82912
typedef struct PSI_statement_locker_state_v1 PSI_statement_locker_state;PSI_statement_locker_state2895,82975
typedef struct PSI_transaction_locker_state_v1 PSI_transaction_locker_state;PSI_transaction_locker_state2896,83048
typedef struct PSI_socket_locker_state_v1 PSI_socket_locker_state;PSI_socket_locker_state2897,83125
typedef struct PSI_sp_locker_state_v1 PSI_sp_locker_state;PSI_sp_locker_state2898,83192
typedef struct PSI_metadata_locker_state_v1 PSI_metadata_locker_state;PSI_metadata_locker_state2899,83251
typedef struct PSI_v2 PSI;PSI2903,83347
typedef struct PSI_mutex_info_v2 PSI_mutex_info;PSI_mutex_info2904,83374
typedef struct PSI_rwlock_info_v2 PSI_rwlock_info;PSI_rwlock_info2905,83423
typedef struct PSI_cond_info_v2 PSI_cond_info;PSI_cond_info2906,83474
typedef struct PSI_thread_info_v2 PSI_thread_info;PSI_thread_info2907,83521
typedef struct PSI_file_info_v2 PSI_file_info;PSI_file_info2908,83572
typedef struct PSI_stage_info_v2 PSI_stage_info;PSI_stage_info2909,83619
typedef struct PSI_statement_info_v2 PSI_statement_info;PSI_statement_info2910,83668
typedef struct PSI_transaction_info_v2 PSI_transaction_info;PSI_transaction_info2911,83725
typedef struct PSI_socket_info_v2 PSI_socket_info;PSI_socket_info2912,83786
typedef struct PSI_idle_locker_state_v2 PSI_idle_locker_state;PSI_idle_locker_state2913,83837
typedef struct PSI_mutex_locker_state_v2 PSI_mutex_locker_state;PSI_mutex_locker_state2914,83900
typedef struct PSI_rwlock_locker_state_v2 PSI_rwlock_locker_state;PSI_rwlock_locker_state2915,83965
typedef struct PSI_cond_locker_state_v2 PSI_cond_locker_state;PSI_cond_locker_state2916,84032
typedef struct PSI_file_locker_state_v2 PSI_file_locker_state;PSI_file_locker_state2917,84095
typedef struct PSI_statement_locker_state_v2 PSI_statement_locker_state;PSI_statement_locker_state2918,84158
typedef struct PSI_transaction_locker_state_v2 PSI_transaction_locker_state;PSI_transaction_locker_state2919,84231
typedef struct PSI_socket_locker_state_v2 PSI_socket_locker_state;PSI_socket_locker_state2920,84308
typedef struct PSI_sp_locker_state_v2 PSI_sp_locker_state;PSI_sp_locker_state2921,84375
typedef struct PSI_metadata_locker_state_v2 PSI_metadata_locker_state;PSI_metadata_locker_state2922,84434
struct PSI_nonePSI_none2932,84700
  int opaque;opaque2934,84718
typedef struct PSI_none PSI;PSI2936,84735
struct PSI_stage_info_nonePSI_stage_info_none2943,84887
  unsigned int m_key;m_key2946,84943
  const char *m_name;m_name2948,85008
  int m_flags;m_flags2950,85059
typedef struct PSI_stage_info_none PSI_stage_info;PSI_stage_info2961,85365
#define PSI_DYNAMIC_CALL(PSI_DYNAMIC_CALL2974,85699

mysql/include/mysql/psi/mysql_stage.h,2103
#define MYSQL_STAGE_HMYSQL_STAGE_H17,757
#define PSI_STAGE_CALL(PSI_STAGE_CALL27,909
#define mysql_stage_register(mysql_stage_register41,1170
#define mysql_stage_register(mysql_stage_register44,1261
  #define MYSQL_SET_STAGE(MYSQL_SET_STAGE59,1610
  #define MYSQL_SET_STAGE(MYSQL_SET_STAGE62,1689
  #define mysql_set_stage(mysql_set_stage73,1892
  #define mysql_set_stage(mysql_set_stage76,1979
  #define mysql_end_stage mysql_end_stage85,2110
  #define mysql_end_stage mysql_end_stage88,2171
static inline void inline_mysql_stage_register(inline_mysql_stage_register93,2257
inline_mysql_set_stage(PSI_stage_key key,inline_mysql_set_stage102,2498
inline_mysql_end_stage()inline_mysql_end_stage111,2725
#define mysql_stage_set_work_completed(mysql_stage_set_work_completed118,2825
#define mysql_stage_get_work_completed(mysql_stage_get_work_completed121,2923
#define mysql_stage_set_work_completed(mysql_stage_set_work_completed124,3018
#define mysql_stage_get_work_completed(mysql_stage_get_work_completed127,3086
#define mysql_stage_inc_work_completed(mysql_stage_inc_work_completed132,3189
#define mysql_stage_inc_work_completed(mysql_stage_inc_work_completed135,3292
#define mysql_stage_set_work_estimated(mysql_stage_set_work_estimated140,3399
#define mysql_stage_get_work_estimated(mysql_stage_get_work_estimated143,3497
#define mysql_stage_set_work_estimated(mysql_stage_set_work_estimated146,3592
#define mysql_stage_get_work_estimated(mysql_stage_get_work_estimated149,3660
inline_mysql_stage_set_work_completed(PSI_stage_progress *progress,inline_mysql_stage_set_work_completed155,3782
inline_mysql_stage_get_work_completed(PSI_stage_progress *progress)inline_mysql_stage_get_work_completed163,3993
inline_mysql_stage_inc_work_completed(PSI_stage_progress *progress,inline_mysql_stage_inc_work_completed171,4161
inline_mysql_stage_set_work_estimated(PSI_stage_progress *progress,inline_mysql_stage_set_work_estimated181,4407
inline_mysql_stage_get_work_estimated(PSI_stage_progress *progress)inline_mysql_stage_get_work_estimated189,4618

mysql/include/mysql/psi/mysql_table.h,945
#define MYSQL_TABLE_HMYSQL_TABLE_H17,752
#define PSI_TABLE_CALL(PSI_TABLE_CALL27,906
  #define MYSQL_TABLE_WAIT_VARIABLES(MYSQL_TABLE_WAIT_VARIABLES49,1457
  #define MYSQL_TABLE_WAIT_VARIABLES(MYSQL_TABLE_WAIT_VARIABLES53,1590
  #define MYSQL_START_TABLE_LOCK_WAIT(MYSQL_START_TABLE_LOCK_WAIT68,2045
  #define MYSQL_START_TABLE_LOCK_WAIT(MYSQL_START_TABLE_LOCK_WAIT72,2261
  #define MYSQL_END_TABLE_LOCK_WAIT(MYSQL_END_TABLE_LOCK_WAIT84,2595
  #define MYSQL_END_TABLE_LOCK_WAIT(MYSQL_END_TABLE_LOCK_WAIT87,2692
  #define MYSQL_UNLOCK_TABLE(MYSQL_UNLOCK_TABLE92,2798
  #define MYSQL_UNLOCK_TABLE(MYSQL_UNLOCK_TABLE95,2871
inline_mysql_start_table_lock_wait(PSI_table_locker_state *state,inline_mysql_start_table_lock_wait105,3102
inline_mysql_end_table_lock_wait(struct PSI_table_locker *locker)inline_mysql_end_table_lock_wait125,3699
inline_mysql_unlock_table(struct PSI_table *table)inline_mysql_unlock_table132,3860

mysql/include/mysql/psi/psi_memory.h,1009
#define MYSQL_PSI_MEMORY_HMYSQL_PSI_MEMORY_H17,757
#define HAVE_PSI_MEMORY_INTERFACEHAVE_PSI_MEMORY_INTERFACE37,1112
typedef unsigned int PSI_memory_key;PSI_memory_key49,1429
struct PSI_memory_info_v1PSI_memory_info_v164,1722
  PSI_memory_key *m_key;m_key67,1813
  const char *m_name;m_name69,1894
  int m_flags;m_flags74,2003
typedef struct PSI_memory_info_v1 PSI_memory_info_v1;PSI_memory_info_v176,2021
typedef void (*register_memory_v1_t)register_memory_v1_t84,2262
typedef PSI_memory_key (*memory_alloc_v1_t)memory_alloc_v1_t94,2574
typedef PSI_memory_key (*memory_realloc_v1_t)memory_realloc_v1_t105,2960
typedef PSI_memory_key (*memory_claim_v1_t)memory_claim_v1_t115,3296
typedef void (*memory_free_v1_t)memory_free_v1_t124,3553
struct PSI_memory_info_v2PSI_memory_info_v2132,3733
  int placeholder;placeholder134,3761
typedef struct PSI_memory_info_v1 PSI_memory_info;PSI_memory_info140,3826
typedef struct PSI_memory_info_v2 PSI_memory_info;PSI_memory_info144,3902

mysql/include/mysql/psi/psi_base.h,871
#define MYSQL_PSI_BASE_HMYSQL_PSI_BASE_H17,755
#define PSI_INSTRUMENT_ME PSI_INSTRUMENT_ME32,1006
#define PSI_NOT_INSTRUMENTED PSI_NOT_INSTRUMENTED34,1035
#define PSI_FLAG_GLOBAL PSI_FLAG_GLOBAL41,1180
#define PSI_FLAG_MUTABLE PSI_FLAG_MUTABLE48,1376
#define PSI_FLAG_THREAD PSI_FLAG_THREAD50,1411
#define PSI_FLAG_STAGE_PROGRESS PSI_FLAG_STAGE_PROGRESS57,1583
#define PSI_RWLOCK_FLAG_SX PSI_RWLOCK_FLAG_SX63,1717
#define PSI_FLAG_TRANSFER PSI_FLAG_TRANSFER70,1893
#define PSI_FLAG_VOLATILITY_SESSION PSI_FLAG_VOLATILITY_SESSION78,2081
#define PSI_VERSION_1 PSI_VERSION_187,2264
#define PSI_VERSION_2 PSI_VERSION_294,2425
#define PSI_CURRENT_VERSION PSI_CURRENT_VERSION101,2598
#define USE_PSI_1USE_PSI_1125,3013
#define HAVE_PSI_1HAVE_PSI_1130,3063
#define HAVE_PSI_2HAVE_PSI_2134,3107
#define PSI_DYNAMIC_CALL(PSI_DYNAMIC_CALL144,3338

mysql/include/mysql/psi/mysql_socket.h,5037
#define MYSQL_SOCKET_HMYSQL_SOCKET_H20,737
  #define SOCKBUF_T SOCKBUF_T33,982
  #define SOCKBUF_T SOCKBUF_T36,1039
#define PSI_SOCKET_CALL(PSI_SOCKET_CALL46,1170
  #define mysql_socket_register(mysql_socket_register60,1437
  #define mysql_socket_register(mysql_socket_register63,1534
struct st_mysql_socketst_mysql_socket68,1639
  my_socket fd;fd71,1701
  struct PSI_socket *m_psi;m_psi78,1876
typedef struct st_mysql_socket MYSQL_SOCKET;MYSQL_SOCKET85,1994
#define MYSQL_INVALID_SOCKET MYSQL_INVALID_SOCKET93,2167
mysql_socket_invalid()mysql_socket_invalid101,2359
mysql_socket_set_address(mysql_socket_set_address115,2645
mysql_socket_set_thread_owner(mysql_socket_set_thread_owner138,3187
mysql_socket_getfd(MYSQL_SOCKET mysql_socket)mysql_socket_getfd158,3607
mysql_socket_setfd(MYSQL_SOCKET *mysql_socket, my_socket fd)mysql_socket_setfd170,3853
  #define MYSQL_SOCKET_WAIT_VARIABLES(MYSQL_SOCKET_WAIT_VARIABLES187,4295
  #define MYSQL_SOCKET_WAIT_VARIABLES(MYSQL_SOCKET_WAIT_VARIABLES191,4431
  #define MYSQL_START_SOCKET_WAIT(MYSQL_START_SOCKET_WAIT206,4867
  #define MYSQL_START_SOCKET_WAIT(MYSQL_START_SOCKET_WAIT210,5076
  #define MYSQL_END_SOCKET_WAIT(MYSQL_END_SOCKET_WAIT223,5442
  #define MYSQL_END_SOCKET_WAIT(MYSQL_END_SOCKET_WAIT226,5545
  #define MYSQL_SOCKET_SET_STATE(MYSQL_SOCKET_SET_STATE238,5842
  #define MYSQL_SOCKET_SET_STATE(MYSQL_SOCKET_SET_STATE241,5947
inline_mysql_start_socket_wait(PSI_socket_locker_state *state,inline_mysql_start_socket_wait251,6189
inline_mysql_end_socket_wait(struct PSI_socket_locker *locker, size_t byte_count)inline_mysql_end_socket_wait273,6837
inline_mysql_socket_set_state(MYSQL_SOCKET socket, enum PSI_socket_state state)inline_mysql_socket_set_state286,7180
  #define mysql_socket_socket(mysql_socket_socket304,7683
  #define mysql_socket_socket(mysql_socket_socket307,7776
  #define mysql_socket_bind(mysql_socket_bind320,8234
  #define mysql_socket_bind(mysql_socket_bind323,8341
  #define mysql_socket_getsockname(mysql_socket_getsockname336,8835
  #define mysql_socket_getsockname(mysql_socket_getsockname339,8958
  #define mysql_socket_connect(mysql_socket_connect352,9409
  #define mysql_socket_connect(mysql_socket_connect355,9522
  #define mysql_socket_getpeername(mysql_socket_getpeername368,10052
  #define mysql_socket_getpeername(mysql_socket_getpeername371,10175
  #define mysql_socket_send(mysql_socket_send385,10632
  #define mysql_socket_send(mysql_socket_send388,10745
  #define mysql_socket_recv(mysql_socket_recv402,11184
  #define mysql_socket_recv(mysql_socket_recv405,11297
  #define mysql_socket_sendto(mysql_socket_sendto421,11833
  #define mysql_socket_sendto(mysql_socket_sendto424,11964
  #define mysql_socket_recvfrom(mysql_socket_recvfrom440,12570
  #define mysql_socket_recvfrom(mysql_socket_recvfrom443,12707
  #define mysql_socket_getsockopt(mysql_socket_getsockopt458,13258
  #define mysql_socket_getsockopt(mysql_socket_getsockopt461,13395
  #define mysql_socket_setsockopt(mysql_socket_setsockopt476,13939
  #define mysql_socket_setsockopt(mysql_socket_setsockopt479,14076
  #define mysql_sock_set_nonblocking(mysql_sock_set_nonblocking489,14342
  #define mysql_sock_set_nonblocking(mysql_sock_set_nonblocking492,14453
  #define mysql_socket_listen(mysql_socket_listen504,14857
  #define mysql_socket_listen(mysql_socket_listen507,14960
  #define mysql_socket_accept(mysql_socket_accept521,15523
  #define mysql_socket_accept(mysql_socket_accept524,15642
  #define mysql_socket_close(mysql_socket_close535,15985
  #define mysql_socket_close(mysql_socket_close538,16080
  #define mysql_socket_shutdown(mysql_socket_shutdown550,16466
  #define mysql_socket_shutdown(mysql_socket_shutdown553,16573
static inline void inline_mysql_socket_register(inline_mysql_socket_register558,16695
inline_mysql_socket_socketinline_mysql_socket_socket570,16932
inline_mysql_socket_bindinline_mysql_socket_bind593,17444
inline_mysql_socket_getsocknameinline_mysql_socket_getsockname633,18405
inline_mysql_socket_connectinline_mysql_socket_connect671,19279
inline_mysql_socket_getpeernameinline_mysql_socket_getpeername709,20153
inline_mysql_socket_sendinline_mysql_socket_send747,21028
inline_mysql_socket_recvinline_mysql_socket_recv789,22013
inline_mysql_socket_sendtoinline_mysql_socket_sendto831,22994
inline_mysql_socket_recvfrominline_mysql_socket_recvfrom873,24071
inline_mysql_socket_getsockoptinline_mysql_socket_getsockopt916,25141
inline_mysql_socket_setsockoptinline_mysql_socket_setsockopt954,26079
set_socket_nonblock(my_socket fd)set_socket_nonblock992,27010
inline_mysql_sock_set_nonblockinginline_mysql_sock_set_nonblocking1025,27658
inline_mysql_socket_listeninline_mysql_socket_listen1065,28495
inline_mysql_socket_acceptinline_mysql_socket_accept1103,29335
inline_mysql_socket_closeinline_mysql_socket_close1151,30669
inline_mysql_socket_shutdowninline_mysql_socket_shutdown1192,31628

mysql/include/mysql/psi/mysql_sp.h,805
#define MYSQL_SP_HMYSQL_SP_H17,748
#define PSI_SP_CALL(PSI_SP_CALL27,900
  #define MYSQL_START_SP(MYSQL_START_SP31,1015
  #define MYSQL_START_SP(MYSQL_START_SP34,1108
  #define MYSQL_END_SP(MYSQL_END_SP40,1199
  #define MYSQL_END_SP(MYSQL_END_SP43,1270
  #define MYSQL_DROP_SP(MYSQL_DROP_SP48,1360
  #define MYSQL_DROP_SP(MYSQL_DROP_SP51,1461
  #define MYSQL_GET_SP_SHARE(MYSQL_GET_SP_SHARE56,1566
  #define MYSQL_GET_SP_SHARE(MYSQL_GET_SP_SHARE59,1677
inline_mysql_start_sp(PSI_sp_locker_state *state, PSI_sp_share *sp_share)inline_mysql_start_sp65,1812
static inline void inline_mysql_end_sp(PSI_sp_locker *locker)inline_mysql_end_sp70,1940
inline_mysql_drop_sp(uint sp_type,inline_mysql_drop_sp77,2090
inline_mysql_get_sp_share(uint sp_type,inline_mysql_get_sp_share87,2445

mysql/include/mysql/psi/mysql_statement.h,2634
#define MYSQL_STATEMENT_HMYSQL_STATEMENT_H17,761
typedef struct charset_info_st CHARSET_INFO;CHARSET_INFO27,926
#define PSI_STATEMENT_CALL(PSI_STATEMENT_CALL30,999
#define PSI_DIGEST_CALL(PSI_DIGEST_CALL34,1081
#define mysql_statement_register(mysql_statement_register48,1363
#define mysql_statement_register(mysql_statement_register51,1462
  #define MYSQL_DIGEST_START(MYSQL_DIGEST_START56,1578
  #define MYSQL_DIGEST_START(MYSQL_DIGEST_START59,1661
  #define MYSQL_DIGEST_END(MYSQL_DIGEST_END64,1760
  #define MYSQL_DIGEST_END(MYSQL_DIGEST_END67,1855
  #define MYSQL_START_STATEMENT(MYSQL_START_STATEMENT72,1964
  #define MYSQL_START_STATEMENT(MYSQL_START_STATEMENT75,2119
  #define MYSQL_REFINE_STATEMENT(MYSQL_REFINE_STATEMENT80,2237
  #define MYSQL_REFINE_STATEMENT(MYSQL_REFINE_STATEMENT83,2334
  #define MYSQL_SET_STATEMENT_TEXT(MYSQL_SET_STATEMENT_TEXT88,2433
  #define MYSQL_SET_STATEMENT_TEXT(MYSQL_SET_STATEMENT_TEXT91,2544
  #define MYSQL_SET_STATEMENT_LOCK_TIME(MYSQL_SET_STATEMENT_LOCK_TIME96,2661
  #define MYSQL_SET_STATEMENT_LOCK_TIME(MYSQL_SET_STATEMENT_LOCK_TIME99,2774
  #define MYSQL_SET_STATEMENT_ROWS_SENT(MYSQL_SET_STATEMENT_ROWS_SENT104,2892
  #define MYSQL_SET_STATEMENT_ROWS_SENT(MYSQL_SET_STATEMENT_ROWS_SENT107,3005
  #define MYSQL_SET_STATEMENT_ROWS_EXAMINED(MYSQL_SET_STATEMENT_ROWS_EXAMINED112,3123
  #define MYSQL_SET_STATEMENT_ROWS_EXAMINED(MYSQL_SET_STATEMENT_ROWS_EXAMINED115,3244
  #define MYSQL_END_STATEMENT(MYSQL_END_STATEMENT120,3366
  #define MYSQL_END_STATEMENT(MYSQL_END_STATEMENT123,3459
static inline void inline_mysql_statement_register(inline_mysql_statement_register128,3567
inline_mysql_digest_start(PSI_statement_locker *locker)inline_mysql_digest_start136,3834
inline_mysql_digest_end(PSI_digest_locker *locker, const sql_digest_storage *digest)inline_mysql_digest_end148,4119
inline_mysql_start_statement(PSI_statement_locker_state *state,inline_mysql_start_statement156,4339
inline_mysql_refine_statement(PSI_statement_locker *locker,inline_mysql_refine_statement172,5046
inline_mysql_set_statement_text(PSI_statement_locker *locker,inline_mysql_set_statement_text183,5301
inline_mysql_set_statement_lock_time(PSI_statement_locker *locker,inline_mysql_set_statement_lock_time193,5558
inline_mysql_set_statement_rows_sent(PSI_statement_locker *locker,inline_mysql_set_statement_rows_sent203,5805
inline_mysql_set_statement_rows_examined(PSI_statement_locker *locker,inline_mysql_set_statement_rows_examined213,6052
inline_mysql_end_statement(struct PSI_statement_locker *locker,inline_mysql_end_statement223,6311

mysql/include/mysql/psi/mysql_thread.h,7101
#define MYSQL_THREAD_HMYSQL_THREAD_H17,753
#define PSI_MUTEX_CALL(PSI_MUTEX_CALL69,2461
#define PSI_RWLOCK_CALL(PSI_RWLOCK_CALL73,2539
#define PSI_COND_CALL(PSI_COND_CALL77,2616
#define PSI_THREAD_CALL(PSI_THREAD_CALL81,2693
struct st_mysql_mutexst_mysql_mutex94,2918
  my_mutex_t m_mutex;m_mutex97,2967
  struct PSI_mutex *m_psi;m_psi103,3148
typedef struct st_mysql_mutex mysql_mutex_t;mysql_mutex_t116,3445
struct st_mysql_rwlockst_mysql_rwlock122,3555
  native_rw_lock_t m_rwlock;m_rwlock125,3605
  struct PSI_rwlock *m_psi;m_psi131,3794
struct st_mysql_prlockst_mysql_prlock138,3890
  rw_pr_lock_t m_prlock;m_prlock141,3940
  struct PSI_rwlock *m_psi;m_psi147,4125
typedef struct st_mysql_rwlock mysql_rwlock_t;mysql_rwlock_t161,4455
typedef struct st_mysql_prlock mysql_prlock_t;mysql_prlock_t173,4800
struct st_mysql_condst_mysql_cond179,4908
  native_cond_t m_cond;m_cond182,4959
  struct PSI_cond *m_psi;m_psi188,5141
typedef struct st_mysql_cond mysql_cond_t;mysql_cond_t201,5427
#define mysql_mutex_assert_owner(mysql_mutex_assert_owner230,6511
#define mysql_mutex_assert_owner(mysql_mutex_assert_owner233,6597
#define mysql_mutex_assert_not_owner(mysql_mutex_assert_not_owner243,6879
#define mysql_mutex_assert_not_owner(mysql_mutex_assert_not_owner246,6973
#define mysql_prlock_assert_write_owner(mysql_prlock_assert_write_owner254,7136
#define mysql_prlock_assert_not_write_owner(mysql_prlock_assert_not_write_owner262,7349
#define mysql_mutex_register(mysql_mutex_register269,7520
    #define mysql_mutex_init(mysql_mutex_init283,7912
    #define mysql_mutex_init(mysql_mutex_init286,8019
    #define mysql_mutex_init(mysql_mutex_init291,8133
    #define mysql_mutex_init(mysql_mutex_init294,8237
  #define mysql_mutex_destroy(mysql_mutex_destroy306,8497
  #define mysql_mutex_destroy(mysql_mutex_destroy309,8592
  #define mysql_mutex_lock(mysql_mutex_lock321,8896
  #define mysql_mutex_lock(mysql_mutex_lock324,8985
  #define mysql_mutex_trylock(mysql_mutex_trylock336,9260
  #define mysql_mutex_trylock(mysql_mutex_trylock339,9355
  #define mysql_mutex_unlock(mysql_mutex_unlock349,9593
  #define mysql_mutex_unlock(mysql_mutex_unlock352,9686
#define mysql_rwlock_register(mysql_rwlock_register360,9832
  #define mysql_rwlock_init(mysql_rwlock_init372,10244
  #define mysql_rwlock_init(mysql_rwlock_init374,10317
  #define mysql_prlock_init(mysql_prlock_init385,10643
  #define mysql_prlock_init(mysql_prlock_init387,10716
#define mysql_rwlock_destroy(mysql_rwlock_destroy396,10942
#define mysql_prlock_destroy(mysql_prlock_destroy404,11152
  #define mysql_rwlock_rdlock(mysql_rwlock_rdlock413,11401
  #define mysql_rwlock_rdlock(mysql_rwlock_rdlock416,11498
  #define mysql_prlock_rdlock(mysql_prlock_rdlock427,11750
  #define mysql_prlock_rdlock(mysql_prlock_rdlock430,11847
  #define mysql_rwlock_wrlock(mysql_rwlock_wrlock441,12109
  #define mysql_rwlock_wrlock(mysql_rwlock_wrlock444,12206
  #define mysql_prlock_wrlock(mysql_prlock_wrlock455,12458
  #define mysql_prlock_wrlock(mysql_prlock_wrlock458,12555
  #define mysql_rwlock_tryrdlock(mysql_rwlock_tryrdlock469,12829
  #define mysql_rwlock_tryrdlock(mysql_rwlock_tryrdlock472,12932
  #define mysql_rwlock_trywrlock(mysql_rwlock_trywrlock483,13212
  #define mysql_rwlock_trywrlock(mysql_rwlock_trywrlock486,13315
#define mysql_rwlock_unlock(mysql_rwlock_unlock496,13550
#define mysql_prlock_unlock(mysql_prlock_unlock504,13754
#define mysql_cond_register(mysql_cond_register510,13885
  #define mysql_cond_init(mysql_cond_init523,14274
  #define mysql_cond_init(mysql_cond_init525,14341
#define mysql_cond_destroy(mysql_cond_destroy533,14550
  #define mysql_cond_wait(mysql_cond_wait541,14800
  #define mysql_cond_wait(mysql_cond_wait544,14893
  #define mysql_cond_timedwait(mysql_cond_timedwait555,15186
  #define mysql_cond_timedwait(mysql_cond_timedwait558,15295
#define mysql_cond_signal(mysql_cond_signal567,15525
#define mysql_cond_broadcast(mysql_cond_broadcast575,15736
#define mysql_thread_register(mysql_thread_register581,15871
  #define mysql_thread_create(mysql_thread_create602,16828
  #define mysql_thread_create(mysql_thread_create605,16935
  #define mysql_thread_set_psi_id(mysql_thread_set_psi_id615,17191
  #define mysql_thread_set_psi_id(mysql_thread_set_psi_id617,17268
  #define mysql_thread_set_psi_THD(mysql_thread_set_psi_THD626,17491
  #define mysql_thread_set_psi_THD(mysql_thread_set_psi_THD628,17570
static inline void inline_mysql_mutex_register(inline_mysql_mutex_register631,17632
static inline int inline_mysql_mutex_init(inline_mysql_mutex_init648,18010
static inline int inline_mysql_mutex_destroy(inline_mysql_mutex_destroy671,18512
static inline int inline_mysql_mutex_lock(inline_mysql_mutex_lock692,18941
static inline int inline_mysql_mutex_trylock(inline_mysql_mutex_trylock735,19936
static inline int inline_mysql_mutex_unlock(inline_mysql_mutex_unlock778,20955
static inline void inline_mysql_rwlock_register(inline_mysql_rwlock_register801,21385
static inline int inline_mysql_rwlock_init(inline_mysql_rwlock_init818,21769
static inline int inline_mysql_prlock_init(inline_mysql_prlock_init833,22111
static inline int inline_mysql_rwlock_destroy(inline_mysql_rwlock_destroy848,22425
static inline int inline_mysql_prlock_destroy(inline_mysql_prlock_destroy862,22725
static inline int inline_mysql_rwlock_rdlock(inline_mysql_rwlock_rdlock876,22997
static inline int inline_mysql_prlock_rdlock(inline_mysql_prlock_rdlock912,23831
static inline int inline_mysql_rwlock_wrlock(inline_mysql_rwlock_wrlock948,24633
static inline int inline_mysql_prlock_wrlock(inline_mysql_prlock_wrlock984,25468
static inline int inline_mysql_rwlock_tryrdlock(inline_mysql_rwlock_tryrdlock1020,26271
static inline int inline_mysql_rwlock_trywrlock(inline_mysql_rwlock_trywrlock1055,27086
static inline int inline_mysql_rwlock_unlock(inline_mysql_rwlock_unlock1090,27902
static inline int inline_mysql_prlock_unlock(inline_mysql_prlock_unlock1103,28200
static inline void inline_mysql_cond_register(inline_mysql_cond_register1116,28470
static inline int inline_mysql_cond_init(inline_mysql_cond_init1133,28842
static inline int inline_mysql_cond_destroy(inline_mysql_cond_destroy1147,29137
static inline int inline_mysql_cond_wait(inline_mysql_cond_wait1160,29396
static inline int inline_mysql_cond_timedwait(inline_mysql_cond_timedwait1204,30442
static inline int inline_mysql_cond_signal(inline_mysql_cond_signal1249,31580
static inline int inline_mysql_cond_broadcast(inline_mysql_cond_broadcast1261,31837
static inline void inline_mysql_thread_register(inline_mysql_thread_register1273,32103
static inline int inline_mysql_thread_create(inline_mysql_thread_create1291,32520
static inline void inline_mysql_thread_set_psi_id(my_thread_id id)inline_mysql_thread_set_psi_id1301,32807
static inline void inline_mysql_thread_set_psi_THD(THD *thd)inline_mysql_thread_set_psi_THD1309,33009

mysql/include/mysql/psi/mysql_memory.h,240
#define MYSQL_MEMORY_HMYSQL_MEMORY_H17,753
#define PSI_MEMORY_CALL(PSI_MEMORY_CALL27,919
#define mysql_memory_register(mysql_memory_register40,1153
static inline void inline_mysql_memory_register(inline_mysql_memory_register43,1241

mysql/include/mysql/psi/mysql_mdl.h,665
#define MYSQL_MDL_HMYSQL_MDL_H17,750
#define PSI_METADATA_CALL(PSI_METADATA_CALL27,909
  #define mysql_mdl_create(mysql_mdl_create49,1407
  #define mysql_mdl_create(mysql_mdl_create52,1512
  #define mysql_mdl_set_status(mysql_mdl_set_status56,1608
  #define mysql_mdl_set_status(mysql_mdl_set_status59,1691
  #define mysql_mdl_destroy(mysql_mdl_destroy70,1896
  #define mysql_mdl_destroy(mysql_mdl_destroy73,1987
inline_mysql_mdl_create(void *identity,inline_mysql_mdl_create80,2118
static inline void inline_mysql_mdl_set_status(inline_mysql_mdl_set_status101,2818
static inline void inline_mysql_mdl_destroy(inline_mysql_mdl_destroy109,3024

mysql/include/mysql/service_mysql_string.h,1982
#define MYSQL_SERVICE_MYSQL_STRING_INCLUDEDMYSQL_SERVICE_MYSQL_STRING_INCLUDED19,850
typedef void *mysql_string_iterator_handle;mysql_string_iterator_handle29,987
typedef void *mysql_string_handle;mysql_string_handle30,1031
extern struct mysql_string_service_st {mysql_string_service_st32,1067
  int (*mysql_string_convert_to_char_ptr_type)mysql_string_convert_to_char_ptr_type33,1107
  mysql_string_iterator_handle (*mysql_string_get_iterator_type)mysql_string_get_iterator_type35,1227
  int (*mysql_string_iterator_next_type)(mysql_string_iterator_handle);mysql_string_iterator_next_type37,1347
  int (*mysql_string_iterator_isupper_type)(mysql_string_iterator_handle);mysql_string_iterator_isupper_type38,1419
  int (*mysql_string_iterator_islower_type)(mysql_string_iterator_handle);mysql_string_iterator_islower_type39,1494
  int (*mysql_string_iterator_isdigit_type)(mysql_string_iterator_handle);mysql_string_iterator_isdigit_type40,1569
  mysql_string_handle (*mysql_string_to_lowercase_type)(mysql_string_handle);mysql_string_to_lowercase_type41,1644
  void (*mysql_string_free_type)(mysql_string_handle);mysql_string_free_type42,1722
  void (*mysql_string_iterator_free_type)(mysql_string_iterator_handle);mysql_string_iterator_free_type43,1777
} *mysql_string_service;mysql_string_service44,1850
#define mysql_string_convert_to_char_ptr(mysql_string_convert_to_char_ptr48,1905
#define mysql_string_get_iterator(mysql_string_get_iterator54,2240
#define mysql_string_iterator_next(mysql_string_iterator_next57,2368
#define mysql_string_iterator_isupper(mysql_string_iterator_isupper60,2502
#define mysql_string_iterator_islower(mysql_string_iterator_islower64,2682
#define mysql_string_iterator_isdigit(mysql_string_iterator_isdigit68,2862
#define mysql_string_to_lowercase(mysql_string_to_lowercase72,3042
#define mysql_string_free(mysql_string_free75,3170
#define mysql_string_iterator_free(mysql_string_iterator_free78,3294

mysql/include/mysql/innodb_priv.h,57
#define INNODB_PRIV_INCLUDEDINNODB_PRIV_INCLUDED17,778

mysql/include/mysql/service_security_context.h,1868
#define MYSQL_SERVICE_SECURITY_CONTEXTMYSQL_SERVICE_SECURITY_CONTEXT17,778
#define MYSQL_SECURITY_CONTEXT MYSQL_SECURITY_CONTEXT28,1032
#define MYSQL_SECURITY_CONTEXT MYSQL_SECURITY_CONTEXT30,1087
typedef char my_svc_bool;my_svc_bool32,1131
extern struct security_context_service_st {security_context_service_st38,1198
  my_svc_bool (*thd_get_security_context)(MYSQL_THD, MYSQL_SECURITY_CONTEXT *out_ctx);thd_get_security_context39,1242
  my_svc_bool (*thd_set_security_context)(MYSQL_THD, MYSQL_SECURITY_CONTEXT in_ctx);thd_set_security_context40,1329
  my_svc_bool (*security_context_create)(MYSQL_SECURITY_CONTEXT *out_ctx);security_context_create42,1415
  my_svc_bool (*security_context_destroy)(MYSQL_SECURITY_CONTEXT);security_context_destroy43,1490
  my_svc_bool (*security_context_copy)(MYSQL_SECURITY_CONTEXT in_ctx, MYSQL_SECURITY_CONTEXT *ousecurity_context_copy44,1557
  my_svc_bool (*security_context_lookup)(MYSQL_SECURITY_CONTEXT ctx,security_context_lookup46,1662
  my_svc_bool (*security_context_get_option)(MYSQL_SECURITY_CONTEXT, const char *name, void *inosecurity_context_get_option50,1883
  my_svc_bool (*security_context_set_option)(MYSQL_SECURITY_CONTEXT, const char *name, void *pvasecurity_context_set_option51,1991
} *security_context_service;security_context_service52,2093
#define thd_get_security_context(thd_get_security_context56,2152
#define thd_set_security_context(thd_set_security_context58,2264
#define security_context_create(security_context_create61,2377
#define security_context_destroy(security_context_destroy63,2475
#define security_context_copy(security_context_copy65,2575
#define security_context_lookup(security_context_lookup68,2685
#define security_context_get_option(security_context_get_option71,2820
#define security_context_set_option(security_context_set_option73,2964

mysql/include/mysql/group_replication_priv.h,167
#define	GROUP_REPLICATION_PRIV_INCLUDEGROUP_REPLICATION_PRIV_INCLUDE17,779
#define MYSQL_SERVERMYSQL_SERVER20,840
#define HAVE_REPLICATIONHAVE_REPLICATION24,894

mysql/include/mysql/client_authentication.h,63
#define CLIENT_AUTHENTICATION_HCLIENT_AUTHENTICATION_H16,776

mysql/include/mysql/service_mysql_password_policy.h,641
#define MYSQL_SERVICE_MYSQL_PLUGIN_AUTH_INCLUDEDMYSQL_SERVICE_MYSQL_PLUGIN_AUTH_INCLUDED17,793
extern struct mysql_password_policy_service_st {mysql_password_policy_service_st43,1722
  int (*my_validate_password_policy_func)(const char *, unsigned int);my_validate_password_policy_func44,1771
  int (*my_calculate_password_strength_func)(const char *, unsigned int);my_calculate_password_strength_func45,1842
} *mysql_password_policy_service;mysql_password_policy_service46,1916
#define my_validate_password_policy(my_validate_password_policy50,1980
#define my_calculate_password_strength(my_calculate_password_strength52,2116

mysql/include/mysql/service_srv_session.h,1212
#define MYSQL_SRV_SESSION_SERVICE_INCLUDEDMYSQL_SRV_SESSION_SERVICE_INCLUDED17,794
typedef class Srv_session* MYSQL_SESSION;MYSQL_SESSION29,1114
typedef struct Srv_session* MYSQL_SESSION;MYSQL_SESSION32,1182
typedef void (*srv_session_error_cb)(void *ctx,srv_session_error_cb43,1348
extern struct srv_session_service_stsrv_session_service_st47,1517
  int (*init_session_thread)(const void *plugin);init_session_thread49,1556
  void (*deinit_session_thread)();deinit_session_thread51,1607
  MYSQL_SESSION (*open_session)(srv_session_error_cb error_cb,open_session53,1643
  int (*detach_session)(MYSQL_SESSION session);detach_session56,1758
  int (*close_session)(MYSQL_SESSION session);close_session58,1807
  int (*server_is_available)();server_is_available60,1855
} *srv_session_service;srv_session_service61,1887
#define srv_session_init_thread(srv_session_init_thread65,1941
#define srv_session_deinit_thread(srv_session_deinit_thread68,2043
#define srv_session_open(srv_session_open71,2135
#define srv_session_detach(srv_session_detach74,2227
#define srv_session_close(srv_session_close77,2321
#define srv_session_server_is_available(srv_session_server_is_available80,2413

mysql/include/mysql/plugin_keyring.h.pp,0

mysql/include/mysql/service_thd_alloc.h,1023
#define MYSQL_THD MYSQL_THD36,1417
#define MYSQL_THD MYSQL_THD38,1446
extern struct thd_alloc_service_st {thd_alloc_service_st47,1555
  void *(*thd_alloc_func)(MYSQL_THD, size_t);thd_alloc_func48,1592
  void *(*thd_calloc_func)(MYSQL_THD, size_t);thd_calloc_func49,1638
  char *(*thd_strdup_func)(MYSQL_THD, const char *);thd_strdup_func50,1685
  char *(*thd_strmake_func)(MYSQL_THD, const char *, size_t);thd_strmake_func51,1738
  void *(*thd_memdup_func)(MYSQL_THD, const void*, size_t);thd_memdup_func52,1800
  MYSQL_LEX_STRING *(*thd_make_lex_string_func)(MYSQL_THD, MYSQL_LEX_STRING *,thd_make_lex_string_func53,1860
} *thd_alloc_service;thd_alloc_service55,2007
#define thd_alloc(thd_alloc59,2059
#define thd_calloc(thd_calloc61,2139
#define thd_strdup(thd_strdup63,2221
#define thd_strmake(thd_strmake65,2301
#define thd_memdup(thd_memdup68,2400
#define thd_make_lex_string(thd_make_lex_string71,2497
#define MYSQL_SERVICE_THD_ALLOC_INCLUDEDMYSQL_SERVICE_THD_ALLOC_INCLUDED130,4282

mysql/include/mysql/service_thd_engine_lock.h,116
#define MYSQL_SERVICE_THD_EGINE_LOCK_INCLUDEDMYSQL_SERVICE_THD_EGINE_LOCK_INCLUDED17,785
#define THD THD34,1328

mysql/include/mysql/service_locking.h,894
#define SERVICE_LOCKING_INCLUDEDSERVICE_LOCKING_INCLUDED19,764
#define MYSQL_THD MYSQL_THD35,1348
#define MYSQL_THD MYSQL_THD37,1377
enum enum_locking_service_lock_typeenum_locking_service_lock_type49,1597
{ LOCKING_SERVICE_READ, LOCKING_SERVICE_WRITE };LOCKING_SERVICE_READ50,1633
{ LOCKING_SERVICE_READ, LOCKING_SERVICE_WRITE };LOCKING_SERVICE_WRITE50,1633
extern struct mysql_locking_service_st {mysql_locking_service_st52,1683
  int (*mysql_acquire_locks)(MYSQL_THD opaque_thd, const char* lock_namespace,mysql_acquire_locks69,2464
  int (*mysql_release_locks)(MYSQL_THD opaque_thd, const char* lock_namespace);mysql_release_locks84,3128
} *mysql_locking_service;mysql_locking_service85,3208
#define mysql_acquire_locking_service_locks(mysql_acquire_locking_service_locks89,3264
#define mysql_release_locking_service_locks(mysql_release_locking_service_locks93,3557

mysql/include/plugin_validate_password.h,554
#define MYSQL_PLUGIN_VALIDATE_PASSWORD_INCLUDEDMYSQL_PLUGIN_VALIDATE_PASSWORD_INCLUDED17,793
#define MYSQL_VALIDATE_PASSWORD_INTERFACE_VERSION MYSQL_VALIDATE_PASSWORD_INTERFACE_VERSION22,942
typedef void* mysql_string_handle;mysql_string_handle29,1093
struct st_mysql_validate_passwordst_mysql_validate_password31,1129
  int interface_version;interface_version33,1165
  int (*validate_password)(mysql_string_handle password);validate_password39,1353
  int (*get_password_strength)(mysql_string_handle password);get_password_strength44,1511

mysql/include/my_dir.h,1216
#define MY_DIR_HMY_DIR_H17,762
#define S_IROTH S_IROTH30,920
#define S_IFIFO S_IFIFO31,945
#define MY_S_IFMT	MY_S_IFMT34,978
#define MY_S_IFDIR	MY_S_IFDIR35,1022
#define MY_S_IFCHR	MY_S_IFCHR36,1065
#define MY_S_IFBLK	MY_S_IFBLK37,1116
#define MY_S_IFREG	MY_S_IFREG38,1163
#define MY_S_IFIFO	MY_S_IFIFO39,1204
#define MY_S_ISUID	MY_S_ISUID40,1242
#define MY_S_ISGID	MY_S_ISGID41,1300
#define MY_S_ISVTX	MY_S_ISVTX42,1359
#define MY_S_IREAD	MY_S_IREAD43,1425
#define MY_S_IWRITE	MY_S_IWRITE44,1481
#define MY_S_IEXEC	MY_S_IEXEC45,1540
#define MY_S_ISDIR(MY_S_ISDIR47,1607
#define MY_S_ISCHR(MY_S_ISCHR48,1663
#define MY_S_ISBLK(MY_S_ISBLK49,1719
#define MY_S_ISREG(MY_S_ISREG50,1775
#define MY_S_ISFIFO(MY_S_ISFIFO51,1831
#define MY_DONT_SORT	MY_DONT_SORT53,1889
#define MY_WANT_STAT	MY_WANT_STAT54,1945
#define MY_STAT MY_STAT59,2049
typedef struct fileinfofileinfo65,2239
  char			*name;name67,2265
  MY_STAT		*mystat;mystat68,2281
} FILEINFO;FILEINFO69,2301
typedef struct st_my_dir	/* Struct returned from my_dir */st_my_dir71,2314
  struct fileinfo	*dir_entry;dir_entry79,2656
  uint			number_off_files;number_off_files80,2686
} MY_DIR;MY_DIR81,2713

mysql/include/thr_mutex.h,1883
#define THR_MUTEX_INCLUDEDTHR_MUTEX_INCLUDED2,27
typedef CRITICAL_SECTION native_mutex_t;native_mutex_t41,1342
typedef int native_mutexattr_t;native_mutexattr_t42,1383
#define MY_MUTEX_INIT_SLOW MY_MUTEX_INIT_SLOW49,1561
#define MY_MUTEX_INIT_FAST MY_MUTEX_INIT_FAST54,1729
#define MY_MUTEX_INIT_FAST MY_MUTEX_INIT_FAST56,1781
#define MY_MUTEX_INIT_ERRCHK MY_MUTEX_INIT_ERRCHK62,1964
#define MY_MUTEX_INIT_ERRCHK MY_MUTEX_INIT_ERRCHK64,2024
static inline int native_mutex_init(native_mutex_t *mutex,native_mutex_init67,2068
static inline int native_mutex_lock(native_mutex_t *mutex)native_mutex_lock78,2317
static inline int native_mutex_trylock(native_mutex_t *mutex)native_mutex_trylock88,2487
static inline int native_mutex_unlock(native_mutex_t *mutex)native_mutex_unlock106,2830
static inline int native_mutex_destroy(native_mutex_t *mutex)native_mutex_destroy116,3004
typedef struct st_safe_mutex_tst_safe_mutex_t129,3261
  native_mutex_t global, mutex;global131,3294
  native_mutex_t global, mutex;mutex131,3294
  const char *file;file132,3326
  uint line, count;line133,3346
  uint line, count;count133,3346
  my_thread_t thread;thread134,3366
} my_mutex_t;my_mutex_t135,3388
static inline void safe_mutex_assert_owner(const my_mutex_t *mp)safe_mutex_assert_owner144,3774
static inline void safe_mutex_assert_not_owner(const my_mutex_t *mp)safe_mutex_assert_not_owner150,3937
typedef native_mutex_t my_mutex_t;my_mutex_t157,4108
static inline int my_mutex_init(my_mutex_t *mp, const native_mutexattr_t *attrmy_mutex_init160,4151
static inline int my_mutex_lock(my_mutex_t *mpmy_mutex_lock173,4473
static inline int my_mutex_trylock(my_mutex_t *mpmy_mutex_trylock186,4758
static inline int my_mutex_unlock(my_mutex_t *mpmy_mutex_unlock199,5054
static inline int my_mutex_destroy(my_mutex_t *mpmy_mutex_destroy212,5342

mysql/include/plugin_audit.h,13216
#define _my_audit_h_my_audit_h18,767
#define MYSQL_AUDIT_INTERFACE_VERSION MYSQL_AUDIT_INTERFACE_VERSION28,949
{__anonf20334b8010336,1065
  MYSQL_AUDIT_GENERAL_CLASS          = 0,MYSQL_AUDIT_GENERAL_CLASS37,1067
  MYSQL_AUDIT_CONNECTION_CLASS       = 1,MYSQL_AUDIT_CONNECTION_CLASS38,1109
  MYSQL_AUDIT_PARSE_CLASS            = 2,MYSQL_AUDIT_PARSE_CLASS39,1151
  MYSQL_AUDIT_AUTHORIZATION_CLASS    = 3,MYSQL_AUDIT_AUTHORIZATION_CLASS40,1193
  MYSQL_AUDIT_TABLE_ACCESS_CLASS     = 4,MYSQL_AUDIT_TABLE_ACCESS_CLASS41,1235
  MYSQL_AUDIT_GLOBAL_VARIABLE_CLASS  = 5,MYSQL_AUDIT_GLOBAL_VARIABLE_CLASS42,1277
  MYSQL_AUDIT_SERVER_STARTUP_CLASS   = 6,MYSQL_AUDIT_SERVER_STARTUP_CLASS43,1319
  MYSQL_AUDIT_SERVER_SHUTDOWN_CLASS  = 7,MYSQL_AUDIT_SERVER_SHUTDOWN_CLASS44,1361
  MYSQL_AUDIT_COMMAND_CLASS          = 8,MYSQL_AUDIT_COMMAND_CLASS45,1403
  MYSQL_AUDIT_QUERY_CLASS            = 9,MYSQL_AUDIT_QUERY_CLASS46,1445
  MYSQL_AUDIT_STORED_PROGRAM_CLASS   = 10,MYSQL_AUDIT_STORED_PROGRAM_CLASS47,1487
  MYSQL_AUDIT_CLASS_MASK_SIZEMYSQL_AUDIT_CLASS_MASK_SIZE49,1574
} mysql_event_class_t;mysql_event_class_t50,1604
struct st_mysql_auditst_mysql_audit57,1727
  int interface_version;interface_version62,1785
  void (*release_thd)(MYSQL_THD);release_thd70,2062
  int (*event_notify)(MYSQL_THD, mysql_event_class_t, const void *);event_notify78,2327
  unsigned long class_mask[MYSQL_AUDIT_CLASS_MASK_SIZE];class_mask84,2504
typedef enum enum_sql_command enum_sql_command_t;enum_sql_command_t92,2634
{__anonf20334b80203100,2801
  MYSQL_AUDIT_GENERAL_LOG    = 1 << 0,MYSQL_AUDIT_GENERAL_LOG102,2861
  MYSQL_AUDIT_GENERAL_ERROR  = 1 << 1,MYSQL_AUDIT_GENERAL_ERROR104,2956
  MYSQL_AUDIT_GENERAL_RESULT = 1 << 2,MYSQL_AUDIT_GENERAL_RESULT106,3055
  MYSQL_AUDIT_GENERAL_STATUS = 1 << 3MYSQL_AUDIT_GENERAL_STATUS108,3151
} mysql_event_general_subclass_t;mysql_event_general_subclass_t109,3189
#define MYSQL_AUDIT_GENERAL_ALL MYSQL_AUDIT_GENERAL_ALL111,3224
struct mysql_event_generalmysql_event_general120,3570
  mysql_event_general_subclass_t event_subclass;event_subclass122,3599
  int                            general_error_code;general_error_code123,3648
  unsigned long                  general_thread_id;general_thread_id124,3701
  MYSQL_LEX_CSTRING              general_user;general_user125,3753
  MYSQL_LEX_CSTRING              general_command;general_command126,3800
  MYSQL_LEX_CSTRING              general_query;general_query127,3850
  struct charset_info_st         *general_charset;general_charset128,3898
  unsigned long long             general_time;general_time129,3949
  unsigned long long             general_rows;general_rows130,3996
  MYSQL_LEX_CSTRING              general_host;general_host131,4043
  MYSQL_LEX_CSTRING              general_sql_command;general_sql_command132,4090
  MYSQL_LEX_CSTRING              general_external_user;general_external_user133,4144
  MYSQL_LEX_CSTRING              general_ip;general_ip134,4200
{__anonf20334b80303143,4367
  MYSQL_AUDIT_CONNECTION_CONNECT          = 1 << 0,MYSQL_AUDIT_CONNECTION_CONNECT145,4426
  MYSQL_AUDIT_CONNECTION_DISCONNECT       = 1 << 1,MYSQL_AUDIT_CONNECTION_DISCONNECT147,4526
  MYSQL_AUDIT_CONNECTION_CHANGE_USER      = 1 << 2,MYSQL_AUDIT_CONNECTION_CHANGE_USER149,4634
  MYSQL_AUDIT_CONNECTION_PRE_AUTHENTICATE = 1 << 3MYSQL_AUDIT_CONNECTION_PRE_AUTHENTICATE151,4725
} mysql_event_connection_subclass_t;mysql_event_connection_subclass_t152,4776
#define MYSQL_AUDIT_CONNECTION_ALL MYSQL_AUDIT_CONNECTION_ALL154,4814
struct mysql_event_connectionmysql_event_connection163,5214
  mysql_event_connection_subclass_t event_subclass;event_subclass166,5271
  int                               status;status168,5366
  unsigned long                     connection_id;connection_id170,5434
  MYSQL_LEX_CSTRING                 user;user172,5524
  MYSQL_LEX_CSTRING                 priv_user;priv_user174,5591
  MYSQL_LEX_CSTRING                 external_user;external_user176,5667
  MYSQL_LEX_CSTRING                 proxy_user;proxy_user178,5764
  MYSQL_LEX_CSTRING                 host;host180,5838
  MYSQL_LEX_CSTRING                 ip;ip182,5911
  MYSQL_LEX_CSTRING                 database;database184,6004
  int                               connection_type;connection_type193,6203
{__anonf20334b80403202,6364
  MYSQL_AUDIT_PARSE_PREPARSE  = 1 << 0,MYSQL_AUDIT_PARSE_PREPARSE204,6408
  MYSQL_AUDIT_PARSE_POSTPARSE = 1 << 1MYSQL_AUDIT_PARSE_POSTPARSE206,6489
} mysql_event_parse_subclass_t;mysql_event_parse_subclass_t207,6528
#define MYSQL_AUDIT_PARSE_ALL MYSQL_AUDIT_PARSE_ALL209,6561
{__anonf20334b80503213,6697
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_NONE                  = 0,MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_NONE214,6699
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_QUERY_REWRITTEN       = 1 << 0,MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_QUERY_REWRITTEN216,6843
  MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_IS_PREPARED_STATEMENT = 1 << 1MYSQL_AUDIT_PARSE_REWRITE_PLUGIN_IS_PREPARED_STATEMENT218,6998
} mysql_event_parse_rewrite_plugin_flag;mysql_event_parse_rewrite_plugin_flag219,7064
struct mysql_event_parsemysql_event_parse222,7151
  mysql_event_parse_subclass_t           event_subclass;event_subclass225,7225
  mysql_event_parse_rewrite_plugin_flag *flags;flags228,7321
  MYSQL_LEX_CSTRING                     query;query231,7410
  MYSQL_LEX_CSTRING                     *rewritten_query;rewritten_query234,7543
{__anonf20334b80603243,7729
  MYSQL_AUDIT_AUTHORIZATION_USER      = 1 << 0,MYSQL_AUDIT_AUTHORIZATION_USER244,7731
  MYSQL_AUDIT_AUTHORIZATION_DB        = 1 << 1,MYSQL_AUDIT_AUTHORIZATION_DB246,7831
  MYSQL_AUDIT_AUTHORIZATION_TABLE     = 1 << 2,MYSQL_AUDIT_AUTHORIZATION_TABLE248,7928
  MYSQL_AUDIT_AUTHORIZATION_COLUMN    = 1 << 3,MYSQL_AUDIT_AUTHORIZATION_COLUMN250,8026
  MYSQL_AUDIT_AUTHORIZATION_PROCEDURE = 1 << 4,MYSQL_AUDIT_AUTHORIZATION_PROCEDURE252,8127
  MYSQL_AUDIT_AUTHORIZATION_PROXY     = 1 << 5MYSQL_AUDIT_AUTHORIZATION_PROXY254,8224
} mysql_event_authorization_subclass_t;mysql_event_authorization_subclass_t255,8271
#define MYSQL_AUDIT_AUTHORIZATION_ALL MYSQL_AUDIT_AUTHORIZATION_ALL257,8312
struct mysql_event_authorizationmysql_event_authorization268,8866
  mysql_event_authorization_subclass_t event_subclass;event_subclass271,8926
  int                                  status;status273,9004
  unsigned int                         connection_id;connection_id275,9075
  enum_sql_command_t                   sql_command_id;sql_command_id277,9154
  MYSQL_LEX_CSTRING                    query;query279,9234
  const struct charset_info_st         *query_charset;query_charset281,9308
  MYSQL_LEX_CSTRING                    database;database283,9387
  MYSQL_LEX_CSTRING                    table;table285,9457
  MYSQL_LEX_CSTRING                    object;object287,9550
  unsigned long                        requested_privilege;requested_privilege289,9642
  unsigned long                        granted_privilege;granted_privilege291,9755
{__anonf20334b80703300,9942
  MYSQL_AUDIT_TABLE_ACCESS_READ   = 1 << 0,MYSQL_AUDIT_TABLE_ACCESS_READ302,9986
  MYSQL_AUDIT_TABLE_ACCESS_INSERT = 1 << 1,MYSQL_AUDIT_TABLE_ACCESS_INSERT304,10076
  MYSQL_AUDIT_TABLE_ACCESS_UPDATE = 1 << 2,MYSQL_AUDIT_TABLE_ACCESS_UPDATE306,10165
  MYSQL_AUDIT_TABLE_ACCESS_DELETE = 1 << 3MYSQL_AUDIT_TABLE_ACCESS_DELETE308,10254
} mysql_event_table_access_subclass_t;mysql_event_table_access_subclass_t309,10297
#define MYSQL_AUDIT_TABLE_ACCESS_ALL MYSQL_AUDIT_TABLE_ACCESS_ALL311,10337
struct mysql_event_table_accessmysql_event_table_access321,10735
  mysql_event_table_access_subclass_t event_subclass;event_subclass324,10794
  unsigned long                           connection_id;connection_id326,10872
  enum_sql_command_t                      sql_command_id;sql_command_id328,10954
  MYSQL_LEX_CSTRING                       query;query330,11032
  const struct charset_info_st            *query_charset;query_charset332,11109
  MYSQL_LEX_CSTRING                       table_database;table_database334,11191
  MYSQL_LEX_CSTRING                       table_name;table_name336,11270
{__anonf20334b80803345,11456
  MYSQL_AUDIT_GLOBAL_VARIABLE_GET = 1 << 0,MYSQL_AUDIT_GLOBAL_VARIABLE_GET347,11509
  MYSQL_AUDIT_GLOBAL_VARIABLE_SET = 1 << 1MYSQL_AUDIT_GLOBAL_VARIABLE_SET349,11598
} mysql_event_global_variable_subclass_t;mysql_event_global_variable_subclass_t350,11641
#define MYSQL_AUDIT_GLOBAL_VARIABLE_ALL MYSQL_AUDIT_GLOBAL_VARIABLE_ALL352,11684
struct mysql_event_global_variablemysql_event_global_variable356,11901
  mysql_event_global_variable_subclass_t event_subclass;event_subclass359,11963
  unsigned long                          connection_id;connection_id361,12044
  enum_sql_command_t                     sql_command_id;sql_command_id363,12125
  MYSQL_LEX_CSTRING                      variable_name;variable_name365,12206
  MYSQL_LEX_CSTRING                      variable_value;variable_value367,12287
{__anonf20334b80903376,12474
  MYSQL_AUDIT_SERVER_STARTUP_STARTUP = 1 << 0MYSQL_AUDIT_SERVER_STARTUP_STARTUP378,12549
} mysql_event_server_startup_subclass_t;mysql_event_server_startup_subclass_t379,12595
#define MYSQL_AUDIT_SERVER_STARTUP_ALL MYSQL_AUDIT_SERVER_STARTUP_ALL381,12637
struct mysql_event_server_startupmysql_event_server_startup388,12821
  mysql_event_server_startup_subclass_t event_subclass;event_subclass391,12882
  const char                            **argv;argv393,12971
  unsigned int                          argc;argc395,13058
{__anonf20334b80a03404,13236
  MYSQL_AUDIT_SERVER_SHUTDOWN_SHUTDOWN = 1 << 0MYSQL_AUDIT_SERVER_SHUTDOWN_SHUTDOWN406,13283
} mysql_event_server_shutdown_subclass_t;mysql_event_server_shutdown_subclass_t407,13331
#define MYSQL_AUDIT_SERVER_SHUTDOWN_ALL MYSQL_AUDIT_SERVER_SHUTDOWN_ALL409,13374
{__anonf20334b80b03417,13540
  MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_SHUTDOWN,MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_SHUTDOWN419,13577
  MYSQL_AUDIT_SERVER_SHUTDOWN_REASON_ABORTMYSQL_AUDIT_SERVER_SHUTDOWN_REASON_ABORT421,13652
} mysql_server_shutdown_reason_t;mysql_server_shutdown_reason_t422,13695
struct mysql_event_server_shutdownmysql_event_server_shutdown429,13839
  mysql_event_server_shutdown_subclass_t event_subclass;event_subclass432,13901
  int                                    exit_code;exit_code434,14013
  mysql_server_shutdown_reason_t         reason;reason436,14091
{__anonf20334b80c03445,14256
  MYSQL_AUDIT_COMMAND_START = 1 << 0,MYSQL_AUDIT_COMMAND_START447,14288
  MYSQL_AUDIT_COMMAND_END   = 1 << 1MYSQL_AUDIT_COMMAND_END449,14354
} mysql_event_command_subclass_t;mysql_event_command_subclass_t450,14391
#define MYSQL_AUDIT_COMMAND_ALL MYSQL_AUDIT_COMMAND_ALL452,14426
typedef enum enum_server_command enum_server_command_t;enum_server_command_t459,14622
struct mysql_event_commandmysql_event_command467,14824
  mysql_event_command_subclass_t event_subclass;event_subclass470,14886
  int                            status;status472,14966
  unsigned long                  connection_id;connection_id474,15031
  enum_server_command_t          command_id;command_id476,15100
{__anonf20334b80d03485,15257
  MYSQL_AUDIT_QUERY_START             = 1 << 0,MYSQL_AUDIT_QUERY_START487,15287
  MYSQL_AUDIT_QUERY_NESTED_START      = 1 << 1,MYSQL_AUDIT_QUERY_NESTED_START489,15370
  MYSQL_AUDIT_QUERY_STATUS_END        = 1 << 2,MYSQL_AUDIT_QUERY_STATUS_END491,15451
  MYSQL_AUDIT_QUERY_NESTED_STATUS_END = 1 << 3MYSQL_AUDIT_QUERY_NESTED_STATUS_END493,15539
} mysql_event_query_subclass_t;mysql_event_query_subclass_t494,15586
#define MYSQL_AUDIT_QUERY_ALL MYSQL_AUDIT_QUERY_ALL496,15619
struct mysql_event_querymysql_event_query505,15965
  mysql_event_query_subclass_t event_subclass;event_subclass508,16017
  int                          status;status510,16087
  unsigned long                connection_id;connection_id512,16150
  enum_sql_command_t           sql_command_id;sql_command_id514,16221
  MYSQL_LEX_CSTRING            query;query516,16288
  const struct charset_info_st *query_charset;query_charset518,16354
{__anonf20334b80e03527,16531
  MYSQL_AUDIT_STORED_PROGRAM_EXECUTE = 1 << 0MYSQL_AUDIT_STORED_PROGRAM_EXECUTE529,16574
} mysql_event_stored_program_subclass_t;mysql_event_stored_program_subclass_t530,16620
#define MYSQL_AUDIT_STORED_PROGRAM_ALL MYSQL_AUDIT_STORED_PROGRAM_ALL532,16662
struct mysql_event_stored_programmysql_event_stored_program539,16826
  mysql_event_stored_program_subclass_t event_subclass;event_subclass542,16887
  unsigned long                         connection_id;connection_id544,16967
  enum_sql_command_t                    sql_command_id;sql_command_id546,17047
  MYSQL_LEX_CSTRING                     query;query548,17128
  const struct charset_info_st          *query_charset;query_charset550,17203
  MYSQL_LEX_CSTRING                     database;database552,17310
  MYSQL_LEX_CSTRING                     name;name554,17397
  void                                  *parameters;parameters556,17479

mysql/include/mysql.h,20632
#define _mysql_h_mysql_h27,1133
typedef char my_bool;my_bool37,1316
#define STDCALLSTDCALL39,1359
#define STDCALL STDCALL41,1381
#define my_socket my_socket50,1532
typedef int my_socket;my_socket52,1563
#define CLIENT_NET_READ_TIMEOUT	CLIENT_NET_READ_TIMEOUT69,1955
#define CLIENT_NET_WRITE_TIMEOUT	CLIENT_NET_WRITE_TIMEOUT70,2022
#define IS_PRI_KEY(IS_PRI_KEY72,2091
#define IS_NOT_NULL(IS_NOT_NULL73,2134
#define IS_BLOB(IS_BLOB74,2179
#define IS_NUM(IS_NUM79,2340
#define IS_LONGDATA(IS_LONGDATA80,2475
typedef struct st_mysql_field {st_mysql_field83,2558
  char *name;                 /* Name of column */name84,2590
  char *org_name;             /* Original column name, if an alias */org_name85,2641
  char *table;                /* Table of column if column was a field */table86,2711
  char *org_table;            /* Org table name, if table was an alias */org_table87,2785
  char *db;                   /* Database for table */db88,2859
  char *catalog;	      /* Catalog for table */catalog89,2914
  char *def;                  /* Default value (set by mysql_list_fields) */def90,2961
  unsigned long length;       /* Width of column (create length) */length91,3038
  unsigned long max_length;   /* Max width for selected set */max_length92,3106
  unsigned int name_length;name_length93,3169
  unsigned int org_name_length;org_name_length94,3197
  unsigned int table_length;table_length95,3229
  unsigned int org_table_length;org_table_length96,3258
  unsigned int db_length;db_length97,3291
  unsigned int catalog_length;catalog_length98,3317
  unsigned int def_length;def_length99,3348
  unsigned int flags;         /* Div flags */flags100,3375
  unsigned int decimals;      /* Number of decimals in field */decimals101,3421
  unsigned int charsetnr;     /* Character set */charsetnr102,3485
  enum enum_field_types type; /* Type of field. See mysql_com.h for types */type103,3535
  void *extension;extension104,3612
} MYSQL_FIELD;MYSQL_FIELD105,3631
typedef char **MYSQL_ROW;		/* return data as array of strings */MYSQL_ROW107,3647
typedef unsigned int MYSQL_FIELD_OFFSET; /* offset to current field */MYSQL_FIELD_OFFSET108,3712
typedef unsigned __int64 my_ulonglong;my_ulonglong112,3832
typedef unsigned long long my_ulonglong;my_ulonglong114,3877
#define MYSQL_COUNT_ERROR MYSQL_COUNT_ERROR120,3955
#define ER_WARN_DATA_TRUNCATED ER_WARN_DATA_TRUNCATED123,4065
typedef struct st_mysql_rows {st_mysql_rows125,4117
  struct st_mysql_rows *next;		/* list of rows */next126,4148
  MYSQL_ROW data;data127,4198
  unsigned long length;length128,4216
} MYSQL_ROWS;MYSQL_ROWS129,4240
typedef MYSQL_ROWS *MYSQL_ROW_OFFSET;	/* offset to current row */MYSQL_ROW_OFFSET131,4255
typedef struct embedded_query_result EMBEDDED_QUERY_RESULT;EMBEDDED_QUERY_RESULT135,4345
typedef struct st_mysql_data {st_mysql_data136,4405
  MYSQL_ROWS *data;data137,4436
  struct embedded_query_result *embedded_info;embedded_info138,4456
  MEM_ROOT alloc;alloc139,4503
  my_ulonglong rows;rows140,4521
  unsigned int fields;fields141,4542
  void *extension;extension143,4605
} MYSQL_DATA;MYSQL_DATA144,4624
enum mysql_option mysql_option146,4639
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS, MYSQL_OPT_NAMED_PIPE,MYSQL_OPT_CONNECT_TIMEOUT148,4660
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS, MYSQL_OPT_NAMED_PIPE,MYSQL_OPT_COMPRESS148,4660
  MYSQL_OPT_CONNECT_TIMEOUT, MYSQL_OPT_COMPRESS, MYSQL_OPT_NAMED_PIPE,MYSQL_OPT_NAMED_PIPE148,4660
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,MYSQL_INIT_COMMAND149,4731
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,MYSQL_READ_DEFAULT_FILE149,4731
  MYSQL_INIT_COMMAND, MYSQL_READ_DEFAULT_FILE, MYSQL_READ_DEFAULT_GROUP,MYSQL_READ_DEFAULT_GROUP149,4731
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME, MYSQL_OPT_LOCAL_INFILE,MYSQL_SET_CHARSET_DIR150,4804
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME, MYSQL_OPT_LOCAL_INFILE,MYSQL_SET_CHARSET_NAME150,4804
  MYSQL_SET_CHARSET_DIR, MYSQL_SET_CHARSET_NAME, MYSQL_OPT_LOCAL_INFILE,MYSQL_OPT_LOCAL_INFILE150,4804
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,MYSQL_OPT_PROTOCOL151,4877
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,MYSQL_SHARED_MEMORY_BASE_NAME151,4877
  MYSQL_OPT_PROTOCOL, MYSQL_SHARED_MEMORY_BASE_NAME, MYSQL_OPT_READ_TIMEOUT,MYSQL_OPT_READ_TIMEOUT151,4877
  MYSQL_OPT_WRITE_TIMEOUT, MYSQL_OPT_USE_RESULT,MYSQL_OPT_WRITE_TIMEOUT152,4954
  MYSQL_OPT_WRITE_TIMEOUT, MYSQL_OPT_USE_RESULT,MYSQL_OPT_USE_RESULT152,4954
  MYSQL_OPT_USE_REMOTE_CONNECTION, MYSQL_OPT_USE_EMBEDDED_CONNECTION,MYSQL_OPT_USE_REMOTE_CONNECTION153,5003
  MYSQL_OPT_USE_REMOTE_CONNECTION, MYSQL_OPT_USE_EMBEDDED_CONNECTION,MYSQL_OPT_USE_EMBEDDED_CONNECTION153,5003
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,MYSQL_OPT_GUESS_CONNECTION154,5073
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,MYSQL_SET_CLIENT_IP154,5073
  MYSQL_OPT_GUESS_CONNECTION, MYSQL_SET_CLIENT_IP, MYSQL_SECURE_AUTH,MYSQL_SECURE_AUTH154,5073
  MYSQL_REPORT_DATA_TRUNCATION, MYSQL_OPT_RECONNECT,MYSQL_REPORT_DATA_TRUNCATION155,5143
  MYSQL_REPORT_DATA_TRUNCATION, MYSQL_OPT_RECONNECT,MYSQL_OPT_RECONNECT155,5143
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR, MYSQL_DEFAULT_AUTH,MYSQL_OPT_SSL_VERIFY_SERVER_CERT156,5196
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR, MYSQL_DEFAULT_AUTH,MYSQL_PLUGIN_DIR156,5196
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT, MYSQL_PLUGIN_DIR, MYSQL_DEFAULT_AUTH,MYSQL_DEFAULT_AUTH156,5196
  MYSQL_OPT_BIND,MYSQL_OPT_BIND157,5270
  MYSQL_OPT_SSL_KEY, MYSQL_OPT_SSL_CERT, MYSQL_OPT_SSL_KEY158,5288
  MYSQL_OPT_SSL_KEY, MYSQL_OPT_SSL_CERT, MYSQL_OPT_SSL_CERT158,5288
  MYSQL_OPT_SSL_CA, MYSQL_OPT_SSL_CAPATH, MYSQL_OPT_SSL_CIPHER,MYSQL_OPT_SSL_CA159,5330
  MYSQL_OPT_SSL_CA, MYSQL_OPT_SSL_CAPATH, MYSQL_OPT_SSL_CIPHER,MYSQL_OPT_SSL_CAPATH159,5330
  MYSQL_OPT_SSL_CA, MYSQL_OPT_SSL_CAPATH, MYSQL_OPT_SSL_CIPHER,MYSQL_OPT_SSL_CIPHER159,5330
  MYSQL_OPT_SSL_CRL, MYSQL_OPT_SSL_CRLPATH,MYSQL_OPT_SSL_CRL160,5394
  MYSQL_OPT_SSL_CRL, MYSQL_OPT_SSL_CRLPATH,MYSQL_OPT_SSL_CRLPATH160,5394
  MYSQL_OPT_CONNECT_ATTR_RESET, MYSQL_OPT_CONNECT_ATTR_ADD,MYSQL_OPT_CONNECT_ATTR_RESET161,5438
  MYSQL_OPT_CONNECT_ATTR_RESET, MYSQL_OPT_CONNECT_ATTR_ADD,MYSQL_OPT_CONNECT_ATTR_ADD161,5438
  MYSQL_OPT_CONNECT_ATTR_DELETE,MYSQL_OPT_CONNECT_ATTR_DELETE162,5498
  MYSQL_SERVER_PUBLIC_KEY,MYSQL_SERVER_PUBLIC_KEY163,5531
  MYSQL_ENABLE_CLEARTEXT_PLUGIN,MYSQL_ENABLE_CLEARTEXT_PLUGIN164,5558
  MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS,MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS165,5591
  MYSQL_OPT_SSL_ENFORCE,MYSQL_OPT_SSL_ENFORCE166,5633
  MYSQL_OPT_MAX_ALLOWED_PACKET, MYSQL_OPT_NET_BUFFER_LENGTH,MYSQL_OPT_MAX_ALLOWED_PACKET167,5658
  MYSQL_OPT_MAX_ALLOWED_PACKET, MYSQL_OPT_NET_BUFFER_LENGTH,MYSQL_OPT_NET_BUFFER_LENGTH167,5658
  MYSQL_OPT_TLS_VERSION,MYSQL_OPT_TLS_VERSION168,5719
  MYSQL_OPT_SSL_MODEMYSQL_OPT_SSL_MODE169,5744
struct st_mysql_options {st_mysql_options178,5895
  unsigned int connect_timeout, read_timeout, write_timeout;connect_timeout179,5921
  unsigned int connect_timeout, read_timeout, write_timeout;read_timeout179,5921
  unsigned int connect_timeout, read_timeout, write_timeout;write_timeout179,5921
  unsigned int port, protocol;port180,5982
  unsigned int port, protocol;protocol180,5982
  unsigned long client_flag;client_flag181,6013
  char *host,*user,*password,*unix_socket,*db;host182,6042
  char *host,*user,*password,*unix_socket,*db;user182,6042
  char *host,*user,*password,*unix_socket,*db;password182,6042
  char *host,*user,*password,*unix_socket,*db;unix_socket182,6042
  char *host,*user,*password,*unix_socket,*db;db182,6042
  struct st_dynamic_array *init_commands;init_commands183,6089
  char *my_cnf_file,*my_cnf_group, *charset_dir, *charset_name;my_cnf_file184,6131
  char *my_cnf_file,*my_cnf_group, *charset_dir, *charset_name;my_cnf_group184,6131
  char *my_cnf_file,*my_cnf_group, *charset_dir, *charset_name;charset_dir184,6131
  char *my_cnf_file,*my_cnf_group, *charset_dir, *charset_name;charset_name184,6131
  char *ssl_key;				/* PEM key file */ssl_key185,6195
  char *ssl_cert;				/* PEM cert file */ssl_cert186,6234
  char *ssl_ca;					/* PEM CA file */ssl_ca187,6275
  char *ssl_capath;				/* PEM directory of CA-s? */ssl_capath188,6313
  char *ssl_cipher;				/* cipher to use */ssl_cipher189,6365
  char *shared_memory_base_name;shared_memory_base_name190,6408
  unsigned long max_allowed_packet;max_allowed_packet191,6441
  my_bool use_ssl;                              /* Deprecated ! Former use_ssl */use_ssl192,6477
  my_bool compress,named_pipe;compress193,6559
  my_bool compress,named_pipe;named_pipe193,6559
  my_bool unused1;unused1194,6590
  my_bool unused2;unused2195,6609
  my_bool unused3;unused3196,6628
  my_bool unused4;unused4197,6647
  enum mysql_option methods_to_use;methods_to_use198,6666
  union {__anona84273a9010a199,6702
    char *client_ip;client_ip205,6873
    char *bind_address;bind_address211,7010
  } ci;ci212,7034
  my_bool unused5;unused5213,7042
  my_bool report_data_truncation;report_data_truncation215,7115
  int (*local_infile_init)(void **, const char *, void *);local_infile_init218,7201
  int (*local_infile_read)(void *, char *, unsigned int);local_infile_read219,7260
  void (*local_infile_end)(void *);local_infile_end220,7318
  int (*local_infile_error)(void *, char *, unsigned int);local_infile_error221,7354
  void *local_infile_userdata;local_infile_userdata222,7413
  struct st_mysql_options_extention *extension;extension223,7444
enum mysql_status mysql_status226,7496
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,MYSQL_STATUS_READY228,7517
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,MYSQL_STATUS_GET_RESULT228,7517
  MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,MYSQL_STATUS_USE_RESULT228,7517
  MYSQL_STATUS_STATEMENT_GET_RESULTMYSQL_STATUS_STATEMENT_GET_RESULT229,7589
enum mysql_protocol_type mysql_protocol_type232,7629
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,MYSQL_PROTOCOL_DEFAULT234,7657
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,MYSQL_PROTOCOL_TCP234,7657
  MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,MYSQL_PROTOCOL_SOCKET234,7657
  MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORYMYSQL_PROTOCOL_PIPE235,7726
  MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORYMYSQL_PROTOCOL_MEMORY235,7726
enum mysql_ssl_modemysql_ssl_mode238,7775
  SSL_MODE_DISABLED= 1, SSL_MODE_PREFERRED, SSL_MODE_REQUIRED,SSL_MODE_DISABLED240,7797
  SSL_MODE_DISABLED= 1, SSL_MODE_PREFERRED, SSL_MODE_REQUIRED,SSL_MODE_PREFERRED240,7797
  SSL_MODE_DISABLED= 1, SSL_MODE_PREFERRED, SSL_MODE_REQUIRED,SSL_MODE_REQUIRED240,7797
  SSL_MODE_VERIFY_CA, SSL_MODE_VERIFY_IDENTITYSSL_MODE_VERIFY_CA241,7860
  SSL_MODE_VERIFY_CA, SSL_MODE_VERIFY_IDENTITYSSL_MODE_VERIFY_IDENTITY241,7860
typedef struct character_setcharacter_set244,7911
  unsigned int      number;     /* character set number              */number246,7942
  unsigned int      state;      /* character set state               */state247,8014
  const char        *csname;    /* collation name                    */csname248,8086
  const char        *name;      /* character set name                */name249,8158
  const char        *comment;   /* comment                           */comment250,8230
  const char        *dir;       /* character set directory           */dir251,8302
  unsigned int      mbminlen;   /* min. length for multibyte strings */mbminlen252,8374
  unsigned int      mbmaxlen;   /* max. length for multibyte strings */mbmaxlen253,8446
} MY_CHARSET_INFO;MY_CHARSET_INFO254,8518
typedef struct st_mysqlst_mysql259,8586
  NET		net;			/* Communication parameters */net261,8612
  unsigned char	*connector_fd;		/* ConnectorFd for SSL */connector_fd262,8657
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;host263,8715
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;user263,8715
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;passwd263,8715
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;unix_socket263,8715
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;server_version263,8715
  char		*host,*user,*passwd,*unix_socket,*server_version,*host_info;host_info263,8715
  char          *info, *db;info264,8784
  char          *info, *db;db264,8784
  struct charset_info_st *charset;charset265,8812
  MYSQL_FIELD	*fields;fields266,8847
  MEM_ROOT	field_alloc;field_alloc267,8870
  my_ulonglong affected_rows;affected_rows268,8894
  my_ulonglong insert_id;		/* id if insert on table with NEXTNR */insert_id269,8924
  my_ulonglong extra_info;		/* Not used */extra_info270,8991
  unsigned long thread_id;		/* Id for connection in server */thread_id271,9034
  unsigned long packet_length;packet_length272,9096
  unsigned int	port;port273,9127
  unsigned long client_flag,server_capabilities;client_flag274,9148
  unsigned long client_flag,server_capabilities;server_capabilities274,9148
  unsigned int	protocol_version;protocol_version275,9197
  unsigned int	field_count;field_count276,9230
  unsigned int 	server_status;server_status277,9258
  unsigned int  server_language;server_language278,9289
  unsigned int	warning_count;warning_count279,9322
  struct st_mysql_options options;options280,9352
  enum mysql_status status;status281,9387
  my_bool	free_me;		/* If free in mysql_close */free_me282,9415
  my_bool	reconnect;		/* set to 1 if automatic reconnect */reconnect283,9464
  char	        scramble[SCRAMBLE_LENGTH+1];scramble286,9560
  my_bool unused1;unused1287,9604
  void *unused2, *unused3, *unused4, *unused5;unused2288,9623
  void *unused2, *unused3, *unused4, *unused5;unused3288,9623
  void *unused2, *unused3, *unused4, *unused5;unused4288,9623
  void *unused2, *unused3, *unused4, *unused5;unused5288,9623
  LIST  *stmts;                     /* list of all statements */stmts290,9671
  const struct st_mysql_methods *methods;methods291,9736
  void *thd;thd292,9778
  my_bool *unbuffered_fetch_owner;unbuffered_fetch_owner297,9951
  char *info_buffer;info_buffer299,10057
  void *extension;extension300,10078
} MYSQL;MYSQL301,10097
typedef struct st_mysql_res {st_mysql_res304,10108
  my_ulonglong  row_count;row_count305,10138
  MYSQL_FIELD	*fields;fields306,10165
  MYSQL_DATA	*data;data307,10188
  MYSQL_ROWS	*data_cursor;data_cursor308,10208
  unsigned long *lengths;		/* column lengths of current row */lengths309,10235
  MYSQL		*handle;		/* for unbuffered reads */handle310,10298
  const struct st_mysql_methods *methods;methods311,10344
  MYSQL_ROW	row;			/* If unbuffered read */row312,10386
  MYSQL_ROW	current_row;		/* buffer to current row */current_row313,10430
  MEM_ROOT	field_alloc;field_alloc314,10484
  unsigned int	field_count, current_field;field_count315,10508
  unsigned int	field_count, current_field;current_field315,10508
  my_bool	eof;			/* Used by mysql_fetch_row */eof316,10551
  my_bool       unbuffered_fetch_cancelled;  unbuffered_fetch_cancelled318,10651
  void *extension;extension319,10697
} MYSQL_RES;MYSQL_RES320,10716
#define MYSQL_CLIENTMYSQL_CLIENT324,10784
#define mysql_library_init mysql_library_init344,11623
#define mysql_library_end mysql_library_end345,11668
#define LOCAL_INFILE_ERROR_LEN LOCAL_INFILE_ERROR_LEN419,14850
enum enum_mysql_stmt_stateenum_mysql_stmt_state497,18430
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE, MYSQL_STMT_EXECUTE_DONE,MYSQL_STMT_INIT_DONE499,18459
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE, MYSQL_STMT_EXECUTE_DONE,MYSQL_STMT_PREPARE_DONE499,18459
  MYSQL_STMT_INIT_DONE= 1, MYSQL_STMT_PREPARE_DONE, MYSQL_STMT_EXECUTE_DONE,MYSQL_STMT_EXECUTE_DONE499,18459
  MYSQL_STMT_FETCH_DONEMYSQL_STMT_FETCH_DONE500,18536
typedef struct st_mysql_bindst_mysql_bind567,21886
  unsigned long	*length;          /* output length pointer */length569,21917
  my_bool       *is_null;	  /* Pointer to null indicator */is_null570,21979
  void		*buffer;	  /* buffer to get/put data */buffer571,22039
  my_bool       *error;error573,22164
  unsigned char *row_ptr;         /* for the current data position */row_ptr574,22188
  void (*store_param_func)(NET *net, struct st_mysql_bind *param);store_param_func575,22258
  void (*fetch_result)(struct st_mysql_bind *, MYSQL_FIELD *,fetch_result576,22325
  void (*skip_result)(struct st_mysql_bind *, MYSQL_FIELD *,skip_result578,22432
  unsigned long buffer_length;buffer_length581,22590
  unsigned long offset;           /* offset position for char/binary fetch */offset582,22621
  unsigned long length_value;     /* Used if length is 0 */length_value583,22699
  unsigned int	param_number;	  /* For null count and error messages */param_number584,22759
  unsigned int  pack_length;	  /* Internal length for packed data */pack_length585,22830
  enum enum_field_types buffer_type;	/* buffer type */buffer_type586,22899
  my_bool       error_value;      /* used if error is 0 */error_value587,22954
  my_bool       is_unsigned;      /* set if integer type is unsigned */is_unsigned588,23013
  my_bool	long_data_used;	  /* If used with mysql_send_long_data */long_data_used589,23085
  my_bool	is_null_value;    /* Used if is_null is 0 */is_null_value590,23153
  void *extension;extension591,23208
} MYSQL_BIND;MYSQL_BIND592,23227
typedef struct st_mysql_stmtst_mysql_stmt598,23300
  MEM_ROOT       mem_root;             /* root allocations */mem_root600,23331
  LIST           list;                 /* list to keep track of all stmts */list601,23393
  MYSQL          *mysql;               /* connection handle */mysql602,23470
  MYSQL_BIND     *params;              /* input parameters */params603,23533
  MYSQL_BIND     *bind;                /* output parameters */bind604,23595
  MYSQL_FIELD    *fields;              /* result set metadata */fields605,23658
  MYSQL_DATA     result;               /* cached result set */result606,23723
  MYSQL_ROWS     *data_cursor;         /* current row in cached result */data_cursor607,23786
  int            (*read_row_func)(struct st_mysql_stmt *stmt, read_row_func612,23994
  my_ulonglong   affected_rows;affected_rows615,24176
  my_ulonglong   insert_id;            /* copy of mysql->insert_id */insert_id616,24208
  unsigned long	 stmt_id;	       /* Id for prepared statement */stmt_id617,24278
  unsigned long  flags;                /* i.e. type of cursor to open */flags618,24343
  unsigned long  prefetch_rows;        /* number of rows per one COM_FETCH */prefetch_rows619,24416
  unsigned int   server_status;server_status624,24619
  unsigned int	 last_errno;	       /* error code */last_errno625,24651
  unsigned int   param_count;          /* input parameter count */param_count626,24703
  unsigned int   field_count;          /* number of columns in result set */field_count627,24770
  enum enum_mysql_stmt_state state;    /* statement state */state628,24847
  char		 last_error[MYSQL_ERRMSG_SIZE]; /* error message */last_error629,24908
  char		 sqlstate[SQLSTATE_LENGTH+1];sqlstate630,24968
  my_bool        send_types_to_server;send_types_to_server632,25065
  my_bool        bind_param_done;      /* input buffers were supplied */bind_param_done633,25104
  unsigned char  bind_result_done;     /* output buffers were supplied */bind_result_done634,25177
  my_bool       unbuffered_fetch_cancelled;  unbuffered_fetch_cancelled636,25304
  my_bool       update_max_length;     update_max_length641,25482
  struct st_mysql_stmt_extension *extension;extension642,25522
} MYSQL_STMT;MYSQL_STMT643,25567
enum enum_stmt_attr_typeenum_stmt_attr_type645,25582
  STMT_ATTR_UPDATE_MAX_LENGTH,STMT_ATTR_UPDATE_MAX_LENGTH654,25909
  STMT_ATTR_CURSOR_TYPE,STMT_ATTR_CURSOR_TYPE659,26034
  STMT_ATTR_PREFETCH_ROWSSTMT_ATTR_PREFETCH_ROWS664,26207
#define MYSQL_NO_DATA MYSQL_NO_DATA717,28955
#define MYSQL_DATA_TRUNCATED MYSQL_DATA_TRUNCATED718,28988
#define mysql_reload(mysql_reload720,29022
#define HAVE_MYSQL_REAL_CONNECTHAVE_MYSQL_REAL_CONNECT722,29088

mysql/include/my_xml.h,1442
#define _my_xml_h_my_xml_h18,769
#define MY_XML_OK	MY_XML_OK25,829
#define MY_XML_ERROR	MY_XML_ERROR26,849
#define MY_XML_FLAG_RELATIVE_NAMES MY_XML_FLAG_RELATIVE_NAMES33,1057
#define MY_XML_FLAG_SKIP_TEXT_NORMALIZATION MY_XML_FLAG_SKIP_TEXT_NORMALIZATION40,1253
enum my_xml_node_typemy_xml_node_type42,1300
  MY_XML_NODE_TAG,   /* can have TAG, ATTR and TEXT children */MY_XML_NODE_TAG44,1324
  MY_XML_NODE_ATTR,  /* can have TEXT children               */MY_XML_NODE_ATTR45,1388
  MY_XML_NODE_TEXT   /* cannot have children                 */MY_XML_NODE_TEXT46,1452
typedef struct xml_stack_stxml_stack_st49,1520
  int flags;flags51,1550
  enum my_xml_node_type current_node_type;current_node_type52,1563
  char errstr[128];errstr53,1606
  struct {__anon8269f4c9010855,1627
    char static_buffer[128];static_buffer56,1638
    char *buffer;buffer57,1667
    size_t buffer_size;buffer_size58,1685
    char *start;start59,1709
    char *end;end60,1726
  } attr;attr61,1741
  const char *beg;beg63,1752
  const char *cur;cur64,1771
  const char *end;end65,1790
  void *user_data;user_data66,1809
  int  (*enter)(struct xml_stack_st *st,const char *val, size_t len);enter67,1828
  int  (*value)(struct xml_stack_st *st,const char *val, size_t len);value68,1898
  int  (*leave_xml)(struct xml_stack_st *st,const char *val, size_t len);leave_xml69,1968
} MY_XML_PARSER;MY_XML_PARSER70,2042

mysql/include/sql_common.h,3100
#define SQL_COMMON_INCLUDEDSQL_COMMON_INCLUDED2,28
#define SQL_COMMON_INCLUDEDSQL_COMMON_INCLUDED19,811
typedef struct st_session_track_info_node {st_session_track_info_node51,1463
  LIST *head_node;head_node53,1582
  LIST *current_node;current_node54,1601
} STATE_INFO_NODE;STATE_INFO_NODE55,1623
typedef struct st_session_track_info {st_session_track_info61,1781
  struct st_session_track_info_node info_list[SESSION_TRACK_END + 1];info_list63,1885
} STATE_INFO;STATE_INFO64,1955
typedef struct st_mysql_extension {st_mysql_extension75,2119
  struct st_mysql_trace_info *trace_data;trace_data76,2155
  struct st_session_track_info state_change;state_change77,2197
} MYSQL_EXTENSION;MYSQL_EXTENSION78,2242
#define MYSQL_EXTENSION_PTR(MYSQL_EXTENSION_PTR88,2549
struct st_mysql_options_extention {st_mysql_options_extention97,2961
  char *plugin_dir;plugin_dir98,2997
  char *default_auth;default_auth99,3017
  char *ssl_crl;				/* PEM CRL file */ssl_crl100,3039
  char *ssl_crlpath;				/* PEM directory of CRL-s? */ssl_crlpath101,3078
  HASH connection_attributes;connection_attributes102,3132
  char *server_public_key_path;server_public_key_path103,3162
  size_t connection_attributes_length;connection_attributes_length104,3194
  my_bool enable_cleartext_plugin;enable_cleartext_plugin105,3233
  my_bool unused0;                              /* Former ssl_enforce */unused0106,3268
  char *tls_version; /* TLS version option */tls_version107,3341
  long ssl_ctx_flags; /* SSL ctx options flag */ssl_ctx_flags108,3387
  unsigned int ssl_mode;ssl_mode109,3436
typedef struct st_mysql_methodsst_mysql_methods112,3465
  my_bool (*read_query_result)(MYSQL *mysql);read_query_result114,3499
  my_bool (*advanced_command)(MYSQL *mysql,advanced_command115,3545
  MYSQL_DATA *(*read_rows)(MYSQL *mysql,MYSQL_FIELD *mysql_fields,read_rows123,3842
  MYSQL_RES * (*use_result)(MYSQL *mysql);use_result125,3937
  void (*fetch_lengths)(unsigned long *to, fetch_lengths126,3980
  void (*flush_use_result)(MYSQL *mysql, my_bool flush_all_results);flush_use_result128,4072
  int (*read_change_user_result)(MYSQL *mysql);read_change_user_result129,4141
  MYSQL_FIELD * (*list_fields)(MYSQL *mysql);list_fields131,4245
  my_bool (*read_prepare_result)(MYSQL *mysql, MYSQL_STMT *stmt);read_prepare_result132,4291
  int (*stmt_execute)(MYSQL_STMT *stmt);stmt_execute133,4357
  int (*read_binary_rows)(MYSQL_STMT *stmt);read_binary_rows134,4398
  int (*unbuffered_fetch)(MYSQL *mysql, char **row);unbuffered_fetch135,4443
  void (*free_embedded_thd)(MYSQL *mysql);free_embedded_thd136,4496
  const char *(*read_statistics)(MYSQL *mysql);read_statistics137,4539
  my_bool (*next_result)(MYSQL *mysql);next_result138,4587
  int (*read_rows_from_cursor)(MYSQL_STMT *stmt);read_rows_from_cursor139,4627
  void (*free_rows)(MYSQL_DATA *cur);free_rows140,4677
} MYSQL_METHODS;MYSQL_METHODS142,4722
#define simple_command(simple_command144,4740
#define stmt_command(stmt_command149,5051
#define protocol_41(protocol_41204,7606

mysql/include/my_alloc.h,1310
#define _my_alloc_h_my_alloc_h21,837
#define ALLOC_MAX_BLOCK_TO_DROP	ALLOC_MAX_BLOCK_TO_DROP23,858
#define ALLOC_MAX_BLOCK_USAGE_BEFORE_DROP	ALLOC_MAX_BLOCK_USAGE_BEFORE_DROP24,897
typedef struct st_used_memst_used_mem33,1039
  struct st_used_mem *next;	   /* Next block in use */next35,1110
  unsigned int	left;		   /* memory left in block  */left36,1165
  unsigned int	size;		   /* size of block */size37,1218
} USED_MEM;USED_MEM38,1263
typedef struct st_mem_rootst_mem_root41,1277
  USED_MEM *free;                  /* blocks with free memory in it */free43,1306
  USED_MEM *used;                  /* blocks almost without free memory */used44,1377
  USED_MEM *pre_alloc;             /* preallocated block */pre_alloc45,1452
  size_t min_malloc;min_malloc47,1576
  size_t block_size;               /* initial block size */block_size48,1597
  unsigned int block_num;          /* allocated blocks counter */block_num49,1657
  unsigned int first_block_usage;first_block_usage54,1864
  size_t max_capacity;max_capacity60,2006
  size_t allocated_size;allocated_size64,2072
  my_bool error_for_capacity_exceeded;error_for_capacity_exceeded67,2162
  void (*error_handler)(void);error_handler69,2202
  PSI_memory_key m_psi_key;m_psi_key71,2234
} MEM_ROOT;MEM_ROOT72,2262

mysql/include/byte_order_generic_x86.h,762
static inline int16  sint2korr(const uchar *A) { return *((int16*) A); }sint2korr23,985
static inline int32 sint4korr(const uchar *A) { return *((int32*) A); }sint4korr26,1121
static inline uint16 uint2korr(const uchar *A) { return *((uint16*) A); }uint2korr29,1257
static inline uint32 uint4korr(const uchar *A) { return *((uint32*) A); }uint4korr32,1395
static inline ulonglong uint8korr(const uchar *A) { return *((ulonglong*) A);}uint8korr35,1536
static inline longlong  sint8korr(const uchar *A) { return *((longlong*) A); }sint8korr38,1682
static inline void int2store(uchar *T, uint16 A)int2store41,1827
static inline void int4store(uchar *T, uint32 A)int4store47,1967
static inline void int8store(uchar *T, ulonglong A)int8store53,2110

mysql/include/mysqld_error.h,78619
#define MYSQLD_ERROR_INCLUDEDMYSQLD_ERROR_INCLUDED4,75
static const int errmsg_section_start[] = { 1000, 3000 };errmsg_section_start6,106
static const int errmsg_section_size[] = { 886, 194 };errmsg_section_size7,164
#define ER_HASHCHK ER_HASHCHK9,220
#define ER_NISAMCHK ER_NISAMCHK10,244
#define ER_NO ER_NO11,269
#define ER_YES ER_YES12,288
#define ER_CANT_CREATE_FILE ER_CANT_CREATE_FILE13,308
#define ER_CANT_CREATE_TABLE ER_CANT_CREATE_TABLE14,341
#define ER_CANT_CREATE_DB ER_CANT_CREATE_DB15,375
#define ER_DB_CREATE_EXISTS ER_DB_CREATE_EXISTS16,406
#define ER_DB_DROP_EXISTS ER_DB_DROP_EXISTS17,439
#define ER_DB_DROP_DELETE ER_DB_DROP_DELETE18,470
#define ER_DB_DROP_RMDIR ER_DB_DROP_RMDIR19,501
#define ER_CANT_DELETE_FILE ER_CANT_DELETE_FILE20,531
#define ER_CANT_FIND_SYSTEM_REC ER_CANT_FIND_SYSTEM_REC21,564
#define ER_CANT_GET_STAT ER_CANT_GET_STAT22,601
#define ER_CANT_GET_WD ER_CANT_GET_WD23,631
#define ER_CANT_LOCK ER_CANT_LOCK24,659
#define ER_CANT_OPEN_FILE ER_CANT_OPEN_FILE25,685
#define ER_FILE_NOT_FOUND ER_FILE_NOT_FOUND26,716
#define ER_CANT_READ_DIR ER_CANT_READ_DIR27,747
#define ER_CANT_SET_WD ER_CANT_SET_WD28,777
#define ER_CHECKREAD ER_CHECKREAD29,805
#define ER_DISK_FULL ER_DISK_FULL30,831
#define ER_DUP_KEY ER_DUP_KEY31,857
#define ER_ERROR_ON_CLOSE ER_ERROR_ON_CLOSE32,881
#define ER_ERROR_ON_READ ER_ERROR_ON_READ33,912
#define ER_ERROR_ON_RENAME ER_ERROR_ON_RENAME34,942
#define ER_ERROR_ON_WRITE ER_ERROR_ON_WRITE35,974
#define ER_FILE_USED ER_FILE_USED36,1005
#define ER_FILSORT_ABORT ER_FILSORT_ABORT37,1031
#define ER_FORM_NOT_FOUND ER_FORM_NOT_FOUND38,1061
#define ER_GET_ERRNO ER_GET_ERRNO39,1092
#define ER_ILLEGAL_HA ER_ILLEGAL_HA40,1118
#define ER_KEY_NOT_FOUND ER_KEY_NOT_FOUND41,1145
#define ER_NOT_FORM_FILE ER_NOT_FORM_FILE42,1175
#define ER_NOT_KEYFILE ER_NOT_KEYFILE43,1205
#define ER_OLD_KEYFILE ER_OLD_KEYFILE44,1233
#define ER_OPEN_AS_READONLY ER_OPEN_AS_READONLY45,1261
#define ER_OUTOFMEMORY ER_OUTOFMEMORY46,1294
#define ER_OUT_OF_SORTMEMORY ER_OUT_OF_SORTMEMORY47,1322
#define ER_UNEXPECTED_EOF ER_UNEXPECTED_EOF48,1356
#define ER_CON_COUNT_ERROR ER_CON_COUNT_ERROR49,1387
#define ER_OUT_OF_RESOURCES ER_OUT_OF_RESOURCES50,1419
#define ER_BAD_HOST_ERROR ER_BAD_HOST_ERROR51,1452
#define ER_HANDSHAKE_ERROR ER_HANDSHAKE_ERROR52,1483
#define ER_DBACCESS_DENIED_ERROR ER_DBACCESS_DENIED_ERROR53,1515
#define ER_ACCESS_DENIED_ERROR ER_ACCESS_DENIED_ERROR54,1553
#define ER_NO_DB_ERROR ER_NO_DB_ERROR55,1589
#define ER_UNKNOWN_COM_ERROR ER_UNKNOWN_COM_ERROR56,1617
#define ER_BAD_NULL_ERROR ER_BAD_NULL_ERROR57,1651
#define ER_BAD_DB_ERROR ER_BAD_DB_ERROR58,1682
#define ER_TABLE_EXISTS_ERROR ER_TABLE_EXISTS_ERROR59,1711
#define ER_BAD_TABLE_ERROR ER_BAD_TABLE_ERROR60,1746
#define ER_NON_UNIQ_ERROR ER_NON_UNIQ_ERROR61,1778
#define ER_SERVER_SHUTDOWN ER_SERVER_SHUTDOWN62,1809
#define ER_BAD_FIELD_ERROR ER_BAD_FIELD_ERROR63,1841
#define ER_WRONG_FIELD_WITH_GROUP ER_WRONG_FIELD_WITH_GROUP64,1873
#define ER_WRONG_GROUP_FIELD ER_WRONG_GROUP_FIELD65,1912
#define ER_WRONG_SUM_SELECT ER_WRONG_SUM_SELECT66,1946
#define ER_WRONG_VALUE_COUNT ER_WRONG_VALUE_COUNT67,1979
#define ER_TOO_LONG_IDENT ER_TOO_LONG_IDENT68,2013
#define ER_DUP_FIELDNAME ER_DUP_FIELDNAME69,2044
#define ER_DUP_KEYNAME ER_DUP_KEYNAME70,2074
#define ER_DUP_ENTRY ER_DUP_ENTRY71,2102
#define ER_WRONG_FIELD_SPEC ER_WRONG_FIELD_SPEC72,2128
#define ER_PARSE_ERROR ER_PARSE_ERROR73,2161
#define ER_EMPTY_QUERY ER_EMPTY_QUERY74,2189
#define ER_NONUNIQ_TABLE ER_NONUNIQ_TABLE75,2217
#define ER_INVALID_DEFAULT ER_INVALID_DEFAULT76,2247
#define ER_MULTIPLE_PRI_KEY ER_MULTIPLE_PRI_KEY77,2279
#define ER_TOO_MANY_KEYS ER_TOO_MANY_KEYS78,2312
#define ER_TOO_MANY_KEY_PARTS ER_TOO_MANY_KEY_PARTS79,2342
#define ER_TOO_LONG_KEY ER_TOO_LONG_KEY80,2377
#define ER_KEY_COLUMN_DOES_NOT_EXITS ER_KEY_COLUMN_DOES_NOT_EXITS81,2406
#define ER_BLOB_USED_AS_KEY ER_BLOB_USED_AS_KEY82,2448
#define ER_TOO_BIG_FIELDLENGTH ER_TOO_BIG_FIELDLENGTH83,2481
#define ER_WRONG_AUTO_KEY ER_WRONG_AUTO_KEY84,2517
#define ER_READY ER_READY85,2548
#define ER_NORMAL_SHUTDOWN ER_NORMAL_SHUTDOWN86,2570
#define ER_GOT_SIGNAL ER_GOT_SIGNAL87,2602
#define ER_SHUTDOWN_COMPLETE ER_SHUTDOWN_COMPLETE88,2629
#define ER_FORCING_CLOSE ER_FORCING_CLOSE89,2663
#define ER_IPSOCK_ERROR ER_IPSOCK_ERROR90,2693
#define ER_NO_SUCH_INDEX ER_NO_SUCH_INDEX91,2722
#define ER_WRONG_FIELD_TERMINATORS ER_WRONG_FIELD_TERMINATORS92,2752
#define ER_BLOBS_AND_NO_TERMINATED ER_BLOBS_AND_NO_TERMINATED93,2792
#define ER_TEXTFILE_NOT_READABLE ER_TEXTFILE_NOT_READABLE94,2832
#define ER_FILE_EXISTS_ERROR ER_FILE_EXISTS_ERROR95,2870
#define ER_LOAD_INFO ER_LOAD_INFO96,2904
#define ER_ALTER_INFO ER_ALTER_INFO97,2930
#define ER_WRONG_SUB_KEY ER_WRONG_SUB_KEY98,2957
#define ER_CANT_REMOVE_ALL_FIELDS ER_CANT_REMOVE_ALL_FIELDS99,2987
#define ER_CANT_DROP_FIELD_OR_KEY ER_CANT_DROP_FIELD_OR_KEY100,3026
#define ER_INSERT_INFO ER_INSERT_INFO101,3065
#define ER_UPDATE_TABLE_USED ER_UPDATE_TABLE_USED102,3093
#define ER_NO_SUCH_THREAD ER_NO_SUCH_THREAD103,3127
#define ER_KILL_DENIED_ERROR ER_KILL_DENIED_ERROR104,3158
#define ER_NO_TABLES_USED ER_NO_TABLES_USED105,3192
#define ER_TOO_BIG_SET ER_TOO_BIG_SET106,3223
#define ER_NO_UNIQUE_LOGFILE ER_NO_UNIQUE_LOGFILE107,3251
#define ER_TABLE_NOT_LOCKED_FOR_WRITE ER_TABLE_NOT_LOCKED_FOR_WRITE108,3285
#define ER_TABLE_NOT_LOCKED ER_TABLE_NOT_LOCKED109,3328
#define ER_BLOB_CANT_HAVE_DEFAULT ER_BLOB_CANT_HAVE_DEFAULT110,3361
#define ER_WRONG_DB_NAME ER_WRONG_DB_NAME111,3400
#define ER_WRONG_TABLE_NAME ER_WRONG_TABLE_NAME112,3430
#define ER_TOO_BIG_SELECT ER_TOO_BIG_SELECT113,3463
#define ER_UNKNOWN_ERROR ER_UNKNOWN_ERROR114,3494
#define ER_UNKNOWN_PROCEDURE ER_UNKNOWN_PROCEDURE115,3524
#define ER_WRONG_PARAMCOUNT_TO_PROCEDURE ER_WRONG_PARAMCOUNT_TO_PROCEDURE116,3558
#define ER_WRONG_PARAMETERS_TO_PROCEDURE ER_WRONG_PARAMETERS_TO_PROCEDURE117,3604
#define ER_UNKNOWN_TABLE ER_UNKNOWN_TABLE118,3650
#define ER_FIELD_SPECIFIED_TWICE ER_FIELD_SPECIFIED_TWICE119,3680
#define ER_INVALID_GROUP_FUNC_USE ER_INVALID_GROUP_FUNC_USE120,3718
#define ER_UNSUPPORTED_EXTENSION ER_UNSUPPORTED_EXTENSION121,3757
#define ER_TABLE_MUST_HAVE_COLUMNS ER_TABLE_MUST_HAVE_COLUMNS122,3795
#define ER_RECORD_FILE_FULL ER_RECORD_FILE_FULL123,3835
#define ER_UNKNOWN_CHARACTER_SET ER_UNKNOWN_CHARACTER_SET124,3868
#define ER_TOO_MANY_TABLES ER_TOO_MANY_TABLES125,3906
#define ER_TOO_MANY_FIELDS ER_TOO_MANY_FIELDS126,3938
#define ER_TOO_BIG_ROWSIZE ER_TOO_BIG_ROWSIZE127,3970
#define ER_STACK_OVERRUN ER_STACK_OVERRUN128,4002
#define ER_WRONG_OUTER_JOIN ER_WRONG_OUTER_JOIN129,4032
#define ER_NULL_COLUMN_IN_INDEX ER_NULL_COLUMN_IN_INDEX130,4065
#define ER_CANT_FIND_UDF ER_CANT_FIND_UDF131,4102
#define ER_CANT_INITIALIZE_UDF ER_CANT_INITIALIZE_UDF132,4132
#define ER_UDF_NO_PATHS ER_UDF_NO_PATHS133,4168
#define ER_UDF_EXISTS ER_UDF_EXISTS134,4197
#define ER_CANT_OPEN_LIBRARY ER_CANT_OPEN_LIBRARY135,4224
#define ER_CANT_FIND_DL_ENTRY ER_CANT_FIND_DL_ENTRY136,4258
#define ER_FUNCTION_NOT_DEFINED ER_FUNCTION_NOT_DEFINED137,4293
#define ER_HOST_IS_BLOCKED ER_HOST_IS_BLOCKED138,4330
#define ER_HOST_NOT_PRIVILEGED ER_HOST_NOT_PRIVILEGED139,4362
#define ER_PASSWORD_ANONYMOUS_USER ER_PASSWORD_ANONYMOUS_USER140,4398
#define ER_PASSWORD_NOT_ALLOWED ER_PASSWORD_NOT_ALLOWED141,4438
#define ER_PASSWORD_NO_MATCH ER_PASSWORD_NO_MATCH142,4475
#define ER_UPDATE_INFO ER_UPDATE_INFO143,4509
#define ER_CANT_CREATE_THREAD ER_CANT_CREATE_THREAD144,4537
#define ER_WRONG_VALUE_COUNT_ON_ROW ER_WRONG_VALUE_COUNT_ON_ROW145,4572
#define ER_CANT_REOPEN_TABLE ER_CANT_REOPEN_TABLE146,4613
#define ER_INVALID_USE_OF_NULL ER_INVALID_USE_OF_NULL147,4647
#define ER_REGEXP_ERROR ER_REGEXP_ERROR148,4683
#define ER_MIX_OF_GROUP_FUNC_AND_FIELDS ER_MIX_OF_GROUP_FUNC_AND_FIELDS149,4712
#define ER_NONEXISTING_GRANT ER_NONEXISTING_GRANT150,4757
#define ER_TABLEACCESS_DENIED_ERROR ER_TABLEACCESS_DENIED_ERROR151,4791
#define ER_COLUMNACCESS_DENIED_ERROR ER_COLUMNACCESS_DENIED_ERROR152,4832
#define ER_ILLEGAL_GRANT_FOR_TABLE ER_ILLEGAL_GRANT_FOR_TABLE153,4874
#define ER_GRANT_WRONG_HOST_OR_USER ER_GRANT_WRONG_HOST_OR_USER154,4914
#define ER_NO_SUCH_TABLE ER_NO_SUCH_TABLE155,4955
#define ER_NONEXISTING_TABLE_GRANT ER_NONEXISTING_TABLE_GRANT156,4985
#define ER_NOT_ALLOWED_COMMAND ER_NOT_ALLOWED_COMMAND157,5025
#define ER_SYNTAX_ERROR ER_SYNTAX_ERROR158,5061
#define ER_UNUSED1 ER_UNUSED1159,5090
#define ER_UNUSED2 ER_UNUSED2160,5114
#define ER_ABORTING_CONNECTION ER_ABORTING_CONNECTION161,5138
#define ER_NET_PACKET_TOO_LARGE ER_NET_PACKET_TOO_LARGE162,5174
#define ER_NET_READ_ERROR_FROM_PIPE ER_NET_READ_ERROR_FROM_PIPE163,5211
#define ER_NET_FCNTL_ERROR ER_NET_FCNTL_ERROR164,5252
#define ER_NET_PACKETS_OUT_OF_ORDER ER_NET_PACKETS_OUT_OF_ORDER165,5284
#define ER_NET_UNCOMPRESS_ERROR ER_NET_UNCOMPRESS_ERROR166,5325
#define ER_NET_READ_ERROR ER_NET_READ_ERROR167,5362
#define ER_NET_READ_INTERRUPTED ER_NET_READ_INTERRUPTED168,5393
#define ER_NET_ERROR_ON_WRITE ER_NET_ERROR_ON_WRITE169,5430
#define ER_NET_WRITE_INTERRUPTED ER_NET_WRITE_INTERRUPTED170,5465
#define ER_TOO_LONG_STRING ER_TOO_LONG_STRING171,5503
#define ER_TABLE_CANT_HANDLE_BLOB ER_TABLE_CANT_HANDLE_BLOB172,5535
#define ER_TABLE_CANT_HANDLE_AUTO_INCREMENT ER_TABLE_CANT_HANDLE_AUTO_INCREMENT173,5574
#define ER_UNUSED3 ER_UNUSED3174,5623
#define ER_WRONG_COLUMN_NAME ER_WRONG_COLUMN_NAME175,5647
#define ER_WRONG_KEY_COLUMN ER_WRONG_KEY_COLUMN176,5681
#define ER_WRONG_MRG_TABLE ER_WRONG_MRG_TABLE177,5714
#define ER_DUP_UNIQUE ER_DUP_UNIQUE178,5746
#define ER_BLOB_KEY_WITHOUT_LENGTH ER_BLOB_KEY_WITHOUT_LENGTH179,5773
#define ER_PRIMARY_CANT_HAVE_NULL ER_PRIMARY_CANT_HAVE_NULL180,5813
#define ER_TOO_MANY_ROWS ER_TOO_MANY_ROWS181,5852
#define ER_REQUIRES_PRIMARY_KEY ER_REQUIRES_PRIMARY_KEY182,5882
#define ER_NO_RAID_COMPILED ER_NO_RAID_COMPILED183,5919
#define ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE184,5952
#define ER_KEY_DOES_NOT_EXITS ER_KEY_DOES_NOT_EXITS185,6000
#define ER_CHECK_NO_SUCH_TABLE ER_CHECK_NO_SUCH_TABLE186,6035
#define ER_CHECK_NOT_IMPLEMENTED ER_CHECK_NOT_IMPLEMENTED187,6071
#define ER_CANT_DO_THIS_DURING_AN_TRANSACTION ER_CANT_DO_THIS_DURING_AN_TRANSACTION188,6109
#define ER_ERROR_DURING_COMMIT ER_ERROR_DURING_COMMIT189,6160
#define ER_ERROR_DURING_ROLLBACK ER_ERROR_DURING_ROLLBACK190,6196
#define ER_ERROR_DURING_FLUSH_LOGS ER_ERROR_DURING_FLUSH_LOGS191,6234
#define ER_ERROR_DURING_CHECKPOINT ER_ERROR_DURING_CHECKPOINT192,6274
#define ER_NEW_ABORTING_CONNECTION ER_NEW_ABORTING_CONNECTION193,6314
#define ER_DUMP_NOT_IMPLEMENTED ER_DUMP_NOT_IMPLEMENTED194,6354
#define ER_FLUSH_MASTER_BINLOG_CLOSED ER_FLUSH_MASTER_BINLOG_CLOSED195,6391
#define ER_INDEX_REBUILD ER_INDEX_REBUILD196,6434
#define ER_MASTER ER_MASTER197,6464
#define ER_MASTER_NET_READ ER_MASTER_NET_READ198,6487
#define ER_MASTER_NET_WRITE ER_MASTER_NET_WRITE199,6519
#define ER_FT_MATCHING_KEY_NOT_FOUND ER_FT_MATCHING_KEY_NOT_FOUND200,6552
#define ER_LOCK_OR_ACTIVE_TRANSACTION ER_LOCK_OR_ACTIVE_TRANSACTION201,6594
#define ER_UNKNOWN_SYSTEM_VARIABLE ER_UNKNOWN_SYSTEM_VARIABLE202,6637
#define ER_CRASHED_ON_USAGE ER_CRASHED_ON_USAGE203,6677
#define ER_CRASHED_ON_REPAIR ER_CRASHED_ON_REPAIR204,6710
#define ER_WARNING_NOT_COMPLETE_ROLLBACK ER_WARNING_NOT_COMPLETE_ROLLBACK205,6744
#define ER_TRANS_CACHE_FULL ER_TRANS_CACHE_FULL206,6790
#define ER_SLAVE_MUST_STOP ER_SLAVE_MUST_STOP207,6823
#define ER_SLAVE_NOT_RUNNING ER_SLAVE_NOT_RUNNING208,6855
#define ER_BAD_SLAVE ER_BAD_SLAVE209,6889
#define ER_MASTER_INFO ER_MASTER_INFO210,6915
#define ER_SLAVE_THREAD ER_SLAVE_THREAD211,6943
#define ER_TOO_MANY_USER_CONNECTIONS ER_TOO_MANY_USER_CONNECTIONS212,6972
#define ER_SET_CONSTANTS_ONLY ER_SET_CONSTANTS_ONLY213,7014
#define ER_LOCK_WAIT_TIMEOUT ER_LOCK_WAIT_TIMEOUT214,7049
#define ER_LOCK_TABLE_FULL ER_LOCK_TABLE_FULL215,7083
#define ER_READ_ONLY_TRANSACTION ER_READ_ONLY_TRANSACTION216,7115
#define ER_DROP_DB_WITH_READ_LOCK ER_DROP_DB_WITH_READ_LOCK217,7153
#define ER_CREATE_DB_WITH_READ_LOCK ER_CREATE_DB_WITH_READ_LOCK218,7192
#define ER_WRONG_ARGUMENTS ER_WRONG_ARGUMENTS219,7233
#define ER_NO_PERMISSION_TO_CREATE_USER ER_NO_PERMISSION_TO_CREATE_USER220,7265
#define ER_UNION_TABLES_IN_DIFFERENT_DIR ER_UNION_TABLES_IN_DIFFERENT_DIR221,7310
#define ER_LOCK_DEADLOCK ER_LOCK_DEADLOCK222,7356
#define ER_TABLE_CANT_HANDLE_FT ER_TABLE_CANT_HANDLE_FT223,7386
#define ER_CANNOT_ADD_FOREIGN ER_CANNOT_ADD_FOREIGN224,7423
#define ER_NO_REFERENCED_ROW ER_NO_REFERENCED_ROW225,7458
#define ER_ROW_IS_REFERENCED ER_ROW_IS_REFERENCED226,7492
#define ER_CONNECT_TO_MASTER ER_CONNECT_TO_MASTER227,7526
#define ER_QUERY_ON_MASTER ER_QUERY_ON_MASTER228,7560
#define ER_ERROR_WHEN_EXECUTING_COMMAND ER_ERROR_WHEN_EXECUTING_COMMAND229,7592
#define ER_WRONG_USAGE ER_WRONG_USAGE230,7637
#define ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT231,7665
#define ER_CANT_UPDATE_WITH_READLOCK ER_CANT_UPDATE_WITH_READLOCK232,7715
#define ER_MIXING_NOT_ALLOWED ER_MIXING_NOT_ALLOWED233,7757
#define ER_DUP_ARGUMENT ER_DUP_ARGUMENT234,7792
#define ER_USER_LIMIT_REACHED ER_USER_LIMIT_REACHED235,7821
#define ER_SPECIFIC_ACCESS_DENIED_ERROR ER_SPECIFIC_ACCESS_DENIED_ERROR236,7856
#define ER_LOCAL_VARIABLE ER_LOCAL_VARIABLE237,7901
#define ER_GLOBAL_VARIABLE ER_GLOBAL_VARIABLE238,7932
#define ER_NO_DEFAULT ER_NO_DEFAULT239,7964
#define ER_WRONG_VALUE_FOR_VAR ER_WRONG_VALUE_FOR_VAR240,7991
#define ER_WRONG_TYPE_FOR_VAR ER_WRONG_TYPE_FOR_VAR241,8027
#define ER_VAR_CANT_BE_READ ER_VAR_CANT_BE_READ242,8062
#define ER_CANT_USE_OPTION_HERE ER_CANT_USE_OPTION_HERE243,8095
#define ER_NOT_SUPPORTED_YET ER_NOT_SUPPORTED_YET244,8132
#define ER_MASTER_FATAL_ERROR_READING_BINLOG ER_MASTER_FATAL_ERROR_READING_BINLOG245,8166
#define ER_SLAVE_IGNORED_TABLE ER_SLAVE_IGNORED_TABLE246,8216
#define ER_INCORRECT_GLOBAL_LOCAL_VAR ER_INCORRECT_GLOBAL_LOCAL_VAR247,8252
#define ER_WRONG_FK_DEF ER_WRONG_FK_DEF248,8295
#define ER_KEY_REF_DO_NOT_MATCH_TABLE_REF ER_KEY_REF_DO_NOT_MATCH_TABLE_REF249,8324
#define ER_OPERAND_COLUMNS ER_OPERAND_COLUMNS250,8371
#define ER_SUBQUERY_NO_1_ROW ER_SUBQUERY_NO_1_ROW251,8403
#define ER_UNKNOWN_STMT_HANDLER ER_UNKNOWN_STMT_HANDLER252,8437
#define ER_CORRUPT_HELP_DB ER_CORRUPT_HELP_DB253,8474
#define ER_CYCLIC_REFERENCE ER_CYCLIC_REFERENCE254,8506
#define ER_AUTO_CONVERT ER_AUTO_CONVERT255,8539
#define ER_ILLEGAL_REFERENCE ER_ILLEGAL_REFERENCE256,8568
#define ER_DERIVED_MUST_HAVE_ALIAS ER_DERIVED_MUST_HAVE_ALIAS257,8602
#define ER_SELECT_REDUCED ER_SELECT_REDUCED258,8642
#define ER_TABLENAME_NOT_ALLOWED_HERE ER_TABLENAME_NOT_ALLOWED_HERE259,8673
#define ER_NOT_SUPPORTED_AUTH_MODE ER_NOT_SUPPORTED_AUTH_MODE260,8716
#define ER_SPATIAL_CANT_HAVE_NULL ER_SPATIAL_CANT_HAVE_NULL261,8756
#define ER_COLLATION_CHARSET_MISMATCH ER_COLLATION_CHARSET_MISMATCH262,8795
#define ER_SLAVE_WAS_RUNNING ER_SLAVE_WAS_RUNNING263,8838
#define ER_SLAVE_WAS_NOT_RUNNING ER_SLAVE_WAS_NOT_RUNNING264,8872
#define ER_TOO_BIG_FOR_UNCOMPRESS ER_TOO_BIG_FOR_UNCOMPRESS265,8910
#define ER_ZLIB_Z_MEM_ERROR ER_ZLIB_Z_MEM_ERROR266,8949
#define ER_ZLIB_Z_BUF_ERROR ER_ZLIB_Z_BUF_ERROR267,8982
#define ER_ZLIB_Z_DATA_ERROR ER_ZLIB_Z_DATA_ERROR268,9015
#define ER_CUT_VALUE_GROUP_CONCAT ER_CUT_VALUE_GROUP_CONCAT269,9049
#define ER_WARN_TOO_FEW_RECORDS ER_WARN_TOO_FEW_RECORDS270,9088
#define ER_WARN_TOO_MANY_RECORDS ER_WARN_TOO_MANY_RECORDS271,9125
#define ER_WARN_NULL_TO_NOTNULL ER_WARN_NULL_TO_NOTNULL272,9163
#define ER_WARN_DATA_OUT_OF_RANGE ER_WARN_DATA_OUT_OF_RANGE273,9200
#define WARN_DATA_TRUNCATED WARN_DATA_TRUNCATED274,9239
#define ER_WARN_USING_OTHER_HANDLER ER_WARN_USING_OTHER_HANDLER275,9272
#define ER_CANT_AGGREGATE_2COLLATIONS ER_CANT_AGGREGATE_2COLLATIONS276,9313
#define ER_DROP_USER ER_DROP_USER277,9356
#define ER_REVOKE_GRANTS ER_REVOKE_GRANTS278,9382
#define ER_CANT_AGGREGATE_3COLLATIONS ER_CANT_AGGREGATE_3COLLATIONS279,9412
#define ER_CANT_AGGREGATE_NCOLLATIONS ER_CANT_AGGREGATE_NCOLLATIONS280,9455
#define ER_VARIABLE_IS_NOT_STRUCT ER_VARIABLE_IS_NOT_STRUCT281,9498
#define ER_UNKNOWN_COLLATION ER_UNKNOWN_COLLATION282,9537
#define ER_SLAVE_IGNORED_SSL_PARAMS ER_SLAVE_IGNORED_SSL_PARAMS283,9571
#define ER_SERVER_IS_IN_SECURE_AUTH_MODE ER_SERVER_IS_IN_SECURE_AUTH_MODE284,9612
#define ER_WARN_FIELD_RESOLVED ER_WARN_FIELD_RESOLVED285,9658
#define ER_BAD_SLAVE_UNTIL_COND ER_BAD_SLAVE_UNTIL_COND286,9694
#define ER_MISSING_SKIP_SLAVE ER_MISSING_SKIP_SLAVE287,9731
#define ER_UNTIL_COND_IGNORED ER_UNTIL_COND_IGNORED288,9766
#define ER_WRONG_NAME_FOR_INDEX ER_WRONG_NAME_FOR_INDEX289,9801
#define ER_WRONG_NAME_FOR_CATALOG ER_WRONG_NAME_FOR_CATALOG290,9838
#define ER_WARN_QC_RESIZE ER_WARN_QC_RESIZE291,9877
#define ER_BAD_FT_COLUMN ER_BAD_FT_COLUMN292,9908
#define ER_UNKNOWN_KEY_CACHE ER_UNKNOWN_KEY_CACHE293,9938
#define ER_WARN_HOSTNAME_WONT_WORK ER_WARN_HOSTNAME_WONT_WORK294,9972
#define ER_UNKNOWN_STORAGE_ENGINE ER_UNKNOWN_STORAGE_ENGINE295,10012
#define ER_WARN_DEPRECATED_SYNTAX ER_WARN_DEPRECATED_SYNTAX296,10051
#define ER_NON_UPDATABLE_TABLE ER_NON_UPDATABLE_TABLE297,10090
#define ER_FEATURE_DISABLED ER_FEATURE_DISABLED298,10126
#define ER_OPTION_PREVENTS_STATEMENT ER_OPTION_PREVENTS_STATEMENT299,10159
#define ER_DUPLICATED_VALUE_IN_TYPE ER_DUPLICATED_VALUE_IN_TYPE300,10201
#define ER_TRUNCATED_WRONG_VALUE ER_TRUNCATED_WRONG_VALUE301,10242
#define ER_TOO_MUCH_AUTO_TIMESTAMP_COLS ER_TOO_MUCH_AUTO_TIMESTAMP_COLS302,10280
#define ER_INVALID_ON_UPDATE ER_INVALID_ON_UPDATE303,10325
#define ER_UNSUPPORTED_PS ER_UNSUPPORTED_PS304,10359
#define ER_GET_ERRMSG ER_GET_ERRMSG305,10390
#define ER_GET_TEMPORARY_ERRMSG ER_GET_TEMPORARY_ERRMSG306,10417
#define ER_UNKNOWN_TIME_ZONE ER_UNKNOWN_TIME_ZONE307,10454
#define ER_WARN_INVALID_TIMESTAMP ER_WARN_INVALID_TIMESTAMP308,10488
#define ER_INVALID_CHARACTER_STRING ER_INVALID_CHARACTER_STRING309,10527
#define ER_WARN_ALLOWED_PACKET_OVERFLOWED ER_WARN_ALLOWED_PACKET_OVERFLOWED310,10568
#define ER_CONFLICTING_DECLARATIONS ER_CONFLICTING_DECLARATIONS311,10615
#define ER_SP_NO_RECURSIVE_CREATE ER_SP_NO_RECURSIVE_CREATE312,10656
#define ER_SP_ALREADY_EXISTS ER_SP_ALREADY_EXISTS313,10695
#define ER_SP_DOES_NOT_EXIST ER_SP_DOES_NOT_EXIST314,10729
#define ER_SP_DROP_FAILED ER_SP_DROP_FAILED315,10763
#define ER_SP_STORE_FAILED ER_SP_STORE_FAILED316,10794
#define ER_SP_LILABEL_MISMATCH ER_SP_LILABEL_MISMATCH317,10826
#define ER_SP_LABEL_REDEFINE ER_SP_LABEL_REDEFINE318,10862
#define ER_SP_LABEL_MISMATCH ER_SP_LABEL_MISMATCH319,10896
#define ER_SP_UNINIT_VAR ER_SP_UNINIT_VAR320,10930
#define ER_SP_BADSELECT ER_SP_BADSELECT321,10960
#define ER_SP_BADRETURN ER_SP_BADRETURN322,10989
#define ER_SP_BADSTATEMENT ER_SP_BADSTATEMENT323,11018
#define ER_UPDATE_LOG_DEPRECATED_IGNORED ER_UPDATE_LOG_DEPRECATED_IGNORED324,11050
#define ER_UPDATE_LOG_DEPRECATED_TRANSLATED ER_UPDATE_LOG_DEPRECATED_TRANSLATED325,11096
#define ER_QUERY_INTERRUPTED ER_QUERY_INTERRUPTED326,11145
#define ER_SP_WRONG_NO_OF_ARGS ER_SP_WRONG_NO_OF_ARGS327,11179
#define ER_SP_COND_MISMATCH ER_SP_COND_MISMATCH328,11215
#define ER_SP_NORETURN ER_SP_NORETURN329,11248
#define ER_SP_NORETURNEND ER_SP_NORETURNEND330,11276
#define ER_SP_BAD_CURSOR_QUERY ER_SP_BAD_CURSOR_QUERY331,11307
#define ER_SP_BAD_CURSOR_SELECT ER_SP_BAD_CURSOR_SELECT332,11343
#define ER_SP_CURSOR_MISMATCH ER_SP_CURSOR_MISMATCH333,11380
#define ER_SP_CURSOR_ALREADY_OPEN ER_SP_CURSOR_ALREADY_OPEN334,11415
#define ER_SP_CURSOR_NOT_OPEN ER_SP_CURSOR_NOT_OPEN335,11454
#define ER_SP_UNDECLARED_VAR ER_SP_UNDECLARED_VAR336,11489
#define ER_SP_WRONG_NO_OF_FETCH_ARGS ER_SP_WRONG_NO_OF_FETCH_ARGS337,11523
#define ER_SP_FETCH_NO_DATA ER_SP_FETCH_NO_DATA338,11565
#define ER_SP_DUP_PARAM ER_SP_DUP_PARAM339,11598
#define ER_SP_DUP_VAR ER_SP_DUP_VAR340,11627
#define ER_SP_DUP_COND ER_SP_DUP_COND341,11654
#define ER_SP_DUP_CURS ER_SP_DUP_CURS342,11682
#define ER_SP_CANT_ALTER ER_SP_CANT_ALTER343,11710
#define ER_SP_SUBSELECT_NYI ER_SP_SUBSELECT_NYI344,11740
#define ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG345,11773
#define ER_SP_VARCOND_AFTER_CURSHNDLR ER_SP_VARCOND_AFTER_CURSHNDLR346,11819
#define ER_SP_CURSOR_AFTER_HANDLER ER_SP_CURSOR_AFTER_HANDLER347,11862
#define ER_SP_CASE_NOT_FOUND ER_SP_CASE_NOT_FOUND348,11902
#define ER_FPARSER_TOO_BIG_FILE ER_FPARSER_TOO_BIG_FILE349,11936
#define ER_FPARSER_BAD_HEADER ER_FPARSER_BAD_HEADER350,11973
#define ER_FPARSER_EOF_IN_COMMENT ER_FPARSER_EOF_IN_COMMENT351,12008
#define ER_FPARSER_ERROR_IN_PARAMETER ER_FPARSER_ERROR_IN_PARAMETER352,12047
#define ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER353,12090
#define ER_VIEW_NO_EXPLAIN ER_VIEW_NO_EXPLAIN354,12139
#define ER_FRM_UNKNOWN_TYPE ER_FRM_UNKNOWN_TYPE355,12171
#define ER_WRONG_OBJECT ER_WRONG_OBJECT356,12204
#define ER_NONUPDATEABLE_COLUMN ER_NONUPDATEABLE_COLUMN357,12233
#define ER_VIEW_SELECT_DERIVED_UNUSED ER_VIEW_SELECT_DERIVED_UNUSED358,12270
#define ER_VIEW_SELECT_CLAUSE ER_VIEW_SELECT_CLAUSE359,12313
#define ER_VIEW_SELECT_VARIABLE ER_VIEW_SELECT_VARIABLE360,12348
#define ER_VIEW_SELECT_TMPTABLE ER_VIEW_SELECT_TMPTABLE361,12385
#define ER_VIEW_WRONG_LIST ER_VIEW_WRONG_LIST362,12422
#define ER_WARN_VIEW_MERGE ER_WARN_VIEW_MERGE363,12454
#define ER_WARN_VIEW_WITHOUT_KEY ER_WARN_VIEW_WITHOUT_KEY364,12486
#define ER_VIEW_INVALID ER_VIEW_INVALID365,12524
#define ER_SP_NO_DROP_SP ER_SP_NO_DROP_SP366,12553
#define ER_SP_GOTO_IN_HNDLR ER_SP_GOTO_IN_HNDLR367,12583
#define ER_TRG_ALREADY_EXISTS ER_TRG_ALREADY_EXISTS368,12616
#define ER_TRG_DOES_NOT_EXIST ER_TRG_DOES_NOT_EXIST369,12651
#define ER_TRG_ON_VIEW_OR_TEMP_TABLE ER_TRG_ON_VIEW_OR_TEMP_TABLE370,12686
#define ER_TRG_CANT_CHANGE_ROW ER_TRG_CANT_CHANGE_ROW371,12728
#define ER_TRG_NO_SUCH_ROW_IN_TRG ER_TRG_NO_SUCH_ROW_IN_TRG372,12764
#define ER_NO_DEFAULT_FOR_FIELD ER_NO_DEFAULT_FOR_FIELD373,12803
#define ER_DIVISION_BY_ZERO ER_DIVISION_BY_ZERO374,12840
#define ER_TRUNCATED_WRONG_VALUE_FOR_FIELD ER_TRUNCATED_WRONG_VALUE_FOR_FIELD375,12873
#define ER_ILLEGAL_VALUE_FOR_TYPE ER_ILLEGAL_VALUE_FOR_TYPE376,12921
#define ER_VIEW_NONUPD_CHECK ER_VIEW_NONUPD_CHECK377,12960
#define ER_VIEW_CHECK_FAILED ER_VIEW_CHECK_FAILED378,12994
#define ER_PROCACCESS_DENIED_ERROR ER_PROCACCESS_DENIED_ERROR379,13028
#define ER_RELAY_LOG_FAIL ER_RELAY_LOG_FAIL380,13068
#define ER_PASSWD_LENGTH ER_PASSWD_LENGTH381,13099
#define ER_UNKNOWN_TARGET_BINLOG ER_UNKNOWN_TARGET_BINLOG382,13129
#define ER_IO_ERR_LOG_INDEX_READ ER_IO_ERR_LOG_INDEX_READ383,13167
#define ER_BINLOG_PURGE_PROHIBITED ER_BINLOG_PURGE_PROHIBITED384,13205
#define ER_FSEEK_FAIL ER_FSEEK_FAIL385,13245
#define ER_BINLOG_PURGE_FATAL_ERR ER_BINLOG_PURGE_FATAL_ERR386,13272
#define ER_LOG_IN_USE ER_LOG_IN_USE387,13311
#define ER_LOG_PURGE_UNKNOWN_ERR ER_LOG_PURGE_UNKNOWN_ERR388,13338
#define ER_RELAY_LOG_INIT ER_RELAY_LOG_INIT389,13376
#define ER_NO_BINARY_LOGGING ER_NO_BINARY_LOGGING390,13407
#define ER_RESERVED_SYNTAX ER_RESERVED_SYNTAX391,13441
#define ER_WSAS_FAILED ER_WSAS_FAILED392,13473
#define ER_DIFF_GROUPS_PROC ER_DIFF_GROUPS_PROC393,13501
#define ER_NO_GROUP_FOR_PROC ER_NO_GROUP_FOR_PROC394,13534
#define ER_ORDER_WITH_PROC ER_ORDER_WITH_PROC395,13568
#define ER_LOGGING_PROHIBIT_CHANGING_OF ER_LOGGING_PROHIBIT_CHANGING_OF396,13600
#define ER_NO_FILE_MAPPING ER_NO_FILE_MAPPING397,13645
#define ER_WRONG_MAGIC ER_WRONG_MAGIC398,13677
#define ER_PS_MANY_PARAM ER_PS_MANY_PARAM399,13705
#define ER_KEY_PART_0 ER_KEY_PART_0400,13735
#define ER_VIEW_CHECKSUM ER_VIEW_CHECKSUM401,13762
#define ER_VIEW_MULTIUPDATE ER_VIEW_MULTIUPDATE402,13792
#define ER_VIEW_NO_INSERT_FIELD_LIST ER_VIEW_NO_INSERT_FIELD_LIST403,13825
#define ER_VIEW_DELETE_MERGE_VIEW ER_VIEW_DELETE_MERGE_VIEW404,13867
#define ER_CANNOT_USER ER_CANNOT_USER405,13906
#define ER_XAER_NOTA ER_XAER_NOTA406,13934
#define ER_XAER_INVAL ER_XAER_INVAL407,13960
#define ER_XAER_RMFAIL ER_XAER_RMFAIL408,13987
#define ER_XAER_OUTSIDE ER_XAER_OUTSIDE409,14015
#define ER_XAER_RMERR ER_XAER_RMERR410,14044
#define ER_XA_RBROLLBACK ER_XA_RBROLLBACK411,14071
#define ER_NONEXISTING_PROC_GRANT ER_NONEXISTING_PROC_GRANT412,14101
#define ER_PROC_AUTO_GRANT_FAIL ER_PROC_AUTO_GRANT_FAIL413,14140
#define ER_PROC_AUTO_REVOKE_FAIL ER_PROC_AUTO_REVOKE_FAIL414,14177
#define ER_DATA_TOO_LONG ER_DATA_TOO_LONG415,14215
#define ER_SP_BAD_SQLSTATE ER_SP_BAD_SQLSTATE416,14245
#define ER_STARTUP ER_STARTUP417,14277
#define ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR418,14301
#define ER_CANT_CREATE_USER_WITH_GRANT ER_CANT_CREATE_USER_WITH_GRANT419,14350
#define ER_WRONG_VALUE_FOR_TYPE ER_WRONG_VALUE_FOR_TYPE420,14394
#define ER_TABLE_DEF_CHANGED ER_TABLE_DEF_CHANGED421,14431
#define ER_SP_DUP_HANDLER ER_SP_DUP_HANDLER422,14465
#define ER_SP_NOT_VAR_ARG ER_SP_NOT_VAR_ARG423,14496
#define ER_SP_NO_RETSET ER_SP_NO_RETSET424,14527
#define ER_CANT_CREATE_GEOMETRY_OBJECT ER_CANT_CREATE_GEOMETRY_OBJECT425,14556
#define ER_FAILED_ROUTINE_BREAK_BINLOG ER_FAILED_ROUTINE_BREAK_BINLOG426,14600
#define ER_BINLOG_UNSAFE_ROUTINE ER_BINLOG_UNSAFE_ROUTINE427,14644
#define ER_BINLOG_CREATE_ROUTINE_NEED_SUPER ER_BINLOG_CREATE_ROUTINE_NEED_SUPER428,14682
#define ER_EXEC_STMT_WITH_OPEN_CURSOR ER_EXEC_STMT_WITH_OPEN_CURSOR429,14731
#define ER_STMT_HAS_NO_OPEN_CURSOR ER_STMT_HAS_NO_OPEN_CURSOR430,14774
#define ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG431,14814
#define ER_NO_DEFAULT_FOR_VIEW_FIELD ER_NO_DEFAULT_FOR_VIEW_FIELD432,14862
#define ER_SP_NO_RECURSION ER_SP_NO_RECURSION433,14904
#define ER_TOO_BIG_SCALE ER_TOO_BIG_SCALE434,14936
#define ER_TOO_BIG_PRECISION ER_TOO_BIG_PRECISION435,14966
#define ER_M_BIGGER_THAN_D ER_M_BIGGER_THAN_D436,15000
#define ER_WRONG_LOCK_OF_SYSTEM_TABLE ER_WRONG_LOCK_OF_SYSTEM_TABLE437,15032
#define ER_CONNECT_TO_FOREIGN_DATA_SOURCE ER_CONNECT_TO_FOREIGN_DATA_SOURCE438,15075
#define ER_QUERY_ON_FOREIGN_DATA_SOURCE ER_QUERY_ON_FOREIGN_DATA_SOURCE439,15122
#define ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST440,15167
#define ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE441,15216
#define ER_FOREIGN_DATA_STRING_INVALID ER_FOREIGN_DATA_STRING_INVALID442,15272
#define ER_CANT_CREATE_FEDERATED_TABLE ER_CANT_CREATE_FEDERATED_TABLE443,15316
#define ER_TRG_IN_WRONG_SCHEMA ER_TRG_IN_WRONG_SCHEMA444,15360
#define ER_STACK_OVERRUN_NEED_MORE ER_STACK_OVERRUN_NEED_MORE445,15396
#define ER_TOO_LONG_BODY ER_TOO_LONG_BODY446,15436
#define ER_WARN_CANT_DROP_DEFAULT_KEYCACHE ER_WARN_CANT_DROP_DEFAULT_KEYCACHE447,15466
#define ER_TOO_BIG_DISPLAYWIDTH ER_TOO_BIG_DISPLAYWIDTH448,15514
#define ER_XAER_DUPID ER_XAER_DUPID449,15551
#define ER_DATETIME_FUNCTION_OVERFLOW ER_DATETIME_FUNCTION_OVERFLOW450,15578
#define ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG451,15621
#define ER_VIEW_PREVENT_UPDATE ER_VIEW_PREVENT_UPDATE452,15673
#define ER_PS_NO_RECURSION ER_PS_NO_RECURSION453,15709
#define ER_SP_CANT_SET_AUTOCOMMIT ER_SP_CANT_SET_AUTOCOMMIT454,15741
#define ER_MALFORMED_DEFINER ER_MALFORMED_DEFINER455,15780
#define ER_VIEW_FRM_NO_USER ER_VIEW_FRM_NO_USER456,15814
#define ER_VIEW_OTHER_USER ER_VIEW_OTHER_USER457,15847
#define ER_NO_SUCH_USER ER_NO_SUCH_USER458,15879
#define ER_FORBID_SCHEMA_CHANGE ER_FORBID_SCHEMA_CHANGE459,15908
#define ER_ROW_IS_REFERENCED_2 ER_ROW_IS_REFERENCED_2460,15945
#define ER_NO_REFERENCED_ROW_2 ER_NO_REFERENCED_ROW_2461,15981
#define ER_SP_BAD_VAR_SHADOW ER_SP_BAD_VAR_SHADOW462,16017
#define ER_TRG_NO_DEFINER ER_TRG_NO_DEFINER463,16051
#define ER_OLD_FILE_FORMAT ER_OLD_FILE_FORMAT464,16082
#define ER_SP_RECURSION_LIMIT ER_SP_RECURSION_LIMIT465,16114
#define ER_SP_PROC_TABLE_CORRUPT ER_SP_PROC_TABLE_CORRUPT466,16149
#define ER_SP_WRONG_NAME ER_SP_WRONG_NAME467,16187
#define ER_TABLE_NEEDS_UPGRADE ER_TABLE_NEEDS_UPGRADE468,16217
#define ER_SP_NO_AGGREGATE ER_SP_NO_AGGREGATE469,16253
#define ER_MAX_PREPARED_STMT_COUNT_REACHED ER_MAX_PREPARED_STMT_COUNT_REACHED470,16285
#define ER_VIEW_RECURSIVE ER_VIEW_RECURSIVE471,16333
#define ER_NON_GROUPING_FIELD_USED ER_NON_GROUPING_FIELD_USED472,16364
#define ER_TABLE_CANT_HANDLE_SPKEYS ER_TABLE_CANT_HANDLE_SPKEYS473,16404
#define ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA474,16445
#define ER_REMOVED_SPACES ER_REMOVED_SPACES475,16490
#define ER_AUTOINC_READ_FAILED ER_AUTOINC_READ_FAILED476,16521
#define ER_USERNAME ER_USERNAME477,16557
#define ER_HOSTNAME ER_HOSTNAME478,16582
#define ER_WRONG_STRING_LENGTH ER_WRONG_STRING_LENGTH479,16607
#define ER_NON_INSERTABLE_TABLE ER_NON_INSERTABLE_TABLE480,16643
#define ER_ADMIN_WRONG_MRG_TABLE ER_ADMIN_WRONG_MRG_TABLE481,16680
#define ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT482,16718
#define ER_NAME_BECOMES_EMPTY ER_NAME_BECOMES_EMPTY483,16771
#define ER_AMBIGUOUS_FIELD_TERM ER_AMBIGUOUS_FIELD_TERM484,16806
#define ER_FOREIGN_SERVER_EXISTS ER_FOREIGN_SERVER_EXISTS485,16843
#define ER_FOREIGN_SERVER_DOESNT_EXIST ER_FOREIGN_SERVER_DOESNT_EXIST486,16881
#define ER_ILLEGAL_HA_CREATE_OPTION ER_ILLEGAL_HA_CREATE_OPTION487,16925
#define ER_PARTITION_REQUIRES_VALUES_ERROR ER_PARTITION_REQUIRES_VALUES_ERROR488,16966
#define ER_PARTITION_WRONG_VALUES_ERROR ER_PARTITION_WRONG_VALUES_ERROR489,17014
#define ER_PARTITION_MAXVALUE_ERROR ER_PARTITION_MAXVALUE_ERROR490,17059
#define ER_PARTITION_SUBPARTITION_ERROR ER_PARTITION_SUBPARTITION_ERROR491,17100
#define ER_PARTITION_SUBPART_MIX_ERROR ER_PARTITION_SUBPART_MIX_ERROR492,17145
#define ER_PARTITION_WRONG_NO_PART_ERROR ER_PARTITION_WRONG_NO_PART_ERROR493,17189
#define ER_PARTITION_WRONG_NO_SUBPART_ERROR ER_PARTITION_WRONG_NO_SUBPART_ERROR494,17235
#define ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR495,17284
#define ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR496,17335
#define ER_FIELD_NOT_FOUND_PART_ERROR ER_FIELD_NOT_FOUND_PART_ERROR497,17388
#define ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR498,17431
#define ER_INCONSISTENT_PARTITION_INFO_ERROR ER_INCONSISTENT_PARTITION_INFO_ERROR499,17481
#define ER_PARTITION_FUNC_NOT_ALLOWED_ERROR ER_PARTITION_FUNC_NOT_ALLOWED_ERROR500,17531
#define ER_PARTITIONS_MUST_BE_DEFINED_ERROR ER_PARTITIONS_MUST_BE_DEFINED_ERROR501,17580
#define ER_RANGE_NOT_INCREASING_ERROR ER_RANGE_NOT_INCREASING_ERROR502,17629
#define ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR503,17672
#define ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR504,17725
#define ER_PARTITION_ENTRY_ERROR ER_PARTITION_ENTRY_ERROR505,17779
#define ER_MIX_HANDLER_ERROR ER_MIX_HANDLER_ERROR506,17817
#define ER_PARTITION_NOT_DEFINED_ERROR ER_PARTITION_NOT_DEFINED_ERROR507,17851
#define ER_TOO_MANY_PARTITIONS_ERROR ER_TOO_MANY_PARTITIONS_ERROR508,17895
#define ER_SUBPARTITION_ERROR ER_SUBPARTITION_ERROR509,17937
#define ER_CANT_CREATE_HANDLER_FILE ER_CANT_CREATE_HANDLER_FILE510,17972
#define ER_BLOB_FIELD_IN_PART_FUNC_ERROR ER_BLOB_FIELD_IN_PART_FUNC_ERROR511,18013
#define ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF512,18059
#define ER_NO_PARTS_ERROR ER_NO_PARTS_ERROR513,18108
#define ER_PARTITION_MGMT_ON_NONPARTITIONED ER_PARTITION_MGMT_ON_NONPARTITIONED514,18139
#define ER_FOREIGN_KEY_ON_PARTITIONED ER_FOREIGN_KEY_ON_PARTITIONED515,18188
#define ER_DROP_PARTITION_NON_EXISTENT ER_DROP_PARTITION_NON_EXISTENT516,18231
#define ER_DROP_LAST_PARTITION ER_DROP_LAST_PARTITION517,18275
#define ER_COALESCE_ONLY_ON_HASH_PARTITION ER_COALESCE_ONLY_ON_HASH_PARTITION518,18311
#define ER_REORG_HASH_ONLY_ON_SAME_NO ER_REORG_HASH_ONLY_ON_SAME_NO519,18359
#define ER_REORG_NO_PARAM_ERROR ER_REORG_NO_PARAM_ERROR520,18402
#define ER_ONLY_ON_RANGE_LIST_PARTITION ER_ONLY_ON_RANGE_LIST_PARTITION521,18439
#define ER_ADD_PARTITION_SUBPART_ERROR ER_ADD_PARTITION_SUBPART_ERROR522,18484
#define ER_ADD_PARTITION_NO_NEW_PARTITION ER_ADD_PARTITION_NO_NEW_PARTITION523,18528
#define ER_COALESCE_PARTITION_NO_PARTITION ER_COALESCE_PARTITION_NO_PARTITION524,18575
#define ER_REORG_PARTITION_NOT_EXIST ER_REORG_PARTITION_NOT_EXIST525,18623
#define ER_SAME_NAME_PARTITION ER_SAME_NAME_PARTITION526,18665
#define ER_NO_BINLOG_ERROR ER_NO_BINLOG_ERROR527,18701
#define ER_CONSECUTIVE_REORG_PARTITIONS ER_CONSECUTIVE_REORG_PARTITIONS528,18733
#define ER_REORG_OUTSIDE_RANGE ER_REORG_OUTSIDE_RANGE529,18778
#define ER_PARTITION_FUNCTION_FAILURE ER_PARTITION_FUNCTION_FAILURE530,18814
#define ER_PART_STATE_ERROR ER_PART_STATE_ERROR531,18857
#define ER_LIMITED_PART_RANGE ER_LIMITED_PART_RANGE532,18890
#define ER_PLUGIN_IS_NOT_LOADED ER_PLUGIN_IS_NOT_LOADED533,18925
#define ER_WRONG_VALUE ER_WRONG_VALUE534,18962
#define ER_NO_PARTITION_FOR_GIVEN_VALUE ER_NO_PARTITION_FOR_GIVEN_VALUE535,18990
#define ER_FILEGROUP_OPTION_ONLY_ONCE ER_FILEGROUP_OPTION_ONLY_ONCE536,19035
#define ER_CREATE_FILEGROUP_FAILED ER_CREATE_FILEGROUP_FAILED537,19078
#define ER_DROP_FILEGROUP_FAILED ER_DROP_FILEGROUP_FAILED538,19118
#define ER_TABLESPACE_AUTO_EXTEND_ERROR ER_TABLESPACE_AUTO_EXTEND_ERROR539,19156
#define ER_WRONG_SIZE_NUMBER ER_WRONG_SIZE_NUMBER540,19201
#define ER_SIZE_OVERFLOW_ERROR ER_SIZE_OVERFLOW_ERROR541,19235
#define ER_ALTER_FILEGROUP_FAILED ER_ALTER_FILEGROUP_FAILED542,19271
#define ER_BINLOG_ROW_LOGGING_FAILED ER_BINLOG_ROW_LOGGING_FAILED543,19310
#define ER_BINLOG_ROW_WRONG_TABLE_DEF ER_BINLOG_ROW_WRONG_TABLE_DEF544,19352
#define ER_BINLOG_ROW_RBR_TO_SBR ER_BINLOG_ROW_RBR_TO_SBR545,19395
#define ER_EVENT_ALREADY_EXISTS ER_EVENT_ALREADY_EXISTS546,19433
#define ER_EVENT_STORE_FAILED ER_EVENT_STORE_FAILED547,19470
#define ER_EVENT_DOES_NOT_EXIST ER_EVENT_DOES_NOT_EXIST548,19505
#define ER_EVENT_CANT_ALTER ER_EVENT_CANT_ALTER549,19542
#define ER_EVENT_DROP_FAILED ER_EVENT_DROP_FAILED550,19575
#define ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG551,19609
#define ER_EVENT_ENDS_BEFORE_STARTS ER_EVENT_ENDS_BEFORE_STARTS552,19664
#define ER_EVENT_EXEC_TIME_IN_THE_PAST ER_EVENT_EXEC_TIME_IN_THE_PAST553,19705
#define ER_EVENT_OPEN_TABLE_FAILED ER_EVENT_OPEN_TABLE_FAILED554,19749
#define ER_EVENT_NEITHER_M_EXPR_NOR_M_AT ER_EVENT_NEITHER_M_EXPR_NOR_M_AT555,19789
#define ER_OBSOLETE_COL_COUNT_DOESNT_MATCH_CORRUPTED ER_OBSOLETE_COL_COUNT_DOESNT_MATCH_CORRUPTED556,19835
#define ER_OBSOLETE_CANNOT_LOAD_FROM_TABLE ER_OBSOLETE_CANNOT_LOAD_FROM_TABLE557,19893
#define ER_EVENT_CANNOT_DELETE ER_EVENT_CANNOT_DELETE558,19941
#define ER_EVENT_COMPILE_ERROR ER_EVENT_COMPILE_ERROR559,19977
#define ER_EVENT_SAME_NAME ER_EVENT_SAME_NAME560,20013
#define ER_EVENT_DATA_TOO_LONG ER_EVENT_DATA_TOO_LONG561,20045
#define ER_DROP_INDEX_FK ER_DROP_INDEX_FK562,20081
#define ER_WARN_DEPRECATED_SYNTAX_WITH_VER ER_WARN_DEPRECATED_SYNTAX_WITH_VER563,20111
#define ER_CANT_WRITE_LOCK_LOG_TABLE ER_CANT_WRITE_LOCK_LOG_TABLE564,20159
#define ER_CANT_LOCK_LOG_TABLE ER_CANT_LOCK_LOG_TABLE565,20201
#define ER_FOREIGN_DUPLICATE_KEY_OLD_UNUSED ER_FOREIGN_DUPLICATE_KEY_OLD_UNUSED566,20237
#define ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE567,20286
#define ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR568,20339
#define ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT569,20393
#define ER_NDB_CANT_SWITCH_BINLOG_FORMAT ER_NDB_CANT_SWITCH_BINLOG_FORMAT570,20455
#define ER_PARTITION_NO_TEMPORARY ER_PARTITION_NO_TEMPORARY571,20501
#define ER_PARTITION_CONST_DOMAIN_ERROR ER_PARTITION_CONST_DOMAIN_ERROR572,20540
#define ER_PARTITION_FUNCTION_IS_NOT_ALLOWED ER_PARTITION_FUNCTION_IS_NOT_ALLOWED573,20585
#define ER_DDL_LOG_ERROR ER_DDL_LOG_ERROR574,20635
#define ER_NULL_IN_VALUES_LESS_THAN ER_NULL_IN_VALUES_LESS_THAN575,20665
#define ER_WRONG_PARTITION_NAME ER_WRONG_PARTITION_NAME576,20706
#define ER_CANT_CHANGE_TX_CHARACTERISTICS ER_CANT_CHANGE_TX_CHARACTERISTICS577,20743
#define ER_DUP_ENTRY_AUTOINCREMENT_CASE ER_DUP_ENTRY_AUTOINCREMENT_CASE578,20790
#define ER_EVENT_MODIFY_QUEUE_ERROR ER_EVENT_MODIFY_QUEUE_ERROR579,20835
#define ER_EVENT_SET_VAR_ERROR ER_EVENT_SET_VAR_ERROR580,20876
#define ER_PARTITION_MERGE_ERROR ER_PARTITION_MERGE_ERROR581,20912
#define ER_CANT_ACTIVATE_LOG ER_CANT_ACTIVATE_LOG582,20950
#define ER_RBR_NOT_AVAILABLE ER_RBR_NOT_AVAILABLE583,20984
#define ER_BASE64_DECODE_ERROR ER_BASE64_DECODE_ERROR584,21018
#define ER_EVENT_RECURSION_FORBIDDEN ER_EVENT_RECURSION_FORBIDDEN585,21054
#define ER_EVENTS_DB_ERROR ER_EVENTS_DB_ERROR586,21096
#define ER_ONLY_INTEGERS_ALLOWED ER_ONLY_INTEGERS_ALLOWED587,21128
#define ER_UNSUPORTED_LOG_ENGINE ER_UNSUPORTED_LOG_ENGINE588,21166
#define ER_BAD_LOG_STATEMENT ER_BAD_LOG_STATEMENT589,21204
#define ER_CANT_RENAME_LOG_TABLE ER_CANT_RENAME_LOG_TABLE590,21238
#define ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT591,21276
#define ER_WRONG_PARAMETERS_TO_NATIVE_FCT ER_WRONG_PARAMETERS_TO_NATIVE_FCT592,21323
#define ER_WRONG_PARAMETERS_TO_STORED_FCT ER_WRONG_PARAMETERS_TO_STORED_FCT593,21370
#define ER_NATIVE_FCT_NAME_COLLISION ER_NATIVE_FCT_NAME_COLLISION594,21417
#define ER_DUP_ENTRY_WITH_KEY_NAME ER_DUP_ENTRY_WITH_KEY_NAME595,21459
#define ER_BINLOG_PURGE_EMFILE ER_BINLOG_PURGE_EMFILE596,21499
#define ER_EVENT_CANNOT_CREATE_IN_THE_PAST ER_EVENT_CANNOT_CREATE_IN_THE_PAST597,21535
#define ER_EVENT_CANNOT_ALTER_IN_THE_PAST ER_EVENT_CANNOT_ALTER_IN_THE_PAST598,21583
#define ER_SLAVE_INCIDENT ER_SLAVE_INCIDENT599,21630
#define ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT600,21661
#define ER_BINLOG_UNSAFE_STATEMENT ER_BINLOG_UNSAFE_STATEMENT601,21713
#define ER_SLAVE_FATAL_ERROR ER_SLAVE_FATAL_ERROR602,21753
#define ER_SLAVE_RELAY_LOG_READ_FAILURE ER_SLAVE_RELAY_LOG_READ_FAILURE603,21787
#define ER_SLAVE_RELAY_LOG_WRITE_FAILURE ER_SLAVE_RELAY_LOG_WRITE_FAILURE604,21832
#define ER_SLAVE_CREATE_EVENT_FAILURE ER_SLAVE_CREATE_EVENT_FAILURE605,21878
#define ER_SLAVE_MASTER_COM_FAILURE ER_SLAVE_MASTER_COM_FAILURE606,21921
#define ER_BINLOG_LOGGING_IMPOSSIBLE ER_BINLOG_LOGGING_IMPOSSIBLE607,21962
#define ER_VIEW_NO_CREATION_CTX ER_VIEW_NO_CREATION_CTX608,22004
#define ER_VIEW_INVALID_CREATION_CTX ER_VIEW_INVALID_CREATION_CTX609,22041
#define ER_SR_INVALID_CREATION_CTX ER_SR_INVALID_CREATION_CTX610,22083
#define ER_TRG_CORRUPTED_FILE ER_TRG_CORRUPTED_FILE611,22123
#define ER_TRG_NO_CREATION_CTX ER_TRG_NO_CREATION_CTX612,22158
#define ER_TRG_INVALID_CREATION_CTX ER_TRG_INVALID_CREATION_CTX613,22194
#define ER_EVENT_INVALID_CREATION_CTX ER_EVENT_INVALID_CREATION_CTX614,22235
#define ER_TRG_CANT_OPEN_TABLE ER_TRG_CANT_OPEN_TABLE615,22278
#define ER_CANT_CREATE_SROUTINE ER_CANT_CREATE_SROUTINE616,22314
#define ER_NEVER_USED ER_NEVER_USED617,22351
#define ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT618,22378
#define ER_SLAVE_CORRUPT_EVENT ER_SLAVE_CORRUPT_EVENT619,22446
#define ER_LOAD_DATA_INVALID_COLUMN_UNUSED ER_LOAD_DATA_INVALID_COLUMN_UNUSED620,22482
#define ER_LOG_PURGE_NO_FILE ER_LOG_PURGE_NO_FILE621,22530
#define ER_XA_RBTIMEOUT ER_XA_RBTIMEOUT622,22564
#define ER_XA_RBDEADLOCK ER_XA_RBDEADLOCK623,22593
#define ER_NEED_REPREPARE ER_NEED_REPREPARE624,22623
#define ER_DELAYED_NOT_SUPPORTED ER_DELAYED_NOT_SUPPORTED625,22654
#define WARN_NO_MASTER_INFO WARN_NO_MASTER_INFO626,22692
#define WARN_OPTION_IGNORED WARN_OPTION_IGNORED627,22725
#define ER_PLUGIN_DELETE_BUILTIN ER_PLUGIN_DELETE_BUILTIN628,22758
#define WARN_PLUGIN_BUSY WARN_PLUGIN_BUSY629,22796
#define ER_VARIABLE_IS_READONLY ER_VARIABLE_IS_READONLY630,22826
#define ER_WARN_ENGINE_TRANSACTION_ROLLBACK ER_WARN_ENGINE_TRANSACTION_ROLLBACK631,22863
#define ER_SLAVE_HEARTBEAT_FAILURE ER_SLAVE_HEARTBEAT_FAILURE632,22912
#define ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE633,22952
#define ER_NDB_REPLICATION_SCHEMA_ERROR ER_NDB_REPLICATION_SCHEMA_ERROR634,23003
#define ER_CONFLICT_FN_PARSE_ERROR ER_CONFLICT_FN_PARSE_ERROR635,23048
#define ER_EXCEPTIONS_WRITE_ERROR ER_EXCEPTIONS_WRITE_ERROR636,23088
#define ER_TOO_LONG_TABLE_COMMENT ER_TOO_LONG_TABLE_COMMENT637,23127
#define ER_TOO_LONG_FIELD_COMMENT ER_TOO_LONG_FIELD_COMMENT638,23166
#define ER_FUNC_INEXISTENT_NAME_COLLISION ER_FUNC_INEXISTENT_NAME_COLLISION639,23205
#define ER_DATABASE_NAME ER_DATABASE_NAME640,23252
#define ER_TABLE_NAME ER_TABLE_NAME641,23282
#define ER_PARTITION_NAME ER_PARTITION_NAME642,23309
#define ER_SUBPARTITION_NAME ER_SUBPARTITION_NAME643,23340
#define ER_TEMPORARY_NAME ER_TEMPORARY_NAME644,23374
#define ER_RENAMED_NAME ER_RENAMED_NAME645,23405
#define ER_TOO_MANY_CONCURRENT_TRXS ER_TOO_MANY_CONCURRENT_TRXS646,23434
#define WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED647,23475
#define ER_DEBUG_SYNC_TIMEOUT ER_DEBUG_SYNC_TIMEOUT648,23529
#define ER_DEBUG_SYNC_HIT_LIMIT ER_DEBUG_SYNC_HIT_LIMIT649,23564
#define ER_DUP_SIGNAL_SET ER_DUP_SIGNAL_SET650,23601
#define ER_SIGNAL_WARN ER_SIGNAL_WARN651,23632
#define ER_SIGNAL_NOT_FOUND ER_SIGNAL_NOT_FOUND652,23660
#define ER_SIGNAL_EXCEPTION ER_SIGNAL_EXCEPTION653,23693
#define ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER654,23726
#define ER_SIGNAL_BAD_CONDITION_TYPE ER_SIGNAL_BAD_CONDITION_TYPE655,23774
#define WARN_COND_ITEM_TRUNCATED WARN_COND_ITEM_TRUNCATED656,23816
#define ER_COND_ITEM_TOO_LONG ER_COND_ITEM_TOO_LONG657,23854
#define ER_UNKNOWN_LOCALE ER_UNKNOWN_LOCALE658,23889
#define ER_SLAVE_IGNORE_SERVER_IDS ER_SLAVE_IGNORE_SERVER_IDS659,23920
#define ER_QUERY_CACHE_DISABLED ER_QUERY_CACHE_DISABLED660,23960
#define ER_SAME_NAME_PARTITION_FIELD ER_SAME_NAME_PARTITION_FIELD661,23997
#define ER_PARTITION_COLUMN_LIST_ERROR ER_PARTITION_COLUMN_LIST_ERROR662,24039
#define ER_WRONG_TYPE_COLUMN_VALUE_ERROR ER_WRONG_TYPE_COLUMN_VALUE_ERROR663,24083
#define ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR664,24129
#define ER_MAXVALUE_IN_VALUES_IN ER_MAXVALUE_IN_VALUES_IN665,24182
#define ER_TOO_MANY_VALUES_ERROR ER_TOO_MANY_VALUES_ERROR666,24220
#define ER_ROW_SINGLE_PARTITION_FIELD_ERROR ER_ROW_SINGLE_PARTITION_FIELD_ERROR667,24258
#define ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD668,24307
#define ER_PARTITION_FIELDS_TOO_LONG ER_PARTITION_FIELDS_TOO_LONG669,24365
#define ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE670,24407
#define ER_BINLOG_ROW_MODE_AND_STMT_ENGINE ER_BINLOG_ROW_MODE_AND_STMT_ENGINE671,24457
#define ER_BINLOG_UNSAFE_AND_STMT_ENGINE ER_BINLOG_UNSAFE_AND_STMT_ENGINE672,24505
#define ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE673,24551
#define ER_BINLOG_STMT_MODE_AND_ROW_ENGINE ER_BINLOG_STMT_MODE_AND_ROW_ENGINE674,24604
#define ER_BINLOG_ROW_INJECTION_AND_STMT_MODE ER_BINLOG_ROW_INJECTION_AND_STMT_MODE675,24652
#define ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE676,24703
#define ER_BINLOG_UNSAFE_LIMIT ER_BINLOG_UNSAFE_LIMIT677,24767
#define ER_UNUSED4 ER_UNUSED4678,24803
#define ER_BINLOG_UNSAFE_SYSTEM_TABLE ER_BINLOG_UNSAFE_SYSTEM_TABLE679,24827
#define ER_BINLOG_UNSAFE_AUTOINC_COLUMNS ER_BINLOG_UNSAFE_AUTOINC_COLUMNS680,24870
#define ER_BINLOG_UNSAFE_UDF ER_BINLOG_UNSAFE_UDF681,24916
#define ER_BINLOG_UNSAFE_SYSTEM_VARIABLE ER_BINLOG_UNSAFE_SYSTEM_VARIABLE682,24950
#define ER_BINLOG_UNSAFE_SYSTEM_FUNCTION ER_BINLOG_UNSAFE_SYSTEM_FUNCTION683,24996
#define ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS684,25042
#define ER_MESSAGE_AND_STATEMENT ER_MESSAGE_AND_STATEMENT685,25093
#define ER_SLAVE_CONVERSION_FAILED ER_SLAVE_CONVERSION_FAILED686,25131
#define ER_SLAVE_CANT_CREATE_CONVERSION ER_SLAVE_CANT_CREATE_CONVERSION687,25171
#define ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT688,25216
#define ER_PATH_LENGTH ER_PATH_LENGTH689,25281
#define ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT690,25309
#define ER_WRONG_NATIVE_TABLE_STRUCTURE ER_WRONG_NATIVE_TABLE_STRUCTURE691,25363
#define ER_WRONG_PERFSCHEMA_USAGE ER_WRONG_PERFSCHEMA_USAGE692,25408
#define ER_WARN_I_S_SKIPPED_TABLE ER_WARN_I_S_SKIPPED_TABLE693,25447
#define ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT694,25486
#define ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT695,25551
#define ER_SPATIAL_MUST_HAVE_GEOM_COL ER_SPATIAL_MUST_HAVE_GEOM_COL696,25613
#define ER_TOO_LONG_INDEX_COMMENT ER_TOO_LONG_INDEX_COMMENT697,25656
#define ER_LOCK_ABORTED ER_LOCK_ABORTED698,25695
#define ER_DATA_OUT_OF_RANGE ER_DATA_OUT_OF_RANGE699,25724
#define ER_WRONG_SPVAR_TYPE_IN_LIMIT ER_WRONG_SPVAR_TYPE_IN_LIMIT700,25758
#define ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE701,25800
#define ER_BINLOG_UNSAFE_MIXED_STATEMENT ER_BINLOG_UNSAFE_MIXED_STATEMENT702,25871
#define ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN703,25917
#define ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN704,25980
#define ER_FAILED_READ_FROM_PAR_FILE ER_FAILED_READ_FROM_PAR_FILE705,26040
#define ER_VALUES_IS_NOT_INT_TYPE_ERROR ER_VALUES_IS_NOT_INT_TYPE_ERROR706,26082
#define ER_ACCESS_DENIED_NO_PASSWORD_ERROR ER_ACCESS_DENIED_NO_PASSWORD_ERROR707,26127
#define ER_SET_PASSWORD_AUTH_PLUGIN ER_SET_PASSWORD_AUTH_PLUGIN708,26175
#define ER_GRANT_PLUGIN_USER_EXISTS ER_GRANT_PLUGIN_USER_EXISTS709,26216
#define ER_TRUNCATE_ILLEGAL_FK ER_TRUNCATE_ILLEGAL_FK710,26257
#define ER_PLUGIN_IS_PERMANENT ER_PLUGIN_IS_PERMANENT711,26293
#define ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN712,26329
#define ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX713,26384
#define ER_STMT_CACHE_FULL ER_STMT_CACHE_FULL714,26439
#define ER_MULTI_UPDATE_KEY_CONFLICT ER_MULTI_UPDATE_KEY_CONFLICT715,26471
#define ER_TABLE_NEEDS_REBUILD ER_TABLE_NEEDS_REBUILD716,26513
#define WARN_OPTION_BELOW_LIMIT WARN_OPTION_BELOW_LIMIT717,26549
#define ER_INDEX_COLUMN_TOO_LONG ER_INDEX_COLUMN_TOO_LONG718,26586
#define ER_ERROR_IN_TRIGGER_BODY ER_ERROR_IN_TRIGGER_BODY719,26624
#define ER_ERROR_IN_UNKNOWN_TRIGGER_BODY ER_ERROR_IN_UNKNOWN_TRIGGER_BODY720,26662
#define ER_INDEX_CORRUPT ER_INDEX_CORRUPT721,26708
#define ER_UNDO_RECORD_TOO_BIG ER_UNDO_RECORD_TOO_BIG722,26738
#define ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT723,26774
#define ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE724,26825
#define ER_BINLOG_UNSAFE_REPLACE_SELECT ER_BINLOG_UNSAFE_REPLACE_SELECT725,26876
#define ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT726,26921
#define ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT727,26972
#define ER_BINLOG_UNSAFE_UPDATE_IGNORE ER_BINLOG_UNSAFE_UPDATE_IGNORE728,27024
#define ER_PLUGIN_NO_UNINSTALL ER_PLUGIN_NO_UNINSTALL729,27068
#define ER_PLUGIN_NO_INSTALL ER_PLUGIN_NO_INSTALL730,27104
#define ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT731,27138
#define ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC732,27189
#define ER_BINLOG_UNSAFE_INSERT_TWO_KEYS ER_BINLOG_UNSAFE_INSERT_TWO_KEYS733,27241
#define ER_TABLE_IN_FK_CHECK ER_TABLE_IN_FK_CHECK734,27287
#define ER_UNSUPPORTED_ENGINE ER_UNSUPPORTED_ENGINE735,27321
#define ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST736,27356
#define ER_CANNOT_LOAD_FROM_TABLE_V2 ER_CANNOT_LOAD_FROM_TABLE_V2737,27404
#define ER_MASTER_DELAY_VALUE_OUT_OF_RANGE ER_MASTER_DELAY_VALUE_OUT_OF_RANGE738,27446
#define ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT739,27494
#define ER_PARTITION_EXCHANGE_DIFFERENT_OPTION ER_PARTITION_EXCHANGE_DIFFERENT_OPTION740,27561
#define ER_PARTITION_EXCHANGE_PART_TABLE ER_PARTITION_EXCHANGE_PART_TABLE741,27613
#define ER_PARTITION_EXCHANGE_TEMP_TABLE ER_PARTITION_EXCHANGE_TEMP_TABLE742,27659
#define ER_PARTITION_INSTEAD_OF_SUBPARTITION ER_PARTITION_INSTEAD_OF_SUBPARTITION743,27705
#define ER_UNKNOWN_PARTITION ER_UNKNOWN_PARTITION744,27755
#define ER_TABLES_DIFFERENT_METADATA ER_TABLES_DIFFERENT_METADATA745,27789
#define ER_ROW_DOES_NOT_MATCH_PARTITION ER_ROW_DOES_NOT_MATCH_PARTITION746,27831
#define ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX747,27876
#define ER_WARN_INDEX_NOT_APPLICABLE ER_WARN_INDEX_NOT_APPLICABLE748,27927
#define ER_PARTITION_EXCHANGE_FOREIGN_KEY ER_PARTITION_EXCHANGE_FOREIGN_KEY749,27969
#define ER_NO_SUCH_KEY_VALUE ER_NO_SUCH_KEY_VALUE750,28016
#define ER_RPL_INFO_DATA_TOO_LONG ER_RPL_INFO_DATA_TOO_LONG751,28050
#define ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE752,28089
#define ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE753,28141
#define ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX754,28192
#define ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT755,28248
#define ER_PARTITION_CLAUSE_ON_NONPARTITIONED ER_PARTITION_CLAUSE_ON_NONPARTITIONED756,28305
#define ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET757,28356
#define ER_NO_SUCH_PARTITION__UNUSED ER_NO_SUCH_PARTITION__UNUSED758,28411
#define ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE759,28453
#define ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE760,28504
#define ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE761,28574
#define ER_MTS_FEATURE_IS_NOT_SUPPORTED ER_MTS_FEATURE_IS_NOT_SUPPORTED762,28644
#define ER_MTS_UPDATED_DBS_GREATER_MAX ER_MTS_UPDATED_DBS_GREATER_MAX763,28689
#define ER_MTS_CANT_PARALLEL ER_MTS_CANT_PARALLEL764,28733
#define ER_MTS_INCONSISTENT_DATA ER_MTS_INCONSISTENT_DATA765,28767
#define ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING766,28805
#define ER_DA_INVALID_CONDITION_NUMBER ER_DA_INVALID_CONDITION_NUMBER767,28862
#define ER_INSECURE_PLAIN_TEXT ER_INSECURE_PLAIN_TEXT768,28906
#define ER_INSECURE_CHANGE_MASTER ER_INSECURE_CHANGE_MASTER769,28942
#define ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO770,28981
#define ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO771,29035
#define ER_SQLTHREAD_WITH_SECURE_SLAVE ER_SQLTHREAD_WITH_SECURE_SLAVE772,29092
#define ER_TABLE_HAS_NO_FT ER_TABLE_HAS_NO_FT773,29136
#define ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER774,29168
#define ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION775,29223
#define ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST776,29276
#define ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION777,29327
#define ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION778,29380
#define ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL779,29433
#define ER_SKIPPING_LOGGED_TRANSACTION ER_SKIPPING_LOGGED_TRANSACTION780,29507
#define ER_MALFORMED_GTID_SET_SPECIFICATION ER_MALFORMED_GTID_SET_SPECIFICATION781,29551
#define ER_MALFORMED_GTID_SET_ENCODING ER_MALFORMED_GTID_SET_ENCODING782,29600
#define ER_MALFORMED_GTID_SPECIFICATION ER_MALFORMED_GTID_SPECIFICATION783,29644
#define ER_GNO_EXHAUSTED ER_GNO_EXHAUSTED784,29689
#define ER_BAD_SLAVE_AUTO_POSITION ER_BAD_SLAVE_AUTO_POSITION785,29719
#define ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF786,29759
#define ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET787,29816
#define ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON788,29885
#define ER_GTID_MODE_REQUIRES_BINLOG ER_GTID_MODE_REQUIRES_BINLOG789,29951
#define ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF790,29993
#define ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON791,30058
#define ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF792,30127
#define ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF__UNUSED ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF__UNUSED793,30201
#define ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE794,30264
#define ER_GTID_UNSAFE_CREATE_SELECT ER_GTID_UNSAFE_CREATE_SELECT795,30316
#define ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION796,30358
#define ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME797,30429
#define ER_MASTER_HAS_PURGED_REQUIRED_GTIDS ER_MASTER_HAS_PURGED_REQUIRED_GTIDS798,30490
#define ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID799,30539
#define ER_UNKNOWN_EXPLAIN_FORMAT ER_UNKNOWN_EXPLAIN_FORMAT800,30591
#define ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION801,30630
#define ER_TOO_LONG_TABLE_PARTITION_COMMENT ER_TOO_LONG_TABLE_PARTITION_COMMENT802,30684
#define ER_SLAVE_CONFIGURATION ER_SLAVE_CONFIGURATION803,30733
#define ER_INNODB_FT_LIMIT ER_INNODB_FT_LIMIT804,30769
#define ER_INNODB_NO_FT_TEMP_TABLE ER_INNODB_NO_FT_TEMP_TABLE805,30801
#define ER_INNODB_FT_WRONG_DOCID_COLUMN ER_INNODB_FT_WRONG_DOCID_COLUMN806,30841
#define ER_INNODB_FT_WRONG_DOCID_INDEX ER_INNODB_FT_WRONG_DOCID_INDEX807,30886
#define ER_INNODB_ONLINE_LOG_TOO_BIG ER_INNODB_ONLINE_LOG_TOO_BIG808,30930
#define ER_UNKNOWN_ALTER_ALGORITHM ER_UNKNOWN_ALTER_ALGORITHM809,30972
#define ER_UNKNOWN_ALTER_LOCK ER_UNKNOWN_ALTER_LOCK810,31012
#define ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS811,31047
#define ER_MTS_RECOVERY_FAILURE ER_MTS_RECOVERY_FAILURE812,31100
#define ER_MTS_RESET_WORKERS ER_MTS_RESET_WORKERS813,31137
#define ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2814,31171
#define ER_SLAVE_SILENT_RETRY_TRANSACTION ER_SLAVE_SILENT_RETRY_TRANSACTION815,31223
#define ER_DISCARD_FK_CHECKS_RUNNING ER_DISCARD_FK_CHECKS_RUNNING816,31270
#define ER_TABLE_SCHEMA_MISMATCH ER_TABLE_SCHEMA_MISMATCH817,31312
#define ER_TABLE_IN_SYSTEM_TABLESPACE ER_TABLE_IN_SYSTEM_TABLESPACE818,31350
#define ER_IO_READ_ERROR ER_IO_READ_ERROR819,31393
#define ER_IO_WRITE_ERROR ER_IO_WRITE_ERROR820,31423
#define ER_TABLESPACE_MISSING ER_TABLESPACE_MISSING821,31454
#define ER_TABLESPACE_EXISTS ER_TABLESPACE_EXISTS822,31489
#define ER_TABLESPACE_DISCARDED ER_TABLESPACE_DISCARDED823,31523
#define ER_INTERNAL_ERROR ER_INTERNAL_ERROR824,31560
#define ER_INNODB_IMPORT_ERROR ER_INNODB_IMPORT_ERROR825,31591
#define ER_INNODB_INDEX_CORRUPT ER_INNODB_INDEX_CORRUPT826,31627
#define ER_INVALID_YEAR_COLUMN_LENGTH ER_INVALID_YEAR_COLUMN_LENGTH827,31664
#define ER_NOT_VALID_PASSWORD ER_NOT_VALID_PASSWORD828,31707
#define ER_MUST_CHANGE_PASSWORD ER_MUST_CHANGE_PASSWORD829,31742
#define ER_FK_NO_INDEX_CHILD ER_FK_NO_INDEX_CHILD830,31779
#define ER_FK_NO_INDEX_PARENT ER_FK_NO_INDEX_PARENT831,31813
#define ER_FK_FAIL_ADD_SYSTEM ER_FK_FAIL_ADD_SYSTEM832,31848
#define ER_FK_CANNOT_OPEN_PARENT ER_FK_CANNOT_OPEN_PARENT833,31883
#define ER_FK_INCORRECT_OPTION ER_FK_INCORRECT_OPTION834,31921
#define ER_FK_DUP_NAME ER_FK_DUP_NAME835,31957
#define ER_PASSWORD_FORMAT ER_PASSWORD_FORMAT836,31985
#define ER_FK_COLUMN_CANNOT_DROP ER_FK_COLUMN_CANNOT_DROP837,32017
#define ER_FK_COLUMN_CANNOT_DROP_CHILD ER_FK_COLUMN_CANNOT_DROP_CHILD838,32055
#define ER_FK_COLUMN_NOT_NULL ER_FK_COLUMN_NOT_NULL839,32099
#define ER_DUP_INDEX ER_DUP_INDEX840,32134
#define ER_FK_COLUMN_CANNOT_CHANGE ER_FK_COLUMN_CANNOT_CHANGE841,32160
#define ER_FK_COLUMN_CANNOT_CHANGE_CHILD ER_FK_COLUMN_CANNOT_CHANGE_CHILD842,32200
#define ER_UNUSED5 ER_UNUSED5843,32246
#define ER_MALFORMED_PACKET ER_MALFORMED_PACKET844,32270
#define ER_READ_ONLY_MODE ER_READ_ONLY_MODE845,32303
#define ER_GTID_NEXT_TYPE_UNDEFINED_GROUP ER_GTID_NEXT_TYPE_UNDEFINED_GROUP846,32334
#define ER_VARIABLE_NOT_SETTABLE_IN_SP ER_VARIABLE_NOT_SETTABLE_IN_SP847,32381
#define ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF848,32425
#define ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY849,32484
#define ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY850,32553
#define ER_GTID_PURGED_WAS_CHANGED ER_GTID_PURGED_WAS_CHANGED851,32620
#define ER_GTID_EXECUTED_WAS_CHANGED ER_GTID_EXECUTED_WAS_CHANGED852,32660
#define ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES853,32702
#define ER_ALTER_OPERATION_NOT_SUPPORTED ER_ALTER_OPERATION_NOT_SUPPORTED854,32754
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON ER_ALTER_OPERATION_NOT_SUPPORTED_REASON855,32800
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY856,32853
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION857,32911
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME858,32974
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE859,33037
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK860,33102
#define ER_UNUSED6 ER_UNUSED6861,33164
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK862,33188
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC863,33246
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS864,33307
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS865,33371
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS866,33435
#define ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE867,33492
#define ER_DUP_UNKNOWN_IN_INDEX ER_DUP_UNKNOWN_IN_INDEX868,33557
#define ER_IDENT_CAUSES_TOO_LONG_PATH ER_IDENT_CAUSES_TOO_LONG_PATH869,33594
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL870,33637
#define ER_MUST_CHANGE_PASSWORD_LOGIN ER_MUST_CHANGE_PASSWORD_LOGIN871,33699
#define ER_ROW_IN_WRONG_PARTITION ER_ROW_IN_WRONG_PARTITION872,33742
#define ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX873,33781
#define ER_INNODB_NO_FT_USES_PARSER ER_INNODB_NO_FT_USES_PARSER874,33836
#define ER_BINLOG_LOGICAL_CORRUPTION ER_BINLOG_LOGICAL_CORRUPTION875,33877
#define ER_WARN_PURGE_LOG_IN_USE ER_WARN_PURGE_LOG_IN_USE876,33919
#define ER_WARN_PURGE_LOG_IS_ACTIVE ER_WARN_PURGE_LOG_IS_ACTIVE877,33957
#define ER_AUTO_INCREMENT_CONFLICT ER_AUTO_INCREMENT_CONFLICT878,33998
#define WARN_ON_BLOCKHOLE_IN_RBR WARN_ON_BLOCKHOLE_IN_RBR879,34038
#define ER_SLAVE_MI_INIT_REPOSITORY ER_SLAVE_MI_INIT_REPOSITORY880,34076
#define ER_SLAVE_RLI_INIT_REPOSITORY ER_SLAVE_RLI_INIT_REPOSITORY881,34117
#define ER_ACCESS_DENIED_CHANGE_USER_ERROR ER_ACCESS_DENIED_CHANGE_USER_ERROR882,34159
#define ER_INNODB_READ_ONLY ER_INNODB_READ_ONLY883,34207
#define ER_STOP_SLAVE_SQL_THREAD_TIMEOUT ER_STOP_SLAVE_SQL_THREAD_TIMEOUT884,34240
#define ER_STOP_SLAVE_IO_THREAD_TIMEOUT ER_STOP_SLAVE_IO_THREAD_TIMEOUT885,34286
#define ER_TABLE_CORRUPT ER_TABLE_CORRUPT886,34331
#define ER_TEMP_FILE_WRITE_FAILURE ER_TEMP_FILE_WRITE_FAILURE887,34361
#define ER_INNODB_FT_AUX_NOT_HEX_ID ER_INNODB_FT_AUX_NOT_HEX_ID888,34401
#define ER_OLD_TEMPORALS_UPGRADED ER_OLD_TEMPORALS_UPGRADED889,34442
#define ER_INNODB_FORCED_RECOVERY ER_INNODB_FORCED_RECOVERY890,34481
#define ER_AES_INVALID_IV ER_AES_INVALID_IV891,34520
#define ER_PLUGIN_CANNOT_BE_UNINSTALLED ER_PLUGIN_CANNOT_BE_UNINSTALLED892,34551
#define ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_GTID_GROUP ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_GTID_GROUP893,34596
#define ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER894,34667
#define ER_FILE_CORRUPT ER_FILE_CORRUPT895,34716
#define ER_ERROR_ON_MASTER ER_ERROR_ON_MASTER896,34745
#define ER_INCONSISTENT_ERROR ER_INCONSISTENT_ERROR897,34777
#define ER_STORAGE_ENGINE_NOT_LOADED ER_STORAGE_ENGINE_NOT_LOADED898,34812
#define ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER899,34854
#define ER_WARN_LEGACY_SYNTAX_CONVERTED ER_WARN_LEGACY_SYNTAX_CONVERTED900,34908
#define ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN901,34953
#define ER_CANNOT_DISCARD_TEMPORARY_TABLE ER_CANNOT_DISCARD_TEMPORARY_TABLE902,34999
#define ER_FK_DEPTH_EXCEEDED ER_FK_DEPTH_EXCEEDED903,35046
#define ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2904,35080
#define ER_WARN_TRIGGER_DOESNT_HAVE_CREATED ER_WARN_TRIGGER_DOESNT_HAVE_CREATED905,35136
#define ER_REFERENCED_TRG_DOES_NOT_EXIST ER_REFERENCED_TRG_DOES_NOT_EXIST906,35185
#define ER_EXPLAIN_NOT_SUPPORTED ER_EXPLAIN_NOT_SUPPORTED907,35231
#define ER_INVALID_FIELD_SIZE ER_INVALID_FIELD_SIZE908,35269
#define ER_MISSING_HA_CREATE_OPTION ER_MISSING_HA_CREATE_OPTION909,35304
#define ER_ENGINE_OUT_OF_MEMORY ER_ENGINE_OUT_OF_MEMORY910,35345
#define ER_PASSWORD_EXPIRE_ANONYMOUS_USER ER_PASSWORD_EXPIRE_ANONYMOUS_USER911,35382
#define ER_SLAVE_SQL_THREAD_MUST_STOP ER_SLAVE_SQL_THREAD_MUST_STOP912,35429
#define ER_NO_FT_MATERIALIZED_SUBQUERY ER_NO_FT_MATERIALIZED_SUBQUERY913,35472
#define ER_INNODB_UNDO_LOG_FULL ER_INNODB_UNDO_LOG_FULL914,35516
#define ER_INVALID_ARGUMENT_FOR_LOGARITHM ER_INVALID_ARGUMENT_FOR_LOGARITHM915,35553
#define ER_SLAVE_CHANNEL_IO_THREAD_MUST_STOP ER_SLAVE_CHANNEL_IO_THREAD_MUST_STOP916,35600
#define ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO917,35650
#define ER_WARN_ONLY_MASTER_LOG_FILE_NO_POS ER_WARN_ONLY_MASTER_LOG_FILE_NO_POS918,35701
#define ER_QUERY_TIMEOUT ER_QUERY_TIMEOUT919,35750
#define ER_NON_RO_SELECT_DISABLE_TIMER ER_NON_RO_SELECT_DISABLE_TIMER920,35780
#define ER_DUP_LIST_ENTRY ER_DUP_LIST_ENTRY921,35824
#define ER_SQL_MODE_NO_EFFECT ER_SQL_MODE_NO_EFFECT922,35855
#define ER_AGGREGATE_ORDER_FOR_UNION ER_AGGREGATE_ORDER_FOR_UNION923,35890
#define ER_AGGREGATE_ORDER_NON_AGG_QUERY ER_AGGREGATE_ORDER_NON_AGG_QUERY924,35932
#define ER_SLAVE_WORKER_STOPPED_PREVIOUS_THD_ERROR ER_SLAVE_WORKER_STOPPED_PREVIOUS_THD_ERROR925,35978
#define ER_DONT_SUPPORT_SLAVE_PRESERVE_COMMIT_ORDER ER_DONT_SUPPORT_SLAVE_PRESERVE_COMMIT_ORDER926,36034
#define ER_SERVER_OFFLINE_MODE ER_SERVER_OFFLINE_MODE927,36091
#define ER_GIS_DIFFERENT_SRIDS ER_GIS_DIFFERENT_SRIDS928,36127
#define ER_GIS_UNSUPPORTED_ARGUMENT ER_GIS_UNSUPPORTED_ARGUMENT929,36163
#define ER_GIS_UNKNOWN_ERROR ER_GIS_UNKNOWN_ERROR930,36204
#define ER_GIS_UNKNOWN_EXCEPTION ER_GIS_UNKNOWN_EXCEPTION931,36238
#define ER_GIS_INVALID_DATA ER_GIS_INVALID_DATA932,36276
#define ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION933,36309
#define ER_BOOST_GEOMETRY_CENTROID_EXCEPTION ER_BOOST_GEOMETRY_CENTROID_EXCEPTION934,36362
#define ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION935,36412
#define ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION936,36475
#define ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION937,36526
#define ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION938,36591
#define ER_STD_BAD_ALLOC_ERROR ER_STD_BAD_ALLOC_ERROR939,36640
#define ER_STD_DOMAIN_ERROR ER_STD_DOMAIN_ERROR940,36676
#define ER_STD_LENGTH_ERROR ER_STD_LENGTH_ERROR941,36709
#define ER_STD_INVALID_ARGUMENT ER_STD_INVALID_ARGUMENT942,36742
#define ER_STD_OUT_OF_RANGE_ERROR ER_STD_OUT_OF_RANGE_ERROR943,36779
#define ER_STD_OVERFLOW_ERROR ER_STD_OVERFLOW_ERROR944,36818
#define ER_STD_RANGE_ERROR ER_STD_RANGE_ERROR945,36853
#define ER_STD_UNDERFLOW_ERROR ER_STD_UNDERFLOW_ERROR946,36885
#define ER_STD_LOGIC_ERROR ER_STD_LOGIC_ERROR947,36921
#define ER_STD_RUNTIME_ERROR ER_STD_RUNTIME_ERROR948,36953
#define ER_STD_UNKNOWN_EXCEPTION ER_STD_UNKNOWN_EXCEPTION949,36987
#define ER_GIS_DATA_WRONG_ENDIANESS ER_GIS_DATA_WRONG_ENDIANESS950,37025
#define ER_CHANGE_MASTER_PASSWORD_LENGTH ER_CHANGE_MASTER_PASSWORD_LENGTH951,37066
#define ER_USER_LOCK_WRONG_NAME ER_USER_LOCK_WRONG_NAME952,37112
#define ER_USER_LOCK_DEADLOCK ER_USER_LOCK_DEADLOCK953,37149
#define ER_REPLACE_INACCESSIBLE_ROWS ER_REPLACE_INACCESSIBLE_ROWS954,37184
#define ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS955,37226
#define ER_ILLEGAL_USER_VAR ER_ILLEGAL_USER_VAR956,37283
#define ER_GTID_MODE_OFF ER_GTID_MODE_OFF957,37316
#define ER_UNSUPPORTED_BY_REPLICATION_THREAD ER_UNSUPPORTED_BY_REPLICATION_THREAD958,37346
#define ER_INCORRECT_TYPE ER_INCORRECT_TYPE959,37396
#define ER_FIELD_IN_ORDER_NOT_SELECT ER_FIELD_IN_ORDER_NOT_SELECT960,37427
#define ER_AGGREGATE_IN_ORDER_NOT_SELECT ER_AGGREGATE_IN_ORDER_NOT_SELECT961,37469
#define ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN962,37515
#define ER_NET_OK_PACKET_TOO_LARGE ER_NET_OK_PACKET_TOO_LARGE963,37569
#define ER_INVALID_JSON_DATA ER_INVALID_JSON_DATA964,37609
#define ER_INVALID_GEOJSON_MISSING_MEMBER ER_INVALID_GEOJSON_MISSING_MEMBER965,37643
#define ER_INVALID_GEOJSON_WRONG_TYPE ER_INVALID_GEOJSON_WRONG_TYPE966,37690
#define ER_INVALID_GEOJSON_UNSPECIFIED ER_INVALID_GEOJSON_UNSPECIFIED967,37733
#define ER_DIMENSION_UNSUPPORTED ER_DIMENSION_UNSUPPORTED968,37777
#define ER_SLAVE_CHANNEL_DOES_NOT_EXIST ER_SLAVE_CHANNEL_DOES_NOT_EXIST969,37815
#define ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT970,37860
#define ER_SLAVE_CHANNEL_NAME_INVALID_OR_TOO_LONG ER_SLAVE_CHANNEL_NAME_INVALID_OR_TOO_LONG971,37910
#define ER_SLAVE_NEW_CHANNEL_WRONG_REPOSITORY ER_SLAVE_NEW_CHANNEL_WRONG_REPOSITORY972,37965
#define ER_SLAVE_CHANNEL_DELETE ER_SLAVE_CHANNEL_DELETE973,38016
#define ER_SLAVE_MULTIPLE_CHANNELS_CMD ER_SLAVE_MULTIPLE_CHANNELS_CMD974,38053
#define ER_SLAVE_MAX_CHANNELS_EXCEEDED ER_SLAVE_MAX_CHANNELS_EXCEEDED975,38097
#define ER_SLAVE_CHANNEL_MUST_STOP ER_SLAVE_CHANNEL_MUST_STOP976,38141
#define ER_SLAVE_CHANNEL_NOT_RUNNING ER_SLAVE_CHANNEL_NOT_RUNNING977,38181
#define ER_SLAVE_CHANNEL_WAS_RUNNING ER_SLAVE_CHANNEL_WAS_RUNNING978,38223
#define ER_SLAVE_CHANNEL_WAS_NOT_RUNNING ER_SLAVE_CHANNEL_WAS_NOT_RUNNING979,38265
#define ER_SLAVE_CHANNEL_SQL_THREAD_MUST_STOP ER_SLAVE_CHANNEL_SQL_THREAD_MUST_STOP980,38311
#define ER_SLAVE_CHANNEL_SQL_SKIP_COUNTER ER_SLAVE_CHANNEL_SQL_SKIP_COUNTER981,38362
#define ER_WRONG_FIELD_WITH_GROUP_V2 ER_WRONG_FIELD_WITH_GROUP_V2982,38409
#define ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2983,38451
#define ER_WARN_DEPRECATED_SYSVAR_UPDATE ER_WARN_DEPRECATED_SYSVAR_UPDATE984,38499
#define ER_WARN_DEPRECATED_SQLMODE ER_WARN_DEPRECATED_SQLMODE985,38545
#define ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID986,38585
#define ER_GROUP_REPLICATION_CONFIGURATION ER_GROUP_REPLICATION_CONFIGURATION987,38644
#define ER_GROUP_REPLICATION_RUNNING ER_GROUP_REPLICATION_RUNNING988,38692
#define ER_GROUP_REPLICATION_APPLIER_INIT_ERROR ER_GROUP_REPLICATION_APPLIER_INIT_ERROR989,38734
#define ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT990,38787
#define ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR991,38849
#define ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR992,38917
#define ER_BEFORE_DML_VALIDATION_ERROR ER_BEFORE_DML_VALIDATION_ERROR993,38982
#define ER_PREVENTS_VARIABLE_WITHOUT_RBR ER_PREVENTS_VARIABLE_WITHOUT_RBR994,39026
#define ER_RUN_HOOK_ERROR ER_RUN_HOOK_ERROR995,39072
#define ER_TRANSACTION_ROLLBACK_DURING_COMMIT ER_TRANSACTION_ROLLBACK_DURING_COMMIT996,39103
#define ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED997,39154
#define ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN998,39211
#define ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN999,39271
#define ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN1000,39324
#define ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN1001,39379
#define ER_GENERATED_COLUMN_NON_PRIOR ER_GENERATED_COLUMN_NON_PRIOR1002,39434
#define ER_DEPENDENT_BY_GENERATED_COLUMN ER_DEPENDENT_BY_GENERATED_COLUMN1003,39477
#define ER_GENERATED_COLUMN_REF_AUTO_INC ER_GENERATED_COLUMN_REF_AUTO_INC1004,39523
#define ER_FEATURE_NOT_AVAILABLE ER_FEATURE_NOT_AVAILABLE1005,39569
#define ER_CANT_SET_GTID_MODE ER_CANT_SET_GTID_MODE1006,39607
#define ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF1007,39642
#define ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION1008,39700
#define ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON1009,39760
#define ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF1010,39819
#define ER_CANT_SET_ENFORCE_GTID_CONSISTENCY_ON_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS ER_CANT_SET_ENFORCE_GTID_CONSISTENCY_ON_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS1011,39874
#define ER_SET_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS ER_SET_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TRANSACTIONS1012,39968
#define ER_ACCOUNT_HAS_BEEN_LOCKED ER_ACCOUNT_HAS_BEEN_LOCKED1013,40059
#define ER_WRONG_TABLESPACE_NAME ER_WRONG_TABLESPACE_NAME1014,40099
#define ER_TABLESPACE_IS_NOT_EMPTY ER_TABLESPACE_IS_NOT_EMPTY1015,40137
#define ER_WRONG_FILE_NAME ER_WRONG_FILE_NAME1016,40177
#define ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION1017,40209
#define ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR1018,40269
#define ER_WARN_BAD_MAX_EXECUTION_TIME ER_WARN_BAD_MAX_EXECUTION_TIME1019,40318
#define ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME1020,40362
#define ER_WARN_CONFLICTING_HINT ER_WARN_CONFLICTING_HINT1021,40414
#define ER_WARN_UNKNOWN_QB_NAME ER_WARN_UNKNOWN_QB_NAME1022,40452
#define ER_UNRESOLVED_HINT_NAME ER_UNRESOLVED_HINT_NAME1023,40489
#define ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE1024,40526
#define ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED1025,40580
#define ER_LOCKING_SERVICE_WRONG_NAME ER_LOCKING_SERVICE_WRONG_NAME1026,40637
#define ER_LOCKING_SERVICE_DEADLOCK ER_LOCKING_SERVICE_DEADLOCK1027,40680
#define ER_LOCKING_SERVICE_TIMEOUT ER_LOCKING_SERVICE_TIMEOUT1028,40721
#define ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED1029,40761
#define ER_SQL_MODE_MERGED ER_SQL_MODE_MERGED1030,40815
#define ER_VTOKEN_PLUGIN_TOKEN_MISMATCH ER_VTOKEN_PLUGIN_TOKEN_MISMATCH1031,40847
#define ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND1032,40892
#define ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID1033,40938
#define ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED1034,40989
#define ER_INVALID_JSON_TEXT ER_INVALID_JSON_TEXT1035,41041
#define ER_INVALID_JSON_TEXT_IN_PARAM ER_INVALID_JSON_TEXT_IN_PARAM1036,41075
#define ER_INVALID_JSON_BINARY_DATA ER_INVALID_JSON_BINARY_DATA1037,41118
#define ER_INVALID_JSON_PATH ER_INVALID_JSON_PATH1038,41159
#define ER_INVALID_JSON_CHARSET ER_INVALID_JSON_CHARSET1039,41193
#define ER_INVALID_JSON_CHARSET_IN_FUNCTION ER_INVALID_JSON_CHARSET_IN_FUNCTION1040,41230
#define ER_INVALID_TYPE_FOR_JSON ER_INVALID_TYPE_FOR_JSON1041,41279
#define ER_INVALID_CAST_TO_JSON ER_INVALID_CAST_TO_JSON1042,41317
#define ER_INVALID_JSON_PATH_CHARSET ER_INVALID_JSON_PATH_CHARSET1043,41354
#define ER_INVALID_JSON_PATH_WILDCARD ER_INVALID_JSON_PATH_WILDCARD1044,41396
#define ER_JSON_VALUE_TOO_BIG ER_JSON_VALUE_TOO_BIG1045,41439
#define ER_JSON_KEY_TOO_BIG ER_JSON_KEY_TOO_BIG1046,41474
#define ER_JSON_USED_AS_KEY ER_JSON_USED_AS_KEY1047,41507
#define ER_JSON_VACUOUS_PATH ER_JSON_VACUOUS_PATH1048,41540
#define ER_JSON_BAD_ONE_OR_ALL_ARG ER_JSON_BAD_ONE_OR_ALL_ARG1049,41574
#define ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE1050,41614
#define ER_INVALID_JSON_VALUE_FOR_CAST ER_INVALID_JSON_VALUE_FOR_CAST1051,41662
#define ER_JSON_DOCUMENT_TOO_DEEP ER_JSON_DOCUMENT_TOO_DEEP1052,41706
#define ER_JSON_DOCUMENT_NULL_KEY ER_JSON_DOCUMENT_NULL_KEY1053,41745
#define ER_SECURE_TRANSPORT_REQUIRED ER_SECURE_TRANSPORT_REQUIRED1054,41784
#define ER_NO_SECURE_TRANSPORTS_CONFIGURED ER_NO_SECURE_TRANSPORTS_CONFIGURED1055,41826
#define ER_DISABLED_STORAGE_ENGINE ER_DISABLED_STORAGE_ENGINE1056,41874
#define ER_USER_DOES_NOT_EXIST ER_USER_DOES_NOT_EXIST1057,41914
#define ER_USER_ALREADY_EXISTS ER_USER_ALREADY_EXISTS1058,41950
#define ER_AUDIT_API_ABORT ER_AUDIT_API_ABORT1059,41986
#define ER_INVALID_JSON_PATH_ARRAY_CELL ER_INVALID_JSON_PATH_ARRAY_CELL1060,42018
#define ER_BUFPOOL_RESIZE_INPROGRESS ER_BUFPOOL_RESIZE_INPROGRESS1061,42063
#define ER_FEATURE_DISABLED_SEE_DOC ER_FEATURE_DISABLED_SEE_DOC1062,42105
#define ER_SERVER_ISNT_AVAILABLE ER_SERVER_ISNT_AVAILABLE1063,42146
#define ER_SESSION_WAS_KILLED ER_SESSION_WAS_KILLED1064,42184
#define ER_CAPACITY_EXCEEDED ER_CAPACITY_EXCEEDED1065,42219
#define ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER1066,42253
#define ER_TABLE_NEEDS_UPG_PART ER_TABLE_NEEDS_UPG_PART1067,42306
#define ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID1068,42343
#define ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL1069,42411
#define ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT1070,42463
#define ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE1071,42518
#define ER_LOCK_REFUSED_BY_ENGINE ER_LOCK_REFUSED_BY_ENGINE1072,42573
#define ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN1073,42612
#define ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE1074,42671
#define ER_MASTER_KEY_ROTATION_ERROR_BY_SE ER_MASTER_KEY_ROTATION_ERROR_BY_SE1075,42727
#define ER_MASTER_KEY_ROTATION_BINLOG_FAILED ER_MASTER_KEY_ROTATION_BINLOG_FAILED1076,42775
#define ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE1077,42825
#define ER_TABLESPACE_CANNOT_ENCRYPT ER_TABLESPACE_CANNOT_ENCRYPT1078,42876
#define ER_INVALID_ENCRYPTION_OPTION ER_INVALID_ENCRYPTION_OPTION1079,42918
#define ER_CANNOT_FIND_KEY_IN_KEYRING ER_CANNOT_FIND_KEY_IN_KEYRING1080,42960
#define ER_CAPACITY_EXCEEDED_IN_PARSER ER_CAPACITY_EXCEEDED_IN_PARSER1081,43003
#define ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE1082,43047
#define ER_KEYRING_UDF_KEYRING_SERVICE_ERROR ER_KEYRING_UDF_KEYRING_SERVICE_ERROR1083,43100
#define ER_USER_COLUMN_OLD_LENGTH ER_USER_COLUMN_OLD_LENGTH1084,43150
#define ER_CANT_RESET_MASTER ER_CANT_RESET_MASTER1085,43189
#define ER_GROUP_REPLICATION_MAX_GROUP_SIZE ER_GROUP_REPLICATION_MAX_GROUP_SIZE1086,43223
#define ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED1087,43272
#define ER_TABLE_REFERENCED ER_TABLE_REFERENCED1088,43323

mysql/include/my_compiler.h,1792
#define MY_COMPILER_INCLUDEDMY_COMPILER_INCLUDED2,29
#  define MY_GNUC_PREREQ(MY_GNUC_PREREQ36,1315
#  define GCC_VERSION GCC_VERSION38,1417
#  define MY_GNUC_PREREQ(MY_GNUC_PREREQ40,1480
inline bool likely(bool expr)likely55,2070
inline bool unlikely(bool expr)unlikely59,2143
#  define likely(likely64,2225
#  define unlikely(unlikely65,2272
inline bool likely(bool expr)likely71,2386
inline bool unlikely(bool expr)unlikely75,2435
#  define likely(likely80,2492
#  define unlikely(unlikely81,2519
#  define MY_ASSERT_UNREACHABLE(MY_ASSERT_UNREACHABLE88,2686
#  define MY_ASSERT_UNREACHABLE(MY_ASSERT_UNREACHABLE90,2752
# define MY_ALIGNOF(MY_ALIGNOF95,2938
# define MY_ALIGNED(MY_ALIGNED97,3037
# define MY_ALIGNOF(MY_ALIGNOF100,3149
# define MY_ALIGNED(MY_ALIGNED101,3193
# define MY_ALIGNOF(MY_ALIGNOF103,3302
# define MY_ALIGNED(MY_ALIGNED104,3328
# define inline inline109,3460
#  define __func__ __func__114,3574
template<> struct MY_ALIGNED(1) my_alignment_imp<1> {};my_alignment_imp127,3809
template<> struct MY_ALIGNED(2) my_alignment_imp<2> {};my_alignment_imp128,3865
template<> struct MY_ALIGNED(4) my_alignment_imp<4> {};my_alignment_imp129,3921
template<> struct MY_ALIGNED(8) my_alignment_imp<8> {};my_alignment_imp130,3977
template<> struct MY_ALIGNED(16) my_alignment_imp<16> {};my_alignment_imp131,4033
struct my_aligned_storagemy_aligned_storage144,4445
  {__anonceb09ff3010a147,4481
    char data[size];data148,4485
    my_alignment_imp<alignment> align;align149,4506
#  define MY_ATTRIBUTE(MY_ATTRIBUTE162,4800
#  define MY_ATTRIBUTE(MY_ATTRIBUTE164,4849
# define __has_attribute(__has_attribute169,4914
# define SUPPRESS_UBSAN SUPPRESS_UBSAN173,4995
# define SUPPRESS_UBSANSUPPRESS_UBSAN175,5064

mysql/include/my_sys.h,12517
#define _my_sys_h_my_sys_h17,763
# define MEM_MALLOCLIKE_BLOCK(MEM_MALLOCLIKE_BLOCK42,1324
# define MEM_FREELIKE_BLOCK(MEM_FREELIKE_BLOCK43,1412
# define MEM_UNDEFINED(MEM_UNDEFINED45,1512
# define MEM_NOACCESS(MEM_NOACCESS46,1577
# define MEM_CHECK_ADDRESSABLE(MEM_CHECK_ADDRESSABLE47,1640
#define MY_INIT(MY_INIT58,2039
#define MYSYS_ERRMSG_SIZE MYSYS_ERRMSG_SIZE69,2497
#define MYSYS_STRERROR_SIZE MYSYS_STRERROR_SIZE70,2531
#define MY_FILE_ERROR	MY_FILE_ERROR72,2566
#define MY_FFNF	MY_FFNF75,2640
#define MY_FNABP	MY_FNABP76,2689
#define MY_NABP	MY_NABP77,2749
#define MY_FAE	MY_FAE78,2809
#define MY_WME	MY_WME79,2852
#define MY_WAIT_IF_FULL MY_WAIT_IF_FULL80,2900
#define MY_IGNORE_BADFD MY_IGNORE_BADFD81,2971
#define MY_SYNC_DIR MY_SYNC_DIR82,3049
#define MY_UNUSED MY_UNUSED83,3127
#define MY_FULL_IO MY_FULL_IO84,3195
#define MY_DONT_CHECK_FILESIZE MY_DONT_CHECK_FILESIZE85,3274
#define MY_LINK_WARNING MY_LINK_WARNING86,3341
#define MY_COPYTIME	MY_COPYTIME87,3408
#define MY_DELETE_OLD	MY_DELETE_OLD88,3459
#define MY_RESOLVE_LINK MY_RESOLVE_LINK89,3516
#define MY_HOLD_ORIGINAL_MODES MY_HOLD_ORIGINAL_MODES90,3584
#define MY_REDEL_MAKE_BACKUP MY_REDEL_MAKE_BACKUP91,3656
#define MY_REDEL_NO_COPY_STAT MY_REDEL_NO_COPY_STAT92,3689
#define MY_SEEK_NOT_DONE MY_SEEK_NOT_DONE93,3767
#define MY_DONT_WAIT	MY_DONT_WAIT94,3831
#define MY_ZEROFILL	MY_ZEROFILL95,3896
#define MY_ALLOW_ZERO_PTR MY_ALLOW_ZERO_PTR96,3959
#define MY_FREE_ON_ERROR MY_FREE_ON_ERROR97,4028
#define MY_HOLD_ON_ERROR MY_HOLD_ON_ERROR98,4100
#define MY_DONT_OVERWRITE_FILE MY_DONT_OVERWRITE_FILE99,4174
#define MY_THREADSAFE MY_THREADSAFE100,4246
#define MY_SYNC MY_SYNC101,4309
#define MYF_RW MYF_RW103,4373
#define MY_CHECK_ERROR	MY_CHECK_ERROR105,4439
#define MY_GIVE_INFO	MY_GIVE_INFO106,4505
#define MY_DONT_FREE_DBUG MY_DONT_FREE_DBUG107,4562
#define ME_BELL	ME_BELL110,4663
#define ME_ERRORLOG	ME_ERRORLOG111,4732
#define ME_FATALERROR ME_FATALERROR112,4798
#define MY_REPLACE_DIR	MY_REPLACE_DIR115,4901
#define MY_REPLACE_EXT	MY_REPLACE_EXT116,4964
#define MY_UNPACK_FILENAME	MY_UNPACK_FILENAME117,5025
#define MY_PACK_FILENAME	MY_PACK_FILENAME118,5084
#define MY_RESOLVE_SYMLINKS	MY_RESOLVE_SYMLINKS119,5139
#define MY_RETURN_REAL_PATH	MY_RETURN_REAL_PATH120,5203
#define MY_SAFE_PATH	MY_SAFE_PATH121,5266
#define MY_RELATIVE_PATH	MY_RELATIVE_PATH122,5326
#define MY_APPEND_EXT MY_APPEND_EXT123,5387
#define MY_SEEK_SET	MY_SEEK_SET127,5489
#define MY_SEEK_CUR	MY_SEEK_CUR128,5511
#define MY_SEEK_END	MY_SEEK_END129,5533
#define MY_WAIT_FOR_USER_TO_FIX_PANIC	MY_WAIT_FOR_USER_TO_FIX_PANIC132,5578
#define MY_WAIT_GIVE_USER_A_MESSAGE	MY_WAIT_GIVE_USER_A_MESSAGE133,5636
#define MIN_COMPRESS_LENGTH	MIN_COMPRESS_LENGTH134,5704
#define DFLT_INIT_HITS DFLT_INIT_HITS135,5767
#define MY_KEEP_PREALLOC	MY_KEEP_PREALLOC138,5818
#define MY_MARK_BLOCKS_FREE MY_MARK_BLOCKS_FREE139,5845
#define MY_ERRNO_EDOM	MY_ERRNO_EDOM142,5981
#define MY_ERRNO_ERANGE	MY_ERRNO_ERANGE143,6007
#define GETDATE_DATE_TIME	GETDATE_DATE_TIME146,6070
#define GETDATE_SHORT_DATE	GETDATE_SHORT_DATE147,6098
#define GETDATE_HHMMSSTIME	GETDATE_HHMMSSTIME148,6127
#define GETDATE_GMT	GETDATE_GMT149,6156
#define GETDATE_FIXEDLENGTH	GETDATE_FIXEDLENGTH150,6179
#define my_safe_alloca(my_safe_alloca160,6457
#define my_safe_afree(my_safe_afree163,6688
#define TRASH(TRASH173,7129
#define TRASH(TRASH180,7519
#define DEBUG_SYNC_C(DEBUG_SYNC_C184,7656
#define DEBUG_SYNC_C_IF_THD(DEBUG_SYNC_C_IF_THD188,7891
#define DEBUG_SYNC_C(DEBUG_SYNC_C193,8132
#define DEBUG_SYNC_C_IF_THD(DEBUG_SYNC_C_IF_THD194,8172
#define my_get_large_page_size(my_get_large_page_size204,8532
#define my_large_malloc(my_large_malloc205,8569
#define my_large_free(my_large_free206,8623
#define my_alloca(my_alloca209,8698
#define MY_ALL_CHARSETS_SIZE MY_ALL_CHARSETS_SIZE250,10371
enum cache_typecache_type269,11029
  TYPE_NOT_SET= 0, READ_CACHE, WRITE_CACHE,TYPE_NOT_SET271,11047
  TYPE_NOT_SET= 0, READ_CACHE, WRITE_CACHE,READ_CACHE271,11047
  TYPE_NOT_SET= 0, READ_CACHE, WRITE_CACHE,WRITE_CACHE271,11047
  SEQ_READ_APPEND		/* sequential read or append */,SEQ_READ_APPEND272,11091
  READ_FIFO, READ_NET,WRITE_NET};READ_FIFO273,11143
  READ_FIFO, READ_NET,WRITE_NET};READ_NET273,11143
  READ_FIFO, READ_NET,WRITE_NET};WRITE_NET273,11143
enum flush_typeflush_type275,11178
  FLUSH_KEEP,           /* flush block and keep it in the cache */FLUSH_KEEP277,11196
  FLUSH_RELEASE,        /* flush block and remove it from the cache */FLUSH_RELEASE278,11263
  FLUSH_IGNORE_CHANGED, /* remove block from the cache */FLUSH_IGNORE_CHANGED279,11334
  FLUSH_FORCE_WRITEFLUSH_FORCE_WRITE284,11518
enum file_typefile_type287,11542
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,UNOPEN289,11559
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,FILE_BY_OPEN289,11559
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,FILE_BY_CREATE289,11559
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,STREAM_BY_FOPEN289,11559
  UNOPEN = 0, FILE_BY_OPEN, FILE_BY_CREATE, STREAM_BY_FOPEN, STREAM_BY_FDOPEN,STREAM_BY_FDOPEN289,11559
  FILE_BY_MKSTEMP, FILE_BY_DUPFILE_BY_MKSTEMP290,11638
  FILE_BY_MKSTEMP, FILE_BY_DUPFILE_BY_DUP290,11638
struct st_my_file_infost_my_file_info293,11673
  char  *name;name295,11698
  HANDLE fhandle;   /* win32 file handle */fhandle297,11727
  int    oflag;     /* open flags, e.g O_APPEND */oflag298,11771
  enum   file_type	type;type300,11829
typedef unsigned int PSI_file_key;PSI_file_key307,11968
#define PSI_FILE_KEY_DEFINEDPSI_FILE_KEY_DEFINED308,12003
typedef struct st_dynamic_arrayst_dynamic_array311,12040
  uchar *buffer;buffer313,12074
  uint elements,max_element;elements314,12091
  uint elements,max_element;max_element314,12091
  uint alloc_increment;alloc_increment315,12120
  uint size_of_element;size_of_element316,12144
  PSI_memory_key m_psi_key;m_psi_key317,12168
} DYNAMIC_ARRAY;DYNAMIC_ARRAY318,12196
typedef struct st_my_tmpdirst_my_tmpdir320,12214
  char **list;list322,12244
  uint cur, max;cur323,12259
  uint cur, max;max323,12259
  mysql_mutex_t mutex;mutex324,12276
} MY_TMPDIR;MY_TMPDIR325,12299
typedef struct st_dynamic_stringst_dynamic_string327,12313
  char *str;str329,12348
  size_t length,max_length,alloc_increment;length330,12361
  size_t length,max_length,alloc_increment;max_length330,12361
  size_t length,max_length,alloc_increment;alloc_increment330,12361
} DYNAMIC_STRING;DYNAMIC_STRING331,12405
typedef int (*IO_CACHE_CALLBACK)(struct st_io_cache*);IO_CACHE_CALLBACK334,12444
typedef struct st_io_cache_sharest_io_cache_share336,12500
  mysql_mutex_t       mutex;           /* To sync on reads into buffer. */mutex338,12535
  mysql_cond_t        cond;            /* To wait for signals. */cond339,12610
  mysql_cond_t        cond_writer;     /* For a synchronized writer. */cond_writer340,12676
  my_off_t              pos_in_file;pos_in_file342,12814
  struct st_io_cache    *source_cache;source_cache344,12916
  uchar                 *buffer;         /* The read buffer. */buffer345,12955
  uchar                 *read_end;       /* Behind last valid byte of buffer. */read_end346,13019
  int                   running_threads; /* threads not in lock. */running_threads347,13100
  int                   total_threads;   /* threads sharing the cache. */total_threads348,13168
  int                   error;           /* Last error. */error349,13242
} IO_CACHE_SHARE;IO_CACHE_SHARE350,13301
typedef struct st_io_cache		/* Used when cacheing files */st_io_cache352,13320
  my_off_t pos_in_file;pos_in_file355,13454
  my_off_t end_of_file;end_of_file361,13661
  uchar	*read_pos;read_pos363,13739
  uchar  *read_end;read_end365,13836
  uchar  *buffer;				/* The read buffer */buffer366,13856
  uchar  *request_pos;request_pos368,13924
  uchar  *write_buffer;write_buffer371,14022
  uchar *append_read_pos;append_read_pos378,14294
  uchar *write_pos;write_pos380,14381
  uchar *write_end;write_end382,14460
  uchar  **current_pos, **current_end;current_pos390,14770
  uchar  **current_pos, **current_end;current_end390,14770
  mysql_mutex_t append_buffer_lock;append_buffer_lock396,14942
  IO_CACHE_SHARE *share;share404,15266
  int (*read_function)(struct st_io_cache *,uchar *,size_t);read_function414,15685
  int (*write_function)(struct st_io_cache *,const uchar *,size_t);write_function419,15895
  enum cache_type type;type425,16160
  IO_CACHE_CALLBACK pre_read;pre_read433,16525
  IO_CACHE_CALLBACK post_read;post_read434,16555
  IO_CACHE_CALLBACK pre_close;pre_close435,16586
  ulong disk_writes;disk_writes441,16797
  void* arg;				/* for use by pre/post_read */arg442,16818
  char *file_name;			/* if used with 'open_cached_file' */file_name443,16865
  char *dir,*prefix;dir444,16924
  char *dir,*prefix;prefix444,16924
  File file; /* file descriptor */file445,16945
  PSI_file_key file_key; /* instrumented file key */file_key446,16980
  int	seek_not_done,error;seek_not_done455,17353
  int	seek_not_done,error;error455,17353
  size_t	buffer_length;buffer_length457,17454
  size_t  read_length;read_length459,17555
  myf	myflags;			/* Flags used to my_read/my_write */myflags460,17578
  my_bool alloced_buffer;alloced_buffer467,17846
} IO_CACHE;IO_CACHE468,17872
typedef int (*qsort2_cmp)(const void *, const void *, const void *);qsort2_cmp470,17885
typedef void (*my_error_reporter)(enum loglevel level, const char *format, ...)my_error_reporter472,17955
#define my_b_clear(my_b_clear481,18229
#define my_b_inited(my_b_inited482,18271
#define my_b_EOF my_b_EOF483,18312
#define my_b_read(my_b_read485,18338
#define my_b_write(my_b_write491,18575
#define my_b_get(my_b_get497,18830
#define my_b_tell(my_b_tell502,18982
#define my_b_get_buffer_start(my_b_get_buffer_start505,19091
#define my_b_get_bytes_in_buffer(my_b_get_bytes_in_buffer506,19148
#define my_b_get_pos_in_file(my_b_get_pos_in_file508,19256
#define my_b_bytes_in_cache(my_b_bytes_in_cache515,19533
typedef uint32 ha_checksum;ha_checksum518,19632
#define MAX_SYSLOG_MESSAGE_SIZE MAX_SYSLOG_MESSAGE_SIZE570,22166
typedef struct st_syslog_facility { int id; const char *name; } SYSLOG_FACILITY;st_syslog_facility575,22320
typedef struct st_syslog_facility { int id; const char *name; } SYSLOG_FACILITY;id575,22320
typedef struct st_syslog_facility { int id; const char *name; } SYSLOG_FACILITY;name575,22320
typedef struct st_syslog_facility { int id; const char *name; } SYSLOG_FACILITY;SYSLOG_FACILITY575,22320
enum my_syslog_options { MY_SYSLOG_PIDS= 1 };my_syslog_options578,22444
enum my_syslog_options { MY_SYSLOG_PIDS= 1 };MY_SYSLOG_PIDS578,22444
#define my_access my_access592,22897
# define is_filename_allowed(is_filename_allowed602,23188
#define my_delete_allow_opened(my_delete_allow_opened607,23343
#define my_delete_allow_opened(my_delete_allow_opened609,23427
#define my_print_open_files(my_print_open_files658,25792
#define base_name(base_name667,26114
#define flush_io_cache(flush_io_cache734,29944
#define init_dynamic_array init_dynamic_array755,30863
#define my_init_dynamic_array my_init_dynamic_array756,30934
#define dynamic_element(dynamic_element769,31557
static inline void reset_dynamic(DYNAMIC_ARRAY *array)reset_dynamic782,32148
#define alloc_root_inited(alloc_root_inited798,32894
#define ALLOC_ROOT_MIN_BLOCK_SIZE ALLOC_ROOT_MIN_BLOCK_SIZE799,32946
#define clear_alloc_root(clear_alloc_root800,33021
static inline char *safe_strdup_root(MEM_ROOT *root, const char *str)safe_strdup_root811,33660
static inline void my_sleep(time_t m_seconds)my_sleep831,34611
#define MAP_NOSYNC MAP_NOSYNC856,35246
#define my_mmap(my_mmap860,35299
#define my_mmap(my_mmap862,35357
#define my_munmap(my_munmap864,35414
#define PROT_READ PROT_READ868,35541
#define PROT_WRITE PROT_WRITE869,35568
#define MAP_NORESERVE MAP_NORESERVE870,35595
#define MAP_SHARED MAP_SHARED871,35622
#define MAP_PRIVATE MAP_PRIVATE872,35654
#define MAP_NOSYNC MAP_NOSYNC873,35686
#define MAP_FAILED MAP_FAILED874,35718
#define MS_SYNC MS_SYNC875,35756
static inline int my_getpagesize()my_getpagesize882,35905

mysql/include/sql_state.h,0

mysql/include/my_dbug.h,2153
#define MY_DBUG_INCLUDEDMY_DBUG_INCLUDED17,770
struct _db_stack_frame_ {_db_stack_frame_26,935
  const char *func;      /* function name of the previous stack frame       */func27,961
  const char *file;      /* filename of the function of previous frame      */file28,1040
  uint level;            /* this nesting level, highest bit enables tracing */level29,1119
  struct _db_stack_frame_ *prev; /* pointer to the previous frame */prev30,1198
#define DBUG_ENTER(DBUG_ENTER63,2619
#define DBUG_LEAVE DBUG_LEAVE65,2744
#define DBUG_RETURN(DBUG_RETURN66,2805
#define DBUG_VOID_RETURN DBUG_VOID_RETURN67,2867
#define DBUG_EXECUTE(DBUG_EXECUTE68,2926
#define DBUG_EXECUTE_IF(DBUG_EXECUTE_IF70,3025
#define DBUG_EVALUATE(DBUG_EVALUATE72,3127
#define DBUG_EVALUATE_IF(DBUG_EVALUATE_IF74,3219
#define DBUG_PRINT(DBUG_PRINT76,3314
#define DBUG_PUTS(DBUG_PUTS93,3699
#define DBUG_PUSH(DBUG_PUSH106,3978
#define DBUG_POP(DBUG_POP107,4015
#define DBUG_SET(DBUG_SET108,4046
#define DBUG_SET_INITIAL(DBUG_SET_INITIAL109,4081
#define DBUG_PROCESS(DBUG_PROCESS110,4129
#define DBUG_FILE DBUG_FILE111,4171
#define DBUG_SETJMP(DBUG_SETJMP112,4199
#define DBUG_LONGJMP(DBUG_LONGJMP113,4253
#define DBUG_DUMP(DBUG_DUMP114,4317
#define DBUG_END(DBUG_END115,4384
#define DBUG_LOCK_FILE DBUG_LOCK_FILE116,4416
#define DBUG_UNLOCK_FILE DBUG_UNLOCK_FILE117,4456
#define DBUG_ASSERT(DBUG_ASSERT118,4500
#define DBUG_EXPLAIN(DBUG_EXPLAIN119,4533
#define DBUG_EXPLAIN_INITIAL(DBUG_EXPLAIN_INITIAL120,4592
#define DEBUGGER_OFF DEBUGGER_OFF121,4661
#define DEBUGGER_ON DEBUGGER_ON122,4731
#define DBUG_ABORT(DBUG_ABORT124,4816
#define DBUG_ABORT(DBUG_ABORT131,5069
#define DBUG_CHECK_CRASH(DBUG_CHECK_CRASH136,5302
#define DBUG_CRASH_ENTER(DBUG_CRASH_ENTER139,5470
#define DBUG_CRASH_RETURN(DBUG_CRASH_RETURN141,5562
#define DBUG_CRASH_VOID_RETURN DBUG_CRASH_VOID_RETURN143,5648
#define DBUG_SUICIDE(DBUG_SUICIDE155,6108
#define DBUG_SUICIDE(DBUG_SUICIDE159,6209
#define DBUG_SYNC_POINT(DBUG_SYNC_POINT208,8335
#define DBUG_SYNC_POINT(DBUG_SYNC_POINT212,8498
#define DBUG_LOG(DBUG_LOG237,9180

mysql/include/errmsg.h,4251
#define ERRMSG_INCLUDEDERRMSG_INCLUDED2,24
#define CR_MIN_ERROR	CR_MIN_ERROR32,1085
#define CR_MAX_ERROR	CR_MAX_ERROR33,1141
#define ER(ER35,1185
#define CLIENT_ERRMAP	CLIENT_ERRMAP39,1342
#define CR_ERROR_FIRST CR_ERROR_FIRST43,1532
#define CR_UNKNOWN_ERROR	CR_UNKNOWN_ERROR44,1587
#define CR_SOCKET_CREATE_ERROR	CR_SOCKET_CREATE_ERROR45,1617
#define CR_CONNECTION_ERROR	CR_CONNECTION_ERROR46,1653
#define CR_CONN_HOST_ERROR	CR_CONN_HOST_ERROR47,1686
#define CR_IPSOCK_ERROR	CR_IPSOCK_ERROR48,1718
#define CR_UNKNOWN_HOST	CR_UNKNOWN_HOST49,1748
#define CR_SERVER_GONE_ERROR	CR_SERVER_GONE_ERROR50,1778
#define CR_VERSION_ERROR	CR_VERSION_ERROR51,1812
#define CR_OUT_OF_MEMORY	CR_OUT_OF_MEMORY52,1842
#define CR_WRONG_HOST_INFO	CR_WRONG_HOST_INFO53,1872
#define CR_LOCALHOST_CONNECTION CR_LOCALHOST_CONNECTION54,1904
#define CR_TCP_CONNECTION	CR_TCP_CONNECTION55,1941
#define CR_SERVER_HANDSHAKE_ERR CR_SERVER_HANDSHAKE_ERR56,1972
#define CR_SERVER_LOST	CR_SERVER_LOST57,2009
#define CR_COMMANDS_OUT_OF_SYNC CR_COMMANDS_OUT_OF_SYNC58,2038
#define CR_NAMEDPIPE_CONNECTION CR_NAMEDPIPE_CONNECTION59,2075
#define CR_NAMEDPIPEWAIT_ERROR CR_NAMEDPIPEWAIT_ERROR60,2112
#define CR_NAMEDPIPEOPEN_ERROR CR_NAMEDPIPEOPEN_ERROR61,2149
#define CR_NAMEDPIPESETSTATE_ERROR CR_NAMEDPIPESETSTATE_ERROR62,2186
#define CR_CANT_READ_CHARSET	CR_CANT_READ_CHARSET63,2226
#define CR_NET_PACKET_TOO_LARGE CR_NET_PACKET_TOO_LARGE64,2260
#define CR_EMBEDDED_CONNECTION	CR_EMBEDDED_CONNECTION65,2297
#define CR_PROBE_SLAVE_STATUS CR_PROBE_SLAVE_STATUS66,2333
#define CR_PROBE_SLAVE_HOSTS CR_PROBE_SLAVE_HOSTS67,2370
#define CR_PROBE_SLAVE_CONNECT CR_PROBE_SLAVE_CONNECT68,2407
#define CR_PROBE_MASTER_CONNECT CR_PROBE_MASTER_CONNECT69,2444
#define CR_SSL_CONNECTION_ERROR CR_SSL_CONNECTION_ERROR70,2481
#define CR_MALFORMED_PACKET CR_MALFORMED_PACKET71,2518
#define CR_WRONG_LICENSE	CR_WRONG_LICENSE72,2555
#define CR_NULL_POINTER	CR_NULL_POINTER75,2612
#define CR_NO_PREPARE_STMT	CR_NO_PREPARE_STMT76,2642
#define CR_PARAMS_NOT_BOUND	CR_PARAMS_NOT_BOUND77,2674
#define CR_DATA_TRUNCATED	CR_DATA_TRUNCATED78,2707
#define CR_NO_PARAMETERS_EXISTS CR_NO_PARAMETERS_EXISTS79,2738
#define CR_INVALID_PARAMETER_NO CR_INVALID_PARAMETER_NO80,2775
#define CR_INVALID_BUFFER_USE	CR_INVALID_BUFFER_USE81,2812
#define CR_UNSUPPORTED_PARAM_TYPE CR_UNSUPPORTED_PARAM_TYPE82,2847
#define CR_SHARED_MEMORY_CONNECTION CR_SHARED_MEMORY_CONNECTION84,2887
#define CR_SHARED_MEMORY_CONNECT_REQUEST_ERROR CR_SHARED_MEMORY_CONNECT_REQUEST_ERROR85,2940
#define CR_SHARED_MEMORY_CONNECT_ANSWER_ERROR CR_SHARED_MEMORY_CONNECT_ANSWER_ERROR86,2993
#define CR_SHARED_MEMORY_CONNECT_FILE_MAP_ERROR CR_SHARED_MEMORY_CONNECT_FILE_MAP_ERROR87,3046
#define CR_SHARED_MEMORY_CONNECT_MAP_ERROR CR_SHARED_MEMORY_CONNECT_MAP_ERROR88,3099
#define CR_SHARED_MEMORY_FILE_MAP_ERROR CR_SHARED_MEMORY_FILE_MAP_ERROR89,3152
#define CR_SHARED_MEMORY_MAP_ERROR CR_SHARED_MEMORY_MAP_ERROR90,3205
#define CR_SHARED_MEMORY_EVENT_ERROR CR_SHARED_MEMORY_EVENT_ERROR91,3258
#define CR_SHARED_MEMORY_CONNECT_ABANDONED_ERROR CR_SHARED_MEMORY_CONNECT_ABANDONED_ERROR92,3305
#define CR_SHARED_MEMORY_CONNECT_SET_ERROR CR_SHARED_MEMORY_CONNECT_SET_ERROR93,3359
#define CR_CONN_UNKNOW_PROTOCOL CR_CONN_UNKNOW_PROTOCOL94,3412
#define CR_INVALID_CONN_HANDLE	CR_INVALID_CONN_HANDLE95,3451
#define CR_UNUSED_1 CR_UNUSED_196,3489
#define CR_FETCH_CANCELED CR_FETCH_CANCELED97,3542
#define CR_NO_DATA CR_NO_DATA98,3595
#define CR_NO_STMT_METADATA CR_NO_STMT_METADATA99,3648
#define CR_NO_RESULT_SET CR_NO_RESULT_SET100,3701
#define CR_NOT_IMPLEMENTED CR_NOT_IMPLEMENTED101,3754
#define CR_SERVER_LOST_EXTENDED	CR_SERVER_LOST_EXTENDED102,3807
#define CR_STMT_CLOSED	CR_STMT_CLOSED103,3846
#define CR_NEW_STMT_METADATA CR_NEW_STMT_METADATA104,3877
#define CR_ALREADY_CONNECTED CR_ALREADY_CONNECTED105,3930
#define CR_AUTH_PLUGIN_CANNOT_LOAD CR_AUTH_PLUGIN_CANNOT_LOAD106,3983
#define CR_DUPLICATE_CONNECTION_ATTR CR_DUPLICATE_CONNECTION_ATTR107,4036
#define CR_AUTH_PLUGIN_ERR CR_AUTH_PLUGIN_ERR108,4089
#define CR_INSECURE_API_ERR CR_INSECURE_API_ERR109,4142
#define CR_ERROR_LAST CR_ERROR_LAST110,4195

mysql/include/mysql_embed.h,55
#define MYSQL_EMBED_INCLUDEDMYSQL_EMBED_INCLUDED2,29

variableSystem.h,443
#define _VARIABLESYSTEMH__VARIABLESYSTEMH_2,26
#define ALREADY_HANDLED ALREADY_HANDLED17,1142
#define MAX_MATCHVAR_SIZE MAX_MATCHVAR_SIZE18,1169
#define ILLEGAL_MATCHVARIABLE ILLEGAL_MATCHVARIABLE20,1202
#define MAX_WILDCARDS MAX_WILDCARDS22,1236
#define WILDCARD_START(WILDCARD_START23,1286
#define WILDCARD_END(WILDCARD_END24,1329
#define WILDCARD_END_ONLY(WILDCARD_END_ONLY25,1364
#define WILDENDSHIFT(WILDENDSHIFT26,1424

systemVariables.cpp,5541
char* compileDate = __DATE__    " "  __TIME__;compileDate6,77
static char systemValue[MAX_WORD_SIZE]; // common answer placesystemValue9,126
void InitSystemVariables()InitSystemVariables15,316
char* SystemVariable(char* word,char* value)SystemVariable28,644
void DumpSystemVariables()DumpSystemVariables38,876
static char* AssignValue(char* hold, char* value)AssignValue55,1441
static char* Sdate(char* value)Sdate67,1785
static char* SdayOfWeek(char* value)SdayOfWeek79,2091
static char* SdayNumberOfWeek(char* value)SdayNumberOfWeek99,2673
char* SFullTime(char* value)SFullTime123,3253
static char* SFullTimeMS(char* value)SFullTimeMS138,3604
static char* Shour(char* value)Shour149,3917
static char* SleapYear(char* value)SleapYear161,4197
static char* Sdaylightsavings(char* value)Sdaylightsavings178,4666
static char* Sminute(char* value)Sminute192,5018
static char* Smonth(char* value)Smonth204,5303
static char* SmonthName(char* value)SmonthName230,6060
static char* Ssecond(char* value)Ssecond256,6883
static char* Svolleytime(char* value)Svolleytime268,7177
static char* Stime(char* value)Stime279,7492
static char* Szulutime(char* value)Szulutime291,7780
static char* Stimenumbers(char* value)Stimenumbers304,8219
static char* SweekOfMonth(char* value)SweekOfMonth314,8584
static char* Syear(char* value)Syear330,9000
static char* Srand(char* value) // 1 .. 100Srand341,9301
static char* Sall(char* value)Sall355,9673
static char* Sscript(char* value)Sscript363,9859
static char* Sengine(char* value)Sengine373,10244
static char* Sip(char* value)Sip383,10519
static char* Slanguage(char* value)Slanguage392,10715
static char* Sos(char* value)Sos400,10915
char* Slogging(char* value)Slogging420,11333
static char* Suser(char* value)Suser429,11560
static char* Sbot(char* value)Sbot438,11756
static char* Sbotid(char* value)Sbotid447,11954
static char* Sdict(char* value)Sdict455,12168
static char* StableInput(char* value)StableInput464,12401
static char* SfactExhaustion(char* value)SfactExhaustion472,12609
static char* Sversion(char* value)Sversion484,12912
static char* Sfact(char* value)Sfact493,13133
static char* Shost(char* value)Shost502,13359
static char* Sregression(char* value)Sregression514,13572
static char* ShttpResponse(char* value)ShttpResponse526,13825
static char* Slastcurltime(char* value)Slastcurltime539,14106
static char* SmaxMatchVariables(char* value)SmaxMatchVariables552,14382
static char* SmaxFactSets(char* value)SmaxFactSets565,14663
static char* ScrossTalk(char* value)ScrossTalk578,14938
static char* ScrossTalk1(char* value)ScrossTalk1590,15158
static char* Sdocument(char* value)Sdocument601,15378
static char* SfreeText(char* value)SfreeText609,15608
static char* SfreeWord(char* value)SfreeWord618,15871
static char* SfreeFact(char* value)SfreeFact626,16122
static char* Srule(char* value) Srule634,16331
static char* Sserver(char* value)Sserver644,16681
static char* SmyIP(char* value)SmyIP655,16912
static char* Stopic(char* value) Stopic663,17069
static char* SactualTopic(char* value) SactualTopic672,17271
static char* STrace(char* value)STrace681,17503
static char* SPID(char* value)SPID691,17733
static char* SForkCount(char* value)SForkCount706,18064
static char* SServerType(char* value)SServerType720,18401
static char* SRestart(char* value)SRestart732,18727
static char* STimeout(char* value)STimeout752,19157
static char* Sforeign(char* value)Sforeign764,19499
static char* Sinput(char* value)Sinput777,19866
static char* Slength(char* value) Slength790,20154
static char* Smore(char* value)Smore799,20368
static char* SmoreQuestion(char* value)SmoreQuestion807,20560
static char* sentencehold = NULL;sentencehold815,20769
char* SoriginalInput(char* value)SoriginalInput817,20804
static char* SoriginalSentence(char* value)SoriginalSentence853,21699
static char* Sparsed(char* value) Sparsed870,22204
static char* Ssentence(char* value) Ssentence878,22414
static char* Squestion(char* value) Squestion886,22626
static char* Scommand(char* value) Scommand899,22993
static char* Squotation(char* value) Squotation912,23356
static char* Simpliedyou(char* value) Simpliedyou925,23715
static char* SimpliedSubject(char* value)SimpliedSubject938,24086
static char* Stense(char* value) Stense950,24468
static char* SexternalTagging(char* value)SexternalTagging966,25053
static char* StokenFlags(char* value) StokenFlags978,25302
static char* SuserFirstLine(char* value)SuserFirstLine992,25631
static char* SuserInput(char* value) SuserInput1001,25853
static char* SrevisedInput(char* value) SrevisedInput1014,26210
static char* Svoice(char* value) Svoice1022,26408
static char* SinputSize(char* value)SinputSize1035,26766
static char* SinputLimited(char* value)SinputLimited1044,26975
static char* SbadSpell(char* value)SbadSpell1052,27176
static char* SinputRejoinder(char* value)SinputRejoinder1067,27589
static char* SlastOutput(char* value) SlastOutput1091,28275
static char* SlastQuestion(char* value) SlastQuestion1099,28512
static char* SoutputRejoinder(char* value)SoutputRejoinder1109,28827
static char* Sresponse(char* value) Sresponse1133,29520
static char* Sserverlogfolder(char* value) Sserverlogfolder1142,29740
static char* Suserlogfolder(char* value) Suserlogfolder1151,29952
static char* Stmpfolder(char* value) Stmpfolder1160,30163
SYSTEMVARIABLE sysvars[] =sysvars1169,30368

outputSystem.cpp,5087
unsigned int maxOutputUsed = 0;maxOutputUsed2,20
unsigned int currentOutputLimit = MAX_BUFFER_SIZE;	// max size of current output basecurrentOutputLimit3,52
char* currentOutputBase = NULL;		// current base of buffer which must not overflowcurrentOutputBase4,138
char* currentRuleOutputBase = NULL;	// the partial buffer within outputbase started for current currentRuleOutputBase5,221
#define MAX_OUTPUT_NEST MAX_OUTPUT_NEST6,353
static char* oldOutputBase[MAX_OUTPUT_NEST];oldOutputBase7,380
static char* oldOutputRuleBase[MAX_OUTPUT_NEST];oldOutputRuleBase8,425
static unsigned int oldOutputLimit[MAX_OUTPUT_NEST];oldOutputLimit9,474
char* outputCode[MAX_GLOBAL];outputCode10,527
int oldOutputIndex = 0;oldOutputIndex11,557
unsigned int outputNest = 0;outputNest12,581
    size_t len = strlen(word);len32,1485
void ResetOutput()ResetOutput43,1817
void PushOutputBuffers()PushOutputBuffers48,1861
void PopOutputBuffers()PopOutputBuffers61,2238
void AllocateOutputBuffer()AllocateOutputBuffer70,2510
void FreeOutputBuffer()FreeOutputBuffer78,2803
static bool IsAssignmentOperator(char* word)IsAssignmentOperator84,2958
char* GetCommandArg(char* ptr, char* buffer, FunctionResult& result, unsigned int control)GetCommandArg91,3350
char* ReadShortCommandArg(char* ptr, char* buffer, FunctionResult& result, unsigned int control)ReadShortCommandArg105,4140
char* ReadFunctionCommandArg(char* ptr, char* buffer, FunctionResult& result, bool optional)ReadFunctionCommandArg116,4824
static char* FixFormatOutput(char* output, unsigned int controls) // revises output in placeFixFormatOutput145,5595
bool LegalVarChar(char at)LegalVarChar161,6078
static char* ReadUserVariable(char* input, char* var)ReadUserVariable166,6174
static char* ReadMatchVariable(char* input, char* var)ReadMatchVariable185,6808
void ReformatString(char starter, char* input, char*& output, FunctionResult& result, unsigned iReformatString194,7003
void StdNumber(char* word, char*& buffer, int controls) // text numbers may have sign and decimaStdNumber405,15931
char* StdIntOutput(int n)StdIntOutput470,17834
static char* ProcessChoice(char* ptr, char* buffer, FunctionResult &result, int controls) //   gProcessChoice485,18142
char* FreshOutput(char* ptr, char* buffer, FunctionResult &result, int controls, unsigned int liFreshOutput564,21307
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contword598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contptr598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contspace598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contbuffer598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contcontrols598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contresult598,22784
static char* Output_Percent(char* word, char* ptr, char* space, char*& buffer, unsigned int contonce598,22784
static char* Output_Backslash(char* word, char* ptr, char* space, char*& buffer, unsigned int coOutput_Backslash617,23571
static char* ResetOutputPtr(char* start, char* buffer)ResetOutputPtr646,24654
static char* Output_FunctionVariable(char* word, char* ptr, char*& buffer, FunctionResult& resulOutput_FunctionVariable658,25095
static void Output_Indirect(char* word, char* ptr, char* space, char*& buffer, unsigned int contOutput_Indirect692,26233
static void Output_VariableIndirect(char* word, char* ptr, char*& buffer, FunctionResult& resultOutput_VariableIndirect716,27413
static void Output_OrdinaryFunction(char* word, char* ptr, char* space, char*& buffer, FunctionROutput_OrdinaryFunction724,27769
static char* Output_Function(char* word, char* ptr, char* space, char*& buffer, unsigned int conOutput_Function752,28967
static char* Output_AttachedPunctuation(char* word, char* ptr, char* space, char*& buffer, unsigOutput_AttachedPunctuation771,30226
static char* Output_Text(char* word, char* ptr, char* space, char*& buffer, unsigned int controlOutput_Text777,30411
static char* Output_AtSign(char* word, char* ptr, char* space, char*& buffer, unsigned int contrOutput_AtSign798,31350
static char* Output_Bracket(char* word, char* ptr, char* space, char*& buffer, unsigned int contOutput_Bracket854,33151
static char* Output_Quote(char* word, char* ptr, char* space, char*& buffer, unsigned int controOutput_Quote867,33640
static char* Output_String(char* word, char* ptr, char* space, char*& buffer, unsigned int contrOutput_String909,35153
static char* Output_Underscore(char* word, char* ptr, char* space, char*& buffer, unsigned int cOutput_Underscore931,36545
static char* Output_Dollar(char* word, char* ptr, char* space, char*& buffer, unsigned int contrOutput_Dollar960,37685
char* Output(char* ptr, char* buffer, FunctionResult &result, int controls)Output1013,40002

englishTagger.cpp,10979
unsigned int ambiguousWords;ambiguousWords4,55
bool reverseWords = false;reverseWords5,84
int ignoreRule = -1;ignoreRule6,111
static int ttLastChanged = 0;ttLastChanged7,132
static WORDP firstAux = NULL;firstAux8,162
static unsigned int quotationCounter;quotationCounter12,326
static unsigned char clauseBit;clauseBit13,364
static unsigned char prepBit;prepBit14,396
static unsigned char verbalBit;verbalBit15,426
static unsigned int quotationRoles[20];quotationRoles16,458
static unsigned int quotationRoleIndex;quotationRoleIndex17,498
static unsigned char startStack[MAX_CLAUSES];  // where we began this levelstartStack18,538
static unsigned char auxVerbStack[MAX_CLAUSES];	// most recent aux for this levelauxVerbStack19,614
static unsigned char objectStack[MAX_CLAUSES];	// most recent object for this levelobjectStack20,696
unsigned char subjectStack[MAX_CLAUSES];  // the subject found for this level of sentence piece subjectStack21,780
unsigned char verbStack[MAX_CLAUSES];  // the verb found for this level of sentence piece (tied verbStack22,896
unsigned int needRoles[MAX_CLAUSES]; // what we seek in direct object land or verb land at currnneedRoles23,1006
unsigned int roleIndex;roleIndex24,1133
static unsigned int currentMainVerb = 0;currentMainVerb25,1157
static unsigned int currentVerb2 = 0;currentVerb226,1198
char* usedTrace = NULL;usedTrace28,1284
int usedWordIndex = 0;usedWordIndex29,1308
uint64 usedType = 0;usedType30,1331
static int firstnoun;	 // first noun we see in a sentence (maybe object of wrapped prep from endfirstnoun32,1353
static int determineVerbal;determineVerbal33,1451
static int firstNounClause;firstNounClause34,1479
#define UNKNOWN_CONSTRAINT UNKNOWN_CONSTRAINT36,1508
#define NO_FIELD_INCREMENT NO_FIELD_INCREMENT37,1537
char** commentsData;commentsData102,5524
#define ZONE_LIMIT ZONE_LIMIT107,5622
static unsigned char zoneBoundary[ZONE_LIMIT];	 // where commas arezoneBoundary108,5644
static unsigned int	 zoneData[ZONE_LIMIT];		// what can be found in a zone - noun before verb, vzoneData109,5712
static unsigned char zoneMember[MAX_SENTENCE_LENGTH];zoneMember110,5829
static unsigned int zoneIndex;			zoneIndex111,5883
static int predicateZone; // where is main verb foundpredicateZone112,5917
static unsigned int currentZone;currentZone113,5971
static unsigned int ambiguous;ambiguous114,6004
unsigned char bitCounts[MAX_SENTENCE_LENGTH]; // number of tags still to resolve in this word pobitCounts174,9738
int lastClause = 0; lastClause175,9841
int lastVerbal = 0;lastVerbal176,9862
int lastPhrase = 0;lastPhrase177,9882
int lastConjunction = 0;lastConjunction178,9902
static bool idiomed = false;idiomed179,9927
unsigned char quotationInProgress = 0;quotationInProgress181,9957
typedef struct {__anon81612afa0108193,10348
	int  number_of_words;  /* number of words to be tagged */number_of_words194,10365
	int  next_word;        /* needed internally */next_word195,10424
	char **word;           /* array of pointers to the words */word196,10472
	char **inputtag;       /* array of pointers to the pretagging information */inputtag197,10533
	const char **resulttag;/* array of pointers to the resulting tags */resulttag198,10611
	const char **lemma;    /* array of pointers to the lemmas */lemma199,10681
} TAGGER_STRUCT;TAGGER_STRUCT200,10743
typedef char*(*FindIt)(char* word);FindIt201,10760
TAGGER_STRUCT ts;  /* tagger interface data structure */ts212,11219
TAGGER_STRUCT tschunk;  /* tagger interface data structure */tschunk213,11276
char* GetTag(int i)GetTag214,11338
bool MatchTag(char* tag,int i)MatchTag219,11400
void MarkChunk()MarkChunk315,15317
static void TreeTagger()TreeTagger371,16931
static void BlendWithTreetagger(bool &changed)BlendWithTreetagger547,22470
void InitTreeTagger(char* params) // tags=xxxx - just triggers this thingInitTreeTagger647,25928
static void DumpCrossReference(int start, int end)DumpCrossReference690,27888
static void SetCanonicalValue(int start,int end)SetCanonicalValue714,28620
static char* PosBits(uint64 bits, char* buff)PosBits903,36547
static int NextPos(int i)NextPos915,36795
static int Next2Pos(int i)Next2Pos921,36900
static char* PropertyBits(uint64 bits, char* buff)PropertyBits928,37067
static bool LimitValues(int i, uint64 bits,char* msg,bool& changed)LimitValues940,37326
static void PerformPosTag(int start, int end)PerformPosTag993,38917
static void InitRoleSentence(int start, int end)InitRoleSentence1264,49242
void TagInit()TagInit1302,50443
void TagIt() // get the set of all possible tags. Parse if one can to reduce this set and determTagIt1342,52288
static char* OpDecode(uint64 field)OpDecode1439,55438
bool IsDeterminedNoun(int i,int& det)IsDeterminedNoun1470,56646
bool IsDualNoun(int i)IsDualNoun1501,57636
static unsigned int PriorPhrasalVerb(int particle,WORDP & D)PriorPhrasalVerb1528,58447
static bool NounFollows( int i,bool thruComma)NounFollows1591,61065
static int TestTag(int &i, int control, uint64 bits,int direction,bool tracex)TestTag1609,61579
static  char* BitLabels(uint64 properties)BitLabels2200,79852
static bool ApplyRulesToWord( int j,bool & changed)ApplyRulesToWord2221,80253
static void SetIdiom(int at, int end)SetIdiom2366,86006
unsigned int ProcessIdiom(char* word, int i, unsigned int words,bool &changed)ProcessIdiom2374,86169
static void WordIdioms(bool &changed)WordIdioms2676,96830
static void GuessOnProbability(bool &changed) GuessOnProbability2824,101970
static bool ApplyRules() // get the set of all possible tags.ApplyRules2852,103122
static void Showit(char* buffer, const char* what,uint64 bits)Showit2933,105867
static void ParseFlags0(char* buffer, int i)ParseFlags02939,105995
static void ParseFlags(char* buffer, int i)ParseFlags2975,108472
void DecodeTag(char* buffer, uint64 type, uint64 tie, uint64 originalBits)DecodeTag3035,111699
static void Tags(char* buffer, int i)Tags3137,117552
char* DumpAnalysis(int start, int end,uint64 flags[MAX_SENTENCE_LENGTH],const char* label,bool oDumpAnalysis3154,118192
void MarkTags(unsigned int i)MarkTags3244,121923
like a subject, verb, object, etc. So until we see a verb, for example, we are not expected to sthat3350,126933
1.  pretend they are commas for appositive: Steve Case (AOL s former CEO)CEO3395,129398
#define INCLUSIVE INCLUSIVE3475,133039
#define EXCLUSIVE EXCLUSIVE3476,133059
#define AMBIGUOUS_VERBAL AMBIGUOUS_VERBAL3478,133080
#define AMBIGUOUS_PRONOUN AMBIGUOUS_PRONOUN3479,133143
#define GUESS_NOCHANGE GUESS_NOCHANGE3481,133206
#define GUESS_ABORT GUESS_ABORT3482,133231
#define GUESS_RETRY GUESS_RETRY3483,133253
#define GUESS_CONTINUE GUESS_CONTINUE3484,133275
#define GUESS_RESTART GUESS_RESTART3485,133300
static unsigned int GetClauseTail(int i)i3487,133325
	int clause = clauses[i];clause3489,133368
static unsigned int GetVerbalTail(int i)GetVerbalTail3498,133501
static unsigned int GetPhraseHead(int i)GetPhraseHead3509,133677
static unsigned int GetPhraseTail(int i)GetPhraseTail3520,133855
static void ErasePhrase(int i)ErasePhrase3531,134031
static void AddRoleLevel(unsigned int rolebits,int i)AddRoleLevel3545,134256
static bool NounSeriesFollowedByVerb(int at)NounSeriesFollowedByVerb3556,134567
static bool ResolveByStatistic(int i,bool &changed) ResolveByStatistic3562,134802
static int GetZone(unsigned int i)GetZone3721,140510
void MarkRoles(int i)MarkRoles3730,140695
static void AddRole( int i, uint64 role)AddRole3837,147118
static void SetRole( int i, uint64 role,bool revise, int currentVerb)SetRole3849,147614
static bool ProcessSplitNoun(unsigned int verb1,bool &changed)ProcessSplitNoun3917,151936
static bool ProcessImpliedClause(unsigned int verb1,bool &changed) ProcessImpliedClause3983,154494
static bool ProcessCommaClause(unsigned int verb1,bool &changed)ProcessCommaClause4004,155202
static unsigned int ForceValues(int i, uint64 bits,char* msg,bool& changed)ForceValues4016,155578
static bool AcceptsInfinitiveObject(int i)AcceptsInfinitiveObject4029,155907
static bool ProcessReducedPassive(unsigned int verb1,bool allowObject,bool &changed)ProcessReducedPassive4034,156080
static void AddClause(int i,char* msg)AddClause4105,159223
static void ExtendChunk(int from, int to,int chunk[MAX_SENTENCE_LENGTH])ExtendChunk4143,161084
static int FindPriorVerb(int at)FindPriorVerb4152,161401
static int FindPriorNoun(int i)FindPriorNoun4162,161546
static bool ImpliedNounObjectPeople(int i, uint64 role,bool & changed) // for objectImpliedNounObjectPeople4169,161735
static void MigrateObjects(int start, int end)MigrateObjects4183,162419
static bool FinishSentenceAdjust(bool resolved, bool & changed, int start, int end)FinishSentenceAdjust4234,164047
static int FindCoordinate(int i) // i is on commaFindCoordinate4969,198924
static void DoCoord( int i,  int before,  int after, uint64 type)DoCoord4984,199308
static void ForceNounPhrase(int i, bool &changed) // insure things before are proper wordsForceNounPhrase5015,201233
static int NearestProbableNoun(int i)NearestProbableNoun5026,201586
static int NearestProbableVerb(int i)NearestProbableVerb5036,201918
static int ConjoinPhrase(int i, bool &changed)ConjoinPhrase5046,202213
static int ConjoinAdjective( int i, bool &changed)ConjoinAdjective5103,204290
static int ConjoinNoun( int i, bool &changed)ConjoinNoun5134,205545
static int ConjoinVerb( int i, bool &changed)ConjoinVerb5273,210686
static int ConjoinImmediate( int i, bool & changed)ConjoinImmediate5370,214682
static bool FlipPrepToConjunction( int i,bool question, bool changed) // at the verb we detectFlipPrepToConjunction5465,217973
static  int ConjoinAdverb( int i, bool &changed)ConjoinAdverb5490,219161
static unsigned int HandleCoordConjunct( int i,bool &changed) // determine kind of conjunction- HandleCoordConjunct5522,220445
static void DropLevel()DropLevel5614,223818
static void CloseLevel(int  i)CloseLevel5620,223952
static void DecodeneedRoles(unsigned int x,char* buffer)DecodeneedRoles5659,225464
WORDP GetPhrasalVerb( int i)GetPhrasalVerb5685,226934
static void SeekObjects( int i,bool &changed) // this is a verb, what objects does it wantSeekObjects5699,227199
static bool IsLegalAddress(unsigned int first)IsLegalAddress5793,232234
static bool PossibleNounAfter(int i)PossibleNounAfter5807,232878
static bool IsLegalAppositive(int first, int second)IsLegalAppositive5817,233120
static bool ProcessOmittedClause(unsigned int verb,bool &changed) // They were certain (they werProcessOmittedClause5847,234798
static void HandleComplement( int i,bool & changed)HandleComplement5874,235654
static void ShowZone(unsigned int zone)ShowZone6246,253944
1. phrase (from start of phrase which is usually a preposition but might be omitted) til noun enomitted6269,255074

javascript.cpp,503
duk_context *ctxPermanent = NULL;ctxPermanent6,120
duk_context *ctxTransient = NULL;ctxTransient7,154
duk_context *ctx;ctx8,188
#define stricmp stricmp13,249
#define strnicmp strnicmp14,277
static duk_ret_t native_log(duk_context *ctx) {native_log20,451
FunctionResult RunJavaScript(char* definition, char* buffer, unsigned int args)RunJavaScript30,853
void DeletePermanentJavaScript()DeletePermanentJavaScript217,6474
void DeleteTransientJavaScript()DeleteTransientJavaScript228,6627

textUtilities.h,2807
#define _TEXTUTILITIESH__TEXTUTILITIESH_2,25
#define TOKEN_INCLUSIVE TOKEN_INCLUSIVE19,1170
#define TOKEN_EXCLUSIVE TOKEN_EXCLUSIVE20,1196
#define TOKEN_INCOMPLETE TOKEN_INCOMPLETE21,1222
enum PurifyKind {PurifyKind23,1250
	SYSTEM_PURIFY = 0,SYSTEM_PURIFY24,1268
	INPUT_PURIFY = 1,INPUT_PURIFY25,1288
	INPUT_TESTOUTPUT_PURIFY = 2,INPUT_TESTOUTPUT_PURIFY26,1307
	TAB_PURIFY = 3TAB_PURIFY27,1337
#define BOMSET BOMSET30,1357
#define BOMUTF8 BOMUTF831,1374
#define NOBOM NOBOM32,1392
#define ESCAPE_FLAG ESCAPE_FLAG34,1409
#define SPACES SPACES36,1519
#define PUNCTUATIONS PUNCTUATIONS37,1553
#define ENDERS	ENDERS38,1613
#define BRACKETS BRACKETS39,1649
#define ARITHMETICS ARITHMETICS40,1690
#define SYMBOLS SYMBOLS41,1767
#define CONVERTERS CONVERTERS42,1843
#define QUOTERS QUOTERS43,1875
#define VALIDNONDIGIT VALIDNONDIGIT45,1909
#define VALIDDIGIT VALIDDIGIT46,1933
#define VALIDUPPER VALIDUPPER47,1954
#define VALIDLOWER VALIDLOWER48,1975
#define VALIDUTF8 VALIDUTF849,1996
#define NOSTYLE_NUMBERS NOSTYLE_NUMBERS51,2017
#define AMERICAN_NUMBERS AMERICAN_NUMBERS52,2044
#define INDIAN_NUMBERS INDIAN_NUMBERS53,2071
#define FRENCH_NUMBERS FRENCH_NUMBERS54,2096
#define UNINIT UNINIT56,2122
#define SHOUT SHOUT58,2141
#define ABBREVIATION ABBREVIATION59,2157
#define NOT_A_NUMBER NOT_A_NUMBER61,2181
#define DIGIT_NUMBER DIGIT_NUMBER62,2213
#define CURRENCY_NUMBER CURRENCY_NUMBER63,2297
#define PLACETYPE_NUMBER PLACETYPE_NUMBER64,2323
#define ROMAN_NUMBER ROMAN_NUMBER65,2350
#define WORD_NUMBER WORD_NUMBER66,2373
#define REAL_NUMBER REAL_NUMBER67,2427
#define FRACTION_NUMBER FRACTION_NUMBER68,2486
#define LETTERMAX LETTERMAX70,2513
#define RESTORE_LOGGING(RESTORE_LOGGING72,2535
#define MAX_CONDITIONALS MAX_CONDITIONALS89,3171
#define IsPunctuation(IsPunctuation105,3640
#define IsRealPunctuation(IsRealPunctuation106,3697
#define GetLowercaseData(GetLowercaseData107,3762
#define GetUppercaseData(GetUppercaseData108,3826
#define GetNestingData(GetNestingData109,3890
#define IsWhiteSpace(IsWhiteSpace111,3949
#define IsWordTerminator(IsWordTerminator112,4015
#define IsVowel(IsVowel113,4095
#define IsAlphaUTF8DigitNumeric(IsAlphaUTF8DigitNumeric114,4151
#define IsUpperCase(IsUpperCase115,4233
#define IsLowerCase(IsLowerCase116,4303
#define IsAlphaUTF8(IsAlphaUTF8117,4373
#define IsLegalNameCharacter(IsLegalNameCharacter118,4474
#define IsDigit(IsDigit119,4538
#define IsAlphaUTF8OrDigit(IsAlphaUTF8OrDigit120,4613
#define IsNonDigitNumberStarter(IsNonDigitNumberStarter121,4699
#define IsNumberStarter(IsNumberStarter122,4793
#define IsComparison(IsComparison123,4919
#define IsSign(IsSign124,4980
#define IsInvalidEmailCharacter(IsInvalidEmailCharacter125,5021

markSystem.cpp,3251
#define GENERIC_MEANING GENERIC_MEANING39,1708
int uppercaseFind = -1; // unknownuppercaseFind42,1794
static bool failFired = false;failFired43,1829
bool trustpos = false;trustpos44,1860
int marklimit = 0;marklimit45,1883
static STACKREF wordlist = NULL;wordlist46,1902
static HEAPREF pendingConceptList = NULL;pendingConceptList47,1935
bool showMark = false;showMark50,2135
static unsigned int markLength = 0; // prevent long lines in mark listing tracemarkLength51,2158
#define MARK_LINE_LIMIT MARK_LINE_LIMIT52,2238
int upperCount, lowerCount;upperCount53,2265
int upperCount, lowerCount;lowerCount53,2265
ExternalTaggerFunction externalPostagger = NULL;externalPostagger54,2293
char unmarked[MAX_SENTENCE_LENGTH]; // can completely disable a word from mark recognitionunmarked55,2342
bool RemoveMatchValue(WORDP D, int position)RemoveMatchValue57,2434
static int WhereWordHitWithData(WORDP D, int start,unsigned char* data)WhereWordHitWithData84,3322
static int WhereWordHit(WORDP D, int start)WhereWordHit97,3661
bool HasMarks(int start)HasMarks111,3983
bool MarkWordHit(int depth, MEANING exactWord, WORDP D, int meaningIndex, int start, int end)MarkWordHit121,4325
unsigned int GetIthSpot(WORDP D, int i, int& start, int& end)GetIthSpot211,7719
static unsigned char* DataIntersect(WORDP D)DataIntersect231,8348
unsigned int GetNextSpot(WORDP D, int start, int &startPosition, int& endPosition, bool reverse,GetNextSpot300,10664
static void TraceHierarchy(FACT* F,char* msg)TraceHierarchy353,12918
static void AddPendingConcept(FACT* F, unsigned int start, unsigned int end)AddPendingConcept367,13335
static bool ProcessPendingFact(FACT* F, int start, int end)ProcessPendingFact373,13535
static void ProcessPendingConcepts()ProcessPendingConcepts389,14217
static bool IsValidStart(int start)IsValidStart462,16828
MEANING EncodeConceptMember(char* word,int& flags)EncodeConceptMember491,17588
static int MarkSetPath(int depth,int exactWord,MEANING M, int start, int end, unsigned int levelMarkSetPath513,18202
static void RiseUp(int depth, int exactWord,MEANING M,unsigned int start, unsigned int end,unsigRiseUp642,23889
static void MarkAllMeaningAndImplications(int depth, MEANING M, int start, int end, int kind, boMarkAllMeaningAndImplications661,24734
void MarkMeaningAndImplications(int depth, MEANING exactWord,MEANING M,int start, int end,int kiMarkMeaningAndImplications686,25792
static void HuntMatch(int kind, char* word,bool strict,int start, int end, unsigned int& usetracHuntMatch797,31176
static void SetSequenceStamp() //   mark words in sequence, original and canonical (but not mixeSetSequenceStamp855,33825
static void StdMark(MEANING M, unsigned int start, unsigned int end, int kind) StdMark1051,41594
static STACKREF BuildConceptList(int field,int verb)BuildConceptList1060,42073
static void ProcessWordLoop(STACKREF verblist, int verb, STACKREF subjectlist, int subject, STACProcessWordLoop1099,43090
static void ProcessSentenceConcepts(int subject, int verb, int object)ProcessSentenceConcepts1174,46128
static void MarkFundamentalMeaning()MarkFundamentalMeaning1187,46683
void MarkAllImpliedWords(bool limitnlp)MarkAllImpliedWords1263,48773

testing.cpp,19224
static bool down_is = true;down_is4,44
static int downcount = 0;downcount6,73
static int volleyCounter = 0;volleyCounter7,99
static int relevantVolleyCounter = 0;relevantVolleyCounter8,129
static int itemcount = 0;itemcount9,167
bool nomixedcase = false;nomixedcase10,193
void InitStats()InitStats12,220
bool VerifyAuthorization(FILE* in) //   is he allowed to use :commandsVerifyAuthorization35,659
static int nooob = 0;nooob85,2029
static int lineLimit = 0; // in abstract report lines that are longer than this...lineLimit86,2051
static WORDP topLevel = 0;topLevel87,2134
static unsigned int err = 0;err88,2161
static int inLine = 0;inLine89,2190
static int inDepth = 0;inDepth90,2213
static unsigned int filesSeen; filesSeen91,2237
static 	char directory[MAX_WORD_SIZE];directory92,2269
static char* abstractBuffer;abstractBuffer93,2308
static int longLines;longLines94,2337
static uint64 verifyToken;verifyToken95,2359
static bool isTracing = false;isTracing96,2386
static bool isTiming = false;isTiming97,2417
static WORDP dictUsedG;dictUsedG98,2447
static FACT* factUsedG;factUsedG99,2471
static char* textUsedG;textUsedG100,2495
static int trials;trials101,2519
static int nextRule = 0;nextRule102,2538
static bool keepname = false;keepname103,2563
#define ABSTRACT_SPELL ABSTRACT_SPELL107,2640
#define ABSTRACT_SET_MEMBER ABSTRACT_SET_MEMBER108,2665
#define ABSTRACT_CANONICAL ABSTRACT_CANONICAL109,2695
#define ABSTRACT_PRETTY ABSTRACT_PRETTY110,2724
#define ABSTRACT_VP ABSTRACT_VP111,2750
#define ABSTRACT_NOCODE ABSTRACT_NOCODE112,2773
#define ABSTRACT_STORY ABSTRACT_STORY113,2800
#define ABSTRACT_RESPONDER ABSTRACT_RESPONDER114,2826
#define ABSTRACT_RESTRICTIONS ABSTRACT_RESTRICTIONS115,2857
#define ABSTRACT_COVERAGE ABSTRACT_COVERAGE116,2956
static bool fromScript = false;fromScript118,2987
static MEANING* meaningList; // list of meanings from :conceptsmeaningList128,3318
static MEANING* meaningLimit; // end of meaninglistpmeaningLimit129,3382
std::map <const char*, int> statistics; // statistics datastatistics133,3472
int CountSet(WORDP D,unsigned int baseStamp) //   full recursive referencingCountSet139,3668
static int CountDown(MEANING T,int all,int depth,unsigned int baseStamp)CountDown176,4747
static void Indent(int count,bool nonumber)Indent215,5808
static bool DumpOne(WORDP S,int all,int depth,bool shown)DumpOne221,5937
static void MarkExclude(WORDP D)MarkExclude268,7197
static void C_AutoReply(char* input)C_AutoReply283,7538
static void MarkUp(WORDP D) // mark all that can be seen from here going up as memberMarkUp291,7717
static void C_Common(char* input)C_Common308,8051
static void C_NoReact(char* input)C_NoReact398,9988
static void C_Plural(char* input)C_Plural404,10092
static void C_POS(char* input)C_POS412,10267
static void C_Prepare(char* input)C_Prepare447,11525
static void C_Canonize(char* input)C_Canonize510,13573
static void C_Spellit(char* input)C_Spellit558,14889
static void C_Tokenize(char* input)C_Tokenize571,15194
static void MemorizeRegress(char* input)MemorizeRegress618,16600
static void VerifyRegress(char* file)VerifyRegress763,21444
static void C_Regress(char* input)C_Regress1070,32538
static void C_Source(char* input)C_Source1078,32744
static void ReadNextDocument(char* name,uint64 value) // ReadDocument(inBuffer,sourceFile) calleReadNextDocument1102,33440
static void C_Document(char* input)C_Document1178,36198
static void DoAssigns(char* ptr)  // find variable assignmentsDoAssigns1237,37933
static void C_TestPattern(char* input)C_TestPattern1385,41767
static void GambitTestTopic(char* topic)GambitTestTopic1514,45880
static void SaveReference(char* original, char* context,char* endargs)SaveReference1580,47977
static void C_VariableReference(char* input)C_VariableReference1705,51499
static void C_TestTopic(char* input)C_TestTopic1766,53715
static void VerifyAccess(char* topic, char kind, char* prepassTopic) // prove patterns match comVerifyAccess1796,54577
static void VerifyAllTopics(char kind,char* prepassTopic,char* topic)VerifyAllTopics2256,76231
static void AllGambitTests(char* topic)AllGambitTests2269,76584
static void C_Verify(char* input)C_Verify2282,76891
bool stanfordParser = false;stanfordParser2341,78684
static void PennWrite(char* name,uint64 flags)PennWrite2343,78714
static void C_PennFormat(char* file)C_PennFormat2449,81212
static void ShowFailCount(WORDP D,uint64 junk)ShowFailCount2466,81770
static void C_TrimDown(char* file)C_TrimDown2474,81979
static void C_JAHuman(char* file)C_JAHuman2501,82511
static int patternCount = 0;patternCount2583,85187
static int patternSize = 0;patternSize2584,85216
static int conceptValues = 0;conceptValues2585,85244
static int inputCount = 0;inputCount2586,85274
static int nodeCount = 0;nodeCount2587,85301
static int maxPatternSize;maxPatternSize2588,85327
static char* maxPattern = NULL;maxPattern2589,85354
static char* maxConcept = NULL;maxConcept2590,85386
static int maxConceptValue = 0;maxConceptValue2591,85418
static char* conceptName = NULL;conceptName2592,85450
static bool usesNL = false;usesNL2593,85483
static void JSONSizing(WORDP D, int subject)JSONSizing2595,85512
static void C_TestPatternInfo(char* file)C_TestPatternInfo2717,88655
static void DictWrite1(char* file)DictWrite12767,90035
static void C_DictWrite(char* input)C_DictWrite2804,91094
static void C_CheckList(char* file)C_CheckList2820,91383
static void C_JA2Starts(char* file)C_JA2Starts2846,91877
static void C_RemoveCRLF(char* file)C_RemoveCRLF2898,93318
static void C_JA2Source(char* file)C_JA2Source2919,93852
static void C_PennDecode(char* file)C_PennDecode2977,95581
static void C_PennMatch(char* file)C_PennMatch3025,96436
static void C_PennNoun(char* file)C_PennNoun3756,132169
static void C_VerifyPos(char* file)C_VerifyPos3841,135059
static void C_TimePos(char* file) // how many wps for pos taggingC_TimePos3932,137745
static void C_VerifySpell(char* file) // test spell checker against a file of entries  wrong-speC_VerifySpell3958,138579
static void VerifySubstitutes1(WORDP D, uint64 unused)VerifySubstitutes14006,140332
static void C_VerifySubstitutes(char* ptr) //   see if substitutes work...C_VerifySubstitutes4068,142109
static bool StripEmbedded(char* word,char* &ptr,char* original,char* ref,char* notref,bool &contStripEmbedded4073,142226
static bool FlushEmbedded(char* & ptr,char* ref,char* notref,unsigned int &control)FlushEmbedded4112,143338
static void C_WikiText(char* ptr)C_WikiText4157,144761
static void C_Bot(char* name)C_Bot4851,163834
static void C_Build(char* input)C_Build4862,164244
static void C_Quit(char* input)C_Quit4968,168166
static void C_Restart(char* input)C_Restart4978,168371
static void C_User(char* username)C_User5016,169097
static void Rephrase(char* buffer,char* out) // rewrite script to human understandableRephrase5024,169363
static void C_Debug(char* x)C_Debug5069,170610
static void C_ClearLog(char* x)C_ClearLog5074,170695
static int getval(int x, int y)getval5083,170871
static void C_Crash(char* x)C_Crash5088,170923
static void C_Flush(char* x)C_Flush5099,171232
static void DrawSynsets(MEANING M)DrawSynsets5109,171408
static void DrawDownHierarchy(MEANING T,unsigned int depth,unsigned int limit,bool sets)DrawDownHierarchy5140,172402
static void DumpConceptPath(MEANING T) // once you are IN a set, the path can be thisDumpConceptPath5233,175276
static void ShowConcepts(MEANING T)ShowConcepts5267,176011
static void C_Concepts(char* input)C_Concepts5317,177790
static void C_Down(char* input)C_Down5369,178998
static void FindXWord(WORDP D, uint64 pattern)FindXWord5388,179601
static void C_FindWords(char* input)C_FindWords5393,179741
static bool TestSetPath(MEANING T,unsigned int depth) // once you are IN a set, the path can be TestSetPath5398,179826
static bool TestUpHierarchy(MEANING T,int depth)TestUpHierarchy5416,180408
static void TestSet(WORDP D,uint64 flags)TestSet5470,182058
static void C_Nonset(char* buffer) // NOUN ~sizesC_Nonset5480,182392
static void C_HasFlag(char* buffer)C_HasFlag5491,182657
static bool HitTest(WORDP D, WORDP set) // can we hit thisHitTest5524,183371
static void C_Overlap(char* buffer)C_Overlap5546,183805
static bool DumpSetPath(MEANING T,unsigned int depth) // once you are IN a set, the path can be DumpSetPath5581,184623
static bool DumpUpHierarchy(MEANING T,int depth)DumpUpHierarchy5615,185619
static void C_Up(char* input)C_Up5704,188874
static void C_MixedCase(char* input)C_MixedCase5714,189066
static void C_DualUpper(char* input)C_DualUpper5754,190330
static void C_Word(char* input)C_Word5796,191479
static void WordDump(WORDP D,uint64 flags)WordDump5851,192647
static void C_TimeLog(char* input)C_TimeLog5859,192830
static void C_VerifySentence(char* input)C_VerifySentence5992,196538
static void C_CountWords(char* input)C_CountWords6041,197926
static void C_CountCat1(char* input) // mark count of cats involvedC_CountCat16094,199428
static void C_CountCat2(char* input)C_CountCat26121,200288
static void C_Logging(char* input)C_Logging6182,202282
static void C_Suffix(char* input)C_Suffix6226,203403
static void C_CountCat(char* input)C_CountCat6237,203718
static void C_WordDump(char* input)C_WordDump6275,204771
static void FindConceptWord(WORDP D, uint64 pattern)FindConceptWord6303,205292
static void C_Context(char* input)C_Context6313,205573
static void C_ConceptList(char* input)C_ConceptList6325,205909
static void C_Commands(char* x)C_Commands6330,206002
static void C_Definition(char* x)C_Definition6337,206205
static void DumpMatchVariables()DumpMatchVariables6349,206817
static void C_Variables(char* input)C_Variables6357,207119
static void C_Functions(char* input)C_Functions6373,207625
static void C_Identify(char* input)C_Identify6378,207685
static void ShowMacro(WORDP D,uint64 junk)ShowMacro6384,207774
static void C_Macros(char* input)C_Macros6395,208650
static void ShowQuery(WORDP D,uint64 junk)ShowQuery6400,208719
static void C_Queries(char* input)C_Queries6411,209039
static void ClearTracedFunction(WORDP D,uint64 junk)ClearTracedFunction6416,209109
static void TimeFunction(WORDP D, int bits, int mode) TimeFunction6425,209322
static void TraceFunction(WORDP D, int bits)TraceFunction6439,209694
static void TimedFunction(WORDP D, uint64 junk) // functionsTimedFunction6451,209989
static void ClearTimedFunction(WORDP D, uint64 junk)ClearTimedFunction6462,210466
static void C_TimedFunctions(char* input)C_TimedFunctions6467,210625
static void TracedTopic(WORDP D,uint64 style)TracedTopic6472,210707
static void TracedFunction(WORDP D,uint64 style)TracedFunction6494,211321
static void C_TracedFunctions(char* input)C_TracedFunctions6514,211872
static void ClearTracedTopic(WORDP D,uint64 junk)ClearTracedTopic6519,211956
static void C_TracedTopics(char* input)C_TracedTopics6529,212152
static void TimedTopic(WORDP D, uint64 timestyle)TimedTopic6534,212229
static void ClearTimedTopic(WORDP D, uint64 junk)ClearTimedTopic6557,212868
static void C_TimedTopics(char* input)C_TimedTopics6567,213064
void C_MemStats(char* input)C_MemStats6574,213183
	struct myinfo {myinfo6592,213764
		long uptime;             /* Seconds since boot */uptime6593,213781
		unsigned long loads[3];  /* 1, 5, and 15 minute load averages */loads6594,213833
		unsigned long totalram;  /* Total usable main memory size */totalram6595,213900
		unsigned long freeram;   /* Available memory size */freeram6596,213963
		unsigned long sharedram; /* Amount of shared memory */sharedram6597,214018
		unsigned long bufferram; /* Memory used by buffers */bufferram6598,214075
		unsigned long totalswap; /* Total swap space size */totalswap6599,214131
		unsigned long freeswap;  /* swap space still available */freeswap6600,214186
		unsigned short procs;    /* Number of current processes */procs6601,214246
		unsigned long totalhigh; /* Total high memory size */totalhigh6602,214307
		unsigned long freehigh;  /* Available high memory size */freehigh6603,214363
		unsigned int mem_unit;   /* Memory unit size in bytes */mem_unit6604,214423
		char _f[20 - 2 * sizeof(long) - sizeof(int)]; /* Padding to 64 bytes */_f6605,214482
static void C_Who(char*input)C_Who6635,215901
TestMode Command(char* input,char* buffer,bool scripted)Command6648,216248
void C_Gambits(char* buffer)C_Gambits6712,217978
void C_Pending(char* buffer)C_Pending6747,218909
static int functionCounter;functionCounter6752,219004
static void CountConcept(WORDP D, uint64 count)CountConcept6753,219032
static bool EmptyReuse(char* output, int topicid)EmptyReuse6768,219432
static void C_TopicStats(char* input)C_TopicStats6788,219990
static void MarkExcludeIt(WORDP D) // mark all members to excludeMarkExcludeIt6888,223271
static int follown;follown6907,223755
static FILE* outptr;outptr6908,223775
static void FollowIt(WORDP D)FollowIt6910,223797
static void C_Ingestlog(char* input)C_Ingestlog6935,224385
static void C_Comparelog(char* input)C_Comparelog7041,230918
static void C_CompileDP(char* input)C_CompileDP7148,234113
static void C_AllMembers(char* input)C_AllMembers7345,239201
static void C_Dedupe(char* input)C_Dedupe7383,240188
#define VAR_GLBLPERMANENT VAR_GLBLPERMANENT7420,241044
#define VAR_GLBLTRANSIENT VAR_GLBLTRANSIENT7421,241072
#define VAR_LOCAL VAR_LOCAL7422,241100
char* FindVar(char* ptr, FILE* out, int use)FindVar7423,241120
static void C_ListVariables(char* input)C_ListVariables7464,242705
static void C_TopicDump(char* input)C_TopicDump7520,244884
static bool shownItem;shownItem7564,246178
static void TrackFactsUp(MEANING T,FACT* G,WORDP base) //   show what matches up in unmarked topTrackFactsUp7566,246202
static void TabInset(unsigned int depth,bool eol)TabInset7626,247900
static void TrackFactsDown(MEANING M,FACT* F,unsigned int depth,size_t& length,bool display) // TrackFactsDown7632,248047
static void C_Topics(char* input)C_Topics7721,250419
static void C_TopicInfo(char* input)C_TopicInfo7754,251347
static void C_LabelRemap(char* input)C_LabelRemap7917,256484
static void LoadDescriptions (char* file)LoadDescriptions7962,257814
static void FreeDescriptions(WORDP D, uint64 junk)FreeDescriptions7985,258349
static void ListMacro(WORDP D, uint64 junk)ListMacro7997,258559
static void ListTopic(WORDP D, uint64 junk)ListTopic8008,258903
static void C_List(char* input)C_List8019,259274
static void C_Where(char* input)C_Where8188,263795
static void C_AllFacts(char* input)C_AllFacts8198,264078
static void C_AllDict(char* input)C_AllDict8223,264630
static void C_Facts(char* input)C_Facts8252,265339
static char* WriteFactFlags(FACT* F)WriteFactFlags8328,267067
static void C_UserFacts(char* input)C_UserFacts8361,268803
static void C_DoInternal(char* input,bool internal)C_DoInternal8396,269878
static void C_Do(char* input)C_Do8438,271071
static void C_Silent(char* input)C_Silent8443,271134
static void C_Retry(char* input)C_Retry8448,271192
static void C_Redo(char* input)C_Redo8532,273945
static void C_Log(char* input)C_Log8537,273999
static void C_Skip(char* buffer)C_Skip8542,274070
static void C_Show(char* input)C_Show8567,274804
static void TraceTopicFunction(WORDP D, uint64 data)TraceTopicFunction8682,277669
static void TimingTopicFunction(WORDP D, uint64 data)TimingTopicFunction8688,277892
static void ShowTrace(unsigned int bits, bool original)ShowTrace8694,278112
static void ShowTiming(unsigned int bits, bool original)ShowTiming8804,282614
static void C_Say(char* input)C_Say8891,285711
static void NoTraceTime(char* input, unsigned int topicflag, unsigned int macroflag, char* cmd)NoTraceTime8897,285813
static void C_NoTrace(char* input)C_NoTrace8930,286732
static void C_NoTime(char* input)C_NoTime8935,286838
static void C_Trace(char* input)C_Trace8940,286940
static void C_Time(char* input)C_Time9179,297518
void C_ServerLog(char* buffer)C_ServerLog9344,303732
void C_Authorize(char* buffer)C_Authorize9360,304043
void C_Why(char* buffer)C_Why9365,304130
static void CleanIt(char* word,uint64 junk) // remove cr from source lines for LinuxCleanIt9387,304893
static void C_ExtraTopic(char* input) // topicdump will create a file in TMP/tmp.txtC_ExtraTopic9421,305747
static void C_Clean(char* word) // remove CR for LINUXC_Clean9444,306493
static void C_EndPGUser(char* word)C_EndPGUser9450,306623
static void BuildDummyConcept(WORDP D,uint64 junk)BuildDummyConcept9456,306696
static void SortConcept(WORDP D,uint64 junk)SortConcept9462,306870
static void Translate(char* msg,char* to, char* apkey)Translate9468,307030
static void C_TranslateConcept(char* input) // give the lang & filename to writeC_TranslateConcept9557,309012
static void C_SortConcept(char* input)C_SortConcept9785,315684
static void DisplayTables(char* topicid)DisplayTables9838,317549
static void DoHeader(int count,char* basic,FILE* in,int id,unsigned int spelling,int ruleid, intDoHeader9845,317746
static void TopicHeader(int spelling, int topicID)TopicHeader9923,320468
static void DisplayTopic(char* name,int topicID,int spelling)DisplayTopic9994,323503
static void MarkDownHierarchy(MEANING T)MarkDownHierarchy10507,340074
static void C_Coverage(char* input)C_Coverage10530,340535
static void C_ShowCoverage(char* input)C_ShowCoverage10560,341460
static void C_Abstract(char* input)C_Abstract10611,342949
static void C_Diff(char* input)C_Diff10708,346212
static void IndentDisplay(char* one, char* two,char* display)IndentDisplay10793,348695
static void C_StripLog(char* file)C_StripLog10845,349613
static void C_Medtable(char* file)C_Medtable10888,350842
static void C_RewriteConverse(char* file) // single line test inputsC_RewriteConverse10936,352250
static void C_RewriteToTsv(char* file) // single line to tsv formatC_RewriteToTsv10982,353809
static void C_NewDiff(char* input)C_NewDiff11061,355965
static void C_MergeLines(char* file)C_MergeLines11156,358149
static void C_Fuse(char* file)C_Fuse11198,359216
static void C_QuoteLines(char* file)C_QuoteLines11224,359717
static void BuildForeign(char* input)BuildForeign11253,360332
static void Stats(char* bot,char* why)Stats11329,362533
static void TrimIt(char* name,uint64 flag) TrimIt11374,364214
static void C_Trim(char* input) // create simple file of user chat from directoryC_Trim11669,374623
CommandInfo commandSet[] = // NEWcommandSet11737,376735
void SortTopic(WORDP D,uint64* junk)SortTopic11900,389370
void SortTopic0(WORDP D,uint64 junk)SortTopic011906,389656
typedef std::vector<char*>::const_iterator  citer;citer11913,389916
static bool myFunction (char* i,char* j) myFunction11915,389968
static bool myInverseFunction (char* i,char* j) myInverseFunction11922,390155
void Sortit(char* name,int oneline)   Sortit11929,390349
TestMode DoCommand(char* input,char* output,bool authorize)DoCommand12035,393943

.ipynb_checkpoints/Untitled-checkpoint.ipynb,0

mongo/bson/indent,0

mongo/bson/uncrustify.cfg,0

mongo/bson/b64_ntop.h,168
#define Assert(Assert47,2293
static const char Base64[] =Base6449,2337
static const char Pad64 = '=';Pad6451,2437
b64_ntop (uint8_t const *src,b64_ntop116,5650

mongo/bson/bson-context.c,1417
#define HOST_NAME_MAX HOST_NAME_MAX39,990
static bson_context_t gContextDefault;gContextDefault46,1044
gettid (void)gettid51,1124
_bson_context_get_oid_host (bson_context_t *context,  /* IN */_bson_context_get_oid_host76,1588
_bson_context_get_oid_host_cached (bson_context_t *context, /* IN */_bson_context_get_oid_host_cached117,2542
_bson_getpid (void)_bson_getpid130,2872
_bson_context_get_oid_pid (bson_context_t *context, /* IN */_bson_context_get_oid_pid165,3501
_bson_context_get_oid_pid_cached (bson_context_t *context, /* IN */_bson_context_get_oid_pid_cached200,4290
_bson_context_get_oid_seq32 (bson_context_t *context, /* IN */_bson_context_get_oid_seq32225,4864
_bson_context_get_oid_seq32_threadsafe (bson_context_t *context, /* IN */_bson_context_get_oid_seq32_threadsafe252,5486
_bson_context_get_oid_seq64 (bson_context_t *context, /* IN */_bson_context_get_oid_seq64279,6148
_bson_context_get_oid_seq64_threadsafe (bson_context_t *context, /* IN */_bson_context_get_oid_seq64_threadsafe309,6796
_bson_context_init (bson_context_t *context,    /* IN */_bson_context_init320,7107
bson_context_new (bson_context_flags_t flags)bson_context_new428,10559
bson_context_destroy (bson_context_t *context)  /* IN */bson_context_destroy457,11153
BSON_ONCE_FUN(_bson_context_init_default)BSON_ONCE_FUN467,11337
bson_context_get_default (void)bson_context_get_default496,12136

mongo/bson/bson-oid.c,905
static const uint16_t gHexCharPairs[] = {gHexCharPairs36,1077
bson_oid_init_sequence (bson_oid_t     *oid,     /* OUT */bson_oid_init_sequence118,5578
bson_oid_init (bson_oid_t     *oid,     /* OUT */bson_oid_init158,6663
bson_oid_init_from_data (bson_oid_t    *oid,  /* OUT */bson_oid_init_from_data202,7672
bson_oid_init_from_string (bson_oid_t *oid, /* OUT */bson_oid_init_from_string234,8362
bson_oid_get_time_t (const bson_oid_t *oid) /* IN */bson_oid_get_time_t261,8895
bson_oid_to_stringbson_oid_to_string292,9557
bson_oid_hash (const bson_oid_t *oid) /* IN */bson_oid_hash358,11366
bson_oid_compare (const bson_oid_t *oid1, /* IN */bson_oid_compare385,11972
bson_oid_equal (const bson_oid_t *oid1, /* IN */bson_oid_equal413,12604
bson_oid_copy (const bson_oid_t *src, /* IN */bson_oid_copy444,13248
bson_oid_is_valid (const char *str,    /* IN */bson_oid_is_valid476,13979

mongo/bson/bson.h,1674
#define BSON_HBSON_H19,612
#define BSON_INSIDEBSON_INSIDE21,628
#define bson_empty(bson_empty64,1495
#define bson_empty0(bson_empty072,1666
#define bson_clear(bson_clear84,1882
#define BSON_MAX_SIZE BSON_MAX_SIZE98,2109
#define BSON_APPEND_ARRAY(BSON_APPEND_ARRAY101,2160
#define BSON_APPEND_ARRAY_BEGIN(BSON_APPEND_ARRAY_BEGIN104,2257
#define BSON_APPEND_BINARY(BSON_APPEND_BINARY107,2370
#define BSON_APPEND_BOOL(BSON_APPEND_BOOL110,2496
#define BSON_APPEND_CODE(BSON_APPEND_CODE113,2592
#define BSON_APPEND_CODE_WITH_SCOPE(BSON_APPEND_CODE_WITH_SCOPE116,2688
#define BSON_APPEND_DBPOINTER(BSON_APPEND_DBPOINTER119,2819
#define BSON_APPEND_DOCUMENT_BEGIN(BSON_APPEND_DOCUMENT_BEGIN122,2936
#define BSON_APPEND_DOUBLE(BSON_APPEND_DOUBLE125,3055
#define BSON_APPEND_DOCUMENT(BSON_APPEND_DOCUMENT128,3155
#define BSON_APPEND_INT32(BSON_APPEND_INT32131,3259
#define BSON_APPEND_INT64(BSON_APPEND_INT64134,3357
#define BSON_APPEND_MINKEY(BSON_APPEND_MINKEY137,3455
#define BSON_APPEND_MAXKEY(BSON_APPEND_MAXKEY140,3546
#define BSON_APPEND_NULL(BSON_APPEND_NULL143,3637
#define BSON_APPEND_OID(BSON_APPEND_OID146,3724
#define BSON_APPEND_REGEX(BSON_APPEND_REGEX149,3818
#define BSON_APPEND_UTF8(BSON_APPEND_UTF8152,3925
#define BSON_APPEND_SYMBOL(BSON_APPEND_SYMBOL155,4041
#define BSON_APPEND_TIME_T(BSON_APPEND_TIME_T158,4161
#define BSON_APPEND_TIMEVAL(BSON_APPEND_TIMEVAL161,4261
#define BSON_APPEND_DATE_TIME(BSON_APPEND_DATE_TIME164,4363
#define BSON_APPEND_TIMESTAMP(BSON_APPEND_TIMESTAMP167,4469
#define BSON_APPEND_UNDEFINED(BSON_APPEND_UNDEFINED170,4584
#define BSON_APPEND_VALUE(BSON_APPEND_VALUE173,4681

mongo/bson/bson-error.c,141
bson_set_error (bson_error_t *error,  /* OUT */bson_set_error61,1671
bson_strerror_r (int     err_code,  /* IN */bson_strerror_r101,2601

mongo/bson/bson-atomic.c,427
static pthread_mutex_t gBarrier = PTHREAD_MUTEX_INITIALIZER;gBarrier30,887
bson_memory_barrier (void)bson_memory_barrier32,953
static pthread_mutex_t gSync32 = PTHREAD_MUTEX_INITIALIZER;gSync3243,1165
bson_atomic_int_add (volatile int32_t *p,bson_atomic_int_add45,1233
static pthread_mutex_t gSync64 = PTHREAD_MUTEX_INITIALIZER;gSync6462,1504
bson_atomic_int64_add (volatile int64_t *p,bson_atomic_int64_add64,1572

mongo/bson/bson-json.h,611
#define BSON_JSON_HBSON_JSON_H19,617
typedef struct _bson_json_reader_t bson_json_reader_t;bson_json_reader_t33,795
{__anon9342fc24010337,865
   BSON_JSON_ERROR_READ_CORRUPT_JS = 1,BSON_JSON_ERROR_READ_CORRUPT_JS38,867
   BSON_JSON_ERROR_READ_INVALID_PARAM,BSON_JSON_ERROR_READ_INVALID_PARAM39,907
   BSON_JSON_ERROR_READ_CB_FAILURE,BSON_JSON_ERROR_READ_CB_FAILURE40,946
} bson_json_error_code_t;bson_json_error_code_t41,982
typedef ssize_t (*bson_json_reader_cb) (void    *handle,bson_json_reader_cb44,1010
typedef void    (*bson_json_destroy_cb)(void    *handle);bson_json_destroy_cb47,1178

mongo/bson/bson-string.c,1255
bson_string_new (const char *str) /* IN */bson_string_new57,1567
bson_string_free (bson_string_t *string,       /* IN */bson_string_free105,2618
bson_string_append (bson_string_t *string, /* IN */bson_string_append141,3237
bson_string_append_c (bson_string_t *string, /* IN */bson_string_append_c185,4276
bson_string_append_unichar (bson_string_t  *string,  /* IN */bson_string_append_unichar221,5005
bson_string_append_printf (bson_string_t *string,bson_string_append_printf256,5704
bson_string_truncate (bson_string_t *string, /* IN */bson_string_truncate294,6520
bson_strdup (const char *str) /* IN */bson_strdup337,7373
bson_strdupv_printf (const char *format, /* IN */bson_strdupv_printf376,8018
bson_strdup_printf (const char *format, /* IN */bson_strdup_printf426,8990
bson_strndup (const char *str,     /* IN */bson_strndup459,9610
bson_strfreev (char **str) /* IN */bson_strfreev492,10223
bson_strnlen (const char *s,      /* IN */bson_strnlen521,10699
bson_strncpy (char       *dst,  /* IN */bson_strncpy560,11402
bson_vsnprintf (char       *str,    /* IN */bson_vsnprintf596,12312
bson_snprintf (char       *str,    /* IN */bson_snprintf650,13436
bson_ascii_strtoll (const char  *s,bson_ascii_strtoll669,13754

mongo/bson/bson-keys.c,141
static const char * gUint32Strs[] = {gUint32Strs24,667
bson_uint32_to_string (uint32_t     value,  /* IN */bson_uint32_to_string159,8876

mongo/bson/bson-timegm-private.h,59
#define BSON_TIMEGM_PRIVATE_HBSON_TIMEGM_PRIVATE_H19,627

mongo/bson/bson-iter.c,4416
#define ITER_TYPE(ITER_TYPE21,627
bson_iter_init (bson_iter_t  *iter, /* OUT */bson_iter_init41,1072
bson_iter_recurse (const bson_iter_t *iter,  /* IN */bson_iter_recurse86,2002
bson_iter_init_find (bson_iter_t  *iter, /* INOUT */bson_iter_init_find137,3100
bson_iter_init_find_case (bson_iter_t  *iter, /* INOUT */bson_iter_init_find_case166,3788
_bson_iter_find_with_len (bson_iter_t *iter,   /* INOUT */_bson_iter_find_with_len195,4463
bson_iter_find (bson_iter_t *iter, /* INOUT */bson_iter_find240,5432
bson_iter_find_case (bson_iter_t *iter, /* INOUT */bson_iter_find_case269,6092
bson_iter_find_descendant (bson_iter_t *iter,       /* INOUT */bson_iter_find_descendant308,7033
bson_iter_key (const bson_iter_t *iter) /* IN */bson_iter_key361,8280
bson_iter_type (const bson_iter_t *iter) /* IN */bson_iter_type387,8809
_bson_iter_next_internal (bson_iter_t  *iter,         /* INOUT */_bson_iter_next_internal421,9751
bson_iter_next (bson_iter_t *iter) /* INOUT */bson_iter_next740,16991
bson_iter_binary (const bson_iter_t  *iter,        /* IN */bson_iter_binary777,17947
bson_iter_bool (const bson_iter_t *iter) /* IN */bson_iter_bool839,19350
bson_iter_as_bool (const bson_iter_t *iter) /* IN */bson_iter_as_bool872,20074
bson_iter_double (const bson_iter_t *iter) /* IN */bson_iter_double913,20952
bson_iter_int32 (const bson_iter_t *iter) /* IN */bson_iter_int32942,21497
bson_iter_int64 (const bson_iter_t *iter) /* IN */bson_iter_int64972,22063
bson_iter_as_int64 (const bson_iter_t *iter) /* IN */bson_iter_as_int641006,22707
bson_iter_oid (const bson_iter_t *iter) /* IN */bson_iter_oid1043,23567
bson_iter_regex (const bson_iter_t *iter,    /* IN */bson_iter_regex1073,24174
bson_iter_utf8 (const bson_iter_t *iter,   /* IN */bson_iter_utf81116,25176
bson_iter_dup_utf8 (const bson_iter_t *iter,   /* IN */bson_iter_dup_utf81156,26107
bson_iter_code (const bson_iter_t *iter,   /* IN */bson_iter_code1202,27150
bson_iter_codewscope (const bson_iter_t  *iter,      /* IN */bson_iter_codewscope1251,28515
bson_iter_dbpointer (const bson_iter_t  *iter,           /* IN */bson_iter_dbpointer1319,30336
bson_iter_symbol (const bson_iter_t *iter,   /* IN */bson_iter_symbol1378,31858
bson_iter_date_time (const bson_iter_t *iter) /* IN */bson_iter_date_time1417,32744
bson_iter_time_t (const bson_iter_t *iter) /* IN */bson_iter_time_t1447,33349
bson_iter_timestamp (const bson_iter_t *iter,      /* IN */bson_iter_timestamp1482,34088
bson_iter_timeval (const bson_iter_t *iter,  /* IN */bson_iter_timeval1531,35376
bson_iter_document (const bson_iter_t  *iter,         /* IN */bson_iter_document1589,36929
bson_iter_array (const bson_iter_t  *iter,      /* IN */bson_iter_array1651,38688
#define VISIT_FIELD(VISIT_FIELD1670,39195
#define VISIT_AFTER VISIT_AFTER1671,39268
#define VISIT_BEFORE VISIT_BEFORE1672,39308
#define VISIT_CORRUPT VISIT_CORRUPT1673,39350
#define VISIT_DOUBLE VISIT_DOUBLE1674,39423
#define VISIT_UTF8 VISIT_UTF81675,39465
#define VISIT_DOCUMENT VISIT_DOCUMENT1676,39503
#define VISIT_ARRAY VISIT_ARRAY1677,39549
#define VISIT_BINARY VISIT_BINARY1678,39589
#define VISIT_UNDEFINED VISIT_UNDEFINED1679,39631
#define VISIT_OID VISIT_OID1680,39679
#define VISIT_BOOL VISIT_BOOL1681,39715
#define VISIT_DATE_TIME VISIT_DATE_TIME1682,39753
#define VISIT_NULL VISIT_NULL1683,39801
#define VISIT_REGEX VISIT_REGEX1684,39839
#define VISIT_DBPOINTER VISIT_DBPOINTER1685,39879
#define VISIT_CODE VISIT_CODE1686,39927
#define VISIT_SYMBOL VISIT_SYMBOL1687,39965
#define VISIT_CODEWSCOPE VISIT_CODEWSCOPE1688,40007
#define VISIT_INT32 VISIT_INT321689,40057
#define VISIT_TIMESTAMP VISIT_TIMESTAMP1690,40097
#define VISIT_INT64 VISIT_INT641691,40145
#define VISIT_MAXKEY VISIT_MAXKEY1692,40185
#define VISIT_MINKEY VISIT_MINKEY1693,40227
bson_iter_visit_all (bson_iter_t          *iter,    /* INOUT */bson_iter_visit_all1731,41347
bson_iter_overwrite_bool (bson_iter_t *iter,  /* IN */bson_iter_overwrite_bool2002,48080
bson_iter_overwrite_int32 (bson_iter_t *iter,  /* IN */bson_iter_overwrite_int322032,48762
bson_iter_overwrite_int64 (bson_iter_t *iter,   /* IN */bson_iter_overwrite_int642064,49530
bson_iter_overwrite_double (bson_iter_t *iter,  /* IN */bson_iter_overwrite_double2096,50302
bson_iter_value (bson_iter_t *iter) /* IN */bson_iter_value2128,51222

mongo/bson/bson-iso8601.c,221
get_tok (const char  *terminals,get_tok29,776
digits_only (const char *str,digits_only64,1443
parse_num (const char *str,parse_num79,1645
_bson_iso8601_date_parse (const char *str,_bson_iso8601_date_parse108,2176

mongo/bson/bcon.h,4758
#define BCON_H_BCON_H_22,719
#define BCON_STACK_MAX BCON_STACK_MAX30,775
#define BCON_ENSURE_DECLARE(BCON_ENSURE_DECLARE32,803
#define BCON_ENSURE(BCON_ENSURE35,915
#define BCON_ENSURE_STORAGE(BCON_ENSURE_STORAGE38,975
#define BCON_UTF8(BCON_UTF865,2133
#define BCON_DOUBLE(BCON_DOUBLE67,2227
#define BCON_DOCUMENT(BCON_DOCUMENT69,2317
#define BCON_ARRAY(BCON_ARRAY71,2419
#define BCON_BIN(BCON_BIN73,2515
#define BCON_UNDEFINED BCON_UNDEFINED78,2716
#define BCON_OID(BCON_OID79,2771
#define BCON_BOOL(BCON_BOOL81,2862
#define BCON_DATE_TIME(BCON_DATE_TIME83,2946
#define BCON_NULL BCON_NULL85,3041
#define BCON_REGEX(BCON_REGEX86,3086
#define BCON_DBPOINTER(BCON_DBPOINTER90,3244
#define BCON_CODE(BCON_CODE94,3415
#define BCON_SYMBOL(BCON_SYMBOL96,3509
#define BCON_CODEWSCOPE(BCON_CODEWSCOPE98,3607
#define BCON_INT32(BCON_INT32102,3769
#define BCON_TIMESTAMP(BCON_TIMESTAMP104,3856
#define BCON_INT64(BCON_INT64108,4020
#define BCON_MAXKEY BCON_MAXKEY110,4107
#define BCON_MINKEY BCON_MINKEY111,4156
#define BCON(BCON112,4205
#define BCON_ITER(BCON_ITER114,4294
#define BCONE_UTF8(BCONE_UTF8117,4394
#define BCONE_DOUBLE(BCONE_DOUBLE119,4502
#define BCONE_DOCUMENT(BCONE_DOCUMENT121,4606
#define BCONE_ARRAY(BCONE_ARRAY123,4712
#define BCONE_BIN(BCONE_BIN125,4812
#define BCONE_UNDEFINED BCONE_UNDEFINED130,5045
#define BCONE_OID(BCONE_OID131,5102
#define BCONE_BOOL(BCONE_BOOL133,5207
#define BCONE_DATE_TIME(BCONE_DATE_TIME135,5305
#define BCONE_NULL BCONE_NULL137,5414
#define BCONE_REGEX(BCONE_REGEX138,5461
#define BCONE_DBPOINTER(BCONE_DBPOINTER142,5645
#define BCONE_CODE(BCONE_CODE146,5842
#define BCONE_SYMBOL(BCONE_SYMBOL148,5950
#define BCONE_CODEWSCOPE(BCONE_CODEWSCOPE150,6062
#define BCONE_INT32(BCONE_INT32154,6240
#define BCONE_TIMESTAMP(BCONE_TIMESTAMP156,6341
#define BCONE_INT64(BCONE_INT64160,6531
#define BCONE_MAXKEY BCONE_MAXKEY162,6632
#define BCONE_MINKEY BCONE_MINKEY163,6683
#define BCONE_SKIP(BCONE_SKIP164,6734
#define BCONE_ITER(BCONE_ITER166,6825
#define BCON_MAGIC BCON_MAGIC169,6929
#define BCONE_MAGIC BCONE_MAGIC170,6967
{__anona1bb972d0103173,7020
   BCON_TYPE_UTF8,BCON_TYPE_UTF8174,7022
   BCON_TYPE_DOUBLE,BCON_TYPE_DOUBLE175,7041
   BCON_TYPE_DOCUMENT,BCON_TYPE_DOCUMENT176,7062
   BCON_TYPE_ARRAY,BCON_TYPE_ARRAY177,7085
   BCON_TYPE_BIN,BCON_TYPE_BIN178,7105
   BCON_TYPE_UNDEFINED,BCON_TYPE_UNDEFINED179,7123
   BCON_TYPE_OID,BCON_TYPE_OID180,7147
   BCON_TYPE_BOOL,BCON_TYPE_BOOL181,7165
   BCON_TYPE_DATE_TIME,BCON_TYPE_DATE_TIME182,7184
   BCON_TYPE_NULL,BCON_TYPE_NULL183,7208
   BCON_TYPE_REGEX,BCON_TYPE_REGEX184,7227
   BCON_TYPE_DBPOINTER,BCON_TYPE_DBPOINTER185,7247
   BCON_TYPE_CODE,BCON_TYPE_CODE186,7271
   BCON_TYPE_SYMBOL,BCON_TYPE_SYMBOL187,7290
   BCON_TYPE_CODEWSCOPE,BCON_TYPE_CODEWSCOPE188,7311
   BCON_TYPE_INT32,BCON_TYPE_INT32189,7336
   BCON_TYPE_TIMESTAMP,BCON_TYPE_TIMESTAMP190,7356
   BCON_TYPE_INT64,BCON_TYPE_INT64191,7380
   BCON_TYPE_MAXKEY,BCON_TYPE_MAXKEY192,7400
   BCON_TYPE_MINKEY,BCON_TYPE_MINKEY193,7421
   BCON_TYPE_BCON,BCON_TYPE_BCON194,7442
   BCON_TYPE_ARRAY_START,BCON_TYPE_ARRAY_START195,7461
   BCON_TYPE_ARRAY_END,BCON_TYPE_ARRAY_END196,7487
   BCON_TYPE_DOC_START,BCON_TYPE_DOC_START197,7511
   BCON_TYPE_DOC_END,BCON_TYPE_DOC_END198,7535
   BCON_TYPE_END,BCON_TYPE_END199,7557
   BCON_TYPE_RAW,BCON_TYPE_RAW200,7575
   BCON_TYPE_SKIP,BCON_TYPE_SKIP201,7593
   BCON_TYPE_ITER,BCON_TYPE_ITER202,7612
   BCON_TYPE_ERROR,BCON_TYPE_ERROR203,7631
} bcon_type_t;bcon_type_t204,7651
typedef struct bcon_append_ctx_framebcon_append_ctx_frame206,7667
   int         i;i208,7706
   bool is_array;is_array209,7724
   bson_t      bson;bson210,7742
} bcon_append_ctx_frame_t;bcon_append_ctx_frame_t211,7763
typedef struct bcon_extract_ctx_framebcon_extract_ctx_frame213,7791
   int         i;i215,7831
   bool is_array;is_array216,7849
   bson_iter_t iter;iter217,7867
} bcon_extract_ctx_frame_t;bcon_extract_ctx_frame_t218,7888
typedef struct _bcon_append_ctx_t_bcon_append_ctx_t220,7917
   bcon_append_ctx_frame_t stack[BCON_STACK_MAX];stack222,7953
   int                     n;n223,8003
} bcon_append_ctx_t;bcon_append_ctx_t224,8033
typedef struct _bcon_extract_ctx_t_bcon_extract_ctx_t226,8055
   bcon_extract_ctx_frame_t stack[BCON_STACK_MAX];stack228,8092
   int                      n;n229,8143
} bcon_extract_ctx_t;bcon_extract_ctx_t230,8174
#define BCON_APPEND(BCON_APPEND280,9584
#define BCON_APPEND_CTX(BCON_APPEND_CTX282,9670
#define BCON_EXTRACT(BCON_EXTRACT285,9779
#define BCON_EXTRACT_CTX(BCON_EXTRACT_CTX288,9868
#define BCON_NEW(BCON_NEW291,9975

mongo/bson/bson-endian.h,1626
#define BSON_ENDIAN_HBSON_ENDIAN_H19,619
#define BSON_BIG_ENDIAN BSON_BIG_ENDIAN39,911
#define BSON_LITTLE_ENDIAN BSON_LITTLE_ENDIAN40,943
# define BSON_UINT16_SWAP_LE_BE(BSON_UINT16_SWAP_LE_BE44,996
# define BSON_UINT32_SWAP_LE_BE(BSON_UINT32_SWAP_LE_BE45,1053
# define BSON_UINT64_SWAP_LE_BE(BSON_UINT64_SWAP_LE_BE46,1110
# define BSON_UINT16_SWAP_LE_BE(BSON_UINT16_SWAP_LE_BE70,2056
# define BSON_UINT32_SWAP_LE_BE(BSON_UINT32_SWAP_LE_BE75,2169
# define BSON_UINT64_SWAP_LE_BE(BSON_UINT64_SWAP_LE_BE80,2282
# define BSON_UINT16_FROM_LE(BSON_UINT16_FROM_LE85,2406
# define BSON_UINT16_TO_LE(BSON_UINT16_TO_LE86,2453
# define BSON_UINT16_FROM_BE(BSON_UINT16_FROM_BE87,2500
# define BSON_UINT16_TO_BE(BSON_UINT16_TO_BE88,2560
# define BSON_UINT32_FROM_LE(BSON_UINT32_FROM_LE89,2620
# define BSON_UINT32_TO_LE(BSON_UINT32_TO_LE90,2667
# define BSON_UINT32_FROM_BE(BSON_UINT32_FROM_BE91,2714
# define BSON_UINT32_TO_BE(BSON_UINT32_TO_BE92,2774
# define BSON_UINT64_FROM_LE(BSON_UINT64_FROM_LE93,2834
# define BSON_UINT64_TO_LE(BSON_UINT64_TO_LE94,2881
# define BSON_UINT64_FROM_BE(BSON_UINT64_FROM_BE95,2928
# define BSON_UINT64_TO_BE(BSON_UINT64_TO_BE96,2988
# define BSON_DOUBLE_FROM_LE(BSON_DOUBLE_FROM_LE97,3048
# define BSON_DOUBLE_TO_LE(BSON_DOUBLE_TO_LE98,3093
__bson_uint16_swap_slow (uint16_t v) /* IN */__bson_uint16_swap_slow136,4399
__bson_uint32_swap_slow (uint32_t v) /* IN */__bson_uint32_swap_slow160,4891
__bson_uint64_swap_slow (uint64_t v) /* IN */__bson_uint64_swap_slow186,5471
__bson_double_swap_slow (double v) /* IN */__bson_double_swap_slow218,6344

mongo/bson/bson-md5.c,2252
#  define BYTE_ORDER BYTE_ORDER68,2598
#  define BYTE_ORDER BYTE_ORDER70,2627
#define T_MASK T_MASK73,2659
#define T1 T174,2689
#define T2 T275,2739
#define T3 T376,2789
#define T4 T477,2814
#define T5 T578,2864
#define T6 T679,2914
#define T7 T780,2939
#define T8 T881,2989
#define T9 T982,3039
#define T10 T1083,3064
#define T11 T1184,3115
#define T12 T1285,3166
#define T13 T1386,3217
#define T14 T1487,3243
#define T15 T1588,3294
#define T16 T1689,3345
#define T17 T1790,3371
#define T18 T1891,3422
#define T19 T1992,3473
#define T20 T2093,3499
#define T21 T2194,3550
#define T22 T2295,3601
#define T23 T2396,3627
#define T24 T2497,3678
#define T25 T2598,3729
#define T26 T2699,3755
#define T27 T27100,3806
#define T28 T28101,3857
#define T29 T29102,3883
#define T30 T30103,3934
#define T31 T31104,3985
#define T32 T32105,4011
#define T33 T33106,4062
#define T34 T34107,4113
#define T35 T35108,4164
#define T36 T36109,4190
#define T37 T37110,4241
#define T38 T38111,4292
#define T39 T39112,4318
#define T40 T40113,4369
#define T41 T41114,4420
#define T42 T42115,4446
#define T43 T43116,4497
#define T44 T44117,4548
#define T45 T45118,4574
#define T46 T46119,4625
#define T47 T47120,4676
#define T48 T48121,4702
#define T49 T49122,4753
#define T50 T50123,4804
#define T51 T51124,4830
#define T52 T52125,4881
#define T53 T53126,4932
#define T54 T54127,4958
#define T55 T55128,5009
#define T56 T56129,5060
#define T57 T57130,5111
#define T58 T58131,5137
#define T59 T59132,5188
#define T60 T60133,5239
#define T61 T61134,5265
#define T62 T62135,5316
#define T63 T63136,5367
#define T64 T64137,5393
bson_md5_process (bson_md5_t     *md5,bson_md5_process141,5458
#    define xbuf xbuf209,7282
#define ROTATE_LEFT(ROTATE_LEFT217,7485
#define F(F222,7669
#define SET(SET223,7717
#define G(G248,8537
#define SET(SET249,8585
#define H(H274,9405
#define SET(SET275,9442
#define I(I300,10262
#define SET(SET301,10302
bson_md5_init (bson_md5_t *pms)bson_md5_init333,11260
bson_md5_append (bson_md5_t         *pms,bson_md5_append343,11513
bson_md5_finish (bson_md5_t   *pms,bson_md5_finish383,12495

mongo/bson/bson-memory.c,577
static bson_mem_vtable_t gMemVtable = {gMemVtable26,715
bson_malloc (size_t num_bytes) /* IN */bson_malloc63,1548
bson_malloc0 (size_t num_bytes) /* IN */bson_malloc098,2300
bson_realloc (void   *mem,        /* IN */bson_realloc135,3127
bson_realloc_ctx (void   *mem,        /* IN */bson_realloc_ctx183,4249
bson_free (void *mem) /* IN */bson_free214,4898
bson_zero_free (void  *mem,  /* IN */bson_zero_free243,5546
bson_mem_set_vtable (const bson_mem_vtable_t *vtable)bson_mem_set_vtable274,6207
bson_mem_restore_vtable (void)bson_mem_restore_vtable291,6551

mongo/bson/bson-writer.c,868
struct _bson_writer_t_bson_writer_t22,650
   bool                ready;ready24,674
   uint8_t           **buf;buf25,704
   size_t             *buflen;buflen26,732
   size_t              offset;offset27,763
   bson_realloc_func   realloc_func;realloc_func28,794
   void               *realloc_func_ctx;realloc_func_ctx29,831
   bson_t              b;b30,872
bson_writer_new (uint8_t           **buf,              /* IN */bson_writer_new62,1755
bson_writer_destroy (bson_writer_t *writer) /* IN */bson_writer_destroy101,2830
bson_writer_get_length (bson_writer_t *writer) /* IN */bson_writer_get_length130,3633
bson_writer_begin (bson_writer_t  *writer, /* IN */bson_writer_begin160,4426
bson_writer_end (bson_writer_t *writer) /* IN */bson_writer_end231,6029
bson_writer_rollback (bson_writer_t *writer) /* IN */bson_writer_rollback262,6760

mongo/bson/bson-iso8601-private.h,61
#define BSON_ISO8601_PRIVATE_HBSON_ISO8601_PRIVATE_H19,628

mongo/bson/bson-version-functions.h,65
#define BSON_VERSION_FUNCTIONS_HBSON_VERSION_FUNCTIONS_H24,746

mongo/bson/bson-clock.h,41
#define BSON_CLOCK_HBSON_CLOCK_H19,618

mongo/bson/bson-value.c,152
bson_value_copy (const bson_value_t *src, /* IN */bson_value_copy25,700
bson_value_destroy (bson_value_t *value) /* IN */bson_value_destroy136,5072

mongo/bson/bson-reader.h,310
#define BSON_READER_HBSON_READER_H19,619
#define BSON_ERROR_READER_BADFD BSON_ERROR_READER_BADFD35,852
typedef ssize_t (*bson_reader_read_func_t) (void  *handle, /* IN */bson_reader_read_func_t65,1676
typedef void (*bson_reader_destroy_func_t) (void *handle); /* IN */bson_reader_destroy_func_t90,2336

mongo/bson/bson-utf8.h,39
#define BSON_UTF8_HBSON_UTF8_H19,617

mongo/bson/bson-string.h,200
#define BSON_STRING_HBSON_STRING_H19,619
{__anon12056781010837,866
   char     *str;str38,868
   uint32_t  len;len39,886
   uint32_t  alloc;alloc40,904
} bson_string_t;bson_string_t41,924

mongo/bson/bson-json.c,9652
#define STACK_MAX STACK_MAX38,928
#define BSON_JSON_DEFAULT_BUF_SIZE BSON_JSON_DEFAULT_BUF_SIZE39,950
{__anon9342fc1f010343,1010
   BSON_JSON_REGULAR,BSON_JSON_REGULAR44,1012
   BSON_JSON_DONE,BSON_JSON_DONE45,1034
   BSON_JSON_ERROR,BSON_JSON_ERROR46,1053
   BSON_JSON_IN_START_MAP,BSON_JSON_IN_START_MAP47,1073
   BSON_JSON_IN_BSON_TYPE,BSON_JSON_IN_BSON_TYPE48,1100
   BSON_JSON_IN_BSON_TYPE_DATE_NUMBERLONG,BSON_JSON_IN_BSON_TYPE_DATE_NUMBERLONG49,1127
   BSON_JSON_IN_BSON_TYPE_DATE_ENDMAP,BSON_JSON_IN_BSON_TYPE_DATE_ENDMAP50,1170
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_STARTMAP,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_STARTMAP51,1209
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_VALUES,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_VALUES52,1255
   BSON_JSON_IN_BSON_TYPE_TIMESTAMP_ENDMAP,BSON_JSON_IN_BSON_TYPE_TIMESTAMP_ENDMAP53,1299
} bson_json_read_state_t;bson_json_read_state_t54,1343
{__anon9342fc1f020358,1384
   BSON_JSON_LF_REGEX,BSON_JSON_LF_REGEX59,1386
   BSON_JSON_LF_OPTIONS,BSON_JSON_LF_OPTIONS60,1409
   BSON_JSON_LF_OID,BSON_JSON_LF_OID61,1434
   BSON_JSON_LF_BINARY,BSON_JSON_LF_BINARY62,1455
   BSON_JSON_LF_TYPE,BSON_JSON_LF_TYPE63,1479
   BSON_JSON_LF_DATE,BSON_JSON_LF_DATE64,1501
   BSON_JSON_LF_TIMESTAMP_T,BSON_JSON_LF_TIMESTAMP_T65,1523
   BSON_JSON_LF_TIMESTAMP_I,BSON_JSON_LF_TIMESTAMP_I66,1552
   BSON_JSON_LF_UNDEFINED,BSON_JSON_LF_UNDEFINED67,1581
   BSON_JSON_LF_MINKEY,BSON_JSON_LF_MINKEY68,1608
   BSON_JSON_LF_MAXKEY,BSON_JSON_LF_MAXKEY69,1632
   BSON_JSON_LF_INT64,BSON_JSON_LF_INT6470,1656
} bson_json_read_bson_state_t;bson_json_read_bson_state_t71,1679
{__anon9342fc1f030875,1727
   uint8_t *buf;buf76,1729
   size_t   n_bytes;n_bytes77,1746
   size_t   len;len78,1767
} bson_json_buf_t;bson_json_buf_t79,1784
{__anon9342fc1f040883,1820
   int    i;i84,1822
   bool   is_array;is_array85,1835
   bson_t bson;bson86,1855
} bson_json_stack_frame_t;bson_json_stack_frame_t87,1871
{__anon9342fc1f050a91,1914
   struct {__anon9342fc1f060892,1916
      bool has_regex;has_regex93,1928
      bool has_options;has_options94,1950
   } regex;regex95,1974
   struct {__anon9342fc1f070896,1986
      bool       has_oid;has_oid97,1998
      bson_oid_t oid;oid98,2024
   } oid;oid99,2046
   struct {__anon9342fc1f0808100,2056
      bool           has_binary;has_binary101,2068
      bool           has_subtype;has_subtype102,2101
      bson_subtype_t type;type103,2135
   } binary;binary104,2162
   struct {__anon9342fc1f0908105,2175
      bool    has_date;has_date106,2187
      int64_t date;date107,2211
   } date;date108,2231
   struct {__anon9342fc1f0a08109,2242
      bool     has_t;has_t110,2254
      bool     has_i;has_i111,2276
      uint32_t t;t112,2298
      uint32_t i;i113,2316
   } timestamp;timestamp114,2334
   struct {__anon9342fc1f0b08115,2350
      bool has_undefined;has_undefined116,2362
   } undefined;undefined117,2388
   struct {__anon9342fc1f0c08118,2404
      bool has_minkey;has_minkey119,2416
   } minkey;minkey120,2439
   struct {__anon9342fc1f0d08121,2452
      bool has_maxkey;has_maxkey122,2464
   } maxkey;maxkey123,2487
   struct {__anon9342fc1f0e08124,2500
      int64_t value;value125,2512
   } v_int64;v_int64126,2533
} bson_json_bson_data_t;bson_json_bson_data_t127,2547
{__anon9342fc1f0f08131,2589
   bson_t                      *bson;bson132,2591
   bson_json_stack_frame_t      stack[STACK_MAX];stack133,2629
   int                          n;n134,2679
   const char                  *key;key135,2714
   bson_json_buf_t              key_buf;key_buf136,2751
   bson_json_read_state_t       read_state;read_state137,2792
   bson_json_read_bson_state_t  bson_state;bson_state138,2836
   bson_type_t                  bson_type;bson_type139,2880
   bson_json_buf_t              bson_type_buf [3];bson_type_buf140,2923
   bson_json_bson_data_t        bson_type_data;bson_type_data141,2974
   bool                         known_bson_type;known_bson_type142,3022
} bson_json_reader_bson_t;bson_json_reader_bson_t143,3071
{__anon9342fc1f1008147,3115
   void                 *data;data148,3117
   bson_json_reader_cb   cb;cb149,3148
   bson_json_destroy_cb  dcb;dcb150,3177
   uint8_t              *buf;buf151,3207
   size_t                buf_size;buf_size152,3237
   size_t                bytes_read;bytes_read153,3272
   size_t                bytes_parsed;bytes_parsed154,3309
   bool                  all_whitespace;all_whitespace155,3348
} bson_json_reader_producer_t;bson_json_reader_producer_t156,3389
struct _bson_json_reader_t_bson_json_reader_t159,3422
   bson_json_reader_producer_t  producer;producer161,3451
   bson_json_reader_bson_t      bson;bson162,3493
   yajl_handle                  yh;yh163,3531
   bson_error_t                *error;error164,3567
{__anon9342fc1f1108169,3626
   int fd;fd170,3628
   bool do_close;do_close171,3639
} bson_json_reader_handle_fd_t;bson_json_reader_handle_fd_t172,3657
bson_yajl_malloc_func (void   *ctx,bson_yajl_malloc_func176,3705
bson_yajl_free_func (void *ctx,bson_yajl_free_func184,3822
bson_yajl_realloc_func (void   *ctx,bson_yajl_realloc_func192,3926
static yajl_alloc_funcs gYajlAllocFuncs = {gYajlAllocFuncs200,4076
_noop (void)_noop208,4214
#define STACK_ELE(STACK_ELE212,4232
#define STACK_BSON(STACK_BSON213,4305
#define STACK_BSON_PARENT STACK_BSON_PARENT215,4409
#define STACK_BSON_CHILD STACK_BSON_CHILD216,4451
#define STACK_I STACK_I217,4491
#define STACK_IS_ARRAY STACK_IS_ARRAY218,4524
#define STACK_PUSH_ARRAY(STACK_PUSH_ARRAY219,4571
#define STACK_PUSH_DOC(STACK_PUSH_DOC229,4816
#define STACK_POP_ARRAY(STACK_POP_ARRAY238,5038
#define STACK_POP_DOC(STACK_POP_DOC247,5260
#define BASIC_YAJL_CB_PREAMBLE BASIC_YAJL_CB_PREAMBLE256,5479
#define BASIC_YAJL_CB_BAIL_IF_NOT_NORMAL(BASIC_YAJL_CB_BAIL_IF_NOT_NORMAL264,5754
#define HANDLE_OPTION(HANDLE_OPTION274,6212
_bson_json_all_whitespace (const char *utf8)_bson_json_all_whitespace287,6718
_bson_json_read_set_error (bson_json_reader_t *reader, /* IN */_bson_json_read_set_error311,7224
_bson_json_buf_ensure (bson_json_buf_t *buf, /* IN */_bson_json_buf_ensure332,7832
_bson_json_read_fixup_key (bson_json_reader_bson_t *bson) /* IN */_bson_json_read_fixup_key345,8117
_bson_json_buf_set (bson_json_buf_t *buf,            /* IN */_bson_json_buf_set357,8466
_bson_json_read_null (void *_ctx)_bson_json_read_null379,8968
_bson_json_read_boolean (void *_ctx, /* IN */_bson_json_read_boolean391,9162
_bson_json_read_integer (void    *_ctx, /* IN */_bson_json_read_integer411,9610
_bson_json_read_double (void   *_ctx, /* IN */_bson_json_read_double475,11556
_bson_json_read_string (void                *_ctx, /* IN */_bson_json_read_string488,11819
# define SSCANF SSCANF531,13356
# define SSCANF SSCANF533,13387
_bson_json_read_start_map (void *_ctx) /* IN */_bson_json_read_start_map622,16042
_is_known_key (const char *key, size_t len)_is_known_key643,16580
#define IS_KEY(IS_KEY647,16640
_bson_json_read_map_key (void          *_ctx, /* IN */_bson_json_read_map_key668,17109
_bson_json_read_append_binary (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_binary737,20359
_bson_json_read_append_regex (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_regex758,21199
_bson_json_read_append_oid (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_oid782,21889
_bson_json_read_append_date_time (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_date_time791,22185
_bson_json_read_append_timestamp (bson_json_reader_t      *reader, /* IN */_bson_json_read_append_timestamp800,22506
_bad_extended_json (bson_json_reader_t *reader)_bad_extended_json822,23293
_bson_json_read_end_map (void *_ctx) /* IN */_bson_json_read_end_map832,23533
_bson_json_read_start_array (void *_ctx) /* IN */_bson_json_read_start_array932,27150
_bson_json_read_end_array (void *_ctx) /* IN */_bson_json_read_end_array957,27745
static yajl_callbacks read_cbs = {read_cbs979,28337
_bson_json_read_parse_error (bson_json_reader_t *reader, /* IN */_bson_json_read_parse_error995,28679
bson_json_reader_read (bson_json_reader_t *reader, /* IN */bson_json_reader_read1061,30599
bson_json_reader_new (void                 *data,           /* IN */bson_json_reader_new1143,32555
bson_json_reader_destroy (bson_json_reader_t *reader) /* IN */bson_json_reader_destroy1174,33415
{__anon9342fc1f12081198,33885
   const uint8_t *data;data1199,33887
   size_t         len;len1200,33911
   size_t         bytes_parsed;bytes_parsed1201,33934
} bson_json_data_reader_t;bson_json_data_reader_t1202,33966
_bson_json_data_reader_cb (void    *_ctx,_bson_json_data_reader_cb1206,34010
bson_json_data_reader_new (bool   allow_multiple, /* IN */bson_json_data_reader_new1228,34453
bson_json_data_reader_ingest (bson_json_reader_t *reader, /* IN */bson_json_data_reader_ingest1239,34774
bson_new_from_json (const uint8_t *data,  /* IN */bson_new_from_json1253,35147
bson_init_from_json (bson_t       *bson,  /* OUT */bson_init_from_json1283,35796
_bson_json_reader_handle_fd_destroy (void *handle) /* IN */_bson_json_reader_handle_fd_destroy1315,36504
_bson_json_reader_handle_fd_read (void    *handle, /* IN */_bson_json_reader_handle_fd_read1333,36795
bson_json_reader_new_from_fd (int fd,                /* IN */bson_json_reader_new_from_fd1357,37329
bson_json_reader_new_from_file (const char   *path,  /* IN */bson_json_reader_new_from_file1377,37928

mongo/bson/bson-atomic.h,513
#define BSON_ATOMIC_HBSON_ATOMIC_H19,624
#  define bson_atomic_int_add(bson_atomic_int_add33,821
#  define bson_atomic_int64_add(bson_atomic_int64_add34,904
# define bson_memory_barrier(bson_memory_barrier71,2160
#  define bson_memory_barrier(bson_memory_barrier74,2266
#  define bson_memory_barrier(bson_memory_barrier77,2405
# define bson_memory_barrier(bson_memory_barrier81,2527
# define bson_memory_barrier(bson_memory_barrier83,2604
# define __BSON_NEED_BARRIER __BSON_NEED_BARRIER85,2650

mongo/bson/Makefile.am,541
headerdir = $(prefix)/include/libbson-@BSON_API_VERSION@headerdir3,34
headerdir = $(prefix)/include/libbson-@BSON_API_VERSION@header3,34
header_DATA = \header_DATA4,91
	$(INST_H_FILES) \$(INST_H_FILES)5,107
	src/bson/bson-config.hsrc/bson/bson-config.h6,126
INST_H_FILES = \INST_H_FILES8,151
NOINST_H_FILES = \NOINST_H_FILES39,854
libbson_la_CPPFLAGS = \libbson_la_CPPFLAGS49,1084
libbson_la_CFLAGS = \libbson_la_CFLAGS56,1238
libbson_la_SOURCES = \libbson_la_SOURCES62,1348
libbson_la_LIBADD =libbson_la_LIBADD86,1912

mongo/bson/bson-keys.h,39
#define BSON_KEYS_HBSON_KEYS_H19,617

mongo/bson/bson.c,8189
# define BSON_MAX_RECURSION BSON_MAX_RECURSION29,776
typedef enum {__anona2dd1f38010333,817
   BSON_VALIDATE_PHASE_START,BSON_VALIDATE_PHASE_START34,832
   BSON_VALIDATE_PHASE_TOP,BSON_VALIDATE_PHASE_TOP35,862
   BSON_VALIDATE_PHASE_LF_REF_KEY,BSON_VALIDATE_PHASE_LF_REF_KEY36,890
   BSON_VALIDATE_PHASE_LF_REF_UTF8,BSON_VALIDATE_PHASE_LF_REF_UTF837,925
   BSON_VALIDATE_PHASE_LF_ID_KEY,BSON_VALIDATE_PHASE_LF_ID_KEY38,961
   BSON_VALIDATE_PHASE_LF_DB_KEY,BSON_VALIDATE_PHASE_LF_DB_KEY39,995
   BSON_VALIDATE_PHASE_LF_DB_UTF8,BSON_VALIDATE_PHASE_LF_DB_UTF840,1029
   BSON_VALIDATE_PHASE_NOT_DBREF,BSON_VALIDATE_PHASE_NOT_DBREF41,1064
} bson_validate_phase_t;bson_validate_phase_t42,1098
{__anona2dd1f38020849,1162
   bson_validate_flags_t flags;flags50,1164
   ssize_t               err_offset;err_offset51,1196
   bson_validate_phase_t phase;phase52,1233
} bson_validate_state_t;bson_validate_state_t53,1265
{__anona2dd1f38030857,1307
   uint32_t       count;count58,1309
   bool           keys;keys59,1334
   uint32_t       depth;depth60,1358
   bson_string_t *str;str61,1383
} bson_json_state_t;bson_json_state_t62,1406
static const uint8_t gZero;gZero81,2027
_bson_impl_inline_grow (bson_impl_inline_t *impl, /* IN */_bson_impl_inline_grow103,2564
_bson_impl_alloc_grow (bson_impl_alloc_t *impl, /* IN */_bson_impl_alloc_grow156,3820
_bson_grow (bson_t   *bson, /* IN */_bson_grow201,4850
_bson_data (const bson_t *bson) /* IN */_bson_data230,5576
_bson_encode_length (bson_t *bson) /* IN */_bson_encode_length260,6286
_bson_append_va (bson_t        *bson,        /* IN */_bson_append_va298,7381
_bson_append (bson_t        *bson,        /* IN */_bson_append367,9150
_bson_append_bson_begin (bson_t      *bson,        /* IN */_bson_append_bson_begin421,10623
_bson_append_bson_end (bson_t *bson,   /* IN */_bson_append_bson_end521,13659
bson_append_array_begin (bson_t     *bson,         /* IN */bson_append_array_begin576,15211
bson_append_array_end (bson_t *bson,   /* IN */bson_append_array_end610,16162
bson_append_document_begin (bson_t     *bson,         /* IN */bson_append_document_begin645,17177
bson_append_document_end (bson_t *bson,   /* IN */bson_append_document_end679,18182
bson_append_array (bson_t       *bson,       /* IN */bson_append_array709,18868
bson_append_binary (bson_t         *bson,       /* IN */bson_append_binary775,20755
bson_append_bool (bson_t     *bson,       /* IN */bson_append_bool843,22780
bson_append_code (bson_t     *bson,       /* IN */bson_append_code890,23946
bson_append_code_with_scope (bson_t       *bson,         /* IN */bson_append_code_with_scope938,25163
bson_append_dbpointer (bson_t           *bson,       /* IN */bson_append_dbpointer999,26920
bson_append_document (bson_t       *bson,       /* IN */bson_append_document1055,28433
bson_append_double (bson_t     *bson,bson_append_double1080,29122
bson_append_int32 (bson_t      *bson,bson_append_int321108,29770
bson_append_int64 (bson_t      *bson,bson_append_int641135,30394
bson_append_iter (bson_t            *bson,bson_append_iter1162,31018
bson_append_maxkey (bson_t     *bson,bson_append_maxkey1331,35606
bson_append_minkey (bson_t     *bson,bson_append_minkey1353,36091
bson_append_null (bson_t     *bson,bson_append_null1375,36576
bson_append_oid (bson_t           *bson,bson_append_oid1397,37053
bson_append_regex (bson_t     *bson,bson_append_regex1422,37650
bson_append_utf8 (bson_t     *bson,bson_append_utf81461,38542
bson_append_symbol (bson_t     *bson,bson_append_symbol1499,39484
bson_append_time_t (bson_t     *bson,bson_append_time_t1537,40389
bson_append_timestamp (bson_t       *bson,bson_append_timestamp1556,40779
bson_append_now_utc (bson_t     *bson,bson_append_now_utc1585,41532
bson_append_date_time (bson_t      *bson,bson_append_date_time1598,41813
bson_append_timeval (bson_t         *bson,bson_append_timeval1625,42456
bson_append_undefined (bson_t     *bson,bson_append_undefined1643,42922
bson_append_value (bson_t             *bson,bson_append_value1665,43418
bson_init (bson_t *bson)bson_init1781,47552
bson_reinit (bson_t *bson)bson_reinit1798,47853
bson_init_static (bson_t        *bson,bson_init_static1817,48068
bson_new (void)bson_new1858,48932
bson_sized_new (size_t size)bson_sized_new1879,49267
bson_new_from_data (const uint8_t *data,bson_new_from_data1918,50196
bson_new_from_buffer (uint8_t           **buf,bson_new_from_buffer1945,50705
bson_copy (const bson_t *bson)bson_copy1999,51945
bson_copy_to (const bson_t *src,bson_copy_to2011,52113
should_ignore (const char *first_exclude,should_ignore2047,52947
_bson_copy_to_excluding_va (const bson_t *src,_bson_copy_to_excluding_va2071,53377
bson_copy_to_excluding (const bson_t *src,bson_copy_to_excluding2096,54074
bson_copy_to_excluding_noinit (const bson_t *src,bson_copy_to_excluding_noinit2115,54484
bson_destroy (bson_t *bson)bson_destroy2133,54909
bson_destroy_with_steal (bson_t   *bson,bson_destroy_with_steal2149,55203
bson_get_data (const bson_t *bson)bson_get_data2191,56056
bson_count_keys (const bson_t *bson)bson_count_keys2200,56159
bson_has_field (const bson_t *bson,bson_has_field2218,56403
bson_compare (const bson_t *bson,bson_compare2237,56775
bson_equal (const bson_t *bson,bson_equal2267,57303
_bson_as_json_visit_utf8 (const bson_iter_t *iter,_bson_as_json_visit_utf82275,57425
_bson_as_json_visit_int32 (const bson_iter_t *iter,_bson_as_json_visit_int322299,58047
_bson_as_json_visit_int64 (const bson_iter_t *iter,_bson_as_json_visit_int642313,58389
_bson_as_json_visit_double (const bson_iter_t *iter,_bson_as_json_visit_double2327,58731
_bson_as_json_visit_undefined (const bson_iter_t *iter,_bson_as_json_visit_undefined2349,59282
_bson_as_json_visit_null (const bson_iter_t *iter,_bson_as_json_visit_null2362,59587
_bson_as_json_visit_oid (const bson_iter_t *iter,_bson_as_json_visit_oid2375,59856
_bson_as_json_visit_binary (const bson_iter_t  *iter,_bson_as_json_visit_binary2393,60318
_bson_as_json_visit_bool (const bson_iter_t *iter,_bson_as_json_visit_bool2420,61173
_bson_as_json_visit_date_time (const bson_iter_t *iter,_bson_as_json_visit_date_time2434,61507
_bson_as_json_visit_regex (const bson_iter_t *iter,_bson_as_json_visit_regex2450,61979
_bson_as_json_visit_timestamp (const bson_iter_t *iter,_bson_as_json_visit_timestamp2469,62573
_bson_as_json_visit_dbpointer (const bson_iter_t *iter,_bson_as_json_visit_dbpointer2488,63216
_bson_as_json_visit_minkey (const bson_iter_t *iter,_bson_as_json_visit_minkey2516,64059
_bson_as_json_visit_maxkey (const bson_iter_t *iter,_bson_as_json_visit_maxkey2529,64349
_bson_as_json_visit_before (const bson_iter_t *iter,_bson_as_json_visit_before2544,64641
_bson_as_json_visit_code (const bson_iter_t *iter,_bson_as_json_visit_code2574,65310
_bson_as_json_visit_symbol (const bson_iter_t *iter,_bson_as_json_visit_symbol2598,65932
_bson_as_json_visit_codewscope (const bson_iter_t *iter,_bson_as_json_visit_codewscope2615,66411
static const bson_visitor_t bson_as_json_visitors = {bson_as_json_visitors2639,67111
_bson_as_json_visit_document (const bson_iter_t *iter,_bson_as_json_visit_document2667,67892
_bson_as_json_visit_array (const bson_iter_t *iter,_bson_as_json_visit_array2695,68757
bson_as_json (const bson_t *bson,bson_as_json2723,69600
bson_array_as_json (const bson_t *bson,bson_array_as_json2775,70532
_bson_iter_validate_utf8 (const bson_iter_t *iter,_bson_iter_validate_utf82828,71546
_bson_iter_validate_corrupt (const bson_iter_t *iter,_bson_iter_validate_corrupt2859,72467
_bson_iter_validate_before (const bson_iter_t *iter,_bson_iter_validate_before2869,72672
_bson_iter_validate_codewscope (const bson_iter_t *iter,_bson_iter_validate_codewscope2912,74103
static const bson_visitor_t bson_validate_funcs = {bson_validate_funcs2938,74906
_bson_iter_validate_document (const bson_iter_t *iter,_bson_iter_validate_document2961,75518
bson_validate (const bson_t         *bson,bson_validate2997,76483
bson_concat (bson_t       *dst,bson_concat3022,76978

mongo/bson/bson-error.h,203
#define BSON_ERROR_HBSON_ERROR_H19,618
#define BSON_ERROR_JSON BSON_ERROR_JSON30,736
#define BSON_ERROR_READER BSON_ERROR_READER31,764
#define BSON_ERROR_BUFFER_SIZE BSON_ERROR_BUFFER_SIZE33,793

mongo/bson/bson-oid.h,593
#define BSON_OID_HBSON_OID_H19,616
bson_oid_compare_unsafe (const bson_oid_t *oid1,bson_oid_compare_unsafe74,2564
bson_oid_equal_unsafe (const bson_oid_t *oid1,bson_oid_equal_unsafe94,3082
bson_oid_hash_unsafe (const bson_oid_t *oid)bson_oid_hash_unsafe114,3684
bson_oid_copy_unsafe (const bson_oid_t *src,bson_oid_copy_unsafe138,4261
bson_oid_parse_hex_char (char hex)bson_oid_parse_hex_char156,4762
bson_oid_init_from_string_unsafe (bson_oid_t *oid,bson_oid_init_from_string_unsafe215,5911
bson_oid_get_time_t_unsafe (const bson_oid_t *oid)bson_oid_get_time_t_unsafe236,6402

mongo/bson/bson-config.h.in,788
#define BSON_CONFIG_HBSON_CONFIG_H2,22
#define BSON_BYTE_ORDER BSON_BYTE_ORDER7,110
#define BSON_HAVE_STDBOOL_H BSON_HAVE_STDBOOL_H13,198
#define BSON_OS BSON_OS22,375
#define BSON_HAVE_ATOMIC_32_ADD_AND_FETCH BSON_HAVE_ATOMIC_32_ADD_AND_FETCH31,651
#define BSON_HAVE_ATOMIC_64_ADD_AND_FETCH BSON_HAVE_ATOMIC_64_ADD_AND_FETCH39,904
#define BSON_PTHREAD_ONCE_INIT_NEEDS_BRACES BSON_PTHREAD_ONCE_INIT_NEEDS_BRACES49,1191
#define BSON_HAVE_CLOCK_GETTIME BSON_HAVE_CLOCK_GETTIME58,1432
#define BSON_HAVE_STRNLEN BSON_HAVE_STRNLEN67,1634
#define BSON_HAVE_SNPRINTF BSON_HAVE_SNPRINTF76,1813
#define BSON_NEEDS_SET_OUTPUT_FORMAT BSON_NEEDS_SET_OUTPUT_FORMAT85,1998
#define BSON_HAVE_TIMESPEC BSON_HAVE_TIMESPEC93,2227
#define BSON_EXTRA_ALIGN BSON_EXTRA_ALIGN102,2404

mongo/bson/bson-context.h,45
#define BSON_CONTEXT_HBSON_CONTEXT_H19,620

mongo/bson/bson-private.h,1795
#define BSON_PRIVATE_HBSON_PRIVATE_H19,620
{__anon855d0d85010331,753
   BSON_FLAG_NONE            = 0,BSON_FLAG_NONE32,755
   BSON_FLAG_INLINE          = (1 << 0),BSON_FLAG_INLINE33,789
   BSON_FLAG_STATIC          = (1 << 1),BSON_FLAG_STATIC34,830
   BSON_FLAG_RDONLY          = (1 << 2),BSON_FLAG_RDONLY35,871
   BSON_FLAG_CHILD           = (1 << 3),BSON_FLAG_CHILD36,912
   BSON_FLAG_IN_CHILD        = (1 << 4),BSON_FLAG_IN_CHILD37,953
   BSON_FLAG_NO_FREE         = (1 << 5),BSON_FLAG_NO_FREE38,994
} bson_flags_t;bson_flags_t39,1035
{__anon855d0d85020844,1093
   bson_flags_t flags;flags45,1095
   uint32_t     len;len46,1118
   uint8_t      data [120];data47,1139
BSON_ALIGNED_END (128);BSON_ALIGNED_END49,1188
{__anon855d0d85030857,1313
   bson_flags_t        flags;            /* flags describing the bson_t */flags58,1315
   uint32_t            len;              /* length of bson document in bytes */len59,1390
   bson_t             *parent;           /* parent bson if a child */parent60,1470
   uint32_t            depth;            /* Subdocument depth. */depth61,1540
   uint8_t           **buf;              /* pointer to buffer pointer */buf62,1606
   size_t             *buflen;           /* pointer to buffer length */buflen63,1679
   size_t              offset;           /* our offset inside *buf  */offset64,1751
   uint8_t            *alloc;            /* buffer that we own. */alloc65,1822
   size_t              alloclen;         /* length of buffer that we own. */alloclen66,1889
   bson_realloc_func   realloc;          /* our realloc implementation */realloc67,1966
   void               *realloc_func_ctx; /* context for our realloc func */realloc_func_ctx68,2040
BSON_ALIGNED_END (128);BSON_ALIGNED_END70,2136

mongo/bson/bson-context-private.h,679
#define BSON_CONTEXT_PRIVATE_HBSON_CONTEXT_PRIVATE_H19,628
struct _bson_context_t_bson_context_t29,741
   bson_context_flags_t flags : 7;flags31,766
   bool                 pidbe_once : 1;pidbe_once32,801
   uint8_t              pidbe[2];pidbe33,841
   uint8_t              md5[3];md534,875
   int32_t              seq32;seq3235,907
   int64_t              seq64;seq6436,938
   void (*oid_get_host)  (bson_context_t *context,oid_get_host38,970
   void (*oid_get_pid)   (bson_context_t *context,oid_get_pid40,1069
   void (*oid_get_seq32) (bson_context_t *context,oid_get_seq3242,1168
   void (*oid_get_seq64) (bson_context_t *context,oid_get_seq6444,1267

mongo/bson/bcon.c,4612
#define STACK_ELE(STACK_ELE32,1057
#define STACK_BSON(STACK_BSON34,1129
#define STACK_ITER(STACK_ITER40,1253
#define STACK_BSON_PARENT STACK_BSON_PARENT46,1383
#define STACK_BSON_CHILD STACK_BSON_CHILD47,1425
#define STACK_ITER_PARENT STACK_ITER_PARENT49,1466
#define STACK_ITER_CHILD STACK_ITER_CHILD50,1508
#define STACK_I STACK_I52,1549
#define STACK_IS_ARRAY STACK_IS_ARRAY53,1582
#define STACK_PUSH_ARRAY(STACK_PUSH_ARRAY55,1630
#define STACK_PUSH_DOC(STACK_PUSH_DOC64,1828
#define STACK_POP_ARRAY(STACK_POP_ARRAY72,2003
#define STACK_POP_DOC(STACK_POP_DOC80,2166
typedef union bcon_append {bcon_append91,2562
   char   *UTF8;UTF892,2590
   double  DOUBLE;DOUBLE93,2607
   bson_t *DOCUMENT;DOCUMENT94,2626
   bson_t *ARRAY;ARRAY95,2647
   bson_t *BCON;BCON96,2665
   {__anona1bb9728010899,2693
      bson_subtype_t subtype;subtype100,2698
      uint8_t  *binary;binary101,2728
      uint32_t  length;length102,2752
   } BIN;BIN103,2776
   bson_oid_t    *OID;OID105,2787
   bool BOOL;BOOL106,2810
   int64_t   DATE_TIME;DATE_TIME107,2824
   {__anona1bb97280208110,2859
      char *regex;regex111,2864
      char *flags;flags112,2883
   } REGEX;REGEX113,2902
   {__anona1bb97280308116,2925
      char       *collection;collection117,2930
      bson_oid_t *oid;oid118,2960
   } DBPOINTER;DBPOINTER119,2983
   const char *CODE;CODE121,3000
   char *SYMBOL;SYMBOL123,3022
   {__anona1bb97280408126,3050
      const char *js;js127,3055
      bson_t     *scope;scope128,3077
   } CODEWSCOPE;CODEWSCOPE129,3102
   int32_t INT32;INT32131,3120
   {__anona1bb97280508134,3149
      uint32_t timestamp;timestamp135,3154
      uint32_t increment;increment136,3180
   } TIMESTAMP;TIMESTAMP137,3206
   int64_t       INT64;INT64139,3223
   const bson_iter_t *ITER;ITER140,3247
} bcon_append_t;bcon_append_t141,3275
typedef union bcon_extract {bcon_extract145,3425
   bson_type_t  TYPE;TYPE146,3454
   bson_iter_t *ITER;ITER147,3476
   const char  *key;key148,3498
   const char **UTF8;UTF8149,3519
   double      *DOUBLE;DOUBLE150,3541
   bson_t      *DOCUMENT;DOCUMENT151,3565
   bson_t      *ARRAY;ARRAY152,3591
   {__anona1bb97280608155,3625
      bson_subtype_t      *subtype;subtype156,3630
      const uint8_t      **binary;binary157,3666
      uint32_t            *length;length158,3701
   } BIN;BIN159,3736
   const bson_oid_t **OID;OID161,3747
   bool *BOOL;BOOL162,3774
   int64_t      *DATE_TIME;DATE_TIME163,3789
   {__anona1bb97280708166,3828
      const char **regex;regex167,3833
      const char **flags;flags168,3859
   } REGEX;REGEX169,3885
   {__anona1bb97280808172,3908
      const char       **collection;collection173,3913
      const bson_oid_t **oid;oid174,3950
   } DBPOINTER;DBPOINTER175,3980
   const char **CODE;CODE177,3997
   const char **SYMBOL;SYMBOL179,4020
   {__anona1bb97280908182,4055
      const char **js;js183,4060
      bson_t      *scope;scope184,4083
   } CODEWSCOPE;CODEWSCOPE185,4109
   int32_t *INT32;INT32187,4127
   {__anona1bb97280a08190,4157
      uint32_t *timestamp;timestamp191,4162
      uint32_t *increment;increment192,4189
   } TIMESTAMP;TIMESTAMP193,4216
   int64_t *INT64;INT64195,4233
} bcon_extract_t;bcon_extract_t196,4252
static const char *gBconMagic = "BCON_MAGIC";gBconMagic198,4271
static const char *gBconeMagic = "BCONE_MAGIC";gBconeMagic199,4317
bson_bcon_magic (void)bson_bcon_magic202,4379
bson_bcone_magic (void)bson_bcone_magic209,4443
_noop (void)_noop215,4507
_bcon_append_single (bson_t        *bson,_bcon_append_single222,4628
#define CHECK_TYPE(CHECK_TYPE307,7191
_bcon_extract_single (const bson_iter_t *iter,_bcon_extract_single326,7819
_bcon_append_tokenize (va_list       *ap,_bcon_append_tokenize462,11768
_bcon_extract_tokenize (va_list        *ap,_bcon_extract_tokenize592,15428
_bson_concat_array (bson_t            *dest,_bson_concat_array711,18789
bcon_append_ctx_va (bson_t            *bson,bcon_append_ctx_va757,20316
bcon_extract_ctx_va (bson_t             *bson,bcon_extract_ctx_va850,23444
bcon_extract_ctx_init (bcon_extract_ctx_t *ctx)bcon_extract_ctx_init927,25422
bcon_extract (bson_t *bson,bcon_extract934,25530
bcon_append (bson_t *bson,bcon_append954,25778
bcon_append_ctx (bson_t            *bson,bcon_append_ctx971,25992
bcon_extract_ctx (bson_t             *bson,bcon_extract_ctx986,26205
bcon_append_ctx_init (bcon_append_ctx_t *ctx)bcon_append_ctx_init1000,26423
bcon_new (void *unused,bcon_new1008,26530

mongo/bson/bson-types.h,9311
#define BSON_TYPES_HBSON_TYPES_H19,618
typedef uint32_t bson_unichar_t;bson_unichar_t52,1335
{__anon0b761b7f010368,1868
   BSON_CONTEXT_NONE = 0,BSON_CONTEXT_NONE69,1870
   BSON_CONTEXT_THREAD_SAFE = (1 << 0),BSON_CONTEXT_THREAD_SAFE70,1896
   BSON_CONTEXT_DISABLE_HOST_CACHE = (1 << 1),BSON_CONTEXT_DISABLE_HOST_CACHE71,1936
   BSON_CONTEXT_DISABLE_PID_CACHE = (1 << 2),BSON_CONTEXT_DISABLE_PID_CACHE72,1983
   BSON_CONTEXT_USE_TASK_ID = (1 << 3),BSON_CONTEXT_USE_TASK_ID74,2052
} bson_context_flags_t;bson_context_flags_t76,2099
typedef struct _bson_context_t bson_context_t;bson_context_t102,3051
typedef struct _bson_t_bson_t123,3733
   uint32_t flags;        /* Internal flags for the bson_t. */flags125,3758
   uint32_t len;          /* Length of BSON data. */len126,3821
   uint8_t padding[120];  /* Padding for stack allocation. */padding127,3874
BSON_ALIGNED_END (128);BSON_ALIGNED_END129,3945
#define BSON_INITIALIZER BSON_INITIALIZER142,4155
{__anon0b761b7f0208156,4492
   uint8_t bytes[12];bytes157,4494
} bson_oid_t;bson_oid_t158,4516
{__anon0b761b7f0303177,5078
   BSON_VALIDATE_NONE = 0,BSON_VALIDATE_NONE178,5080
   BSON_VALIDATE_UTF8 = (1 << 0),BSON_VALIDATE_UTF8179,5107
   BSON_VALIDATE_DOLLAR_KEYS = (1 << 1),BSON_VALIDATE_DOLLAR_KEYS180,5141
   BSON_VALIDATE_DOT_KEYS = (1 << 2),BSON_VALIDATE_DOT_KEYS181,5182
   BSON_VALIDATE_UTF8_ALLOW_NULL = (1 << 3),BSON_VALIDATE_UTF8_ALLOW_NULL182,5220
} bson_validate_flags_t;bson_validate_flags_t183,5265
{__anon0b761b7f0403193,5489
   BSON_TYPE_EOD = 0x00,BSON_TYPE_EOD194,5491
   BSON_TYPE_DOUBLE = 0x01,BSON_TYPE_DOUBLE195,5516
   BSON_TYPE_UTF8 = 0x02,BSON_TYPE_UTF8196,5544
   BSON_TYPE_DOCUMENT = 0x03,BSON_TYPE_DOCUMENT197,5570
   BSON_TYPE_ARRAY = 0x04,BSON_TYPE_ARRAY198,5600
   BSON_TYPE_BINARY = 0x05,BSON_TYPE_BINARY199,5627
   BSON_TYPE_UNDEFINED = 0x06,BSON_TYPE_UNDEFINED200,5655
   BSON_TYPE_OID = 0x07,BSON_TYPE_OID201,5686
   BSON_TYPE_BOOL = 0x08,BSON_TYPE_BOOL202,5711
   BSON_TYPE_DATE_TIME = 0x09,BSON_TYPE_DATE_TIME203,5737
   BSON_TYPE_NULL = 0x0A,BSON_TYPE_NULL204,5768
   BSON_TYPE_REGEX = 0x0B,BSON_TYPE_REGEX205,5794
   BSON_TYPE_DBPOINTER = 0x0C,BSON_TYPE_DBPOINTER206,5821
   BSON_TYPE_CODE = 0x0D,BSON_TYPE_CODE207,5852
   BSON_TYPE_SYMBOL = 0x0E,BSON_TYPE_SYMBOL208,5878
   BSON_TYPE_CODEWSCOPE = 0x0F,BSON_TYPE_CODEWSCOPE209,5906
   BSON_TYPE_INT32 = 0x10,BSON_TYPE_INT32210,5938
   BSON_TYPE_TIMESTAMP = 0x11,BSON_TYPE_TIMESTAMP211,5965
   BSON_TYPE_INT64 = 0x12,BSON_TYPE_INT64212,5996
   BSON_TYPE_MAXKEY = 0x7F,BSON_TYPE_MAXKEY213,6023
   BSON_TYPE_MINKEY = 0xFF,BSON_TYPE_MINKEY214,6051
} bson_type_t;bson_type_t215,6079
{__anon0b761b7f0503225,6274
   BSON_SUBTYPE_BINARY = 0x00,BSON_SUBTYPE_BINARY226,6276
   BSON_SUBTYPE_FUNCTION = 0x01,BSON_SUBTYPE_FUNCTION227,6307
   BSON_SUBTYPE_BINARY_DEPRECATED = 0x02,BSON_SUBTYPE_BINARY_DEPRECATED228,6340
   BSON_SUBTYPE_UUID_DEPRECATED = 0x03,BSON_SUBTYPE_UUID_DEPRECATED229,6382
   BSON_SUBTYPE_UUID = 0x04,BSON_SUBTYPE_UUID230,6422
   BSON_SUBTYPE_MD5 = 0x05,BSON_SUBTYPE_MD5231,6451
   BSON_SUBTYPE_USER = 0x80,BSON_SUBTYPE_USER232,6479
} bson_subtype_t;bson_subtype_t233,6508
typedef struct _bson_value_t_bson_value_t251,6874
   bson_type_t           value_type;value_type253,6905
   int32_t               padding;padding254,6942
   union {__anon0b761b7f060a255,6976
      bson_oid_t         v_oid;v_oid256,6987
      int64_t            v_int64;v_int64257,7019
      int32_t            v_int32;v_int32258,7053
      int8_t             v_int8;v_int8259,7087
      double             v_double;v_double260,7120
      bool               v_bool;v_bool261,7155
      int64_t            v_datetime;v_datetime262,7188
      struct {__anon0b761b7f0708263,7225
         uint32_t        timestamp;timestamp264,7240
         uint32_t        increment;increment265,7276
      } v_timestamp;v_timestamp266,7312
      struct {__anon0b761b7f0808267,7333
         char           *str;str268,7348
         uint32_t        len;len269,7378
      } v_utf8;v_utf8270,7408
      struct {__anon0b761b7f0908271,7424
         uint8_t        *data;data272,7439
         uint32_t        data_len;data_len273,7470
      } v_doc;v_doc274,7505
      struct {__anon0b761b7f0a08275,7520
         uint8_t        *data;data276,7535
         uint32_t        data_len;data_len277,7566
         bson_subtype_t  subtype;subtype278,7601
      } v_binary;v_binary279,7635
      struct {__anon0b761b7f0b08280,7653
         char           *regex;regex281,7668
         char           *options;options282,7700
      } v_regex;v_regex283,7734
      struct {__anon0b761b7f0c08284,7751
         char           *collection;collection285,7766
         uint32_t        collection_len;collection_len286,7803
         bson_oid_t      oid;oid287,7844
      } v_dbpointer;v_dbpointer288,7874
      struct {__anon0b761b7f0d08289,7895
         char           *code;code290,7910
         uint32_t        code_len;code_len291,7941
      } v_code;v_code292,7976
      struct {__anon0b761b7f0e08293,7992
         char           *code;code294,8007
         uint8_t        *scope_data;scope_data295,8038
         uint32_t        code_len;code_len296,8075
         uint32_t        scope_len;scope_len297,8110
      } v_codewscope;v_codewscope298,8146
      struct {__anon0b761b7f0f08299,8168
         char           *symbol;symbol300,8183
         uint32_t        len;len301,8216
      } v_symbol;v_symbol302,8246
   } value;value303,8264
BSON_ALIGNED_END (8);BSON_ALIGNED_END305,8291
{__anon0b761b7f1008321,8717
   const uint8_t *raw;      /* The raw buffer being iterated. */raw322,8719
   uint32_t       len;      /* The length of raw. */len323,8784
   uint32_t       off;      /* The offset within the buffer. */off324,8837
   uint32_t       type;     /* The offset of the type byte. */type325,8901
   uint32_t       key;      /* The offset of the key byte. */key326,8964
   uint32_t       d1;       /* The offset of the first data byte. */d1327,9026
   uint32_t       d2;       /* The offset of the second data byte. */d2328,9095
   uint32_t       d3;       /* The offset of the third data byte. */d3329,9165
   uint32_t       d4;       /* The offset of the fourth data byte. */d4330,9234
   uint32_t       next_off; /* The offset of the next field. */next_off331,9304
   uint32_t       err_off;  /* The offset of the error. */err_off332,9368
   bson_value_t   value;    /* Internal value for various state. */value333,9427
BSON_ALIGNED_END (128);BSON_ALIGNED_END335,9509
{__anon0b761b7f1108349,9866
   uint32_t type;type350,9868
BSON_ALIGNED_END (BSON_ALIGN_OF_PTR);BSON_ALIGNED_END353,9921
{__anon0b761b7f1208373,10593
   bool (*visit_before)           (const bson_iter_t *iter,visit_before375,10650
   bool (*visit_after)            (const bson_iter_t *iter,visit_after378,10830
   void (*visit_corrupt)          (const bson_iter_t *iter,visit_corrupt382,11088
   bool (*visit_double)           (const bson_iter_t *iter,visit_double385,11246
   bool (*visit_utf8)             (const bson_iter_t *iter,visit_utf8389,11490
   bool (*visit_document)         (const bson_iter_t *iter,visit_document394,11798
   bool (*visit_array)            (const bson_iter_t *iter,visit_array398,12044
   bool (*visit_binary)           (const bson_iter_t *iter,visit_binary402,12287
   bool (*visit_undefined)        (const bson_iter_t *iter,visit_undefined409,12724
   bool (*visit_oid)              (const bson_iter_t *iter,visit_oid412,12904
   bool (*visit_bool)             (const bson_iter_t *iter,visit_bool416,13145
   bool (*visit_date_time)        (const bson_iter_t *iter,visit_date_time420,13387
   bool (*visit_null)             (const bson_iter_t *iter,visit_null424,13639
   bool (*visit_regex)            (const bson_iter_t *iter,visit_regex427,13819
   bool (*visit_dbpointer)        (const bson_iter_t *iter,visit_dbpointer432,14127
   bool (*visit_code)             (const bson_iter_t *iter,visit_code438,14508
   bool (*visit_symbol)           (const bson_iter_t *iter,visit_symbol443,14816
   bool (*visit_codewscope)       (const bson_iter_t *iter,visit_codewscope448,15128
   bool (*visit_int32)            (const bson_iter_t *iter,visit_int32454,15499
   bool (*visit_timestamp)        (const bson_iter_t *iter,visit_timestamp458,15742
   bool (*visit_int64)            (const bson_iter_t *iter,visit_int64463,16056
   bool (*visit_maxkey)           (const bson_iter_t *iter,visit_maxkey467,16299
   bool (*visit_minkey)           (const bson_iter_t *iter,visit_minkey470,16479
   void (*visit_unsupported_type) (const bson_iter_t *iter,visit_unsupported_type475,16813
   void *padding[8];padding480,17059
BSON_ALIGNED_END (8);BSON_ALIGNED_END482,17097
typedef struct _bson_error_t_bson_error_t486,17144
   uint32_t domain;domain488,17175
   uint32_t code;code489,17195
   char     message[504];message490,17213
BSON_ALIGNED_END (8);BSON_ALIGNED_END492,17254
bson_next_power_of_two (size_t v)bson_next_power_of_two510,17659
bson_is_power_of_two (uint32_t v)bson_is_power_of_two528,17883

mongo/bson/bson-stdint-win32.h,4960
#define _MSC_STDINT_H__MSC_STDINT_H_38,1871
#     define _W64 _W6465,2567
#     define _W64_W6467,2599
   typedef signed char       int8_t;int8_t80,2866
   typedef signed short      int16_t;int16_t81,2903
   typedef signed int        int32_t;int32_t82,2941
   typedef unsigned char     uint8_t;uint8_t83,2979
   typedef unsigned short    uint16_t;uint16_t84,3017
   typedef unsigned int      uint32_t;uint32_t85,3056
   typedef signed __int8     int8_t;int8_t87,3101
   typedef signed __int16    int16_t;int16_t88,3138
   typedef signed __int32    int32_t;int32_t89,3176
   typedef unsigned __int8   uint8_t;uint8_t90,3214
   typedef unsigned __int16  uint16_t;uint16_t91,3252
   typedef unsigned __int32  uint32_t;uint32_t92,3291
typedef signed __int64       int64_t;int64_t94,3337
typedef unsigned __int64     uint64_t;uint64_t95,3375
typedef int8_t    int_least8_t;int_least8_t99,3456
typedef int16_t   int_least16_t;int_least16_t100,3488
typedef int32_t   int_least32_t;int_least32_t101,3521
typedef int64_t   int_least64_t;int_least64_t102,3554
typedef uint8_t   uint_least8_t;uint_least8_t103,3587
typedef uint16_t  uint_least16_t;uint_least16_t104,3620
typedef uint32_t  uint_least32_t;uint_least32_t105,3654
typedef uint64_t  uint_least64_t;uint_least64_t106,3688
typedef int8_t    int_fast8_t;int_fast8_t109,3771
typedef int16_t   int_fast16_t;int_fast16_t110,3802
typedef int32_t   int_fast32_t;int_fast32_t111,3834
typedef int64_t   int_fast64_t;int_fast64_t112,3866
typedef uint8_t   uint_fast8_t;uint_fast8_t113,3898
typedef uint16_t  uint_fast16_t;uint_fast16_t114,3930
typedef uint32_t  uint_fast32_t;uint_fast32_t115,3963
typedef uint64_t  uint_fast64_t;uint_fast64_t116,3996
   typedef signed __int64    intptr_t;intptr_t120,4110
   typedef unsigned __int64  uintptr_t;uintptr_t121,4149
   typedef _W64 signed int   intptr_t;intptr_t123,4208
   typedef _W64 unsigned int uintptr_t;uintptr_t124,4247
typedef int64_t   intmax_t;intmax_t128,4348
typedef uint64_t  uintmax_t;uintmax_t129,4376
#define INT8_MIN INT8_MIN137,4630
#define INT8_MAX INT8_MAX138,4669
#define INT16_MIN INT16_MIN139,4698
#define INT16_MAX INT16_MAX140,4739
#define INT32_MIN INT32_MIN141,4769
#define INT32_MAX INT32_MAX142,4810
#define INT64_MIN INT64_MIN143,4840
#define INT64_MAX INT64_MAX144,4881
#define UINT8_MAX UINT8_MAX145,4911
#define UINT16_MAX UINT16_MAX146,4941
#define UINT32_MAX UINT32_MAX147,4972
#define UINT64_MAX UINT64_MAX148,5003
#define INT_LEAST8_MIN INT_LEAST8_MIN151,5085
#define INT_LEAST8_MAX INT_LEAST8_MAX152,5120
#define INT_LEAST16_MIN INT_LEAST16_MIN153,5155
#define INT_LEAST16_MAX INT_LEAST16_MAX154,5191
#define INT_LEAST32_MIN INT_LEAST32_MIN155,5227
#define INT_LEAST32_MAX INT_LEAST32_MAX156,5263
#define INT_LEAST64_MIN INT_LEAST64_MIN157,5299
#define INT_LEAST64_MAX INT_LEAST64_MAX158,5335
#define UINT_LEAST8_MAX UINT_LEAST8_MAX159,5371
#define UINT_LEAST16_MAX UINT_LEAST16_MAX160,5407
#define UINT_LEAST32_MAX UINT_LEAST32_MAX161,5444
#define UINT_LEAST64_MAX UINT_LEAST64_MAX162,5481
#define INT_FAST8_MIN INT_FAST8_MIN165,5577
#define INT_FAST8_MAX INT_FAST8_MAX166,5611
#define INT_FAST16_MIN INT_FAST16_MIN167,5645
#define INT_FAST16_MAX INT_FAST16_MAX168,5680
#define INT_FAST32_MIN INT_FAST32_MIN169,5715
#define INT_FAST32_MAX INT_FAST32_MAX170,5750
#define INT_FAST64_MIN INT_FAST64_MIN171,5785
#define INT_FAST64_MAX INT_FAST64_MAX172,5820
#define UINT_FAST8_MAX UINT_FAST8_MAX173,5855
#define UINT_FAST16_MAX UINT_FAST16_MAX174,5890
#define UINT_FAST32_MAX UINT_FAST32_MAX175,5926
#define UINT_FAST64_MAX UINT_FAST64_MAX176,5962
#  define INTPTR_MIN INTPTR_MIN180,6089
#  define INTPTR_MAX INTPTR_MAX181,6122
#  define UINTPTR_MAX UINTPTR_MAX182,6155
#  define INTPTR_MIN INTPTR_MIN184,6208
#  define INTPTR_MAX INTPTR_MAX185,6241
#  define UINTPTR_MAX UINTPTR_MAX186,6274
#define INTMAX_MIN INTMAX_MIN190,6379
#define INTMAX_MAX INTMAX_MAX191,6410
#define UINTMAX_MAX UINTMAX_MAX192,6441
#  define PTRDIFF_MIN PTRDIFF_MIN197,6534
#  define PTRDIFF_MAX PTRDIFF_MAX198,6566
#  define PTRDIFF_MIN PTRDIFF_MIN200,6618
#  define PTRDIFF_MAX PTRDIFF_MAX201,6650
#define SIG_ATOMIC_MIN SIG_ATOMIC_MIN204,6703
#define SIG_ATOMIC_MAX SIG_ATOMIC_MAX205,6735
#     define SIZE_MAX SIZE_MAX209,6811
#     define SIZE_MAX SIZE_MAX211,6865
#  define WCHAR_MIN WCHAR_MIN217,7021
#  define WCHAR_MAX WCHAR_MAX220,7090
#define WINT_MIN WINT_MIN223,7145
#define WINT_MAX WINT_MAX224,7165
#define INT8_C(INT8_C235,7423
#define INT16_C(INT16_C236,7452
#define INT32_C(INT32_C237,7482
#define INT64_C(INT64_C238,7512
#define UINT8_C(UINT8_C240,7543
#define UINT16_C(UINT16_C241,7574
#define UINT32_C(UINT32_C242,7606
#define UINT64_C(UINT64_C243,7638
#  define INTMAX_C INTMAX_C249,7867
#  define UINTMAX_C UINTMAX_C252,7944

mongo/bson/bson-iter.h,2325
#define BSON_ITER_HBSON_ITER_H19,617
#define BSON_ITER_HOLDS_DOUBLE(BSON_ITER_HOLDS_DOUBLE36,869
#define BSON_ITER_HOLDS_UTF8(BSON_ITER_HOLDS_UTF839,958
#define BSON_ITER_HOLDS_DOCUMENT(BSON_ITER_HOLDS_DOCUMENT42,1043
#define BSON_ITER_HOLDS_ARRAY(BSON_ITER_HOLDS_ARRAY45,1136
#define BSON_ITER_HOLDS_BINARY(BSON_ITER_HOLDS_BINARY48,1223
#define BSON_ITER_HOLDS_UNDEFINED(BSON_ITER_HOLDS_UNDEFINED51,1312
#define BSON_ITER_HOLDS_OID(BSON_ITER_HOLDS_OID54,1407
#define BSON_ITER_HOLDS_BOOL(BSON_ITER_HOLDS_BOOL57,1490
#define BSON_ITER_HOLDS_DATE_TIME(BSON_ITER_HOLDS_DATE_TIME60,1575
#define BSON_ITER_HOLDS_NULL(BSON_ITER_HOLDS_NULL63,1670
#define BSON_ITER_HOLDS_REGEX(BSON_ITER_HOLDS_REGEX66,1755
#define BSON_ITER_HOLDS_DBPOINTER(BSON_ITER_HOLDS_DBPOINTER69,1842
#define BSON_ITER_HOLDS_CODE(BSON_ITER_HOLDS_CODE72,1937
#define BSON_ITER_HOLDS_SYMBOL(BSON_ITER_HOLDS_SYMBOL75,2022
#define BSON_ITER_HOLDS_CODEWSCOPE(BSON_ITER_HOLDS_CODEWSCOPE78,2111
#define BSON_ITER_HOLDS_INT32(BSON_ITER_HOLDS_INT3281,2208
#define BSON_ITER_HOLDS_TIMESTAMP(BSON_ITER_HOLDS_TIMESTAMP84,2295
#define BSON_ITER_HOLDS_INT64(BSON_ITER_HOLDS_INT6487,2390
#define BSON_ITER_HOLDS_MAXKEY(BSON_ITER_HOLDS_MAXKEY90,2477
#define BSON_ITER_HOLDS_MINKEY(BSON_ITER_HOLDS_MINKEY93,2566
#define BSON_ITER_IS_KEY(BSON_ITER_IS_KEY96,2655
bson_iter_utf8_len_unsafe (const bson_iter_t *iter)bson_iter_utf8_len_unsafe113,3111
bson_iter_code_unsafe (const bson_iter_t *iter,bson_iter_code_unsafe151,4032
bson_iter_double_unsafe (const bson_iter_t *iter)bson_iter_double_unsafe192,5064
bson_iter_int32_unsafe (const bson_iter_t *iter)bson_iter_int32_unsafe231,5829
bson_iter_int64_unsafe (const bson_iter_t *iter)bson_iter_int64_unsafe257,6295
bson_iter_oid_unsafe (const bson_iter_t *iter)bson_iter_oid_unsafe299,7112
bson_iter_key_unsafe (const bson_iter_t *iter)bson_iter_key_unsafe318,7496
bson_iter_utf8_unsafe (const bson_iter_t *iter,bson_iter_utf8_unsafe337,7896
bson_iter_time_t_unsafe (const bson_iter_t *iter)bson_iter_time_t_unsafe368,8560
bson_iter_timeval_unsafe (const bson_iter_t *iter,bson_iter_timeval_unsafe387,8955
bson_iter_bool_unsafe (const bson_iter_t *iter)bson_iter_bool_unsafe419,9648
bson_iter_type_unsafe (const bson_iter_t *iter)bson_iter_type_unsafe455,10281

mongo/bson/bson-thread-private.h,706
#define BSON_THREAD_PRIVATE_HBSON_THREAD_PRIVATE_H19,627
#  define bson_mutex_t bson_mutex_t37,921
#  define bson_mutex_init(bson_mutex_init38,979
#  define bson_mutex_lock bson_mutex_lock39,1052
#  define bson_mutex_unlock bson_mutex_unlock40,1113
#  define bson_mutex_destroy bson_mutex_destroy41,1176
#  define bson_thread_t bson_thread_t42,1240
#  define bson_thread_create(bson_thread_create43,1292
#  define bson_thread_join(bson_thread_join44,1373
#  define bson_once_t bson_once_t45,1440
#  define bson_once bson_once46,1497
#  define BSON_ONCE_FUN(BSON_ONCE_FUN47,1552
#  define BSON_ONCE_RETURN BSON_ONCE_RETURN48,1607
#    define BSON_ONCE_INIT BSON_ONCE_INIT50,1701

mongo/bson/bson-writer.h,110
#define BSON_WRITER_HBSON_WRITER_H19,619
typedef struct _bson_writer_t bson_writer_t;bson_writer_t39,1105

mongo/bson/bson-memory.h,478
#define BSON_MEMORY_HBSON_MEMORY_H19,619
typedef void *(*bson_realloc_func) (void  *mem,bson_realloc_func34,830
typedef struct _bson_mem_vtable_t_bson_mem_vtable_t39,983
   void *(*malloc)    (size_t  num_bytes);malloc41,1019
   void *(*calloc)    (size_t  n_members,calloc42,1062
   void *(*realloc)   (void   *mem,realloc44,1147
   void  (*free)      (void   *mem);free46,1226
   void *padding [4];padding47,1263
} bson_mem_vtable_t;bson_mem_vtable_t48,1285

mongo/bson/bson-version-functions.c,297
bson_get_major_version (void)bson_get_major_version28,774
bson_get_minor_version (void)bson_get_minor_version40,953
bson_get_micro_version (void)bson_get_micro_version51,1131
bson_get_version (void)bson_get_version62,1313
bson_check_version (int required_major,bson_check_version74,1491

mongo/bson/bson-version.h.in,470
#define BSON_VERSION_HBSON_VERSION_H24,736
#define BSON_MAJOR_VERSION BSON_MAJOR_VERSION32,862
#define BSON_MINOR_VERSION BSON_MINOR_VERSION40,1015
#define BSON_MICRO_VERSION BSON_MICRO_VERSION48,1168
#define BSON_PRERELEASE_VERSION BSON_PRERELEASE_VERSION56,1337
#define BSON_VERSION BSON_VERSION63,1443
#define BSON_VERSION_S BSON_VERSION_S72,1593
#define BSON_VERSION_HEX BSON_VERSION_HEX81,1753
#define BSON_CHECK_VERSION(BSON_CHECK_VERSION95,2165

mongo/bson/b64_pton.h,766
#define Assert(Assert45,2244
static const char Base64[] =Base6447,2287
static const char Pad64 = '=';Pad6449,2385
static int b64rmap_initialized = 0;b64rmap_initialized119,5813
static uint8_t b64rmap[256];b64rmap120,5849
static const uint8_t b64rmap_special = 0xf0;b64rmap_special122,5879
static const uint8_t b64rmap_end = 0xfd;b64rmap_end123,5924
static const uint8_t b64rmap_space = 0xfe;b64rmap_space124,5965
static const uint8_t b64rmap_invalid = 0xff;b64rmap_invalid125,6008
b64_initialize_rmap ()b64_initialize_rmap132,6164
b64_pton_do(char const *src, uint8_t *target, size_t targsize)b64_pton_do161,6719
b64_pton_len(char const *src)b64_pton_len280,9263
b64_pton(char const *src, uint8_t *target, size_t targsize)b64_pton375,11071

mongo/bson/bson-compat.h,1165
#define BSON_COMPAT_HBSON_COMPAT_H19,619
#  define __USE_MINGW_ANSI_STDIO __USE_MINGW_ANSI_STDIO33,946
#  define _WIN32_WINNT _WIN32_WINNT46,1176
#  define NOMINMAXNOMINMAX49,1232
#   define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN53,1312
#   define _SSIZE_T_DEFINED_SSIZE_T_DEFINED93,1947
    typedef SSIZE_T ssize_t;ssize_t94,1975
    typedef SIZE_T size_t;size_t96,2013
# define PRIi32 PRIi32110,2364
# define PRId32 PRId32111,2384
# define PRIu32 PRIu32112,2404
# define PRIi64 PRIi64113,2424
# define PRId64 PRId64114,2447
# define PRIu64 PRIu64115,2470
# define INIT_ONCE_STATIC_INIT INIT_ONCE_STATIC_INIT122,2617
typedef RTL_RUN_ONCE INIT_ONCE;INIT_ONCE123,2666
#  define false false131,2851
#  define true true132,2869
# define __bool_true_false_are_defined __bool_true_false_are_defined134,2894
#  define bson_sync_synchronize(bson_sync_synchronize140,3028
#  define bson_sync_synchronize(bson_sync_synchronize143,3215
#  define bson_sync_synchronize(bson_sync_synchronize145,3290
# define bson_sync_synchronize(bson_sync_synchronize148,3388
# define va_copy(va_copy153,3489
# define va_copy(va_copy158,3599

mongo/bson/bson-macros.h,3638
#define BSON_MACROS_HBSON_MACROS_H19,619
# define BSON_OS_UNIXBSON_OS_UNIX38,895
# define BSON_OS_WIN32BSON_OS_WIN3240,936
#  define BSON_BEGIN_DECLS BSON_BEGIN_DECLS47,1029
#  define BSON_END_DECLS BSON_END_DECLS48,1069
#  define BSON_BEGIN_DECLSBSON_BEGIN_DECLS50,1104
#  define BSON_END_DECLSBSON_END_DECLS51,1131
#define BSON_GNUC_CHECK_VERSION(BSON_GNUC_CHECK_VERSION55,1165
#define BSON_GNUC_IS_VERSION(BSON_GNUC_IS_VERSION62,1347
#    define BSON_API BSON_API70,1530
#    define BSON_API BSON_API72,1581
#  define BSON_APIBSON_API75,1639
#  define BSON_MIN BSON_MIN80,1678
#  define BSON_MIN(BSON_MIN82,1728
#  define BSON_MIN(BSON_MIN84,1798
#  define BSON_MIN(BSON_MIN86,1853
#  define BSON_MAX BSON_MAX91,1923
#  define BSON_MAX(BSON_MAX93,1973
#  define BSON_MAX(BSON_MAX95,2043
#  define BSON_MAX(BSON_MAX97,2098
#  define BSON_ABS BSON_ABS102,2169
#  define BSON_ABS(BSON_ABS104,2198
#    define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR109,2291
#    define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR111,2331
#  define BSON_ALIGN_OF_PTR BSON_ALIGN_OF_PTR114,2378
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN119,2479
#    define BSON_ALIGNED_END(BSON_ALIGNED_END120,2538
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN122,2579
#    define BSON_ALIGNED_END(BSON_ALIGNED_END123,2614
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN127,2716
#    define BSON_ALIGNED_END(BSON_ALIGNED_END128,2825
#    define BSON_ALIGNED_BEGIN(BSON_ALIGNED_BEGIN130,2866
#    define BSON_ALIGNED_END(BSON_ALIGNED_END131,2901
#define bson_str_empty(bson_str_empty136,3032
#define bson_str_empty0(bson_str_empty0137,3067
#  define BSON_FUNC BSON_FUNC141,3130
#  define BSON_FUNC BSON_FUNC143,3225
#  define BSON_FUNC BSON_FUNC145,3264
#define BSON_ASSERT(BSON_ASSERT148,3301
#define BSON_STATIC_ASSERT(BSON_STATIC_ASSERT158,3551
#define BSON_STATIC_ASSERT_JOIN(BSON_STATIC_ASSERT_JOIN159,3615
#define BSON_STATIC_ASSERT_JOIN2(BSON_STATIC_ASSERT_JOIN2160,3685
#define BSON_STATIC_ASSERT_(BSON_STATIC_ASSERT_161,3729
#  define BSON_GNUC_CONST BSON_GNUC_CONST167,3918
#  define BSON_GNUC_WARN_UNUSED_RESULT BSON_GNUC_WARN_UNUSED_RESULT168,3967
#  define BSON_GNUC_CONSTBSON_GNUC_CONST170,4048
#  define BSON_GNUC_WARN_UNUSED_RESULTBSON_GNUC_WARN_UNUSED_RESULT171,4074
#  define BSON_GNUC_NULL_TERMINATED BSON_GNUC_NULL_TERMINATED176,4176
#  define BSON_GNUC_INTERNAL BSON_GNUC_INTERNAL177,4238
#  define BSON_GNUC_NULL_TERMINATEDBSON_GNUC_NULL_TERMINATED179,4312
#  define BSON_GNUC_INTERNALBSON_GNUC_INTERNAL180,4348
#  define BSON_LIKELY(BSON_LIKELY185,4408
#  define BSON_UNLIKELY(BSON_UNLIKELY186,4464
#  define BSON_LIKELY(BSON_LIKELY188,4526
#  define BSON_UNLIKELY(BSON_UNLIKELY189,4555
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF194,4616
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF196,4724
#  define BSON_GNUC_PRINTF(BSON_GNUC_PRINTF198,4806
#  define BSON_WORD_SIZE BSON_WORD_SIZE203,4888
#  define BSON_WORD_SIZE BSON_WORD_SIZE205,4922
#  define BSON_INLINE BSON_INLINE210,4981
#  define BSON_INLINE BSON_INLINE212,5018
#  define BSON_ENSURE_ARRAY_PARAM_SIZE(BSON_ENSURE_ARRAY_PARAM_SIZE217,5076
#  define BSON_TYPEOF BSON_TYPEOF218,5119
#  define BSON_ENSURE_ARRAY_PARAM_SIZE(BSON_ENSURE_ARRAY_PARAM_SIZE220,5156
#  define BSON_TYPEOF BSON_TYPEOF221,5211
# define BSON_GNUC_DEPRECATED BSON_GNUC_DEPRECATED226,5283
# define BSON_GNUC_DEPRECATEDBSON_GNUC_DEPRECATED228,5351
# define BSON_GNUC_DEPRECATED_FOR(BSON_GNUC_DEPRECATED_FOR233,5424
# define BSON_GNUC_DEPRECATED_FOR(BSON_GNUC_DEPRECATED_FOR235,5517

mongo/bson/bson-md5.h,288
#define BSON_MD5_HBSON_MD5_H58,2213
{__anonfce18550010873,2413
   uint32_t count[2]; /* message length in bits, lsw first */count74,2415
   uint32_t abcd[4];  /* digest buffer */abcd75,2477
   uint8_t  buf[64];  /* accumulate block */buf76,2519
} bson_md5_t;bson_md5_t77,2564

mongo/bson/bson-timegm.c,5260
#define is_digit(is_digit23,504
#define CHAR_BIT CHAR_BIT26,569
# define ATTRIBUTE_CONST ATTRIBUTE_CONST30,638
# define ATTRIBUTE_PURE ATTRIBUTE_PURE31,687
# define ATTRIBUTE_FORMAT(ATTRIBUTE_FORMAT32,738
# define ATTRIBUTE_CONST ATTRIBUTE_CONST34,810
# define ATTRIBUTE_PURE ATTRIBUTE_PURE35,847
# define ATTRIBUTE_FORMAT(ATTRIBUTE_FORMAT36,883
#  define _Noreturn _Noreturn41,1061
#  define _Noreturn_Noreturn43,1119
# define restrict restrict48,1238
#define TYPE_BIT(TYPE_BIT52,1293
#define TYPE_SIGNED(TYPE_SIGNED56,1395
#define TZ_MAX_TIMES	TZ_MAX_TIMES71,1825
#define TZ_MAX_TYPES	TZ_MAX_TYPES76,1978
#define TZ_MAX_CHARS	TZ_MAX_CHARS80,2109
#define TZ_MAX_LEAPS	TZ_MAX_LEAPS85,2290
#define SECSPERMIN	SECSPERMIN88,2398
#define MINSPERHOUR	MINSPERHOUR89,2420
#define HOURSPERDAY	HOURSPERDAY90,2443
#define DAYSPERWEEK	DAYSPERWEEK91,2466
#define DAYSPERNYEAR	DAYSPERNYEAR92,2488
#define DAYSPERLYEAR	DAYSPERLYEAR93,2513
#define SECSPERHOUR	SECSPERHOUR94,2538
#define SECSPERDAY	SECSPERDAY95,2585
#define MONSPERYEAR	MONSPERYEAR96,2647
#define TM_SUNDAY	TM_SUNDAY98,2671
#define TM_MONDAY	TM_MONDAY99,2691
#define TM_TUESDAY	TM_TUESDAY100,2711
#define TM_WEDNESDAY	TM_WEDNESDAY101,2732
#define TM_THURSDAY	TM_THURSDAY102,2755
#define TM_FRIDAY	TM_FRIDAY103,2777
#define TM_SATURDAY	TM_SATURDAY104,2797
#define TM_JANUARY	TM_JANUARY106,2820
#define TM_FEBRUARY	TM_FEBRUARY107,2841
#define TM_MARCH	TM_MARCH108,2863
#define TM_APRIL	TM_APRIL109,2882
#define TM_MAY	TM_MAY110,2901
#define TM_JUNE	TM_JUNE111,2919
#define TM_JULY	TM_JULY112,2938
#define TM_AUGUST	TM_AUGUST113,2957
#define TM_SEPTEMBER	TM_SEPTEMBER114,2977
#define TM_OCTOBER	TM_OCTOBER115,3000
#define TM_NOVEMBER	TM_NOVEMBER116,3021
#define TM_DECEMBER	TM_DECEMBER117,3044
#define TM_YEAR_BASE	TM_YEAR_BASE119,3068
#define EPOCH_YEAR	EPOCH_YEAR121,3095
#define EPOCH_WDAY	EPOCH_WDAY122,3119
#define isleap(isleap124,3151
#define isleap_sum(isleap_sum138,3614
#define TZ_ABBR_MAX_LEN	TZ_ABBR_MAX_LEN141,3694
#define TZ_ABBR_CHAR_SET TZ_ABBR_CHAR_SET145,3785
#define TZ_ABBR_ERR_CHAR	TZ_ABBR_ERR_CHAR150,3949
#define WILDABBR	WILDABBR173,5060
static const char	wildabbr[] = WILDABBR;wildabbr177,5130
static const char	gmt[] = "GMT";gmt180,5179
struct ttinfo {				/* time type information */ttinfo182,5213
	int_fast32_t	tt_gmtoff;	/* UT offset in seconds */tt_gmtoff183,5260
	int		tt_isdst;	/* used to set tm_isdst */tt_isdst184,5312
	int		tt_abbrind;	/* abbreviation list index */tt_abbrind185,5355
	int		tt_ttisstd;	/* true if transition is std time */tt_ttisstd186,5403
	int		tt_ttisgmt;	/* true if transition is UT */tt_ttisgmt187,5458
struct lsinfo {				/* leap second information */lsinfo190,5511
	time_t		ls_trans;	/* transition time */ls_trans191,5560
	int_fast64_t	ls_corr;	/* correction to apply */ls_corr192,5601
#define BIGGEST(BIGGEST195,5654
#define MY_TZNAME_MAX	MY_TZNAME_MAX198,5721
#define MY_TZNAME_MAX	MY_TZNAME_MAX201,5805
struct state {state204,5865
	int		leapcnt;leapcnt205,5880
	int		timecnt;timecnt206,5895
	int		typecnt;typecnt207,5910
	int		charcnt;charcnt208,5925
	int		goback;goback209,5940
	int		goahead;goahead210,5954
	time_t		ats[TZ_MAX_TIMES];ats211,5969
	unsigned char	types[TZ_MAX_TIMES];types212,5997
	struct ttinfo	ttis[TZ_MAX_TYPES];ttis213,6033
	char		chars[BIGGEST(BIGGEST(TZ_MAX_CHARS + 1, sizeof gmt),chars214,6068
	struct lsinfo	lsis[TZ_MAX_LEAPS];lsis216,6161
	int		defaulttype; /* for early times or if no transitions */defaulttype217,6196
struct rule {rule220,6262
	int		r_type;		/* type of rule--see below */r_type221,6276
	int		r_day;		/* day number of rule */r_day222,6321
	int		r_week;		/* week number of rule */r_week223,6360
	int		r_mon;		/* month number of rule */r_mon224,6401
	int_fast32_t	r_time;		/* transition time of rule */r_time225,6442
#define JULIAN_DAY	JULIAN_DAY228,6499
#define DAY_OF_YEAR	DAY_OF_YEAR229,6543
#define MONTH_NTH_DAY_OF_WEEK	MONTH_NTH_DAY_OF_WEEK230,6588
static struct state	gmtmem;gmtmem263,7823
#define gmtptr	gmtptr264,7851
static int		gmt_is_set;gmt_is_set266,7878
static const int	mon_lengths[2][MONSPERYEAR] = {mon_lengths268,7903
static const int	year_lengths[2] = {year_lengths273,8061
gmtload(struct state *const sp)gmtload278,8142
gmtsub(const time_t *const timep, const int_fast32_t offset,gmtsub293,8412
leaps_thru_end_of(register const int y)leaps_thru_end_of321,9122
timesub(const time_t *const timep, const int_fast32_t offset,timesub328,9273
#define WRONG	WRONG465,12771
increment_overflow(int *const ip, int j)increment_overflow473,12878
increment_overflow32(int_fast32_t *const lp, int const m)increment_overflow32490,13327
normalize_overflow(int *const tensptr, int *const unitsptr, const int base)normalize_overflow501,13550
normalize_overflow32(int_fast32_t *const tensptr, int *const unitsptr,normalize_overflow32513,13837
tmcomp(register const struct tm *const atmp,tmcomp526,14144
time2sub(struct tm *const tmp,time2sub542,14628
time2(struct tm * const	tmp,time2717,18919
time1(struct tm *const tmp,time1734,19404
_bson_timegm(struct tm *const tmp)_bson_timegm806,21267

mongo/bson/bson-utf8.c,474
_bson_utf8_get_sequence (const char *utf8,       /* IN */_bson_utf8_get_sequence45,1230
bson_utf8_validate (const char *utf8,       /* IN */bson_utf8_validate118,3170
bson_utf8_escape_for_json (const char *utf8,     /* IN */bson_utf8_escape_for_json264,6821
bson_utf8_get_char (const char *utf8) /* IN */bson_utf8_get_char355,8892
bson_utf8_next_char (const char *utf8) /* IN */bson_utf8_next_char396,9676
bson_utf8_from_unichar (bson_utf8_from_unichar433,10483

mongo/bson/bson-reader.c,3082
{__anon7b131578010335,869
   BSON_READER_HANDLE = 1,BSON_READER_HANDLE36,871
   BSON_READER_DATA = 2,BSON_READER_DATA37,898
} bson_reader_type_t;bson_reader_type_t38,923
{__anon7b131578020842,962
   bson_reader_type_t         type;type43,964
   void                      *handle;handle44,1000
   bool                       done   : 1;done45,1038
   bool                       failed : 1;failed46,1080
   size_t                     end;end47,1122
   size_t                     len;len48,1157
   size_t                     offset;offset49,1192
   size_t                     bytes_read;bytes_read50,1230
   bson_t                     inline_bson;inline_bson51,1272
   uint8_t                   *data;data52,1315
   bson_reader_read_func_t    read_func;read_func53,1351
   bson_reader_destroy_func_t destroy_func;destroy_func54,1392
} bson_reader_handle_t;bson_reader_handle_t55,1436
{__anon7b131578030859,1477
   int fd;fd60,1479
   bool do_close;do_close61,1490
} bson_reader_handle_fd_t;bson_reader_handle_fd_t62,1508
{__anon7b131578040866,1552
   bson_reader_type_t type;type67,1554
   const uint8_t     *data;data68,1582
   size_t             length;length69,1610
   size_t             offset;offset70,1640
   bson_t             inline_bson;inline_bson71,1670
} bson_reader_data_t;bson_reader_data_t72,1705
_bson_reader_handle_fill_buffer (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_fill_buffer94,2177
bson_reader_new_from_handle (void                       *handle,bson_reader_new_from_handle167,3988
_bson_reader_handle_fd_destroy (void *handle) /* IN */_bson_reader_handle_fd_destroy213,5043
_bson_reader_handle_fd_read (void   *handle, /* IN */_bson_reader_handle_fd_read253,5895
bson_reader_new_from_fd (int  fd,               /* IN */bson_reader_new_from_fd298,6969
bson_reader_set_read_func (bson_reader_t          *reader, /* IN */bson_reader_set_read_func342,8063
bson_reader_set_destroy_func (bson_reader_t             *reader, /* IN */bson_reader_set_destroy_func373,8804
_bson_reader_handle_grow_buffer (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_grow_buffer401,9444
_bson_reader_handle_tell (bson_reader_handle_t *reader) /* IN */_bson_reader_handle_tell428,10030
_bson_reader_handle_read (bson_reader_handle_t *reader,      /* IN */_bson_reader_handle_read461,10805
bson_reader_new_from_data (const uint8_t *data,   /* IN */bson_reader_new_from_data534,12554
_bson_reader_data_read (bson_reader_data_t *reader,      /* IN */_bson_reader_data_read569,13352
_bson_reader_data_tell (bson_reader_data_t *reader) /* IN */_bson_reader_data_tell625,14566
bson_reader_destroy (bson_reader_t *reader) /* IN */bson_reader_destroy649,15078
bson_reader_read (bson_reader_t *reader,      /* IN */bson_reader_read710,16682
bson_reader_tell (bson_reader_t *reader) /* IN */bson_reader_tell749,17633
bson_reader_new_from_file (const char   *path,  /* IN */bson_reader_new_from_file787,18600
bson_reader_reset (bson_reader_t *reader)bson_reader_reset829,19617

mongo/bson/bson-clock.c,206
bson_gettimeofday (struct timeval *tv) /* OUT */bson_gettimeofday55,1246
#  define DELTA_EPOCH_IN_MICROSEC DELTA_EPOCH_IN_MICROSEC59,1340
bson_get_monotonic_time (void)bson_get_monotonic_time120,2813

mongo/bson/bson-value.h,41
#define BSON_VALUE_HBSON_VALUE_H19,618

mongo/stdafx.h,0

mongo/mongoc/mongoc-log.h,950
#define MONGOC_LOG_HMONGOC_LOG_H18,617
# define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN31,826
#define MONGOC_ERROR(MONGOC_ERROR35,871
#define MONGOC_CRITICAL(MONGOC_CRITICAL36,970
#define MONGOC_WARNING(MONGOC_WARNING37,1069
#define MONGOC_MESSAGE(MONGOC_MESSAGE38,1168
#define MONGOC_INFO(MONGOC_INFO39,1267
#define MONGOC_DEBUG(MONGOC_DEBUG40,1366
{__anon4b93d42e010344,1480
   MONGOC_LOG_LEVEL_ERROR,MONGOC_LOG_LEVEL_ERROR45,1482
   MONGOC_LOG_LEVEL_CRITICAL,MONGOC_LOG_LEVEL_CRITICAL46,1509
   MONGOC_LOG_LEVEL_WARNING,MONGOC_LOG_LEVEL_WARNING47,1539
   MONGOC_LOG_LEVEL_MESSAGE,MONGOC_LOG_LEVEL_MESSAGE48,1568
   MONGOC_LOG_LEVEL_INFO,MONGOC_LOG_LEVEL_INFO49,1597
   MONGOC_LOG_LEVEL_DEBUG,MONGOC_LOG_LEVEL_DEBUG50,1623
   MONGOC_LOG_LEVEL_TRACE,MONGOC_LOG_LEVEL_TRACE51,1650
} mongoc_log_level_t;mongoc_log_level_t52,1677
typedef void (*mongoc_log_func_t) (mongoc_log_level_t  log_level,mongoc_log_func_t66,2131

mongo/mongoc/indent,0

mongo/mongoc/mongoc-cursor-array-private.h,75
#define MONGOC_CURSOR_ARRAY_PRIVATE_HMONGOC_CURSOR_ARRAY_PRIVATE_H18,634

mongo/mongoc/mongoc-crypto-openssl-private.h,79
#define MONGOC_CRYPTO_OPENSSL_PRIVATE_HMONGOC_CRYPTO_OPENSSL_PRIVATE_H28,843

mongo/mongoc/op-kill-cursors.def,0

mongo/mongoc/uncrustify.cfg,0

mongo/mongoc/mongoc-stream-socket.h,154
#define MONGOC_STREAM_SOCKET_HMONGOC_STREAM_SOCKET_H18,627
typedef struct _mongoc_stream_socket_t mongoc_stream_socket_t;mongoc_stream_socket_t31,856

mongo/mongoc/mongoc-apm.h,855
#define MONGOC_APM_HMONGOC_APM_H18,617
typedef struct _mongoc_apm_callbacks_t mongoc_apm_callbacks_t;mongoc_apm_callbacks_t40,1076
typedef struct _mongoc_apm_command_started_t   mongoc_apm_command_started_t;mongoc_apm_command_started_t47,1198
typedef struct _mongoc_apm_command_succeeded_t mongoc_apm_command_succeeded_t;mongoc_apm_command_succeeded_t48,1275
typedef struct _mongoc_apm_command_failed_t    mongoc_apm_command_failed_t;mongoc_apm_command_failed_t49,1354
(*mongoc_apm_command_started_cb_t)   (const mongoc_apm_command_started_t   *event);mongoc_apm_command_started_cb_t120,4224
(*mongoc_apm_command_succeeded_cb_t) (const mongoc_apm_command_succeeded_t *event);mongoc_apm_command_succeeded_cb_t122,4321
(*mongoc_apm_command_failed_cb_t)    (const mongoc_apm_command_failed_t    *event);mongoc_apm_command_failed_cb_t124,4418

mongo/mongoc/mongoc-sasl-private.h,621
#define MONGOC_SASL_PRIVATE_HMONGOC_SASL_PRIVATE_H18,626
typedef struct _mongoc_sasl_t mongoc_sasl_t;mongoc_sasl_t32,874
struct _mongoc_sasl_t_mongoc_sasl_t35,921
   sasl_callback_t  callbacks [4];callbacks37,945
   sasl_conn_t     *conn;conn38,980
   bool             done;done39,1006
   int              step;step40,1032
   char            *mechanism;mechanism41,1058
   char            *user;user42,1089
   char            *pass;pass43,1115
   char            *service_name;service_name44,1141
   char            *service_host;service_host45,1175
   sasl_interact_t *interact;interact46,1209

mongo/mongoc/mongoc-find-and-modify.h,603
#define MONGOC_FIND_AND_MODIFY_HMONGOC_FIND_AND_MODIFY_H18,629
{__anonf9c30222010329,835
   MONGOC_FIND_AND_MODIFY_NONE   = 0,MONGOC_FIND_AND_MODIFY_NONE30,837
   MONGOC_FIND_AND_MODIFY_REMOVE = 1 << 0,MONGOC_FIND_AND_MODIFY_REMOVE31,875
   MONGOC_FIND_AND_MODIFY_UPSERT = 1 << 1,MONGOC_FIND_AND_MODIFY_UPSERT32,918
   MONGOC_FIND_AND_MODIFY_RETURN_NEW = 1 << 2,MONGOC_FIND_AND_MODIFY_RETURN_NEW33,961
} mongoc_find_and_modify_flags_t;mongoc_find_and_modify_flags_t34,1008
typedef struct _mongoc_find_and_modify_opts_t mongoc_find_and_modify_opts_t ;mongoc_find_and_modify_opts_t36,1043

mongo/mongoc/mongoc-topology.c,1677
_mongoc_topology_reconcile_add_nodes (void *item,_mongoc_topology_reconcile_add_nodes34,1001
mongoc_topology_reconcile (mongoc_topology_t *topology) {mongoc_topology_reconcile53,1679
_mongoc_topology_scanner_cb (uint32_t      id,_mongoc_topology_scanner_cb87,2720
mongoc_topology_new (const mongoc_uri_t *uri,mongoc_topology_new147,4532
mongoc_topology_destroy (mongoc_topology_t *topology)mongoc_topology_destroy262,8528
_mongoc_topology_run_scanner (mongoc_topology_t *topology,_mongoc_topology_run_scanner296,9505
_mongoc_topology_do_blocking_scan (mongoc_topology_t *topology, bson_error_t *error) {_mongoc_topology_do_blocking_scan329,10430
mongoc_topology_select (mongoc_topology_t         *topology,mongoc_topology_select374,12058
mongoc_topology_server_by_id (mongoc_topology_t *topology,mongoc_topology_server_by_id564,19131
mongoc_topology_get_server_type (mongoc_topology_get_server_type603,20223
_mongoc_topology_request_scan (mongoc_topology_t *topology)_mongoc_topology_request_scan645,21265
mongoc_topology_request_scan (mongoc_topology_t *topology)mongoc_topology_request_scan665,21770
mongoc_topology_invalidate_server (mongoc_topology_t  *topology,mongoc_topology_invalidate_server687,22340
mongoc_topology_server_timestamp (mongoc_topology_t *topology,mongoc_topology_server_timestamp713,23197
void * _mongoc_topology_run_background (void *data)_mongoc_topology_run_background743,23961
_mongoc_topology_background_thread_start (mongoc_topology_t *topology)_mongoc_topology_background_thread_start853,27400
_mongoc_topology_background_thread_stop (mongoc_topology_t *topology)_mongoc_topology_background_thread_stop886,28321

mongo/mongoc/mongoc-bulk-operation.c,2218
mongoc_bulk_operation_new (bool ordered)mongoc_bulk_operation_new46,1563
_mongoc_bulk_operation_new (mongoc_client_t              *client,        /* IN */_mongoc_bulk_operation_new62,1974
mongoc_bulk_operation_destroy (mongoc_bulk_operation_t *bulk) /* IN */mongoc_bulk_operation_destroy87,2848
mongoc_bulk_operation_remove (mongoc_bulk_operation_t *bulk,     /* IN */mongoc_bulk_operation_remove114,3524
mongoc_bulk_operation_remove_one (mongoc_bulk_operation_t *bulk,     /* IN */mongoc_bulk_operation_remove_one146,4409
mongoc_bulk_operation_delete (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_delete178,5304
mongoc_bulk_operation_delete_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_delete_one190,5512
mongoc_bulk_operation_insert (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_insert202,5732
mongoc_bulk_operation_replace_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_replace_one235,6589
mongoc_bulk_operation_update (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_update277,7973
mongoc_bulk_operation_update_one (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_update_one321,9330
mongoc_bulk_operation_execute (mongoc_bulk_operation_t *bulk,  /* IN */mongoc_bulk_operation_execute364,10689
mongoc_bulk_operation_set_write_concern (mongoc_bulk_operation_t      *bulk,mongoc_bulk_operation_set_write_concern463,13765
mongoc_bulk_operation_get_write_concern (const mongoc_bulk_operation_t *bulk)mongoc_bulk_operation_get_write_concern480,14251
mongoc_bulk_operation_set_database (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_database489,14395
mongoc_bulk_operation_set_collection (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_collection503,14677
mongoc_bulk_operation_set_client (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_client517,14973
mongoc_bulk_operation_get_hint (const mongoc_bulk_operation_t *bulk)mongoc_bulk_operation_get_hint527,15189
mongoc_bulk_operation_set_hint (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_hint536,15320
mongoc_bulk_operation_set_bypass_document_validation (mongoc_bulk_operation_t *bulk,mongoc_bulk_operation_set_bypass_document_validation546,15518

mongo/mongoc/mongoc-find-and-modify-private.h,680
#define MONGOC_FIND_AND_MODIFY_PRIVATE_HMONGOC_FIND_AND_MODIFY_PRIVATE_H18,637
struct _mongoc_find_and_modify_opts_t_mongoc_find_and_modify_opts_t29,880
   bson_t                                    *sort;sort31,920
   bson_t                                    *update;update32,972
   bson_t                                    *fields;fields33,1026
   mongoc_find_and_modify_flags_t             flags;flags34,1080
   mongoc_write_bypass_document_validation_t  bypass_document_validation;bypass_document_validation35,1133
   uint32_t                                   max_time_ms;max_time_ms36,1207
   bson_t                                     extra;extra37,1266

mongo/mongoc/mongoc-async-cmd-private.h,1850
#define MONGOC_ASYNC_CMD_PRIVATE_HMONGOC_ASYNC_CMD_PRIVATE_H18,631
{__anonf8374373010336,1035
   MONGOC_ASYNC_CMD_SETUP,MONGOC_ASYNC_CMD_SETUP37,1037
   MONGOC_ASYNC_CMD_SEND,MONGOC_ASYNC_CMD_SEND38,1064
   MONGOC_ASYNC_CMD_RECV_LEN,MONGOC_ASYNC_CMD_RECV_LEN39,1090
   MONGOC_ASYNC_CMD_RECV_RPC,MONGOC_ASYNC_CMD_RECV_RPC40,1120
   MONGOC_ASYNC_CMD_ERROR_STATE,MONGOC_ASYNC_CMD_ERROR_STATE41,1150
   MONGOC_ASYNC_CMD_CANCELED_STATE,MONGOC_ASYNC_CMD_CANCELED_STATE42,1183
} mongoc_async_cmd_state_t;mongoc_async_cmd_state_t43,1219
typedef struct _mongoc_async_cmd_mongoc_async_cmd45,1248
   mongoc_stream_t *stream;stream47,1283
   mongoc_async_t          *async;async49,1312
   mongoc_async_cmd_state_t state;state50,1347
   int                      events;events51,1382
   mongoc_async_cmd_setup_t setup;setup52,1418
   void                    *setup_ctx;setup_ctx53,1453
   mongoc_async_cmd_cb_t    cb;cb54,1492
   void                    *data;data55,1524
   bson_error_t             error;error56,1558
   int64_t                  start_time;start_time57,1593
   int64_t                  expire_at;expire_at58,1633
   bson_t                   cmd;cmd59,1672
   mongoc_buffer_t          buffer;buffer60,1705
   mongoc_array_t           array;array61,1741
   mongoc_iovec_t          *iovec;iovec62,1776
   size_t                   niovec;niovec63,1811
   size_t                   bytes_to_read;bytes_to_read64,1847
   mongoc_rpc_t             rpc;rpc65,1890
   bson_t                   reply;reply66,1923
   bool                     reply_needs_cleanup;reply_needs_cleanup67,1958
   char                     ns[MONGOC_NAMESPACE_MAX];ns68,2007
   struct _mongoc_async_cmd *next;next70,2062
   struct _mongoc_async_cmd *prev;prev71,2097
} mongoc_async_cmd_t;mongoc_async_cmd_t72,2132

mongo/mongoc/mongoc-scram-private.h,835
#define MONGOC_SCRAM_PRIVATE_HMONGOC_SCRAM_PRIVATE_H24,757
#define MONGOC_SCRAM_HASH_SIZE MONGOC_SCRAM_HASH_SIZE33,863
typedef struct _mongoc_scram_t_mongoc_scram_t35,898
   bool                done;done37,931
   int                 step;step38,960
   char               *user;user39,989
   char               *pass;pass40,1018
   uint8_t             salted_password[MONGOC_SCRAM_HASH_SIZE];salted_password41,1047
   char                encoded_nonce[48];encoded_nonce42,1111
   int32_t             encoded_nonce_len;encoded_nonce_len43,1153
   uint8_t            *auth_message;auth_message44,1195
   uint32_t            auth_messagemax;auth_messagemax45,1232
   uint32_t            auth_messagelen;auth_messagelen46,1272
   mongoc_crypto_t     crypto;crypto48,1340
} mongoc_scram_t;mongoc_scram_t50,1378

mongo/mongoc/mongoc-ssl.h,473
#define MONGOC_SSL_HMONGOC_SSL_H18,617
typedef struct _mongoc_ssl_opt_t mongoc_ssl_opt_t;mongoc_ssl_opt_t30,800
struct _mongoc_ssl_opt_t_mongoc_ssl_opt_t33,853
   const char *pem_file;pem_file35,880
   const char *pem_pwd;pem_pwd36,905
   const char *ca_file;ca_file37,929
   const char *ca_dir;ca_dir38,953
   const char *crl_file;crl_file39,976
   bool        weak_cert_validation;weak_cert_validation40,1001
   void       *padding [8];padding41,1038

mongo/mongoc/utlist.h,3789
#define UTLIST_HUTLIST_H25,1163
#define UTLIST_VERSION UTLIST_VERSION27,1181
#define LDECLTYPE(LDECLTYPE68,2657
#define NO_DECLTYPENO_DECLTYPE70,2760
#define LDECLTYPE(LDECLTYPE71,2780
#define NO_DECLTYPENO_DECLTYPE74,2840
#define LDECLTYPE(LDECLTYPE75,2860
#define LDECLTYPE(LDECLTYPE77,2949
#define _SV(_SV84,3234
#define _NEXT(_NEXT85,3331
#define _NEXTASGN(_NEXTASGN86,3384
#define _PREVASGN(_PREVASGN88,3545
#define _RS(_RS89,3647
#define _CASTASGN(_CASTASGN90,3716
#define _SV(_SV92,3799
#define _NEXT(_NEXT93,3821
#define _NEXTASGN(_NEXTASGN94,3864
#define _PREVASGN(_PREVASGN96,3968
#define _RS(_RS97,4023
#define _CASTASGN(_CASTASGN98,4041
#define LL_SORT(LL_SORT105,4400
#define LL_SORT2(LL_SORT2108,4528
#define DL_SORT(DL_SORT168,10071
#define DL_SORT2(DL_SORT2171,10205
#define CDL_SORT(CDL_SORT230,15747
#define CDL_SORT2(CDL_SORT2233,15882
#define LL_PREPEND(LL_PREPEND309,23022
#define LL_PREPEND2(LL_PREPEND2312,23151
#define LL_CONCAT(LL_CONCAT318,23552
#define LL_CONCAT2(LL_CONCAT2321,23683
#define LL_APPEND(LL_APPEND333,24666
#define LL_APPEND2(LL_APPEND2336,24794
#define LL_DELETE(LL_DELETE349,25874
#define LL_DELETE2(LL_DELETE2352,26002
#define LL_APPEND_VS2008(LL_APPEND_VS2008369,27436
#define LL_APPEND2_VS2008(LL_APPEND2_VS2008372,27571
#define LL_DELETE_VS2008(LL_DELETE_VS2008384,28554
#define LL_DELETE2_VS2008(LL_DELETE2_VS2008387,28689
#define LL_APPEND LL_APPEND407,30386
#define LL_DELETE LL_DELETE409,30438
#define LL_DELETE2 LL_DELETE2411,30491
#define LL_APPEND2 LL_APPEND2413,30546
#define LL_COUNT(LL_COUNT419,30707
#define LL_COUNT2(LL_COUNT2422,30902
#define LL_FOREACH(LL_FOREACH428,31293
#define LL_FOREACH2(LL_FOREACH2431,31421
#define LL_FOREACH_SAFE(LL_FOREACH_SAFE434,31553
#define LL_FOREACH_SAFE2(LL_FOREACH_SAFE2437,31690
#define LL_SEARCH_SCALAR(LL_SEARCH_SCALAR440,31849
#define LL_SEARCH_SCALAR2(LL_SEARCH_SCALAR2443,31994
#define LL_SEARCH(LL_SEARCH450,32491
#define LL_SEARCH2(LL_SEARCH2453,32627
#define LL_REPLACE_ELEM(LL_REPLACE_ELEM460,33124
#define LL_PREPEND_ELEM(LL_PREPEND_ELEM480,34883
#define DL_PREPEND(DL_PREPEND504,36968
#define DL_PREPEND2(DL_PREPEND2507,37102
#define DL_APPEND(DL_APPEND519,38085
#define DL_APPEND2(DL_APPEND2522,38218
#define DL_CONCAT(DL_CONCAT536,39395
#define DL_CONCAT2(DL_CONCAT2539,39531
#define DL_DELETE(DL_DELETE554,40805
#define DL_DELETE2(DL_DELETE2557,40938
#define DL_COUNT(DL_COUNT575,42503
#define DL_COUNT2(DL_COUNT2578,42698
#define DL_FOREACH(DL_FOREACH584,43089
#define DL_FOREACH2(DL_FOREACH2587,43217
#define DL_FOREACH_SAFE(DL_FOREACH_SAFE591,43419
#define DL_FOREACH_SAFE2(DL_FOREACH_SAFE2594,43556
#define DL_SEARCH_SCALAR DL_SEARCH_SCALAR598,43782
#define DL_SEARCH DL_SEARCH599,43824
#define DL_SEARCH_SCALAR2 DL_SEARCH_SCALAR2600,43852
#define DL_SEARCH2 DL_SEARCH2601,43896
#define DL_REPLACE_ELEM(DL_REPLACE_ELEM603,43927
#define DL_PREPEND_ELEM(DL_PREPEND_ELEM629,46268
#define CDL_PREPEND(CDL_PREPEND648,47868
#define CDL_PREPEND2(CDL_PREPEND2651,48003
#define CDL_DELETE(CDL_DELETE665,49180
#define CDL_DELETE2(CDL_DELETE2668,49314
#define CDL_COUNT(CDL_COUNT679,50200
#define CDL_COUNT2(CDL_COUNT2682,50395
#define CDL_FOREACH(CDL_FOREACH688,50786
#define CDL_FOREACH2(CDL_FOREACH2691,50915
#define CDL_FOREACH_SAFE(CDL_FOREACH_SAFE694,51073
#define CDL_FOREACH_SAFE2(CDL_FOREACH_SAFE2697,51222
#define CDL_SEARCH_SCALAR(CDL_SEARCH_SCALAR702,51561
#define CDL_SEARCH_SCALAR2(CDL_SEARCH_SCALAR2705,51707
#define CDL_SEARCH(CDL_SEARCH712,52204
#define CDL_SEARCH2(CDL_SEARCH2715,52341
#define CDL_REPLACE_ELEM(CDL_REPLACE_ELEM722,52838
#define CDL_PREPEND_ELEM(CDL_PREPEND_ELEM742,54597

mongo/mongoc/mongoc-opcode.h,657
#define MONGOC_OPCODE_HMONGOC_OPCODE_H18,620
{__anon880f6186010331,819
   MONGOC_OPCODE_REPLY         = 1,MONGOC_OPCODE_REPLY32,821
   MONGOC_OPCODE_MSG           = 1000,MONGOC_OPCODE_MSG33,857
   MONGOC_OPCODE_UPDATE        = 2001,MONGOC_OPCODE_UPDATE34,896
   MONGOC_OPCODE_INSERT        = 2002,MONGOC_OPCODE_INSERT35,935
   MONGOC_OPCODE_QUERY         = 2004,MONGOC_OPCODE_QUERY36,974
   MONGOC_OPCODE_GET_MORE      = 2005,MONGOC_OPCODE_GET_MORE37,1013
   MONGOC_OPCODE_DELETE        = 2006,MONGOC_OPCODE_DELETE38,1052
   MONGOC_OPCODE_KILL_CURSORS  = 2007,MONGOC_OPCODE_KILL_CURSORS39,1091
} mongoc_opcode_t;mongoc_opcode_t40,1130

mongo/mongoc/mongoc-write-concern.h,568
#define MONGOC_WRITE_CONCERN_HMONGOC_WRITE_CONCERN_H18,627
#define MONGOC_WRITE_CONCERN_W_UNACKNOWLEDGED MONGOC_WRITE_CONCERN_W_UNACKNOWLEDGED30,820
#define MONGOC_WRITE_CONCERN_W_ERRORS_IGNORED MONGOC_WRITE_CONCERN_W_ERRORS_IGNORED31,869
#define MONGOC_WRITE_CONCERN_W_DEFAULT MONGOC_WRITE_CONCERN_W_DEFAULT32,936
#define MONGOC_WRITE_CONCERN_W_MAJORITY MONGOC_WRITE_CONCERN_W_MAJORITY33,985
#define MONGOC_WRITE_CONCERN_W_TAG MONGOC_WRITE_CONCERN_W_TAG34,1034
typedef struct _mongoc_write_concern_t mongoc_write_concern_t;mongoc_write_concern_t37,1085

mongo/mongoc/mongoc-gridfs.h,119
#define MONGOC_GRIDFS_HMONGOC_GRIDFS_H18,619
typedef struct _mongoc_gridfs_t mongoc_gridfs_t;mongoc_gridfs_t35,933

mongo/mongoc/mongoc-crypto-common-crypto-private.h,91
#define MONGOC_CRYPTO_COMMON_CRYPTO_PRIVATE_HMONGOC_CRYPTO_COMMON_CRYPTO_PRIVATE_H25,807

mongo/mongoc/mongoc-bulk-operation-private.h,762
#define MONGOC_BULK_OPERATION_PRIVATE_HMONGOC_BULK_OPERATION_PRIVATE_H18,636
struct _mongoc_bulk_operation_t_mongoc_bulk_operation_t31,928
   char                          *database;database33,962
   char                          *collection;collection34,1006
   mongoc_client_t               *client;client35,1052
   mongoc_write_concern_t        *write_concern;write_concern36,1094
   mongoc_bulk_write_flags_t      flags;flags37,1143
   uint32_t                       server_id;server_id38,1184
   mongoc_array_t                 commands;commands39,1229
   mongoc_write_result_t          result;result40,1273
   bool                           executed;executed41,1315
   int64_t                        operation_id;operation_id42,1359

mongo/mongoc/mongoc-socket.h,333
#define MONGOC_SOCKET_HMONGOC_SOCKET_H18,620
typedef struct _mongoc_socket_t mongoc_socket_t;mongoc_socket_t47,1113
{__anonebd4e275010850,1178
   mongoc_socket_t *socket;socket51,1180
   int              events;events52,1208
   int              revents;revents53,1236
} mongoc_socket_poll_t;mongoc_socket_poll_t54,1265

mongo/mongoc/mongoc-read-prefs.c,1259
mongoc_read_prefs_new (mongoc_read_mode_t mode)mongoc_read_prefs_new23,686
mongoc_read_prefs_get_mode (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_get_mode36,953
mongoc_read_prefs_set_mode (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_set_mode43,1094
mongoc_read_prefs_get_tags (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_get_tags54,1335
mongoc_read_prefs_set_tags (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_set_tags62,1471
mongoc_read_prefs_add_tag (mongoc_read_prefs_t *read_prefs,mongoc_read_prefs_add_tag78,1778
mongoc_read_prefs_is_valid (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_is_valid99,2250
mongoc_read_prefs_destroy (mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_destroy117,2566
mongoc_read_prefs_copy (const mongoc_read_prefs_t *read_prefs)mongoc_read_prefs_copy127,2748
_get_read_mode_string (mongoc_read_mode_t mode)_get_read_mode_string141,3020
_apply_read_preferences_mongos (const mongoc_read_prefs_t *read_prefs,_apply_read_preferences_mongos164,3584
apply_read_preferences (const mongoc_read_prefs_t *read_prefs,apply_read_preferences246,6422
apply_read_prefs_result_cleanup (mongoc_apply_read_prefs_result_t *result)apply_read_prefs_result_cleanup312,8532

mongo/mongoc/op-reply.def,0

mongo/mongoc/mongoc-host-list.h,580
#define MONGOC_HOST_LIST_HMONGOC_HOST_LIST_H18,623
#  define BSON_HOST_NAME_MAX BSON_HOST_NAME_MAX32,863
typedef struct _mongoc_host_list_t mongoc_host_list_t;mongoc_host_list_t41,1018
struct _mongoc_host_list_t_mongoc_host_list_t44,1075
   mongoc_host_list_t *next;next46,1104
   char                host [BSON_HOST_NAME_MAX + 1];host47,1133
   char                host_and_port [BSON_HOST_NAME_MAX + 7];host_and_port48,1187
   uint16_t            port;port49,1250
   int                 family;family50,1279
   void               *padding [4];padding51,1310

mongo/mongoc/mongoc-rand.h,43
#define MONGOC_RAND_HMONGOC_RAND_H24,741

mongo/mongoc/mongoc-rand-common-crypto.c,384
int _mongoc_rand_bytes(uint8_t *buf, int num) {_mongoc_rand_bytes29,867
int _mongoc_pseudo_rand_bytes(uint8_t *buf, int num) {_mongoc_pseudo_rand_bytes33,976
void mongoc_rand_seed(const void* buf, int num) {mongoc_rand_seed37,1072
void mongoc_rand_add(const void* buf, int num, double entropy) {mongoc_rand_add41,1163
int mongoc_rand_status(void) {mongoc_rand_status45,1269

mongo/mongoc/mongoc-sasl.c,976
#  define SASL_CALLBACK_FN(SASL_CALLBACK_FN29,791
_mongoc_sasl_set_mechanism (mongoc_sasl_t *sasl,_mongoc_sasl_set_mechanism33,858
_mongoc_sasl_get_pass (mongoc_sasl_t  *sasl,_mongoc_sasl_get_pass44,1099
_mongoc_sasl_set_pass (mongoc_sasl_t *sasl,_mongoc_sasl_set_pass65,1570
_mongoc_sasl_get_user (mongoc_sasl_t  *sasl,_mongoc_sasl_get_user76,1776
_mongoc_sasl_set_user (mongoc_sasl_t *sasl,_mongoc_sasl_set_user97,2283
_mongoc_sasl_set_service_host (mongoc_sasl_t *sasl,_mongoc_sasl_set_service_host108,2483
_mongoc_sasl_set_service_name (mongoc_sasl_t *sasl,_mongoc_sasl_set_service_name119,2739
_mongoc_sasl_init (mongoc_sasl_t *sasl)_mongoc_sasl_init130,2995
_mongoc_sasl_destroy (mongoc_sasl_t *sasl)_mongoc_sasl_destroy158,3677
_mongoc_sasl_is_failure (int           status,_mongoc_sasl_is_failure175,3979
_mongoc_sasl_start (mongoc_sasl_t      *sasl,_mongoc_sasl_start217,5179
_mongoc_sasl_step (mongoc_sasl_t *sasl,_mongoc_sasl_step277,6804

mongo/mongoc/mongoc-openssl-private.h,65
#define MONGOC_OPENSSL_PRIVATE_HMONGOC_OPENSSL_PRIVATE_H18,629

mongo/mongoc/mongoc-scram.c,1302
#define MONGOC_SCRAM_SERVER_KEY MONGOC_SCRAM_SERVER_KEY32,902
#define MONGOC_SCRAM_CLIENT_KEY MONGOC_SCRAM_CLIENT_KEY33,947
#define MONGOC_SCRAM_B64_ENCODED_SIZE(MONGOC_SCRAM_B64_ENCODED_SIZE35,993
#define MONGOC_SCRAM_B64_HASH_SIZE MONGOC_SCRAM_B64_HASH_SIZE37,1043
_mongoc_scram_startup()_mongoc_scram_startup42,1145
_mongoc_scram_set_pass (mongoc_scram_t *scram,_mongoc_scram_set_pass49,1213
_mongoc_scram_set_user (mongoc_scram_t *scram,_mongoc_scram_set_user63,1478
_mongoc_scram_init (mongoc_scram_t *scram)_mongoc_scram_init74,1686
_mongoc_scram_destroy (mongoc_scram_t *scram)_mongoc_scram_destroy85,1843
_mongoc_scram_buf_write (const char *src,_mongoc_scram_buf_write100,2082
_mongoc_scram_start (mongoc_scram_t *scram,_mongoc_scram_start128,2713
_mongoc_scram_salt_password (mongoc_scram_t *scram,_mongoc_scram_salt_password256,6433
_mongoc_scram_generate_client_proof (mongoc_scram_t *scram,_mongoc_scram_generate_client_proof304,7974
_mongoc_scram_step2 (mongoc_scram_t *scram,_mongoc_scram_step2362,9954
_mongoc_scram_verify_server_signature (mongoc_scram_t *scram,_mongoc_scram_verify_server_signature603,16895
_mongoc_scram_step3 (mongoc_scram_t *scram,_mongoc_scram_step3642,18433
_mongoc_scram_step (mongoc_scram_t *scram,_mongoc_scram_step760,21465

mongo/mongoc/mongoc-rpc-private.h,1081
#define MONGOC_RPC_PRIVATE_HMONGOC_RPC_PRIVATE_H18,625
#define RPC(RPC36,963
#define ENUM_FIELD(ENUM_FIELD37,1053
#define INT32_FIELD(INT32_FIELD38,1110
#define INT64_FIELD(INT64_FIELD39,1166
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD40,1222
#define CSTRING_FIELD(CSTRING_FIELD41,1293
#define BSON_FIELD(BSON_FIELD42,1353
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD43,1416
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD44,1500
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD45,1618
#define BSON_OPTIONAL(BSON_OPTIONAL46,1702
{__anona468e4d9010a61,1995
   mongoc_rpc_delete_t       delete_;delete_62,1997
   mongoc_rpc_get_more_t     get_more;get_more63,2035
   mongoc_rpc_header_t       header;header64,2074
   mongoc_rpc_insert_t       insert;insert65,2111
   mongoc_rpc_kill_cursors_t kill_cursors;kill_cursors66,2148
   mongoc_rpc_msg_t          msg;msg67,2191
   mongoc_rpc_query_t        query;query68,2225
   mongoc_rpc_reply_t        reply;reply69,2261
   mongoc_rpc_update_t       update;update70,2297
} mongoc_rpc_t;mongoc_rpc_t71,2334

mongo/mongoc/mongoc-crypto.c,238
mongoc_crypto_init (mongoc_crypto_t *crypto)mongoc_crypto_init30,914
mongoc_crypto_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_hmac_sha142,1266
mongoc_crypto_sha1      (mongoc_crypto_t     *crypto,mongoc_crypto_sha153,1649

mongo/mongoc/mongoc-database-private.h,404
#define MONGOC_DATABASE_PRIVATE_HMONGOC_DATABASE_PRIVATE_H18,630
struct _mongoc_database_t_mongoc_database_t35,958
   mongoc_client_t        *client;client37,986
   char                    name [128];name38,1021
   mongoc_read_prefs_t    *read_prefs;read_prefs39,1060
   mongoc_read_concern_t  *read_concern;read_concern40,1099
   mongoc_write_concern_t *write_concern;write_concern41,1140

mongo/mongoc/mongoc-cursor-transform.c,1021
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,906
{__anonb106b68e010834,968
   mongoc_cursor_transform_filter_t filter;filter35,970
   mongoc_cursor_transform_mutate_t mutate;mutate36,1014
   mongoc_cursor_transform_dtor_t   dtor;dtor37,1058
   void                            *ctx;ctx38,1100
   bson_t                           tmp;tmp39,1141
} mongoc_cursor_transform_t;mongoc_cursor_transform_t40,1182
_mongoc_cursor_transform_new (mongoc_cursor_transform_filter_t filter,_mongoc_cursor_transform_new44,1227
_mongoc_cursor_transform_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_transform_destroy66,1826
_mongoc_cursor_transform_next (mongoc_cursor_t *cursor,_mongoc_cursor_transform_next88,2210
_mongoc_cursor_transform_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_transform_clone125,3052
static mongoc_cursor_interface_t gMongocCursorArray = {gMongocCursorArray142,3479
_mongoc_cursor_transform_init (mongoc_cursor_t                 *cursor,_mongoc_cursor_transform_init151,3660

mongo/mongoc/mongoc-cursor-transform-private.h,687
#define MONGOC_CURSOR_FILTER_PRIVATE_HMONGOC_CURSOR_FILTER_PRIVATE_H18,635
{__anon34fb9adb010332,890
   MONGO_CURSOR_TRANSFORM_DROP,MONGO_CURSOR_TRANSFORM_DROP33,892
   MONGO_CURSOR_TRANSFORM_PASS,MONGO_CURSOR_TRANSFORM_PASS34,924
   MONGO_CURSOR_TRANSFORM_MUTATE,MONGO_CURSOR_TRANSFORM_MUTATE35,956
} mongoc_cursor_transform_mode_t;mongoc_cursor_transform_mode_t36,990
(*mongoc_cursor_transform_filter_t)(const bson_t *bson,mongoc_cursor_transform_filter_t39,1064
typedef void (*mongoc_cursor_transform_mutate_t)(const bson_t *bson,mongoc_cursor_transform_mutate_t42,1177
typedef void (*mongoc_cursor_transform_dtor_t)(void *ctx);mongoc_cursor_transform_dtor_t46,1384

mongo/mongoc/mongoc-cursor.c,4233
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN31,952
#define CURSOR_FAILED(CURSOR_FAILED34,989
_mongoc_n_return (mongoc_cursor_t * cursor)_mongoc_n_return49,1423
_mongoc_set_cursor_ns (mongoc_cursor_t *cursor,_mongoc_set_cursor_ns83,2206
_mongoc_cursor_new (mongoc_client_t           *client,_mongoc_cursor_new103,2708
#define MARK_FAILED(MARK_FAILED152,4351
mongoc_cursor_destroy (mongoc_cursor_t *cursor)mongoc_cursor_destroy266,7805
_mongoc_cursor_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_destroy282,8033
_mongoc_cursor_fetch_stream (mongoc_cursor_t *cursor)_mongoc_cursor_fetch_stream328,9361
_use_find_command (const mongoc_cursor_t *cursor,_use_find_command354,10180
_mongoc_cursor_initial_query (mongoc_cursor_t *cursor)_mongoc_cursor_initial_query368,10668
_mongoc_cursor_monitor_legacy_query (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_legacy_query414,11932
_mongoc_cursor_append_docs_array (mongoc_cursor_t *cursor,_mongoc_cursor_append_docs_array458,13228
_mongoc_cursor_monitor_succeeded (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_succeeded478,13710
_mongoc_cursor_monitor_failed (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_failed535,15643
_mongoc_cursor_op_query (mongoc_cursor_t        *cursor,_mongoc_cursor_op_query570,16686
_mongoc_cursor_run_command (mongoc_cursor_t *cursor,_mongoc_cursor_run_command705,20723
_invalid_field (const char      *query_field,_invalid_field747,21792
_translate_query_opt (const char *query_field,_translate_query_opt763,22180
_mongoc_cursor_prepare_find_command_flags (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_find_command_flags819,23662
_mongoc_cursor_collection (const mongoc_cursor_t *cursor,_mongoc_cursor_collection847,24408
_mongoc_cursor_prepare_find_command (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_find_command861,24889
_mongoc_cursor_find_command (mongoc_cursor_t *cursor)_mongoc_cursor_find_command937,27291
_mongoc_cursor_get_more (mongoc_cursor_t *cursor)_mongoc_cursor_get_more959,27732
_mongoc_cursor_monitor_legacy_get_more (mongoc_cursor_t        *cursor,_mongoc_cursor_monitor_legacy_get_more1003,28635
_mongoc_cursor_op_getmore (mongoc_cursor_t        *cursor,_mongoc_cursor_op_getmore1045,29847
mongoc_cursor_error (mongoc_cursor_t *cursor,mongoc_cursor_error1144,32961
_mongoc_cursor_error (mongoc_cursor_t *cursor,_mongoc_cursor_error1164,33274
mongoc_cursor_next (mongoc_cursor_t  *cursor,mongoc_cursor_next1185,33691
_mongoc_read_from_buffer (mongoc_cursor_t *cursor,_mongoc_read_from_buffer1231,34632
_mongoc_cursor_next (mongoc_cursor_t  *cursor,_mongoc_cursor_next1246,34923
mongoc_cursor_more (mongoc_cursor_t *cursor)mongoc_cursor_more1310,36497
_mongoc_cursor_more (mongoc_cursor_t *cursor)_mongoc_cursor_more1329,36747
mongoc_cursor_get_host (mongoc_cursor_t    *cursor,mongoc_cursor_get_host1344,36994
_mongoc_cursor_get_host (mongoc_cursor_t    *cursor,_mongoc_cursor_get_host1360,37302
mongoc_cursor_clone (const mongoc_cursor_t *cursor)mongoc_cursor_clone1391,38047
_mongoc_cursor_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_clone1408,38321
mongoc_cursor_is_alive (const mongoc_cursor_t *cursor) /* IN */mongoc_cursor_is_alive1469,39758
mongoc_cursor_current (const mongoc_cursor_t *cursor) /* IN */mongoc_cursor_current1482,40074
mongoc_cursor_set_batch_size (mongoc_cursor_t *cursor,mongoc_cursor_set_batch_size1491,40201
mongoc_cursor_get_batch_size (const mongoc_cursor_t *cursor)mongoc_cursor_get_batch_size1499,40390
mongoc_cursor_set_limit (mongoc_cursor_t *cursor,mongoc_cursor_set_limit1507,40517
mongoc_cursor_get_limit (const mongoc_cursor_t *cursor)mongoc_cursor_get_limit1521,40764
mongoc_cursor_get_hint (const mongoc_cursor_t *cursor)mongoc_cursor_get_hint1529,40885
mongoc_cursor_get_id (const mongoc_cursor_t  *cursor)mongoc_cursor_get_id1537,41008
mongoc_cursor_set_max_await_time_ms (mongoc_cursor_t *cursor,mongoc_cursor_set_max_await_time_ms1545,41136
mongoc_cursor_get_max_await_time_ms (const mongoc_cursor_t *cursor)mongoc_cursor_get_max_await_time_ms1556,41393
mongoc_cursor_new_from_command_reply (mongoc_client_t *client,mongoc_cursor_new_from_command_reply1587,42257

mongo/mongoc/mongoc-index.c,813
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN23,675
static mongoc_index_opt_t gMongocIndexOptDefault = {gMongocIndexOptDefault26,718
static mongoc_index_opt_geo_t gMongocIndexOptGeoDefault = {gMongocIndexOptGeoDefault44,1496
static mongoc_index_opt_wt_t gMongocIndexOptWTDefault = {gMongocIndexOptWTDefault53,1888
mongoc_index_opt_get_default (void)mongoc_index_opt_get_default60,2180
mongoc_index_opt_geo_get_default (void)mongoc_index_opt_geo_get_default66,2287
mongoc_index_opt_wt_get_default (void)mongoc_index_opt_wt_get_default72,2400
mongoc_index_opt_init (mongoc_index_opt_t *opt)mongoc_index_opt_init78,2486
mongoc_index_opt_geo_init (mongoc_index_opt_geo_t *opt)mongoc_index_opt_geo_init86,2622
void mongoc_index_opt_wt_init (mongoc_index_opt_wt_t *opt)mongoc_index_opt_wt_init93,2764

mongo/mongoc/mongoc-write-command.c,3895
#define WRITE_CONCERN_DOC(WRITE_CONCERN_DOC33,901
typedef void (*mongoc_write_op_t) (mongoc_write_command_t       *command,mongoc_write_op_t38,1042
static bson_t gEmptyWriteConcern = BSON_INITIALIZER;gEmptyWriteConcern49,1722
static const char *gCommandNames[] = { "delete", "insert", "update"};gCommandNames52,1837
static const char *gCommandFields[] = { "deletes", "documents", "updates"};gCommandFields53,1907
static const uint32_t gCommandFieldLens[] = { 7, 9, 7 };gCommandFieldLens54,1983
_mongoc_write_command_insert_append (mongoc_write_command_t *command,_mongoc_write_command_insert_append63,2323
_mongoc_write_command_update_append (mongoc_write_command_t *command,_mongoc_write_command_update_append106,3396
_mongoc_write_command_delete_append (mongoc_write_command_t *command,_mongoc_write_command_delete_append140,4389
_mongoc_write_command_init_insert (mongoc_write_command_t    *command,              /* IN */_mongoc_write_command_init_insert171,5141
_mongoc_write_command_init_delete (mongoc_write_command_t   *command,       /* IN */_mongoc_write_command_init_delete199,6107
_mongoc_write_command_init_update (mongoc_write_command_t   *command,       /* IN */_mongoc_write_command_init_update225,6934
_mongoc_write_command_init (bson_t                       *doc,_mongoc_write_command_init254,8016
_mongoc_monitor_legacy_write (mongoc_client_t              *client,_mongoc_monitor_legacy_write287,8984
append_write_err (bson_t       *doc,append_write_err328,10406
append_write_concern_err (bson_t       *doc,append_write_concern_err356,11224
get_upserted_id (const bson_t *update,get_upserted_id383,12098
append_upserted (bson_t             *doc,append_upserted417,13148
_mongoc_monitor_legacy_write_succeeded (mongoc_client_t        *client,_mongoc_monitor_legacy_write_succeeded436,13649
_mongoc_write_command_delete_legacy (mongoc_write_command_t       *command,_mongoc_write_command_delete_legacy571,18453
too_large_error (bson_error_t *error,too_large_error709,22545
_mongoc_write_command_insert_legacy (mongoc_write_command_t       *command,_mongoc_write_command_insert_legacy732,23249
_empty_error (mongoc_write_command_t *command,_empty_error931,29240
_mongoc_write_command_will_overflow (uint32_t len_so_far,_mongoc_write_command_will_overflow949,29726
_mongoc_write_command_update_legacy (mongoc_write_command_t       *command,_mongoc_write_command_update_legacy974,30462
static mongoc_write_op_t gLegacyWriteOps[3] = {gLegacyWriteOps1152,36812
_mongoc_write_command(mongoc_write_command_t       *command,_mongoc_write_command1159,36996
_mongoc_write_command_execute (mongoc_write_command_t       *command,       /* IN */_mongoc_write_command_execute1318,42236
_mongoc_write_command_destroy (mongoc_write_command_t *command)_mongoc_write_command_destroy1370,44145
_mongoc_write_result_init (mongoc_write_result_t *result) /* IN */_mongoc_write_result_init1383,44305
_mongoc_write_result_destroy (mongoc_write_result_t *result)_mongoc_write_result_destroy1400,44585
_mongoc_write_result_append_upsert (mongoc_write_result_t *result,_mongoc_write_result_append_upsert1415,44835
_append_write_concern_err_legacy (mongoc_write_result_t *result,_append_write_concern_err_legacy1440,45562
_append_write_err_legacy (mongoc_write_result_t *result,_append_write_err_legacy1466,46473
_mongoc_write_result_merge_legacy (mongoc_write_result_t  *result,  /* IN */_mongoc_write_result_merge_legacy1503,47671
_mongoc_write_result_merge_arrays (uint32_t               offset,_mongoc_write_result_merge_arrays1611,50821
_mongoc_write_result_merge (mongoc_write_result_t  *result,  /* IN */_mongoc_write_result_merge1663,52385
_set_error_from_response (bson_t *bson_array,_set_error_from_response1795,56732
_mongoc_write_result_complete (mongoc_write_result_t *result,_mongoc_write_result_complete1861,58876

mongo/mongoc/mongoc-stream-tls-openssl-bio.c,696
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN38,1061
mongoc_stream_tls_openssl_bio_create (BIO *b)mongoc_stream_tls_openssl_bio_create59,1474
mongoc_stream_tls_openssl_bio_destroy (BIO *b)mongoc_stream_tls_openssl_bio_destroy89,1981
mongoc_stream_tls_openssl_bio_read (BIO  *b,mongoc_stream_tls_openssl_bio_read128,2712
mongoc_stream_tls_openssl_bio_write (BIO        *b,mongoc_stream_tls_openssl_bio_write175,3692
mongoc_stream_tls_openssl_bio_ctrl (BIO  *b,mongoc_stream_tls_openssl_bio_ctrl234,4962
mongoc_stream_tls_openssl_bio_gets (BIO  *b,mongoc_stream_tls_openssl_bio_gets265,5580
mongoc_stream_tls_openssl_bio_puts (BIO        *b,mongoc_stream_tls_openssl_bio_puts291,6108

mongo/mongoc/mongoc-read-prefs-private.h,618
#define MONGOC_READ_PREFS_PRIVATE_HMONGOC_READ_PREFS_PRIVATE_H18,632
struct _mongoc_read_prefs_t_mongoc_read_prefs_t32,903
   mongoc_read_mode_t mode;mode34,933
   bson_t             tags;tags35,961
typedef struct _mongoc_apply_read_prefs_result_t {_mongoc_apply_read_prefs_result_t39,994
   bson_t              *query_with_read_prefs;query_with_read_prefs40,1045
   bool                 query_owned;query_owned41,1092
   mongoc_query_flags_t flags;flags42,1129
} mongoc_apply_read_prefs_result_t;mongoc_apply_read_prefs_result_t43,1160
#define READ_PREFS_RESULT_INIT READ_PREFS_RESULT_INIT46,1198

mongo/mongoc/mongoc-secure-transport-private.h,83
#define MONGOC_SECURE_TRANSPORT_PRIVATE_HMONGOC_SECURE_TRANSPORT_PRIVATE_H18,638

mongo/mongoc/mongoc-gridfs-file-private.h,1479
#define MONGOC_GRIDFS_FILE_PRIVATE_HMONGOC_GRIDFS_FILE_PRIVATE_H18,632
struct _mongoc_gridfs_file_t_mongoc_gridfs_file_t35,961
   mongoc_gridfs_t           *gridfs;gridfs37,992
   bson_t                     bson;bson38,1030
   mongoc_gridfs_file_page_t *page;page39,1066
   uint64_t                   pos;pos40,1102
   int32_t                    n;n41,1137
   bson_error_t               error;error42,1170
   mongoc_cursor_t           *cursor;cursor43,1207
   uint32_t                   cursor_range[2]; /* current chunk, # of chunks */cursor_range44,1245
   bool                       is_dirty;is_dirty45,1325
   bson_value_t               files_id;files_id47,1366
   int64_t                    length;length48,1406
   int32_t                    chunk_size;chunk_size49,1444
   int64_t                    upload_date;upload_date50,1486
   char                      *md5;md552,1530
   char                      *filename;filename53,1565
   char                      *content_type;content_type54,1605
   bson_t                     aliases;aliases55,1649
   bson_t                     metadata;metadata56,1688
   const char                *bson_md5;bson_md557,1728
   const char                *bson_filename;bson_filename58,1768
   const char                *bson_content_type;bson_content_type59,1813
   bson_t                     bson_aliases;bson_aliases60,1862
   bson_t                     bson_metadata;bson_metadata61,1906

mongo/mongoc/mongoc-trace.h,280
#define MONGOC_TRACE_PRIVATE_HMONGOC_TRACE_PRIVATE_H19,628
#define TRACE(TRACE33,796
#define ENTRY ENTRY35,971
#define EXIT EXIT36,1102
#define RETURN(RETURN37,1241
#define GOTO(GOTO38,1384
#define DUMP_BYTES(DUMP_BYTES39,1538
#define DUMP_IOVEC(DUMP_IOVEC43,1774

mongo/mongoc/mongoc-stream-gridfs.h,61
#define MONGOC_STREAM_GRIDFS_HMONGOC_STREAM_GRIDFS_H18,626

mongo/mongoc/mongoc-rand-private.h,59
#define MONGOC_RAND_PRIVATE_HMONGOC_RAND_PRIVATE_H24,756

mongo/mongoc/mongoc-server-stream.c,674
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN22,701
#define COALESCE(COALESCE24,744
mongoc_server_stream_new (mongoc_topology_description_type_t topology_type,mongoc_server_stream_new27,816
mongoc_server_stream_cleanup (mongoc_server_stream_t *server_stream)mongoc_server_stream_cleanup45,1383
mongoc_server_stream_max_bson_obj_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_bson_obj_size64,1873
mongoc_server_stream_max_msg_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_msg_size81,2350
mongoc_server_stream_max_write_batch_size (mongoc_server_stream_t *server_stream)mongoc_server_stream_max_write_batch_size98,2828

mongo/mongoc/mongoc-version.h.in,506
#define MONGOC_VERSION_HMONGOC_VERSION_H24,744
#define MONGOC_MAJOR_VERSION MONGOC_MAJOR_VERSION32,878
#define MONGOC_MINOR_VERSION MONGOC_MINOR_VERSION40,1041
#define MONGOC_MICRO_VERSION MONGOC_MICRO_VERSION48,1204
#define MONGOC_PRERELEASE_VERSION MONGOC_PRERELEASE_VERSION56,1383
#define MONGOC_VERSION MONGOC_VERSION64,1498
#define MONGOC_VERSION_S MONGOC_VERSION_S73,1656
#define MONGOC_VERSION_HEX MONGOC_VERSION_HEX82,1824
#define MONGOC_CHECK_VERSION(MONGOC_CHECK_VERSION96,2248

mongo/mongoc/mongoc-stream.c,1449
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,1002
# define MONGOC_DEFAULT_TIMEOUT_MSEC MONGOC_DEFAULT_TIMEOUT_MSEC38,1074
mongoc_stream_close (mongoc_stream_t *stream)mongoc_stream_close51,1312
mongoc_stream_failed (mongoc_stream_t *stream)mongoc_stream_failed77,1801
mongoc_stream_destroy (mongoc_stream_t *stream)mongoc_stream_destroy101,2167
mongoc_stream_flush (mongoc_stream_t *stream)mongoc_stream_flush124,2508
mongoc_stream_writev (mongoc_stream_t *stream,mongoc_stream_writev142,2914
mongoc_stream_write (mongoc_stream_t *stream,mongoc_stream_write179,3763
mongoc_stream_readv (mongoc_stream_t *stream,mongoc_stream_readv218,4745
mongoc_stream_read (mongoc_stream_t *stream,mongoc_stream_read259,5784
mongoc_stream_setsockopt (mongoc_stream_t *stream,mongoc_stream_setsockopt285,6295
mongoc_stream_get_base_stream (mongoc_stream_t *stream) /* IN */mongoc_stream_get_base_stream302,6721
mongoc_stream_get_root_stream (mongoc_stream_t *stream)mongoc_stream_get_root_stream315,6948
mongoc_stream_get_tls_stream (mongoc_stream_t *stream) /* IN */mongoc_stream_get_tls_stream328,7164
mongoc_stream_poll (mongoc_stream_poll_t *streams,mongoc_stream_poll339,7392
mongoc_stream_wait (mongoc_stream_t *stream,mongoc_stream_wait408,9085
mongoc_stream_check_closed (mongoc_stream_t *stream)mongoc_stream_check_closed465,10417
_mongoc_stream_writev_full (mongoc_stream_t *stream,_mongoc_stream_writev_full481,10604

mongo/mongoc/mongoc-stream-file.h,144
#define MONGOC_STREAM_FILE_HMONGOC_STREAM_FILE_H18,625
typedef struct _mongoc_stream_file_t mongoc_stream_file_t;mongoc_stream_file_t30,825

mongo/mongoc/mongoc-crypto-private.h,315
#define MONGOC_CRYPTO_PRIVATE_HMONGOC_CRYPTO_PRIVATE_H28,832
typedef struct _mongoc_crypto_t mongoc_crypto_t;mongoc_crypto_t33,884
struct _mongoc_crypto_t_mongoc_crypto_t35,934
   void (*hmac_sha1) (mongoc_crypto_t     *crypto,hmac_sha137,960
   bool (*sha1)      (mongoc_crypto_t     *crypto,sha143,1261

mongo/mongoc/mongoc-matcher.h,124
#define MONGOC_MATCHER_HMONGOC_MATCHER_H18,621
typedef struct _mongoc_matcher_t mongoc_matcher_t;mongoc_matcher_t30,808

mongo/mongoc/mongoc-uri.c,5753
struct _mongoc_uri_t_mongoc_uri_t36,996
   char                   *str;str38,1019
   mongoc_host_list_t     *hosts;hosts39,1051
   char                   *username;username40,1085
   char                   *password;password41,1122
   char                   *database;database42,1159
   bson_t                  options;options43,1196
   bson_t                  credentials;credentials44,1232
   mongoc_read_prefs_t    *read_prefs;read_prefs45,1272
   mongoc_read_concern_t  *read_concern;read_concern46,1311
   mongoc_write_concern_t *write_concern;write_concern47,1352
mongoc_uri_do_unescape (char **str)mongoc_uri_do_unescape51,1410
mongoc_uri_lowercase_hostname (const char *src,mongoc_uri_lowercase_hostname62,1560
mongoc_uri_append_host (mongoc_uri_t  *uri,mongoc_uri_append_host81,2120
scan_to_unichar (const char      *str,scan_to_unichar133,3803
mongoc_uri_parse_scheme (const char    *str,mongoc_uri_parse_scheme167,4620
mongoc_uri_parse_userpass (mongoc_uri_t  *uri,mongoc_uri_parse_userpass181,4834
mongoc_uri_parse_port (uint16_t   *port,mongoc_uri_parse_port210,5593
mongoc_uri_parse_host6 (mongoc_uri_t  *uri,mongoc_uri_parse_host6228,5955
mongoc_uri_parse_host (mongoc_uri_t  *uri,mongoc_uri_parse_host257,6561
_mongoc_host_list_from_string (mongoc_host_list_t *host_list,_mongoc_host_list_from_string294,7326
mongoc_uri_parse_hosts (mongoc_uri_t  *uri,mongoc_uri_parse_hosts328,8035
mongoc_uri_parse_database (mongoc_uri_t  *uri,mongoc_uri_parse_database399,10080
mongoc_uri_parse_auth_mechanism_properties (mongoc_uri_t *uri,mongoc_uri_parse_auth_mechanism_properties423,10599
mongoc_uri_parse_tags (mongoc_uri_t *uri, /* IN */mongoc_uri_parse_tags454,11464
mongoc_uri_bson_append_or_replace_key (bson_t *options, const char *option, const char *value)mongoc_uri_bson_append_or_replace_key506,12807
mongoc_uri_option_is_int32 (const char *key)mongoc_uri_option_is_int32539,13595
mongoc_uri_option_is_bool (const char *key)mongoc_uri_option_is_bool556,14215
mongoc_uri_option_is_utf8 (const char *key)mongoc_uri_option_is_utf8567,14554
mongoc_uri_parse_option (mongoc_uri_t *uri,mongoc_uri_parse_option587,15036
mongoc_uri_parse_options (mongoc_uri_t *uri,mongoc_uri_parse_options652,17066
mongoc_uri_finalize_auth (mongoc_uri_t *uri) {mongoc_uri_finalize_auth678,17594
mongoc_uri_parse (mongoc_uri_t *uri,mongoc_uri_parse704,18339
mongoc_uri_get_hosts (const mongoc_uri_t *uri)mongoc_uri_get_hosts744,19098
mongoc_uri_get_replica_set (const mongoc_uri_t *uri)mongoc_uri_get_replica_set752,19208
mongoc_uri_get_credentials (const mongoc_uri_t *uri)mongoc_uri_get_credentials768,19500
mongoc_uri_get_auth_mechanism (const mongoc_uri_t *uri)mongoc_uri_get_auth_mechanism776,19623
mongoc_uri_get_mechanism_properties (const mongoc_uri_t *uri, bson_t *properties)mongoc_uri_get_mechanism_properties792,19918
_mongoc_uri_assign_read_prefs_mode (mongoc_uri_t *uri) /* IN */_mongoc_uri_assign_read_prefs_mode816,20405
_mongoc_uri_build_write_concern (mongoc_uri_t *uri) /* IN */_mongoc_uri_build_write_concern855,21947
mongoc_uri_new (const char *uri_string)mongoc_uri_new923,24216
mongoc_uri_new_for_host_port (const char *hostname,mongoc_uri_new_for_host_port967,25179
mongoc_uri_get_username (const mongoc_uri_t *uri)mongoc_uri_get_username985,25517
mongoc_uri_set_username (mongoc_uri_t *uri, const char *username)mongoc_uri_set_username993,25625
mongoc_uri_get_password (const mongoc_uri_t *uri)mongoc_uri_get_password1015,25983
mongoc_uri_set_password (mongoc_uri_t *uri, const char *password)mongoc_uri_set_password1023,26091
mongoc_uri_get_database (const mongoc_uri_t *uri)mongoc_uri_get_database1045,26449
mongoc_uri_set_database (mongoc_uri_t *uri, const char *database)mongoc_uri_set_database1052,26556
mongoc_uri_get_auth_source (const mongoc_uri_t *uri)mongoc_uri_get_auth_source1074,26913
mongoc_uri_set_auth_source (mongoc_uri_t *uri, const char *value)mongoc_uri_set_auth_source1089,27196
mongoc_uri_get_options (const mongoc_uri_t *uri)mongoc_uri_get_options1107,27524
mongoc_uri_destroy (mongoc_uri_t *uri)mongoc_uri_destroy1115,27631
mongoc_uri_copy (const mongoc_uri_t *uri)mongoc_uri_copy1138,28207
mongoc_uri_get_string (const mongoc_uri_t *uri)mongoc_uri_get_string1168,29055
mongoc_uri_get_read_prefs (const mongoc_uri_t *uri)mongoc_uri_get_read_prefs1176,29166
mongoc_uri_unescape (const char *escaped_string)mongoc_uri_unescape1204,29833
mongoc_uri_get_read_prefs_t (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_read_prefs_t1260,31133
mongoc_uri_set_read_prefs_t (mongoc_uri_t              *uri,mongoc_uri_set_read_prefs_t1269,31257
mongoc_uri_get_read_concern (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_read_concern1281,31565
mongoc_uri_set_read_concern (mongoc_uri_t                *uri,mongoc_uri_set_read_concern1290,31691
mongoc_uri_get_write_concern (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_write_concern1302,32003
mongoc_uri_set_write_concern (mongoc_uri_t                 *uri,mongoc_uri_set_write_concern1311,32131
mongoc_uri_get_ssl (const mongoc_uri_t *uri) /* IN */mongoc_uri_get_ssl1323,32425
mongoc_uri_get_option_as_int32 (const mongoc_uri_t *uri,mongoc_uri_get_option_as_int321356,33402
mongoc_uri_set_option_as_int32 (mongoc_uri_t *uri,mongoc_uri_set_option_as_int321402,34758
mongoc_uri_get_option_as_bool (const mongoc_uri_t *uri,mongoc_uri_get_option_as_bool1447,35908
mongoc_uri_set_option_as_bool (mongoc_uri_t *uri,mongoc_uri_set_option_as_bool1489,37180
mongoc_uri_get_option_as_utf8 (const mongoc_uri_t *uri,mongoc_uri_get_option_as_utf81534,38330
mongoc_uri_set_option_as_utf8 (mongoc_uri_t *uri,mongoc_uri_set_option_as_utf81580,39795

mongo/mongoc/mongoc-stream-private.h,348
#define MONGOC_STREAM_PRIVATE_HMONGOC_STREAM_PRIVATE_H18,633
#define MONGOC_STREAM_SOCKET MONGOC_STREAM_SOCKET31,868
#define MONGOC_STREAM_FILE MONGOC_STREAM_FILE32,901
#define MONGOC_STREAM_BUFFERED MONGOC_STREAM_BUFFERED33,934
#define MONGOC_STREAM_GRIDFS MONGOC_STREAM_GRIDFS34,967
#define MONGOC_STREAM_TLS MONGOC_STREAM_TLS35,1000

mongo/mongoc/op-header.def,0

mongo/mongoc/mongoc-server-stream-private.h,425
#define MONGOC_SERVER_STREAM_HMONGOC_SERVER_STREAM_H18,627
typedef struct _mongoc_server_stream_t_mongoc_server_stream_t34,976
   mongoc_topology_description_type_t  topology_type;topology_type36,1017
   mongoc_server_description_t        *sd;            /* owned */sd37,1071
   mongoc_stream_t                    *stream;        /* borrowed */stream38,1137
} mongoc_server_stream_t;mongoc_server_stream_t39,1206

mongo/mongoc/mongoc-collection.c,4515
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN40,1230
#define _BSON_APPEND_WRITE_CONCERN(_BSON_APPEND_WRITE_CONCERN43,1271
validate_name (const char *str)validate_name61,2082
_mongoc_collection_cursor_new (mongoc_collection_t *collection,_mongoc_collection_cursor_new91,2631
_mongoc_collection_write_command_execute (mongoc_write_command_t       *command,_mongoc_collection_write_command_execute108,3411
_mongoc_collection_new (mongoc_client_t              *client,_mongoc_collection_new161,5200
mongoc_collection_destroy (mongoc_collection_t *collection) /* IN */mongoc_collection_destroy221,6935
mongoc_collection_copy (mongoc_collection_t *collection) /* IN */mongoc_collection_copy270,8007
mongoc_collection_aggregate (mongoc_collection_t       *collection, /* IN */mongoc_collection_aggregate328,10116
mongoc_collection_find (mongoc_collection_t       *collection, /* IN */mongoc_collection_find499,15903
mongoc_collection_command (mongoc_collection_t       *collection,mongoc_collection_command553,17757
mongoc_collection_command_simple (mongoc_collection_t       *collection,mongoc_collection_command_simple585,18857
mongoc_collection_count (mongoc_collection_t       *collection,  /* IN */mongoc_collection_count625,20247
mongoc_collection_count_with_opts (mongoc_collection_t       *collection,  /* IN */mongoc_collection_count_with_opts646,20939
mongoc_collection_drop (mongoc_collection_t *collection, /* IN */mongoc_collection_drop745,24127
mongoc_collection_drop_index (mongoc_collection_t *collection, /* IN */mongoc_collection_drop_index780,24992
mongoc_collection_keys_to_index_string (const bson_t *keys)mongoc_collection_keys_to_index_string802,25622
_mongoc_collection_create_index_legacy (mongoc_collection_t      *collection,_mongoc_collection_create_index_legacy858,27042
mongoc_collection_create_index (mongoc_collection_t      *collection,mongoc_collection_create_index963,30166
mongoc_collection_ensure_index (mongoc_collection_t      *collection,mongoc_collection_ensure_index1111,35338
_mongoc_collection_find_indexes_legacy (mongoc_collection_t *collection,_mongoc_collection_find_indexes_legacy1120,35696
mongoc_collection_find_indexes (mongoc_collection_t *collection,mongoc_collection_find_indexes1152,36662
mongoc_collection_insert_bulk (mongoc_collection_t           *collection,mongoc_collection_insert_bulk1232,39414
mongoc_collection_insert (mongoc_collection_t          *collection,mongoc_collection_insert1324,42553
mongoc_collection_update (mongoc_collection_t          *collection,mongoc_collection_update1404,45188
mongoc_collection_save (mongoc_collection_t          *collection,mongoc_collection_save1490,48098
mongoc_collection_remove (mongoc_collection_t          *collection,mongoc_collection_remove1564,50479
mongoc_collection_delete (mongoc_collection_t          *collection,mongoc_collection_delete1607,51781
mongoc_collection_get_read_prefs (const mongoc_collection_t *collection)mongoc_collection_get_read_prefs1635,52686
mongoc_collection_set_read_prefs (mongoc_collection_t       *collection,mongoc_collection_set_read_prefs1659,53180
mongoc_collection_get_read_concern (const mongoc_collection_t *collection)mongoc_collection_get_read_concern1692,54022
mongoc_collection_set_read_concern (mongoc_collection_t          *collection,mongoc_collection_set_read_concern1717,54519
mongoc_collection_get_write_concern (const mongoc_collection_t *collection)mongoc_collection_get_write_concern1750,55394
mongoc_collection_set_write_concern (mongoc_collection_t          *collection,mongoc_collection_set_write_concern1775,55895
mongoc_collection_get_name (mongoc_collection_t *collection)mongoc_collection_get_name1808,56740
mongoc_collection_get_last_error (const mongoc_collection_t *collection) /* IN */mongoc_collection_get_last_error1837,57536
mongoc_collection_validate (mongoc_collection_t *collection, /* IN */mongoc_collection_validate1874,58420
mongoc_collection_rename (mongoc_collection_t *collection,mongoc_collection_rename1934,60044
mongoc_collection_stats (mongoc_collection_t *collection,mongoc_collection_stats2013,62355
mongoc_collection_create_bulk_operation (mongoc_collection_create_bulk_operation2049,63271
mongoc_collection_find_and_modify_with_opts (mongoc_collection_t                 *collection,mongoc_collection_find_and_modify_with_opts2093,64659
mongoc_collection_find_and_modify (mongoc_collection_t *collection,mongoc_collection_find_and_modify2247,69755

mongo/mongoc/mongoc-gridfs-private.h,248
#define MONGOC_GRIDFS_PRIVATE_HMONGOC_GRIDFS_PRIVATE_H18,627
struct _mongoc_gridfs_t_mongoc_gridfs_t34,920
   mongoc_client_t     *client;client36,946
   mongoc_collection_t *files;files37,978
   mongoc_collection_t *chunks;chunks38,1009

mongo/mongoc/mongoc-errno-private.h,122
#define MONGOC_ERRNO_PRIVATE_HMONGOC_ERRNO_PRIVATE_H18,627
# define MONGOC_ERRNO_IS_AGAIN(MONGOC_ERRNO_IS_AGAIN36,932

mongo/mongoc/mongoc-init.h,43
#define MONGOC_INIT_HMONGOC_INIT_H18,618

mongo/mongoc/mongoc-client-pool.h,144
#define MONGOC_CLIENT_POOL_HMONGOC_CLIENT_POOL_H18,625
typedef struct _mongoc_client_pool_t mongoc_client_pool_t;mongoc_client_pool_t38,976

mongo/mongoc/mongoc-version-functions.c,317
mongoc_get_major_version (void)mongoc_get_major_version27,779
mongoc_get_minor_version (void)mongoc_get_minor_version39,964
mongoc_get_micro_version (void)mongoc_get_micro_version50,1148
mongoc_get_version (void)mongoc_get_version61,1336
mongoc_check_version (int required_major,mongoc_check_version73,1520

mongo/mongoc/mongoc-client.c,4873
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN49,1365
mongoc_client_connect_tcp (const mongoc_uri_t       *uri,mongoc_client_connect_tcp90,2774
mongoc_client_connect_unix (const mongoc_uri_t       *uri,mongoc_client_connect_unix206,6042
mongoc_client_default_stream_initiator (const mongoc_uri_t       *uri,mongoc_client_default_stream_initiator282,8234
_mongoc_client_create_stream (mongoc_client_t          *client,_mongoc_client_create_stream394,11815
_mongoc_client_recv (mongoc_client_t        *client,_mongoc_client_recv422,12549
_bson_to_error (const bson_t *b,_bson_to_error460,13584
_mongoc_client_recv_gle (mongoc_client_t        *client,_mongoc_client_recv_gle531,15580
mongoc_client_new(const char *uri_string)mongoc_client_new619,17865
mongoc_client_set_ssl_opts (mongoc_client_t        *client,mongoc_client_set_ssl_opts661,18632
mongoc_client_new_from_uri (const mongoc_uri_t *uri)mongoc_client_new_from_uri696,19461
_mongoc_client_new_from_uri (const mongoc_uri_t *uri, mongoc_topology_t *topology)_mongoc_client_new_from_uri723,20067
mongoc_client_destroy (mongoc_client_t *client)mongoc_client_destroy787,21868
mongoc_client_get_uri (const mongoc_client_t *client)mongoc_client_get_uri824,22803
mongoc_client_get_database (mongoc_client_t *client,mongoc_client_get_database854,23514
mongoc_client_get_default_database (mongoc_client_t *client)mongoc_client_get_default_database886,24382
mongoc_client_get_collection (mongoc_client_t *client,mongoc_client_get_collection927,25411
mongoc_client_get_gridfs (mongoc_client_t *client,mongoc_client_get_gridfs964,26512
mongoc_client_get_write_concern (const mongoc_client_t *client)mongoc_client_get_write_concern997,27285
mongoc_client_set_write_concern (mongoc_client_t              *client,mongoc_client_set_write_concern1022,27746
mongoc_client_get_read_concern (const mongoc_client_t *client)mongoc_client_get_read_concern1055,28635
mongoc_client_set_read_concern (mongoc_client_t             *client,mongoc_client_set_read_concern1080,29092
mongoc_client_get_read_prefs (const mongoc_client_t *client)mongoc_client_get_read_prefs1113,29911
mongoc_client_set_read_prefs (mongoc_client_t           *client,mongoc_client_set_read_prefs1138,30365
mongoc_client_command (mongoc_client_t           *client,mongoc_client_command1154,30831
_mongoc_client_command_with_stream (mongoc_client_t           *client,_mongoc_client_command_with_stream1201,32430
mongoc_client_command_simple (mongoc_client_t           *client,mongoc_client_command_simple1228,33389
mongoc_client_command_simple_with_server_id (mongoc_client_t           *client,mongoc_client_command_simple_with_server_id1274,34813
_mongoc_client_prepare_killcursors_command (int64_t     cursor_id,_mongoc_client_prepare_killcursors_command1312,36069
_mongoc_client_kill_cursor (mongoc_client_t *client,_mongoc_client_kill_cursor1326,36518
_mongoc_client_monitor_op_killcursors (mongoc_cluster_t       *cluster,_mongoc_client_monitor_op_killcursors1369,37938
_mongoc_client_monitor_op_killcursors_succeeded (_mongoc_client_monitor_op_killcursors_succeeded1409,39271
_mongoc_client_monitor_op_killcursors_failed (_mongoc_client_monitor_op_killcursors_failed1454,40685
_mongoc_client_op_killcursors (mongoc_cluster_t       *cluster,_mongoc_client_op_killcursors1491,41697
_mongoc_client_killcursors_command (mongoc_cluster_t       *cluster,_mongoc_client_killcursors_command1540,43235
mongoc_client_kill_cursor (mongoc_client_t *client,mongoc_client_kill_cursor1592,44899
mongoc_client_get_database_names (mongoc_client_t *client,mongoc_client_get_database_names1633,46047
mongoc_client_find_databases (mongoc_client_t *client,mongoc_client_find_databases1669,46952
mongoc_client_get_max_message_size (mongoc_client_t *client) /* IN */mongoc_client_get_max_message_size1691,47461
mongoc_client_get_max_bson_size (mongoc_client_t *client) /* IN */mongoc_client_get_max_bson_size1700,47633
mongoc_client_get_server_status (mongoc_client_t     *client,     /* IN */mongoc_client_get_server_status1709,47804
mongoc_client_set_stream_initiator (mongoc_client_t           *client,mongoc_client_set_stream_initiator1729,48415
_mongoc_client_set_apm_callbacks_private (mongoc_client_t        *client,_mongoc_client_set_apm_callbacks_private1753,49126
mongoc_client_set_apm_callbacks (mongoc_client_t        *client,mongoc_client_set_apm_callbacks1776,49749
mongoc_client_get_server_description (mongoc_client_t *client,mongoc_client_get_server_description1791,50265
mongoc_client_get_server_descriptions (mongoc_client_get_server_descriptions1800,50544
mongoc_server_descriptions_destroy_all (mongoc_server_description_t **sds,mongoc_server_descriptions_destroy_all1840,51565
mongoc_client_select_server (mongoc_client_t     *client,mongoc_client_select_server1854,51868

mongo/mongoc/mongoc-topology-description.c,6343
_mongoc_topology_server_dtor (void *server_,_mongoc_topology_server_dtor26,825
mongoc_topology_description_init (mongoc_topology_description_t     *description,mongoc_topology_description_init48,1326
mongoc_topology_description_destroy (mongoc_topology_description_t *description)mongoc_topology_description_destroy87,2413
_mongoc_topology_description_has_primary_cb (void *item,_mongoc_topology_description_has_primary_cb108,2831
_mongoc_topology_description_has_primary (mongoc_topology_description_t *description)_mongoc_topology_description_has_primary138,3744
_mongoc_topology_description_later_election (mongoc_topology_description_t *td,_mongoc_topology_description_later_election165,4522
_mongoc_topology_description_set_max_set_version (_mongoc_topology_description_set_max_set_version185,5295
_mongoc_topology_description_set_max_election_id (_mongoc_topology_description_set_max_election_id203,5829
_mongoc_topology_description_server_is_candidate (_mongoc_topology_description_server_is_candidate211,6032
typedef struct _mongoc_suitable_data_t_mongoc_suitable_data_t266,7448
   mongoc_read_mode_t                 read_mode;read_mode268,7489
   mongoc_topology_description_type_t topology_type;topology_type269,7538
   mongoc_server_description_t       *primary; /* OUT */primary270,7591
   mongoc_server_description_t      **candidates; /* OUT */candidates271,7648
   size_t                             candidates_len; /* OUT */candidates_len272,7708
   bool                               has_secondary; /* OUT */has_secondary273,7772
} mongoc_suitable_data_t;mongoc_suitable_data_t274,7835
_mongoc_replica_set_read_suitable_cb (void *item,_mongoc_replica_set_read_suitable_cb277,7874
_mongoc_find_suitable_mongos_cb (void *item,_mongoc_find_suitable_mongos_cb309,8957
mongoc_topology_description_suitable_servers (mongoc_topology_description_suitable_servers344,10057
mongoc_topology_description_select (mongoc_topology_description_t *topology,mongoc_topology_description_select485,14933
mongoc_topology_description_server_by_id (mongoc_topology_description_t *description,mongoc_topology_description_server_by_id549,17070
_mongoc_topology_description_remove_server (mongoc_topology_description_t *description,_mongoc_topology_description_remove_server584,18086
typedef struct _mongoc_address_and_id_t {_mongoc_address_and_id_t593,18370
   const char *address; /* IN */address594,18412
   bool found; /* OUT */found595,18445
   uint32_t id; /* OUT */id596,18470
} mongoc_address_and_id_t;mongoc_address_and_id_t597,18496
_mongoc_topology_description_has_server_cb (void *item,_mongoc_topology_description_has_server_cb601,18583
_mongoc_topology_description_has_set_version (mongoc_topology_description_t *td)_mongoc_topology_description_has_set_version631,19426
_mongoc_topology_description_has_server (mongoc_topology_description_t *description,_mongoc_topology_description_has_server653,20007
typedef struct _mongoc_address_and_type_t_mongoc_address_and_type_t673,20580
   const char *address;address675,20624
   mongoc_server_description_type_t type;type676,20648
} mongoc_address_and_type_t;mongoc_address_and_type_t677,20690
_mongoc_label_unknown_member_cb (void *item,_mongoc_label_unknown_member_cb680,20732
_mongoc_topology_description_label_unknown_member (mongoc_topology_description_t *description,_mongoc_topology_description_label_unknown_member711,21622
_mongoc_topology_description_set_state (mongoc_topology_description_t *description,_mongoc_topology_description_set_state743,22570
_update_rs_type (mongoc_topology_description_t *topology)_update_rs_type751,22782
_mongoc_topology_description_check_if_has_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_check_if_has_primary780,23562
mongoc_topology_description_invalidate_server (mongoc_topology_description_t *topology,mongoc_topology_description_invalidate_server802,24357
mongoc_topology_description_add_server (mongoc_topology_description_t *topology,mongoc_topology_description_add_server839,25509
_mongoc_topology_description_add_new_servers (_mongoc_topology_description_add_new_servers869,26373
typedef struct _mongoc_primary_and_topology_t {_mongoc_primary_and_topology_t890,26934
   mongoc_topology_description_t *topology;topology891,26982
   mongoc_server_description_t *primary;primary892,27026
} mongoc_primary_and_topology_t;mongoc_primary_and_topology_t893,27067
_mongoc_topology_description_invalidate_primaries_cb (void *item,_mongoc_topology_description_invalidate_primaries_cb897,27144
_mongoc_topology_description_remove_unreported_servers (_mongoc_topology_description_remove_unreported_servers915,27863
_mongoc_topology_description_matches_me (mongoc_server_description_t *server)_mongoc_topology_description_matches_me972,29847
_mongoc_topology_description_update_rs_from_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_update_rs_from_primary1014,31365
_mongoc_topology_description_update_rs_without_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_update_rs_without_primary1099,34722
_mongoc_topology_description_update_rs_with_primary_from_member (mongoc_topology_description_t *_mongoc_topology_description_update_rs_with_primary_from_member1153,36543
_mongoc_topology_description_set_topology_type_to_sharded (mongoc_topology_description_t *topolo_mongoc_topology_description_set_topology_type_to_sharded1200,38175
_mongoc_topology_description_transition_unknown_to_rs_no_primary (mongoc_topology_description_t _mongoc_topology_description_transition_unknown_to_rs_no_primary1224,38962
_mongoc_topology_description_remove_and_check_primary (mongoc_topology_description_t *topology,_mongoc_topology_description_remove_and_check_primary1247,39761
_mongoc_topology_description_update_unknown_with_standalone (mongoc_topology_description_t *topo_mongoc_topology_description_update_unknown_with_standalone1273,40684
typedef void (*transition_t)(mongoc_topology_description_t *topology,transition_t1309,41989
gSDAMTransitionTable[MONGOC_SERVER_DESCRIPTION_TYPES][MONGOC_TOPOLOGY_DESCRIPTION_TYPES] = {gSDAMTransitionTable1313,42142
mongoc_topology_description_handle_ismaster (mongoc_topology_description_handle_ismaster1385,44747

mongo/mongoc/mongoc-counters-private.h,856
#define MONGOC_COUNTERS_PRIVATE_HMONGOC_COUNTERS_PRIVATE_H18,630
_mongoc_get_cpu_count (void)_mongoc_get_cpu_count47,1203
#define _mongoc_counter_add(_mongoc_counter_add84,1973
 _mongoc_sched_getcpu (void)_mongoc_sched_getcpu90,2110
# define _mongoc_sched_getcpu _mongoc_sched_getcpu97,2308
# define _mongoc_sched_getcpu(_mongoc_sched_getcpu99,2357
# define SLOTS_PER_CACHELINE SLOTS_PER_CACHELINE104,2430
{__anon90d770c70108109,2485
   int64_t slots [SLOTS_PER_CACHELINE];slots110,2487
} mongoc_counter_slots_t;mongoc_counter_slots_t111,2527
{__anon90d770c70208115,2570
   mongoc_counter_slots_t *cpus;cpus116,2572
} mongoc_counter_t;mongoc_counter_t117,2605
#define COUNTER(COUNTER120,2627
{__anon90d770c70303127,2788
#define COUNTER(COUNTER128,2790
   LAST_COUNTERLAST_COUNTER132,2911
#define COUNTER(COUNTER136,2932

mongo/mongoc/mongoc-stream-tls-private.h,842
#define MONGOC_STREAM_TLS_PRIVATE_HMONGOC_STREAM_TLS_PRIVATE_H18,632
struct _mongoc_stream_tls_t_mongoc_stream_tls_t38,1010
   mongoc_stream_t  parent;      /* The TLS stream wrapper */parent40,1040
   mongoc_stream_t *base_stream; /* The underlying actual stream */base_stream41,1102
   void            *ctx;         /* TLS lib specific configuration or wrappers */ctx42,1170
   int32_t          timeout_msec;timeout_msec43,1252
   bool             weak_cert_validation;weak_cert_validation44,1286
   bool (*do_handshake) (mongoc_stream_t *stream, int32_t     timeout_msec);do_handshake45,1328
   bool (*check_cert)   (mongoc_stream_t *stream, const char *host);check_cert46,1405
   bool (*should_retry) (mongoc_stream_t *stream);should_retry47,1474
   bool (*should_read)  (mongoc_stream_t *stream);should_read48,1525

mongo/mongoc/mongoc-gridfs-file.h,731
#define MONGOC_GRIDFS_FILE_HMONGOC_GRIDFS_FILE_H18,624
#define MONGOC_GRIDFS_FILE_STR_HEADER(MONGOC_GRIDFS_FILE_STR_HEADER31,841
#define MONGOC_GRIDFS_FILE_BSON_HEADER(MONGOC_GRIDFS_FILE_BSON_HEADER39,1116
typedef struct _mongoc_gridfs_file_t mongoc_gridfs_file_t;mongoc_gridfs_file_t47,1388
typedef struct _mongoc_gridfs_file_opt_t mongoc_gridfs_file_opt_t;mongoc_gridfs_file_opt_t48,1447
struct _mongoc_gridfs_file_opt_t_mongoc_gridfs_file_opt_t51,1516
   const char   *md5;md553,1551
   const char   *filename;filename54,1573
   const char   *content_type;content_type55,1600
   const bson_t *aliases;aliases56,1631
   const bson_t *metadata;metadata57,1657
   uint32_t      chunk_size;chunk_size58,1684

mongo/mongoc/mongoc-b64.c,981
#define Assert(Assert45,2251
static const char Base64[] =Base6447,2295
static const char Pad64 = '=';Pad6449,2395
mongoc_b64_ntop (uint8_t const *src,mongoc_b64_ntop114,5597
static int mongoc_b64rmap_initialized = 0;mongoc_b64rmap_initialized252,10911
static uint8_t mongoc_b64rmap[256];mongoc_b64rmap253,10954
static const uint8_t mongoc_b64rmap_special = 0xf0;mongoc_b64rmap_special255,10991
static const uint8_t mongoc_b64rmap_end = 0xfd;mongoc_b64rmap_end256,11043
static const uint8_t mongoc_b64rmap_space = 0xfe;mongoc_b64rmap_space257,11091
static const uint8_t mongoc_b64rmap_invalid = 0xff;mongoc_b64rmap_invalid258,11141
mongoc_b64_initialize_rmap (void)mongoc_b64_initialize_rmap265,11297
mongoc_b64_pton_do(char const *src, uint8_t *target, size_t targsize)mongoc_b64_pton_do294,11933
mongoc_b64_pton_len(char const *src)mongoc_b64_pton_len413,14540
mongoc_b64_pton(char const *src, uint8_t *target, size_t targsize)mongoc_b64_pton508,16404

mongo/mongoc/mongoc-matcher-op-private.h,3187
#define MONGOC_MATCHER_OP_PRIVATE_HMONGOC_MATCHER_OP_PRIVATE_H18,632
typedef union  _mongoc_matcher_op_t         mongoc_matcher_op_t;mongoc_matcher_op_t30,836
typedef struct _mongoc_matcher_op_base_t    mongoc_matcher_op_base_t;mongoc_matcher_op_base_t31,901
typedef struct _mongoc_matcher_op_logical_t mongoc_matcher_op_logical_t;mongoc_matcher_op_logical_t32,971
typedef struct _mongoc_matcher_op_compare_t mongoc_matcher_op_compare_t;mongoc_matcher_op_compare_t33,1044
typedef struct _mongoc_matcher_op_exists_t  mongoc_matcher_op_exists_t;mongoc_matcher_op_exists_t34,1117
typedef struct _mongoc_matcher_op_type_t    mongoc_matcher_op_type_t;mongoc_matcher_op_type_t35,1189
typedef struct _mongoc_matcher_op_not_t     mongoc_matcher_op_not_t;mongoc_matcher_op_not_t36,1259
{__anon60bea8c4010340,1343
   MONGOC_MATCHER_OPCODE_EQ,MONGOC_MATCHER_OPCODE_EQ41,1345
   MONGOC_MATCHER_OPCODE_GT,MONGOC_MATCHER_OPCODE_GT42,1374
   MONGOC_MATCHER_OPCODE_GTE,MONGOC_MATCHER_OPCODE_GTE43,1403
   MONGOC_MATCHER_OPCODE_IN,MONGOC_MATCHER_OPCODE_IN44,1433
   MONGOC_MATCHER_OPCODE_LT,MONGOC_MATCHER_OPCODE_LT45,1462
   MONGOC_MATCHER_OPCODE_LTE,MONGOC_MATCHER_OPCODE_LTE46,1491
   MONGOC_MATCHER_OPCODE_NE,MONGOC_MATCHER_OPCODE_NE47,1521
   MONGOC_MATCHER_OPCODE_NIN,MONGOC_MATCHER_OPCODE_NIN48,1550
   MONGOC_MATCHER_OPCODE_OR,MONGOC_MATCHER_OPCODE_OR49,1580
   MONGOC_MATCHER_OPCODE_AND,MONGOC_MATCHER_OPCODE_AND50,1609
   MONGOC_MATCHER_OPCODE_NOT,MONGOC_MATCHER_OPCODE_NOT51,1639
   MONGOC_MATCHER_OPCODE_NOR,MONGOC_MATCHER_OPCODE_NOR52,1669
   MONGOC_MATCHER_OPCODE_EXISTS,MONGOC_MATCHER_OPCODE_EXISTS53,1699
   MONGOC_MATCHER_OPCODE_TYPE,MONGOC_MATCHER_OPCODE_TYPE54,1732
} mongoc_matcher_opcode_t;mongoc_matcher_opcode_t55,1763
struct _mongoc_matcher_op_base_t_mongoc_matcher_op_base_t58,1792
   mongoc_matcher_opcode_t opcode;opcode60,1827
struct _mongoc_matcher_op_logical_t_mongoc_matcher_op_logical_t64,1867
   mongoc_matcher_op_base_t base;base66,1905
   mongoc_matcher_op_t *left;left67,1939
   mongoc_matcher_op_t *right;right68,1969
struct _mongoc_matcher_op_compare_t_mongoc_matcher_op_compare_t72,2005
   mongoc_matcher_op_base_t base;base74,2043
   char *path;path75,2077
   bson_iter_t iter;iter76,2092
struct _mongoc_matcher_op_exists_t_mongoc_matcher_op_exists_t80,2118
   mongoc_matcher_op_base_t base;base82,2155
   char *path;path83,2189
   bool exists;exists84,2204
struct _mongoc_matcher_op_type_t_mongoc_matcher_op_type_t88,2225
   mongoc_matcher_op_base_t base;base90,2260
   bson_type_t type;type91,2294
   char *path;path92,2315
struct _mongoc_matcher_op_not_t_mongoc_matcher_op_not_t96,2335
   mongoc_matcher_op_base_t base;base98,2369
   mongoc_matcher_op_t *child;child99,2403
   char *path;path100,2434
union _mongoc_matcher_op_t_mongoc_matcher_op_t104,2454
   mongoc_matcher_op_base_t base;base106,2483
   mongoc_matcher_op_logical_t logical;logical107,2517
   mongoc_matcher_op_compare_t compare;compare108,2557
   mongoc_matcher_op_exists_t exists;exists109,2597
   mongoc_matcher_op_type_t type;type110,2635
   mongoc_matcher_op_not_t not_;not_111,2669

mongo/mongoc/mongoc-topology-description-private.h,1587
#define MONGOC_TOPOLOGY_DESCRIPTION_PRIVATE_HMONGOC_TOPOLOGY_DESCRIPTION_PRIVATE_H18,642
   {__anon8286e322010326,809
      MONGOC_TOPOLOGY_UNKNOWN,MONGOC_TOPOLOGY_UNKNOWN27,814
      MONGOC_TOPOLOGY_SHARDED,MONGOC_TOPOLOGY_SHARDED28,845
      MONGOC_TOPOLOGY_RS_NO_PRIMARY,MONGOC_TOPOLOGY_RS_NO_PRIMARY29,876
      MONGOC_TOPOLOGY_RS_WITH_PRIMARY,MONGOC_TOPOLOGY_RS_WITH_PRIMARY30,913
      MONGOC_TOPOLOGY_SINGLE,MONGOC_TOPOLOGY_SINGLE31,952
      MONGOC_TOPOLOGY_DESCRIPTION_TYPESMONGOC_TOPOLOGY_DESCRIPTION_TYPES32,982
   } mongoc_topology_description_type_t;mongoc_topology_description_type_t33,1022
typedef struct _mongoc_topology_description_t_mongoc_topology_description_t35,1064
   mongoc_topology_description_type_t type;type37,1112
   mongoc_set_t                      *servers;servers38,1156
   char                              *set_name;set_name39,1203
   int64_t                            max_set_version;max_set_version40,1251
   bson_oid_t                         max_election_id;max_election_id41,1306
   bool                               compatible;compatible42,1361
   char                              *compatibility_error;compatibility_error43,1411
   uint32_t                           max_server_id;max_server_id44,1470
   bool                               stale;stale45,1523
} mongoc_topology_description_t;mongoc_topology_description_t46,1568
   {__anon8286e322020349,1615
      MONGOC_SS_READ,MONGOC_SS_READ50,1620
      MONGOC_SS_WRITEMONGOC_SS_WRITE51,1642
   } mongoc_ss_optype_t;mongoc_ss_optype_t52,1664

mongo/mongoc/mongoc-gridfs-file-list-private.h,276
#define MONGOC_GRIDFS_FILE_LIST_PRIVATE_HMONGOC_GRIDFS_FILE_LIST_PRIVATE_H18,637
struct _mongoc_gridfs_file_list_t_mongoc_gridfs_file_list_t34,934
   mongoc_gridfs_t *gridfs;gridfs36,970
   mongoc_cursor_t *cursor;cursor37,998
   bson_error_t     error;error38,1026

mongo/mongoc/mongoc-queue-private.h,561
#define MONGOC_QUEUE_PRIVATE_HMONGOC_QUEUE_PRIVATE_H18,627
#define MONGOC_QUEUE_INITIALIZER MONGOC_QUEUE_INITIALIZER32,860
typedef struct _mongoc_queue_t      mongoc_queue_t;mongoc_queue_t35,907
typedef struct _mongoc_queue_item_t mongoc_queue_item_t;mongoc_queue_item_t36,959
struct _mongoc_queue_t_mongoc_queue_t39,1018
   mongoc_queue_item_t *head;head41,1043
   mongoc_queue_item_t *tail;tail42,1073
struct _mongoc_queue_item_t_mongoc_queue_item_t46,1108
   mongoc_queue_item_t *next;next48,1138
   void                *data;data49,1168

mongo/mongoc/mongoc-stream-tls.h,141
#define MONGOC_STREAM_TLS_HMONGOC_STREAM_TLS_H18,624
typedef struct   _mongoc_stream_tls_t mongoc_stream_tls_t;mongoc_stream_tls_t33,904

mongo/mongoc/mongoc-read-concern.c,697
mongoc_read_concern_new (void)mongoc_read_concern_new36,999
mongoc_read_concern_copy (const mongoc_read_concern_t *read_concern)mongoc_read_concern_copy47,1206
mongoc_read_concern_destroy (mongoc_read_concern_t *read_concern)mongoc_read_concern_destroy67,1612
mongoc_read_concern_get_level (const mongoc_read_concern_t *read_concern)mongoc_read_concern_get_level81,1894
mongoc_read_concern_set_level (mongoc_read_concern_t *read_concern,mongoc_read_concern_set_level105,2571
_mongoc_read_concern_get_bson (mongoc_read_concern_t *read_concern) {_mongoc_read_concern_get_bson134,3336
_mongoc_read_concern_freeze (mongoc_read_concern_t *read_concern)_mongoc_read_concern_freeze154,3888

mongo/mongoc/mongoc-counters.defs,0

mongo/mongoc/mongoc-client-private.h,1531
#define MONGOC_CLIENT_PRIVATE_HMONGOC_CLIENT_PRIVATE_H18,628
#define WIRE_VERSION_MIN WIRE_VERSION_MIN46,1305
#define WIRE_VERSION_MAX WIRE_VERSION_MAX47,1332
#define WIRE_VERSION_AGG_CURSOR WIRE_VERSION_AGG_CURSOR50,1415
#define WIRE_VERSION_WRITE_CMD WIRE_VERSION_WRITE_CMD52,1522
#define WIRE_VERSION_SCRAM_DEFAULT WIRE_VERSION_SCRAM_DEFAULT54,1633
#define WIRE_VERSION_FIND_CMD WIRE_VERSION_FIND_CMD56,1735
#define WIRE_VERSION_KILLCURSORS_CMD WIRE_VERSION_KILLCURSORS_CMD58,1814
#define WIRE_VERSION_FAM_WRITE_CONCERN WIRE_VERSION_FAM_WRITE_CONCERN60,1913
#define WIRE_VERSION_READ_CONCERN WIRE_VERSION_READ_CONCERN62,1997
struct _mongoc_client_t_mongoc_client_t65,2035
   mongoc_list_t             *conns;conns67,2061
   mongoc_uri_t              *uri;uri68,2098
   mongoc_cluster_t           cluster;cluster69,2133
   bool                       in_exhaust;in_exhaust70,2172
   mongoc_stream_initiator_t  initiator;initiator72,2215
   void                      *initiator_data;initiator_data73,2256
   bool                       use_ssl;use_ssl76,2328
   mongoc_ssl_opt_t           ssl_opts;ssl_opts77,2367
   mongoc_topology_t         *topology;topology80,2415
   mongoc_read_prefs_t       *read_prefs;read_prefs82,2456
   mongoc_read_concern_t     *read_concern;read_concern83,2498
   mongoc_write_concern_t    *write_concern;write_concern84,2542
   mongoc_apm_callbacks_t     apm_callbacks;apm_callbacks86,2588
   void                      *apm_context;apm_context87,2633

mongo/mongoc/op-delete.def,0

mongo/mongoc/mongoc-stream-buffered.h,65
#define MONGOC_STREAM_BUFFERED_HMONGOC_STREAM_BUFFERED_H18,629

mongo/mongoc/mongoc-gridfs-file-list.c,452
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN32,948
_mongoc_gridfs_file_list_new (mongoc_gridfs_t *gridfs,_mongoc_gridfs_file_list_new36,1023
mongoc_gridfs_file_list_next (mongoc_gridfs_file_list_t *list)mongoc_gridfs_file_list_next58,1579
mongoc_gridfs_file_list_error (mongoc_gridfs_file_list_t *list,mongoc_gridfs_file_list_error73,1857
mongoc_gridfs_file_list_destroy (mongoc_gridfs_file_list_t *list)mongoc_gridfs_file_list_destroy81,2049

mongo/mongoc/mongoc-gridfs-file-page.h,169
#define MONGOC_GRIDFS_FILE_PAGE_HMONGOC_GRIDFS_FILE_PAGE_H18,629
typedef struct _mongoc_gridfs_file_page_t mongoc_gridfs_file_page_t;mongoc_gridfs_file_page_t34,922

mongo/mongoc/mongoc-client-pool-private.h,73
#define MONGOC_CLIENT_POOL_PRIVATE_HMONGOC_CLIENT_POOL_PRIVATE_H18,633

mongo/mongoc/mongoc-async-cmd.c,1155
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,992
typedef mongoc_async_cmd_result_t (*_mongoc_async_cmd_phase_t)(_mongoc_async_cmd_phase_t37,1027
static const _mongoc_async_cmd_phase_t gMongocCMDPhases[] = {gMongocCMDPhases49,1459
mongoc_async_cmd_tls_setup (mongoc_stream_t *stream,mongoc_async_cmd_tls_setup60,1823
mongoc_async_cmd_run (mongoc_async_cmd_t *acmd)mongoc_async_cmd_run96,3027
_mongoc_async_cmd_init_send (mongoc_async_cmd_t *acmd,_mongoc_async_cmd_init_send127,3783
_mongoc_async_cmd_state_start (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_state_start150,4570
mongoc_async_cmd_new (mongoc_async_t           *async,mongoc_async_cmd_new162,4807
mongoc_async_cmd_destroy (mongoc_async_cmd_t *acmd)mongoc_async_cmd_destroy219,6418
_mongoc_async_cmd_phase_setup (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_setup239,6805
_mongoc_async_cmd_phase_send (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_send268,7491
_mongoc_async_cmd_phase_recv_len (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_recv_len303,8410
_mongoc_async_cmd_phase_recv_rpc (mongoc_async_cmd_t *acmd)_mongoc_async_cmd_phase_recv_rpc348,9936

mongo/mongoc/mongoc-stream-tls-secure-transport.c,1760
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN37,1099
_mongoc_stream_tls_secure_transport_destroy (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_destroy40,1168
_mongoc_stream_tls_secure_transport_failed (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_failed70,2029
_mongoc_stream_tls_secure_transport_close (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_close78,2190
_mongoc_stream_tls_secure_transport_flush (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_flush92,2575
_mongoc_stream_tls_secure_transport_write (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_write103,2896
#define MONGOC_STREAM_TLS_BUFFER_SIZE MONGOC_STREAM_TLS_BUFFER_SIZE154,4235
_mongoc_stream_tls_secure_transport_writev (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_writev156,4293
_mongoc_stream_tls_secure_transport_readv (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_readv276,8001
_mongoc_stream_tls_secure_transport_setsockopt (mongoc_stream_t *stream,_mongoc_stream_tls_secure_transport_setsockopt347,9918
_mongoc_stream_tls_secure_transport_get_base_stream (mongoc_stream_t *stream)_mongoc_stream_tls_secure_transport_get_base_stream366,10768
_mongoc_stream_tls_secure_transport_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_tls_secure_transport_check_closed378,11112
mongoc_stream_tls_secure_transport_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_secure_transport_do_handshake389,11483
mongoc_stream_tls_secure_transport_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_secure_transport_check_cert412,12489
mongoc_stream_tls_secure_transport_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_secure_transport_new442,13464

mongo/mongoc/mongoc-host-list-private.h,69
#define MONGOC_HOST_LIST_PRIVATE_HMONGOC_HOST_LIST_PRIVATE_H18,631

mongo/mongoc/mongoc-stream-tls-openssl.h,71
#define MONGOC_STREAM_TLS_OPENSSL_HMONGOC_STREAM_TLS_OPENSSL_H18,632

mongo/mongoc/mongoc-server-description.h,179
#define MONGOC_SERVER_DESCRIPTION_HMONGOC_SERVER_DESCRIPTION_H18,632
typedef struct _mongoc_server_description_t mongoc_server_description_t;mongoc_server_description_t25,750

mongo/mongoc/mongoc-counters.c,1150
{__anon9991607a010840,907
   uint32_t offset;offset41,909
   uint32_t slot;slot42,929
   char          category[24];category43,947
   char          name[32];name44,978
   char          description[64];description45,1005
} mongoc_counter_info_t;mongoc_counter_info_t46,1039
{__anon9991607a020855,1172
   uint32_t size;size56,1174
   uint32_t n_cpu;n_cpu57,1192
   uint32_t n_counters;n_counters58,1211
   uint32_t infos_offset;infos_offset59,1235
   uint32_t values_offset;values_offset60,1261
   uint8_t  padding[44];padding61,1288
} mongoc_counters_t;mongoc_counters_t62,1313
static void *gCounterFallback = NULL;gCounterFallback68,1405
#define COUNTER(COUNTER71,1445
mongoc_counters_use_shm (void)mongoc_counters_use_shm86,1830
mongoc_counters_calc_size (void)mongoc_counters_calc_size103,2179
_mongoc_counters_cleanup (void)_mongoc_counters_cleanup129,2736
mongoc_counters_alloc (size_t size)mongoc_counters_alloc157,3370
mongoc_counters_register (mongoc_counters_t *counters,mongoc_counters_register224,4827
_mongoc_counters_init (void)_mongoc_counters_init276,6368
#define COUNTER(COUNTER297,6969

mongo/mongoc/mongoc-database.c,2938
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN35,1096
_mongoc_database_new (mongoc_client_t              *client,_mongoc_database_new59,1670
mongoc_database_destroy (mongoc_database_t *database)mongoc_database_destroy107,2922
mongoc_database_copy (mongoc_database_t *database)mongoc_database_copy151,3862
mongoc_database_command (mongoc_database_t         *database,mongoc_database_command163,4175
mongoc_database_command_simple (mongoc_database_t         *database,mongoc_database_command_simple187,5223
mongoc_database_drop (mongoc_database_t *database,mongoc_database_drop226,6597
mongoc_database_add_user_legacy (mongoc_database_t *database,mongoc_database_add_user_legacy261,7435
mongoc_database_remove_user (mongoc_database_t *database,mongoc_database_remove_user340,9573
mongoc_database_remove_all_users (mongoc_database_t *database,mongoc_database_remove_all_users384,10788
mongoc_database_add_user (mongoc_database_t *database,mongoc_database_add_user436,12242
mongoc_database_get_read_prefs (const mongoc_database_t *database) /* IN */mongoc_database_get_read_prefs518,14716
mongoc_database_set_read_prefs (mongoc_database_t         *database,mongoc_database_set_read_prefs542,15193
mongoc_database_get_read_concern (const mongoc_database_t *database)mongoc_database_get_read_concern575,15995
mongoc_database_set_read_concern (mongoc_database_t            *database,mongoc_database_set_read_concern600,16465
mongoc_database_get_write_concern (const mongoc_database_t *database)mongoc_database_get_write_concern633,17301
mongoc_database_set_write_concern (mongoc_database_t            *database,mongoc_database_set_write_concern658,17775
mongoc_database_has_collection (mongoc_database_t *database,mongoc_database_has_collection692,18808
{__anon3f91ec5c0108745,19989
   const char *dbname;dbname746,19991
   size_t      dbname_len;dbname_len747,20014
   const char *name;name748,20041
} mongoc_database_find_collections_legacy_ctx_t;mongoc_database_find_collections_legacy_ctx_t749,20062
_mongoc_database_find_collections_legacy_filter (const bson_t *bson,_mongoc_database_find_collections_legacy_filter752,20150
_mongoc_database_find_collections_legacy_mutate (const bson_t *bson,_mongoc_database_find_collections_legacy_mutate772,20796
_mongoc_database_find_collections_legacy (mongoc_database_t *database,_mongoc_database_find_collections_legacy786,21348
mongoc_database_find_collections (mongoc_database_t *database,mongoc_database_find_collections861,23911
mongoc_database_get_collection_names (mongoc_database_t *database,mongoc_database_get_collection_names914,25595
mongoc_database_create_collection (mongoc_database_t *database,mongoc_database_create_collection964,26812
mongoc_database_get_collection (mongoc_database_t *database,mongoc_database_get_collection1124,32618
mongoc_database_get_name (mongoc_database_t *database)mongoc_database_get_name1137,33038

mongo/mongoc/mongoc-cursor-array.c,1320
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,902
{__anon0ebc6df1010834,960
   bson_t         array;array35,962
   bool           has_array;has_array36,987
   bool           has_synthetic_bson;has_synthetic_bson37,1016
   bson_iter_t    iter;iter38,1054
   bson_t         bson;   /* current document */bson39,1078
   const char    *field_name;field_name40,1127
} mongoc_cursor_array_t;mongoc_cursor_array_t41,1157
_mongoc_cursor_array_new (const char *field_name)_mongoc_cursor_array_new45,1198
_mongoc_cursor_array_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_array_destroy61,1485
_mongoc_cursor_array_prime (mongoc_cursor_t *cursor)_mongoc_cursor_array_prime85,1867
_mongoc_cursor_array_next (mongoc_cursor_t *cursor,_mongoc_cursor_array_next109,2382
_mongoc_cursor_array_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_array_clone141,3062
_mongoc_cursor_array_more (mongoc_cursor_t *cursor)_mongoc_cursor_array_more158,3401
_mongoc_cursor_array_error  (mongoc_cursor_t *cursor,_mongoc_cursor_array_error181,3792
static mongoc_cursor_interface_t gMongocCursorArray = {gMongocCursorArray198,4124
_mongoc_cursor_array_init (mongoc_cursor_t *cursor,_mongoc_cursor_array_init208,4345
_mongoc_cursor_array_set_bson (mongoc_cursor_t *cursor,_mongoc_cursor_array_set_bson230,4806

mongo/mongoc/mongoc-rand-openssl.c,385
int _mongoc_rand_bytes(uint8_t * buf, int num) {_mongoc_rand_bytes28,761
int _mongoc_pseudo_rand_bytes(uint8_t * buf, int num) {_mongoc_pseudo_rand_bytes32,846
void mongoc_rand_seed(const void* buf, int num) {mongoc_rand_seed36,945
void mongoc_rand_add(const void* buf, int num, double entropy) {mongoc_rand_add40,1023
int mongoc_rand_status(void) {mongoc_rand_status44,1124

mongo/mongoc/mongoc-cluster-private.h,1161
#define MONGOC_CLUSTER_PRIVATE_HMONGOC_CLUSTER_PRIVATE_H18,629
typedef struct _mongoc_cluster_node_t_mongoc_cluster_node_t45,1285
   mongoc_stream_t *stream;stream47,1325
   int32_t          max_wire_version;max_wire_version49,1354
   int32_t          min_wire_version;min_wire_version50,1392
   int32_t          max_write_batch_size;max_write_batch_size51,1430
   int32_t          max_bson_obj_size;max_bson_obj_size52,1472
   int32_t          max_msg_size;max_msg_size53,1511
   int64_t          timestamp;timestamp55,1546
} mongoc_cluster_node_t;mongoc_cluster_node_t56,1577
typedef struct _mongoc_cluster_t_mongoc_cluster_t58,1603
   int64_t          operation_id;operation_id60,1638
   uint32_t         request_id;request_id61,1672
   uint32_t         sockettimeoutms;sockettimeoutms62,1704
   uint32_t         socketcheckintervalms;socketcheckintervalms63,1741
   mongoc_uri_t    *uri;uri64,1784
   unsigned         requires_auth : 1;requires_auth65,1809
   mongoc_client_t *client;client67,1849
   mongoc_set_t    *nodes;nodes69,1878
   mongoc_array_t   iov;iov70,1905
} mongoc_cluster_t;mongoc_cluster_t71,1930

mongo/mongoc/Makefile.am,410
headerdir = $(prefix)/include/libmongoc-@MONGOC_API_VERSION@headerdir1,0
headerdir = $(prefix)/include/libmongoc-@MONGOC_API_VERSION@header1,0
header_DATA = \header_DATA2,61
	$(INST_H_FILES) \$(INST_H_FILES)3,77
	$(MONGOC_DEF_FILES) \$(MONGOC_DEF_FILES)4,96
	src/mongoc/mongoc-config.hsrc/mongoc/mongoc-config.h5,119
MONGOC_DEF_FILES = \MONGOC_DEF_FILES7,148
INST_H_FILES = \INST_H_FILES19,458

mongo/mongoc/mongoc-write-concern.c,2392
_mongoc_write_concern_warn_frozen (mongoc_write_concern_t *write_concern)_mongoc_write_concern_warn_frozen24,723
mongoc_write_concern_new (void)mongoc_write_concern_new46,1246
mongoc_write_concern_copy (const mongoc_write_concern_t *write_concern)mongoc_write_concern_copy60,1643
mongoc_write_concern_destroy (mongoc_write_concern_t *write_concern)mongoc_write_concern_destroy85,2252
mongoc_write_concern_get_fsync (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_fsync100,2587
mongoc_write_concern_set_fsync (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_fsync116,2996
mongoc_write_concern_get_journal (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_journal128,3280
mongoc_write_concern_journal_is_set (mongoc_write_concern_journal_is_set136,3446
mongoc_write_concern_set_journal (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_journal153,3882
mongoc_write_concern_get_w (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_w165,4169
mongoc_write_concern_set_w (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_w184,4698
mongoc_write_concern_get_wtimeout (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wtimeout197,4981
mongoc_write_concern_set_wtimeout (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wtimeout216,5521
mongoc_write_concern_get_wmajority (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wmajority232,5873
mongoc_write_concern_set_wmajority (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wmajority252,6538
mongoc_write_concern_get_wtag (const mongoc_write_concern_t *write_concern)mongoc_write_concern_get_wtag268,6954
mongoc_write_concern_set_wtag (mongoc_write_concern_t *write_concern,mongoc_write_concern_set_wtag281,7187
_mongoc_write_concern_get_bson (mongoc_write_concern_t *write_concern) {_mongoc_write_concern_get_bson308,8013
_mongoc_write_concern_get_gle (mongoc_write_concern_t *write_concern) {_mongoc_write_concern_get_gle331,8694
_mongoc_write_concern_freeze (mongoc_write_concern_t *write_concern)_mongoc_write_concern_freeze351,9260
mongoc_write_concern_is_acknowledged (mongoc_write_concern_is_acknowledged404,10828
mongoc_write_concern_is_valid (const mongoc_write_concern_t *write_concern)mongoc_write_concern_is_valid427,11494

mongo/mongoc/mongoc-gridfs.c,1181
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
#define MONGOC_GRIDFS_STREAM_CHUNK MONGOC_GRIDFS_STREAM_CHUNK36,1119
_mongoc_gridfs_ensure_index (mongoc_gridfs_t *gridfs,_mongoc_gridfs_ensure_index48,1350
_mongoc_gridfs_new (mongoc_client_t *client,_mongoc_gridfs_new87,2084
mongoc_gridfs_drop (mongoc_gridfs_t *gridfs,mongoc_gridfs_drop143,3624
mongoc_gridfs_destroy (mongoc_gridfs_t *gridfs)mongoc_gridfs_destroy165,3945
mongoc_gridfs_find (mongoc_gridfs_t *gridfs,mongoc_gridfs_find182,4229
mongoc_gridfs_find_one (mongoc_gridfs_t *gridfs,mongoc_gridfs_find_one191,4439
mongoc_gridfs_find_one_by_filename (mongoc_gridfs_t *gridfs,mongoc_gridfs_find_one_by_filename213,4954
mongoc_gridfs_create_file_from_stream (mongoc_gridfs_t          *gridfs,mongoc_gridfs_create_file_from_stream238,5503
mongoc_gridfs_create_file (mongoc_gridfs_t          *gridfs,mongoc_gridfs_create_file284,6617
mongoc_gridfs_get_files (mongoc_gridfs_t *gridfs)mongoc_gridfs_get_files300,6942
mongoc_gridfs_get_chunks (mongoc_gridfs_t *gridfs)mongoc_gridfs_get_chunks308,7070
mongoc_gridfs_remove_by_filename (mongoc_gridfs_t *gridfs,mongoc_gridfs_remove_by_filename317,7184

mongo/mongoc/mongoc-matcher-private.h,205
#define MONGOC_MATCHER_PRIVATE_HMONGOC_MATCHER_PRIVATE_H18,629
struct _mongoc_matcher_t_mongoc_matcher_t32,870
   bson_t               query;query34,897
   mongoc_matcher_op_t *optree;optree35,928

mongo/mongoc/mongoc-list.c,357
_mongoc_list_append (mongoc_list_t *list,_mongoc_list_append31,854
_mongoc_list_prepend (mongoc_list_t *list,_mongoc_list_prepend60,1453
_mongoc_list_remove (mongoc_list_t *list,_mongoc_list_remove83,1918
_mongoc_list_foreach (mongoc_list_t *list,_mongoc_list_foreach118,2612
_mongoc_list_destroy (mongoc_list_t *list)_mongoc_list_destroy139,3025

mongo/mongoc/op-query.def,0

mongo/mongoc/mongoc-ssl.c,401
#define MONGOC_SSL_DEFAULT_TRUST_FILE MONGOC_SSL_DEFAULT_TRUST_FILE34,1048
#define MONGOC_SSL_DEFAULT_TRUST_DIR MONGOC_SSL_DEFAULT_TRUST_DIR37,1135
mongoc_ssl_opt_t gMongocSslOptDefault = {gMongocSslOptDefault41,1192
mongoc_ssl_opt_get_default (void)mongoc_ssl_opt_get_default49,1348
mongoc_ssl_extract_subject (const char *filename, const char *passphrase)mongoc_ssl_extract_subject55,1427

mongo/mongoc/mongoc-opcode.c,91
_mongoc_opcode_needs_primary (mongoc_opcode_t opcode)_mongoc_opcode_needs_primary37,1011

mongo/mongoc/mongoc-cursor-cursorid-private.h,381
#define MONGOC_CURSOR_CURSORID_PRIVATE_HMONGOC_CURSOR_CURSORID_PRIVATE_H18,637
{__anon361e186a010833,897
   bson_t     *array;array34,899
   bool        in_batch;in_batch35,921
   bool        in_reader;in_reader36,946
   bson_iter_t batch_iter;batch_iter37,972
   bson_t      current_doc;current_doc38,999
} mongoc_cursor_cursorid_t;mongoc_cursor_cursorid_t39,1027

mongo/mongoc/mongoc-crypto-common-crypto.c,217
mongoc_crypto_common_crypto_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_common_crypto_hmac_sha127,824
mongoc_crypto_common_crypto_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_common_crypto_sha144,1382

mongo/mongoc/mongoc-bulk-operation.h,335
#define MONGOC_BULK_OPERATION_HMONGOC_BULK_OPERATION_H19,629
#define MONGOC_BULK_WRITE_FLAGS_INIT MONGOC_BULK_WRITE_FLAGS_INIT26,717
typedef struct _mongoc_bulk_operation_t mongoc_bulk_operation_t;mongoc_bulk_operation_t31,826
typedef struct _mongoc_bulk_write_flags_t mongoc_bulk_write_flags_t;mongoc_bulk_write_flags_t32,891

mongo/mongoc/mongoc-cursor-private.h,2493
#define MONGOC_CURSOR_PRIVATE_HMONGOC_CURSOR_PRIVATE_H18,628
typedef struct _mongoc_cursor_interface_t mongoc_cursor_interface_t;mongoc_cursor_interface_t34,964
struct _mongoc_cursor_interface_t_mongoc_cursor_interface_t37,1035
   mongoc_cursor_t *(*clone)    (const mongoc_cursor_t  *cursor);clone39,1071
   void             (*destroy)  (mongoc_cursor_t        *cursor);destroy40,1137
   bool             (*more)     (mongoc_cursor_t        *cursor);more41,1203
   bool             (*next)     (mongoc_cursor_t        *cursor,next42,1269
   bool             (*error)    (mongoc_cursor_t        *cursor,error44,1398
   void             (*get_host) (mongoc_cursor_t        *cursor,get_host46,1528
struct _mongoc_cursor_t_mongoc_cursor_t51,1662
   mongoc_client_t           *client;client53,1688
   uint32_t                   server_id;server_id55,1727
   uint32_t                   stamp;stamp56,1768
   unsigned                   is_command      : 1;is_command58,1806
   unsigned                   sent            : 1;sent59,1857
   unsigned                   done            : 1;done60,1908
   unsigned                   end_of_event    : 1;end_of_event61,1959
   unsigned                   has_fields      : 1;has_fields62,2010
   unsigned                   in_exhaust      : 1;in_exhaust63,2061
   bson_t                     query;query65,2113
   bson_t                     fields;fields66,2150
   mongoc_read_concern_t     *read_concern;read_concern68,2189
   mongoc_read_prefs_t       *read_prefs;read_prefs69,2233
   mongoc_query_flags_t       flags;flags71,2276
   uint32_t                   skip;skip72,2313
   int64_t                    limit;limit73,2349
   uint32_t                   count;count74,2386
   uint32_t                   batch_size;batch_size75,2423
   uint32_t                   max_await_time_ms;max_await_time_ms76,2465
   char                       ns [140];ns78,2515
   uint32_t                   nslen;nslen79,2555
   uint32_t                   dblen;dblen80,2592
   bson_error_t               error;error82,2630
   mongoc_rpc_t               rpc;rpc85,2712
   mongoc_buffer_t            buffer;buffer86,2747
   bson_reader_t             *reader;reader87,2785
   const bson_t              *current;current88,2823
   mongoc_cursor_interface_t  iface;iface90,2863
   void                      *iface_data;iface_data91,2900
   int64_t                    operation_id;operation_id93,2943

mongo/mongoc/mongoc-array.c,303
_mongoc_array_init (mongoc_array_t *array,_mongoc_array_init22,638
_mongoc_array_copy (mongoc_array_t       *dst,_mongoc_array_copy52,1277
_mongoc_array_destroy (mongoc_array_t *array)_mongoc_array_destroy66,1620
_mongoc_array_append_vals (mongoc_array_t *array,_mongoc_array_append_vals75,1743

mongo/mongoc/mongoc-log-private.h,57
#define MONGOC_LOG_PRIVATE_HMONGOC_LOG_PRIVATE_H18,625

mongo/mongoc/mongoc-config.h.in,709
#define MONGOC_CONFIG_HMONGOC_CONFIG_H19,620
#define MONGOC_ENABLE_SECURE_TRANSPORT MONGOC_ENABLE_SECURE_TRANSPORT26,778
#define MONGOC_ENABLE_COMMON_CRYPTO MONGOC_ENABLE_COMMON_CRYPTO37,1072
#define MONGOC_ENABLE_OPENSSL MONGOC_ENABLE_OPENSSL48,1333
#define MONGOC_ENABLE_LIBCRYPTO MONGOC_ENABLE_LIBCRYPTO59,1572
#define MONGOC_ENABLE_SSL MONGOC_ENABLE_SSL70,1813
#define MONGOC_ENABLE_CRYPTO MONGOC_ENABLE_CRYPTO81,2036
#define MONGOC_ENABLE_SASL MONGOC_ENABLE_SASL92,2263
#define MONGOC_HAVE_SASL_CLIENT_DONE MONGOC_HAVE_SASL_CLIENT_DONE104,2562
#define MONGOC_HAVE_WEAK_SYMBOLS MONGOC_HAVE_WEAK_SYMBOLS117,2984
#define MONGOC_NO_AUTOMATIC_GLOBALS MONGOC_NO_AUTOMATIC_GLOBALS128,3255

mongo/mongoc/mongoc-stream-tls-openssl-bio-private.h,95
#define MONGOC_STREAM_TLS_OPENSSL_BIO_PRIVATE_HMONGOC_STREAM_TLS_OPENSSL_BIO_PRIVATE_H18,644

mongo/mongoc/mongoc-stream-socket.c,1321
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN24,719
struct _mongoc_stream_socket_t_mongoc_stream_socket_t27,756
   mongoc_stream_t  vtable;vtable29,789
   mongoc_socket_t *sock;sock30,817
get_expiration (int32_t timeout_msec)get_expiration35,875
_mongoc_stream_socket_close (mongoc_stream_t *stream)_mongoc_stream_socket_close48,1119
_mongoc_stream_socket_destroy (mongoc_stream_t *stream)_mongoc_stream_socket_destroy67,1407
_mongoc_stream_socket_failed (mongoc_stream_t *stream)_mongoc_stream_socket_failed87,1698
_mongoc_stream_socket_setsockopt (mongoc_stream_t *stream,_mongoc_stream_socket_setsockopt98,1834
_mongoc_stream_socket_flush (mongoc_stream_t *stream)_mongoc_stream_socket_flush119,2381
_mongoc_stream_socket_readv (mongoc_stream_t *stream,_mongoc_stream_socket_readv127,2481
_mongoc_stream_socket_writev (mongoc_stream_t *stream,_mongoc_stream_socket_writev193,4118
_mongoc_stream_socket_poll (mongoc_stream_poll_t *streams,_mongoc_stream_socket_poll216,4702
mongoc_stream_socket_get_socket (mongoc_stream_socket_t *stream) /* IN */mongoc_stream_socket_get_socket257,5536
_mongoc_stream_socket_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_socket_check_closed266,5678
mongoc_stream_socket_new (mongoc_socket_t *sock) /* IN */mongoc_stream_socket_new300,6344

mongo/mongoc/op-msg.def,0

mongo/mongoc/mongoc-write-concern-private.h,609
#define MONGOC_WRITE_CONCERN_PRIVATE_HMONGOC_WRITE_CONCERN_PRIVATE_H18,635
#define MONGOC_WRITE_CONCERN_FSYNC_DEFAULT MONGOC_WRITE_CONCERN_FSYNC_DEFAULT30,842
#define MONGOC_WRITE_CONCERN_JOURNAL_DEFAULT MONGOC_WRITE_CONCERN_JOURNAL_DEFAULT31,890
struct _mongoc_write_concern_t_mongoc_write_concern_t34,940
   int8_t    fsync_;fsync_36,973
   int8_t    journal;journal37,994
   int32_t   w;w38,1016
   int32_t   wtimeout;wtimeout39,1032
   char     *wtag;wtag40,1055
   bool      frozen;frozen41,1074
   bson_t    compiled;compiled42,1095
   bson_t    compiled_gle;compiled_gle43,1118

mongo/mongoc/mongoc-read-concern-private.h,236
#define MONGOC_READ_CONCERN_PRIVATE_HMONGOC_READ_CONCERN_PRIVATE_H18,634
struct _mongoc_read_concern_t_mongoc_read_concern_t31,873
   char   *level;level33,905
   bool    frozen;frozen34,923
   bson_t  compiled;compiled35,942

mongo/mongoc/mongoc-log.c,1164
static mongoc_mutex_t     gLogMutex;gLogMutex33,856
static mongoc_log_func_t  gLogFunc = mongoc_log_default_handler;gLogFunc34,893
static bool               gLogTrace = true;gLogTrace36,978
static void              *gLogData;gLogData38,1029
static MONGOC_ONCE_FUN( _mongoc_ensure_mutex_once)MONGOC_ONCE_FUN40,1066
mongoc_log_set_handler (mongoc_log_func_t  log_func,mongoc_log_set_handler48,1185
_mongoc_log_get_handler (mongoc_log_func_t  *log_func,_mongoc_log_get_handler63,1546
mongoc_log (mongoc_log_level_t  log_level,mongoc_log72,1719
mongoc_log_level_str (mongoc_log_level_t log_level)mongoc_log_level_str107,2494
mongoc_log_default_handler (mongoc_log_level_t  log_level,mongoc_log_default_handler131,3012
_mongoc_log_trace_is_enabled (void)_mongoc_log_trace_is_enabled191,4306
mongoc_log_trace_enable (void)mongoc_log_trace_enable201,4423
mongoc_log_trace_disable (void)mongoc_log_trace_disable209,4512
mongoc_log_trace_bytes (const char *domain, const uint8_t *_b, size_t _l)mongoc_log_trace_bytes217,4603
mongoc_log_trace_iovec (const char *domain, const mongoc_iovec_t *_iov, size_t _iovcnt)mongoc_log_trace_iovec266,5753

mongo/mongoc/mongoc-find-and-modify.c,1111
mongoc_find_and_modify_opts_new (void)mongoc_find_and_modify_opts_new34,1028
mongoc_find_and_modify_opts_set_sort (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_sort46,1324
mongoc_find_and_modify_opts_set_update (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_update60,1649
mongoc_find_and_modify_opts_set_fields (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_fields74,1988
mongoc_find_and_modify_opts_set_flags (mongoc_find_and_modify_opts_t        *opts,mongoc_find_and_modify_opts_set_flags88,2327
mongoc_find_and_modify_opts_set_bypass_document_validation (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_bypass_document_validation98,2568
mongoc_find_and_modify_opts_set_max_time_ms (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_set_max_time_ms110,2955
mongoc_find_and_modify_opts_append (mongoc_find_and_modify_opts_t *opts,mongoc_find_and_modify_opts_append120,3212
mongoc_find_and_modify_opts_destroy (mongoc_find_and_modify_opts_t *opts)mongoc_find_and_modify_opts_destroy136,3627

mongo/mongoc/mongoc-apm.c,3533
mongoc_apm_command_started_init (mongoc_apm_command_started_t *event,mongoc_apm_command_started_init31,896
mongoc_apm_command_started_cleanup (mongoc_apm_command_started_t *event)mongoc_apm_command_started_cleanup82,2924
mongoc_apm_command_succeeded_init (mongoc_apm_command_succeeded_t *event,mongoc_apm_command_succeeded_init91,3081
mongoc_apm_command_succeeded_cleanup (mongoc_apm_command_succeeded_t *event)mongoc_apm_command_succeeded_cleanup115,4064
mongoc_apm_command_failed_init (mongoc_apm_command_failed_t *event,mongoc_apm_command_failed_init122,4167
mongoc_apm_command_failed_cleanup (mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_cleanup144,5071
mongoc_apm_command_started_get_command (mongoc_apm_command_started_get_command157,5247
mongoc_apm_command_started_get_database_name (mongoc_apm_command_started_get_database_name165,5379
mongoc_apm_command_started_get_command_name (mongoc_apm_command_started_get_command_name173,5523
mongoc_apm_command_started_get_request_id (mongoc_apm_command_started_get_request_id181,5660
mongoc_apm_command_started_get_operation_id (mongoc_apm_command_started_get_operation_id189,5793
mongoc_apm_command_started_get_host (const mongoc_apm_command_started_t *event)mongoc_apm_command_started_get_host197,5949
mongoc_apm_command_started_get_server_id (const mongoc_apm_command_started_t *event)mongoc_apm_command_started_get_server_id204,6067
mongoc_apm_command_started_get_context (mongoc_apm_command_started_get_context211,6193
mongoc_apm_command_succeeded_get_duration (mongoc_apm_command_succeeded_get_duration221,6358
mongoc_apm_command_succeeded_get_reply (mongoc_apm_command_succeeded_get_reply229,6498
mongoc_apm_command_succeeded_get_command_name (mongoc_apm_command_succeeded_get_command_name237,6630
mongoc_apm_command_succeeded_get_request_id (mongoc_apm_command_succeeded_get_request_id245,6771
mongoc_apm_command_succeeded_get_operation_id (mongoc_apm_command_succeeded_get_operation_id253,6908
mongoc_apm_command_succeeded_get_host (mongoc_apm_command_succeeded_get_host261,7068
mongoc_apm_command_succeeded_get_server_id (mongoc_apm_command_succeeded_get_server_id269,7194
mongoc_apm_command_succeeded_get_context (mongoc_apm_command_succeeded_get_context277,7328
mongoc_apm_command_failed_get_duration (mongoc_apm_command_failed_get_duration287,7494
mongoc_apm_command_failed_get_command_name (mongoc_apm_command_failed_get_command_name295,7626
mongoc_apm_command_failed_get_error (mongoc_apm_command_failed_get_error303,7758
mongoc_apm_command_failed_get_request_id (mongoc_apm_command_failed_get_request_id312,7955
mongoc_apm_command_failed_get_operation_id (mongoc_apm_command_failed_get_operation_id320,8086
mongoc_apm_command_failed_get_host (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_host328,8240
mongoc_apm_command_failed_get_server_id (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_server_id335,8356
mongoc_apm_command_failed_get_context (const mongoc_apm_command_failed_t *event)mongoc_apm_command_failed_get_context342,8480
mongoc_apm_callbacks_new (void)mongoc_apm_callbacks_new353,8651
mongoc_apm_callbacks_destroy (mongoc_apm_callbacks_t *callbacks)mongoc_apm_callbacks_destroy362,8797
mongoc_apm_set_command_started_cb (mongoc_apm_set_command_started_cb369,8899
mongoc_apm_set_command_succeeded_cb (mongoc_apm_set_command_succeeded_cb378,9061
mongoc_apm_set_command_failed_cb (mongoc_apm_set_command_failed_cb387,9231

mongo/mongoc/mongoc-b64-private.h,57
#define MONGOC_B64_PRIVATE_HMONGOC_B64_PRIVATE_H18,624

mongo/mongoc/mongoc-openssl.c,1333
static mongoc_mutex_t * gMongocOpenSslThreadLocks;gMongocOpenSslThreadLocks39,1052
_mongoc_openssl_init (void)_mongoc_openssl_init53,1371
_mongoc_openssl_cleanup (void)_mongoc_openssl_cleanup77,1896
_mongoc_openssl_password_cb (char *buf,_mongoc_openssl_password_cb83,1981
_mongoc_openssl_hostcheck (const char *pattern,_mongoc_openssl_hostcheck110,2564
_mongoc_openssl_check_cert (SSL        *ssl,_mongoc_openssl_check_cert166,4453
_mongoc_openssl_setup_ca (SSL_CTX    *ctx,_mongoc_openssl_setup_ca297,8117
_mongoc_openssl_setup_crl (SSL_CTX    *ctx,_mongoc_openssl_setup_crl313,8424
_mongoc_openssl_setup_pem_file (SSL_CTX    *ctx,_mongoc_openssl_setup_pem_file332,8852
_mongoc_openssl_ctx_new (mongoc_ssl_opt_t *opt)_mongoc_openssl_ctx_new366,9678
_mongoc_openssl_extract_subject (const char *filename, const char *passphrase)_mongoc_openssl_extract_subject423,11431
_mongoc_openssl_thread_id_callback (void)_mongoc_openssl_thread_id_callback474,12442
_mongoc_openssl_thread_id_callback (void)_mongoc_openssl_thread_id_callback485,12602
_mongoc_openssl_thread_locking_callback (int         mode,_mongoc_openssl_thread_locking_callback496,12748
_mongoc_openssl_thread_startup (void)_mongoc_openssl_thread_startup509,13169
_mongoc_openssl_thread_cleanup (void)_mongoc_openssl_thread_cleanup526,13649

mongo/mongoc/mongoc-topology-scanner.c,2255
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN34,969
mongoc_topology_scanner_new (const mongoc_uri_t          *uri,mongoc_topology_scanner_new44,1453
mongoc_topology_scanner_set_ssl_opts (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_set_ssl_opts63,1971
mongoc_topology_scanner_set_stream_initiator (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_set_stream_initiator72,2195
mongoc_topology_scanner_destroy (mongoc_topology_scanner_t *ts)mongoc_topology_scanner_destroy82,2513
mongoc_topology_scanner_add (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_add97,2862
mongoc_topology_scanner_add_and_scan (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_add_and_scan117,3333
mongoc_topology_scanner_node_retire (mongoc_topology_scanner_node_t *node)mongoc_topology_scanner_node_retire143,4249
mongoc_topology_scanner_node_disconnect (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_disconnect153,4443
mongoc_topology_scanner_node_destroy (mongoc_topology_scanner_node_t *node, bool failed)mongoc_topology_scanner_node_destroy179,5017
mongoc_topology_scanner_get_node (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_get_node198,5582
mongoc_topology_scanner_has_node_for_host (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_has_node_for_host227,6230
mongoc_topology_scanner_ismaster_handler (mongoc_async_cmd_result_t async_status,mongoc_topology_scanner_ismaster_handler252,6871
mongoc_topology_scanner_node_connect_tcp (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_connect_tcp314,8830
mongoc_topology_scanner_node_connect_unix (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_connect_unix388,10899
mongoc_topology_scanner_node_setup (mongoc_topology_scanner_node_t *node,mongoc_topology_scanner_node_setup462,12908
mongoc_topology_scanner_start (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_start526,14986
mongoc_topology_scanner_work (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_work579,16519
mongoc_topology_scanner_sum_errors (mongoc_topology_scanner_t *ts,mongoc_topology_scanner_sum_errors604,17067
mongoc_topology_scanner_reset (mongoc_topology_scanner_t *ts)mongoc_topology_scanner_reset644,18157

mongo/mongoc/mongoc-socket-private.h,193
#define MONGOC_SOCKET_PRIVATE_HMONGOC_SOCKET_PRIVATE_H18,628
struct _mongoc_socket_t_mongoc_socket_t28,829
   SOCKET sd;sd31,869
   int errno_;errno_35,907
   int domain;domain36,922

mongo/mongoc/mongoc-stream-gridfs.c,979
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN30,875
{__anon47a480ff010834,934
   mongoc_stream_t       stream;stream35,936
   mongoc_gridfs_file_t *file;file36,969
} mongoc_stream_gridfs_t;mongoc_stream_gridfs_t37,1000
_mongoc_stream_gridfs_destroy (mongoc_stream_t *stream)_mongoc_stream_gridfs_destroy41,1040
_mongoc_stream_gridfs_failed (mongoc_stream_t *stream)_mongoc_stream_gridfs_failed59,1303
_mongoc_stream_gridfs_close (mongoc_stream_t *stream)_mongoc_stream_gridfs_close70,1439
_mongoc_stream_gridfs_flush (mongoc_stream_t *stream)_mongoc_stream_gridfs_flush85,1700
_mongoc_stream_gridfs_readv (mongoc_stream_t *stream,_mongoc_stream_gridfs_readv101,1966
_mongoc_stream_gridfs_writev (mongoc_stream_t *stream,_mongoc_stream_gridfs_writev127,2663
_mongoc_stream_gridfs_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_gridfs_check_closed154,3252
mongoc_stream_gridfs_new (mongoc_gridfs_file_t *file)mongoc_stream_gridfs_new161,3363

mongo/mongoc/mongoc-list-private.h,225
#define MONGOC_LIST_HMONGOC_LIST_H18,618
typedef struct _mongoc_list_t mongoc_list_t;mongoc_list_t30,808
struct _mongoc_list_t_mongoc_list_t33,855
   mongoc_list_t *next;next35,879
   void          *data;data36,903

mongo/mongoc/mongoc-error.h,4072
#define MONGOC_ERRORS_HMONGOC_ERRORS_H18,620
{__anon6cec4b56010331,819
   MONGOC_ERROR_CLIENT = 1,MONGOC_ERROR_CLIENT32,821
   MONGOC_ERROR_STREAM,MONGOC_ERROR_STREAM33,849
   MONGOC_ERROR_PROTOCOL,MONGOC_ERROR_PROTOCOL34,873
   MONGOC_ERROR_CURSOR,MONGOC_ERROR_CURSOR35,899
   MONGOC_ERROR_QUERY,MONGOC_ERROR_QUERY36,923
   MONGOC_ERROR_INSERT,MONGOC_ERROR_INSERT37,946
   MONGOC_ERROR_SASL,MONGOC_ERROR_SASL38,970
   MONGOC_ERROR_BSON,MONGOC_ERROR_BSON39,992
   MONGOC_ERROR_MATCHER,MONGOC_ERROR_MATCHER40,1014
   MONGOC_ERROR_NAMESPACE,MONGOC_ERROR_NAMESPACE41,1039
   MONGOC_ERROR_COMMAND,MONGOC_ERROR_COMMAND42,1066
   MONGOC_ERROR_COLLECTION,MONGOC_ERROR_COLLECTION43,1091
   MONGOC_ERROR_GRIDFS,MONGOC_ERROR_GRIDFS44,1119
   MONGOC_ERROR_SCRAM,MONGOC_ERROR_SCRAM45,1143
   MONGOC_ERROR_SERVER_SELECTION,MONGOC_ERROR_SERVER_SELECTION46,1166
   MONGOC_ERROR_WRITE_CONCERN,MONGOC_ERROR_WRITE_CONCERN47,1200
} mongoc_error_domain_t;mongoc_error_domain_t48,1231
{__anon6cec4b56020352,1271
   MONGOC_ERROR_STREAM_INVALID_TYPE = 1,MONGOC_ERROR_STREAM_INVALID_TYPE53,1273
   MONGOC_ERROR_STREAM_INVALID_STATE,MONGOC_ERROR_STREAM_INVALID_STATE54,1314
   MONGOC_ERROR_STREAM_NAME_RESOLUTION,MONGOC_ERROR_STREAM_NAME_RESOLUTION55,1352
   MONGOC_ERROR_STREAM_SOCKET,MONGOC_ERROR_STREAM_SOCKET56,1392
   MONGOC_ERROR_STREAM_CONNECT,MONGOC_ERROR_STREAM_CONNECT57,1423
   MONGOC_ERROR_STREAM_NOT_ESTABLISHED,MONGOC_ERROR_STREAM_NOT_ESTABLISHED58,1455
   MONGOC_ERROR_CLIENT_NOT_READY,MONGOC_ERROR_CLIENT_NOT_READY60,1496
   MONGOC_ERROR_CLIENT_TOO_BIG,MONGOC_ERROR_CLIENT_TOO_BIG61,1530
   MONGOC_ERROR_CLIENT_TOO_SMALL,MONGOC_ERROR_CLIENT_TOO_SMALL62,1562
   MONGOC_ERROR_CLIENT_GETNONCE,MONGOC_ERROR_CLIENT_GETNONCE63,1596
   MONGOC_ERROR_CLIENT_AUTHENTICATE,MONGOC_ERROR_CLIENT_AUTHENTICATE64,1629
   MONGOC_ERROR_CLIENT_NO_ACCEPTABLE_PEER,MONGOC_ERROR_CLIENT_NO_ACCEPTABLE_PEER65,1666
   MONGOC_ERROR_CLIENT_IN_EXHAUST,MONGOC_ERROR_CLIENT_IN_EXHAUST66,1709
   MONGOC_ERROR_PROTOCOL_INVALID_REPLY,MONGOC_ERROR_PROTOCOL_INVALID_REPLY68,1745
   MONGOC_ERROR_PROTOCOL_BAD_WIRE_VERSION,MONGOC_ERROR_PROTOCOL_BAD_WIRE_VERSION69,1785
   MONGOC_ERROR_CURSOR_INVALID_CURSOR,MONGOC_ERROR_CURSOR_INVALID_CURSOR71,1829
   MONGOC_ERROR_QUERY_FAILURE,MONGOC_ERROR_QUERY_FAILURE73,1869
   MONGOC_ERROR_BSON_INVALID,MONGOC_ERROR_BSON_INVALID75,1901
   MONGOC_ERROR_MATCHER_INVALID,MONGOC_ERROR_MATCHER_INVALID77,1932
   MONGOC_ERROR_NAMESPACE_INVALID,MONGOC_ERROR_NAMESPACE_INVALID79,1966
   MONGOC_ERROR_NAMESPACE_INVALID_FILTER_TYPE,MONGOC_ERROR_NAMESPACE_INVALID_FILTER_TYPE80,2001
   MONGOC_ERROR_COMMAND_INVALID_ARG,MONGOC_ERROR_COMMAND_INVALID_ARG82,2049
   MONGOC_ERROR_COLLECTION_INSERT_FAILED,MONGOC_ERROR_COLLECTION_INSERT_FAILED84,2087
   MONGOC_ERROR_COLLECTION_UPDATE_FAILED,MONGOC_ERROR_COLLECTION_UPDATE_FAILED85,2129
   MONGOC_ERROR_COLLECTION_DELETE_FAILED,MONGOC_ERROR_COLLECTION_DELETE_FAILED86,2171
   MONGOC_ERROR_COLLECTION_DOES_NOT_EXIST = 26,MONGOC_ERROR_COLLECTION_DOES_NOT_EXIST87,2213
   MONGOC_ERROR_GRIDFS_INVALID_FILENAME,MONGOC_ERROR_GRIDFS_INVALID_FILENAME89,2262
   MONGOC_ERROR_SCRAM_NOT_DONE,MONGOC_ERROR_SCRAM_NOT_DONE91,2304
   MONGOC_ERROR_SCRAM_PROTOCOL_ERROR,MONGOC_ERROR_SCRAM_PROTOCOL_ERROR92,2336
   MONGOC_ERROR_QUERY_COMMAND_NOT_FOUND = 59,MONGOC_ERROR_QUERY_COMMAND_NOT_FOUND94,2375
   MONGOC_ERROR_QUERY_NOT_TAILABLE = 13051,MONGOC_ERROR_QUERY_NOT_TAILABLE95,2421
   MONGOC_ERROR_SERVER_SELECTION_BAD_WIRE_VERSION,MONGOC_ERROR_SERVER_SELECTION_BAD_WIRE_VERSION97,2466
   MONGOC_ERROR_SERVER_SELECTION_FAILURE,MONGOC_ERROR_SERVER_SELECTION_FAILURE98,2517
   MONGOC_ERROR_SERVER_SELECTION_INVALID_ID,MONGOC_ERROR_SERVER_SELECTION_INVALID_ID99,2559
   MONGOC_ERROR_GRIDFS_CHUNK_MISSING,MONGOC_ERROR_GRIDFS_CHUNK_MISSING101,2605
   MONGOC_ERROR_PROTOCOL_ERROR = 17,MONGOC_ERROR_PROTOCOL_ERROR104,2677
   MONGOC_ERROR_WRITE_CONCERN_ERROR = 64,MONGOC_ERROR_WRITE_CONCERN_ERROR106,2715
} mongoc_error_code_t;mongoc_error_code_t107,2757

mongo/mongoc/mongoc-stream.h,1333
#define MONGOC_STREAM_HMONGOC_STREAM_H18,625
typedef struct _mongoc_stream_t mongoc_stream_t;mongoc_stream_t31,846
typedef struct _mongoc_stream_poll_t {_mongoc_stream_poll_t33,896
   mongoc_stream_t *stream;stream34,935
   int              events;events35,963
   int              revents;revents36,991
} mongoc_stream_poll_t;mongoc_stream_poll_t37,1020
struct _mongoc_stream_t_mongoc_stream_t39,1045
   int              type;type41,1071
   void             (*destroy)         (mongoc_stream_t *stream);destroy42,1097
   int              (*close)           (mongoc_stream_t *stream);close43,1163
   int              (*flush)           (mongoc_stream_t *stream);flush44,1229
   ssize_t          (*writev)          (mongoc_stream_t *stream,writev45,1295
   ssize_t          (*readv)           (mongoc_stream_t *stream,readv49,1559
   int              (*setsockopt)      (mongoc_stream_t *stream,setsockopt54,1891
   mongoc_stream_t *(*get_base_stream) (mongoc_stream_t *stream);get_base_stream59,2217
   bool             (*check_closed)    (mongoc_stream_t *stream);check_closed60,2283
   ssize_t          (*poll)            (mongoc_stream_poll_t *streams,poll61,2349
   void             (*failed)          (mongoc_stream_t *stream);failed64,2564
   void             *padding [5];padding65,2630

mongo/mongoc/mongoc-index.h,2145
#define MONGOC_INDEX_HMONGOC_INDEX_H18,618
{__anon967de284010830,817
   uint8_t twod_sphere_version;twod_sphere_version31,819
   uint8_t twod_bits_precision;twod_bits_precision32,851
   double  twod_location_min;twod_location_min33,883
   double  twod_location_max;twod_location_max34,913
   double  haystack_bucket_size;haystack_bucket_size35,943
   uint8_t *padding[32];padding36,976
} mongoc_index_opt_geo_t;mongoc_index_opt_geo_t37,1001
{__anon967de284020840,1043
   int type;type41,1045
} mongoc_index_opt_storage_t;mongoc_index_opt_storage_t42,1058
{__anon967de284030345,1102
   MONGOC_INDEX_STORAGE_OPT_MMAPV1,MONGOC_INDEX_STORAGE_OPT_MMAPV146,1104
   MONGOC_INDEX_STORAGE_OPT_WIREDTIGER,MONGOC_INDEX_STORAGE_OPT_WIREDTIGER47,1140
} mongoc_index_storage_opt_type_t;mongoc_index_storage_opt_type_t48,1180
{__anon967de284040851,1231
   mongoc_index_opt_storage_t  base;base52,1233
   const char                 *config_str;config_str53,1270
   void                       *padding[8];padding54,1313
} mongoc_index_opt_wt_t;mongoc_index_opt_wt_t55,1356
{__anon967de284050858,1397
   bool                        is_initialized;is_initialized59,1399
   bool                        background;background60,1446
   bool                        unique;unique61,1489
   const char                 *name;name62,1528
   bool                        drop_dups;drop_dups63,1565
   bool                        sparse;sparse64,1607
   int32_t                     expire_after_seconds;expire_after_seconds65,1646
   int32_t                     v;v66,1699
   const bson_t               *weights;weights67,1733
   const char                 *default_language;default_language68,1773
   const char                 *language_override;language_override69,1822
   mongoc_index_opt_geo_t     *geo_options;geo_options70,1872
   mongoc_index_opt_storage_t *storage_options;storage_options71,1916
   const bson_t               *partial_filter_expression;partial_filter_expression72,1964
   void                       *padding[5];padding73,2022
} mongoc_index_opt_t;mongoc_index_opt_t74,2065

mongo/mongoc/mongoc-write-command-private.h,2301
#define MONGOC_WRITE_COMMAND_PRIVATE_HMONGOC_WRITE_COMMAND_PRIVATE_H18,635
#define MONGOC_WRITE_COMMAND_DELETE MONGOC_WRITE_COMMAND_DELETE35,972
#define MONGOC_WRITE_COMMAND_INSERT MONGOC_WRITE_COMMAND_INSERT36,1010
#define MONGOC_WRITE_COMMAND_UPDATE MONGOC_WRITE_COMMAND_UPDATE37,1048
{__anon2c30f2ab010341,1101
   MONGOC_BYPASS_DOCUMENT_VALIDATION_FALSE   = 0,MONGOC_BYPASS_DOCUMENT_VALIDATION_FALSE42,1103
   MONGOC_BYPASS_DOCUMENT_VALIDATION_TRUE    = 1 << 0,MONGOC_BYPASS_DOCUMENT_VALIDATION_TRUE43,1153
   MONGOC_BYPASS_DOCUMENT_VALIDATION_DEFAULT = 1 << 1,MONGOC_BYPASS_DOCUMENT_VALIDATION_DEFAULT44,1208
} mongoc_write_bypass_document_validation_t;mongoc_write_bypass_document_validation_t45,1263
struct _mongoc_bulk_write_flags_t_mongoc_bulk_write_flags_t47,1309
   bool ordered;ordered49,1345
   mongoc_write_bypass_document_validation_t bypass_document_validation;bypass_document_validation50,1362
{__anon2c30f2ab020855,1455
   int      type;type56,1457
   uint32_t server_id;server_id57,1475
   bson_t  *documents;documents58,1498
   uint32_t n_documents;n_documents59,1521
   mongoc_bulk_write_flags_t flags;flags60,1546
   int64_t operation_id;operation_id61,1582
   union {__anon2c30f2ab030a62,1607
      struct {__anon2c30f2ab040863,1618
         bool multi;multi64,1633
      } delete_;delete_65,1654
      struct {__anon2c30f2ab050866,1671
         bool allow_bulk_op_insert;allow_bulk_op_insert67,1686
      } insert;insert68,1722
   } u;u69,1738
} mongoc_write_command_t;mongoc_write_command_t70,1746
{__anon2c30f2ab060874,1789
   bool         omit_nModified;omit_nModified76,1866
   uint32_t     nInserted;nInserted77,1898
   uint32_t     nMatched;nMatched78,1925
   uint32_t     nModified;nModified79,1951
   uint32_t     nRemoved;nRemoved80,1978
   uint32_t     nUpserted;nUpserted81,2004
   bson_t       writeErrors;writeErrors83,2081
   bson_t       upserted;upserted85,2174
   uint32_t     n_writeConcernErrors;n_writeConcernErrors87,2257
   bson_t       writeConcernErrors;writeConcernErrors88,2295
   bool         failed;failed89,2331
   bson_error_t error;error90,2355
   uint32_t     upsert_append_count;upsert_append_count91,2378
} mongoc_write_result_t;mongoc_write_result_t92,2415

mongo/mongoc/mongoc-memcmp.c,214
_mongoc_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,_mongoc_dummy_symbol_to_prevent_memcmp_lto22,901
mongoc_memcmp(const void * const b1_, const void * const b2_, size_t len)mongoc_memcmp34,1240

mongo/mongoc/mongoc-cursor.h,119
#define MONGOC_CURSOR_HMONGOC_CURSOR_H18,620
typedef struct _mongoc_cursor_t mongoc_cursor_t;mongoc_cursor_t31,836

mongo/mongoc/mongoc-async.c,312
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN25,734
mongoc_async_cmd (mongoc_async_t           *async,mongoc_async_cmd28,790
mongoc_async_new ()mongoc_async_new43,1419
mongoc_async_destroy (mongoc_async_t *async)mongoc_async_destroy51,1544
mongoc_async_run (mongoc_async_t *async,mongoc_async_run64,1751

mongo/mongoc/mongoc-thread-private.h,2398
#define MONGOC_THREAD_PRIVATE_HMONGOC_THREAD_PRIVATE_H18,627
# define MONGOC_MUTEX_INITIALIZER MONGOC_MUTEX_INITIALIZER31,879
# define mongoc_cond_t mongoc_cond_t32,945
# define mongoc_cond_broadcast mongoc_cond_broadcast33,1000
# define mongoc_cond_init(mongoc_cond_init34,1063
# define mongoc_cond_wait mongoc_cond_wait35,1133
# define mongoc_cond_signal mongoc_cond_signal36,1191
mongoc_cond_timedwait (pthread_cond_t  *cond,mongoc_cond_timedwait38,1274
# define mongoc_cond_destroy mongoc_cond_destroy55,1720
# define mongoc_mutex_t mongoc_mutex_t56,1781
# define mongoc_mutex_init(mongoc_mutex_init57,1837
# define mongoc_mutex_lock mongoc_mutex_lock58,1908
# define mongoc_mutex_unlock mongoc_mutex_unlock59,1967
# define mongoc_mutex_destroy mongoc_mutex_destroy60,2028
# define mongoc_thread_t mongoc_thread_t61,2090
# define mongoc_thread_create(mongoc_thread_create62,2140
# define mongoc_thread_join(mongoc_thread_join63,2219
# define mongoc_once_t mongoc_once_t64,2284
# define mongoc_once mongoc_once65,2339
# define MONGOC_ONCE_FUN(MONGOC_ONCE_FUN66,2392
# define MONGOC_ONCE_RETURN MONGOC_ONCE_RETURN67,2445
#  define MONGOC_ONCE_INIT MONGOC_ONCE_INIT69,2532
#  define MONGOC_ONCE_INIT MONGOC_ONCE_INIT71,2599
# define mongoc_thread_t mongoc_thread_t74,2671
mongoc_thread_create (mongoc_thread_t *thread,mongoc_thread_create76,2741
# define mongoc_thread_join(mongoc_thread_join83,2972
# define mongoc_mutex_t mongoc_mutex_t84,3048
# define mongoc_mutex_init mongoc_mutex_init85,3105
# define mongoc_mutex_lock mongoc_mutex_lock86,3171
# define mongoc_mutex_unlock mongoc_mutex_unlock87,3232
# define mongoc_mutex_destroy mongoc_mutex_destroy88,3293
# define mongoc_cond_t mongoc_cond_t89,3355
# define mongoc_cond_init mongoc_cond_init90,3414
# define mongoc_cond_wait(mongoc_cond_wait91,3482
mongoc_cond_timedwait (mongoc_cond_t  *cond,mongoc_cond_timedwait93,3589
# define mongoc_cond_signal mongoc_cond_signal111,4000
# define mongoc_cond_broadcast mongoc_cond_broadcast112,4062
mongoc_cond_destroy (mongoc_cond_t *_ignored)mongoc_cond_destroy114,4150
# define mongoc_once_t mongoc_once_t118,4213
# define MONGOC_ONCE_INIT MONGOC_ONCE_INIT119,4263
# define mongoc_once(mongoc_once120,4325
# define MONGOC_ONCE_FUN(MONGOC_ONCE_FUN121,4403
# define MONGOC_ONCE_RETURN MONGOC_ONCE_RETURN122,4519

mongo/mongoc/mongoc-socket.c,2366
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,860
#define OPERATION_EXPIRED(OPERATION_EXPIRED32,897
_mongoc_socket_setnonblock (SOCKET sd)_mongoc_socket_setnonblock54,1386
_mongoc_socket_wait (SOCKET   sd,           /* IN */_mongoc_socket_wait97,2398
mongoc_socket_poll (mongoc_socket_poll_t *sds,          /* IN */mongoc_socket_poll205,4819
_mongoc_socket_setnodelay (SOCKET sd) /* IN */_mongoc_socket_setnodelay259,5886
mongoc_socket_errno (mongoc_socket_t *sock) /* IN */mongoc_socket_errno304,6704
_mongoc_socket_capture_errno (mongoc_socket_t *sock) /* IN */_mongoc_socket_capture_errno329,7188
_mongoc_socket_errno_is_again (mongoc_socket_t *sock) /* IN */_mongoc_socket_errno_is_again358,7842
mongoc_socket_accept (mongoc_socket_t *sock,      /* IN */mongoc_socket_accept384,8534
mongoc_socket_accept_ex (mongoc_socket_t *sock,      /* IN */mongoc_socket_accept_ex409,9197
mongoc_socket_bind (mongoc_socket_t       *sock,    /* IN */mongoc_socket_bind488,10847
mongoc_socket_close (mongoc_socket_t *sock) /* IN */mongoc_socket_close529,11745
mongoc_socket_connect (mongoc_socket_t       *sock,      /* IN */mongoc_socket_connect579,12773
mongoc_socket_destroy (mongoc_socket_t *sock) /* IN */mongoc_socket_destroy647,14376
mongoc_socket_listen (mongoc_socket_t *sock,    /* IN */mongoc_socket_listen675,14950
mongoc_socket_new (int domain,   /* IN */mongoc_socket_new716,15670
mongoc_socket_recv (mongoc_socket_t *sock,      /* IN */mongoc_socket_recv788,17108
mongoc_socket_setsockopt (mongoc_socket_t *sock,    /* IN */mongoc_socket_setsockopt847,18396
mongoc_socket_send (mongoc_socket_t *sock,      /* IN */mongoc_socket_send888,19453
_mongoc_socket_try_sendv_slow (mongoc_socket_t *sock,   /* IN */_mongoc_socket_try_sendv_slow926,20460
_mongoc_socket_try_sendv (mongoc_socket_t *sock,   /* IN */_mongoc_socket_try_sendv986,21809
mongoc_socket_sendv (mongoc_socket_t  *sock,      /* IN */mongoc_socket_sendv1079,24043
mongoc_socket_getsockname (mongoc_socket_t *sock,    /* IN */mongoc_socket_getsockname1170,26611
mongoc_socket_getnameinfo (mongoc_socket_t *sock) /* IN */mongoc_socket_getnameinfo1189,26969
mongoc_socket_check_closed (mongoc_socket_t *sock) /* IN */mongoc_socket_check_closed1211,27387
mongoc_socket_inet_ntop (struct addrinfo *rp,        /* IN */mongoc_socket_inet_ntop1253,28194

mongo/mongoc/mongoc-rpc.c,3031
#define RPC(RPC25,696
#define INT32_FIELD(INT32_FIELD36,985
#define ENUM_FIELD ENUM_FIELD42,1188
#define INT64_FIELD(INT64_FIELD43,1219
#define CSTRING_FIELD(CSTRING_FIELD49,1422
#define BSON_FIELD(BSON_FIELD56,1673
#define BSON_OPTIONAL(BSON_OPTIONAL67,2017
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD69,2086
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD77,2359
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD87,2697
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD93,2919
#define RPC(RPC132,3795
#define INT32_FIELD(INT32_FIELD139,3954
#define ENUM_FIELD ENUM_FIELD141,4032
#define INT64_FIELD(INT64_FIELD142,4063
#define CSTRING_FIELD(CSTRING_FIELD144,4141
#define BSON_FIELD(BSON_FIELD145,4170
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD146,4196
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD147,4228
#define BSON_OPTIONAL(BSON_OPTIONAL148,4261
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD150,4330
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD151,4362
#define RPC(RPC173,4858
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD180,5019
#define RPC(RPC215,5755
#define INT32_FIELD(INT32_FIELD222,5910
#define ENUM_FIELD(ENUM_FIELD224,5983
#define INT64_FIELD(INT64_FIELD226,6055
#define CSTRING_FIELD(CSTRING_FIELD228,6146
#define BSON_FIELD(BSON_FIELD230,6221
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD243,6579
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD256,6999
#define BSON_OPTIONAL(BSON_OPTIONAL270,7410
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD272,7479
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD283,7760
#define RPC(RPC316,8457
#define INT32_FIELD(INT32_FIELD328,8784
#define ENUM_FIELD ENUM_FIELD335,8930
#define INT64_FIELD(INT64_FIELD336,8961
#define INT64_ARRAY_FIELD(INT64_ARRAY_FIELD343,9107
#define CSTRING_FIELD(CSTRING_FIELD360,9537
#define BSON_FIELD(BSON_FIELD377,9953
#define BSON_ARRAY_FIELD(BSON_ARRAY_FIELD392,10314
#define BSON_OPTIONAL(BSON_OPTIONAL397,10455
#define IOVEC_ARRAY_FIELD(IOVEC_ARRAY_FIELD401,10532
#define RAW_BUFFER_FIELD(RAW_BUFFER_FIELD408,10750
_mongoc_rpc_gather (mongoc_rpc_t   *rpc,_mongoc_rpc_gather440,11352
_mongoc_rpc_swab_to_le (mongoc_rpc_t *rpc)_mongoc_rpc_swab_to_le476,12391
_mongoc_rpc_swab_from_le (mongoc_rpc_t *rpc)_mongoc_rpc_swab_from_le517,13426
_mongoc_rpc_printf (mongoc_rpc_t *rpc)_mongoc_rpc_printf558,14512
_mongoc_rpc_scatter (mongoc_rpc_t  *rpc,_mongoc_rpc_scatter593,15442
_mongoc_rpc_reply_get_first (mongoc_rpc_reply_t *reply,_mongoc_rpc_reply_get_first636,16772
_mongoc_rpc_needs_gle (mongoc_rpc_t                 *rpc,_mongoc_rpc_needs_gle676,17723
_mongoc_rpc_prep_command (mongoc_rpc_t        *rpc,_mongoc_rpc_prep_command715,18740
_mongoc_populate_error (const bson_t *doc,_mongoc_populate_error740,19642
_mongoc_rpc_parse_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_error781,20636
bool _mongoc_rpc_parse_command_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_command_error861,23021
bool _mongoc_rpc_parse_query_error (mongoc_rpc_t *rpc,_mongoc_rpc_parse_query_error886,23735

mongo/mongoc/mongoc-util.c,340
_mongoc_hex_md5 (const char *input)_mongoc_hex_md525,687
_mongoc_usleep (int64_t usec)_mongoc_usleep46,1133
_mongoc_get_command_name (const bson_t *command)_mongoc_get_command_name67,1532
_mongoc_get_db_name (const char *ns,_mongoc_get_db_name107,2369
_mongoc_bson_destroy_if_set (bson_t *bson)_mongoc_bson_destroy_if_set126,2724

mongo/mongoc/mongoc-host-list.c,186
_mongoc_host_list_equal (const mongoc_host_list_t *host_a,_mongoc_host_list_equal36,1037
_mongoc_host_list_destroy_all (mongoc_host_list_t *host)_mongoc_host_list_destroy_all54,1536

mongo/mongoc/mongoc-read-prefs.h,682
#define MONGOC_READ_PREFS_HMONGOC_READ_PREFS_H18,624
typedef struct _mongoc_read_prefs_t mongoc_read_prefs_t;mongoc_read_prefs_t30,814
{__anond5ff44f5010334,886
   MONGOC_READ_PRIMARY             = (1 << 0),MONGOC_READ_PRIMARY35,888
   MONGOC_READ_SECONDARY           = (1 << 1),MONGOC_READ_SECONDARY36,935
   MONGOC_READ_PRIMARY_PREFERRED   = (1 << 2) | MONGOC_READ_PRIMARY,MONGOC_READ_PRIMARY_PREFERRED37,982
   MONGOC_READ_SECONDARY_PREFERRED = (1 << 2) | MONGOC_READ_SECONDARY,MONGOC_READ_SECONDARY_PREFERRED38,1051
   MONGOC_READ_NEAREST             = (1 << 3) | MONGOC_READ_SECONDARY,MONGOC_READ_NEAREST39,1122
} mongoc_read_mode_t;mongoc_read_mode_t40,1193

mongo/mongoc/mongoc-opcode-private.h,63
#define MONGOC_OPCODE_PRIVATE_HMONGOC_OPCODE_PRIVATE_H18,628

mongo/mongoc/mongoc-stream-tls-secure-transport-private.h,371
#define MONGOC_STREAM_TLS_SECURE_TRANSPORT_PRIVATE_HMONGOC_STREAM_TLS_SECURE_TRANSPORT_PRIVATE_H18,649
{__anon8283142e010838,1048
    SSLContextRef      ssl_ctx_ref;ssl_ctx_ref39,1050
    CFArrayRef         anchors;anchors40,1086
    CFMutableArrayRef  my_cert;my_cert41,1118
} mongoc_stream_tls_secure_transport_t;mongoc_stream_tls_secure_transport_t42,1150

mongo/mongoc/mongoc-iovec.h,185
#define MONGOC_IOVEC_HMONGOC_IOVEC_H19,620
{__anon9a186ae2010835,783
   u_long  iov_len;iov_len36,785
   char   *iov_base;iov_base37,805
} mongoc_iovec_t;mongoc_iovec_t38,826

mongo/mongoc/op-update.def,0

mongo/mongoc/mongoc-gridfs-file.c,1928
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
#define MONGOC_GRIDFS_FILE_STR_ACCESSOR(MONGOC_GRIDFS_FILE_STR_ACCESSOR56,1671
#define MONGOC_GRIDFS_FILE_BSON_ACCESSOR(MONGOC_GRIDFS_FILE_BSON_ACCESSOR73,2173
MONGOC_GRIDFS_FILE_STR_ACCESSOR (filename)MONGOC_GRIDFS_FILE_STR_ACCESSOR97,2855
_mongoc_gridfs_file_new_from_bson (mongoc_gridfs_t *gridfs,_mongoc_gridfs_file_new_from_bson183,5050
_mongoc_gridfs_file_new (mongoc_gridfs_t          *gridfs,_mongoc_gridfs_file_new281,8005
mongoc_gridfs_file_destroy (mongoc_gridfs_file_t *file)mongoc_gridfs_file_destroy344,9359
mongoc_gridfs_file_readv (mongoc_gridfs_file_t *file,mongoc_gridfs_file_readv402,10335
mongoc_gridfs_file_writev (mongoc_gridfs_file_t *file,mongoc_gridfs_file_writev467,12180
_mongoc_gridfs_file_extend (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_extend548,14427
_mongoc_gridfs_file_flush_page (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_flush_page605,15748
_mongoc_gridfs_file_keep_cursor (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_keep_cursor661,17082
_mongoc_gridfs_file_refresh_page (mongoc_gridfs_file_t *file)_mongoc_gridfs_file_refresh_page705,18533
mongoc_gridfs_file_seek (mongoc_gridfs_file_t *file,mongoc_gridfs_file_seek854,23486
mongoc_gridfs_file_tell (mongoc_gridfs_file_t *file)mongoc_gridfs_file_tell908,24688
mongoc_gridfs_file_error (mongoc_gridfs_file_t *file,mongoc_gridfs_file_error916,24795
mongoc_gridfs_file_get_id (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_id935,25242
mongoc_gridfs_file_get_length (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_length943,25361
mongoc_gridfs_file_get_chunk_size (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_chunk_size951,25481
mongoc_gridfs_file_get_upload_date (mongoc_gridfs_file_t *file)mongoc_gridfs_file_get_upload_date959,25609
mongoc_gridfs_file_remove (mongoc_gridfs_file_t *file,mongoc_gridfs_file_remove967,25736

mongo/mongoc/mongoc-stream-tls.c,517
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN40,1150
mongoc_stream_tls_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_do_handshake51,1328
mongoc_stream_tls_should_retry (mongoc_stream_t *stream)mongoc_stream_tls_should_retry69,1771
mongoc_stream_tls_should_read (mongoc_stream_t *stream)mongoc_stream_tls_should_read89,2191
mongoc_stream_tls_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_check_cert110,2624
mongoc_stream_tls_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_new146,3644

mongo/mongoc/mongoc-queue.c,394
_mongoc_queue_init (mongoc_queue_t *queue)_mongoc_queue_init24,659
_mongoc_queue_push_head (mongoc_queue_t *queue,_mongoc_queue_push_head33,775
_mongoc_queue_push_tail (mongoc_queue_t *queue,_mongoc_queue_push_tail54,1151
_mongoc_queue_pop_head (mongoc_queue_t *queue)_mongoc_queue_pop_head76,1543
_mongoc_queue_get_length (const mongoc_queue_t *queue)_mongoc_queue_get_length97,1878

mongo/mongoc/mongoc-topology-private.h,2597
#define MONGOC_TOPOLOGY_PRIVATE_HMONGOC_TOPOLOGY_PRIVATE_H18,630
#define MONGOC_TOPOLOGY_MIN_HEARTBEAT_FREQUENCY_MS MONGOC_TOPOLOGY_MIN_HEARTBEAT_FREQUENCY_MS27,905
#define MONGOC_TOPOLOGY_SOCKET_CHECK_INTERVAL_MS MONGOC_TOPOLOGY_SOCKET_CHECK_INTERVAL_MS28,960
#define MONGOC_TOPOLOGY_COOLDOWN_MS MONGOC_TOPOLOGY_COOLDOWN_MS29,1014
#define MONGOC_TOPOLOGY_LOCAL_THRESHOLD_MS MONGOC_TOPOLOGY_LOCAL_THRESHOLD_MS30,1055
#define MONGOC_TOPOLOGY_SERVER_SELECTION_TIMEOUT_MS MONGOC_TOPOLOGY_SERVER_SELECTION_TIMEOUT_MS31,1104
#define MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_MULTI_THREADED MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_MULTI_THREADED32,1162
#define MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_SINGLE_THREADED MONGOC_TOPOLOGY_HEARTBEAT_FREQUENCY_MS_SINGLE_THREADED33,1230
typedef enum {__anon0bf933b1010335,1300
   MONGOC_TOPOLOGY_BG_OFF,MONGOC_TOPOLOGY_BG_OFF36,1315
   MONGOC_TOPOLOGY_BG_RUNNING,MONGOC_TOPOLOGY_BG_RUNNING37,1342
   MONGOC_TOPOLOGY_BG_SHUTTING_DOWN,MONGOC_TOPOLOGY_BG_SHUTTING_DOWN38,1373
} mongoc_topology_bg_state_t;mongoc_topology_bg_state_t39,1410
typedef struct _mongoc_topology_t_mongoc_topology_t41,1441
   mongoc_topology_description_t description;description43,1477
   mongoc_uri_t                 *uri;uri44,1523
   mongoc_topology_scanner_t    *scanner;scanner45,1561
   bool                          server_selection_try_once;server_selection_try_once46,1603
   int64_t                       last_scan;last_scan48,1664
   int64_t                       local_threshold_msec;local_threshold_msec49,1708
   int64_t                       connect_timeout_msec;connect_timeout_msec50,1763
   int64_t                       server_selection_timeout_msec;server_selection_timeout_msec51,1818
   int64_t                       heartbeat_msec;heartbeat_msec52,1882
   mongoc_mutex_t                mutex;mutex54,1932
   mongoc_cond_t                 cond_client;cond_client55,1972
   mongoc_cond_t                 cond_server;cond_server56,2018
   mongoc_thread_t               thread;thread57,2064
   mongoc_topology_bg_state_t    bg_thread_state;bg_thread_state59,2106
   bool                          scan_requested;scan_requested60,2156
   bool                          scanning;scanning61,2205
   bool                          got_ismaster;got_ismaster62,2248
   bool                          shutdown_requested;shutdown_requested63,2295
   bool                          single_threaded;single_threaded64,2348
   bool                          stale;stale65,2398
} mongoc_topology_t;mongoc_topology_t66,2438

mongo/mongoc/mongoc-memcmp-private.h,63
#define MONGOC_MEMCMP_PRIVATE_HMONGOC_MEMCMP_PRIVATE_H18,627

mongo/mongoc/op-insert.def,0

mongo/mongoc/mongoc-set-private.h,676
#define MONGOC_SET_PRIVATE_HMONGOC_SET_PRIVATE_H18,625
typedef void (*mongoc_set_item_dtor)(void *item,mongoc_set_item_dtor28,820
typedef bool (*mongoc_set_for_each_cb_t)(void *item,mongoc_set_for_each_cb_t32,974
{__anonb47af480010836,1096
   uint32_t id;id37,1098
   void    *item;item38,1114
} mongoc_set_item_t;mongoc_set_item_t39,1132
{__anonb47af480020842,1169
   mongoc_set_item_t   *items;items43,1171
   size_t               items_len;items_len44,1202
   size_t               items_allocated;items_allocated45,1237
   mongoc_set_item_dtor dtor;dtor46,1278
   void                *dtor_ctx;dtor_ctx47,1308
} mongoc_set_t;mongoc_set_t48,1342

mongo/mongoc/mongoc-client.h,459
#define MONGOC_CLIENT_HMONGOC_CLIENT_H18,620
#define MONGOC_NAMESPACE_MAX MONGOC_NAMESPACE_MAX47,1243
#define MONGOC_DEFAULT_CONNECTTIMEOUTMS MONGOC_DEFAULT_CONNECTTIMEOUTMS51,1318
#define MONGOC_DEFAULT_SOCKETTIMEOUTMS MONGOC_DEFAULT_SOCKETTIMEOUTMS64,1711
typedef struct _mongoc_client_t mongoc_client_t;mongoc_client_t74,1907
typedef mongoc_stream_t *(*mongoc_stream_initiator_t) (const mongoc_uri_t       *uri,mongoc_stream_initiator_t93,2585

mongo/mongoc/mongoc-version-functions.h,69
#define MONGOC_VERSION_FUNCTIONS_HMONGOC_VERSION_FUNCTIONS_H24,754

mongo/mongoc/mongoc-client-pool.c,1641
struct _mongoc_client_pool_t_mongoc_client_pool_t29,907
   mongoc_mutex_t          mutex;mutex31,938
   mongoc_cond_t           cond;cond32,972
   mongoc_queue_t          queue;queue33,1005
   mongoc_topology_t      *topology;topology34,1039
   mongoc_uri_t           *uri;uri35,1076
   uint32_t                min_pool_size;min_pool_size36,1108
   uint32_t                max_pool_size;max_pool_size37,1150
   uint32_t                size;size38,1192
   bool                    ssl_opts_set;ssl_opts_set40,1250
   mongoc_ssl_opt_t        ssl_opts;ssl_opts41,1291
   mongoc_apm_callbacks_t  apm_callbacks;apm_callbacks43,1335
   void                   *apm_context;apm_context44,1377
mongoc_client_pool_set_ssl_opts (mongoc_client_pool_t   *pool,mongoc_client_pool_set_ssl_opts50,1452
mongoc_client_pool_new (const mongoc_uri_t *uri)mongoc_client_pool_new74,2003
mongoc_client_pool_destroy (mongoc_client_pool_t *pool)mongoc_client_pool_destroy125,3205
mongoc_client_pool_pop (mongoc_client_pool_t *pool)mongoc_client_pool_pop152,3751
mongoc_client_pool_try_pop (mongoc_client_pool_t *pool)mongoc_client_pool_try_pop188,4666
mongoc_client_pool_push (mongoc_client_pool_t *pool,mongoc_client_pool_push217,5271
mongoc_client_pool_get_size (mongoc_client_pool_t *pool)mongoc_client_pool_get_size246,5961
mongoc_client_pool_max_size(mongoc_client_pool_t *pool,mongoc_client_pool_max_size260,6177
mongoc_client_pool_min_size(mongoc_client_pool_t *pool,mongoc_client_pool_min_size273,6445
mongoc_client_pool_set_apm_callbacks (mongoc_client_pool_t   *pool,mongoc_client_pool_set_apm_callbacks286,6713

mongo/mongoc/mongoc-util-private.h,231
#define MONGOC_UTIL_PRIVATE_HMONGOC_UTIL_PRIVATE_H18,626
# define strcasecmp strcasecmp28,864
# define strncasecmp strncasecmp29,894
# define _ignore_value(_ignore_value34,1061
# define _ignore_value(_ignore_value36,1139

mongo/mongoc/mongoc-init.c,595
mongoc_sasl_mutex_alloc (void)mongoc_sasl_mutex_alloc38,1000
mongoc_sasl_mutex_lock (void *mutex)mongoc_sasl_mutex_lock50,1201
mongoc_sasl_mutex_unlock (void *mutex)mongoc_sasl_mutex_unlock59,1324
mongoc_sasl_mutex_free (void *mutex)mongoc_sasl_mutex_free68,1452
static MONGOC_ONCE_FUN( _mongoc_do_init)MONGOC_ONCE_FUN77,1597
mongoc_init (void)mongoc_init121,2499
static MONGOC_ONCE_FUN( _mongoc_do_cleanup)MONGOC_ONCE_FUN127,2613
mongoc_cleanup (void)mongoc_cleanup152,2996
_mongoc_init_ctor (void)_mongoc_init_ctor165,3379
_mongoc_init_dtor (void)_mongoc_init_dtor172,3506

mongo/mongoc/mongoc-collection.h,140
#define MONGOC_COLLECTION_HMONGOC_COLLECTION_H18,629
typedef struct _mongoc_collection_t mongoc_collection_t;mongoc_collection_t39,1068

mongo/mongoc/mongoc.h,76
#define MONGOC_HMONGOC_H19,614
#define MONGOC_INSIDEMONGOC_INSIDE24,652

mongo/mongoc/mongoc-uri.h,162
#define MONGOC_URI_HMONGOC_URI_H18,617
# define MONGOC_DEFAULT_PORT MONGOC_DEFAULT_PORT33,938
typedef struct _mongoc_uri_t mongoc_uri_t;mongoc_uri_t40,1001

mongo/mongoc/mongoc-matcher.c,564
_mongoc_matcher_parse_compare (bson_iter_t  *iter,  /* IN */_mongoc_matcher_parse_compare55,1618
_mongoc_matcher_parse (bson_iter_t  *iter,  /* IN */_mongoc_matcher_parse148,5137
_mongoc_matcher_parse_logical (mongoc_matcher_opcode_t  opcode,  /* IN */_mongoc_matcher_parse_logical217,7222
mongoc_matcher_new (const bson_t *query, /* IN */mongoc_matcher_new322,10154
mongoc_matcher_match (const mongoc_matcher_t *matcher,  /* IN */mongoc_matcher_match372,11253
mongoc_matcher_destroy (mongoc_matcher_t *matcher) /* IN */mongoc_matcher_destroy400,11868

mongo/mongoc/mongoc-server-description-private.h,2778
#define MONGOC_SERVER_DESCRIPTION_PRIVATE_HMONGOC_SERVER_DESCRIPTION_PRIVATE_H18,640
#define MONGOC_DEFAULT_WIRE_VERSION MONGOC_DEFAULT_WIRE_VERSION23,726
#define MONGOC_DEFAULT_WRITE_BATCH_SIZE MONGOC_DEFAULT_WRITE_BATCH_SIZE24,764
#define MONGOC_DEFAULT_BSON_OBJ_SIZE MONGOC_DEFAULT_BSON_OBJ_SIZE25,809
#define MONGOC_DEFAULT_MAX_MSG_SIZE MONGOC_DEFAULT_MAX_MSG_SIZE26,863
#define MONGOC_NO_SET_VERSION MONGOC_NO_SET_VERSION29,981
   {__anondf38141c010332,1028
      MONGOC_SERVER_UNKNOWN,MONGOC_SERVER_UNKNOWN33,1033
      MONGOC_SERVER_STANDALONE,MONGOC_SERVER_STANDALONE34,1062
      MONGOC_SERVER_MONGOS,MONGOC_SERVER_MONGOS35,1094
      MONGOC_SERVER_POSSIBLE_PRIMARY,MONGOC_SERVER_POSSIBLE_PRIMARY36,1122
      MONGOC_SERVER_RS_PRIMARY,MONGOC_SERVER_RS_PRIMARY37,1160
      MONGOC_SERVER_RS_SECONDARY,MONGOC_SERVER_RS_SECONDARY38,1192
      MONGOC_SERVER_RS_ARBITER,MONGOC_SERVER_RS_ARBITER39,1226
      MONGOC_SERVER_RS_OTHER,MONGOC_SERVER_RS_OTHER40,1258
      MONGOC_SERVER_RS_GHOST,MONGOC_SERVER_RS_GHOST41,1288
      MONGOC_SERVER_DESCRIPTION_TYPES,MONGOC_SERVER_DESCRIPTION_TYPES42,1318
   } mongoc_server_description_type_t;mongoc_server_description_type_t43,1357
struct _mongoc_server_description_t_mongoc_server_description_t45,1397
   uint32_t                         id;id47,1435
   mongoc_host_list_t               host;host48,1475
   int64_t                          round_trip_time;round_trip_time49,1517
   bson_t                           last_is_master;last_is_master50,1570
   bool                             has_is_master;has_is_master51,1622
   const char                      *connection_address;connection_address52,1673
   const char                      *me;me53,1729
   const char                      *set_name;set_name57,1911
   bson_error_t                     error;error58,1957
   mongoc_server_description_type_t type;type59,2000
   int32_t                          min_wire_version;min_wire_version61,2043
   int32_t                          max_wire_version;max_wire_version62,2097
   int32_t                          max_msg_size;max_msg_size63,2151
   int32_t                          max_bson_obj_size;max_bson_obj_size64,2201
   int32_t                          max_write_batch_size;max_write_batch_size65,2256
   bson_t                           hosts;hosts67,2315
   bson_t                           passives;passives68,2358
   bson_t                           arbiters;arbiters69,2404
   bson_t                           tags;tags71,2451
   const char                      *current_primary;current_primary72,2493
   int64_t                          set_version;set_version73,2546
   bson_oid_t                       election_id;election_id74,2595

mongo/mongoc/mongoc-apm-private.h,1976
#define MONGOC_APM_PRIVATE_HMONGOC_APM_PRIVATE_H18,625
struct _mongoc_apm_callbacks_t_mongoc_apm_callbacks_t29,838
   mongoc_apm_command_started_cb_t    started;started31,871
   mongoc_apm_command_succeeded_cb_t  succeeded;succeeded32,918
   mongoc_apm_command_failed_cb_t     failed;failed33,967
struct _mongoc_apm_command_started_t_mongoc_apm_command_started_t36,1017
   bson_t                   *command;command38,1056
   bool                      command_owned;command_owned39,1094
   const char               *database_name;database_name40,1138
   const char               *command_name;command_name41,1182
   int64_t                   request_id;request_id42,1225
   int64_t                   operation_id;operation_id43,1266
   const mongoc_host_list_t *host;host44,1309
   uint32_t                  server_id;server_id45,1344
   void                     *context;context46,1384
struct _mongoc_apm_command_succeeded_t_mongoc_apm_command_succeeded_t49,1426
   int64_t                   duration;duration51,1467
   const bson_t             *reply;reply52,1506
   const char               *command_name;command_name53,1542
   int64_t                   request_id;request_id54,1585
   int64_t                   operation_id;operation_id55,1626
   const mongoc_host_list_t *host;host56,1669
   uint32_t                  server_id;server_id57,1704
   void                     *context;context58,1744
struct _mongoc_apm_command_failed_t_mongoc_apm_command_failed_t61,1786
   int64_t                   duration;duration63,1824
   const char               *command_name;command_name64,1863
   const bson_error_t       *error;error65,1906
   int64_t                   request_id;request_id66,1942
   int64_t                   operation_id;operation_id67,1983
   const mongoc_host_list_t *host;host68,2026
   uint32_t                  server_id;server_id69,2061
   void                     *context;context70,2101

mongo/mongoc/mongoc-stream-file.c,1073
struct _mongoc_stream_file_t_mongoc_stream_file_t34,871
   mongoc_stream_t vtable;vtable36,902
   int             fd;fd37,929
_mongoc_stream_file_close (mongoc_stream_t *stream)_mongoc_stream_file_close42,968
_mongoc_stream_file_destroy (mongoc_stream_t *stream)_mongoc_stream_file_destroy66,1325
_mongoc_stream_file_failed (mongoc_stream_t *stream)_mongoc_stream_file_failed85,1595
_mongoc_stream_file_flush (mongoc_stream_t *stream) /* IN */_mongoc_stream_file_flush96,1727
_mongoc_stream_file_readv (mongoc_stream_t *stream,       /* IN */_mongoc_stream_file_readv115,2033
_mongoc_stream_file_writev (mongoc_stream_t *stream,       /* IN */_mongoc_stream_file_writev154,2996
_mongoc_stream_file_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_file_check_closed182,3703
mongoc_stream_file_new (int fd) /* IN */mongoc_stream_file_new189,3812
mongoc_stream_file_new_for_path (const char *path,  /* IN */mongoc_stream_file_new_for_path211,4502
mongoc_stream_file_get_fd (mongoc_stream_file_t *stream)mongoc_stream_file_get_fd236,4976

mongo/mongoc/mongoc-buffer.c,681
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN27,750
# define MONGOC_BUFFER_DEFAULT_SIZE MONGOC_BUFFER_DEFAULT_SIZE30,821
#define SPACE_FOR(SPACE_FOR34,871
_mongoc_buffer_init (mongoc_buffer_t   *buffer,_mongoc_buffer_init51,1434
_mongoc_buffer_destroy (mongoc_buffer_t *buffer)_mongoc_buffer_destroy90,2311
_mongoc_buffer_clear (mongoc_buffer_t *buffer,_mongoc_buffer_clear112,2860
_mongoc_buffer_append_from_stream (mongoc_buffer_t *buffer,_mongoc_buffer_append_from_stream141,3658
_mongoc_buffer_fill (mongoc_buffer_t *buffer,_mongoc_buffer_fill202,5472
_mongoc_buffer_try_append_from_stream (mongoc_buffer_t *buffer,_mongoc_buffer_try_append_from_stream284,7930

mongo/mongoc/mongoc-array-private.h,496
#define MONGOC_ARRAY_PRIVATE_HMONGOC_ARRAY_PRIVATE_H18,627
typedef struct _mongoc_array_t mongoc_array_t;mongoc_array_t30,826
struct _mongoc_array_t_mongoc_array_t33,875
   size_t  len;len35,900
   size_t  element_size;element_size36,916
   size_t  allocated;allocated37,941
   void   *data;data38,963
#define _mongoc_array_append_val(_mongoc_array_append_val42,985
#define _mongoc_array_index(_mongoc_array_index43,1060
#define _mongoc_array_clear(_mongoc_array_clear44,1120

mongo/mongoc/mongoc-gridfs-file-page-private.h,352
#define MONGOC_GRIDFS_FILE_PAGE_PRIVATE_HMONGOC_GRIDFS_FILE_PAGE_PRIVATE_H18,637
struct _mongoc_gridfs_file_page_t_mongoc_gridfs_file_page_t32,880
   const uint8_t *read_buf;read_buf34,916
   uint8_t       *buf;buf35,944
   uint32_t       len;len36,967
   uint32_t       chunk_size;chunk_size37,990
   uint32_t       offset;offset38,1020

mongo/mongoc/mongoc-database.h,234
#define MONGOC_DATABASE_HMONGOC_DATABASE_H18,622
typedef struct _mongoc_collection_t mongoc_collection_t;  /* forward decl */mongoc_collection_t36,962
typedef struct _mongoc_database_t mongoc_database_t;mongoc_database_t37,1039

mongo/mongoc/mongoc-buffer-private.h,466
#define MONGOC_BUFFER_PRIVATE_HMONGOC_BUFFER_PRIVATE_H18,628
typedef struct _mongoc_buffer_t mongoc_buffer_t;mongoc_buffer_t32,856
struct _mongoc_buffer_t_mongoc_buffer_t35,907
   uint8_t            *data;data37,933
   size_t              datalen;datalen38,962
   off_t               off;off39,994
   size_t              len;len40,1022
   bson_realloc_func   realloc_func;realloc_func41,1050
   void               *realloc_data;realloc_data42,1087

mongo/mongoc/mongoc-server-description.c,2309
#define ALPHA ALPHA27,846
static uint8_t kMongocEmptyBson[] = { 5, 0, 0, 0, 0 };kMongocEmptyBson30,866
static bson_oid_t kObjectIdZero = { {0} };kObjectIdZero32,922
mongoc_server_description_cleanup (mongoc_server_description_t *sd)mongoc_server_description_cleanup36,1044
mongoc_server_description_reset (mongoc_server_description_t *sd)mongoc_server_description_reset46,1306
mongoc_server_description_init (mongoc_server_description_t *sd,mongoc_server_description_init83,2406
mongoc_server_description_destroy (mongoc_server_description_t *description)mongoc_server_description_destroy143,4117
mongoc_server_description_has_rs_member(mongoc_server_description_t *server,mongoc_server_description_has_rs_member171,4697
mongoc_server_description_has_set_version (mongoc_server_description_t *description)mongoc_server_description_has_set_version211,5770
mongoc_server_description_has_election_id (mongoc_server_description_t *description)mongoc_server_description_has_election_id230,6292
mongoc_server_description_id (mongoc_server_description_t *description)mongoc_server_description_id249,6745
mongoc_server_description_host (mongoc_server_description_t *description)mongoc_server_description_host268,7237
mongoc_server_description_type (mongoc_server_description_t *description)mongoc_server_description_type288,7710
mongoc_server_description_ismaster (mongoc_server_description_t *description)mongoc_server_description_ismaster330,8892
mongoc_server_description_set_state (mongoc_server_description_t *description,mongoc_server_description_set_state345,9283
mongoc_server_description_set_set_version (mongoc_server_description_t *description,mongoc_server_description_set_set_version364,9783
mongoc_server_description_set_election_id (mongoc_server_description_t *description,mongoc_server_description_set_election_id384,10371
mongoc_server_description_update_rtt (mongoc_server_description_t *server,mongoc_server_description_update_rtt408,11081
mongoc_server_description_handle_ismaster (mongoc_server_description_handle_ismaster427,11667
mongoc_server_description_new_copy (const mongoc_server_description_t *description)mongoc_server_description_new_copy572,17644
mongoc_server_description_filter_eligible (mongoc_server_description_filter_eligible624,19445

mongo/mongoc/mongoc-stream-tls-openssl.c,1871
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN41,1136
#define MONGOC_STREAM_TLS_OPENSSL_BUFFER_SIZE MONGOC_STREAM_TLS_OPENSSL_BUFFER_SIZE43,1184
static BIO_METHOD gMongocStreamTlsOpenSslRawMethods = {gMongocStreamTlsOpenSslRawMethods46,1276
_mongoc_stream_tls_openssl_destroy (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_destroy77,2089
_mongoc_stream_tls_openssl_failed (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_failed118,3011
_mongoc_stream_tls_openssl_close (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_close145,3664
_mongoc_stream_tls_openssl_flush (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_flush175,4255
_mongoc_stream_tls_openssl_write (mongoc_stream_tls_t *tls,_mongoc_stream_tls_openssl_write187,4544
_mongoc_stream_tls_openssl_writev (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_writev251,6215
_mongoc_stream_tls_openssl_readv (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_readv394,10592
_mongoc_stream_tls_openssl_setsockopt (mongoc_stream_t *stream,_mongoc_stream_tls_openssl_setsockopt495,13364
_mongoc_stream_tls_openssl_get_base_stream (mongoc_stream_t *stream)_mongoc_stream_tls_openssl_get_base_stream514,14031
_mongoc_stream_tls_openssl_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_tls_openssl_check_closed522,14207
mongoc_stream_tls_openssl_do_handshake (mongoc_stream_t *stream,mongoc_stream_tls_openssl_do_handshake538,14576
mongoc_stream_tls_openssl_should_retry (mongoc_stream_t *stream)mongoc_stream_tls_openssl_should_retry574,15273
mongoc_stream_tls_openssl_should_read (mongoc_stream_t *stream)mongoc_stream_tls_openssl_should_read592,15654
mongoc_stream_tls_openssl_check_cert (mongoc_stream_t *stream,mongoc_stream_tls_openssl_check_cert610,16049
mongoc_stream_tls_openssl_new (mongoc_stream_t  *base_stream,mongoc_stream_tls_openssl_new651,17213

mongo/mongoc/mongoc-ssl-private.h,57
#define MONGOC_SSL_PRIVATE_HMONGOC_SSL_PRIVATE_H18,625

mongo/mongoc/op-get-more.def,0

mongo/mongoc/mongoc-cluster.c,4383
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN58,1626
#define CHECK_CLOSED_DURATION_MSEC CHECK_CLOSED_DURATION_MSEC61,1664
#define DB_AND_CMD_FROM_COLLECTION(DB_AND_CMD_FROM_COLLECTION63,1705
_bson_error_message_printf (bson_error_t *error,_bson_error_message_printf94,2958
mongoc_cluster_run_command_internal (mongoc_cluster_t         *cluster,mongoc_cluster_run_command_internal131,4037
mongoc_cluster_run_command_monitored (mongoc_cluster_t         *cluster,mongoc_cluster_run_command_monitored340,11226
mongoc_cluster_run_command (mongoc_cluster_t    *cluster,mongoc_cluster_run_command373,12483
_mongoc_stream_run_ismaster (mongoc_cluster_t *cluster,_mongoc_stream_run_ismaster411,13946
_mongoc_cluster_run_ismaster (mongoc_cluster_t *cluster,_mongoc_cluster_run_ismaster453,14994
_mongoc_cluster_build_basic_auth_digest (mongoc_cluster_t *cluster,_mongoc_cluster_build_basic_auth_digest529,17250
_mongoc_cluster_auth_node_cr (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_cr588,18892
_mongoc_cluster_get_canonicalized_name (mongoc_cluster_t      *cluster, /* IN */_mongoc_cluster_get_canonicalized_name697,22168
_mongoc_cluster_auth_node_sasl (mongoc_cluster_t *cluster,_mongoc_cluster_auth_node_sasl763,23967
_mongoc_cluster_auth_node_plain (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_plain926,29148
_mongoc_cluster_auth_node_x509 (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_x509989,30854
_mongoc_cluster_auth_node_scram (mongoc_cluster_t      *cluster,_mongoc_cluster_auth_node_scram1045,32556
_mongoc_cluster_auth_node (mongoc_cluster_t *cluster,_mongoc_cluster_auth_node1184,36734
mongoc_cluster_disconnect_node (mongoc_cluster_t *cluster, uint32_t server_id)mongoc_cluster_disconnect_node1284,40105
_mongoc_cluster_node_destroy (mongoc_cluster_node_t *node)_mongoc_cluster_node_destroy1308,40727
_mongoc_cluster_node_dtor (void *data_,_mongoc_cluster_node_dtor1317,40928
_mongoc_cluster_node_new (mongoc_stream_t *stream)_mongoc_cluster_node_new1326,41149
_mongoc_cluster_add_node (mongoc_cluster_t *cluster,_mongoc_cluster_add_node1367,42258
node_not_found (mongoc_server_description_t *sd,node_not_found1410,43711
stream_not_found (mongoc_server_description_t *sd,stream_not_found1429,44178
_mongoc_cluster_stream_for_server_description (mongoc_cluster_t *cluster,_mongoc_cluster_stream_for_server_description1449,44681
mongoc_cluster_stream_for_server (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_server1514,47035
mongoc_cluster_fetch_stream_single (mongoc_cluster_t *cluster,mongoc_cluster_fetch_stream_single1550,48107
mongoc_cluster_fetch_stream_pooled (mongoc_cluster_t *cluster,mongoc_cluster_fetch_stream_pooled1638,51198
mongoc_cluster_init (mongoc_cluster_t   *cluster,mongoc_cluster_init1704,53318
mongoc_cluster_destroy (mongoc_cluster_t *cluster) /* INOUT */mongoc_cluster_destroy1754,54697
_mongoc_cluster_stream_for_optype (mongoc_cluster_t *cluster,_mongoc_cluster_stream_for_optype1789,55447
mongoc_cluster_stream_for_reads (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_reads1845,57057
mongoc_cluster_stream_for_writes (mongoc_cluster_t *cluster,mongoc_cluster_stream_for_writes1872,57898
_mongoc_cluster_inc_egress_rpc (const mongoc_rpc_t *rpc)_mongoc_cluster_inc_egress_rpc1897,58539
_mongoc_cluster_inc_ingress_rpc (const mongoc_rpc_t *rpc)_mongoc_cluster_inc_ingress_rpc1950,59831
_mongoc_cluster_min_of_max_obj_size_sds (void *item,_mongoc_cluster_min_of_max_obj_size_sds1986,60764
_mongoc_cluster_min_of_max_obj_size_nodes (void *item,_mongoc_cluster_min_of_max_obj_size_nodes1999,61115
_mongoc_cluster_min_of_max_msg_size_sds (void *item,_mongoc_cluster_min_of_max_msg_size_sds2012,61464
_mongoc_cluster_min_of_max_msg_size_nodes (void *item,_mongoc_cluster_min_of_max_msg_size_nodes2025,61805
mongoc_cluster_get_max_bson_obj_size (mongoc_cluster_t *cluster)mongoc_cluster_get_max_bson_obj_size2055,62572
mongoc_cluster_get_max_msg_size (mongoc_cluster_t *cluster)mongoc_cluster_get_max_msg_size2093,63610
_mongoc_cluster_check_interval (mongoc_cluster_t *cluster,_mongoc_cluster_check_interval2112,64182
mongoc_cluster_sendv_to_server (mongoc_cluster_t              *cluster,mongoc_cluster_sendv_to_server2217,66867
mongoc_cluster_try_recv (mongoc_cluster_t       *cluster,mongoc_cluster_try_recv2373,71892

mongo/mongoc/mongoc-gridfs-file-page.c,1100
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN19,621
_mongoc_gridfs_file_page_new (const uint8_t *data,_mongoc_gridfs_file_page_new32,908
_mongoc_gridfs_file_page_seek (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_seek54,1353
_mongoc_gridfs_file_page_read (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_read68,1569
_mongoc_gridfs_file_page_write (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_write105,2488
_mongoc_gridfs_file_page_memset0 (mongoc_gridfs_file_page_t *page,_mongoc_gridfs_file_page_memset0149,3727
_mongoc_gridfs_file_page_get_data (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_get_data178,4460
_mongoc_gridfs_file_page_get_len (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_get_len189,4630
_mongoc_gridfs_file_page_tell (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_tell200,4770
_mongoc_gridfs_file_page_is_dirty (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_is_dirty211,4906
_mongoc_gridfs_file_page_destroy (mongoc_gridfs_file_page_t *page)_mongoc_gridfs_file_page_destroy222,5051

mongo/mongoc/mongoc-gridfs-file-list.h,169
#define MONGOC_GRIDFS_FILE_LIST_HMONGOC_GRIDFS_FILE_LIST_H18,629
typedef struct _mongoc_gridfs_file_list_t mongoc_gridfs_file_list_t;mongoc_gridfs_file_list_t32,858

mongo/mongoc/mongoc-topology-scanner-private.h,2099
#define MONGOC_TOPOLOGY_SCANNER_PRIVATE_HMONGOC_TOPOLOGY_SCANNER_PRIVATE_H18,638
typedef void (*mongoc_topology_scanner_cb_t)(uint32_t      id,mongoc_topology_scanner_cb_t37,1045
typedef struct mongoc_topology_scanner_nodemongoc_topology_scanner_node45,1403
   uint32_t                        id;id47,1449
   mongoc_async_cmd_t             *cmd;cmd48,1488
   mongoc_stream_t                *stream;stream49,1528
   int64_t                         timestamp;timestamp50,1571
   int64_t                         last_used;last_used51,1617
   int64_t                         last_failed;last_failed52,1663
   bool                            has_auth;has_auth53,1711
   mongoc_host_list_t              host;host54,1756
   struct addrinfo                *dns_results;dns_results55,1797
   struct addrinfo                *current_dns_result;current_dns_result56,1845
   struct mongoc_topology_scanner *ts;ts57,1900
   struct mongoc_topology_scanner_node *next;next59,1940
   struct mongoc_topology_scanner_node *prev;prev60,1986
   bool                            retired;retired62,2033
   bson_error_t                    last_error;last_error63,2077
} mongoc_topology_scanner_node_t;mongoc_topology_scanner_node_t64,2124
typedef struct mongoc_topology_scannermongoc_topology_scanner66,2159
   mongoc_async_t                 *async;async68,2200
   mongoc_topology_scanner_node_t *nodes;nodes69,2242
   uint32_t                        seq;seq70,2284
   bson_t                          ismaster_cmd;ismaster_cmd71,2324
   mongoc_topology_scanner_cb_t    cb;cb72,2373
   void                           *cb_data;cb_data73,2412
   bool                            in_progress;in_progress74,2456
   const mongoc_uri_t             *uri;uri75,2504
   mongoc_async_cmd_setup_t        setup;setup76,2544
   mongoc_stream_initiator_t       initiator;initiator77,2586
   void                           *initiator_context;initiator_context78,2632
   mongoc_ssl_opt_t *ssl_opts;ssl_opts81,2712
} mongoc_topology_scanner_t;mongoc_topology_scanner_t83,2750

mongo/mongoc/mongoc-stream-tls-openssl-private.h,263
#define MONGOC_STREAM_TLS_OPENSSL_PRIVATE_HMONGOC_STREAM_TLS_OPENSSL_PRIVATE_H18,640
{__anone6556e71010836,1003
   BIO                *bio;bio37,1005
   SSL_CTX            *ctx;ctx38,1033
} mongoc_stream_tls_openssl_t;mongoc_stream_tls_openssl_t39,1061

mongo/mongoc/mongoc-async-private.h,839
#define MONGOC_ASYNC_PRIVATE_HMONGOC_ASYNC_PRIVATE_H18,627
typedef struct _mongoc_async_mongoc_async31,878
   struct _mongoc_async_cmd *cmds;cmds33,909
   size_t                    ncmds;ncmds34,944
   uint32_t                  request_id;request_id35,980
} mongoc_async_t;mongoc_async_t36,1021
{__anon8a590b92010339,1053
   MONGOC_ASYNC_CMD_IN_PROGRESS,MONGOC_ASYNC_CMD_IN_PROGRESS40,1055
   MONGOC_ASYNC_CMD_SUCCESS,MONGOC_ASYNC_CMD_SUCCESS41,1088
   MONGOC_ASYNC_CMD_ERROR,MONGOC_ASYNC_CMD_ERROR42,1117
   MONGOC_ASYNC_CMD_TIMEOUT,MONGOC_ASYNC_CMD_TIMEOUT43,1144
} mongoc_async_cmd_result_t;mongoc_async_cmd_result_t44,1173
typedef void (*mongoc_async_cmd_cb_t)(mongoc_async_cmd_result_t result,mongoc_async_cmd_cb_t46,1203
(*mongoc_async_cmd_setup_t)(mongoc_stream_t *stream,mongoc_async_cmd_setup_t53,1574

mongo/mongoc/mongoc-uri-private.h,57
#define MONGOC_URI_PRIVATE_HMONGOC_URI_PRIVATE_H18,625

mongo/mongoc/mongoc-stream-tls-secure-transport.h,89
#define MONGOC_STREAM_TLS_SECURE_TRANSPORT_HMONGOC_STREAM_TLS_SECURE_TRANSPORT_H18,641

mongo/mongoc/mongoc-secure-transport.c,1157
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN43,1356
_bson_append_cftyperef (bson_string_t *retval, const char *label, CFTypeRef str)_bson_append_cftyperef47,1415
_mongoc_secure_transport_dict_get (CFArrayRef values, CFStringRef label)_mongoc_secure_transport_dict_get59,1746
_mongoc_secure_transport_RFC2253_from_cert (SecCertificateRef cert)_mongoc_secure_transport_RFC2253_from_cert83,2419
_mongoc_secure_transport_import_pem (const char *filename, const char *passphrase, CFArrayRef *i_mongoc_secure_transport_import_pem153,4733
_mongoc_secure_transport_extract_subject (const char *filename, const char *passphrase)_mongoc_secure_transport_extract_subject220,6664
mongoc_secure_transport_setup_certificate (mongoc_stream_tls_secure_transport_t *secure_transpormongoc_secure_transport_setup_certificate254,7671
mongoc_secure_transport_setup_ca (mongoc_stream_tls_secure_transport_t *secure_transport,mongoc_secure_transport_setup_ca316,9760
mongoc_secure_transport_read (SSLConnectionRef connection,mongoc_secure_transport_read355,11195
mongoc_secure_transport_write (SSLConnectionRef connection,mongoc_secure_transport_write396,12222

mongo/mongoc/mongoc-matcher-op.c,2778
_mongoc_matcher_op_exists_new (const char  *path,   /* IN */_mongoc_matcher_op_exists_new40,1140
_mongoc_matcher_op_type_new (const char  *path, /* IN */_mongoc_matcher_op_type_new74,1958
_mongoc_matcher_op_logical_new (mongoc_matcher_opcode_t  opcode, /* IN */_mongoc_matcher_op_logical_new113,2854
_mongoc_matcher_op_compare_new (mongoc_matcher_opcode_t  opcode, /* IN */_mongoc_matcher_op_compare_new159,4056
_mongoc_matcher_op_not_new (const char          *path,  /* IN */_mongoc_matcher_op_not_new195,5003
_mongoc_matcher_op_destroy (mongoc_matcher_op_t *op) /* IN */_mongoc_matcher_op_destroy228,5756
_mongoc_matcher_op_exists_match (mongoc_matcher_op_exists_t *exists, /* IN */_mongoc_matcher_op_exists_match291,7459
_mongoc_matcher_op_type_match (mongoc_matcher_op_type_t *type, /* IN */_mongoc_matcher_op_type_match326,8299
_mongoc_matcher_op_not_match (mongoc_matcher_op_not_t *not_,  /* IN */_mongoc_matcher_op_not_match363,9162
#define _TYPE_CODE(_TYPE_CODE373,9413
#define _NATIVE_COMPARE(_NATIVE_COMPARE374,9471
#define _EQ_COMPARE(_EQ_COMPARE376,9565
#define _NE_COMPARE(_NE_COMPARE377,9622
#define _GT_COMPARE(_GT_COMPARE378,9679
#define _GTE_COMPARE(_GTE_COMPARE379,9735
#define _LT_COMPARE(_LT_COMPARE380,9792
#define _LTE_COMPARE(_LTE_COMPARE381,9848
_mongoc_matcher_iter_eq_match (bson_iter_t *compare_iter, /* IN */_mongoc_matcher_iter_eq_match414,10878
_mongoc_matcher_op_eq_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_eq_match540,14583
_mongoc_matcher_op_gt_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_gt_match569,15350
_mongoc_matcher_op_gte_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_gte_match641,17586
_mongoc_matcher_op_in_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_in_match714,19861
_mongoc_matcher_op_lt_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_lt_match754,20777
_mongoc_matcher_op_lte_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_lte_match827,23024
_mongoc_matcher_op_ne_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_ne_match901,25324
_mongoc_matcher_op_nin_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_nin_match925,25919
_mongoc_matcher_op_compare_match (mongoc_matcher_op_compare_t *compare, /* IN */_mongoc_matcher_op_compare_match950,26533
_mongoc_matcher_op_logical_match (mongoc_matcher_op_logical_t *logical, /* IN */_mongoc_matcher_op_logical_match1012,28328
_mongoc_matcher_op_match (mongoc_matcher_op_t *op,   /* IN */_mongoc_matcher_op_match1054,29505
_mongoc_matcher_op_to_bson (mongoc_matcher_op_t *op,   /* IN */_mongoc_matcher_op_to_bson1108,31126

mongo/mongoc/mongoc-flags.h,2341
#define MONGOC_FLAGS_HMONGOC_FLAGS_H18,619
{__anonaaaf94f9010342,1208
   MONGOC_DELETE_NONE          = 0,MONGOC_DELETE_NONE43,1210
   MONGOC_DELETE_SINGLE_REMOVE = 1 << 0,MONGOC_DELETE_SINGLE_REMOVE44,1246
} mongoc_delete_flags_t;mongoc_delete_flags_t45,1287
{__anonaaaf94f9020357,1586
   MONGOC_REMOVE_NONE          = 0,MONGOC_REMOVE_NONE58,1588
   MONGOC_REMOVE_SINGLE_REMOVE = 1 << 0,MONGOC_REMOVE_SINGLE_REMOVE59,1624
} mongoc_remove_flags_t;mongoc_remove_flags_t60,1665
{__anonaaaf94f9030372,1977
   MONGOC_INSERT_NONE              = 0,MONGOC_INSERT_NONE73,1979
   MONGOC_INSERT_CONTINUE_ON_ERROR = 1 << 0,MONGOC_INSERT_CONTINUE_ON_ERROR74,2019
} mongoc_insert_flags_t;mongoc_insert_flags_t75,2064
#define MONGOC_INSERT_NO_VALIDATE MONGOC_INSERT_NO_VALIDATE78,2091
{__anonaaaf94f90403101,3130
   MONGOC_QUERY_NONE              = 0,MONGOC_QUERY_NONE102,3132
   MONGOC_QUERY_TAILABLE_CURSOR   = 1 << 1,MONGOC_QUERY_TAILABLE_CURSOR103,3171
   MONGOC_QUERY_SLAVE_OK          = 1 << 2,MONGOC_QUERY_SLAVE_OK104,3215
   MONGOC_QUERY_OPLOG_REPLAY      = 1 << 3,MONGOC_QUERY_OPLOG_REPLAY105,3259
   MONGOC_QUERY_NO_CURSOR_TIMEOUT = 1 << 4,MONGOC_QUERY_NO_CURSOR_TIMEOUT106,3303
   MONGOC_QUERY_AWAIT_DATA        = 1 << 5,MONGOC_QUERY_AWAIT_DATA107,3347
   MONGOC_QUERY_EXHAUST           = 1 << 6,MONGOC_QUERY_EXHAUST108,3391
   MONGOC_QUERY_PARTIAL           = 1 << 7,MONGOC_QUERY_PARTIAL109,3435
} mongoc_query_flags_t;mongoc_query_flags_t110,3479
{__anonaaaf94f90503126,4015
   MONGOC_REPLY_NONE               = 0,MONGOC_REPLY_NONE127,4017
   MONGOC_REPLY_CURSOR_NOT_FOUND   = 1 << 0,MONGOC_REPLY_CURSOR_NOT_FOUND128,4057
   MONGOC_REPLY_QUERY_FAILURE      = 1 << 1,MONGOC_REPLY_QUERY_FAILURE129,4102
   MONGOC_REPLY_SHARD_CONFIG_STALE = 1 << 2,MONGOC_REPLY_SHARD_CONFIG_STALE130,4147
   MONGOC_REPLY_AWAIT_CAPABLE      = 1 << 3,MONGOC_REPLY_AWAIT_CAPABLE131,4192
} mongoc_reply_flags_t;mongoc_reply_flags_t132,4237
{__anonaaaf94f90603144,4552
   MONGOC_UPDATE_NONE         = 0,MONGOC_UPDATE_NONE145,4554
   MONGOC_UPDATE_UPSERT       = 1 << 0,MONGOC_UPDATE_UPSERT146,4589
   MONGOC_UPDATE_MULTI_UPDATE = 1 << 1,MONGOC_UPDATE_MULTI_UPDATE147,4629
} mongoc_update_flags_t;mongoc_update_flags_t148,4669
#define MONGOC_UPDATE_NO_VALIDATE MONGOC_UPDATE_NO_VALIDATE151,4696

mongo/mongoc/mongoc-cursor-cursorid.c,1367
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,874
_mongoc_cursor_cursorid_new (void)_mongoc_cursor_cursorid_new33,934
_mongoc_cursor_cursorid_destroy (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_destroy49,1191
_mongoc_cursor_cursorid_start_batch (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_start_batch75,1669
_mongoc_cursor_cursorid_refresh_from_command (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_refresh_from_command112,2781
_mongoc_cursor_cursorid_read_from_batch (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_read_from_batch149,3803
_mongoc_cursor_cursorid_prime (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_prime173,4404
_mongoc_cursor_prepare_getmore_command (mongoc_cursor_t *cursor,_mongoc_cursor_prepare_getmore_command182,4642
_mongoc_cursor_cursorid_get_more (mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_get_more218,5903
_mongoc_cursor_cursorid_next (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_next255,6780
_mongoc_cursor_cursorid_clone (const mongoc_cursor_t *cursor)_mongoc_cursor_cursorid_clone314,7995
static mongoc_cursor_interface_t gMongocCursorCursorid = {gMongocCursorCursorid327,8225
_mongoc_cursor_cursorid_init (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_init336,8406
_mongoc_cursor_cursorid_init_with_reply (mongoc_cursor_t *cursor,_mongoc_cursor_cursorid_init_with_reply353,8782

mongo/mongoc/mongoc-stream-buffered.c,1251
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN29,837
{__anondeef2743010833,889
   mongoc_stream_t  stream;stream34,891
   mongoc_stream_t *base_stream;base_stream35,919
   mongoc_buffer_t  buffer;buffer36,952
} mongoc_stream_buffered_t;mongoc_stream_buffered_t37,980
mongoc_stream_buffered_destroy (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_destroy58,1420
mongoc_stream_buffered_failed (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_failed95,2296
mongoc_stream_buffered_close (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_close120,2846
mongoc_stream_buffered_flush (mongoc_stream_t *stream) /* IN */mongoc_stream_buffered_flush145,3427
mongoc_stream_buffered_writev (mongoc_stream_t *stream,       /* IN */mongoc_stream_buffered_writev174,4235
mongoc_stream_buffered_readv (mongoc_stream_t *stream,       /* IN */mongoc_stream_buffered_readv221,5726
_mongoc_stream_buffered_get_base_stream (mongoc_stream_t *stream) /* IN */_mongoc_stream_buffered_get_base_stream266,7119
_mongoc_stream_buffered_check_closed (mongoc_stream_t *stream) /* IN */_mongoc_stream_buffered_check_closed273,7273
mongoc_stream_buffered_new (mongoc_stream_t *base_stream, /* IN */mongoc_stream_buffered_new305,8175

mongo/mongoc/mongoc-crypto-openssl.c,193
mongoc_crypto_openssl_hmac_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_openssl_hmac_sha131,836
mongoc_crypto_openssl_sha1 (mongoc_crypto_t     *crypto,mongoc_crypto_openssl_sha149,1358

mongo/mongoc/mongoc-read-concern.h,315
#define MONGOC_READ_CONCERN_HMONGOC_READ_CONCERN_H18,626
#define MONGOC_READ_CONCERN_LEVEL_LOCAL MONGOC_READ_CONCERN_LEVEL_LOCAL30,818
#define MONGOC_READ_CONCERN_LEVEL_MAJORITY MONGOC_READ_CONCERN_LEVEL_MAJORITY31,869
typedef struct _mongoc_read_concern_t mongoc_read_concern_t;mongoc_read_concern_t33,924

mongo/mongoc/mongoc-collection-private.h,722
#define MONGOC_COLLECTION_PRIVATE_HMONGOC_COLLECTION_PRIVATE_H18,637
struct _mongoc_collection_t_mongoc_collection_t33,904
   mongoc_client_t        *client;client35,934
   char                    ns[128];ns36,969
   uint32_t                nslen;nslen37,1005
   char                    db[128];db38,1039
   char                    collection[128];collection39,1075
   uint32_t                collectionlen;collectionlen40,1119
   mongoc_buffer_t         buffer;buffer41,1161
   mongoc_read_prefs_t    *read_prefs;read_prefs42,1196
   mongoc_read_concern_t  *read_concern;read_concern43,1235
   mongoc_write_concern_t *write_concern;write_concern44,1276
   bson_t                 *gle;gle45,1318

mongo/mongoc/mongoc-set.c,803
#define MONGOC_LOG_DOMAIN MONGOC_LOG_DOMAIN23,674
mongoc_set_new (size_t               nitems,mongoc_set_new26,722
mongoc_set_id_cmp (const void *a_,mongoc_set_id_cmp43,1162
mongoc_set_add (mongoc_set_t *set,mongoc_set_add57,1426
mongoc_set_rm (mongoc_set_t *set,mongoc_set_rm79,2051
mongoc_set_get (mongoc_set_t *set,mongoc_set_get106,2615
mongoc_set_get_item (mongoc_set_t *set,mongoc_set_get_item121,2927
mongoc_set_destroy (mongoc_set_t *set)mongoc_set_destroy132,3112
mongoc_set_for_each (mongoc_set_t            *set,mongoc_set_for_each145,3319
_mongoc_set_find (mongoc_set_t            *set,_mongoc_set_find169,3877
mongoc_set_find_item (mongoc_set_t            *set,mongoc_set_find_item191,4280
mongoc_set_find_id (mongoc_set_t            *set,mongoc_set_find_id206,4577

mongo/targetver.h,0

mongo/cs_ev.h,37
#define __CS_EV_H____CS_EV_H__2,20

mongo/MongoDBClient.h,1548
#define _MONGO_DB_CLIENT_H_MONGO_DB_CLIENT_H2,27
enum eReturnValueeReturnValue4,55
	eReturnValue_FAILURE = 0,eReturnValue_FAILURE6,75
	eReturnValue_SUCCESS = 1,eReturnValue_SUCCESS7,102
	eReturnValue_WRONG_ARGUEMENTS = 2,eReturnValue_WRONG_ARGUEMENTS8,129
	eReturnValue_DATABASE_OPEN_CLIENT_CONNECTION_FAILED = 3,eReturnValue_DATABASE_OPEN_CLIENT_CONNECTION_FAILED10,166
	eReturnValue_DATABASE_GET_FAILED = 4,eReturnValue_DATABASE_GET_FAILED11,224
	eReturnValue_DATABASE_GET_COLLECTION_FAILED = 5,eReturnValue_DATABASE_GET_COLLECTION_FAILED12,263
	eReturnValue_DATABASE_CLIENT_CONNECTION_INVALID = 6,eReturnValue_DATABASE_CLIENT_CONNECTION_INVALID14,314
	eReturnValue_DATABASE_INVALID = 7,eReturnValue_DATABASE_INVALID15,368
	eReturnValue_DATABASE_COLLECTION_INVALID = 8,eReturnValue_DATABASE_COLLECTION_INVALID16,404
	eReturnValue_DATABASE_COMMAND_CREATION_FAILED = 9,eReturnValue_DATABASE_COMMAND_CREATION_FAILED18,452
	eReturnValue_DATABASE_PING_COMMAND_FAILED = 10,eReturnValue_DATABASE_PING_COMMAND_FAILED19,504
	eReturnValue_DATABASE_DOCUMENT_CREATION_FAILED = 11,eReturnValue_DATABASE_DOCUMENT_CREATION_FAILED21,554
	eReturnValue_DATABASE_DOCUMENT_INSERT_FAILED = 12,eReturnValue_DATABASE_DOCUMENT_INSERT_FAILED22,608
	eReturnValue_DATABASE_QUERY_CREATION_FAILED = 13,eReturnValue_DATABASE_QUERY_CREATION_FAILED24,661
	eReturnValue_DATABASE_QUERY_FAILED = 14,eReturnValue_DATABASE_QUERY_FAILED25,712
	eReturnValue_DATABASE_DOCUMENT_DELETION_FAILED = 15eReturnValue_DATABASE_DOCUMENT_DELETION_FAILED27,755

common1.h,3228
#define COMMON1HCOMMON1H2,17
typedef unsigned long long int  uint64;uint644,35
typedef signed long long  int64;int645,75
#define ALWAYS ALWAYS6,108
#define MAX_ARGUMENT_COUNT MAX_ARGUMENT_COUNT8,138
#define ARGUMENT(ARGUMENT13,349
#define FNVAR(FNVAR14,406
#define MAX_BUFFER_SIZE	MAX_BUFFER_SIZE17,681
#define NUMBER_OF_LAYERS NUMBER_OF_LAYERS19,724
#define MAX_CONFIG_LINES MAX_CONFIG_LINES21,769
typedef unsigned int MEANING;					//   a flagged indexed dict ptrMEANING23,799
#define MAX_DICTIONARY	MAX_DICTIONARY24,865
#define NODEBITS NODEBITS25,934
#define MULTIWORDHEADER_SHIFT MULTIWORDHEADER_SHIFT26,962
#define MULTIHEADERBITS MULTIHEADERBITS27,995
#define MAX_MEANING	MAX_MEANING29,1031
#define MEANING_BASE	MEANING_BASE30,1056
#define SYNSET_MARKER	SYNSET_MARKER31,1128
#define INDEX_BITS INDEX_BITS32,1248
#define INDEX_MINUS	INDEX_MINUS33,1389
#define INDEX_OFFSET INDEX_OFFSET34,1475
#define TYPE_RESTRICTION	TYPE_RESTRICTION35,1556
#define TYPE_RESTRICTION_SHIFT TYPE_RESTRICTION_SHIFT36,1688
#define SYSVAR_PREFIX SYSVAR_PREFIX40,1831
#define MATCHVAR_PREFIX MATCHVAR_PREFIX41,1857
#define USERVAR_PREFIX USERVAR_PREFIX42,1885
#define TRANSIENTVAR_PREFIX TRANSIENTVAR_PREFIX43,1912
#define LOCALVAR_PREFIX LOCALVAR_PREFIX44,1944
#define FACTSET_PREFIX FACTSET_PREFIX45,1972
#define INDIRECTION_PREFIX INDIRECTION_PREFIX46,1999
#define FUNCTION_PREFIX FUNCTION_PREFIX47,2030
#define FUNCTIONVAR_PREFIX FUNCTIONVAR_PREFIX48,2058
#define TOPICCONCEPT_PREFIX TOPICCONCEPT_PREFIX49,2089
#define INDIRECT_PREFIX INDIRECT_PREFIX50,2121
#define BIG_WORD_SIZE BIG_WORD_SIZE52,2150
#define MAX_WORD_SIZE MAX_WORD_SIZE53,2180
#define SMALL_WORD_SIZE SMALL_WORD_SIZE54,2212
enum CompileStatus {CompileStatus58,2312
	 NOT_COMPILING = 0,NOT_COMPILING59,2333
	FULL_COMPILE = 1,FULL_COMPILE60,2354
	PIECE_COMPILE = 2,PIECE_COMPILE61,2373
	CONCEPTSTRING_COMPILE = 3CONCEPTSTRING_COMPILE62,2393
 enum FunctionResult {FunctionResult66,2448
	NOPROBLEM_BIT = 0,NOPROBLEM_BIT67,2471
	ENDRULE_BIT = 0x00000001,ENDRULE_BIT68,2491
	FAILRULE_BIT  = 0x00000002,FAILRULE_BIT69,2518
	RETRYRULE_BIT =  0x00000004,RETRYRULE_BIT71,2548
	RETRYTOPRULE_BIT =  0x00000008,RETRYTOPRULE_BIT72,2578
	ENDTOPIC_BIT =  0x00000010,ENDTOPIC_BIT74,2612
	FAILTOPIC_BIT  = 0x00000020,FAILTOPIC_BIT75,2641
	RETRYTOPIC_BIT  = 0x00000040,RETRYTOPIC_BIT76,2671
	ENDSENTENCE_BIT =  0x00000080,ENDSENTENCE_BIT78,2703
	FAILSENTENCE_BIT =  0x00000100,FAILSENTENCE_BIT79,2735
	RETRYSENTENCE_BIT =  0x00000200,RETRYSENTENCE_BIT80,2768
	ENDINPUT_BIT  = 0x00000400,ENDINPUT_BIT82,2803
	FAILINPUT_BIT  = 0x00000800,FAILINPUT_BIT83,2832
	RETRYINPUT_BIT = 0x00001000,RETRYINPUT_BIT84,2862
	FAILMATCH_BIT  = 0x00002000,			// transient result of TestRule, converts to FAILRULE_BITFAILMATCH_BIT86,2893
	FAILLOOP_BIT  = 0x00004000,FAILLOOP_BIT87,2983
	ENDLOOP_BIT  = 0x00008000,ENDLOOP_BIT88,3012
	UNDEFINED_FUNCTION = 0x00010000, //   potential function call has no definition so isntUNDEFINED_FUNCTION90,3041
	ENDCALL_BIT  =		0x00020000,ENDCALL_BIT91,3130
	NEXTLOOP_BIT =		0x00040000,NEXTLOOP_BIT92,3159
	RESTART_BIT =	0x00080000RESTART_BIT93,3188

factSystem.cpp,7120
    or patch in data piggy backing on facts(like from the topic system).system18,779
char traceSubject[100];traceSubject26,1193
bool allowBootKill = false;allowBootKill27,1217
char traceVerb[100];traceVerb28,1245
char traceObject[100];traceObject29,1266
bool bootFacts = false;bootFacts30,1289
bool recordBoot = false;recordBoot31,1313
uint64 allowedBots = 0xffffffffffffffffULL; // default fact visibility restriction is all botsallowedBots32,1338
uint64 myBot = 0;							// default fact creation restrictionmyBot33,1433
size_t maxFacts = MAX_FACT_NODES;	// how many facts we can create at maxmaxFacts34,1494
HEAPREF factThread = NULL;factThread35,1567
static STACKREF stackFactThread = NULL;stackFactThread36,1594
bool factsExhausted = false;factsExhausted37,1634
FACT* factBase = NULL;			// start of all factsfactBase38,1663
FACT* factEnd = NULL;			// end of all factsfactEnd39,1710
FACT* factsPreBuild[NUMBER_OF_LAYERS+1];		// on last fact of build0 facts, start of build1 factsfactsPreBuild40,1754
FACT* lastFactUsed = NULL;			// lastFactUsed is a fact in use (increment before use as a free falastFactUsed41,1851
FACT* currentFact = NULL;		// current fact found or createdcurrentFact42,1951
MEANING Mmember;				// represents concept setsMmember45,2052
MEANING Mis;					// represents wordnet hierarchyMis46,2099
MEANING Mexclude;				// represents restriction of word not allowed in set (blocking inheritance)Mexclude47,2148
bool seeAllFacts = false;seeAllFacts48,2245
FACT* Index2Fact(FACTOID e)Index2Fact49,2271
static void VerifyField(FACT* F, MEANING field, unsigned int offset)VerifyField66,2559
static void VerifyFact(FACT* F)VerifyFact83,2974
void VerifyFacts()VerifyFacts91,3256
bool UnacceptableFact(FACT* F)UnacceptableFact100,3353
FACT* GetSubjectNext(FACT* F) { return Index2Fact(F->subjectNext);}GetSubjectNext107,3608
FACT* GetVerbNext(FACT* F) {return Index2Fact(F->verbNext);}GetVerbNext108,3676
FACT* GetObjectNext(FACT* F) {return Index2Fact(F->objectNext);}GetObjectNext109,3737
bool ValidMemberFact(FACT* F)ValidMemberFact111,3803
FACT* GetSubjectNondeadNext(FACT* F,bool jsonaccept) GetSubjectNondeadNext116,3918
FACT* GetVerbNondeadNext(FACT* F) GetVerbNondeadNext132,4193
FACT* GetObjectNondeadNext(FACT* F) GetObjectNondeadNext148,4436
FACT* GetSubjectNondeadHead(FACT* F) GetSubjectNondeadHead164,4686
FACT* GetVerbNondeadHead(FACT* F) GetVerbNondeadHead174,4854
FACT* GetObjectNondeadHead(FACT* F) GetObjectNondeadHead184,5013
FACT* GetSubjectNondeadHead(WORDP D, bool jsonaccess) // able to get special marker empty fact fGetSubjectNondeadHead194,5178
FACT* GetVerbNondeadHead(WORDP D) GetVerbNondeadHead206,5453
FACT* GetObjectNondeadHead(WORDP D)  GetObjectNondeadHead217,5640
void SetSubjectNext(FACT* F, FACT* value){ F->subjectNext = Fact2Index(value);}SetSubjectNext229,5835
void SetVerbNext(FACT* F, FACT* value) {F->verbNext = Fact2Index(value);}SetVerbNext230,5915
void SetObjectNext(FACT* F, FACT* value){ F->objectNext = Fact2Index(value);}SetObjectNext231,5989
FACTOID Fact2Index(FACT* F) Fact2Index233,6068
FACT* FactTextIndex2Fact(char* id) // given number word, get corresponding factFactTextIndex2Fact238,6149
int GetSetID(char* x)GetSetID249,6568
FACT* EarliestFact(MEANING M) // earliest fact is last in listEarliestFact259,6852
bool GetSetMod(char* x)GetSetMod271,7067
char* GetSetType(char* x)GetSetType283,7570
char* GetSetEnd(char* x)GetSetEnd291,7731
void TraceFact(FACT* F,bool ignoreDead)TraceFact306,8246
void ClearUserFacts()ClearUserFacts314,8446
void InitFacts()InitFacts320,8623
void InitFactWords()InitFactWords340,9142
void CloseFacts()CloseFacts348,9395
void FreeFact(FACT* F)FreeFact354,9453
unsigned int AddFact(unsigned int set, FACT* F) // fact added to factsetAddFact384,10675
FACT* SpecialFact(FACTOID_OR_MEANING verb, FACTOID_OR_MEANING object,unsigned int flags)SpecialFact393,10902
static void ReleaseDictWord(WORDP D,WORDP dictbase)ReleaseDictWord412,11635
static void MarkDictWord(WORDP D, WORDP dictbase)MarkDictWord426,11991
void RipFacts(FACT* F,WORDP dictBase)RipFacts432,12144
FACT* WeaveFact(FACT* current)WeaveFact458,12897
void UnweaveFactSubject(FACT* F)UnweaveFactSubject517,14256
void UnweaveFactVerb(FACT* F)UnweaveFactVerb523,14486
void UnweaveFactObject(FACT* F)UnweaveFactObject529,14695
void UnweaveFact(FACT* F)UnweaveFact535,14918
void WeaveFacts(FACT* F)WeaveFacts542,15114
void AutoKillFact(MEANING M)AutoKillFact548,15196
void KillFact(FACT* F,bool jsonrecurse, bool autoreviseArray)KillFact554,15296
void ResetFactSystem(FACT* locked)ResetFactSystem609,16811
FACT* FindFact(FACTOID_OR_MEANING subject, FACTOID_OR_MEANING verb, FACTOID_OR_MEANING object, uFindFact626,17263
FACT* CreateFact(FACTOID_OR_MEANING subject, FACTOID_OR_MEANING verb, FACTOID_OR_MEANING object,CreateFact678,18913
bool ExportFacts(char* name, int set,char* append)ExportFacts792,22489
static char* ExportJson1(char* jsonitem, char* buffer)ExportJson1843,23742
FunctionResult ExportJson(char* name, char* jsonitem, char* append)ExportJson871,24451
char* EatFact(char* ptr,char* buffer,unsigned int flags,bool attribute)EatFact907,25272
bool ImportFacts(char* buffer,char* name, char* set, char* erase, char* transient)ImportFacts1087,30135
void WriteFacts(FILE* out,FACT* F, int flags) //   write out from here to endWriteFacts1162,32464
void WriteBinaryFacts(FILE* out,FACT* F) //   write out from after here to thru end WriteBinaryFacts1182,32946
FACT* CreateFastFact(FACTOID_OR_MEANING subject, FACTOID_OR_MEANING verb, FACTOID_OR_MEANING objCreateFastFact1198,33468
bool ReadBinaryFacts(FILE* in,bool dictionary) //   read binary factsReadBinaryFacts1247,35144
static char* WriteField(MEANING T, uint64 flags,char* buffer,bool ignoreDead, bool displayonly, WriteField1274,36095
char* WriteFact(FACT* F,bool comment,char* buffer,bool ignoreDead,bool eol,bool displayonly) // WriteFact1346,38634
char* ReadField(char* ptr,char* field,char fieldkind, unsigned int& flags)ReadField1423,40673
FACT* ReadFact(char* &ptr, unsigned int build)ReadFact1485,42273
void ReadFacts(const char* name,const char* layer,unsigned int build,bool user) //   a facts filReadFacts1543,44147
void SortFacts(char* set, int alpha, int setpass) //   sort low to high ^sort(@1subject) which fSortFacts1651,47266
static uint64* WriteDEntry(uint64* data, WORDP D)WriteDEntry1702,48849
static uint64* ReadFactField(uint64* data, FACT* F, int changed)ReadFactField1715,49198
void NoteBotFacts() // see RedoSystemFactFields for inverseNoteBotFacts1730,49710
void RedoSystemFactFields() // see NoteBotFacts for inverseRedoSystemFactFields1778,51798
static char* PutBlob(WORDP D, char* base)PutBlob1795,52326
static char* GetBlob(char* base, WORDP& D, unsigned int flags)GetBlob1807,52675
void MigrateFactsToBoot(FACT* endUserFacts, FACT* endBootFacts)MigrateFactsToBoot1820,53112
void ModBaseFact(FACT* F) // anyone changing fields of facts calls thisModBaseFact1922,57352

postgres.h,35
#define _POSTGRESH_POSTGRESH2,19

privatesrc.h,0

ms_sql.h,29
#define MSSQL_HMSSQL_H2,16

cs_ev.h,37
#define __CS_EV_H____CS_EV_H__2,20

multi.h,3908
#define __CURL_MULTI_H__CURL_MULTI_H2,23
typedef void CURLM;CURLM59,2099
typedef enum {__anone31ac486010361,2120
  CURLM_CALL_MULTI_PERFORM = -1, /* please call curl_multi_perform() orCURLM_CALL_MULTI_PERFORM62,2135
  CURLM_OK,CURLM_OK64,2272
  CURLM_BAD_HANDLE,      /* the passed-in handle is not a valid CURLM handle */CURLM_BAD_HANDLE65,2284
  CURLM_BAD_EASY_HANDLE, /* an easy handle was not good/valid */CURLM_BAD_EASY_HANDLE66,2364
  CURLM_OUT_OF_MEMORY,   /* if you ever get this, you're in deep sh*t */CURLM_OUT_OF_MEMORY67,2429
  CURLM_INTERNAL_ERROR,  /* this is a libcurl bug */CURLM_INTERNAL_ERROR68,2502
  CURLM_BAD_SOCKET,      /* the passed in socket argument did not match */CURLM_BAD_SOCKET69,2555
  CURLM_UNKNOWN_OPTION,  /* curl_multi_setopt() with unsupported option */CURLM_UNKNOWN_OPTION70,2630
  CURLM_ADDED_ALREADY,   /* an easy handle already added to a multi handle wasCURLM_ADDED_ALREADY71,2705
  CURLM_LASTCURLM_LAST73,2846
} CURLMcode;CURLMcode74,2859
#define CURLM_CALL_MULTI_SOCKET CURLM_CALL_MULTI_SOCKET79,3071
typedef enum {__anone31ac486020381,3129
  CURLMSG_NONE, /* first, not used */CURLMSG_NONE82,3144
  CURLMSG_DONE, /* This easy handle has completed. 'result' containsCURLMSG_DONE83,3182
  CURLMSG_LAST /* last, not used */CURLMSG_LAST85,3302
} CURLMSG;CURLMSG86,3338
struct CURLMsg {CURLMsg88,3350
  CURLMSG msg;       /* what this message means */msg89,3367
  CURL *easy_handle; /* the handle it concerns */easy_handle90,3418
  union {__anone31ac486030a91,3468
    void *whatever;    /* message-specific data */whatever92,3478
    CURLcode result;   /* return code for transfer */result93,3529
  } data;data94,3583
typedef struct CURLMsg CURLMsg;CURLMsg96,3596
#define CURL_WAIT_POLLIN CURL_WAIT_POLLIN101,3766
#define CURL_WAIT_POLLPRI CURL_WAIT_POLLPRI102,3801
#define CURL_WAIT_POLLOUT CURL_WAIT_POLLOUT103,3836
struct curl_waitfd {curl_waitfd105,3872
  curl_socket_t fd;fd106,3893
  short events;events107,3913
  short revents; /* not supported yet */revents108,3929
#define CURL_POLL_NONE CURL_POLL_NONE251,9551
#define CURL_POLL_IN CURL_POLL_IN252,9578
#define CURL_POLL_OUT CURL_POLL_OUT253,9605
#define CURL_POLL_INOUT CURL_POLL_INOUT254,9632
#define CURL_POLL_REMOVE CURL_POLL_REMOVE255,9659
#define CURL_SOCKET_TIMEOUT CURL_SOCKET_TIMEOUT257,9687
#define CURL_CSELECT_IN CURL_CSELECT_IN259,9732
#define CURL_CSELECT_OUT CURL_CSELECT_OUT260,9763
#define CURL_CSELECT_ERR CURL_CSELECT_ERR261,9794
typedef int (*curl_socket_callback)(CURL *easy,      /* easy handle */curl_socket_callback263,9826
typedef int (*curl_multi_timer_callback)(CURLM *multi,    /* multi handle */curl_multi_timer_callback280,10690
#define curl_multi_socket(curl_multi_socket300,11724
#define CINIT(CINIT318,12296
#define LONG LONG321,12449
#define OBJECTPOINT OBJECTPOINT322,12488
#define FUNCTIONPOINT FUNCTIONPOINT323,12534
#define OFF_T OFF_T324,12582
#define CINIT(CINIT325,12622
typedef enum {__anone31ac4860403328,12696
  CINIT(SOCKETFUNCTION, FUNCTIONPOINT, 1),CINIT330,12764
  CINIT(SOCKETDATA, OBJECTPOINT, 2),CINIT333,12867
  CINIT(PIPELINING, LONG, 3),CINIT336,12967
  CINIT(TIMERFUNCTION, FUNCTIONPOINT, 4),CINIT339,13051
  CINIT(TIMERDATA, OBJECTPOINT, 5),CINIT342,13152
  CINIT(MAXCONNECTS, LONG, 6),CINIT345,13247
  CINIT(MAX_HOST_CONNECTIONS, LONG, 7),CINIT348,13342
  CINIT(MAX_PIPELINE_LENGTH, LONG, 8),CINIT351,13432
  CINIT(CONTENT_LENGTH_PENALTY_SIZE, OFF_T, 9),CINIT355,13575
  CINIT(CHUNK_LENGTH_PENALTY_SIZE, OFF_T, 10),CINIT359,13725
  CINIT(PIPELINING_SITE_BL, OBJECTPOINT, 11),CINIT363,13851
  CINIT(PIPELINING_SERVER_BL, OBJECTPOINT, 12),CINIT367,13971
  CINIT(MAX_TOTAL_CONNECTIONS, LONG, 13),CINIT370,14072
  CURLMOPT_LASTENTRY /* the last unused */CURLMOPT_LASTENTRY372,14115
} CURLMoption;CURLMoption373,14158

json.cpp,6910
	query or count or whatever) except when specially accessed by the above routines.whatever17,941
	static bool curl_done_init = false;curl_done_init23,1076
static int jsonCreateFlags = 0;jsonCreateFlags24,1113
#define MAX_JSON_LABEL MAX_JSON_LABEL25,1145
static char jsonLabel[MAX_JSON_LABEL + 1];jsonLabel26,1171
bool safeJsonParse = false;safeJsonParse27,1214
int jsonIdIncrement = 1;jsonIdIncrement28,1242
int jsonDefaults = 0;jsonDefaults29,1267
int json_open_counter = 0;json_open_counter30,1289
uint64 json_open_time = 0;json_open_time31,1316
int jsonStore = 0; // where to put json fact refsjsonStore33,1344
int jsonIndex;jsonIndex34,1394
int jsonOpenSize = 0;jsonOpenSize35,1409
static unsigned int jsonPermanent = FACTTRANSIENT;jsonPermanent36,1431
bool jsonNoArrayduplicate = false;jsonNoArrayduplicate37,1482
bool jsonObjectDuplicate = false;jsonObjectDuplicate38,1517
bool jsonDontKill = false;jsonDontKill39,1551
bool directJsonText = false;directJsonText40,1578
static char* curlBufferBase = NULL;curlBufferBase41,1607
static int objectcnt = 0;objectcnt42,1643
typedef enum {__anonee2ccc90010347,1858
	URL_SCHEME = 0,URL_SCHEME48,1873
	URL_AUTHORITY,URL_AUTHORITY49,1890
	URL_PATH,URL_PATH50,1906
	URL_QUERY,URL_QUERY51,1917
	URL_FRAGMENTURL_FRAGMENT52,1929
} urlSegment;urlSegment53,1943
void InitJson()InitJson55,1958
static int JSONArgs()JSONArgs62,2043
void InitJSONNames()InitJSONNames133,3796
MEANING GetUniqueJsonComposite(char* prefix, unsigned int permanent)GetUniqueJsonComposite139,3884
bool IsValidJSONName(char* word, char type)IsValidJSONName157,4475
static char* IsJsonNumber(char* str)IsJsonNumber189,5446
static bool ConvertUnicode(char* str) // convert \uxxxx to utf8  and escaped characters to normaConvertUnicode214,6082
int factsJsonHelper(char* jsontext, jsmntok_t * tokens, int currToken, MEANING * retMeaning, intfactsJsonHelper273,7744
struct CurlBufferStruct {CurlBufferStruct417,13003
	char* buffer;buffer418,13029
	size_t size;size419,13044
static void dump(const char* text, FILE * stream, unsigned char* ptr, size_t size) // libcurl  cdump422,13062
#define REQUEST_HEADER_NVP_SEPARATOR REQUEST_HEADER_NVP_SEPARATOR470,14833
#define REQUEST_NVP_SEPARATOR REQUEST_NVP_SEPARATOR471,14874
size_t our_strlcpy(char* dst, const char* src, size_t siz) {our_strlcpy474,15022
# define SAFE_SPRINTF SAFE_SPRINTF497,15585
# define SAFE_SPRINTF SAFE_SPRINTF500,15650
static int EncodingValue(char* name, char* field, int value)EncodingValue503,15690
CURL* curl;curl528,16276
static int my_trace(CURL * handle, curl_infotype type, char* data, size_t size, void* userp)my_trace530,16289
static size_t CurlWriteMemoryCallback(void* ptr, size_t size, size_t nmemb, void* data) {CurlWriteMemoryCallback564,17117
void CurlShutdown()CurlShutdown583,17839
FunctionResult InitCurl()InitCurl593,17991
char* UrlEncodePiece(char* input)UrlEncodePiece610,18415
char* encodeSegment(char** fixed, char* at, char* start, CURL * curl)encodeSegment629,18845
static char* JSONUrlEncode(char* urlx, char* fixedUrl, CURL * curl)JSONUrlEncode649,19326
FunctionResult JSONOpenCode(char* buffer)JSONOpenCode723,21550
FunctionResult ParseJson(char* buffer, char* message, size_t size, bool nofail)ParseJson1110,34941
static char* jtab(int depth, char* buffer)jtab1167,36725
int orderJsonArrayMembers(WORDP D, FACT * *store)orderJsonArrayMembers1174,36837
static char* jwritehierarchy(bool log, bool defaultZero, int depth, char* buffer, WORDP D, int sjwritehierarchy1206,37648
FunctionResult JSONTreeCode(char* buffer)JSONTreeCode1338,41465
FunctionResult JSONKindCode(char* buffer)JSONKindCode1373,42365
FunctionResult JSONStorageCode(char* buffer)JSONStorageCode1383,42688
static FunctionResult JSONpath(char* buffer, char* path, char* jsonstructure, bool raw, bool nofJSONpath1393,42990
FunctionResult JSONPathCode(char* buffer)JSONPathCode1497,45822
static MEANING jcopy(MEANING M)jcopy1513,46347
void jkillfact(WORDP D)jkillfact1557,47694
static bool NotPlain(char* word)NotPlain1570,48081
char* jwrite(char* buffer, WORDP D, int subject, bool plain)jwrite1580,48239
FunctionResult JSONWriteCode(char* buffer) // FACT to textJSONWriteCode1686,51430
FunctionResult JSONUndecodeStringCode(char* buffer) // undo escapesJSONUndecodeStringCode1721,52250
static MEANING MergeObject(MEANING obj1, MEANING obj2)MergeObject1729,52537
static MEANING MergeArray(MEANING ar1, MEANING ar2)MergeArray1771,54108
FunctionResult JSONMergeCode(char* buffer)JSONMergeCode1887,58396
FunctionResult JSONLabelCode(char* buffer)JSONLabelCode1909,59098
static bool jsonGather(WORDP D, int limit, int depth)jsonGather1927,59765
FunctionResult JSONGatherCode(char* buffer) // jason FACT cluster by name to factSetJSONGatherCode1941,60280
static bool jsonWalkNode(WORDP D, FACT_FUNCTION func, uint64 data, int limit, int depth)jsonWalkNode1968,61126
void WalkJsonHierarchy(WORDP root, FACT_FUNCTION func, uint64 data, int depth)WalkJsonHierarchy1981,61649
FunctionResult JSONParseCode(char* buffer)JSONParseCode1988,61869
FunctionResult JSONParseFileCode(char* buffer)JSONParseFileCode2050,63470
#define OBJECTJ OBJECTJ2098,64720
#define ARRAYJ ARRAYJ2099,64738
#define DIDONE DIDONE2100,64755
#define MAXKIND MAXKIND2101,64772
FunctionResult JSONFormatCode(char* buffer)JSONFormatCode2103,64794
MEANING jsonValue(char* value, unsigned int& flags, bool stripQuotes)jsonValue2228,68518
static void  DoJSONAssign(WORDP base,bool changedBase,WORDP leftside, WORDP keyname, char* valueDoJSONAssign2269,69792
FunctionResult JSONObjectInsertCode(char* buffer) //  objectname objectkey objectvalue  JSONObjectInsertCode2383,74398
FunctionResult JSONVariableAssign(char* word, char* value, bool stripQuotes)JSONVariableAssign2416,75439
FunctionResult JSONArraySizeCode(char* buffer) // like ^length()JSONArraySizeCode2627,83291
FunctionResult JSONArrayDeleteCode(char* buffer) //  array, index	JSONArrayDeleteCode2632,83406
FunctionResult DoJSONArrayInsert(bool nodup, WORDP array, MEANING value, int flags, char* bufferDoJSONArrayInsert2695,85185
FunctionResult JSONArrayInsertCode(char* buffer) //  objectfact objectvalue  BEFORE/AFTER JSONArrayInsertCode2727,86192
FunctionResult JSONTextCode(char* buffer)JSONTextCode2756,87402
FunctionResult JSONCopyCode(char* buffer)JSONCopyCode2768,87779
FunctionResult JSONCreateCode(char* buffer)JSONCreateCode2785,88219
static void FixArrayFact(FACT * F, int index)FixArrayFact2798,88635
void JsonRenumber(FACT * G) // given array fact dying, renumber around itJsonRenumber2810,88952
FunctionResult JSONDeleteCode(char* buffer)JSONDeleteCode2835,89910
static char* SetArgument(char* ptr, size_t len)SetArgument2864,90834
FunctionResult JSONReadCSVCode(char* buffer)JSONReadCSVCode2877,91088

userSystem.cpp,3079
#define USERFACTS USERFACTS4,40
unsigned int userFactCount = USERFACTS;			// how many facts user may save in topic fileuserFactCount6,69
bool serverRetryOK = false;serverRetryOK7,157
bool stopUserWrite = false;stopUserWrite8,185
static char* backupMessages = NULL;backupMessages9,213
FACT* migratetop = NULL;migratetop10,249
#define MAX_USER_MESSAGES MAX_USER_MESSAGES12,275
char chatbotSaid[MAX_USED+1][SAID_LIMIT+3];  //   tracks last n messages sent to userchatbotSaid15,346
char humanSaid[MAX_USED+1][SAID_LIMIT+3]; //   tracks last n messages sent by user in parallel whumanSaid16,432
int humanSaidIndex;humanSaidIndex17,541
int chatbotSaidIndex;chatbotSaidIndex18,561
char caller[MAX_WORD_SIZE];caller19,583
char callee[MAX_WORD_SIZE];callee20,611
static char* saveVersion = "jul2116";	// format of save filesaveVersion22,640
unsigned int userFirstLine = 0;	// start volley of current conversationuserFirstLine24,702
uint64 setControl = 0;	// which sets should be saved with usersetControl25,774
char ipAddress[ID_SIZE];ipAddress27,838
char computerID[ID_SIZE];computerID28,863
char computerIDwSpace[ID_SIZE];computerIDwSpace29,889
char loginID[ID_SIZE];    //   user FILE name (lower case)loginID30,921
char loginName[ID_SIZE];    //   user typed nameloginName31,980
char callerIP[ID_SIZE];callerIP32,1029
char timeturn15[100];timeturn1534,1054
char timeturn0[20];timeturn035,1076
char timePrior[20];timePrior36,1096
void PartialLogin(char* caller,char* ip)PartialLogin39,1148
bool Login(char* user,char* usee,char* ip,char* incoming) //   select the participantsLogin58,1605
void ReadComputerID()ReadComputerID139,4030
void ResetUserChat()ResetUserChat155,4407
static char* WriteUserFacts(char* ptr,bool sharefile,unsigned int limit,char* saveJSON)WriteUserFacts161,4491
static bool ReadUserFacts()ReadUserFacts257,7744
#define INFINITE_BUFFER INFINITE_BUFFER313,9193
static char* SafeLine(char* line) // be JSON text safeSafeLine314,9226
static char* WriteRecentMessages(char* ptr,bool sharefile,int messageCount)WriteRecentMessages324,9547
static bool ReadRecentMessages() ReadRecentMessages362,10746
void RecoverUser() // regain stuff we loaded from userRecoverUser409,12466
static void FollowJSON(FACT* F)FollowJSON436,13162
static void SaveJSON(WORDP D) // json structure headSaveJSON448,13510
char* WriteUserVariables(char* ptr,bool sharefile, bool compiled,char* saveJSON)WriteUserVariables459,13831
static bool ReadUserVariables()ReadUserVariables535,16347
static char* GatherUserData(char* ptr,time_t curr,bool sharefile)GatherUserData589,18097
void WriteUserData(time_t curr, bool nobackup)WriteUserData645,20011
static  bool ReadFileData(char* bot) // passed  buffer with file content (where feasible)ReadFileData722,23324
void GetUserData(ResetMode& buildReset,char* incoming)GetUserData816,26147
void ReadUserData() // passed  buffer with file content (where feasible)ReadUserData859,27560
void KillShare()KillShare889,28577
void ReadNewUser()ReadNewUser900,28966

zif.cpp,213
static char zif_error_buf[132];zif_error_buf10,172
const char* zif_error(void)zif_error12,205
int zif_compress(struct zif_t* zs)zif_compress18,265
int zif_uncompress(struct zif_t* zs)zif_uncompress52,1343

factSystem.h,3227
#define _FACTSYSTEMH__FACTSYSTEMH_2,22
#define MAX_FACT_NODES MAX_FACT_NODES17,1134
typedef struct FACT FACT19,1166
    uint64 botBits;		// which bots can access this fact (up to 64)botBits21,1191
    MEANING subject;subject22,1258
    MEANING verb;verb23,1279
    MEANING object;object24,1297
	unsigned int flags;flags25,1317
 	FACTOID_OR_MEANING subjectHead;	subjectHead27,1366
	FACTOID_OR_MEANING verbHead;		verbHead28,1401
	FACTOID_OR_MEANING objectHead;		objectHead29,1433
    FACTOID_OR_MEANING subjectNext;	subjectNext30,1467
 	FACTOID_OR_MEANING verbNext;		verbNext31,1504
    FACTOID_OR_MEANING objectNext;  	objectNext32,1537
} FACT;FACT33,1575
typedef void (*FACT_FUNCTION)(FACT* F, uint64 data);FACT_FUNCTION54,2321
inline FACTOID currentFactIndex() { return (currentFact) ? (FACTOID)((currentFact - factBase)) :currentFactIndex59,2457
inline FACT* GetSubjectHead(FACT* F) {return Index2Fact(F->subjectHead);}GetSubjectHead121,4951
inline FACT* GetVerbHead(FACT* F) {return Index2Fact(F->verbHead);}GetVerbHead122,5025
inline FACT* GetObjectHead(FACT* F) {return Index2Fact(F->objectHead);}GetObjectHead123,5093
inline void SetSubjectHead(FACT* F, FACT* value){ F->subjectHead = Fact2Index(value);}SetSubjectHead129,5277
inline void SetVerbHead(FACT* F, FACT* value) {F->verbHead = Fact2Index(value);}SetVerbHead130,5364
inline void SetObjectHead(FACT* F, FACT* value){ F->objectHead = Fact2Index(value);}SetObjectHead131,5445
typedef FACT* (*GetNextFact)(FACT* F);GetNextFact133,5531
typedef void (*SetNextFact)(FACT* F,FACT* value);SetNextFact134,5570
inline FACT* GetSubjectHead(WORDP D) {return Index2Fact(D->subjectHead);}GetSubjectHead146,5971
inline FACT* GetVerbHead(WORDP D) {return Index2Fact(D->verbHead);}GetVerbHead147,6045
inline FACT* GetObjectHead(WORDP D)  {return Index2Fact(D->objectHead);}GetObjectHead148,6113
inline FACT* GetSubjectNondeadHead(MEANING M) {return GetSubjectNondeadHead(Meaning2Word(M));}GetSubjectNondeadHead153,6320
inline FACT* GetVerbNondeadHead(MEANING M) {return GetVerbNondeadHead(Meaning2Word(M));}GetVerbNondeadHead154,6415
inline FACT* GetObjectNondeadHead(MEANING M)  {return GetObjectNondeadHead(Meaning2Word(M));}GetObjectNondeadHead155,6504
inline void SetSubjectHead(WORDP D, FACT* value) {D->subjectHead = Fact2Index(value);}SetSubjectHead157,6599
inline void SetVerbHead(WORDP D, FACT* value) {D->verbHead = Fact2Index(value);}SetVerbHead158,6686
inline void SetObjectHead(WORDP D, FACT* value) {D->objectHead = Fact2Index(value);}SetObjectHead159,6767
inline FACT* GetSubjectHead(MEANING M) {return GetSubjectHead(Meaning2Word(M));}GetSubjectHead161,6853
inline FACT* GetVerbHead(MEANING M) {return GetVerbHead(Meaning2Word(M));}GetVerbHead162,6934
inline FACT* GetObjectHead(MEANING M)  {return GetObjectHead(Meaning2Word(M));}GetObjectHead163,7009
inline void SetSubjectHead(MEANING M, FACT* value) {SetSubjectHead(Meaning2Word(M),value);}SetSubjectHead164,7089
inline void SetVerbHead(MEANING M, FACT* value) {SetVerbHead(Meaning2Word(M),value);}SetVerbHead165,7181
inline void SetObjectHead(MEANING M, FACT* value) {SetObjectHead(Meaning2Word(M),value);}SetObjectHead166,7267

tokenSystem.h,277
#define _TOKENSYSTEMH__TOKENSYSTEMH_2,23
#define FUNDAMENTAL_VERB FUNDAMENTAL_VERB19,1157
#define FUNDAMENTAL_OBJECT FUNDAMENTAL_OBJECT20,1184
#define FUNDAMENTAL_SUBJECT FUNDAMENTAL_SUBJECT21,1213
#define FUNDAMENTAL_SUBJECT_OBJECT FUNDAMENTAL_SUBJECT_OBJECT22,1243

systemVariables.h,437
#define _SYSTEMVARIABLESH__SYSTEMVARIABLESH_2,27
typedef char* (*SYSTEMVARPTR)(char* value); //   value is strictly overrride for testingSYSTEMVARPTR18,1145
typedef struct SYSTEMVARIABLESYSTEMVARIABLE20,1235
    const char* name;			// script namename22,1267
    SYSTEMVARPTR address;		// function used to access itaddress23,1306
    const char* comment;		// descriptioncomment24,1363
} SYSTEMVARIABLE;SYSTEMVARIABLE25,1404

duktape/duk_config.h,58204
#define DUK_CONFIG_H_INCLUDEDDUK_CONFIG_H_INCLUDED63,1243
#define DUK_F_APPLEDUK_F_APPLE75,1443
#define DUK_F_FREEBSDDUK_F_FREEBSD80,1532
#define DUK_F_ORBISDUK_F_ORBIS85,1637
#define DUK_F_OPENBSDDUK_F_OPENBSD90,1726
#define DUK_F_NETBSDDUK_F_NETBSD95,1814
#define DUK_F_BSDDUK_F_BSD101,1992
#define DUK_F_TOSDUK_F_TOS108,2186
#define DUK_F_M68KDUK_F_M68K115,2380
#define DUK_F_AMIGAOSDUK_F_AMIGAOS122,2574
#define DUK_F_PPCDUK_F_PPC127,2685
#define DUK_F_PPC64DUK_F_PPC64129,2765
#define DUK_F_PPC32DUK_F_PPC32131,2791
#define DUK_F_DURANGODUK_F_DURANGO137,2895
#define DUK_F_WINDOWSDUK_F_WINDOWS143,3114
#define DUK_F_WIN64DUK_F_WIN64145,3174
#define DUK_F_WIN32DUK_F_WIN32147,3200
#define DUK_F_FLASHPLAYERDUK_F_FLASHPLAYER153,3302
#define DUK_F_QNXDUK_F_QNX158,3367
#define DUK_F_TINSPIREDUK_F_TINSPIRE163,3447
#define DUK_F_EMSCRIPTENDUK_F_EMSCRIPTEN168,3570
#define DUK_F_BCCDUK_F_BCC173,3727
#define DUK_F_ANDROIDDUK_F_ANDROID177,3798
#define DUK_F_LINUXDUK_F_LINUX182,3901
#define DUK_F_SUNDUK_F_SUN187,3991
#define DUK_F_OLD_SOLARISDUK_F_OLD_SOLARIS189,4057
#define DUK_F_AIXDUK_F_AIX201,4401
#define DUK_F_HPUXDUK_F_HPUX206,4458
#define DUK_F_HPUX_ITANIUMDUK_F_HPUX_ITANIUM208,4497
#define DUK_F_POSIXDUK_F_POSIX214,4572
#define DUK_F_CYGWINDUK_F_CYGWIN219,4637
#define DUK_F_UNIXDUK_F_UNIX225,4813
#define DUK_F_X32DUK_F_X32239,5284
#define DUK_F_X64DUK_F_X64241,5308
#define DUK_F_X64DUK_F_X64249,5706
#define DUK_F_X86DUK_F_X86251,5730
#define DUK_F_ARMDUK_F_ARM257,5897
#define DUK_F_ARM64DUK_F_ARM64259,6042
#define DUK_F_ARM32DUK_F_ARM32261,6068
#define DUK_F_MIPSDUK_F_MIPS271,6476
#define DUK_F_MIPS64DUK_F_MIPS64274,6608
#define DUK_F_MIPS32DUK_F_MIPS32276,6635
#define DUK_F_SPARCDUK_F_SPARC282,6744
#define DUK_F_SPARC64DUK_F_SPARC64284,6804
#define DUK_F_SPARC32DUK_F_SPARC32286,6832
#define DUK_F_RISCVDUK_F_RISCV292,6985
#define DUK_F_RISCV32DUK_F_RISCV32295,7056
#define DUK_F_RISCV64DUK_F_RISCV64297,7105
#define DUK_F_SUPERHDUK_F_SUPERH313,7540
#define DUK_F_CLANGDUK_F_CLANG318,7604
#define DUK_F_CPPDUK_F_CPP324,7684
#define DUK_F_C99DUK_F_C99330,7809
#define DUK_F_CPP11DUK_F_CPP11336,7928
#define DUK_F_GCCDUK_F_GCC341,8102
#define DUK_F_GCC_VERSION DUK_F_GCC_VERSION344,8323
#define DUK_F_MINGWDUK_F_MINGW352,8581
#define DUK_F_MSVCDUK_F_MSVC361,8913
#define DUK_F_MSVC_FULL_VER DUK_F_MSVC_FULL_VER364,8991
#define DUK_F_MSCV_FULL_VER DUK_F_MSCV_FULL_VER366,9039
#define DUK_F_TINYCDUK_F_TINYC374,9208
#define DUK_F_VBCCDUK_F_VBCC379,9269
#define DUK_F_MINTDUK_F_MINT384,9335
#define __STDC_LIMIT_MACROS__STDC_LIMIT_MACROS395,9595
#define __STDC_CONSTANT_MACROS__STDC_CONSTANT_MACROS398,9691
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY403,9793
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R404,9831
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME405,9865
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME406,9899
#define DUK_USE_OS_STRING DUK_USE_OS_STRING415,10211
#define DUK_USE_OS_STRING DUK_USE_OS_STRING417,10273
#define DUK_USE_OS_STRING DUK_USE_OS_STRING419,10328
#define DUK_USE_OS_STRING DUK_USE_OS_STRING421,10366
#define DUK_JMPBUF_TYPE DUK_JMPBUF_TYPE425,10466
#define DUK_SETJMP(DUK_SETJMP426,10504
#define DUK_LONGJMP(DUK_LONGJMP427,10548
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY431,10661
#define DUK_USE_DATE_TZO_GMTIME_SDUK_USE_DATE_TZO_GMTIME_S432,10699
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME434,10765
#define DUK_USE_OS_STRING DUK_USE_OS_STRING441,10914
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY445,11069
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R446,11107
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME447,11141
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME448,11175
#define DUK_USE_OS_STRING DUK_USE_OS_STRING455,11320
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY458,11408
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R459,11446
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME460,11480
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME461,11514
#define DUK_USE_OS_STRING DUK_USE_OS_STRING468,11659
#define DUK_USE_DATE_NOW_TIMEDUK_USE_DATE_NOW_TIME471,11744
#define DUK_USE_DATE_TZO_GMTIMEDUK_USE_DATE_TZO_GMTIME472,11774
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME474,11838
#define DUK_USE_OS_STRING DUK_USE_OS_STRING477,11891
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER481,12020
#define DUK_USE_DATE_NOW_TIMEDUK_USE_DATE_NOW_TIME487,12152
#define DUK_USE_DATE_TZO_GMTIMEDUK_USE_DATE_TZO_GMTIME488,12182
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME490,12246
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY493,12323
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R494,12361
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME495,12395
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME496,12429
#define UINTPTR_MAX UINTPTR_MAX499,12507
#define DUK_USE_OS_STRING DUK_USE_OS_STRING505,12608
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER509,12775
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS523,13251
#define DUK_USE_DATE_NOW_WINDOWSDUK_USE_DATE_NOW_WINDOWS527,13328
#define DUK_USE_DATE_TZO_WINDOWS_NO_DSTDUK_USE_DATE_TZO_WINDOWS_NO_DST528,13361
#define DUK_USE_OS_STRING DUK_USE_OS_STRING540,13771
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER543,13840
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS557,14382
#define DUK_USE_DATE_NOW_WINDOWS_SUBMSDUK_USE_DATE_NOW_WINDOWS_SUBMS577,15016
#define DUK_USE_DATE_NOW_WINDOWSDUK_USE_DATE_NOW_WINDOWS579,15061
#define DUK_USE_DATE_TZO_WINDOWSDUK_USE_DATE_TZO_WINDOWS583,15109
#define DUK_USE_GET_MONOTONIC_TIME_WINDOWS_QPCDUK_USE_GET_MONOTONIC_TIME_WINDOWS_QPC595,15655
#define DUK_USE_OS_STRING DUK_USE_OS_STRING598,15710
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER604,15910
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY608,16018
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R609,16056
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME610,16090
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME611,16124
#define DUK_USE_OS_STRING DUK_USE_OS_STRING617,16242
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER620,16345
#define _XOPEN_SOURCE _XOPEN_SOURCE626,16542
#define _POSIX_C_SOURCE _POSIX_C_SOURCE627,16571
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY630,16612
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R631,16650
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME632,16684
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME633,16718
#define DUK_USE_OS_STRING DUK_USE_OS_STRING639,16839
#define _XOPEN_SOURCE _XOPEN_SOURCE643,16987
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY646,17040
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R647,17078
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME648,17112
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME649,17146
#define DUK_USE_OS_STRING DUK_USE_OS_STRING655,17267
#define _POSIX_C_SOURCE _POSIX_C_SOURCE660,17426
#define _GNU_SOURCE _GNU_SOURCE663,17492
#define _XOPEN_SOURCE _XOPEN_SOURCE666,17573
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY681,17860
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R682,17898
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME683,17932
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME684,17966
#define DUK_USE_OS_STRING DUK_USE_OS_STRING686,18001
#define _POSIX_C_SOURCE _POSIX_C_SOURCE691,18156
#define _GNU_SOURCE _GNU_SOURCE694,18222
#define _XOPEN_SOURCE _XOPEN_SOURCE697,18303
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY712,18602
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R713,18640
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME714,18674
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME715,18708
#define DUK_USE_OS_STRING DUK_USE_OS_STRING721,18834
#define _POSIX_C_SOURCE _POSIX_C_SOURCE726,18982
#define _GNU_SOURCE _GNU_SOURCE729,19048
#define _XOPEN_SOURCE _XOPEN_SOURCE732,19129
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY747,19428
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R748,19466
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME749,19500
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME750,19534
#define DUK_USE_OS_STRING DUK_USE_OS_STRING756,19660
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY759,19741
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R760,19779
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME761,19813
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME762,19847
#define DUK_F_NO_STDINT_HDUK_F_NO_STDINT_H767,19981
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER769,20039
#define DUK_USE_OS_STRING DUK_USE_OS_STRING779,20225
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER783,20336
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY785,20371
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R786,20409
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME787,20443
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME788,20477
#define DUK_USE_OS_STRING DUK_USE_OS_STRING793,20575
#define DUK_F_NO_STDINT_HDUK_F_NO_STDINT_H796,20652
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER798,20710
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY800,20745
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R801,20783
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME802,20817
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME803,20851
#define DUK_USE_OS_STRING DUK_USE_OS_STRING808,20949
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY811,21037
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R812,21075
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME813,21109
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME814,21143
#define DUK_USE_OS_STRING DUK_USE_OS_STRING821,21284
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY825,21402
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R826,21440
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME827,21474
#define DUK_JMPBUF_TYPE DUK_JMPBUF_TYPE834,21615
#define DUK_SETJMP(DUK_SETJMP835,21653
#define DUK_LONGJMP(DUK_LONGJMP836,21697
#define DUK_USE_OS_STRING DUK_USE_OS_STRING838,21746
#define DUK_USE_DATE_NOW_GETTIMEOFDAYDUK_USE_DATE_NOW_GETTIMEOFDAY841,21835
#define DUK_USE_DATE_TZO_GMTIME_RDUK_USE_DATE_TZO_GMTIME_R842,21873
#define DUK_USE_DATE_PRS_STRPTIMEDUK_USE_DATE_PRS_STRPTIME843,21907
#define DUK_USE_DATE_FMT_STRFTIMEDUK_USE_DATE_FMT_STRFTIME844,21941
#define DUK_USE_OS_STRING DUK_USE_OS_STRING847,22015
#define DUK_USE_DATE_NOW_TIMEDUK_USE_DATE_NOW_TIME853,22190
#define DUK_USE_DATE_TZO_GMTIMEDUK_USE_DATE_TZO_GMTIME858,22344
#define DUK_USE_OS_STRING DUK_USE_OS_STRING867,22580
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING901,23396
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER903,23462
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL906,23498
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED915,23835
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING918,23913
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER920,23979
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED923,24041
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING926,24119
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER928,24185
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL930,24220
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED931,24248
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING934,24335
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL936,24419
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED937,24447
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING940,24534
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED943,24645
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING946,24734
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL948,24826
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED949,24854
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING952,24943
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED955,25062
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING958,25153
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER960,25221
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL962,25256
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED963,25284
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING966,25375
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER968,25443
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED971,25505
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING974,25596
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL976,25690
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED977,25718
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING980,25809
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED983,25930
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING986,26022
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER987,26060
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL988,26088
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED989,26116
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING992,26208
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER993,26246
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED995,26301
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING998,26385
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL1000,26466
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED1001,26494
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING1004,26582
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER1006,26649
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL1008,26684
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED1009,26712
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING1012,26804
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER1014,26877
#define DUK_F_PACKED_TVAL_PROVIDEDDUK_F_PACKED_TVAL_PROVIDED1017,26939
#define DUK_USE_ARCH_STRING DUK_USE_ARCH_STRING1021,27042
#define DUK_VA_COPY(DUK_VA_COPY1033,27384
#define DUK_VA_COPY(DUK_VA_COPY1036,27495
#define DUK_NORETURN(DUK_NORETURN1039,27553
#define DUK_UNREACHABLE(DUK_UNREACHABLE1043,27703
#define DUK_USE_BRANCH_HINTSDUK_USE_BRANCH_HINTS1047,27787
#define DUK_LIKELY(DUK_LIKELY1048,27816
#define DUK_UNLIKELY(DUK_UNLIKELY1049,27866
#define DUK_UNPREDICTABLE(DUK_UNPREDICTABLE1052,28008
#define DUK_NOINLINE DUK_NOINLINE1057,28129
#define DUK_INLINE DUK_INLINE1058,28183
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE1059,28218
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1070,28534
#define DUK_EXTERNAL DUK_EXTERNAL1071,28590
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1073,28645
#define DUK_EXTERNAL DUK_EXTERNAL1074,28701
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1077,28782
#define DUK_INTERNAL DUK_INTERNAL1078,28816
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1080,28856
#define DUK_INTERNAL DUK_INTERNAL1081,28890
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1083,28934
#define DUK_LOCAL DUK_LOCAL1084,28968
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1086,29008
#define DUK_EXTERNAL DUK_EXTERNAL1087,29082
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1095,29547
#define DUK_INTERNAL DUK_INTERNAL1096,29606
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1098,29671
#define DUK_INTERNAL DUK_INTERNAL1099,29705
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1103,29839
#define DUK_INTERNAL DUK_INTERNAL1104,29937
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1106,30034
#define DUK_INTERNAL DUK_INTERNAL1107,30107
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1110,30187
#define DUK_LOCAL DUK_LOCAL1111,30221
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1115,30286
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1117,30332
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1122,30458
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1125,30498
#define DUK_USE_FLEX_C99DUK_USE_FLEX_C991131,30638
#define DUK_USE_FLEX_ZEROSIZEDUK_USE_FLEX_ZEROSIZE1133,30669
#define DUK_USE_CLANG_PRAGMASDUK_USE_CLANG_PRAGMAS1136,30707
#define DUK_USE_PACK_CLANG_ATTRDUK_USE_PACK_CLANG_ATTR1137,30737
#define DUK_BSWAP64(DUK_BSWAP641141,30856
#define DUK_BSWAP32(DUK_BSWAP321144,30978
#define DUK_BSWAP16(DUK_BSWAP161147,31100
#define DUK_VA_COPY(DUK_VA_COPY1154,31348
#define DUK_VA_COPY(DUK_VA_COPY1157,31457
#define DUK_NORETURN(DUK_NORETURN1166,31771
#define DUK_UNREACHABLE(DUK_UNREACHABLE1171,31923
#define DUK_USE_BRANCH_HINTSDUK_USE_BRANCH_HINTS1174,32000
#define DUK_LIKELY(DUK_LIKELY1179,32258
#define DUK_UNLIKELY(DUK_UNLIKELY1180,32308
#define DUK_NOINLINE DUK_NOINLINE1186,32539
#define DUK_INLINE DUK_INLINE1187,32593
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE1188,32628
#define DUK_HOT DUK_HOT1193,32819
#define DUK_COLD DUK_COLD1194,32868
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1202,33138
#define DUK_EXTERNAL DUK_EXTERNAL1203,33194
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1205,33249
#define DUK_EXTERNAL DUK_EXTERNAL1206,33305
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1209,33386
#define DUK_INTERNAL DUK_INTERNAL1210,33420
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1212,33460
#define DUK_INTERNAL DUK_INTERNAL1213,33494
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1215,33538
#define DUK_LOCAL DUK_LOCAL1216,33572
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1218,33671
#define DUK_EXTERNAL DUK_EXTERNAL1219,33745
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1227,34210
#define DUK_INTERNAL DUK_INTERNAL1228,34269
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1230,34334
#define DUK_INTERNAL DUK_INTERNAL1231,34368
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1235,34502
#define DUK_INTERNAL DUK_INTERNAL1236,34600
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1238,34697
#define DUK_INTERNAL DUK_INTERNAL1239,34770
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1242,34850
#define DUK_LOCAL DUK_LOCAL1243,34884
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1248,34974
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1250,35022
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1254,35098
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1256,35142
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1262,35296
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1265,35336
#define DUK_USE_FLEX_C99DUK_USE_FLEX_C991271,35476
#define DUK_USE_FLEX_ZEROSIZEDUK_USE_FLEX_ZEROSIZE1273,35507
#define DUK_USE_GCC_PRAGMASDUK_USE_GCC_PRAGMAS1278,35667
#define DUK_USE_PACK_GCC_ATTRDUK_USE_PACK_GCC_ATTR1283,35736
#define DUK_BSWAP64(DUK_BSWAP641290,36009
#define DUK_BSWAP32(DUK_BSWAP321291,36087
#define DUK_BSWAP16(DUK_BSWAP161292,36165
#define DUK_NORETURN(DUK_NORETURN1297,36362
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1311,36808
#define DUK_EXTERNAL DUK_EXTERNAL1312,36864
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1314,36919
#define DUK_EXTERNAL DUK_EXTERNAL1315,36975
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1318,37056
#define DUK_INTERNAL DUK_INTERNAL1319,37090
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1321,37130
#define DUK_INTERNAL DUK_INTERNAL1322,37164
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1324,37208
#define DUK_LOCAL DUK_LOCAL1325,37242
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1329,37307
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1331,37354
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1336,37455
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1339,37602
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1350,38128
#define DUK_USE_FLEX_C99DUK_USE_FLEX_C991357,38275
#define DUK_USE_FLEX_ZEROSIZEDUK_USE_FLEX_ZEROSIZE1359,38306
#define DUK_USE_PACK_MSVC_PRAGMADUK_USE_PACK_MSVC_PRAGMA1364,38372
#define DUK_NOINLINE DUK_NOINLINE1370,38566
#define DUK_INLINE DUK_INLINE1371,38615
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE1372,38652
#define DUK_SNPRINTF DUK_SNPRINTF1376,38746
#define DUK_VSNPRINTF DUK_VSNPRINTF1377,38780
#define DUK_SNPRINTF DUK_SNPRINTF1383,39053
#define DUK_VSNPRINTF DUK_VSNPRINTF1384,39088
#define DUK_UNREF(DUK_UNREF1390,39278
#define DUK_UNREF(DUK_UNREF1392,39305
#define DUK_U64_CONSTANT(DUK_U64_CONSTANT1396,39467
#define DUK_I64_CONSTANT(DUK_I64_CONSTANT1397,39503
#define DUK_NORETURN(DUK_NORETURN1400,39595
#define DUK_UNREACHABLE(DUK_UNREACHABLE1404,39745
#define DUK_USE_BRANCH_HINTSDUK_USE_BRANCH_HINTS1408,39829
#define DUK_LIKELY(DUK_LIKELY1409,39858
#define DUK_UNLIKELY(DUK_UNLIKELY1410,39908
#define DUK_UNPREDICTABLE(DUK_UNPREDICTABLE1413,40050
#define DUK_NOINLINE DUK_NOINLINE1418,40171
#define DUK_INLINE DUK_INLINE1419,40225
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE1420,40260
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL1423,40334
#define DUK_EXTERNAL DUK_EXTERNAL1424,40408
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1432,40873
#define DUK_INTERNAL DUK_INTERNAL1433,40932
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1435,40997
#define DUK_INTERNAL DUK_INTERNAL1436,41031
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1440,41165
#define DUK_INTERNAL DUK_INTERNAL1441,41263
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL1443,41360
#define DUK_INTERNAL DUK_INTERNAL1444,41433
#define DUK_LOCAL_DECL DUK_LOCAL_DECL1447,41513
#define DUK_LOCAL DUK_LOCAL1448,41547
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1450,41582
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1454,41706
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1457,41746
#define DUK_USE_FLEX_C99DUK_USE_FLEX_C991463,41886
#define DUK_USE_FLEX_ZEROSIZEDUK_USE_FLEX_ZEROSIZE1465,41917
#define DUK_USE_PACK_CLANG_ATTRDUK_USE_PACK_CLANG_ATTR1469,41982
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1475,42113
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1477,42161
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1481,42256
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1483,42289
#define DUK_USE_FLEX_ONESIZEDUK_USE_FLEX_ONESIZE1486,42359
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER1489,42435
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1495,42566
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1497,42615
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1502,42740
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1510,42994
#define DUK_USE_FLEX_ZEROSIZEDUK_USE_FLEX_ZEROSIZE1513,43037
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER1514,43067
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1520,43211
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1522,43257
#define DUK_USE_FLEX_ONESIZEDUK_USE_FLEX_ONESIZE1532,43458
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER1535,43534
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER1539,43633
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1546,43748
#define DUK_USE_COMPILER_STRING DUK_USE_COMPILER_STRING1548,43800
#define DUK_USE_VARIADIC_MACROSDUK_USE_VARIADIC_MACROS1553,43928
#define DUK_USE_UNION_INITIALIZERSDUK_USE_UNION_INITIALIZERS1559,44103
#define DUK_USE_FLEX_ONESIZEDUK_USE_FLEX_ONESIZE1563,44180
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER1566,44256
#define DUK_F_UCLIBCDUK_F_UCLIBC1571,44362
#define DUK_F_32BIT_PTRSDUK_F_32BIT_PTRS1627,46462
#define DUK_F_64BIT_PTRSDUK_F_64BIT_PTRS1633,46706
#define DUK_F_HAVE_INTTYPESDUK_F_HAVE_INTTYPES1643,47031
#define DUK_F_HAVE_INTTYPESDUK_F_HAVE_INTTYPES1646,47155
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1655,47361
typedef uint8_t duk_uint8_t;duk_uint8_t1658,47409
typedef int8_t duk_int8_t;duk_int8_t1659,47438
typedef uint16_t duk_uint16_t;duk_uint16_t1660,47465
typedef int16_t duk_int16_t;duk_int16_t1661,47496
typedef uint32_t duk_uint32_t;duk_uint32_t1662,47525
typedef int32_t duk_int32_t;duk_int32_t1663,47556
typedef uint64_t duk_uint64_t;duk_uint64_t1664,47585
typedef int64_t duk_int64_t;duk_int64_t1665,47616
typedef uint_least8_t duk_uint_least8_t;duk_uint_least8_t1666,47645
typedef int_least8_t duk_int_least8_t;duk_int_least8_t1667,47686
typedef uint_least16_t duk_uint_least16_t;duk_uint_least16_t1668,47725
typedef int_least16_t duk_int_least16_t;duk_int_least16_t1669,47768
typedef uint_least32_t duk_uint_least32_t;duk_uint_least32_t1670,47809
typedef int_least32_t duk_int_least32_t;duk_int_least32_t1671,47852
typedef uint_least64_t duk_uint_least64_t;duk_uint_least64_t1672,47893
typedef int_least64_t duk_int_least64_t;duk_int_least64_t1673,47936
typedef uint_fast8_t duk_uint_fast8_t;duk_uint_fast8_t1674,47977
typedef int_fast8_t duk_int_fast8_t;duk_int_fast8_t1675,48016
typedef uint_fast16_t duk_uint_fast16_t;duk_uint_fast16_t1676,48053
typedef int_fast16_t duk_int_fast16_t;duk_int_fast16_t1677,48094
typedef uint_fast32_t duk_uint_fast32_t;duk_uint_fast32_t1678,48133
typedef int_fast32_t duk_int_fast32_t;duk_int_fast32_t1679,48174
typedef uint_fast64_t duk_uint_fast64_t;duk_uint_fast64_t1680,48213
typedef int_fast64_t duk_int_fast64_t;duk_int_fast64_t1681,48254
typedef uintptr_t duk_uintptr_t;duk_uintptr_t1682,48293
typedef intptr_t duk_intptr_t;duk_intptr_t1683,48326
typedef uintmax_t duk_uintmax_t;duk_uintmax_t1684,48357
typedef intmax_t duk_intmax_t;duk_intmax_t1685,48390
#define DUK_UINT8_MIN DUK_UINT8_MIN1687,48422
#define DUK_UINT8_MAX DUK_UINT8_MAX1688,48454
#define DUK_INT8_MIN DUK_INT8_MIN1689,48494
#define DUK_INT8_MAX DUK_INT8_MAX1690,48533
#define DUK_UINT_LEAST8_MIN DUK_UINT_LEAST8_MIN1691,48572
#define DUK_UINT_LEAST8_MAX DUK_UINT_LEAST8_MAX1692,48604
#define DUK_INT_LEAST8_MIN DUK_INT_LEAST8_MIN1693,48650
#define DUK_INT_LEAST8_MAX DUK_INT_LEAST8_MAX1694,48695
#define DUK_UINT_FAST8_MIN DUK_UINT_FAST8_MIN1695,48740
#define DUK_UINT_FAST8_MAX DUK_UINT_FAST8_MAX1696,48772
#define DUK_INT_FAST8_MIN DUK_INT_FAST8_MIN1697,48817
#define DUK_INT_FAST8_MAX DUK_INT_FAST8_MAX1698,48861
#define DUK_UINT16_MIN DUK_UINT16_MIN1699,48905
#define DUK_UINT16_MAX DUK_UINT16_MAX1700,48937
#define DUK_INT16_MIN DUK_INT16_MIN1701,48978
#define DUK_INT16_MAX DUK_INT16_MAX1702,49018
#define DUK_UINT_LEAST16_MIN DUK_UINT_LEAST16_MIN1703,49058
#define DUK_UINT_LEAST16_MAX DUK_UINT_LEAST16_MAX1704,49090
#define DUK_INT_LEAST16_MIN DUK_INT_LEAST16_MIN1705,49137
#define DUK_INT_LEAST16_MAX DUK_INT_LEAST16_MAX1706,49183
#define DUK_UINT_FAST16_MIN DUK_UINT_FAST16_MIN1707,49229
#define DUK_UINT_FAST16_MAX DUK_UINT_FAST16_MAX1708,49261
#define DUK_INT_FAST16_MIN DUK_INT_FAST16_MIN1709,49307
#define DUK_INT_FAST16_MAX DUK_INT_FAST16_MAX1710,49352
#define DUK_UINT32_MIN DUK_UINT32_MIN1711,49397
#define DUK_UINT32_MAX DUK_UINT32_MAX1712,49429
#define DUK_INT32_MIN DUK_INT32_MIN1713,49470
#define DUK_INT32_MAX DUK_INT32_MAX1714,49510
#define DUK_UINT_LEAST32_MIN DUK_UINT_LEAST32_MIN1715,49550
#define DUK_UINT_LEAST32_MAX DUK_UINT_LEAST32_MAX1716,49582
#define DUK_INT_LEAST32_MIN DUK_INT_LEAST32_MIN1717,49629
#define DUK_INT_LEAST32_MAX DUK_INT_LEAST32_MAX1718,49675
#define DUK_UINT_FAST32_MIN DUK_UINT_FAST32_MIN1719,49721
#define DUK_UINT_FAST32_MAX DUK_UINT_FAST32_MAX1720,49753
#define DUK_INT_FAST32_MIN DUK_INT_FAST32_MIN1721,49799
#define DUK_INT_FAST32_MAX DUK_INT_FAST32_MAX1722,49844
#define DUK_UINT64_MIN DUK_UINT64_MIN1723,49889
#define DUK_UINT64_MAX DUK_UINT64_MAX1724,49921
#define DUK_INT64_MIN DUK_INT64_MIN1725,49962
#define DUK_INT64_MAX DUK_INT64_MAX1726,50002
#define DUK_UINT_LEAST64_MIN DUK_UINT_LEAST64_MIN1727,50042
#define DUK_UINT_LEAST64_MAX DUK_UINT_LEAST64_MAX1728,50074
#define DUK_INT_LEAST64_MIN DUK_INT_LEAST64_MIN1729,50121
#define DUK_INT_LEAST64_MAX DUK_INT_LEAST64_MAX1730,50167
#define DUK_UINT_FAST64_MIN DUK_UINT_FAST64_MIN1731,50213
#define DUK_UINT_FAST64_MAX DUK_UINT_FAST64_MAX1732,50245
#define DUK_INT_FAST64_MIN DUK_INT_FAST64_MIN1733,50291
#define DUK_INT_FAST64_MAX DUK_INT_FAST64_MAX1734,50336
#define DUK_UINTPTR_MIN DUK_UINTPTR_MIN1736,50382
#define DUK_UINTPTR_MAX DUK_UINTPTR_MAX1737,50414
#define DUK_INTPTR_MIN DUK_INTPTR_MIN1738,50456
#define DUK_INTPTR_MAX DUK_INTPTR_MAX1739,50497
#define DUK_UINTMAX_MIN DUK_UINTMAX_MIN1741,50539
#define DUK_UINTMAX_MAX DUK_UINTMAX_MAX1742,50571
#define DUK_INTMAX_MIN DUK_INTMAX_MIN1743,50613
#define DUK_INTMAX_MAX DUK_INTMAX_MAX1744,50654
#define DUK_SIZE_MIN DUK_SIZE_MIN1746,50696
#define DUK_SIZE_MAX DUK_SIZE_MAX1747,50728
typedef unsigned char duk_uint8_t;duk_uint8_t1765,51443
typedef signed char duk_int8_t;duk_int8_t1766,51478
typedef unsigned short duk_uint16_t;duk_uint16_t1772,51605
typedef signed short duk_int16_t;duk_int16_t1773,51642
typedef unsigned int duk_uint16_t;duk_uint16_t1776,51795
typedef signed int duk_int16_t;duk_int16_t1777,51830
typedef unsigned int duk_uint32_t;duk_uint32_t1783,51961
typedef signed int duk_int32_t;duk_int32_t1784,51996
typedef unsigned long duk_uint32_t;duk_uint32_t1787,52154
typedef signed long duk_int32_t;duk_int32_t1788,52190
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1809,53057
typedef unsigned long duk_uint64_t;duk_uint64_t1810,53082
typedef signed long duk_int64_t;duk_int64_t1811,53118
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1816,53251
typedef unsigned long long duk_uint64_t;duk_uint64_t1817,53276
typedef signed long long duk_int64_t;duk_int64_t1818,53317
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1823,53471
typedef unsigned long long duk_uint64_t;duk_uint64_t1824,53496
typedef signed long long duk_int64_t;duk_int64_t1825,53537
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1830,53688
typedef unsigned long long duk_uint64_t;duk_uint64_t1831,53713
typedef signed long long duk_int64_t;duk_int64_t1832,53754
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1836,53861
typedef unsigned long duk_uint64_t;duk_uint64_t1837,53886
typedef signed long duk_int64_t;duk_int64_t1838,53922
#define DUK_F_HAVE_64BITDUK_F_HAVE_64BIT1841,54016
typedef unsigned __int64 duk_uint64_t;duk_uint64_t1842,54041
typedef signed __int64 duk_int64_t;duk_int64_t1843,54080
typedef duk_uint8_t duk_uint_least8_t;duk_uint_least8_t1849,54228
typedef duk_int8_t duk_int_least8_t;duk_int_least8_t1850,54267
typedef duk_uint16_t duk_uint_least16_t;duk_uint_least16_t1851,54304
typedef duk_int16_t duk_int_least16_t;duk_int_least16_t1852,54345
typedef duk_uint32_t duk_uint_least32_t;duk_uint_least32_t1853,54384
typedef duk_int32_t duk_int_least32_t;duk_int_least32_t1854,54425
typedef duk_uint8_t duk_uint_fast8_t;duk_uint_fast8_t1855,54464
typedef duk_int8_t duk_int_fast8_t;duk_int_fast8_t1856,54502
typedef duk_uint16_t duk_uint_fast16_t;duk_uint_fast16_t1857,54538
typedef duk_int16_t duk_int_fast16_t;duk_int_fast16_t1858,54578
typedef duk_uint32_t duk_uint_fast32_t;duk_uint_fast32_t1859,54616
typedef duk_int32_t duk_int_fast32_t;duk_int_fast32_t1860,54656
typedef duk_uint64_t duk_uint_least64_t;duk_uint_least64_t1862,54724
typedef duk_int64_t duk_int_least64_t;duk_int_least64_t1863,54765
typedef duk_uint64_t duk_uint_fast64_t;duk_uint_fast64_t1864,54804
typedef duk_int64_t duk_int_fast64_t;duk_int_fast64_t1865,54844
typedef duk_uint64_t duk_uintmax_t;duk_uintmax_t1868,54919
typedef duk_int64_t duk_intmax_t;duk_intmax_t1869,54955
typedef duk_uint32_t duk_uintmax_t;duk_uintmax_t1871,54995
typedef duk_int32_t duk_intmax_t;duk_intmax_t1872,55031
#define DUK_UINT8_MIN DUK_UINT8_MIN1879,55301
#define DUK_UINT8_MAX DUK_UINT8_MAX1880,55335
#define DUK_INT8_MIN DUK_INT8_MIN1881,55372
#define DUK_INT8_MAX DUK_INT8_MAX1882,55411
#define DUK_UINT_LEAST8_MIN DUK_UINT_LEAST8_MIN1883,55447
#define DUK_UINT_LEAST8_MAX DUK_UINT_LEAST8_MAX1884,55481
#define DUK_INT_LEAST8_MIN DUK_INT_LEAST8_MIN1885,55518
#define DUK_INT_LEAST8_MAX DUK_INT_LEAST8_MAX1886,55557
#define DUK_UINT_FAST8_MIN DUK_UINT_FAST8_MIN1887,55593
#define DUK_UINT_FAST8_MAX DUK_UINT_FAST8_MAX1888,55627
#define DUK_INT_FAST8_MIN DUK_INT_FAST8_MIN1889,55664
#define DUK_INT_FAST8_MAX DUK_INT_FAST8_MAX1890,55703
#define DUK_UINT16_MIN DUK_UINT16_MIN1891,55739
#define DUK_UINT16_MAX DUK_UINT16_MAX1892,55773
#define DUK_INT16_MIN DUK_INT16_MIN1893,55812
#define DUK_INT16_MAX DUK_INT16_MAX1894,55858
#define DUK_UINT_LEAST16_MIN DUK_UINT_LEAST16_MIN1895,55896
#define DUK_UINT_LEAST16_MAX DUK_UINT_LEAST16_MAX1896,55930
#define DUK_INT_LEAST16_MIN DUK_INT_LEAST16_MIN1897,55969
#define DUK_INT_LEAST16_MAX DUK_INT_LEAST16_MAX1898,56015
#define DUK_UINT_FAST16_MIN DUK_UINT_FAST16_MIN1899,56053
#define DUK_UINT_FAST16_MAX DUK_UINT_FAST16_MAX1900,56087
#define DUK_INT_FAST16_MIN DUK_INT_FAST16_MIN1901,56126
#define DUK_INT_FAST16_MAX DUK_INT_FAST16_MAX1902,56172
#define DUK_UINT32_MIN DUK_UINT32_MIN1903,56210
#define DUK_UINT32_MAX DUK_UINT32_MAX1904,56244
#define DUK_INT32_MIN DUK_INT32_MIN1905,56287
#define DUK_INT32_MAX DUK_INT32_MAX1906,56337
#define DUK_UINT_LEAST32_MIN DUK_UINT_LEAST32_MIN1907,56379
#define DUK_UINT_LEAST32_MAX DUK_UINT_LEAST32_MAX1908,56413
#define DUK_INT_LEAST32_MIN DUK_INT_LEAST32_MIN1909,56456
#define DUK_INT_LEAST32_MAX DUK_INT_LEAST32_MAX1910,56506
#define DUK_UINT_FAST32_MIN DUK_UINT_FAST32_MIN1911,56548
#define DUK_UINT_FAST32_MAX DUK_UINT_FAST32_MAX1912,56582
#define DUK_INT_FAST32_MIN DUK_INT_FAST32_MIN1913,56625
#define DUK_INT_FAST32_MAX DUK_INT_FAST32_MAX1914,56675
#define DUK_UINT64_MIN DUK_UINT64_MIN1921,56928
#define DUK_UINT64_MAX DUK_UINT64_MAX1922,56977
#define DUK_INT64_MIN DUK_INT64_MIN1923,57027
#define DUK_INT64_MAX DUK_INT64_MAX1924,57098
#define DUK_UINT_LEAST64_MIN DUK_UINT_LEAST64_MIN1925,57166
#define DUK_UINT_LEAST64_MAX DUK_UINT_LEAST64_MAX1926,57211
#define DUK_INT_LEAST64_MIN DUK_INT_LEAST64_MIN1927,57256
#define DUK_INT_LEAST64_MAX DUK_INT_LEAST64_MAX1928,57300
#define DUK_UINT_FAST64_MIN DUK_UINT_FAST64_MIN1929,57344
#define DUK_UINT_FAST64_MAX DUK_UINT_FAST64_MAX1930,57389
#define DUK_INT_FAST64_MIN DUK_INT_FAST64_MIN1931,57434
#define DUK_INT_FAST64_MAX DUK_INT_FAST64_MAX1932,57478
#define DUK_UINT64_MIN_COMPUTEDDUK_UINT64_MIN_COMPUTED1933,57522
#define DUK_UINT64_MAX_COMPUTEDDUK_UINT64_MAX_COMPUTED1934,57554
#define DUK_INT64_MIN_COMPUTEDDUK_INT64_MIN_COMPUTED1935,57586
#define DUK_INT64_MAX_COMPUTEDDUK_INT64_MAX_COMPUTED1936,57617
#define DUK_UINT_LEAST64_MIN_COMPUTEDDUK_UINT_LEAST64_MIN_COMPUTED1937,57648
#define DUK_UINT_LEAST64_MAX_COMPUTEDDUK_UINT_LEAST64_MAX_COMPUTED1938,57686
#define DUK_INT_LEAST64_MIN_COMPUTEDDUK_INT_LEAST64_MIN_COMPUTED1939,57724
#define DUK_INT_LEAST64_MAX_COMPUTEDDUK_INT_LEAST64_MAX_COMPUTED1940,57761
#define DUK_UINT_FAST64_MIN_COMPUTEDDUK_UINT_FAST64_MIN_COMPUTED1941,57798
#define DUK_UINT_FAST64_MAX_COMPUTEDDUK_UINT_FAST64_MAX_COMPUTED1942,57835
#define DUK_INT_FAST64_MIN_COMPUTEDDUK_INT_FAST64_MIN_COMPUTED1943,57872
#define DUK_INT_FAST64_MAX_COMPUTEDDUK_INT_FAST64_MAX_COMPUTED1944,57908
#define DUK_UINTMAX_MIN DUK_UINTMAX_MIN1948,57982
#define DUK_UINTMAX_MAX DUK_UINTMAX_MAX1949,58027
#define DUK_INTMAX_MIN DUK_INTMAX_MIN1950,58072
#define DUK_INTMAX_MAX DUK_INTMAX_MAX1951,58116
#define DUK_UINTMAX_MIN_COMPUTEDDUK_UINTMAX_MIN_COMPUTED1952,58160
#define DUK_UINTMAX_MAX_COMPUTEDDUK_UINTMAX_MAX_COMPUTED1953,58193
#define DUK_INTMAX_MIN_COMPUTEDDUK_INTMAX_MIN_COMPUTED1954,58226
#define DUK_INTMAX_MAX_COMPUTEDDUK_INTMAX_MAX_COMPUTED1955,58258
#define DUK_UINTMAX_MIN DUK_UINTMAX_MIN1957,58296
#define DUK_UINTMAX_MAX DUK_UINTMAX_MAX1958,58330
#define DUK_INTMAX_MIN DUK_INTMAX_MIN1959,58373
#define DUK_INTMAX_MAX DUK_INTMAX_MAX1960,58423
typedef duk_int32_t duk_intptr_t;duk_intptr_t1965,58546
typedef duk_uint32_t duk_uintptr_t;duk_uintptr_t1966,58580
#define DUK_UINTPTR_MIN DUK_UINTPTR_MIN1967,58616
#define DUK_UINTPTR_MAX DUK_UINTPTR_MAX1968,58661
#define DUK_INTPTR_MIN DUK_INTPTR_MIN1969,58706
#define DUK_INTPTR_MAX DUK_INTPTR_MAX1970,58750
typedef duk_int64_t duk_intptr_t;duk_intptr_t1972,58855
typedef duk_uint64_t duk_uintptr_t;duk_uintptr_t1973,58889
#define DUK_UINTPTR_MIN DUK_UINTPTR_MIN1974,58925
#define DUK_UINTPTR_MAX DUK_UINTPTR_MAX1975,58970
#define DUK_INTPTR_MIN DUK_INTPTR_MIN1976,59015
#define DUK_INTPTR_MAX DUK_INTPTR_MAX1977,59059
#define DUK_UINTPTR_MIN_COMPUTEDDUK_UINTPTR_MIN_COMPUTED1978,59103
#define DUK_UINTPTR_MAX_COMPUTEDDUK_UINTPTR_MAX_COMPUTED1979,59136
#define DUK_INTPTR_MIN_COMPUTEDDUK_INTPTR_MIN_COMPUTED1980,59169
#define DUK_INTPTR_MAX_COMPUTEDDUK_INTPTR_MAX_COMPUTED1981,59201
#define DUK_SIZE_MAX_COMPUTEDDUK_SIZE_MAX_COMPUTED1989,59401
#define SIZE_MAX SIZE_MAX1990,59431
#define DUK_SIZE_MIN DUK_SIZE_MIN1992,59484
#define DUK_SIZE_MAX DUK_SIZE_MAX1993,59516
typedef size_t duk_size_t;duk_size_t1998,59628
typedef ptrdiff_t duk_ptrdiff_t;duk_ptrdiff_t1999,59655
typedef int duk_int_t;duk_int_t2006,59974
typedef unsigned int duk_uint_t;duk_uint_t2007,59997
#define DUK_INT_MIN DUK_INT_MIN2008,60030
#define DUK_INT_MAX DUK_INT_MAX2009,60068
#define DUK_UINT_MIN DUK_UINT_MIN2010,60106
#define DUK_UINT_MAX DUK_UINT_MAX2011,60138
typedef duk_int_fast32_t duk_int_t;duk_int_t2013,60183
typedef duk_uint_fast32_t duk_uint_t;duk_uint_t2014,60219
#define DUK_INT_MIN DUK_INT_MIN2015,60257
#define DUK_INT_MAX DUK_INT_MAX2016,60306
#define DUK_UINT_MIN DUK_UINT_MIN2017,60355
#define DUK_UINT_MAX DUK_UINT_MAX2018,60405
typedef duk_int_fast32_t duk_int_fast_t;duk_int_fast_t2025,60650
typedef duk_uint_fast32_t duk_uint_fast_t;duk_uint_fast_t2026,60691
#define DUK_INT_FAST_MIN DUK_INT_FAST_MIN2027,60734
#define DUK_INT_FAST_MAX DUK_INT_FAST_MAX2028,60783
#define DUK_UINT_FAST_MIN DUK_UINT_FAST_MIN2029,60832
#define DUK_UINT_FAST_MAX DUK_UINT_FAST_MAX2030,60882
typedef int duk_small_int_t;duk_small_int_t2035,61067
typedef unsigned int duk_small_uint_t;duk_small_uint_t2036,61096
#define DUK_SMALL_INT_MIN DUK_SMALL_INT_MIN2037,61135
#define DUK_SMALL_INT_MAX DUK_SMALL_INT_MAX2038,61173
#define DUK_SMALL_UINT_MIN DUK_SMALL_UINT_MIN2039,61211
#define DUK_SMALL_UINT_MAX DUK_SMALL_UINT_MAX2040,61243
typedef duk_int_fast16_t duk_small_int_fast_t;duk_small_int_fast_t2045,61373
typedef duk_uint_fast16_t duk_small_uint_fast_t;duk_small_uint_fast_t2046,61420
#define DUK_SMALL_INT_FAST_MIN DUK_SMALL_INT_FAST_MIN2047,61469
#define DUK_SMALL_INT_FAST_MAX DUK_SMALL_INT_FAST_MAX2048,61522
#define DUK_SMALL_UINT_FAST_MIN DUK_SMALL_UINT_FAST_MIN2049,61575
#define DUK_SMALL_UINT_FAST_MAX DUK_SMALL_UINT_FAST_MAX2050,61629
typedef duk_small_uint_t duk_bool_t;duk_bool_t2053,61755
#define DUK_BOOL_MIN DUK_BOOL_MIN2054,61792
#define DUK_BOOL_MAX DUK_BOOL_MAX2055,61845
typedef duk_int_t duk_idx_t;duk_idx_t2058,61958
#define DUK_IDX_MIN DUK_IDX_MIN2059,61987
#define DUK_IDX_MAX DUK_IDX_MAX2060,62033
typedef duk_uint_t duk_uidx_t;duk_uidx_t2063,62110
#define DUK_UIDX_MIN DUK_UIDX_MIN2064,62141
#define DUK_UIDX_MAX DUK_UIDX_MAX2065,62188
typedef duk_uint_t duk_uarridx_t;duk_uarridx_t2070,62333
#define DUK_UARRIDX_MIN DUK_UARRIDX_MIN2071,62367
#define DUK_UARRIDX_MAX DUK_UARRIDX_MAX2072,62414
typedef duk_small_int_t duk_ret_t;duk_ret_t2078,62667
#define DUK_RET_MIN DUK_RET_MIN2079,62702
#define DUK_RET_MAX DUK_RET_MAX2080,62754
typedef duk_int_t duk_errcode_t;duk_errcode_t2085,62927
#define DUK_ERRCODE_MIN DUK_ERRCODE_MIN2086,62960
#define DUK_ERRCODE_MAX DUK_ERRCODE_MAX2087,63006
typedef duk_int_t duk_codepoint_t;duk_codepoint_t2096,63445
typedef duk_uint_t duk_ucodepoint_t;duk_ucodepoint_t2097,63480
#define DUK_CODEPOINT_MIN DUK_CODEPOINT_MIN2098,63517
#define DUK_CODEPOINT_MAX DUK_CODEPOINT_MAX2099,63563
#define DUK_UCODEPOINT_MIN DUK_UCODEPOINT_MIN2100,63609
#define DUK_UCODEPOINT_MAX DUK_UCODEPOINT_MAX2101,63656
typedef float duk_float_t;duk_float_t2104,63737
typedef double duk_double_t;duk_double_t2105,63764
typedef struct duk_hthread duk_context;duk_context2128,64635
#define DUK_USE_64BIT_OPSDUK_USE_64BIT_OPS2137,64991
#define DUK_ABORT DUK_ABORT2148,65220
#define DUK_JMPBUF_TYPE DUK_JMPBUF_TYPE2152,65289
#define DUK_SETJMP(DUK_SETJMP2153,65327
#define DUK_LONGJMP(DUK_LONGJMP2154,65370
#define DUK_ANSI_MALLOC DUK_ANSI_MALLOC2169,65859
#define DUK_ANSI_REALLOC DUK_ANSI_REALLOC2172,65933
#define DUK_ANSI_CALLOC DUK_ANSI_CALLOC2175,66007
#define DUK_ANSI_FREE DUK_ANSI_FREE2178,66078
#define DUK_MEMCPY DUK_MEMCPY2207,67496
#define DUK_MEMCPY DUK_MEMCPY2209,67535
#define DUK_MEMMOVE DUK_MEMMOVE2213,67607
#define DUK_MEMCMP DUK_MEMCMP2216,67672
#define DUK_MEMSET DUK_MEMSET2219,67736
#define DUK_STRLEN DUK_STRLEN2222,67800
#define DUK_STRCMP DUK_STRCMP2225,67864
#define DUK_STRNCMP DUK_STRNCMP2228,67929
#define DUK_SPRINTF DUK_SPRINTF2231,67995
#define DUK_SNPRINTF DUK_SNPRINTF2235,68133
#define DUK_VSPRINTF DUK_VSPRINTF2238,68201
#define DUK_VSNPRINTF DUK_VSNPRINTF2242,68342
#define DUK_SSCANF DUK_SSCANF2245,68409
#define DUK_VSSCANF DUK_VSSCANF2248,68474
#define DUK_MEMZERO(DUK_MEMZERO2251,68540
#define DUK_DOUBLE_INFINITY DUK_DOUBLE_INFINITY2258,68802
#define DUK_DOUBLE_INFINITY DUK_DOUBLE_INFINITY2260,68873
#define DUK_DOUBLE_INFINITY DUK_DOUBLE_INFINITY2263,69058
#define DUK_USE_COMPUTED_INFINITYDUK_USE_COMPUTED_INFINITY2269,69264
#define DUK_DOUBLE_INFINITY DUK_DOUBLE_INFINITY2270,69298
#define DUK_DOUBLE_NAN DUK_DOUBLE_NAN2277,69438
#define DUK_DOUBLE_NAN DUK_DOUBLE_NAN2280,69607
#define DUK_USE_COMPUTED_NANDUK_USE_COMPUTED_NAN2287,69871
#define DUK_DOUBLE_NAN DUK_DOUBLE_NAN2288,69900
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2307,70527
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2310,70685
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2316,70932
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2321,71122
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2327,71356
#define DUK_F_USE_REPL_ALLDUK_F_USE_REPL_ALL2330,71458
#define DUK_USE_REPL_FPCLASSIFYDUK_USE_REPL_FPCLASSIFY2334,71525
#define DUK_USE_REPL_SIGNBITDUK_USE_REPL_SIGNBIT2335,71557
#define DUK_USE_REPL_ISFINITEDUK_USE_REPL_ISFINITE2336,71586
#define DUK_USE_REPL_ISNANDUK_USE_REPL_ISNAN2337,71616
#define DUK_USE_REPL_ISINFDUK_USE_REPL_ISINF2338,71643
#define DUK_FPCLASSIFY DUK_FPCLASSIFY2339,71670
#define DUK_SIGNBIT DUK_SIGNBIT2340,71719
#define DUK_ISFINITE DUK_ISFINITE2341,71765
#define DUK_ISNAN DUK_ISNAN2342,71812
#define DUK_ISINF DUK_ISINF2343,71856
#define DUK_FP_NAN DUK_FP_NAN2344,71900
#define DUK_FP_INFINITE DUK_FP_INFINITE2345,71931
#define DUK_FP_ZERO DUK_FP_ZERO2346,71962
#define DUK_FP_SUBNORMAL DUK_FP_SUBNORMAL2347,71993
#define DUK_FP_NORMAL DUK_FP_NORMAL2348,72024
#define DUK_FPCLASSIFY DUK_FPCLASSIFY2350,72061
#define DUK_SIGNBIT DUK_SIGNBIT2351,72101
#define DUK_ISFINITE DUK_ISFINITE2352,72138
#define DUK_ISNAN DUK_ISNAN2353,72176
#define DUK_ISINF DUK_ISINF2354,72211
#define DUK_FP_NAN DUK_FP_NAN2355,72246
#define DUK_FP_INFINITE DUK_FP_INFINITE2356,72282
#define DUK_FP_ZERO DUK_FP_ZERO2357,72323
#define DUK_FP_SUBNORMAL DUK_FP_SUBNORMAL2358,72360
#define DUK_FP_NORMAL DUK_FP_NORMAL2359,72402
#define DUK_FABS DUK_FABS2371,72742
#define DUK_FLOOR DUK_FLOOR2374,72807
#define DUK_CEIL DUK_CEIL2377,72872
#define DUK_FMOD DUK_FMOD2380,72936
#define DUK_POW DUK_POW2383,72999
#define DUK_ACOS DUK_ACOS2386,73062
#define DUK_ASIN DUK_ASIN2389,73126
#define DUK_ATAN DUK_ATAN2392,73190
#define DUK_ATAN2 DUK_ATAN22395,73255
#define DUK_SIN DUK_SIN2398,73319
#define DUK_COS DUK_COS2401,73381
#define DUK_TAN DUK_TAN2404,73443
#define DUK_EXP DUK_EXP2407,73505
#define DUK_LOG DUK_LOG2410,73567
#define DUK_SQRT DUK_SQRT2413,73630
#define DUK_CBRT DUK_CBRT2424,74155
#define DUK_LOG2 DUK_LOG22427,74219
#define DUK_LOG10 DUK_LOG102430,74284
#define DUK_TRUNC DUK_TRUNC2433,74350
#define DUK_USE_POW_WORKAROUNDSDUK_USE_POW_WORKAROUNDS2444,74741
#define DUK_USE_ATAN2_WORKAROUNDSDUK_USE_ATAN2_WORKAROUNDS2452,74962
#define DUK_USE_PARANOID_DATE_COMPUTATIONDUK_USE_PARANOID_DATE_COMPUTATION2471,75755
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2504,77537
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2506,77684
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2509,77804
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2515,78145
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2518,78265
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2541,79460
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2544,79687
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2547,79836
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2556,80385
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2559,80534
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2578,81360
#define DUK_USE_BYTEORDER DUK_USE_BYTEORDER2580,81417
#define DUK_USE_ALIGN_BY DUK_USE_ALIGN_BY2597,82020
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER2608,82469
#define DUK_U64_CONSTANT(DUK_U64_CONSTANT2612,82542
#define DUK_I64_CONSTANT(DUK_I64_CONSTANT2615,82615
#define DUK_VA_COPY(DUK_VA_COPY2629,83109
#define DUK_VA_COPY(DUK_VA_COPY2636,83403
#define DUK_MACRO_STRINGIFY_HELPER(DUK_MACRO_STRINGIFY_HELPER2644,83684
#define DUK_MACRO_STRINGIFY(DUK_MACRO_STRINGIFY2645,83726
#define DUK_CAUSE_SEGFAULT(DUK_CAUSE_SEGFAULT2652,83940
#define DUK_UNREF(DUK_UNREF2662,84409
#define DUK_WO_NORETURN(DUK_WO_NORETURN2676,84857
#define DUK_NORETURN(DUK_NORETURN2678,84910
#define DUK_WO_NORETURN(DUK_WO_NORETURN2679,84943
#define DUK_WO_UNREACHABLE(DUK_WO_UNREACHABLE2683,85032
#define DUK_UNREACHABLE(DUK_UNREACHABLE2689,85250
#define DUK_WO_UNREACHABLE(DUK_WO_UNREACHABLE2690,85294
#define DUK_LOSE_CONST(DUK_LOSE_CONST2698,85611
#define DUK_LIKELY(DUK_LIKELY2702,85705
#define DUK_UNLIKELY(DUK_UNLIKELY2705,85768
#define DUK_UNPREDICTABLE(DUK_UNPREDICTABLE2708,85836
#define DUK_NOINLINE DUK_NOINLINE2712,85905
#define DUK_INLINE DUK_INLINE2715,85972
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE2718,86046
#define DUK_HOT DUK_HOT2722,86111
#define DUK_COLD DUK_COLD2725,86176
#define DUK_EXTERNAL_DECL DUK_EXTERNAL_DECL2729,86251
#define DUK_EXTERNAL DUK_EXTERNAL2732,86319
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL2736,86424
#define DUK_INTERNAL_DECL DUK_INTERNAL_DECL2738,86464
#define DUK_INTERNAL DUK_INTERNAL2743,86568
#define DUK_INTERNAL DUK_INTERNAL2745,86608
#define DUK_LOCAL_DECL DUK_LOCAL_DECL2749,86688
#define DUK_LOCAL DUK_LOCAL2752,86753
#define DUK_FILE_MACRO DUK_FILE_MACRO2756,86824
#define DUK_LINE_MACRO DUK_LINE_MACRO2759,86893
#define DUK_FUNC_MACRO DUK_FUNC_MACRO2763,87009
#define DUK_FUNC_MACRO DUK_FUNC_MACRO2765,87070
#define DUK_FUNC_MACRO DUK_FUNC_MACRO2767,87113
#define DUK_BSWAP64(DUK_BSWAP642773,87218
#define DUK_BSWAP32(DUK_BSWAP322785,87770
#define DUK_BSWAP16(DUK_BSWAP162792,87995
#define DUK_USE_FLEX_C99DUK_USE_FLEX_C992802,88357
#define DUK_USE_FLEX_ZEROSIZE DUK_USE_FLEX_ZEROSIZE2804,88388
#define DUK_USE_PACK_DUMMY_MEMBERDUK_USE_PACK_DUMMY_MEMBER2810,88628
#define DUK_NOINLINE DUK_NOINLINE2824,88971
#define DUK_INLINE DUK_INLINE2825,89006
#define DUK_ALWAYS_INLINE DUK_ALWAYS_INLINE2826,89041
#define DUK_F_PACKED_TVAL_POSSIBLEDUK_F_PACKED_TVAL_POSSIBLE2844,89721
#define DUK_F_PACKED_TVAL_POSSIBLEDUK_F_PACKED_TVAL_POSSIBLE2851,90008
#define DUK_F_PACKED_TVAL_POSSIBLEDUK_F_PACKED_TVAL_POSSIBLE2858,90244
#define DUK_USE_PACKED_TVALDUK_USE_PACKED_TVAL2864,90361
#define DUK_USE_HOBJECT_LAYOUT_1DUK_USE_HOBJECT_LAYOUT_12882,91020
#define DUK_USE_HOBJECT_LAYOUT_2DUK_USE_HOBJECT_LAYOUT_22888,91231
#define DUK_USE_ARRAY_BUILTINDUK_USE_ARRAY_BUILTIN2903,91582
#define DUK_USE_ARRAY_FASTPATHDUK_USE_ARRAY_FASTPATH2904,91612
#define DUK_USE_ARRAY_PROP_FASTPATHDUK_USE_ARRAY_PROP_FASTPATH2905,91643
#define DUK_USE_AUGMENT_ERROR_CREATEDUK_USE_AUGMENT_ERROR_CREATE2907,91705
#define DUK_USE_AUGMENT_ERROR_THROWDUK_USE_AUGMENT_ERROR_THROW2908,91742
#define DUK_USE_AVOID_PLATFORM_FUNCPTRSDUK_USE_AVOID_PLATFORM_FUNCPTRS2909,91778
#define DUK_USE_BASE64_FASTPATHDUK_USE_BASE64_FASTPATH2910,91818
#define DUK_USE_BASE64_SUPPORTDUK_USE_BASE64_SUPPORT2911,91850
#define DUK_USE_BOOLEAN_BUILTINDUK_USE_BOOLEAN_BUILTIN2912,91881
#define DUK_USE_BUFFEROBJECT_SUPPORTDUK_USE_BUFFEROBJECT_SUPPORT2913,91913
#define DUK_USE_BYTECODE_DUMP_SUPPORTDUK_USE_BYTECODE_DUMP_SUPPORT2915,91974
#define DUK_USE_CACHE_ACTIVATIONDUK_USE_CACHE_ACTIVATION2916,92012
#define DUK_USE_CACHE_CATCHERDUK_USE_CACHE_CATCHER2917,92045
#define DUK_USE_CALLSTACK_LIMIT DUK_USE_CALLSTACK_LIMIT2918,92075
#define DUK_USE_CBOR_BUILTINDUK_USE_CBOR_BUILTIN2919,92113
#define DUK_USE_CBOR_SUPPORTDUK_USE_CBOR_SUPPORT2920,92142
#define DUK_USE_COMPILER_RECLIMIT DUK_USE_COMPILER_RECLIMIT2921,92171
#define DUK_USE_COROUTINE_SUPPORTDUK_USE_COROUTINE_SUPPORT2922,92210
#define DUK_USE_DATE_BUILTINDUK_USE_DATE_BUILTIN2927,92357
#define DUK_USE_DEBUGGER_THROW_NOTIFYDUK_USE_DEBUGGER_THROW_NOTIFY2938,92709
#define DUK_USE_DEBUG_BUFSIZE DUK_USE_DEBUG_BUFSIZE2940,92789
#define DUK_USE_DEBUG_LEVEL DUK_USE_DEBUG_LEVEL2941,92826
#define DUK_USE_DOUBLE_LINKED_HEAPDUK_USE_DOUBLE_LINKED_HEAP2943,92883
#define DUK_USE_DUKTAPE_BUILTINDUK_USE_DUKTAPE_BUILTIN2944,92918
#define DUK_USE_ENCODING_BUILTINSDUK_USE_ENCODING_BUILTINS2945,92950
#define DUK_USE_ERRCREATEDUK_USE_ERRCREATE2946,92984
#define DUK_USE_ERRTHROWDUK_USE_ERRTHROW2947,93010
#define DUK_USE_ES6DUK_USE_ES62948,93035
#define DUK_USE_ES6_OBJECT_PROTO_PROPERTYDUK_USE_ES6_OBJECT_PROTO_PROPERTY2949,93055
#define DUK_USE_ES6_OBJECT_SETPROTOTYPEOFDUK_USE_ES6_OBJECT_SETPROTOTYPEOF2950,93097
#define DUK_USE_ES6_PROXYDUK_USE_ES6_PROXY2951,93139
#define DUK_USE_ES6_REGEXP_SYNTAXDUK_USE_ES6_REGEXP_SYNTAX2952,93165
#define DUK_USE_ES6_UNICODE_ESCAPEDUK_USE_ES6_UNICODE_ESCAPE2953,93199
#define DUK_USE_ES7DUK_USE_ES72954,93234
#define DUK_USE_ES7_EXP_OPERATORDUK_USE_ES7_EXP_OPERATOR2955,93254
#define DUK_USE_ES8DUK_USE_ES82956,93287
#define DUK_USE_ES9DUK_USE_ES92957,93307
#define DUK_USE_ESBC_LIMITSDUK_USE_ESBC_LIMITS2958,93327
#define DUK_USE_ESBC_MAX_BYTES DUK_USE_ESBC_MAX_BYTES2959,93355
#define DUK_USE_ESBC_MAX_LINENUMBER DUK_USE_ESBC_MAX_LINENUMBER2960,93398
#define DUK_USE_EXEC_REGCONST_OPTIMIZEDUK_USE_EXEC_REGCONST_OPTIMIZE2964,93549
#define DUK_USE_FAST_REFCOUNT_DEFAULTDUK_USE_FAST_REFCOUNT_DEFAULT2970,93741
#define DUK_USE_FATAL_MAXLEN DUK_USE_FATAL_MAXLEN2972,93808
#define DUK_USE_FINALIZER_SUPPORTDUK_USE_FINALIZER_SUPPORT2973,93841
#define DUK_USE_FUNCTION_BUILTINDUK_USE_FUNCTION_BUILTIN2978,93991
#define DUK_USE_FUNC_FILENAME_PROPERTYDUK_USE_FUNC_FILENAME_PROPERTY2979,94024
#define DUK_USE_FUNC_NAME_PROPERTYDUK_USE_FUNC_NAME_PROPERTY2980,94063
#define DUK_USE_GLOBAL_BINDINGDUK_USE_GLOBAL_BINDING2984,94191
#define DUK_USE_GLOBAL_BUILTINDUK_USE_GLOBAL_BUILTIN2985,94222
#define DUK_USE_HEX_FASTPATHDUK_USE_HEX_FASTPATH2989,94336
#define DUK_USE_HEX_SUPPORTDUK_USE_HEX_SUPPORT2990,94365
#define DUK_USE_HOBJECT_ARRAY_ABANDON_LIMIT DUK_USE_HOBJECT_ARRAY_ABANDON_LIMIT2991,94393
#define DUK_USE_HOBJECT_ARRAY_ABANDON_MINSIZE DUK_USE_HOBJECT_ARRAY_ABANDON_MINSIZE2992,94439
#define DUK_USE_HOBJECT_ARRAY_FAST_RESIZE_LIMIT DUK_USE_HOBJECT_ARRAY_FAST_RESIZE_LIMIT2993,94489
#define DUK_USE_HOBJECT_ARRAY_MINGROW_ADD DUK_USE_HOBJECT_ARRAY_MINGROW_ADD2994,94539
#define DUK_USE_HOBJECT_ARRAY_MINGROW_DIVISOR DUK_USE_HOBJECT_ARRAY_MINGROW_DIVISOR2995,94584
#define DUK_USE_HOBJECT_ENTRY_MINGROW_ADD DUK_USE_HOBJECT_ENTRY_MINGROW_ADD2996,94632
#define DUK_USE_HOBJECT_ENTRY_MINGROW_DIVISOR DUK_USE_HOBJECT_ENTRY_MINGROW_DIVISOR2997,94677
#define DUK_USE_HOBJECT_HASH_PARTDUK_USE_HOBJECT_HASH_PART2998,94725
#define DUK_USE_HOBJECT_HASH_PROP_LIMIT DUK_USE_HOBJECT_HASH_PROP_LIMIT2999,94759
#define DUK_USE_HSTRING_ARRIDXDUK_USE_HSTRING_ARRIDX3000,94801
#define DUK_USE_HSTRING_CLENDUK_USE_HSTRING_CLEN3001,94832
#define DUK_USE_HSTRING_LAZY_CLENDUK_USE_HSTRING_LAZY_CLEN3003,94892
#define DUK_USE_HTML_COMMENTSDUK_USE_HTML_COMMENTS3004,94926
#define DUK_USE_IDCHAR_FASTPATHDUK_USE_IDCHAR_FASTPATH3005,94956
#define DUK_USE_JCDUK_USE_JC3009,95097
#define DUK_USE_JSON_BUILTINDUK_USE_JSON_BUILTIN3010,95116
#define DUK_USE_JSON_DECNUMBER_FASTPATHDUK_USE_JSON_DECNUMBER_FASTPATH3011,95145
#define DUK_USE_JSON_DECSTRING_FASTPATHDUK_USE_JSON_DECSTRING_FASTPATH3012,95185
#define DUK_USE_JSON_DEC_RECLIMIT DUK_USE_JSON_DEC_RECLIMIT3013,95225
#define DUK_USE_JSON_EATWHITE_FASTPATHDUK_USE_JSON_EATWHITE_FASTPATH3014,95264
#define DUK_USE_JSON_ENC_RECLIMIT DUK_USE_JSON_ENC_RECLIMIT3015,95303
#define DUK_USE_JSON_QUOTESTRING_FASTPATHDUK_USE_JSON_QUOTESTRING_FASTPATH3016,95342
#define DUK_USE_JSON_SUPPORTDUK_USE_JSON_SUPPORT3018,95423
#define DUK_USE_JXDUK_USE_JX3019,95452
#define DUK_USE_LEXER_SLIDING_WINDOWDUK_USE_LEXER_SLIDING_WINDOW3020,95471
#define DUK_USE_LITCACHE_SIZE DUK_USE_LITCACHE_SIZE3022,95542
#define DUK_USE_MARK_AND_SWEEP_RECLIMIT DUK_USE_MARK_AND_SWEEP_RECLIMIT3023,95576
#define DUK_USE_MATH_BUILTINDUK_USE_MATH_BUILTIN3024,95620
#define DUK_USE_NATIVE_CALL_RECLIMIT DUK_USE_NATIVE_CALL_RECLIMIT3025,95649
#define DUK_USE_NONSTD_ARRAY_SPLICE_DELCOUNTDUK_USE_NONSTD_ARRAY_SPLICE_DELCOUNT3027,95725
#define DUK_USE_NONSTD_FUNC_STMTDUK_USE_NONSTD_FUNC_STMT3030,95856
#define DUK_USE_NONSTD_GETTER_KEY_ARGUMENTDUK_USE_NONSTD_GETTER_KEY_ARGUMENT3031,95889
#define DUK_USE_NONSTD_JSON_ESC_U2028_U2029DUK_USE_NONSTD_JSON_ESC_U2028_U20293032,95932
#define DUK_USE_NONSTD_SETTER_KEY_ARGUMENTDUK_USE_NONSTD_SETTER_KEY_ARGUMENT3033,95976
#define DUK_USE_NONSTD_STRING_FROMCHARCODE_32BITDUK_USE_NONSTD_STRING_FROMCHARCODE_32BIT3034,96019
#define DUK_USE_NUMBER_BUILTINDUK_USE_NUMBER_BUILTIN3035,96068
#define DUK_USE_OBJECT_BUILTINDUK_USE_OBJECT_BUILTIN3036,96099
#define DUK_USE_PC2LINEDUK_USE_PC2LINE3039,96187
#define DUK_USE_PERFORMANCE_BUILTINDUK_USE_PERFORMANCE_BUILTIN3040,96211
#define DUK_USE_PROVIDE_DEFAULT_ALLOC_FUNCTIONSDUK_USE_PROVIDE_DEFAULT_ALLOC_FUNCTIONS3043,96305
#define DUK_USE_REFCOUNT32DUK_USE_REFCOUNT323045,96379
#define DUK_USE_REFERENCE_COUNTINGDUK_USE_REFERENCE_COUNTING3046,96406
#define DUK_USE_REFLECT_BUILTINDUK_USE_REFLECT_BUILTIN3047,96441
#define DUK_USE_REGEXP_CANON_BITMAPDUK_USE_REGEXP_CANON_BITMAP3048,96473
#define DUK_USE_REGEXP_COMPILER_RECLIMIT DUK_USE_REGEXP_COMPILER_RECLIMIT3050,96548
#define DUK_USE_REGEXP_EXECUTOR_RECLIMIT DUK_USE_REGEXP_EXECUTOR_RECLIMIT3051,96595
#define DUK_USE_REGEXP_SUPPORTDUK_USE_REGEXP_SUPPORT3052,96642
#define DUK_USE_ROM_PTRCOMP_FIRST DUK_USE_ROM_PTRCOMP_FIRST3056,96766
#define DUK_USE_SECTION_BDUK_USE_SECTION_B3058,96834
#define DUK_USE_SHEBANG_COMMENTSDUK_USE_SHEBANG_COMMENTS3060,96886
#define DUK_USE_SOURCE_NONBMPDUK_USE_SOURCE_NONBMP3062,96950
#define DUK_USE_STRHASH_SKIP_SHIFT DUK_USE_STRHASH_SKIP_SHIFT3065,97034
#define DUK_USE_STRICT_DECLDUK_USE_STRICT_DECL3066,97071
#define DUK_USE_STRING_BUILTINDUK_USE_STRING_BUILTIN3068,97133
#define DUK_USE_STRTAB_GROW_LIMIT DUK_USE_STRTAB_GROW_LIMIT3070,97188
#define DUK_USE_STRTAB_MAXSIZE DUK_USE_STRTAB_MAXSIZE3071,97225
#define DUK_USE_STRTAB_MINSIZE DUK_USE_STRTAB_MINSIZE3072,97267
#define DUK_USE_STRTAB_RESIZE_CHECK_MASK DUK_USE_STRTAB_RESIZE_CHECK_MASK3074,97333
#define DUK_USE_STRTAB_SHRINK_LIMIT DUK_USE_STRTAB_SHRINK_LIMIT3075,97378
#define DUK_USE_SYMBOL_BUILTINDUK_USE_SYMBOL_BUILTIN3077,97446
#define DUK_USE_TAILCALLDUK_USE_TAILCALL3078,97477
#define DUK_USE_TARGET_INFO DUK_USE_TARGET_INFO3079,97502
#define DUK_USE_TRACEBACKSDUK_USE_TRACEBACKS3080,97540
#define DUK_USE_TRACEBACK_DEPTH DUK_USE_TRACEBACK_DEPTH3081,97567
#define DUK_USE_VALSTACK_GROW_SHIFT DUK_USE_VALSTACK_GROW_SHIFT3082,97602
#define DUK_USE_VALSTACK_LIMIT DUK_USE_VALSTACK_LIMIT3083,97640
#define DUK_USE_VALSTACK_SHRINK_CHECK_SHIFT DUK_USE_VALSTACK_SHRINK_CHECK_SHIFT3084,97680
#define DUK_USE_VALSTACK_SHRINK_SLACK_SHIFT DUK_USE_VALSTACK_SHRINK_SLACK_SHIFT3085,97726
#define DUK_USE_VERBOSE_ERRORSDUK_USE_VERBOSE_ERRORS3087,97803
#define DUK_USE_VERBOSE_EXECUTOR_ERRORSDUK_USE_VERBOSE_EXECUTOR_ERRORS3088,97834
#define DUK_USE_VOLUNTARY_GCDUK_USE_VOLUNTARY_GC3089,97874
#define DUK_USE_ZERO_BUFFER_DATADUK_USE_ZERO_BUFFER_DATA3090,97903
#define DUK_USE_DATE_GET_NOW(DUK_USE_DATE_GET_NOW3122,98742
#define DUK_USE_DATE_GET_NOW(DUK_USE_DATE_GET_NOW3124,98859
#define DUK_USE_DATE_GET_NOW(DUK_USE_DATE_GET_NOW3126,98971
#define DUK_USE_DATE_GET_NOW(DUK_USE_DATE_GET_NOW3128,99092
#define DUK_USE_DATE_GET_LOCAL_TZOFFSET(DUK_USE_DATE_GET_LOCAL_TZOFFSET3136,99434
#define DUK_USE_DATE_GET_LOCAL_TZOFFSET(DUK_USE_DATE_GET_LOCAL_TZOFFSET3138,99562
#define DUK_USE_DATE_GET_LOCAL_TZOFFSET(DUK_USE_DATE_GET_LOCAL_TZOFFSET3140,99698
#define DUK_USE_DATE_PARSE_STRING(DUK_USE_DATE_PARSE_STRING3148,99986
#define DUK_USE_DATE_PARSE_STRING(DUK_USE_DATE_PARSE_STRING3150,100119
#define DUK_USE_DATE_FORMAT_STRING(DUK_USE_DATE_FORMAT_STRING3158,100426
#define DUK_USE_GET_MONOTONIC_TIME(DUK_USE_GET_MONOTONIC_TIME3167,100792
#define DUK_USE_GET_MONOTONIC_TIME(DUK_USE_GET_MONOTONIC_TIME3169,100934
#define DUK_USE_INTEGER_LEDUK_USE_INTEGER_LE3764,126650
#define DUK_USE_DOUBLE_LEDUK_USE_DOUBLE_LE3765,126677
#define DUK_USE_INTEGER_LE DUK_USE_INTEGER_LE3767,126734
#define DUK_USE_DOUBLE_MEDUK_USE_DOUBLE_ME3768,126808
#define DUK_USE_INTEGER_BEDUK_USE_INTEGER_BE3770,126865
#define DUK_USE_DOUBLE_BEDUK_USE_DOUBLE_BE3771,126892

duktape/licenses/commonjs.txt,0

duktape/licenses/lua.txt,0

duktape/licenses/murmurhash2.txt,0

duktape/licenses/splitmix64.txt,0

duktape/licenses/AUTHORS.rst,133
Duktape authorsDuktape authors2,16
CopyrightCopyright5,49
AuthorsAuthors12,253
Other contributionsOther contributions68,2572

duktape/licenses/LICENSE.txt,0

duktape/licenses/xoroshiro128plus.txt,0

duktape/duktape.h,20324
#define DUKTAPE_H_INCLUDEDDUKTAPE_H_INCLUDED161,6439
#define DUK_SINGLE_FILEDUK_SINGLE_FILE163,6467
#define DUK_VERSION DUK_VERSION179,6948
#define DUK_GIT_COMMIT DUK_GIT_COMMIT186,7226
#define DUK_GIT_DESCRIBE DUK_GIT_DESCRIBE187,7311
#define DUK_GIT_BRANCH DUK_GIT_BRANCH188,7362
#define DUK_API_VARIADIC_MACROSDUK_API_VARIADIC_MACROS212,7938
#define DUK_API_NORETURN(DUK_API_NORETURN215,7978
typedef struct duk_thread_state duk_thread_state;duk_thread_state234,8504
typedef struct duk_memory_functions duk_memory_functions;duk_memory_functions235,8554
typedef struct duk_function_list_entry duk_function_list_entry;duk_function_list_entry236,8612
typedef struct duk_number_list_entry duk_number_list_entry;duk_number_list_entry237,8676
typedef struct duk_time_components duk_time_components;duk_time_components238,8736
typedef duk_ret_t (*duk_c_function)(duk_context *ctx);duk_c_function240,8793
typedef void *(*duk_alloc_function) (void *udata, duk_size_t size);duk_alloc_function241,8848
typedef void *(*duk_realloc_function) (void *udata, void *ptr, duk_size_t size);duk_realloc_function242,8916
typedef void (*duk_free_function) (void *udata, void *ptr);duk_free_function243,8997
typedef void (*duk_fatal_function) (void *udata, const char *msg);duk_fatal_function244,9057
typedef void (*duk_decode_char_function) (void *udata, duk_codepoint_t codepoint);duk_decode_char_function245,9124
typedef duk_codepoint_t (*duk_map_char_function) (void *udata, duk_codepoint_t codepoint);duk_map_char_function246,9207
typedef duk_ret_t (*duk_safe_call_function) (duk_context *ctx, void *udata);duk_safe_call_function247,9298
typedef duk_size_t (*duk_debug_read_function) (void *udata, char *buffer, duk_size_t length);duk_debug_read_function248,9375
typedef duk_size_t (*duk_debug_write_function) (void *udata, const char *buffer, duk_size_t lengduk_debug_write_function249,9469
typedef duk_size_t (*duk_debug_peek_function) (void *udata);duk_debug_peek_function250,9570
typedef void (*duk_debug_read_flush_function) (void *udata);duk_debug_read_flush_function251,9631
typedef void (*duk_debug_write_flush_function) (void *udata);duk_debug_write_flush_function252,9692
typedef duk_idx_t (*duk_debug_request_function) (duk_context *ctx, void *udata, duk_idx_t nvalueduk_debug_request_function253,9754
typedef void (*duk_debug_detached_function) (duk_context *ctx, void *udata);duk_debug_detached_function254,9854
struct duk_thread_state {duk_thread_state256,9932
	char data[128];data261,10141
struct duk_memory_functions {duk_memory_functions264,10162
	duk_alloc_function alloc_func;alloc_func265,10192
	duk_realloc_function realloc_func;realloc_func266,10224
	duk_free_function free_func;free_func267,10260
	void *udata;udata268,10290
struct duk_function_list_entry {duk_function_list_entry271,10308
	const char *key;key272,10341
	duk_c_function value;value273,10359
	duk_idx_t nargs;nargs274,10382
struct duk_number_list_entry {duk_number_list_entry277,10404
	const char *key;key278,10435
	duk_double_t value;value279,10453
struct duk_time_components {duk_time_components282,10478
	duk_double_t year;          /* year, e.g. 2016, ECMAScript year range */year283,10507
	duk_double_t month;         /* month: 1-12 */month284,10581
	duk_double_t day;           /* day: 1-31 */day285,10628
	duk_double_t hours;         /* hour: 0-59 */hours286,10673
	duk_double_t minutes;       /* minute: 0-59 */minutes287,10719
	duk_double_t seconds;       /* second: 0-59 (in POSIX time no leap second) */seconds288,10767
	duk_double_t milliseconds;  /* may contain sub-millisecond fractions */milliseconds289,10846
	duk_double_t weekday;       /* weekday: 0-6, 0=Sunday, 1=Monday, ..., 6=Saturday */weekday290,10919
#define DUK_DEBUG_PROTOCOL_VERSION DUK_DEBUG_PROTOCOL_VERSION298,11087
#define DUK_INVALID_INDEX DUK_INVALID_INDEX304,11330
#define DUK_VARARGS DUK_VARARGS309,11527
#define DUK_API_ENTRY_STACK DUK_API_ENTRY_STACK314,11729
#define DUK_TYPE_MIN DUK_TYPE_MIN317,11823
#define DUK_TYPE_NONE DUK_TYPE_NONE318,11868
#define DUK_TYPE_UNDEFINED DUK_TYPE_UNDEFINED319,11951
#define DUK_TYPE_NULL DUK_TYPE_NULL320,12026
#define DUK_TYPE_BOOLEAN DUK_TYPE_BOOLEAN321,12096
#define DUK_TYPE_NUMBER DUK_TYPE_NUMBER322,12177
#define DUK_TYPE_STRING DUK_TYPE_STRING323,12257
#define DUK_TYPE_OBJECT DUK_TYPE_OBJECT324,12362
#define DUK_TYPE_BUFFER DUK_TYPE_BUFFER325,12480
#define DUK_TYPE_POINTER DUK_TYPE_POINTER326,12582
#define DUK_TYPE_LIGHTFUNC DUK_TYPE_LIGHTFUNC327,12653
#define DUK_TYPE_MAX DUK_TYPE_MAX328,12736
#define DUK_TYPE_MASK_NONE DUK_TYPE_MASK_NONE331,12839
#define DUK_TYPE_MASK_UNDEFINED DUK_TYPE_MASK_UNDEFINED332,12903
#define DUK_TYPE_MASK_NULL DUK_TYPE_MASK_NULL333,12972
#define DUK_TYPE_MASK_BOOLEAN DUK_TYPE_MASK_BOOLEAN334,13036
#define DUK_TYPE_MASK_NUMBER DUK_TYPE_MASK_NUMBER335,13103
#define DUK_TYPE_MASK_STRING DUK_TYPE_MASK_STRING336,13169
#define DUK_TYPE_MASK_OBJECT DUK_TYPE_MASK_OBJECT337,13235
#define DUK_TYPE_MASK_BUFFER DUK_TYPE_MASK_BUFFER338,13301
#define DUK_TYPE_MASK_POINTER DUK_TYPE_MASK_POINTER339,13367
#define DUK_TYPE_MASK_LIGHTFUNC DUK_TYPE_MASK_LIGHTFUNC340,13434
#define DUK_TYPE_MASK_THROW DUK_TYPE_MASK_THROW341,13503
#define DUK_TYPE_MASK_PROMOTE DUK_TYPE_MASK_PROMOTE342,13612
#define DUK_HINT_NONE DUK_HINT_NONE345,13749
#define DUK_HINT_STRING DUK_HINT_STRING348,13987
#define DUK_HINT_NUMBER DUK_HINT_NUMBER349,14054
#define DUK_ENUM_INCLUDE_NONENUMERABLE DUK_ENUM_INCLUDE_NONENUMERABLE352,14161
#define DUK_ENUM_INCLUDE_HIDDEN DUK_ENUM_INCLUDE_HIDDEN353,14283
#define DUK_ENUM_INCLUDE_SYMBOLS DUK_ENUM_INCLUDE_SYMBOLS354,14417
#define DUK_ENUM_EXCLUDE_STRINGS DUK_ENUM_EXCLUDE_STRINGS355,14496
#define DUK_ENUM_OWN_PROPERTIES_ONLY DUK_ENUM_OWN_PROPERTIES_ONLY356,14573
#define DUK_ENUM_ARRAY_INDICES_ONLY DUK_ENUM_ARRAY_INDICES_ONLY357,14688
#define DUK_ENUM_SORT_ARRAY_INDICES DUK_ENUM_SORT_ARRAY_INDICES359,14805
#define DUK_ENUM_NO_PROXY_BEHAVIOR DUK_ENUM_NO_PROXY_BEHAVIOR360,14979
#define DUK_COMPILE_EVAL DUK_COMPILE_EVAL365,15241
#define DUK_COMPILE_FUNCTION DUK_COMPILE_FUNCTION366,15345
#define DUK_COMPILE_STRICT DUK_COMPILE_STRICT367,15453
#define DUK_COMPILE_SHEBANG DUK_COMPILE_SHEBANG368,15576
#define DUK_COMPILE_SAFE DUK_COMPILE_SAFE369,15694
#define DUK_COMPILE_NORESULT DUK_COMPILE_NORESULT370,15791
#define DUK_COMPILE_NOSOURCE DUK_COMPILE_NOSOURCE371,15880
#define DUK_COMPILE_STRLEN DUK_COMPILE_STRLEN372,15978
#define DUK_COMPILE_NOFILENAME DUK_COMPILE_NOFILENAME373,16114
#define DUK_COMPILE_FUNCEXPR DUK_COMPILE_FUNCEXPR374,16207
#define DUK_DEFPROP_WRITABLE DUK_DEFPROP_WRITABLE377,16438
#define DUK_DEFPROP_ENUMERABLE DUK_DEFPROP_ENUMERABLE378,16557
#define DUK_DEFPROP_CONFIGURABLE DUK_DEFPROP_CONFIGURABLE379,16680
#define DUK_DEFPROP_HAVE_WRITABLE DUK_DEFPROP_HAVE_WRITABLE380,16807
#define DUK_DEFPROP_HAVE_ENUMERABLE DUK_DEFPROP_HAVE_ENUMERABLE381,16887
#define DUK_DEFPROP_HAVE_CONFIGURABLE DUK_DEFPROP_HAVE_CONFIGURABLE382,16969
#define DUK_DEFPROP_HAVE_VALUE DUK_DEFPROP_HAVE_VALUE383,17053
#define DUK_DEFPROP_HAVE_GETTER DUK_DEFPROP_HAVE_GETTER384,17147
#define DUK_DEFPROP_HAVE_SETTER DUK_DEFPROP_HAVE_SETTER385,17242
#define DUK_DEFPROP_FORCE DUK_DEFPROP_FORCE386,17337
#define DUK_DEFPROP_SET_WRITABLE DUK_DEFPROP_SET_WRITABLE387,17467
#define DUK_DEFPROP_CLEAR_WRITABLE DUK_DEFPROP_CLEAR_WRITABLE388,17560
#define DUK_DEFPROP_SET_ENUMERABLE DUK_DEFPROP_SET_ENUMERABLE389,17628
#define DUK_DEFPROP_CLEAR_ENUMERABLE DUK_DEFPROP_CLEAR_ENUMERABLE390,17725
#define DUK_DEFPROP_SET_CONFIGURABLE DUK_DEFPROP_SET_CONFIGURABLE391,17795
#define DUK_DEFPROP_CLEAR_CONFIGURABLE DUK_DEFPROP_CLEAR_CONFIGURABLE392,17896
#define DUK_DEFPROP_W DUK_DEFPROP_W393,17968
#define DUK_DEFPROP_E DUK_DEFPROP_E394,18031
#define DUK_DEFPROP_C DUK_DEFPROP_C395,18096
#define DUK_DEFPROP_WE DUK_DEFPROP_WE396,18163
#define DUK_DEFPROP_WC DUK_DEFPROP_WC397,18253
#define DUK_DEFPROP_EC DUK_DEFPROP_EC398,18345
#define DUK_DEFPROP_WEC DUK_DEFPROP_WEC399,18439
#define DUK_DEFPROP_HAVE_W DUK_DEFPROP_HAVE_W400,18556
#define DUK_DEFPROP_HAVE_E DUK_DEFPROP_HAVE_E401,18624
#define DUK_DEFPROP_HAVE_C DUK_DEFPROP_HAVE_C402,18694
#define DUK_DEFPROP_HAVE_WE DUK_DEFPROP_HAVE_WE403,18766
#define DUK_DEFPROP_HAVE_WC DUK_DEFPROP_HAVE_WC404,18866
#define DUK_DEFPROP_HAVE_EC DUK_DEFPROP_HAVE_EC405,18968
#define DUK_DEFPROP_HAVE_WEC DUK_DEFPROP_HAVE_WEC406,19072
#define DUK_DEFPROP_SET_W DUK_DEFPROP_SET_W407,19204
#define DUK_DEFPROP_SET_E DUK_DEFPROP_SET_E408,19271
#define DUK_DEFPROP_SET_C DUK_DEFPROP_SET_C409,19340
#define DUK_DEFPROP_SET_WE DUK_DEFPROP_SET_WE410,19411
#define DUK_DEFPROP_SET_WC DUK_DEFPROP_SET_WC411,19509
#define DUK_DEFPROP_SET_EC DUK_DEFPROP_SET_EC412,19609
#define DUK_DEFPROP_SET_WEC DUK_DEFPROP_SET_WEC413,19711
#define DUK_DEFPROP_CLEAR_W DUK_DEFPROP_CLEAR_W414,19840
#define DUK_DEFPROP_CLEAR_E DUK_DEFPROP_CLEAR_E415,19909
#define DUK_DEFPROP_CLEAR_C DUK_DEFPROP_CLEAR_C416,19980
#define DUK_DEFPROP_CLEAR_WE DUK_DEFPROP_CLEAR_WE417,20053
#define DUK_DEFPROP_CLEAR_WC DUK_DEFPROP_CLEAR_WC418,20155
#define DUK_DEFPROP_CLEAR_EC DUK_DEFPROP_CLEAR_EC419,20259
#define DUK_DEFPROP_CLEAR_WEC DUK_DEFPROP_CLEAR_WEC420,20365
#define DUK_DEFPROP_ATTR_W DUK_DEFPROP_ATTR_W421,20500
#define DUK_DEFPROP_ATTR_E DUK_DEFPROP_ATTR_E422,20581
#define DUK_DEFPROP_ATTR_C DUK_DEFPROP_ATTR_C423,20662
#define DUK_DEFPROP_ATTR_WE DUK_DEFPROP_ATTR_WE424,20743
#define DUK_DEFPROP_ATTR_WC DUK_DEFPROP_ATTR_WC425,20825
#define DUK_DEFPROP_ATTR_EC DUK_DEFPROP_ATTR_EC426,20907
#define DUK_DEFPROP_ATTR_WEC DUK_DEFPROP_ATTR_WEC427,20989
#define DUK_THREAD_NEW_GLOBAL_ENV DUK_THREAD_NEW_GLOBAL_ENV430,21111
#define DUK_GC_COMPACT DUK_GC_COMPACT433,21230
#define DUK_ERR_NONE DUK_ERR_NONE436,21373
#define DUK_ERR_ERROR DUK_ERR_ERROR437,21468
#define DUK_ERR_EVAL_ERROR DUK_ERR_EVAL_ERROR438,21527
#define DUK_ERR_RANGE_ERROR DUK_ERR_RANGE_ERROR439,21590
#define DUK_ERR_REFERENCE_ERROR DUK_ERR_REFERENCE_ERROR440,21654
#define DUK_ERR_SYNTAX_ERROR DUK_ERR_SYNTAX_ERROR441,21722
#define DUK_ERR_TYPE_ERROR DUK_ERR_TYPE_ERROR442,21787
#define DUK_ERR_URI_ERROR DUK_ERR_URI_ERROR443,21850
#define DUK_RET_ERROR DUK_RET_ERROR446,21981
#define DUK_RET_EVAL_ERROR DUK_RET_EVAL_ERROR447,22040
#define DUK_RET_RANGE_ERROR DUK_RET_RANGE_ERROR448,22104
#define DUK_RET_REFERENCE_ERROR DUK_RET_REFERENCE_ERROR449,22169
#define DUK_RET_SYNTAX_ERROR DUK_RET_SYNTAX_ERROR450,22238
#define DUK_RET_TYPE_ERROR DUK_RET_TYPE_ERROR451,22304
#define DUK_RET_URI_ERROR DUK_RET_URI_ERROR452,22368
#define DUK_EXEC_SUCCESS DUK_EXEC_SUCCESS455,22502
#define DUK_EXEC_ERROR DUK_EXEC_ERROR456,22546
#define DUK_LEVEL_DEBUG DUK_LEVEL_DEBUG459,22637
#define DUK_LEVEL_DDEBUG DUK_LEVEL_DDEBUG460,22681
#define DUK_LEVEL_DDDEBUG DUK_LEVEL_DDDEBUG461,22725
#define DUK_HIDDEN_SYMBOL(DUK_HIDDEN_SYMBOL480,23413
#define DUK_GLOBAL_SYMBOL(DUK_GLOBAL_SYMBOL481,23457
#define DUK_LOCAL_SYMBOL(DUK_LOCAL_SYMBOL482,23501
#define DUK_WELLKNOWN_SYMBOL(DUK_WELLKNOWN_SYMBOL483,23557
#define DUK_INTERNAL_SYMBOL(DUK_INTERNAL_SYMBOL484,23608
DUK_EXTERNAL_DECL const char *duk_api_global_filename;duk_api_global_filename492,23814
DUK_EXTERNAL_DECL duk_int_t duk_api_global_line;duk_api_global_line493,23869
#define duk_create_heap_default(duk_create_heap_default511,24492
#define duk_throw(duk_throw534,25380
#define duk_fatal(duk_fatal537,25539
#define duk_error(duk_error542,25818
#define duk_generic_error(duk_generic_error544,26000
#define duk_eval_error(duk_eval_error546,26184
#define duk_range_error(duk_range_error548,26370
#define duk_reference_error(duk_reference_error550,26558
#define duk_syntax_error(duk_syntax_error552,26754
#define duk_type_error(duk_type_error554,26944
#define duk_uri_error(duk_uri_error556,27130
#define duk_error duk_error575,28766
#define duk_generic_error duk_generic_error579,28987
#define duk_eval_error duk_eval_error583,29162
#define duk_range_error duk_range_error587,29331
#define duk_reference_error duk_reference_error591,29502
#define duk_syntax_error duk_syntax_error595,29681
#define duk_type_error duk_type_error599,29854
#define duk_uri_error duk_uri_error603,30023
#define duk_error_va(duk_error_va611,30398
#define duk_generic_error_va(duk_generic_error_va613,30589
#define duk_eval_error_va(duk_eval_error_va615,30782
#define duk_range_error_va(duk_range_error_va617,30977
#define duk_reference_error_va(duk_reference_error_va619,31174
#define duk_syntax_error_va(duk_syntax_error_va621,31379
#define duk_type_error_va(duk_type_error_va623,31578
#define duk_uri_error_va(duk_uri_error_va625,31773
#define duk_xmove_top(duk_xmove_top676,34308
#define duk_xcopy_top(duk_xcopy_top678,34420
#define duk_push_literal(duk_push_literal712,36130
#define duk_push_literal(duk_push_literal715,36312
#define duk_push_thread(duk_push_thread736,37633
#define duk_push_thread_new_globalenv(duk_push_thread_new_globalenv739,37706
#define duk_push_error_object(duk_push_error_object745,38012
#define duk_push_error_object duk_push_error_object750,38400
#define duk_push_error_object_va(duk_push_error_object_va757,38820
#define DUK_BUF_FLAG_DYNAMIC DUK_BUF_FLAG_DYNAMIC760,39003
#define DUK_BUF_FLAG_EXTERNAL DUK_BUF_FLAG_EXTERNAL761,39082
#define DUK_BUF_FLAG_NOZERO DUK_BUF_FLAG_NOZERO762,39162
#define duk_push_buffer(duk_push_buffer766,39360
#define duk_push_fixed_buffer(duk_push_fixed_buffer768,39478
#define duk_push_dynamic_buffer(duk_push_dynamic_buffer770,39569
#define duk_push_external_buffer(duk_push_external_buffer772,39681
#define DUK_BUFOBJ_ARRAYBUFFER DUK_BUFOBJ_ARRAYBUFFER775,39808
#define DUK_BUFOBJ_NODEJS_BUFFER DUK_BUFOBJ_NODEJS_BUFFER776,39849
#define DUK_BUFOBJ_DATAVIEW DUK_BUFOBJ_DATAVIEW777,39890
#define DUK_BUFOBJ_INT8ARRAY DUK_BUFOBJ_INT8ARRAY778,39931
#define DUK_BUFOBJ_UINT8ARRAY DUK_BUFOBJ_UINT8ARRAY779,39972
#define DUK_BUFOBJ_UINT8CLAMPEDARRAY DUK_BUFOBJ_UINT8CLAMPEDARRAY780,40013
#define DUK_BUFOBJ_INT16ARRAY DUK_BUFOBJ_INT16ARRAY781,40054
#define DUK_BUFOBJ_UINT16ARRAY DUK_BUFOBJ_UINT16ARRAY782,40095
#define DUK_BUFOBJ_INT32ARRAY DUK_BUFOBJ_INT32ARRAY783,40136
#define DUK_BUFOBJ_UINT32ARRAY DUK_BUFOBJ_UINT32ARRAY784,40177
#define DUK_BUFOBJ_FLOAT32ARRAY DUK_BUFOBJ_FLOAT32ARRAY785,40218
#define DUK_BUFOBJ_FLOAT64ARRAY DUK_BUFOBJ_FLOAT64ARRAY786,40260
#define duk_is_null_or_undefined(duk_is_null_or_undefined815,41460
#define duk_is_callable(duk_is_callable836,42867
#define duk_is_primitive(duk_is_primitive848,43491
#define duk_is_object_coercible(duk_is_object_coercible857,43957
#define duk_is_error(duk_is_error867,44508
#define duk_is_eval_error(duk_is_eval_error869,44581
#define duk_is_range_error(duk_is_range_error871,44676
#define duk_is_reference_error(duk_is_reference_error873,44773
#define duk_is_syntax_error(duk_is_syntax_error875,44878
#define duk_is_type_error(duk_is_type_error877,44977
#define duk_is_uri_error(duk_is_uri_error879,45072
#define duk_require_type_mask(duk_require_type_mask945,49484
#define duk_require_callable(duk_require_callable963,50881
#define duk_require_object_coercible(duk_require_object_coercible970,51262
#define DUK_BUF_MODE_FIXED DUK_BUF_MODE_FIXED1003,53356
#define DUK_BUF_MODE_DYNAMIC DUK_BUF_MODE_DYNAMIC1004,53436
#define DUK_BUF_MODE_DONTCARE DUK_BUF_MODE_DONTCARE1005,53518
#define duk_to_buffer(duk_to_buffer1007,53609
#define duk_to_fixed_buffer(duk_to_fixed_buffer1009,53719
#define duk_to_dynamic_buffer(duk_to_dynamic_buffer1011,53832
#define duk_safe_to_string(duk_safe_to_string1018,54273
#define duk_get_prop_literal(duk_get_prop_literal1069,56396
#define duk_get_prop_literal(duk_get_prop_literal1072,56623
#define duk_put_prop_literal(duk_put_prop_literal1080,57297
#define duk_put_prop_literal(duk_put_prop_literal1083,57524
#define duk_del_prop_literal(duk_del_prop_literal1091,58198
#define duk_del_prop_literal(duk_del_prop_literal1094,58425
#define duk_has_prop_literal(duk_has_prop_literal1102,59099
#define duk_has_prop_literal(duk_has_prop_literal1105,59326
#define duk_get_global_literal(duk_get_global_literal1116,60077
#define duk_get_global_literal(duk_get_global_literal1119,60272
#define duk_put_global_literal(duk_put_global_literal1125,60691
#define duk_put_global_literal(duk_put_global_literal1128,60886
#define duk_eval(duk_eval1241,65240
#define duk_eval_noresult(duk_eval_noresult1244,65361
#define duk_peval(duk_peval1247,65514
#define duk_peval_noresult(duk_peval_noresult1250,65648
#define duk_compile(duk_compile1253,65814
#define duk_pcompile(duk_pcompile1256,65913
#define duk_eval_string(duk_eval_string1260,66038
#define duk_eval_string_noresult(duk_eval_string_noresult1263,66215
#define duk_peval_string(duk_peval_string1266,66424
#define duk_peval_string_noresult(duk_peval_string_noresult1269,66614
#define duk_compile_string(duk_compile_string1272,66836
#define duk_compile_string_filename(duk_compile_string_filename1275,67016
#define duk_pcompile_string(duk_pcompile_string1278,67180
#define duk_pcompile_string_filename(duk_pcompile_string_filename1281,67373
#define duk_eval_lstring(duk_eval_lstring1285,67564
#define duk_eval_lstring_noresult(duk_eval_lstring_noresult1288,67725
#define duk_peval_lstring(duk_peval_lstring1291,67918
#define duk_peval_lstring_noresult(duk_peval_lstring_noresult1294,68092
#define duk_compile_lstring(duk_compile_lstring1297,68298
#define duk_compile_lstring_filename(duk_compile_lstring_filename1300,68462
#define duk_pcompile_lstring(duk_pcompile_lstring1303,68610
#define duk_pcompile_lstring_filename(duk_pcompile_lstring_filename1306,68787
#define DUK_DATE_MSEC_SECOND DUK_DATE_MSEC_SECOND1356,70721
#define DUK_DATE_MSEC_MINUTE DUK_DATE_MSEC_MINUTE1357,70765
#define DUK_DATE_MSEC_HOUR DUK_DATE_MSEC_HOUR1358,70817
#define DUK_DATE_MSEC_DAY DUK_DATE_MSEC_DAY1359,70875
#define DUK_DATE_MSEC_100M_DAYS DUK_DATE_MSEC_100M_DAYS1366,71096
#define DUK_DATE_MSEC_100M_DAYS_LEEWAY DUK_DATE_MSEC_100M_DAYS_LEEWAY1367,71146
#define DUK_DATE_MIN_ECMA_YEAR DUK_DATE_MIN_ECMA_YEAR1375,71406
#define DUK_DATE_MAX_ECMA_YEAR DUK_DATE_MAX_ECMA_YEAR1376,71452
#define DUK_DATE_IDX_YEAR DUK_DATE_IDX_YEAR1386,71886
#define DUK_DATE_IDX_MONTH DUK_DATE_IDX_MONTH1387,71936
#define DUK_DATE_IDX_DAY DUK_DATE_IDX_DAY1388,71996
#define DUK_DATE_IDX_HOUR DUK_DATE_IDX_HOUR1389,72067
#define DUK_DATE_IDX_MINUTE DUK_DATE_IDX_MINUTE1390,72105
#define DUK_DATE_IDX_SECOND DUK_DATE_IDX_SECOND1391,72143
#define DUK_DATE_IDX_MILLISECOND DUK_DATE_IDX_MILLISECOND1392,72181
#define DUK_DATE_IDX_WEEKDAY DUK_DATE_IDX_WEEKDAY1393,72219
#define DUK_DATE_IDX_NUM_PARTS DUK_DATE_IDX_NUM_PARTS1394,72305
#define DUK_DATE_FLAG_NAN_TO_ZERO DUK_DATE_FLAG_NAN_TO_ZERO1412,72921
#define DUK_DATE_FLAG_NAN_TO_RANGE_ERROR DUK_DATE_FLAG_NAN_TO_RANGE_ERROR1413,73031
#define DUK_DATE_FLAG_ONEBASED DUK_DATE_FLAG_ONEBASED1414,73161
#define DUK_DATE_FLAG_EQUIVYEAR DUK_DATE_FLAG_EQUIVYEAR1415,73313
#define DUK_DATE_FLAG_LOCALTIME DUK_DATE_FLAG_LOCALTIME1416,73471
#define DUK_DATE_FLAG_SUB1900 DUK_DATE_FLAG_SUB19001417,73563
#define DUK_DATE_FLAG_TOSTRING_DATE DUK_DATE_FLAG_TOSTRING_DATE1418,73677
#define DUK_DATE_FLAG_TOSTRING_TIME DUK_DATE_FLAG_TOSTRING_TIME1419,73782
#define DUK_DATE_FLAG_TOSTRING_LOCALE DUK_DATE_FLAG_TOSTRING_LOCALE1420,73887
#define DUK_DATE_FLAG_TIMESETTER DUK_DATE_FLAG_TIMESETTER1421,73990
#define DUK_DATE_FLAG_YEAR_FIXUP DUK_DATE_FLAG_YEAR_FIXUP1422,74167
#define DUK_DATE_FLAG_SEP_T DUK_DATE_FLAG_SEP_T1423,74286
#define DUK_DATE_FLAG_VALUE_SHIFT DUK_DATE_FLAG_VALUE_SHIFT1424,74402
DUK_EXTERNAL_DECL const void * const duk_rom_compressed_pointers[];duk_rom_compressed_pointers1434,74703
#define DUK_V1_COMPAT_INCLUDEDDUK_V1_COMPAT_INCLUDED1448,74938
#define DUK_ENUM_INCLUDE_INTERNAL DUK_ENUM_INCLUDE_INTERNAL1458,75131
#define DUK_STRING_PUSH_SAFE DUK_STRING_PUSH_SAFE1462,75240
#define duk_push_string_file(duk_push_string_file1475,76081

duktape/duk_source_meta.json,75478
    "comment": "Metadata for Duktape sources", comment2,2
    "duk_version_string": "2.5.0", duk_version_string3,50
    "type": "duk_source_meta", type4,86
        {06,136
            "original_line": 1, original_line7,146
            "combined_line": 156, combined_line8,179
            "original_file": "duk_replacements.c"original_file9,214
        {111,276
            "original_line": 1, original_line12,286
            "combined_line": 166, combined_line13,319
            "original_file": "duk_internal.h"original_file14,354
        {216,412
            "original_line": 1, original_line17,422
            "combined_line": 204, combined_line18,455
            "original_file": "duk_dblunion.h"original_file19,490
        {321,548
            "original_line": 1, original_line22,558
            "combined_line": 630, combined_line23,591
            "original_file": "duk_fltunion.h"original_file24,626
        {426,684
            "original_line": 1, original_line27,694
            "combined_line": 671, combined_line28,727
            "original_file": "duk_replacements.h"original_file29,762
        {531,824
            "original_line": 1, original_line32,834
            "combined_line": 702, combined_line33,867
            "original_file": "duk_jmpbuf.h"original_file34,902
        {636,958
            "original_line": 1, original_line37,968
            "combined_line": 728, combined_line38,1001
            "original_file": "duk_exception.h"original_file39,1036
        {741,1095
            "original_line": 1, original_line42,1105
            "combined_line": 760, combined_line43,1138
            "original_file": "duk_forwdecl.h"original_file44,1173
        {846,1231
            "original_line": 1, original_line47,1241
            "combined_line": 896, combined_line48,1274
            "original_file": "duk_tval.h"original_file49,1309
        {951,1363
            "original_line": 1, original_line52,1373
            "combined_line": 1537, combined_line53,1406
            "original_file": "duk_builtins.h"original_file54,1442
        {1056,1500
            "original_line": 45, original_line57,1510
            "combined_line": 2329, combined_line58,1544
            "original_file": "duk_internal.h"original_file59,1580
        {1161,1638
            "original_line": 1, original_line62,1648
            "combined_line": 2332, combined_line63,1681
            "original_file": "duk_util.h"original_file64,1717
        {1266,1771
            "original_line": 1, original_line67,1781
            "combined_line": 3065, combined_line68,1814
            "original_file": "duk_strings.h"original_file69,1850
        {1371,1907
            "original_line": 1, original_line72,1917
            "combined_line": 3234, combined_line73,1950
            "original_file": "duk_js_bytecode.h"original_file74,1986
        {1476,2047
            "original_line": 1, original_line77,2057
            "combined_line": 3718, combined_line78,2090
            "original_file": "duk_lexer.h"original_file79,2126
        {1581,2181
            "original_line": 1, original_line82,2191
            "combined_line": 4158, combined_line83,2224
            "original_file": "duk_js_compiler.h"original_file84,2260
        {1686,2321
            "original_line": 1, original_line87,2331
            "combined_line": 4387, combined_line88,2364
            "original_file": "duk_regexp.h"original_file89,2400
        {1791,2456
            "original_line": 1, original_line92,2466
            "combined_line": 4473, combined_line93,2499
            "original_file": "duk_heaphdr.h"original_file94,2535
        {1896,2592
            "original_line": 1, original_line97,2602
            "combined_line": 4772, combined_line98,2635
            "original_file": "duk_refcount.h"original_file99,2671
        {19101,2729
            "original_line": 1, original_line102,2739
            "combined_line": 5499, combined_line103,2772
            "original_file": "duk_api_internal.h"original_file104,2808
        {20106,2870
            "original_line": 1, original_line107,2880
            "combined_line": 5887, combined_line108,2913
            "original_file": "duk_hstring.h"original_file109,2949
        {21111,3006
            "original_line": 1, original_line112,3016
            "combined_line": 6142, combined_line113,3049
            "original_file": "duk_hobject.h"original_file114,3085
        {22116,3142
            "original_line": 1, original_line117,3152
            "combined_line": 7125, combined_line118,3185
            "original_file": "duk_hcompfunc.h"original_file119,3221
        {23121,3280
            "original_line": 1, original_line122,3290
            "combined_line": 7400, combined_line123,3323
            "original_file": "duk_hnatfunc.h"original_file124,3359
        {24126,3417
            "original_line": 1, original_line127,3427
            "combined_line": 7441, combined_line128,3460
            "original_file": "duk_hboundfunc.h"original_file129,3496
        {25131,3556
            "original_line": 1, original_line132,3566
            "combined_line": 7480, combined_line133,3599
            "original_file": "duk_hbufobj.h"original_file134,3635
        {26136,3692
            "original_line": 1, original_line137,3702
            "combined_line": 7609, combined_line138,3735
            "original_file": "duk_hthread.h"original_file139,3771
        {27141,3828
            "original_line": 1, original_line142,3838
            "combined_line": 8019, combined_line143,3871
            "original_file": "duk_harray.h"original_file144,3907
        {28146,3963
            "original_line": 1, original_line147,3973
            "combined_line": 8069, combined_line148,4006
            "original_file": "duk_henv.h"original_file149,4042
        {29151,4096
            "original_line": 1, original_line152,4106
            "combined_line": 8116, combined_line153,4139
            "original_file": "duk_hbuffer.h"original_file154,4175
        {30156,4232
            "original_line": 1, original_line157,4242
            "combined_line": 8454, combined_line158,4275
            "original_file": "duk_hproxy.h"original_file159,4311
        {31161,4367
            "original_line": 1, original_line162,4377
            "combined_line": 8482, combined_line163,4410
            "original_file": "duk_heap.h"original_file164,4446
        {32166,4500
            "original_line": 1, original_line167,4510
            "combined_line": 9207, combined_line168,4543
            "original_file": "duk_debugger.h"original_file169,4579
        {33171,4637
            "original_line": 1, original_line172,4647
            "combined_line": 9360, combined_line173,4680
            "original_file": "duk_debug.h"original_file174,4716
        {34176,4771
            "original_line": 1, original_line177,4781
            "combined_line": 9546, combined_line178,4814
            "original_file": "duk_error.h"original_file179,4850
        {35181,4905
            "original_line": 1, original_line182,4915
            "combined_line": 10073, combined_line183,4948
            "original_file": "duk_unicode.h"original_file184,4985
        {36186,5042
            "original_line": 1, original_line187,5052
            "combined_line": 10365, combined_line188,5085
            "original_file": "duk_json.h"original_file189,5122
        {37191,5176
            "original_line": 1, original_line192,5186
            "combined_line": 10435, combined_line193,5219
            "original_file": "duk_js.h"original_file194,5256
        {38196,5308
            "original_line": 1, original_line197,5318
            "combined_line": 10553, combined_line198,5351
            "original_file": "duk_numconv.h"original_file199,5388
        {39201,5445
            "original_line": 1, original_line202,5455
            "combined_line": 10659, combined_line203,5488
            "original_file": "duk_bi_protos.h"original_file204,5525
        {40206,5584
            "original_line": 1, original_line207,5594
            "combined_line": 10742, combined_line208,5627
            "original_file": "duk_selftest.h"original_file209,5664
        {41211,5722
            "original_line": 76, original_line212,5732
            "combined_line": 10758, combined_line213,5766
            "original_file": "duk_internal.h"original_file214,5803
        {42216,5861
            "original_line": 10, original_line217,5871
            "combined_line": 10761, combined_line218,5905
            "original_file": "duk_replacements.c"original_file219,5942
        {43221,6004
            "original_line": 1, original_line222,6014
            "combined_line": 10835, combined_line223,6047
            "original_file": "duk_debug_macros.c"original_file224,6084
        {44226,6146
            "original_line": 1, original_line227,6156
            "combined_line": 10927, combined_line228,6189
            "original_file": "duk_builtins.c"original_file229,6226
        {45231,6284
            "original_line": 1, original_line232,6294
            "combined_line": 11792, combined_line233,6327
            "original_file": "duk_error_macros.c"original_file234,6364
        {46236,6426
            "original_line": 1, original_line237,6436
            "combined_line": 11948, combined_line238,6469
            "original_file": "duk_unicode_support.c"original_file239,6506
        {47241,6571
            "original_line": 1, original_line242,6581
            "combined_line": 13214, combined_line243,6614
            "original_file": "duk_util_memrw.c"original_file244,6651
        {48246,6711
            "original_line": 1, original_line247,6721
            "combined_line": 13363, combined_line248,6754
            "original_file": "duk_util_misc.c"original_file249,6791
        {49251,6850
            "original_line": 1, original_line252,6860
            "combined_line": 13547, combined_line253,6893
            "original_file": "duk_hobject_class.c"original_file254,6930
        {50256,6993
            "original_line": 1, original_line257,7003
            "combined_line": 13677, combined_line258,7036
            "original_file": "duk_alloc_default.c"original_file259,7073
        {51261,7136
            "original_line": 1, original_line262,7146
            "combined_line": 13712, combined_line263,7179
            "original_file": "duk_api_buffer.c"original_file264,7216
        {52266,7276
            "original_line": 1, original_line267,7286
            "combined_line": 13786, combined_line268,7319
            "original_file": "duk_api_bytecode.c"original_file269,7356
        {53271,7418
            "original_line": 1, original_line272,7428
            "combined_line": 14555, combined_line273,7461
            "original_file": "duk_api_call.c"original_file274,7498
        {54276,7556
            "original_line": 1, original_line277,7566
            "combined_line": 15072, combined_line278,7599
            "original_file": "duk_api_codec.c"original_file279,7636
        {55281,7695
            "original_line": 1, original_line282,7705
            "combined_line": 15999, combined_line283,7738
            "original_file": "duk_api_compile.c"original_file284,7775
        {56286,7836
            "original_line": 1, original_line287,7846
            "combined_line": 16172, combined_line288,7879
            "original_file": "duk_api_debug.c"original_file289,7916
        {57291,7975
            "original_line": 1, original_line292,7985
            "combined_line": 16434, combined_line293,8018
            "original_file": "duk_api_heap.c"original_file294,8055
        {58296,8113
            "original_line": 1, original_line297,8123
            "combined_line": 16640, combined_line298,8156
            "original_file": "duk_api_inspect.c"original_file299,8193
        {59301,8254
            "original_line": 1, original_line302,8264
            "combined_line": 16886, combined_line303,8297
            "original_file": "duk_api_memory.c"original_file304,8334
        {60306,8394
            "original_line": 1, original_line307,8404
            "combined_line": 16967, combined_line308,8437
            "original_file": "duk_api_object.c"original_file309,8474
        {61311,8534
            "original_line": 1, original_line312,8544
            "combined_line": 18018, combined_line313,8577
            "original_file": "duk_api_random.c"original_file314,8614
        {62316,8674
            "original_line": 1, original_line317,8684
            "combined_line": 18028, combined_line318,8717
            "original_file": "duk_api_stack.c"original_file319,8754
        {63321,8813
            "original_line": 1, original_line322,8823
            "combined_line": 24907, combined_line323,8856
            "original_file": "duk_api_string.c"original_file324,8893
        {64326,8953
            "original_line": 1, original_line327,8963
            "combined_line": 25286, combined_line328,8996
            "original_file": "duk_api_time.c"original_file329,9033
        {65331,9091
            "original_line": 1, original_line332,9101
            "combined_line": 25397, combined_line333,9134
            "original_file": "duk_bi_array.c"original_file334,9171
        {66336,9229
            "original_line": 1, original_line337,9239
            "combined_line": 27053, combined_line338,9272
            "original_file": "duk_bi_boolean.c"original_file339,9309
        {67341,9369
            "original_line": 1, original_line342,9379
            "combined_line": 27123, combined_line343,9412
            "original_file": "duk_bi_buffer.c"original_file344,9449
        {68346,9508
            "original_line": 1, original_line347,9518
            "combined_line": 30060, combined_line348,9551
            "original_file": "duk_bi_cbor.c"original_file349,9588
        {69351,9645
            "original_line": 1, original_line352,9655
            "combined_line": 31726, combined_line353,9688
            "original_file": "duk_bi_date.c"original_file354,9725
        {70356,9782
            "original_line": 1, original_line357,9792
            "combined_line": 33545, combined_line358,9825
            "original_file": "duk_bi_date_unix.c"original_file359,9862
        {71361,9924
            "original_line": 1, original_line362,9934
            "combined_line": 33875, combined_line363,9967
            "original_file": "duk_bi_date_windows.c"original_file364,10004
        {72366,10069
            "original_line": 1, original_line367,10079
            "combined_line": 34069, combined_line368,10112
            "original_file": "duk_bi_duktape.c"original_file369,10149
        {73371,10209
            "original_line": 1, original_line372,10219
            "combined_line": 34228, combined_line373,10252
            "original_file": "duk_bi_encoding.c"original_file374,10289
        {74376,10350
            "original_line": 1, original_line377,10360
            "combined_line": 34767, combined_line378,10393
            "original_file": "duk_bi_error.c"original_file379,10430
        {75381,10488
            "original_line": 1, original_line382,10498
            "combined_line": 35160, combined_line383,10531
            "original_file": "duk_bi_function.c"original_file384,10568
        {76386,10629
            "original_line": 1, original_line387,10639
            "combined_line": 35614, combined_line388,10672
            "original_file": "duk_bi_global.c"original_file389,10709
        {77391,10768
            "original_line": 1, original_line392,10778
            "combined_line": 36346, combined_line393,10811
            "original_file": "duk_bi_json.c"original_file394,10848
        {78396,10905
            "original_line": 1, original_line397,10915
            "combined_line": 39616, combined_line398,10948
            "original_file": "duk_bi_math.c"original_file399,10985
        {79401,11042
            "original_line": 1, original_line402,11052
            "combined_line": 40136, combined_line403,11085
            "original_file": "duk_bi_number.c"original_file404,11122
        {80406,11181
            "original_line": 1, original_line407,11191
            "combined_line": 40417, combined_line408,11224
            "original_file": "duk_bi_object.c"original_file409,11261
        {81411,11320
            "original_line": 1, original_line412,11330
            "combined_line": 41221, combined_line413,11363
            "original_file": "duk_bi_performance.c"original_file414,11400
        {82416,11464
            "original_line": 1, original_line417,11474
            "combined_line": 41253, combined_line418,11507
            "original_file": "duk_bi_pointer.c"original_file419,11544
        {83421,11604
            "original_line": 1, original_line422,11614
            "combined_line": 41329, combined_line423,11647
            "original_file": "duk_bi_promise.c"original_file424,11684
        {84426,11744
            "original_line": 1, original_line427,11754
            "combined_line": 41374, combined_line428,11787
            "original_file": "duk_bi_proxy.c"original_file429,11824
        {85431,11882
            "original_line": 1, original_line432,11892
            "combined_line": 41471, combined_line433,11925
            "original_file": "duk_bi_reflect.c"original_file434,11962
        {86436,12022
            "original_line": 1, original_line437,12032
            "combined_line": 41571, combined_line438,12065
            "original_file": "duk_bi_regexp.c"original_file439,12102
        {87441,12161
            "original_line": 1, original_line442,12171
            "combined_line": 41798, combined_line443,12204
            "original_file": "duk_bi_string.c"original_file444,12241
        {88446,12300
            "original_line": 1, original_line447,12310
            "combined_line": 43379, combined_line448,12343
            "original_file": "duk_bi_symbol.c"original_file449,12380
        {89451,12439
            "original_line": 1, original_line452,12449
            "combined_line": 43550, combined_line453,12482
            "original_file": "duk_bi_thread.c"original_file454,12519
        {90456,12578
            "original_line": 1, original_line457,12588
            "combined_line": 43877, combined_line458,12621
            "original_file": "duk_bi_thrower.c"original_file459,12658
        {91461,12718
            "original_line": 1, original_line462,12728
            "combined_line": 43887, combined_line463,12761
            "original_file": "duk_debug_fixedbuffer.c"original_file464,12798
        {92466,12865
            "original_line": 1, original_line467,12875
            "combined_line": 43957, combined_line468,12908
            "original_file": "duk_debug_vsnprintf.c"original_file469,12945
        {93471,13010
            "original_line": 1, original_line472,13020
            "combined_line": 45058, combined_line473,13053
            "original_file": "duk_debugger.c"original_file474,13090
        {94476,13148
            "original_line": 1, original_line477,13158
            "combined_line": 47973, combined_line478,13191
            "original_file": "duk_error_augment.c"original_file479,13228
        {95481,13291
            "original_line": 1, original_line482,13301
            "combined_line": 48562, combined_line483,13334
            "original_file": "duk_error_longjmp.c"original_file484,13371
        {96486,13434
            "original_line": 1, original_line487,13444
            "combined_line": 48666, combined_line488,13477
            "original_file": "duk_error_misc.c"original_file489,13514
        {97491,13574
            "original_line": 1, original_line492,13584
            "combined_line": 48841, combined_line493,13617
            "original_file": "duk_error_throw.c"original_file494,13654
        {98496,13715
            "original_line": 1, original_line497,13725
            "combined_line": 49004, combined_line498,13758
            "original_file": "duk_hbuffer_alloc.c"original_file499,13795
        {99501,13858
            "original_line": 1, original_line502,13868
            "combined_line": 49137, combined_line503,13901
            "original_file": "duk_hbuffer_assert.c"original_file504,13938
        {100506,14002
            "original_line": 1, original_line507,14012
            "combined_line": 49151, combined_line508,14045
            "original_file": "duk_hbuffer_ops.c"original_file509,14082
        {101511,14143
            "original_line": 2, original_line512,14153
            "combined_line": 49231, combined_line513,14186
            "original_file": "duk_hbufobj_misc.c"original_file514,14223
        {102516,14285
            "original_line": 1, original_line517,14295
            "combined_line": 49251, combined_line518,14328
            "original_file": "duk_heap_alloc.c"original_file519,14365
        {103521,14425
            "original_line": 1, original_line522,14435
            "combined_line": 50477, combined_line523,14468
            "original_file": "duk_heap_finalize.c"original_file524,14505
        {104526,14568
            "original_line": 1, original_line527,14578
            "combined_line": 50923, combined_line528,14611
            "original_file": "duk_heap_hashstring.c"original_file529,14648
        {105531,14713
            "original_line": 1, original_line532,14723
            "combined_line": 51045, combined_line533,14756
            "original_file": "duk_heap_markandsweep.c"original_file534,14793
        {106536,14860
            "original_line": 1, original_line537,14870
            "combined_line": 52528, combined_line538,14903
            "original_file": "duk_heap_memory.c"original_file539,14940
        {107541,15001
            "original_line": 1, original_line542,15011
            "combined_line": 52941, combined_line543,15044
            "original_file": "duk_heap_misc.c"original_file544,15081
        {108546,15140
            "original_line": 1, original_line547,15150
            "combined_line": 53129, combined_line548,15183
            "original_file": "duk_heap_refcount.c"original_file549,15220
        {109551,15283
            "original_line": 1, original_line552,15293
            "combined_line": 53976, combined_line553,15326
            "original_file": "duk_heap_stringcache.c"original_file554,15363
        {110556,15429
            "original_line": 1, original_line557,15439
            "combined_line": 54286, combined_line558,15472
            "original_file": "duk_heap_stringtable.c"original_file559,15509
        {111561,15575
            "original_line": 1, original_line562,15585
            "combined_line": 55336, combined_line563,15618
            "original_file": "duk_heaphdr_assert.c"original_file564,15655
        {112566,15719
            "original_line": 1, original_line567,15729
            "combined_line": 55415, combined_line568,15762
            "original_file": "duk_hobject_alloc.c"original_file569,15799
        {113571,15862
            "original_line": 1, original_line572,15872
            "combined_line": 55687, combined_line573,15905
            "original_file": "duk_hobject_assert.c"original_file574,15942
        {114576,16006
            "original_line": 1, original_line577,16016
            "combined_line": 55815, combined_line578,16049
            "original_file": "duk_hobject_enum.c"original_file579,16086
        {115581,16148
            "original_line": 1, original_line582,16158
            "combined_line": 56525, combined_line583,16191
            "original_file": "duk_hobject_misc.c"original_file584,16228
        {116586,16290
            "original_line": 1, original_line587,16300
            "combined_line": 56579, combined_line588,16333
            "original_file": "duk_hobject_pc2line.c"original_file589,16370
        {117591,16435
            "original_line": 1, original_line592,16445
            "combined_line": 56824, combined_line593,16478
            "original_file": "duk_hobject_props.c"original_file594,16515
        {118596,16578
            "original_line": 1, original_line597,16588
            "combined_line": 63040, combined_line598,16621
            "original_file": "duk_hstring_assert.c"original_file599,16658
        {119601,16722
            "original_line": 1, original_line602,16732
            "combined_line": 63054, combined_line603,16765
            "original_file": "duk_hstring_misc.c"original_file604,16802
        {120606,16864
            "original_line": 1, original_line607,16874
            "combined_line": 63251, combined_line608,16907
            "original_file": "duk_hthread_alloc.c"original_file609,16944
        {121611,17007
            "original_line": 1, original_line612,17017
            "combined_line": 63311, combined_line613,17050
            "original_file": "duk_hthread_builtins.c"original_file614,17087
        {122616,17153
            "original_line": 1, original_line617,17163
            "combined_line": 64198, combined_line618,17196
            "original_file": "duk_hthread_misc.c"original_file619,17233
        {123621,17295
            "original_line": 1, original_line622,17305
            "combined_line": 64296, combined_line623,17338
            "original_file": "duk_hthread_stacks.c"original_file624,17375
        {124626,17439
            "original_line": 1, original_line627,17449
            "combined_line": 64704, combined_line628,17482
            "original_file": "duk_js_arith.c"original_file629,17519
        {125631,17577
            "original_line": 1, original_line632,17587
            "combined_line": 64842, combined_line633,17620
            "original_file": "duk_js_call.c"original_file634,17657
        {126636,17714
            "original_line": 1, original_line637,17724
            "combined_line": 67780, combined_line638,17757
            "original_file": "duk_js_compiler.c"original_file639,17794
        {127641,17855
            "original_line": 1, original_line642,17865
            "combined_line": 75888, combined_line643,17898
            "original_file": "duk_js_executor.c"original_file644,17935
        {128646,17996
            "original_line": 1, original_line647,18006
            "combined_line": 81150, combined_line648,18039
            "original_file": "duk_js_ops.c"original_file649,18076
        {129651,18132
            "original_line": 1, original_line652,18142
            "combined_line": 82629, combined_line653,18175
            "original_file": "duk_js_var.c"original_file654,18212
        {130656,18268
            "original_line": 1, original_line657,18278
            "combined_line": 84423, combined_line658,18311
            "original_file": "duk_lexer.c"original_file659,18348
        {131661,18403
            "original_line": 1, original_line662,18413
            "combined_line": 86885, combined_line663,18446
            "original_file": "duk_numconv.c"original_file664,18483
        {132666,18540
            "original_line": 1, original_line667,18550
            "combined_line": 89179, combined_line668,18583
            "original_file": "duk_regexp_compiler.c"original_file669,18620
        {133671,18685
            "original_line": 1, original_line672,18695
            "combined_line": 90471, combined_line673,18728
            "original_file": "duk_regexp_executor.c"original_file674,18765
        {134676,18830
            "original_line": 1, original_line677,18840
            "combined_line": 91499, combined_line678,18873
            "original_file": "duk_selftest.c"original_file679,18910
        {135681,18968
            "original_line": 2, original_line682,18978
            "combined_line": 92187, combined_line683,19011
            "original_file": "duk_tval.c"original_file684,19048
        {136686,19102
            "original_line": 1, original_line687,19112
            "combined_line": 92339, combined_line688,19145
            "original_file": "duk_unicode_tables.c"original_file689,19182
        {137691,19246
            "original_line": 1, original_line692,19256
            "combined_line": 98515, combined_line693,19289
            "original_file": "duk_util_bitdecoder.c"original_file694,19326
        {138696,19391
            "original_line": 1, original_line697,19401
            "combined_line": 98682, combined_line698,19434
            "original_file": "duk_util_bitencoder.c"original_file699,19471
        {139701,19536
            "original_line": 1, original_line702,19546
            "combined_line": 98726, combined_line703,19579
            "original_file": "duk_util_bufwriter.c"original_file704,19616
        {140706,19680
            "original_line": 1, original_line707,19690
            "combined_line": 99013, combined_line708,19723
            "original_file": "duk_util_cast.c"original_file709,19760
        {141711,19819
            "original_line": 1, original_line712,19829
            "combined_line": 99182, combined_line713,19862
            "original_file": "duk_util_double.c"original_file714,19899
        {142716,19960
            "original_line": 1, original_line717,19970
            "combined_line": 99526, combined_line718,20003
            "original_file": "duk_util_hashbytes.c"original_file719,20040
        {143721,20104
            "original_line": 1, original_line722,20114
            "combined_line": 99588, combined_line723,20147
            "original_file": "duk_util_memory.c"original_file724,20184
        {144726,20245
            "original_line": 1, original_line727,20255
            "combined_line": 99625, combined_line728,20288
            "original_file": "duk_util_tinyrandom.c"original_file729,20325
    "line_map": [line_map5,118
    "duk_version": 20500, duk_version732,20396
    "git_branch": "master", git_branch733,20423
    "git_commit": "6001888049cb42656f8649db020e804bcdeca6a7", git_commit734,20452
        {0736,20545
            "plain": "Undefined", plain737,20555
            "base64": "VW5kZWZpbmVk", base64738,20590
            "define": "DUK_STRIDX_UC_UNDEFINED"define739,20629
        {1741,20689
            "plain": "Null", plain742,20699
            "base64": "TnVsbA==", base64743,20729
            "define": "DUK_STRIDX_UC_NULL"define744,20764
        {2746,20819
            "plain": "Symbol", plain747,20829
            "base64": "U3ltYm9s", base64748,20861
            "define": "DUK_STRIDX_UC_SYMBOL"define749,20896
        {3751,20953
            "plain": "Arguments", plain752,20963
            "base64": "QXJndW1lbnRz", base64753,20998
            "define": "DUK_STRIDX_UC_ARGUMENTS"define754,21037
        {4756,21097
            "plain": "Object", plain757,21107
            "base64": "T2JqZWN0", base64758,21139
            "define": "DUK_STRIDX_UC_OBJECT"define759,21174
        {5761,21231
            "plain": "Function", plain762,21241
            "base64": "RnVuY3Rpb24=", base64763,21275
            "define": "DUK_STRIDX_UC_FUNCTION"define764,21314
        {6766,21373
            "plain": "Array", plain767,21383
            "base64": "QXJyYXk=", base64768,21414
            "define": "DUK_STRIDX_UC_ARRAY"define769,21449
        {7771,21505
            "plain": "String", plain772,21515
            "base64": "U3RyaW5n", base64773,21547
            "define": "DUK_STRIDX_UC_STRING"define774,21582
        {8776,21639
            "plain": "Boolean", plain777,21649
            "base64": "Qm9vbGVhbg==", base64778,21682
            "define": "DUK_STRIDX_UC_BOOLEAN"define779,21721
        {9781,21779
            "plain": "Number", plain782,21789
            "base64": "TnVtYmVy", base64783,21821
            "define": "DUK_STRIDX_UC_NUMBER"define784,21856
        {10786,21913
            "plain": "Date", plain787,21923
            "base64": "RGF0ZQ==", base64788,21953
            "define": "DUK_STRIDX_UC_DATE"define789,21988
        {11791,22043
            "plain": "RegExp", plain792,22053
            "base64": "UmVnRXhw", base64793,22085
            "define": "DUK_STRIDX_REG_EXP"define794,22120
        {12796,22175
            "plain": "Error", plain797,22185
            "base64": "RXJyb3I=", base64798,22216
            "define": "DUK_STRIDX_UC_ERROR"define799,22251
        {13801,22307
            "plain": "Math", plain802,22317
            "base64": "TWF0aA==", base64803,22347
            "define": "DUK_STRIDX_MATH"define804,22382
        {14806,22434
            "plain": "JSON", plain807,22444
            "base64": "SlNPTg==", base64808,22474
            "define": "DUK_STRIDX_JSON"define809,22509
        {15811,22561
            "plain": "", plain812,22571
            "base64": "", base64813,22597
            "define": "DUK_STRIDX_EMPTY_STRING"define814,22624
        {16816,22684
            "plain": "ArrayBuffer", plain817,22694
            "base64": "QXJyYXlCdWZmZXI=", base64818,22731
            "define": "DUK_STRIDX_ARRAY_BUFFER"define819,22774
        {17821,22834
            "plain": "DataView", plain822,22844
            "base64": "RGF0YVZpZXc=", base64823,22878
            "define": "DUK_STRIDX_DATA_VIEW"define824,22917
        {18826,22974
            "plain": "Int8Array", plain827,22984
            "base64": "SW50OEFycmF5", base64828,23019
            "define": "DUK_STRIDX_INT8_ARRAY"define829,23058
        {19831,23116
            "plain": "Uint8Array", plain832,23126
            "base64": "VWludDhBcnJheQ==", base64833,23162
            "define": "DUK_STRIDX_UINT8_ARRAY"define834,23205
        {20836,23264
            "plain": "Uint8ClampedArray", plain837,23274
            "base64": "VWludDhDbGFtcGVkQXJyYXk=", base64838,23317
            "define": "DUK_STRIDX_UINT8_CLAMPED_ARRAY"define839,23368
        {21841,23435
            "plain": "Int16Array", plain842,23445
            "base64": "SW50MTZBcnJheQ==", base64843,23481
            "define": "DUK_STRIDX_INT16_ARRAY"define844,23524
        {22846,23583
            "plain": "Uint16Array", plain847,23593
            "base64": "VWludDE2QXJyYXk=", base64848,23630
            "define": "DUK_STRIDX_UINT16_ARRAY"define849,23673
        {23851,23733
            "plain": "Int32Array", plain852,23743
            "base64": "SW50MzJBcnJheQ==", base64853,23779
            "define": "DUK_STRIDX_INT32_ARRAY"define854,23822
        {24856,23881
            "plain": "Uint32Array", plain857,23891
            "base64": "VWludDMyQXJyYXk=", base64858,23928
            "define": "DUK_STRIDX_UINT32_ARRAY"define859,23971
        {25861,24031
            "plain": "Float32Array", plain862,24041
            "base64": "RmxvYXQzMkFycmF5", base64863,24079
            "define": "DUK_STRIDX_FLOAT32_ARRAY"define864,24122
        {26866,24183
            "plain": "Float64Array", plain867,24193
            "base64": "RmxvYXQ2NEFycmF5", base64868,24231
            "define": "DUK_STRIDX_FLOAT64_ARRAY"define869,24274
        {27871,24335
            "plain": "global", plain872,24345
            "base64": "Z2xvYmFs", base64873,24377
            "define": "DUK_STRIDX_GLOBAL"define874,24412
        {28876,24466
            "plain": "ObjEnv", plain877,24476
            "base64": "T2JqRW52", base64878,24508
            "define": "DUK_STRIDX_OBJ_ENV"define879,24543
        {29881,24598
            "plain": "DecEnv", plain882,24608
            "base64": "RGVjRW52", base64883,24640
            "define": "DUK_STRIDX_DEC_ENV"define884,24675
        {30886,24730
            "plain": "Buffer", plain887,24740
            "base64": "QnVmZmVy", base64888,24772
            "define": "DUK_STRIDX_UC_BUFFER"define889,24807
        {31891,24864
            "plain": "Pointer", plain892,24874
            "base64": "UG9pbnRlcg==", base64893,24907
            "define": "DUK_STRIDX_UC_POINTER"define894,24946
        {32896,25004
            "plain": "Thread", plain897,25014
            "base64": "VGhyZWFk", base64898,25046
            "define": "DUK_STRIDX_UC_THREAD"define899,25081
        {33901,25138
            "plain": "eval", plain902,25148
            "base64": "ZXZhbA==", base64903,25178
            "define": "DUK_STRIDX_EVAL"define904,25213
        {34906,25265
            "plain": "value", plain907,25275
            "base64": "dmFsdWU=", base64908,25306
            "define": "DUK_STRIDX_VALUE"define909,25341
        {35911,25394
            "plain": "writable", plain912,25404
            "base64": "d3JpdGFibGU=", base64913,25438
            "define": "DUK_STRIDX_WRITABLE"define914,25477
        {36916,25533
            "plain": "configurable", plain917,25543
            "base64": "Y29uZmlndXJhYmxl", base64918,25581
            "define": "DUK_STRIDX_CONFIGURABLE"define919,25624
        {37921,25684
            "plain": "enumerable", plain922,25694
            "base64": "ZW51bWVyYWJsZQ==", base64923,25730
            "define": "DUK_STRIDX_ENUMERABLE"define924,25773
        {38926,25831
            "plain": "join", plain927,25841
            "base64": "am9pbg==", base64928,25871
            "define": "DUK_STRIDX_JOIN"define929,25906
        {39931,25958
            "plain": "toLocaleString", plain932,25968
            "base64": "dG9Mb2NhbGVTdHJpbmc=", base64933,26008
            "define": "DUK_STRIDX_TO_LOCALE_STRING"define934,26055
        {40936,26119
            "plain": "valueOf", plain937,26129
            "base64": "dmFsdWVPZg==", base64938,26162
            "define": "DUK_STRIDX_VALUE_OF"define939,26201
        {41941,26257
            "plain": "toUTCString", plain942,26267
            "base64": "dG9VVENTdHJpbmc=", base64943,26304
            "define": "DUK_STRIDX_TO_UTC_STRING"define944,26347
        {42946,26408
            "plain": "toISOString", plain947,26418
            "base64": "dG9JU09TdHJpbmc=", base64948,26455
            "define": "DUK_STRIDX_TO_ISO_STRING"define949,26498
        {43951,26559
            "plain": "toGMTString", plain952,26569
            "base64": "dG9HTVRTdHJpbmc=", base64953,26606
            "define": "DUK_STRIDX_TO_GMT_STRING"define954,26649
        {44956,26710
            "plain": "source", plain957,26720
            "base64": "c291cmNl", base64958,26752
            "define": "DUK_STRIDX_SOURCE"define959,26787
        {45961,26841
            "plain": "ignoreCase", plain962,26851
            "base64": "aWdub3JlQ2FzZQ==", base64963,26887
            "define": "DUK_STRIDX_IGNORE_CASE"define964,26930
        {46966,26989
            "plain": "multiline", plain967,26999
            "base64": "bXVsdGlsaW5l", base64968,27034
            "define": "DUK_STRIDX_MULTILINE"define969,27073
        {47971,27130
            "plain": "lastIndex", plain972,27140
            "base64": "bGFzdEluZGV4", base64973,27175
            "define": "DUK_STRIDX_LAST_INDEX"define974,27214
        {48976,27272
            "plain": "flags", plain977,27282
            "base64": "ZmxhZ3M=", base64978,27313
            "define": "DUK_STRIDX_FLAGS"define979,27348
        {49981,27401
            "plain": "index", plain982,27411
            "base64": "aW5kZXg=", base64983,27442
            "define": "DUK_STRIDX_INDEX"define984,27477
        {50986,27530
            "plain": "prototype", plain987,27540
            "base64": "cHJvdG90eXBl", base64988,27575
            "define": "DUK_STRIDX_PROTOTYPE"define989,27614
        {51991,27671
            "plain": "constructor", plain992,27681
            "base64": "Y29uc3RydWN0b3I=", base64993,27718
            "define": "DUK_STRIDX_CONSTRUCTOR"define994,27761
        {52996,27820
            "plain": "message", plain997,27830
            "base64": "bWVzc2FnZQ==", base64998,27863
            "define": "DUK_STRIDX_MESSAGE"define999,27902
        {531001,27957
            "plain": "boolean", plain1002,27967
            "base64": "Ym9vbGVhbg==", base641003,28000
            "define": "DUK_STRIDX_LC_BOOLEAN"define1004,28039
        {541006,28097
            "plain": "number", plain1007,28107
            "base64": "bnVtYmVy", base641008,28139
            "define": "DUK_STRIDX_LC_NUMBER"define1009,28174
        {551011,28231
            "plain": "string", plain1012,28241
            "base64": "c3RyaW5n", base641013,28273
            "define": "DUK_STRIDX_LC_STRING"define1014,28308
        {561016,28365
            "plain": "symbol", plain1017,28375
            "base64": "c3ltYm9s", base641018,28407
            "define": "DUK_STRIDX_LC_SYMBOL"define1019,28442
        {571021,28499
            "plain": "object", plain1022,28509
            "base64": "b2JqZWN0", base641023,28541
            "define": "DUK_STRIDX_LC_OBJECT"define1024,28576
        {581026,28633
            "plain": "undefined", plain1027,28643
            "base64": "dW5kZWZpbmVk", base641028,28678
            "define": "DUK_STRIDX_LC_UNDEFINED"define1029,28717
        {591031,28777
            "plain": "NaN", plain1032,28787
            "base64": "TmFO", base641033,28816
            "define": "DUK_STRIDX_NAN"define1034,28847
        {601036,28898
            "plain": "Infinity", plain1037,28908
            "base64": "SW5maW5pdHk=", base641038,28942
            "define": "DUK_STRIDX_INFINITY"define1039,28981
        {611041,29037
            "plain": "-Infinity", plain1042,29047
            "base64": "LUluZmluaXR5", base641043,29082
            "define": "DUK_STRIDX_MINUS_INFINITY"define1044,29121
        {621046,29183
            "plain": "-0", plain1047,29193
            "base64": "LTA=", base641048,29221
            "define": "DUK_STRIDX_MINUS_ZERO"define1049,29252
        {631051,29310
            "plain": ",", plain1052,29320
            "base64": "LA==", base641053,29347
            "define": "DUK_STRIDX_COMMA"define1054,29378
        {641056,29431
            "plain": "\n    ", plain1057,29441
            "base64": "CiAgICA=", base641058,29473
            "define": "DUK_STRIDX_NEWLINE_4SPACE"define1059,29508
        {651061,29570
            "plain": "[...]", plain1062,29580
            "base64": "Wy4uLl0=", base641063,29611
            "define": "DUK_STRIDX_BRACKETED_ELLIPSIS"define1064,29646
        {661066,29712
            "plain": "Invalid Date", plain1067,29722
            "base64": "SW52YWxpZCBEYXRl", base641068,29760
            "define": "DUK_STRIDX_INVALID_DATE"define1069,29803
        {671071,29863
            "plain": "arguments", plain1072,29873
            "base64": "YXJndW1lbnRz", base641073,29908
            "define": "DUK_STRIDX_LC_ARGUMENTS"define1074,29947
        {681076,30007
            "plain": "callee", plain1077,30017
            "base64": "Y2FsbGVl", base641078,30049
            "define": "DUK_STRIDX_CALLEE"define1079,30084
        {691081,30138
            "plain": "caller", plain1082,30148
            "base64": "Y2FsbGVy", base641083,30180
            "define": "DUK_STRIDX_CALLER"define1084,30215
        {701086,30269
            "plain": "apply", plain1087,30279
            "base64": "YXBwbHk=", base641088,30310
            "define": "DUK_STRIDX_APPLY"define1089,30345
        {711091,30398
            "plain": "construct", plain1092,30408
            "base64": "Y29uc3RydWN0", base641093,30443
            "define": "DUK_STRIDX_CONSTRUCT"define1094,30482
        {721096,30539
            "plain": "deleteProperty", plain1097,30549
            "base64": "ZGVsZXRlUHJvcGVydHk=", base641098,30589
            "define": "DUK_STRIDX_DELETE_PROPERTY"define1099,30636
        {731101,30699
            "plain": "get", plain1102,30709
            "base64": "Z2V0", base641103,30738
            "define": "DUK_STRIDX_GET"define1104,30769
        {741106,30820
            "plain": "has", plain1107,30830
            "base64": "aGFz", base641108,30859
            "define": "DUK_STRIDX_HAS"define1109,30890
        {751111,30941
            "plain": "ownKeys", plain1112,30951
            "base64": "b3duS2V5cw==", base641113,30984
            "define": "DUK_STRIDX_OWN_KEYS"define1114,31023
        {761116,31079
            "plain": "\u0081Symbol.toPrimitive\u00ff", plain1117,31089
            "base64": "gVN5bWJvbC50b1ByaW1pdGl2Zf8=", base641118,31145
            "define": "DUK_STRIDX_WELLKNOWN_SYMBOL_TO_PRIMITIVE"define1119,31200
        {771121,31277
            "plain": "\u0081Symbol.hasInstance\u00ff", plain1122,31287
            "base64": "gVN5bWJvbC5oYXNJbnN0YW5jZf8=", base641123,31343
            "define": "DUK_STRIDX_WELLKNOWN_SYMBOL_HAS_INSTANCE"define1124,31398
        {781126,31475
            "plain": "\u0081Symbol.toStringTag\u00ff", plain1127,31485
            "base64": "gVN5bWJvbC50b1N0cmluZ1RhZ/8=", base641128,31541
            "define": "DUK_STRIDX_WELLKNOWN_SYMBOL_TO_STRING_TAG"define1129,31596
        {791131,31674
            "plain": "\u0081Symbol.isConcatSpreadable\u00ff", plain1132,31684
            "base64": "gVN5bWJvbC5pc0NvbmNhdFNwcmVhZGFibGX/", base641133,31747
            "define": "DUK_STRIDX_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE"define1134,31810
        {801136,31895
            "plain": "setPrototypeOf", plain1137,31905
            "base64": "c2V0UHJvdG90eXBlT2Y=", base641138,31945
            "define": "DUK_STRIDX_SET_PROTOTYPE_OF"define1139,31992
        {811141,32056
            "plain": "__proto__", plain1142,32066
            "base64": "X19wcm90b19f", base641143,32101
            "define": "DUK_STRIDX___PROTO__"define1144,32140
        {821146,32197
            "plain": "toString", plain1147,32207
            "base64": "dG9TdHJpbmc=", base641148,32241
            "define": "DUK_STRIDX_TO_STRING"define1149,32280
        {831151,32337
            "plain": "toJSON", plain1152,32347
            "base64": "dG9KU09O", base641153,32379
            "define": "DUK_STRIDX_TO_JSON"define1154,32414
        {841156,32469
            "plain": "type", plain1157,32479
            "base64": "dHlwZQ==", base641158,32509
            "define": "DUK_STRIDX_TYPE"define1159,32544
        {851161,32596
            "plain": "data", plain1162,32606
            "base64": "ZGF0YQ==", base641163,32636
            "define": "DUK_STRIDX_DATA"define1164,32671
        {861166,32723
            "plain": "buffer", plain1167,32733
            "base64": "YnVmZmVy", base641168,32765
            "define": "DUK_STRIDX_LC_BUFFER"define1169,32800
        {871171,32857
            "plain": "length", plain1172,32867
            "base64": "bGVuZ3Ro", base641173,32899
            "define": "DUK_STRIDX_LENGTH"define1174,32934
        {881176,32988
            "plain": "set", plain1177,32998
            "base64": "c2V0", base641178,33027
            "define": "DUK_STRIDX_SET"define1179,33058
        {891181,33109
            "plain": "stack", plain1182,33119
            "base64": "c3RhY2s=", base641183,33150
            "define": "DUK_STRIDX_STACK"define1184,33185
        {901186,33238
            "plain": "pc", plain1187,33248
            "base64": "cGM=", base641188,33276
            "define": "DUK_STRIDX_PC"define1189,33307
        {911191,33357
            "plain": "lineNumber", plain1192,33367
            "base64": "bGluZU51bWJlcg==", base641193,33403
            "define": "DUK_STRIDX_LINE_NUMBER"define1194,33446
        {921196,33505
            "plain": "\u0082Tracedata", plain1197,33515
            "base64": "glRyYWNlZGF0YQ==", base641198,33556
            "define": "DUK_STRIDX_INT_TRACEDATA"define1199,33599
        {931201,33660
            "plain": "name", plain1202,33670
            "base64": "bmFtZQ==", base641203,33700
            "define": "DUK_STRIDX_NAME"define1204,33735
        {941206,33787
            "plain": "fileName", plain1207,33797
            "base64": "ZmlsZU5hbWU=", base641208,33831
            "define": "DUK_STRIDX_FILE_NAME"define1209,33870
        {951211,33927
            "plain": "pointer", plain1212,33937
            "base64": "cG9pbnRlcg==", base641213,33970
            "define": "DUK_STRIDX_LC_POINTER"define1214,34009
        {961216,34067
            "plain": "\u0082Target", plain1217,34077
            "base64": "glRhcmdldA==", base641218,34115
            "define": "DUK_STRIDX_INT_TARGET"define1219,34154
        {971221,34212
            "plain": "\u0082Next", plain1222,34222
            "base64": "gk5leHQ=", base641223,34258
            "define": "DUK_STRIDX_INT_NEXT"define1224,34293
        {981226,34349
            "plain": "\u0082Bytecode", plain1227,34359
            "base64": "gkJ5dGVjb2Rl", base641228,34399
            "define": "DUK_STRIDX_INT_BYTECODE"define1229,34438
        {991231,34498
            "plain": "\u0082Formals", plain1232,34508
            "base64": "gkZvcm1hbHM=", base641233,34547
            "define": "DUK_STRIDX_INT_FORMALS"define1234,34586
        {1001236,34645
            "plain": "\u0082Varmap", plain1237,34655
            "base64": "glZhcm1hcA==", base641238,34693
            "define": "DUK_STRIDX_INT_VARMAP"define1239,34732
        {1011241,34790
            "plain": "\u0082Source", plain1242,34800
            "base64": "glNvdXJjZQ==", base641243,34838
            "define": "DUK_STRIDX_INT_SOURCE"define1244,34877
        {1021246,34935
            "plain": "\u0082Pc2line", plain1247,34945
            "base64": "glBjMmxpbmU=", base641248,34984
            "define": "DUK_STRIDX_INT_PC2LINE"define1249,35023
        {1031251,35082
            "plain": "\u0082Map", plain1252,35092
            "base64": "gk1hcA==", base641253,35127
            "define": "DUK_STRIDX_INT_MAP"define1254,35162
        {1041256,35217
            "plain": "\u0082Varenv", plain1257,35227
            "base64": "glZhcmVudg==", base641258,35265
            "define": "DUK_STRIDX_INT_VARENV"define1259,35304
        {1051261,35362
            "plain": "\u0082Finalizer", plain1262,35372
            "base64": "gkZpbmFsaXplcg==", base641263,35413
            "define": "DUK_STRIDX_INT_FINALIZER"define1264,35456
        {1061266,35517
            "plain": "\u0082Value", plain1267,35527
            "base64": "glZhbHVl", base641268,35564
            "define": "DUK_STRIDX_INT_VALUE"define1269,35599
        {1071271,35656
            "plain": "compile", plain1272,35666
            "base64": "Y29tcGlsZQ==", base641273,35699
            "define": "DUK_STRIDX_COMPILE"define1274,35738
        {1081276,35793
            "plain": "input", plain1277,35803
            "base64": "aW5wdXQ=", base641278,35834
            "define": "DUK_STRIDX_INPUT"define1279,35869
        {1091281,35922
            "plain": "errCreate", plain1282,35932
            "base64": "ZXJyQ3JlYXRl", base641283,35967
            "define": "DUK_STRIDX_ERR_CREATE"define1284,36006
        {1101286,36064
            "plain": "errThrow", plain1287,36074
            "base64": "ZXJyVGhyb3c=", base641288,36108
            "define": "DUK_STRIDX_ERR_THROW"define1289,36147
        {1111291,36204
            "plain": "env", plain1292,36214
            "base64": "ZW52", base641293,36243
            "define": "DUK_STRIDX_ENV"define1294,36274
        {1121296,36325
            "plain": "hex", plain1297,36335
            "base64": "aGV4", base641298,36364
            "define": "DUK_STRIDX_HEX"define1299,36395
        {1131301,36446
            "plain": "base64", plain1302,36456
            "base64": "YmFzZTY0", base641303,36488
            "define": "DUK_STRIDX_BASE64"define1304,36523
        {1141306,36577
            "plain": "jx", plain1307,36587
            "base64": "ang=", base641308,36615
            "define": "DUK_STRIDX_JX"define1309,36646
        {1151311,36696
            "plain": "jc", plain1312,36706
            "base64": "amM=", base641313,36734
            "define": "DUK_STRIDX_JC"define1314,36765
        {1161316,36815
            "plain": "{\"_undef\":true}", plain1317,36825
            "base64": "eyJfdW5kZWYiOnRydWV9", base641318,36868
            "define": "DUK_STRIDX_JSON_EXT_UNDEFINED"define1319,36915
        {1171321,36981
            "plain": "{\"_nan\":true}", plain1322,36991
            "base64": "eyJfbmFuIjp0cnVlfQ==", base641323,37032
            "define": "DUK_STRIDX_JSON_EXT_NAN"define1324,37079
        {1181326,37139
            "plain": "{\"_inf\":true}", plain1327,37149
            "base64": "eyJfaW5mIjp0cnVlfQ==", base641328,37190
            "define": "DUK_STRIDX_JSON_EXT_POSINF"define1329,37237
        {1191331,37300
            "plain": "{\"_ninf\":true}", plain1332,37310
            "base64": "eyJfbmluZiI6dHJ1ZX0=", base641333,37352
            "define": "DUK_STRIDX_JSON_EXT_NEGINF"define1334,37399
        {1201336,37462
            "plain": "{\"_func\":true}", plain1337,37472
            "base64": "eyJfZnVuYyI6dHJ1ZX0=", base641338,37514
            "define": "DUK_STRIDX_JSON_EXT_FUNCTION1"define1339,37561
        {1211341,37627
            "plain": "{_func:true}", plain1342,37637
            "base64": "e19mdW5jOnRydWV9", base641343,37675
            "define": "DUK_STRIDX_JSON_EXT_FUNCTION2"define1344,37718
        {1221346,37784
            "plain": "break", plain1347,37794
            "base64": "YnJlYWs=", base641348,37825
            "define": "DUK_STRIDX_BREAK"define1349,37860
        {1231351,37913
            "plain": "case", plain1352,37923
            "base64": "Y2FzZQ==", base641353,37953
            "define": "DUK_STRIDX_CASE"define1354,37988
        {1241356,38040
            "plain": "catch", plain1357,38050
            "base64": "Y2F0Y2g=", base641358,38081
            "define": "DUK_STRIDX_CATCH"define1359,38116
        {1251361,38169
            "plain": "continue", plain1362,38179
            "base64": "Y29udGludWU=", base641363,38213
            "define": "DUK_STRIDX_CONTINUE"define1364,38252
        {1261366,38308
            "plain": "debugger", plain1367,38318
            "base64": "ZGVidWdnZXI=", base641368,38352
            "define": "DUK_STRIDX_DEBUGGER"define1369,38391
        {1271371,38447
            "plain": "default", plain1372,38457
            "base64": "ZGVmYXVsdA==", base641373,38490
            "define": "DUK_STRIDX_DEFAULT"define1374,38529
        {1281376,38584
            "plain": "delete", plain1377,38594
            "base64": "ZGVsZXRl", base641378,38626
            "define": "DUK_STRIDX_DELETE"define1379,38661
        {1291381,38715
            "plain": "do", plain1382,38725
            "base64": "ZG8=", base641383,38753
            "define": "DUK_STRIDX_DO"define1384,38784
        {1301386,38834
            "plain": "else", plain1387,38844
            "base64": "ZWxzZQ==", base641388,38874
            "define": "DUK_STRIDX_ELSE"define1389,38909
        {1311391,38961
            "plain": "finally", plain1392,38971
            "base64": "ZmluYWxseQ==", base641393,39004
            "define": "DUK_STRIDX_FINALLY"define1394,39043
        {1321396,39098
            "plain": "for", plain1397,39108
            "base64": "Zm9y", base641398,39137
            "define": "DUK_STRIDX_FOR"define1399,39168
        {1331401,39219
            "plain": "function", plain1402,39229
            "base64": "ZnVuY3Rpb24=", base641403,39263
            "define": "DUK_STRIDX_LC_FUNCTION"define1404,39302
        {1341406,39361
            "plain": "if", plain1407,39371
            "base64": "aWY=", base641408,39399
            "define": "DUK_STRIDX_IF"define1409,39430
        {1351411,39480
            "plain": "in", plain1412,39490
            "base64": "aW4=", base641413,39518
            "define": "DUK_STRIDX_IN"define1414,39549
        {1361416,39599
            "plain": "instanceof", plain1417,39609
            "base64": "aW5zdGFuY2VvZg==", base641418,39645
            "define": "DUK_STRIDX_INSTANCEOF"define1419,39688
        {1371421,39746
            "plain": "new", plain1422,39756
            "base64": "bmV3", base641423,39785
            "define": "DUK_STRIDX_NEW"define1424,39816
        {1381426,39867
            "plain": "return", plain1427,39877
            "base64": "cmV0dXJu", base641428,39909
            "define": "DUK_STRIDX_RETURN"define1429,39944
        {1391431,39998
            "plain": "switch", plain1432,40008
            "base64": "c3dpdGNo", base641433,40040
            "define": "DUK_STRIDX_SWITCH"define1434,40075
        {1401436,40129
            "plain": "this", plain1437,40139
            "base64": "dGhpcw==", base641438,40169
            "define": "DUK_STRIDX_THIS"define1439,40204
        {1411441,40256
            "plain": "throw", plain1442,40266
            "base64": "dGhyb3c=", base641443,40297
            "define": "DUK_STRIDX_THROW"define1444,40332
        {1421446,40385
            "plain": "try", plain1447,40395
            "base64": "dHJ5", base641448,40424
            "define": "DUK_STRIDX_TRY"define1449,40455
        {1431451,40506
            "plain": "typeof", plain1452,40516
            "base64": "dHlwZW9m", base641453,40548
            "define": "DUK_STRIDX_TYPEOF"define1454,40583
        {1441456,40637
            "plain": "var", plain1457,40647
            "base64": "dmFy", base641458,40676
            "define": "DUK_STRIDX_VAR"define1459,40707
        {1451461,40758
            "plain": "const", plain1462,40768
            "base64": "Y29uc3Q=", base641463,40799
            "define": "DUK_STRIDX_CONST"define1464,40834
        {1461466,40887
            "plain": "void", plain1467,40897
            "base64": "dm9pZA==", base641468,40927
            "define": "DUK_STRIDX_VOID"define1469,40962
        {1471471,41014
            "plain": "while", plain1472,41024
            "base64": "d2hpbGU=", base641473,41055
            "define": "DUK_STRIDX_WHILE"define1474,41090
        {1481476,41143
            "plain": "with", plain1477,41153
            "base64": "d2l0aA==", base641478,41183
            "define": "DUK_STRIDX_WITH"define1479,41218
        {1491481,41270
            "plain": "class", plain1482,41280
            "base64": "Y2xhc3M=", base641483,41311
            "define": "DUK_STRIDX_CLASS"define1484,41346
        {1501486,41399
            "plain": "enum", plain1487,41409
            "base64": "ZW51bQ==", base641488,41439
            "define": "DUK_STRIDX_ENUM"define1489,41474
        {1511491,41526
            "plain": "export", plain1492,41536
            "base64": "ZXhwb3J0", base641493,41568
            "define": "DUK_STRIDX_EXPORT"define1494,41603
        {1521496,41657
            "plain": "extends", plain1497,41667
            "base64": "ZXh0ZW5kcw==", base641498,41700
            "define": "DUK_STRIDX_EXTENDS"define1499,41739
        {1531501,41794
            "plain": "import", plain1502,41804
            "base64": "aW1wb3J0", base641503,41836
            "define": "DUK_STRIDX_IMPORT"define1504,41871
        {1541506,41925
            "plain": "super", plain1507,41935
            "base64": "c3VwZXI=", base641508,41966
            "define": "DUK_STRIDX_SUPER"define1509,42001
        {1551511,42054
            "plain": "null", plain1512,42064
            "base64": "bnVsbA==", base641513,42094
            "define": "DUK_STRIDX_LC_NULL"define1514,42129
        {1561516,42184
            "plain": "true", plain1517,42194
            "base64": "dHJ1ZQ==", base641518,42224
            "define": "DUK_STRIDX_TRUE"define1519,42259
        {1571521,42311
            "plain": "false", plain1522,42321
            "base64": "ZmFsc2U=", base641523,42352
            "define": "DUK_STRIDX_FALSE"define1524,42387
        {1581526,42440
            "plain": "implements", plain1527,42450
            "base64": "aW1wbGVtZW50cw==", base641528,42486
            "define": "DUK_STRIDX_IMPLEMENTS"define1529,42529
        {1591531,42587
            "plain": "interface", plain1532,42597
            "base64": "aW50ZXJmYWNl", base641533,42632
            "define": "DUK_STRIDX_INTERFACE"define1534,42671
        {1601536,42728
            "plain": "let", plain1537,42738
            "base64": "bGV0", base641538,42767
            "define": "DUK_STRIDX_LET"define1539,42798
        {1611541,42849
            "plain": "package", plain1542,42859
            "base64": "cGFja2FnZQ==", base641543,42892
            "define": "DUK_STRIDX_PACKAGE"define1544,42931
        {1621546,42986
            "plain": "private", plain1547,42996
            "base64": "cHJpdmF0ZQ==", base641548,43029
            "define": "DUK_STRIDX_PRIVATE"define1549,43068
        {1631551,43123
            "plain": "protected", plain1552,43133
            "base64": "cHJvdGVjdGVk", base641553,43168
            "define": "DUK_STRIDX_PROTECTED"define1554,43207
        {1641556,43264
            "plain": "public", plain1557,43274
            "base64": "cHVibGlj", base641558,43306
            "define": "DUK_STRIDX_PUBLIC"define1559,43341
        {1651561,43395
            "plain": "static", plain1562,43405
            "base64": "c3RhdGlj", base641563,43437
            "define": "DUK_STRIDX_STATIC"define1564,43472
        {1661566,43526
            "plain": "yield", plain1567,43536
            "base64": "eWllbGQ=", base641568,43567
            "define": "DUK_STRIDX_YIELD"define1569,43602
    "builtin_strings_info": [builtin_strings_info735,20515
        "VW5kZWZpbmVk", 01573,43693
        "TnVsbA==", 11574,43718
        "U3ltYm9s", 21575,43739
        "QXJndW1lbnRz", 31576,43760
        "T2JqZWN0", 41577,43785
        "RnVuY3Rpb24=", 51578,43806
        "QXJyYXk=", 61579,43831
        "U3RyaW5n", 71580,43852
        "Qm9vbGVhbg==", 81581,43873
        "TnVtYmVy", 91582,43898
        "RGF0ZQ==", 101583,43919
        "UmVnRXhw", 111584,43940
        "RXJyb3I=", 121585,43961
        "TWF0aA==", 131586,43982
        "SlNPTg==", 141587,44003
        "", 151588,44024
        "QXJyYXlCdWZmZXI=", 161589,44037
        "RGF0YVZpZXc=", 171590,44066
        "SW50OEFycmF5", 181591,44091
        "VWludDhBcnJheQ==", 191592,44116
        "VWludDhDbGFtcGVkQXJyYXk=", 201593,44145
        "SW50MTZBcnJheQ==", 211594,44182
        "VWludDE2QXJyYXk=", 221595,44211
        "SW50MzJBcnJheQ==", 231596,44240
        "VWludDMyQXJyYXk=", 241597,44269
        "RmxvYXQzMkFycmF5", 251598,44298
        "RmxvYXQ2NEFycmF5", 261599,44327
        "Z2xvYmFs", 271600,44356
        "T2JqRW52", 281601,44377
        "RGVjRW52", 291602,44398
        "QnVmZmVy", 301603,44419
        "UG9pbnRlcg==", 311604,44440
        "VGhyZWFk", 321605,44465
        "ZXZhbA==", 331606,44486
        "dmFsdWU=", 341607,44507
        "d3JpdGFibGU=", 351608,44528
        "Y29uZmlndXJhYmxl", 361609,44553
        "ZW51bWVyYWJsZQ==", 371610,44582
        "am9pbg==", 381611,44611
        "dG9Mb2NhbGVTdHJpbmc=", 391612,44632
        "dmFsdWVPZg==", 401613,44665
        "dG9VVENTdHJpbmc=", 411614,44690
        "dG9JU09TdHJpbmc=", 421615,44719
        "dG9HTVRTdHJpbmc=", 431616,44748
        "c291cmNl", 441617,44777
        "aWdub3JlQ2FzZQ==", 451618,44798
        "bXVsdGlsaW5l", 461619,44827
        "bGFzdEluZGV4", 471620,44852
        "ZmxhZ3M=", 481621,44877
        "aW5kZXg=", 491622,44898
        "cHJvdG90eXBl", 501623,44919
        "Y29uc3RydWN0b3I=", 511624,44944
        "bWVzc2FnZQ==", 521625,44973
        "Ym9vbGVhbg==", 531626,44998
        "bnVtYmVy", 541627,45023
        "c3RyaW5n", 551628,45044
        "c3ltYm9s", 561629,45065
        "b2JqZWN0", 571630,45086
        "dW5kZWZpbmVk", 581631,45107
        "TmFO", 591632,45132
        "SW5maW5pdHk=", 601633,45149
        "LUluZmluaXR5", 611634,45174
        "LTA=", 621635,45199
        "LA==", 631636,45216
        "CiAgICA=", 641637,45233
        "Wy4uLl0=", 651638,45254
        "SW52YWxpZCBEYXRl", 661639,45275
        "YXJndW1lbnRz", 671640,45304
        "Y2FsbGVl", 681641,45329
        "Y2FsbGVy", 691642,45350
        "YXBwbHk=", 701643,45371
        "Y29uc3RydWN0", 711644,45392
        "ZGVsZXRlUHJvcGVydHk=", 721645,45417
        "Z2V0", 731646,45450
        "aGFz", 741647,45467
        "b3duS2V5cw==", 751648,45484
        "gVN5bWJvbC50b1ByaW1pdGl2Zf8=", 761649,45509
        "gVN5bWJvbC5oYXNJbnN0YW5jZf8=", 771650,45550
        "gVN5bWJvbC50b1N0cmluZ1RhZ/8=", 781651,45591
        "gVN5bWJvbC5pc0NvbmNhdFNwcmVhZGFibGX/", 791652,45632
        "c2V0UHJvdG90eXBlT2Y=", 801653,45681
        "X19wcm90b19f", 811654,45714
        "dG9TdHJpbmc=", 821655,45739
        "dG9KU09O", 831656,45764
        "dHlwZQ==", 841657,45785
        "ZGF0YQ==", 851658,45806
        "YnVmZmVy", 861659,45827
        "bGVuZ3Ro", 871660,45848
        "c2V0", 881661,45869
        "c3RhY2s=", 891662,45886
        "cGM=", 901663,45907
        "bGluZU51bWJlcg==", 911664,45924
        "glRyYWNlZGF0YQ==", 921665,45953
        "bmFtZQ==", 931666,45982
        "ZmlsZU5hbWU=", 941667,46003
        "cG9pbnRlcg==", 951668,46028
        "glRhcmdldA==", 961669,46053
        "gk5leHQ=", 971670,46078
        "gkJ5dGVjb2Rl", 981671,46099
        "gkZvcm1hbHM=", 991672,46124
        "glZhcm1hcA==", 1001673,46149
        "glNvdXJjZQ==", 1011674,46174
        "glBjMmxpbmU=", 1021675,46199
        "gk1hcA==", 1031676,46224
        "glZhcmVudg==", 1041677,46245
        "gkZpbmFsaXplcg==", 1051678,46270
        "glZhbHVl", 1061679,46299
        "Y29tcGlsZQ==", 1071680,46320
        "aW5wdXQ=", 1081681,46345
        "ZXJyQ3JlYXRl", 1091682,46366
        "ZXJyVGhyb3c=", 1101683,46391
        "ZW52", 1111684,46416
        "aGV4", 1121685,46433
        "YmFzZTY0", 1131686,46450
        "ang=", 1141687,46471
        "amM=", 1151688,46488
        "eyJfdW5kZWYiOnRydWV9", 1161689,46505
        "eyJfbmFuIjp0cnVlfQ==", 1171690,46538
        "eyJfaW5mIjp0cnVlfQ==", 1181691,46571
        "eyJfbmluZiI6dHJ1ZX0=", 1191692,46604
        "eyJfZnVuYyI6dHJ1ZX0=", 1201693,46637
        "e19mdW5jOnRydWV9", 1211694,46670
        "YnJlYWs=", 1221695,46699
        "Y2FzZQ==", 1231696,46720
        "Y2F0Y2g=", 1241697,46741
        "Y29udGludWU=", 1251698,46762
        "ZGVidWdnZXI=", 1261699,46787
        "ZGVmYXVsdA==", 1271700,46812
        "ZGVsZXRl", 1281701,46837
        "ZG8=", 1291702,46858
        "ZWxzZQ==", 1301703,46875
        "ZmluYWxseQ==", 1311704,46896
        "Zm9y", 1321705,46921
        "ZnVuY3Rpb24=", 1331706,46938
        "aWY=", 1341707,46963
        "aW4=", 1351708,46980
        "aW5zdGFuY2VvZg==", 1361709,46997
        "bmV3", 1371710,47026
        "cmV0dXJu", 1381711,47043
        "c3dpdGNo", 1391712,47064
        "dGhpcw==", 1401713,47085
        "dGhyb3c=", 1411714,47106
        "dHJ5", 1421715,47127
        "dHlwZW9m", 1431716,47144
        "dmFy", 1441717,47165
        "Y29uc3Q=", 1451718,47182
        "dm9pZA==", 1461719,47203
        "d2hpbGU=", 1471720,47224
        "d2l0aA==", 1481721,47245
        "Y2xhc3M=", 1491722,47266
        "ZW51bQ==", 1501723,47287
        "ZXhwb3J0", 1511724,47308
        "ZXh0ZW5kcw==", 1521725,47329
        "aW1wb3J0", 1531726,47354
        "c3VwZXI=", 1541727,47375
        "bnVsbA==", 1551728,47396
        "dHJ1ZQ==", 1561729,47417
        "ZmFsc2U=", 1571730,47438
        "aW1wbGVtZW50cw==", 1581731,47459
        "aW50ZXJmYWNl", 1591732,47488
        "bGV0", 1601733,47513
        "cGFja2FnZQ==", 1611734,47530
        "cHJpdmF0ZQ==", 1621735,47555
        "cHJvdGVjdGVk", 1631736,47580
        "cHVibGlj", 1641737,47605
        "c3RhdGlj", 1651738,47626
        "eWllbGQ="1661739,47647
    "builtin_strings_base64": [builtin_strings_base641572,43661
    "git_describe": "v2.5.0", git_describe1741,47674
        "Undefined", 01743,47730
        "Null", 11744,47752
        "Symbol", 21745,47769
        "Arguments", 31746,47788
        "Object", 41747,47810
        "Function", 51748,47829
        "Array", 61749,47850
        "String", 71750,47868
        "Boolean", 81751,47887
        "Number", 91752,47907
        "Date", 101753,47926
        "RegExp", 111754,47943
        "Error", 121755,47962
        "Math", 131756,47980
        "JSON", 141757,47997
        "", 151758,48014
        "ArrayBuffer", 161759,48027
        "DataView", 171760,48051
        "Int8Array", 181761,48072
        "Uint8Array", 191762,48094
        "Uint8ClampedArray", 201763,48117
        "Int16Array", 211764,48147
        "Uint16Array", 221765,48170
        "Int32Array", 231766,48194
        "Uint32Array", 241767,48217
        "Float32Array", 251768,48241
        "Float64Array", 261769,48266
        "global", 271770,48291
        "ObjEnv", 281771,48310
        "DecEnv", 291772,48329
        "Buffer", 301773,48348
        "Pointer", 311774,48367
        "Thread", 321775,48387
        "eval", 331776,48406
        "value", 341777,48423
        "writable", 351778,48441
        "configurable", 361779,48462
        "enumerable", 371780,48487
        "join", 381781,48510
        "toLocaleString", 391782,48527
        "valueOf", 401783,48554
        "toUTCString", 411784,48574
        "toISOString", 421785,48598
        "toGMTString", 431786,48622
        "source", 441787,48646
        "ignoreCase", 451788,48665
        "multiline", 461789,48688
        "lastIndex", 471790,48710
        "flags", 481791,48732
        "index", 491792,48750
        "prototype", 501793,48768
        "constructor", 511794,48790
        "message", 521795,48814
        "boolean", 531796,48834
        "number", 541797,48854
        "string", 551798,48873
        "symbol", 561799,48892
        "object", 571800,48911
        "undefined", 581801,48930
        "NaN", 591802,48952
        "Infinity", 601803,48968
        "-Infinity", 611804,48989
        "-0", 621805,49011
        ",", 631806,49026
        "\n    ", 641807,49040
        "[...]", 651808,49059
        "Invalid Date", 661809,49077
        "arguments", 671810,49102
        "callee", 681811,49124
        "caller", 691812,49143
        "apply", 701813,49162
        "construct", 711814,49180
        "deleteProperty", 721815,49202
        "get", 731816,49229
        "has", 741817,49245
        "ownKeys", 751818,49261
        "\u0081Symbol.toPrimitive\u00ff", 761819,49281
        "\u0081Symbol.hasInstance\u00ff", 771820,49324
        "\u0081Symbol.toStringTag\u00ff", 781821,49367
        "\u0081Symbol.isConcatSpreadable\u00ff", 791822,49410
        "setPrototypeOf", 801823,49460
        "__proto__", 811824,49487
        "toString", 821825,49509
        "toJSON", 831826,49530
        "type", 841827,49549
        "data", 851828,49566
        "buffer", 861829,49583
        "length", 871830,49602
        "set", 881831,49621
        "stack", 891832,49637
        "pc", 901833,49655
        "lineNumber", 911834,49670
        "\u0082Tracedata", 921835,49693
        "name", 931836,49721
        "fileName", 941837,49738
        "pointer", 951838,49759
        "\u0082Target", 961839,49779
        "\u0082Next", 971840,49804
        "\u0082Bytecode", 981841,49827
        "\u0082Formals", 991842,49854
        "\u0082Varmap", 1001843,49880
        "\u0082Source", 1011844,49905
        "\u0082Pc2line", 1021845,49930
        "\u0082Map", 1031846,49956
        "\u0082Varenv", 1041847,49978
        "\u0082Finalizer", 1051848,50003
        "\u0082Value", 1061849,50031
        "compile", 1071850,50055
        "input", 1081851,50075
        "errCreate", 1091852,50093
        "errThrow", 1101853,50115
        "env", 1111854,50136
        "hex", 1121855,50152
        "base64", 1131856,50168
        "jx", 1141857,50187
        "jc", 1151858,50202
        "{\"_undef\":true}", 1161859,50217
        "{\"_nan\":true}", 1171860,50247
        "{\"_inf\":true}", 1181861,50275
        "{\"_ninf\":true}", 1191862,50303
        "{\"_func\":true}", 1201863,50332
        "{_func:true}", 1211864,50361
        "break", 1221865,50386
        "case", 1231866,50404
        "catch", 1241867,50421
        "continue", 1251868,50439
        "debugger", 1261869,50460
        "default", 1271870,50481
        "delete", 1281871,50501
        "do", 1291872,50520
        "else", 1301873,50535
        "finally", 1311874,50552
        "for", 1321875,50572
        "function", 1331876,50588
        "if", 1341877,50609
        "in", 1351878,50624
        "instanceof", 1361879,50639
        "new", 1371880,50662
        "return", 1381881,50678
        "switch", 1391882,50697
        "this", 1401883,50716
        "throw", 1411884,50733
        "try", 1421885,50751
        "typeof", 1431886,50767
        "var", 1441887,50786
        "const", 1451888,50802
        "void", 1461889,50820
        "while", 1471890,50837
        "with", 1481891,50855
        "class", 1491892,50872
        "enum", 1501893,50890
        "export", 1511894,50907
        "extends", 1521895,50926
        "import", 1531896,50946
        "super", 1541897,50965
        "null", 1551898,50983
        "true", 1561899,51000
        "false", 1571900,51017
        "implements", 1581901,51035
        "interface", 1591902,51058
        "let", 1601903,51080
        "package", 1611904,51096
        "private", 1621905,51116
        "protected", 1631906,51136
        "public", 1641907,51158
        "static", 1651908,51177
        "yield"1661909,51196
    "builtin_strings": [builtin_strings1742,47705

duktape/duktape.cpp,500354
#define DUK_INTERNAL_H_INCLUDEDDUK_INTERNAL_H_INCLUDED181,6665
#define DUK_COMPILING_DUKTAPEDUK_COMPILING_DUKTAPE197,7421
#define DUK_DBLUNION_H_INCLUDEDDUK_DBLUNION_H_INCLUDED263,10176
union duk_double_union {duk_double_union269,10286
	double d;d270,10311
	float f[2];f271,10322
	duk_uint64_t ull[1];ull273,10366
	duk_uint32_t ui[2];ui275,10395
	duk_uint16_t us[4];us276,10416
	duk_uint8_t uc[8];uc277,10437
	void *vp[2];  /* used by packed duk_tval, assumes sizeof(void *) == 4 */vp279,10490
typedef union duk_double_union duk_double_union;duk_double_union283,10575
#define DUK_DBL_IDX_ULL0 DUK_DBL_IDX_ULL0291,10768
#define DUK_DBL_IDX_UI0 DUK_DBL_IDX_UI0293,10804
#define DUK_DBL_IDX_UI1 DUK_DBL_IDX_UI1294,10833
#define DUK_DBL_IDX_US0 DUK_DBL_IDX_US0295,10862
#define DUK_DBL_IDX_US1 DUK_DBL_IDX_US1296,10891
#define DUK_DBL_IDX_US2 DUK_DBL_IDX_US2297,10920
#define DUK_DBL_IDX_US3 DUK_DBL_IDX_US3298,10949
#define DUK_DBL_IDX_UC0 DUK_DBL_IDX_UC0299,10978
#define DUK_DBL_IDX_UC1 DUK_DBL_IDX_UC1300,11007
#define DUK_DBL_IDX_UC2 DUK_DBL_IDX_UC2301,11036
#define DUK_DBL_IDX_UC3 DUK_DBL_IDX_UC3302,11065
#define DUK_DBL_IDX_UC4 DUK_DBL_IDX_UC4303,11094
#define DUK_DBL_IDX_UC5 DUK_DBL_IDX_UC5304,11123
#define DUK_DBL_IDX_UC6 DUK_DBL_IDX_UC6305,11152
#define DUK_DBL_IDX_UC7 DUK_DBL_IDX_UC7306,11181
#define DUK_DBL_IDX_VP0 DUK_DBL_IDX_VP0307,11210
#define DUK_DBL_IDX_VP1 DUK_DBL_IDX_VP1308,11272
#define DUK_DBL_IDX_ULL0 DUK_DBL_IDX_ULL0311,11398
#define DUK_DBL_IDX_UI0 DUK_DBL_IDX_UI0313,11434
#define DUK_DBL_IDX_UI1 DUK_DBL_IDX_UI1314,11463
#define DUK_DBL_IDX_US0 DUK_DBL_IDX_US0315,11492
#define DUK_DBL_IDX_US1 DUK_DBL_IDX_US1316,11521
#define DUK_DBL_IDX_US2 DUK_DBL_IDX_US2317,11550
#define DUK_DBL_IDX_US3 DUK_DBL_IDX_US3318,11579
#define DUK_DBL_IDX_UC0 DUK_DBL_IDX_UC0319,11608
#define DUK_DBL_IDX_UC1 DUK_DBL_IDX_UC1320,11637
#define DUK_DBL_IDX_UC2 DUK_DBL_IDX_UC2321,11666
#define DUK_DBL_IDX_UC3 DUK_DBL_IDX_UC3322,11695
#define DUK_DBL_IDX_UC4 DUK_DBL_IDX_UC4323,11724
#define DUK_DBL_IDX_UC5 DUK_DBL_IDX_UC5324,11753
#define DUK_DBL_IDX_UC6 DUK_DBL_IDX_UC6325,11782
#define DUK_DBL_IDX_UC7 DUK_DBL_IDX_UC7326,11811
#define DUK_DBL_IDX_VP0 DUK_DBL_IDX_VP0327,11840
#define DUK_DBL_IDX_VP1 DUK_DBL_IDX_VP1328,11902
#define DUK_DBL_IDX_ULL0 DUK_DBL_IDX_ULL0331,12028
#define DUK_DBL_IDX_UI0 DUK_DBL_IDX_UI0333,12129
#define DUK_DBL_IDX_UI1 DUK_DBL_IDX_UI1334,12158
#define DUK_DBL_IDX_US0 DUK_DBL_IDX_US0335,12187
#define DUK_DBL_IDX_US1 DUK_DBL_IDX_US1336,12216
#define DUK_DBL_IDX_US2 DUK_DBL_IDX_US2337,12245
#define DUK_DBL_IDX_US3 DUK_DBL_IDX_US3338,12274
#define DUK_DBL_IDX_UC0 DUK_DBL_IDX_UC0339,12303
#define DUK_DBL_IDX_UC1 DUK_DBL_IDX_UC1340,12332
#define DUK_DBL_IDX_UC2 DUK_DBL_IDX_UC2341,12361
#define DUK_DBL_IDX_UC3 DUK_DBL_IDX_UC3342,12390
#define DUK_DBL_IDX_UC4 DUK_DBL_IDX_UC4343,12419
#define DUK_DBL_IDX_UC5 DUK_DBL_IDX_UC5344,12448
#define DUK_DBL_IDX_UC6 DUK_DBL_IDX_UC6345,12477
#define DUK_DBL_IDX_UC7 DUK_DBL_IDX_UC7346,12506
#define DUK_DBL_IDX_VP0 DUK_DBL_IDX_VP0347,12535
#define DUK_DBL_IDX_VP1 DUK_DBL_IDX_VP1348,12597
#define DUK_DBLUNION_SET_DOUBLE(DUK_DBLUNION_SET_DOUBLE358,12812
#define DUK_DBLUNION_SET_HIGH32(DUK_DBLUNION_SET_HIGH32362,12890
#define DUK_DBLUNION_SET_HIGH32_ZERO_LOW32(DUK_DBLUNION_SET_HIGH32_ZERO_LOW32368,13063
#define DUK_DBLUNION_SET_HIGH32_ZERO_LOW32(DUK_DBLUNION_SET_HIGH32_ZERO_LOW32372,13191
#define DUK_DBLUNION_SET_HIGH32_ZERO_LOW32(DUK_DBLUNION_SET_HIGH32_ZERO_LOW32377,13359
#define DUK_DBLUNION_SET_LOW32(DUK_DBLUNION_SET_LOW32383,13561
#define DUK_DBLUNION_GET_DOUBLE(DUK_DBLUNION_GET_DOUBLE387,13671
#define DUK_DBLUNION_GET_HIGH32(DUK_DBLUNION_GET_HIGH32388,13716
#define DUK_DBLUNION_GET_LOW32(DUK_DBLUNION_GET_LOW32389,13779
#define DUK_DBLUNION_SET_UINT64(DUK_DBLUNION_SET_UINT64393,13905
#define DUK_DBLUNION_GET_UINT64(DUK_DBLUNION_GET_UINT64397,14073
#define DUK_DBLUNION_SET_UINT64(DUK_DBLUNION_SET_UINT64401,14217
#define DUK_DBLUNION_GET_UINT64(DUK_DBLUNION_GET_UINT64404,14328
#define DUK_DBLUNION_SET_INT64(DUK_DBLUNION_SET_INT64406,14400
#define DUK_DBLUNION_GET_INT64(DUK_DBLUNION_GET_INT64407,14485
#define DUK__DBLUNION_SET_NAN_FULL(DUK__DBLUNION_SET_NAN_FULL439,16220
#define DUK__DBLUNION_IS_NAN_FULL(DUK__DBLUNION_IS_NAN_FULL442,16350
#define DUK__DBLUNION_IS_NORMALIZED_NAN_FULL(DUK__DBLUNION_IS_NORMALIZED_NAN_FULL445,16586
#define DUK__DBLUNION_IS_ANYINF(DUK__DBLUNION_IS_ANYINF447,16706
#define DUK__DBLUNION_IS_POSINF(DUK__DBLUNION_IS_POSINF449,16854
#define DUK__DBLUNION_IS_NEGINF(DUK__DBLUNION_IS_NEGINF451,16961
#define DUK__DBLUNION_IS_ANYZERO(DUK__DBLUNION_IS_ANYZERO453,17068
#define DUK__DBLUNION_IS_POSZERO(DUK__DBLUNION_IS_POSZERO455,17217
#define DUK__DBLUNION_IS_NEGZERO(DUK__DBLUNION_IS_NEGZERO457,17325
#define DUK__DBLUNION_SET_NAN_FULL(DUK__DBLUNION_SET_NAN_FULL461,17496
#define DUK__DBLUNION_IS_NAN_FULL(DUK__DBLUNION_IS_NAN_FULL464,17626
#define DUK__DBLUNION_IS_NORMALIZED_NAN_FULL(DUK__DBLUNION_IS_NORMALIZED_NAN_FULL467,17862
#define DUK__DBLUNION_IS_ANYINF(DUK__DBLUNION_IS_ANYINF469,17982
#define DUK__DBLUNION_IS_POSINF(DUK__DBLUNION_IS_POSINF471,18130
#define DUK__DBLUNION_IS_NEGINF(DUK__DBLUNION_IS_NEGINF473,18237
#define DUK__DBLUNION_IS_ANYZERO(DUK__DBLUNION_IS_ANYZERO475,18344
#define DUK__DBLUNION_IS_POSZERO(DUK__DBLUNION_IS_POSZERO477,18493
#define DUK__DBLUNION_IS_NEGZERO(DUK__DBLUNION_IS_NEGZERO479,18601
#define DUK__DBLUNION_SET_NAN_FULL(DUK__DBLUNION_SET_NAN_FULL484,18795
#define DUK__DBLUNION_IS_NAN_FULL(DUK__DBLUNION_IS_NAN_FULL488,18974
#define DUK__DBLUNION_IS_NORMALIZED_NAN_FULL(DUK__DBLUNION_IS_NORMALIZED_NAN_FULL492,19177
#define DUK__DBLUNION_IS_ANYINF(DUK__DBLUNION_IS_ANYINF495,19323
#define DUK__DBLUNION_IS_POSINF(DUK__DBLUNION_IS_POSINF498,19473
#define DUK__DBLUNION_IS_NEGINF(DUK__DBLUNION_IS_NEGINF501,19606
#define DUK__DBLUNION_IS_ANYZERO(DUK__DBLUNION_IS_ANYZERO504,19739
#define DUK__DBLUNION_IS_POSZERO(DUK__DBLUNION_IS_POSZERO507,19890
#define DUK__DBLUNION_IS_NEGZERO(DUK__DBLUNION_IS_NEGZERO510,20024
#define DUK__DBLUNION_SET_NAN_NOTFULL(DUK__DBLUNION_SET_NAN_NOTFULL515,20191
#define DUK__DBLUNION_IS_NAN_NOTFULL(DUK__DBLUNION_IS_NAN_NOTFULL519,20295
#define DUK__DBLUNION_IS_NORMALIZED_NAN_NOTFULL(DUK__DBLUNION_IS_NORMALIZED_NAN_NOTFULL524,20515
#define DUK__DBLUNION_NORMALIZE_NAN_CHECK_FULL(DUK__DBLUNION_NORMALIZE_NAN_CHECK_FULL528,20655
#define DUK__DBLUNION_NORMALIZE_NAN_CHECK_NOTFULL(DUK__DBLUNION_NORMALIZE_NAN_CHECK_NOTFULL534,20813
#define DUK_DBLUNION_NORMALIZE_NAN_CHECK(DUK_DBLUNION_NORMALIZE_NAN_CHECK548,21303
#define DUK_DBLUNION_IS_NAN(DUK_DBLUNION_IS_NAN549,21392
#define DUK_DBLUNION_IS_NORMALIZED_NAN(DUK_DBLUNION_IS_NORMALIZED_NAN550,21468
#define DUK_DBLUNION_SET_NAN(DUK_DBLUNION_SET_NAN551,21555
#define DUK_DBLUNION_NORMALIZE_NAN_CHECK(DUK_DBLUNION_NORMALIZE_NAN_CHECK553,21638
#define DUK_DBLUNION_IS_NAN(DUK_DBLUNION_IS_NAN554,21730
#define DUK_DBLUNION_IS_NORMALIZED_NAN(DUK_DBLUNION_IS_NORMALIZED_NAN555,21809
#define DUK_DBLUNION_SET_NAN(DUK_DBLUNION_SET_NAN556,21899
#define DUK_DBLUNION_IS_NORMALIZED(DUK_DBLUNION_IS_NORMALIZED558,21986
#define DUK_DBLUNION_NORMALIZE_NAN_CHECK(DUK_DBLUNION_NORMALIZE_NAN_CHECK562,22185
#define DUK_DBLUNION_IS_NAN(DUK_DBLUNION_IS_NAN563,22262
#define DUK_DBLUNION_IS_NORMALIZED_NAN(DUK_DBLUNION_IS_NORMALIZED_NAN564,22365
#define DUK_DBLUNION_IS_NORMALIZED(DUK_DBLUNION_IS_NORMALIZED565,22468
#define DUK_DBLUNION_SET_NAN(DUK_DBLUNION_SET_NAN566,22560
#define DUK_DBLUNION_IS_ANYINF(DUK_DBLUNION_IS_ANYINF572,22754
#define DUK_DBLUNION_IS_POSINF(DUK_DBLUNION_IS_POSINF573,22817
#define DUK_DBLUNION_IS_NEGINF(DUK_DBLUNION_IS_NEGINF574,22880
#define DUK_DBLUNION_IS_ANYZERO(DUK_DBLUNION_IS_ANYZERO576,22944
#define DUK_DBLUNION_IS_POSZERO(DUK_DBLUNION_IS_POSZERO577,23009
#define DUK_DBLUNION_IS_NEGZERO(DUK_DBLUNION_IS_NEGZERO578,23074
#define DUK_DBLUNION_BSWAP64(DUK_DBLUNION_BSWAP64583,23263
#define DUK_DBLUNION_DOUBLE_HTON(DUK_DBLUNION_DOUBLE_HTON597,23756
#define DUK_DBLUNION_DOUBLE_HTON(DUK_DBLUNION_DOUBLE_HTON607,24126
#define DUK_DBLUNION_DOUBLE_HTON(DUK_DBLUNION_DOUBLE_HTON617,24496
#define DUK_DBLUNION_DOUBLE_NTOH(DUK_DBLUNION_DOUBLE_NTOH623,24648
#define DUK_DBLUNION_HAS_SIGNBIT(DUK_DBLUNION_HAS_SIGNBIT627,24775
#define DUK_DBLUNION_GET_SIGNBIT(DUK_DBLUNION_GET_SIGNBIT628,24886
#define DUK_DBLUNION_HAS_SIGNBIT(DUK_DBLUNION_HAS_SIGNBIT630,24966
#define DUK_DBLUNION_GET_SIGNBIT(DUK_DBLUNION_GET_SIGNBIT631,25051
#define DUK_FLTUNION_H_INCLUDEDDUK_FLTUNION_H_INCLUDED642,25324
union duk_float_union {duk_float_union646,25408
	float f;f647,25432
	duk_uint32_t ui[1];ui648,25442
	duk_uint16_t us[2];us649,25463
	duk_uint8_t uc[4];uc650,25484
typedef union duk_float_union duk_float_union;duk_float_union653,25508
#define DUK_FLT_IDX_UI0 DUK_FLT_IDX_UI0656,25617
#define DUK_FLT_IDX_US0 DUK_FLT_IDX_US0657,25646
#define DUK_FLT_IDX_US1 DUK_FLT_IDX_US1658,25675
#define DUK_FLT_IDX_UC0 DUK_FLT_IDX_UC0659,25704
#define DUK_FLT_IDX_UC1 DUK_FLT_IDX_UC1660,25733
#define DUK_FLT_IDX_UC2 DUK_FLT_IDX_UC2661,25762
#define DUK_FLT_IDX_UC3 DUK_FLT_IDX_UC3662,25791
#define DUK_FLT_IDX_UI0 DUK_FLT_IDX_UI0664,25853
#define DUK_FLT_IDX_US0 DUK_FLT_IDX_US0665,25882
#define DUK_FLT_IDX_US1 DUK_FLT_IDX_US1666,25911
#define DUK_FLT_IDX_UC0 DUK_FLT_IDX_UC0667,25940
#define DUK_FLT_IDX_UC1 DUK_FLT_IDX_UC1668,25969
#define DUK_FLT_IDX_UC2 DUK_FLT_IDX_UC2669,25998
#define DUK_FLT_IDX_UC3 DUK_FLT_IDX_UC3670,26027
#define DUK_REPLACEMENTS_H_INCLUDEDDUK_REPLACEMENTS_H_INCLUDED679,26235
DUK_INTERNAL_DECL double duk_computed_infinity;duk_computed_infinity683,26341
DUK_INTERNAL_DECL double duk_computed_nan;duk_computed_nan686,26430
#define DUK_JMPBUF_H_INCLUDEDDUK_JMPBUF_H_INCLUDED720,27370
struct duk_jmpbuf {duk_jmpbuf723,27437
	duk_small_int_t dummy;  /* unused */dummy724,27457
struct duk_jmpbuf {duk_jmpbuf727,27504
	DUK_JMPBUF_TYPE jb;jb728,27524
#define DUK_EXCEPTION_H_INCLUDEDDUK_EXCEPTION_H_INCLUDED741,27800
class duk_internal_exception {duk_internal_exception749,28121
class duk_fatal_exception : public virtual std::runtime_error {duk_fatal_exception758,28456
	duk_fatal_exception(const char *message) : std::runtime_error(message) {}duk_fatal_exception760,28529
#define DUK_FORWDECL_H_INCLUDEDDUK_FORWDECL_H_INCLUDED772,28808
typedef struct duk_jmpbuf duk_jmpbuf;duk_jmpbuf842,30114
typedef struct duk_heaphdr duk_heaphdr;duk_heaphdr846,30197
typedef struct duk_heaphdr_string duk_heaphdr_string;duk_heaphdr_string847,30237
typedef struct duk_harray duk_harray;duk_harray848,30291
typedef struct duk_hstring duk_hstring;duk_hstring849,30329
typedef struct duk_hstring_external duk_hstring_external;duk_hstring_external850,30369
typedef struct duk_hobject duk_hobject;duk_hobject851,30427
typedef struct duk_hcompfunc duk_hcompfunc;duk_hcompfunc852,30467
typedef struct duk_hnatfunc duk_hnatfunc;duk_hnatfunc853,30511
typedef struct duk_hboundfunc duk_hboundfunc;duk_hboundfunc854,30553
typedef struct duk_hthread duk_hthread;duk_hthread855,30599
typedef struct duk_hbufobj duk_hbufobj;duk_hbufobj856,30639
typedef struct duk_hdecenv duk_hdecenv;duk_hdecenv857,30679
typedef struct duk_hobjenv duk_hobjenv;duk_hobjenv858,30719
typedef struct duk_hproxy duk_hproxy;duk_hproxy859,30759
typedef struct duk_hbuffer duk_hbuffer;duk_hbuffer860,30797
typedef struct duk_hbuffer_fixed duk_hbuffer_fixed;duk_hbuffer_fixed861,30837
typedef struct duk_hbuffer_dynamic duk_hbuffer_dynamic;duk_hbuffer_dynamic862,30889
typedef struct duk_hbuffer_external duk_hbuffer_external;duk_hbuffer_external863,30945
typedef struct duk_propaccessor duk_propaccessor;duk_propaccessor865,31004
typedef union duk_propvalue duk_propvalue;duk_propvalue866,31054
typedef struct duk_propdesc duk_propdesc;duk_propdesc867,31097
typedef struct duk_heap duk_heap;duk_heap869,31140
typedef struct duk_breakpoint duk_breakpoint;duk_breakpoint870,31174
typedef struct duk_activation duk_activation;duk_activation872,31221
typedef struct duk_catcher duk_catcher;duk_catcher873,31267
typedef struct duk_ljstate duk_ljstate;duk_ljstate874,31307
typedef struct duk_strcache_entry duk_strcache_entry;duk_strcache_entry875,31347
typedef struct duk_litcache_entry duk_litcache_entry;duk_litcache_entry876,31401
typedef struct duk_strtab_entry duk_strtab_entry;duk_strtab_entry877,31455
typedef struct duk_fixedbuffer duk_fixedbuffer;duk_fixedbuffer880,31533
typedef struct duk_bitdecoder_ctx duk_bitdecoder_ctx;duk_bitdecoder_ctx883,31589
typedef struct duk_bitencoder_ctx duk_bitencoder_ctx;duk_bitencoder_ctx884,31643
typedef struct duk_bufwriter_ctx duk_bufwriter_ctx;duk_bufwriter_ctx885,31697
typedef struct duk_token duk_token;duk_token887,31750
typedef struct duk_re_token duk_re_token;duk_re_token888,31786
typedef struct duk_lexer_point duk_lexer_point;duk_lexer_point889,31828
typedef struct duk_lexer_ctx duk_lexer_ctx;duk_lexer_ctx890,31876
typedef struct duk_lexer_codepoint duk_lexer_codepoint;duk_lexer_codepoint891,31920
typedef struct duk_compiler_instr duk_compiler_instr;duk_compiler_instr893,31977
typedef struct duk_compiler_func duk_compiler_func;duk_compiler_func894,32031
typedef struct duk_compiler_ctx duk_compiler_ctx;duk_compiler_ctx895,32083
typedef struct duk_re_matcher_ctx duk_re_matcher_ctx;duk_re_matcher_ctx897,32134
typedef struct duk_re_compiler_ctx duk_re_compiler_ctx;duk_re_compiler_ctx898,32188
#define DUK_TVAL_H_INCLUDEDDUK_TVAL_H_INCLUDED922,33070
typedef union duk_double_union duk_tval;duk_tval937,33472
typedef struct {__anonffb0efc10108938,33513
	duk_uint16_t a;a939,33530
	duk_uint16_t b;b940,33547
	duk_uint16_t c;c941,33564
	duk_uint16_t d;d942,33581
} duk_tval_unused;duk_tval_unused943,33598
#define DUK_TAG_NORMALIZED_NAN DUK_TAG_NORMALIZED_NAN946,33629
#define DUK_TAG_MIN DUK_TAG_MIN948,33771
#define DUK_TAG_FASTINT DUK_TAG_FASTINT950,33843
#define DUK_TAG_UNUSED DUK_TAG_UNUSED952,33922
#define DUK_TAG_UNDEFINED DUK_TAG_UNDEFINED953,34005
#define DUK_TAG_NULL DUK_TAG_NULL954,34071
#define DUK_TAG_BOOLEAN DUK_TAG_BOOLEAN955,34137
#define DUK_TAG_POINTER DUK_TAG_POINTER957,34291
#define DUK_TAG_LIGHTFUNC DUK_TAG_LIGHTFUNC958,34358
#define DUK_TAG_STRING DUK_TAG_STRING959,34425
#define DUK_TAG_OBJECT DUK_TAG_OBJECT960,34499
#define DUK_TAG_BUFFER DUK_TAG_BUFFER961,34573
#define DUK_TAG_MAX DUK_TAG_MAX962,34647
#define DUK_XTAG_BOOLEAN_FALSE DUK_XTAG_BOOLEAN_FALSE965,34713
#define DUK_XTAG_BOOLEAN_TRUE DUK_XTAG_BOOLEAN_TRUE966,34760
#define DUK_TVAL_IS_VALID_TAG(DUK_TVAL_IS_VALID_TAG968,34808
#define DUK_TVAL_UNUSED_INITIALIZER(DUK_TVAL_UNUSED_INITIALIZER972,34995
#define DUK__TVAL_SET_TAGGEDPOINTER(DUK__TVAL_SET_TAGGEDPOINTER978,35286
#define DUK__TVAL_SET_TAGGEDPOINTER(DUK__TVAL_SET_TAGGEDPOINTER982,35471
#define DUK__TVAL_SET_TAGGEDPOINTER(DUK__TVAL_SET_TAGGEDPOINTER987,35680
#define DUK__TVAL_SET_LIGHTFUNC(DUK__TVAL_SET_LIGHTFUNC998,36108
#define DUK__TVAL_SET_LIGHTFUNC(DUK__TVAL_SET_LIGHTFUNC1004,36400
#define DUK__TVAL_SET_LIGHTFUNC(DUK__TVAL_SET_LIGHTFUNC1011,36724
#define DUK__TVAL_SET_I48(DUK__TVAL_SET_I481022,37164
#define DUK__TVAL_SET_U32(DUK__TVAL_SET_U321028,37438
#define DUK__TVAL_SET_I48(DUK__TVAL_SET_I481035,37670
#define DUK__TVAL_SET_U32(DUK__TVAL_SET_U321038,37863
#define DUK__TVAL_SET_I32(DUK__TVAL_SET_I321044,38093
#define DUK__TVAL_GET_FASTINT(DUK__TVAL_GET_FASTINT1051,38324
#define DUK__TVAL_GET_FASTINT(DUK__TVAL_GET_FASTINT1053,38497
#define DUK__TVAL_GET_FASTINT_U32(DUK__TVAL_GET_FASTINT_U321055,38603
#define DUK__TVAL_GET_FASTINT_I32(DUK__TVAL_GET_FASTINT_I321056,38670
#define DUK_TVAL_SET_UNDEFINED(DUK_TVAL_SET_UNDEFINED1059,38782
#define DUK_TVAL_SET_UNUSED(DUK_TVAL_SET_UNUSED1062,38904
#define DUK_TVAL_SET_NULL(DUK_TVAL_SET_NULL1065,39020
#define DUK_TVAL_SET_BOOLEAN(DUK_TVAL_SET_BOOLEAN1069,39133
#define DUK_TVAL_SET_NAN(DUK_TVAL_SET_NAN1071,39276
#define DUK_TVAL_SET_DOUBLE(DUK_TVAL_SET_DOUBLE1075,39455
#define DUK_TVAL_SET_I48(DUK_TVAL_SET_I481081,39661
#define DUK_TVAL_SET_I32(DUK_TVAL_SET_I321082,39735
#define DUK_TVAL_SET_U32(DUK_TVAL_SET_U321083,39809
#define DUK_TVAL_SET_NUMBER_CHKFAST_FAST(DUK_TVAL_SET_NUMBER_CHKFAST_FAST1084,39883
#define DUK_TVAL_SET_NUMBER_CHKFAST_SLOW(DUK_TVAL_SET_NUMBER_CHKFAST_SLOW1085,39975
#define DUK_TVAL_SET_NUMBER(DUK_TVAL_SET_NUMBER1086,40067
#define DUK_TVAL_CHKFAST_INPLACE_FAST(DUK_TVAL_CHKFAST_INPLACE_FAST1087,40143
#define DUK_TVAL_CHKFAST_INPLACE_SLOW(DUK_TVAL_CHKFAST_INPLACE_SLOW1096,40419
#define DUK_TVAL_SET_DOUBLE(DUK_TVAL_SET_DOUBLE1106,40724
#define DUK_TVAL_SET_I48(DUK_TVAL_SET_I481112,40930
#define DUK_TVAL_SET_I32(DUK_TVAL_SET_I321113,41052
#define DUK_TVAL_SET_U32(DUK_TVAL_SET_U321114,41143
#define DUK_TVAL_SET_NUMBER_CHKFAST_FAST(DUK_TVAL_SET_NUMBER_CHKFAST_FAST1115,41234
#define DUK_TVAL_SET_NUMBER_CHKFAST_SLOW(DUK_TVAL_SET_NUMBER_CHKFAST_SLOW1116,41315
#define DUK_TVAL_SET_NUMBER(DUK_TVAL_SET_NUMBER1117,41396
#define DUK_TVAL_CHKFAST_INPLACE_FAST(DUK_TVAL_CHKFAST_INPLACE_FAST1118,41472
#define DUK_TVAL_CHKFAST_INPLACE_SLOW(DUK_TVAL_CHKFAST_INPLACE_SLOW1119,41532
#define DUK_TVAL_SET_FASTINT(DUK_TVAL_SET_FASTINT1122,41623
#define DUK_TVAL_SET_LIGHTFUNC(DUK_TVAL_SET_LIGHTFUNC1124,41710
#define DUK_TVAL_SET_STRING(DUK_TVAL_SET_STRING1125,41800
#define DUK_TVAL_SET_OBJECT(DUK_TVAL_SET_OBJECT1126,41900
#define DUK_TVAL_SET_BUFFER(DUK_TVAL_SET_BUFFER1127,42000
#define DUK_TVAL_SET_POINTER(DUK_TVAL_SET_POINTER1128,42100
#define DUK_TVAL_SET_TVAL(DUK_TVAL_SET_TVAL1130,42202
#define DUK_TVAL_GET_BOOLEAN(DUK_TVAL_GET_BOOLEAN1133,42293
#define DUK_TVAL_GET_DOUBLE(DUK_TVAL_GET_DOUBLE1135,42414
#define DUK_TVAL_GET_FASTINT(DUK_TVAL_GET_FASTINT1136,42469
#define DUK_TVAL_GET_FASTINT_U32(DUK_TVAL_GET_FASTINT_U321137,42542
#define DUK_TVAL_GET_FASTINT_I32(DUK_TVAL_GET_FASTINT_I321138,42619
#define DUK_TVAL_GET_NUMBER(DUK_TVAL_GET_NUMBER1139,42696
#define DUK_TVAL_GET_NUMBER(DUK_TVAL_GET_NUMBER1141,42780
#define DUK_TVAL_GET_DOUBLE(DUK_TVAL_GET_DOUBLE1142,42835
#define DUK_TVAL_GET_LIGHTFUNC(DUK_TVAL_GET_LIGHTFUNC1144,42897
#define DUK_TVAL_GET_LIGHTFUNC_FUNCPTR(DUK_TVAL_GET_LIGHTFUNC_FUNCPTR1148,43085
#define DUK_TVAL_GET_LIGHTFUNC_FLAGS(DUK_TVAL_GET_LIGHTFUNC_FLAGS1149,43177
#define DUK_TVAL_GET_STRING(DUK_TVAL_GET_STRING1150,43282
#define DUK_TVAL_GET_OBJECT(DUK_TVAL_GET_OBJECT1151,43371
#define DUK_TVAL_GET_BUFFER(DUK_TVAL_GET_BUFFER1152,43460
#define DUK_TVAL_GET_POINTER(DUK_TVAL_GET_POINTER1153,43549
#define DUK_TVAL_GET_HEAPHDR(DUK_TVAL_GET_HEAPHDR1154,43631
#define DUK_TVAL_GET_TAG(DUK_TVAL_GET_TAG1157,43736
#define DUK_TVAL_IS_UNDEFINED(DUK_TVAL_IS_UNDEFINED1159,43829
#define DUK_TVAL_IS_UNUSED(DUK_TVAL_IS_UNUSED1160,43920
#define DUK_TVAL_IS_NULL(DUK_TVAL_IS_NULL1161,44008
#define DUK_TVAL_IS_BOOLEAN(DUK_TVAL_IS_BOOLEAN1162,44094
#define DUK_TVAL_IS_BOOLEAN_TRUE(DUK_TVAL_IS_BOOLEAN_TRUE1163,44183
#define DUK_TVAL_IS_BOOLEAN_FALSE(DUK_TVAL_IS_BOOLEAN_FALSE1164,44281
#define DUK_TVAL_IS_LIGHTFUNC(DUK_TVAL_IS_LIGHTFUNC1165,44380
#define DUK_TVAL_IS_STRING(DUK_TVAL_IS_STRING1166,44471
#define DUK_TVAL_IS_OBJECT(DUK_TVAL_IS_OBJECT1167,44559
#define DUK_TVAL_IS_BUFFER(DUK_TVAL_IS_BUFFER1168,44647
#define DUK_TVAL_IS_POINTER(DUK_TVAL_IS_POINTER1169,44735
#define DUK_TVAL_IS_DOUBLE(DUK_TVAL_IS_DOUBLE1172,44879
#define DUK_TVAL_IS_FASTINT(DUK_TVAL_IS_FASTINT1173,44961
#define DUK_TVAL_IS_NUMBER(DUK_TVAL_IS_NUMBER1174,45050
#define DUK_TVAL_IS_NUMBER(DUK_TVAL_IS_NUMBER1176,45138
#define DUK_TVAL_IS_DOUBLE(DUK_TVAL_IS_DOUBLE1177,45220
#define DUK_TVAL_IS_HEAP_ALLOCATED(DUK_TVAL_IS_HEAP_ALLOCATED1181,45369
typedef struct duk_tval_struct duk_tval;duk_tval1202,46126
struct duk_tval_struct {duk_tval_struct1204,46168
	duk_small_uint_t t;t1205,46193
	duk_small_uint_t v_extra;v_extra1206,46214
	union {__anonffb0efc1020a1207,46241
		duk_double_t d;d1208,46250
		duk_small_int_t i;i1209,46268
		duk_int64_t fi;  /* if present, forces 16-byte duk_tval */fi1211,46318
		void *voidptr;voidptr1213,46386
		duk_hstring *hstring;hstring1214,46403
		duk_hobject *hobject;hobject1215,46427
		duk_hcompfunc *hcompfunc;hcompfunc1216,46451
		duk_hnatfunc *hnatfunc;hnatfunc1217,46479
		duk_hthread *hthread;hthread1218,46505
		duk_hbuffer *hbuffer;hbuffer1219,46529
		duk_heaphdr *heaphdr;heaphdr1220,46553
		duk_c_function lightfunc;lightfunc1221,46577
	} v;v1222,46605
typedef struct {__anonffb0efc103081225,46615
	duk_small_uint_t t;t1226,46632
	duk_small_uint_t v_extra;v_extra1227,46653
	duk_double_t d;d1233,46937
} duk_tval_unused;duk_tval_unused1234,46954
#define DUK_TVAL_UNUSED_INITIALIZER(DUK_TVAL_UNUSED_INITIALIZER1236,46974
#define DUK_TAG_MIN DUK_TAG_MIN1239,47043
#define DUK_TAG_NUMBER DUK_TAG_NUMBER1240,47083
#define DUK_TAG_FASTINT DUK_TAG_FASTINT1242,47211
#define DUK_TAG_UNDEFINED DUK_TAG_UNDEFINED1244,47258
#define DUK_TAG_NULL DUK_TAG_NULL1245,47298
#define DUK_TAG_BOOLEAN DUK_TAG_BOOLEAN1246,47338
#define DUK_TAG_POINTER DUK_TAG_POINTER1247,47378
#define DUK_TAG_LIGHTFUNC DUK_TAG_LIGHTFUNC1248,47418
#define DUK_TAG_UNUSED DUK_TAG_UNUSED1249,47458
#define DUK_TAG_STRING DUK_TAG_STRING1250,47536
#define DUK_TAG_OBJECT DUK_TAG_OBJECT1251,47624
#define DUK_TAG_BUFFER DUK_TAG_BUFFER1252,47664
#define DUK_TAG_MAX DUK_TAG_MAX1253,47705
#define DUK_TVAL_IS_VALID_TAG(DUK_TVAL_IS_VALID_TAG1255,47747
#define DUK_TVAL_SET_UNDEFINED(DUK_TVAL_SET_UNDEFINED1265,48173
#define DUK_TVAL_SET_UNUSED(DUK_TVAL_SET_UNUSED1271,48309
#define DUK_TVAL_SET_NULL(DUK_TVAL_SET_NULL1277,48439
#define DUK_TVAL_SET_BOOLEAN(DUK_TVAL_SET_BOOLEAN1283,48565
#define DUK_TVAL_SET_DOUBLE(DUK_TVAL_SET_DOUBLE1291,48774
#define DUK_TVAL_SET_I48(DUK_TVAL_SET_I481300,49076
#define DUK_TVAL_SET_U32(DUK_TVAL_SET_U321306,49234
#define DUK_TVAL_SET_I32(DUK_TVAL_SET_I321312,49406
#define DUK_TVAL_SET_NUMBER_CHKFAST_FAST(DUK_TVAL_SET_NUMBER_CHKFAST_FAST1318,49578
#define DUK_TVAL_SET_NUMBER_CHKFAST_SLOW(DUK_TVAL_SET_NUMBER_CHKFAST_SLOW1320,49672
#define DUK_TVAL_SET_NUMBER(DUK_TVAL_SET_NUMBER1322,49766
#define DUK_TVAL_CHKFAST_INPLACE_FAST(DUK_TVAL_CHKFAST_INPLACE_FAST1324,49838
#define DUK_TVAL_CHKFAST_INPLACE_SLOW(DUK_TVAL_CHKFAST_INPLACE_SLOW1333,50114
#define DUK_TVAL_SET_DOUBLE(DUK_TVAL_SET_DOUBLE1343,50419
#define DUK_TVAL_SET_I48(DUK_TVAL_SET_I481345,50487
#define DUK_TVAL_SET_U32(DUK_TVAL_SET_U321347,50602
#define DUK_TVAL_SET_I32(DUK_TVAL_SET_I321349,50686
#define DUK_TVAL_SET_NUMBER(DUK_TVAL_SET_NUMBER1351,50770
#define DUK_TVAL_SET_NUMBER_CHKFAST_FAST(DUK_TVAL_SET_NUMBER_CHKFAST_FAST1360,51072
#define DUK_TVAL_SET_NUMBER_CHKFAST_SLOW(DUK_TVAL_SET_NUMBER_CHKFAST_SLOW1362,51153
#define DUK_TVAL_CHKFAST_INPLACE_FAST(DUK_TVAL_CHKFAST_INPLACE_FAST1364,51234
#define DUK_TVAL_CHKFAST_INPLACE_SLOW(DUK_TVAL_CHKFAST_INPLACE_SLOW1365,51294
#define DUK_TVAL_SET_FASTINT(DUK_TVAL_SET_FASTINT1368,51385
#define DUK_TVAL_SET_POINTER(DUK_TVAL_SET_POINTER1371,51465
#define DUK_TVAL_SET_LIGHTFUNC(DUK_TVAL_SET_LIGHTFUNC1378,51635
#define DUK_TVAL_SET_STRING(DUK_TVAL_SET_STRING1386,51862
#define DUK_TVAL_SET_OBJECT(DUK_TVAL_SET_OBJECT1393,52030
#define DUK_TVAL_SET_BUFFER(DUK_TVAL_SET_BUFFER1400,52198
#define DUK_TVAL_SET_NAN(DUK_TVAL_SET_NAN1407,52366
#define DUK_TVAL_SET_TVAL(DUK_TVAL_SET_TVAL1415,52605
#define DUK_TVAL_GET_BOOLEAN(DUK_TVAL_GET_BOOLEAN1418,52694
#define DUK_TVAL_GET_DOUBLE(DUK_TVAL_GET_DOUBLE1420,52797
#define DUK_TVAL_GET_FASTINT(DUK_TVAL_GET_FASTINT1421,52852
#define DUK_TVAL_GET_FASTINT_U32(DUK_TVAL_GET_FASTINT_U321422,52908
#define DUK_TVAL_GET_FASTINT_I32(DUK_TVAL_GET_FASTINT_I321423,52981
#define DUK_TVAL_GET_NUMBER(DUK_TVAL_GET_NUMBER1431,53421
#define DUK_TVAL_GET_NUMBER(DUK_TVAL_GET_NUMBER1436,53676
#define DUK_TVAL_GET_DOUBLE(DUK_TVAL_GET_DOUBLE1437,53731
#define DUK_TVAL_GET_POINTER(DUK_TVAL_GET_POINTER1439,53816
#define DUK_TVAL_GET_LIGHTFUNC(DUK_TVAL_GET_LIGHTFUNC1440,53877
#define DUK_TVAL_GET_LIGHTFUNC_FUNCPTR(DUK_TVAL_GET_LIGHTFUNC_FUNCPTR1444,54032
#define DUK_TVAL_GET_LIGHTFUNC_FLAGS(DUK_TVAL_GET_LIGHTFUNC_FLAGS1445,54095
#define DUK_TVAL_GET_STRING(DUK_TVAL_GET_STRING1446,54175
#define DUK_TVAL_GET_OBJECT(DUK_TVAL_GET_OBJECT1447,54236
#define DUK_TVAL_GET_BUFFER(DUK_TVAL_GET_BUFFER1448,54297
#define DUK_TVAL_GET_HEAPHDR(DUK_TVAL_GET_HEAPHDR1449,54358
#define DUK_TVAL_GET_TAG(DUK_TVAL_GET_TAG1452,54435
#define DUK_TVAL_IS_UNDEFINED(DUK_TVAL_IS_UNDEFINED1453,54488
#define DUK_TVAL_IS_UNUSED(DUK_TVAL_IS_UNUSED1454,54562
#define DUK_TVAL_IS_NULL(DUK_TVAL_IS_NULL1455,54633
#define DUK_TVAL_IS_BOOLEAN(DUK_TVAL_IS_BOOLEAN1456,54702
#define DUK_TVAL_IS_BOOLEAN_TRUE(DUK_TVAL_IS_BOOLEAN_TRUE1457,54774
#define DUK_TVAL_IS_BOOLEAN_FALSE(DUK_TVAL_IS_BOOLEAN_FALSE1458,54868
#define DUK_TVAL_IS_DOUBLE(DUK_TVAL_IS_DOUBLE1460,54991
#define DUK_TVAL_IS_FASTINT(DUK_TVAL_IS_FASTINT1461,55062
#define DUK_TVAL_IS_NUMBER(DUK_TVAL_IS_NUMBER1462,55134
#define DUK_TVAL_IS_NUMBER(DUK_TVAL_IS_NUMBER1465,55287
#define DUK_TVAL_IS_DOUBLE(DUK_TVAL_IS_DOUBLE1466,55358
#define DUK_TVAL_IS_POINTER(DUK_TVAL_IS_POINTER1468,55456
#define DUK_TVAL_IS_LIGHTFUNC(DUK_TVAL_IS_LIGHTFUNC1469,55528
#define DUK_TVAL_IS_STRING(DUK_TVAL_IS_STRING1470,55602
#define DUK_TVAL_IS_OBJECT(DUK_TVAL_IS_OBJECT1471,55673
#define DUK_TVAL_IS_BUFFER(DUK_TVAL_IS_BUFFER1472,55744
#define DUK_TVAL_IS_HEAP_ALLOCATED(DUK_TVAL_IS_HEAP_ALLOCATED1482,56144
#define DUK_TVAL_SET_BOOLEAN_TRUE(DUK_TVAL_SET_BOOLEAN_TRUE1497,56504
#define DUK_TVAL_SET_BOOLEAN_FALSE(DUK_TVAL_SET_BOOLEAN_FALSE1498,56579
#define DUK_TVAL_STRING_IS_SYMBOL(DUK_TVAL_STRING_IS_SYMBOL1500,56655
#define DUK_LFUNC_FLAGS_GET_MAGIC(DUK_LFUNC_FLAGS_GET_MAGIC1507,56922
#define DUK_LFUNC_FLAGS_GET_LENGTH(DUK_LFUNC_FLAGS_GET_LENGTH1509,57033
#define DUK_LFUNC_FLAGS_GET_NARGS(DUK_LFUNC_FLAGS_GET_NARGS1511,57109
#define DUK_LFUNC_FLAGS_PACK(DUK_LFUNC_FLAGS_PACK1513,57177
#define DUK_LFUNC_NARGS_VARARGS DUK_LFUNC_NARGS_VARARGS1516,57304
#define DUK_LFUNC_NARGS_MIN DUK_LFUNC_NARGS_MIN1517,57376
#define DUK_LFUNC_NARGS_MAX DUK_LFUNC_NARGS_MAX1518,57425
#define DUK_LFUNC_LENGTH_MIN DUK_LFUNC_LENGTH_MIN1519,57508
#define DUK_LFUNC_LENGTH_MAX DUK_LFUNC_LENGTH_MAX1520,57557
#define DUK_LFUNC_MAGIC_MIN DUK_LFUNC_MAGIC_MIN1521,57606
#define DUK_LFUNC_MAGIC_MAX DUK_LFUNC_MAGIC_MAX1522,57658
#define DUK_FASTINT_MIN DUK_FASTINT_MIN1526,57765
#define DUK_FASTINT_MAX DUK_FASTINT_MAX1527,57835
#define DUK_FASTINT_BITS DUK_FASTINT_BITS1528,57904
#define DUK_TVAL_ASSERT_VALID(DUK_TVAL_ASSERT_VALID1536,58216
#define DUK_TVAL_ASSERT_VALID(DUK_TVAL_ASSERT_VALID1538,58303
#define DUK_BUILTINS_H_INCLUDEDDUK_BUILTINS_H_INCLUDED1549,58557
#define DUK_STRIDX_UC_UNDEFINED DUK_STRIDX_UC_UNDEFINED1554,58726
#define DUK_HEAP_STRING_UC_UNDEFINED(DUK_HEAP_STRING_UC_UNDEFINED1555,58845
#define DUK_HTHREAD_STRING_UC_UNDEFINED(DUK_HTHREAD_STRING_UC_UNDEFINED1556,58967
#define DUK_STRIDX_UC_NULL DUK_STRIDX_UC_NULL1557,59091
#define DUK_HEAP_STRING_UC_NULL(DUK_HEAP_STRING_UC_NULL1558,59205
#define DUK_HTHREAD_STRING_UC_NULL(DUK_HTHREAD_STRING_UC_NULL1559,59322
#define DUK_STRIDX_UC_SYMBOL DUK_STRIDX_UC_SYMBOL1560,59441
#define DUK_HEAP_STRING_UC_SYMBOL(DUK_HEAP_STRING_UC_SYMBOL1561,59557
#define DUK_HTHREAD_STRING_UC_SYMBOL(DUK_HTHREAD_STRING_UC_SYMBOL1562,59676
#define DUK_STRIDX_UC_ARGUMENTS DUK_STRIDX_UC_ARGUMENTS1563,59797
#define DUK_HEAP_STRING_UC_ARGUMENTS(DUK_HEAP_STRING_UC_ARGUMENTS1564,59916
#define DUK_HTHREAD_STRING_UC_ARGUMENTS(DUK_HTHREAD_STRING_UC_ARGUMENTS1565,60038
#define DUK_STRIDX_UC_OBJECT DUK_STRIDX_UC_OBJECT1566,60162
#define DUK_HEAP_STRING_UC_OBJECT(DUK_HEAP_STRING_UC_OBJECT1567,60278
#define DUK_HTHREAD_STRING_UC_OBJECT(DUK_HTHREAD_STRING_UC_OBJECT1568,60397
#define DUK_STRIDX_UC_FUNCTION DUK_STRIDX_UC_FUNCTION1569,60518
#define DUK_HEAP_STRING_UC_FUNCTION(DUK_HEAP_STRING_UC_FUNCTION1570,60636
#define DUK_HTHREAD_STRING_UC_FUNCTION(DUK_HTHREAD_STRING_UC_FUNCTION1571,60757
#define DUK_STRIDX_UC_ARRAY DUK_STRIDX_UC_ARRAY1572,60880
#define DUK_HEAP_STRING_UC_ARRAY(DUK_HEAP_STRING_UC_ARRAY1573,60995
#define DUK_HTHREAD_STRING_UC_ARRAY(DUK_HTHREAD_STRING_UC_ARRAY1574,61113
#define DUK_STRIDX_UC_STRING DUK_STRIDX_UC_STRING1575,61233
#define DUK_HEAP_STRING_UC_STRING(DUK_HEAP_STRING_UC_STRING1576,61349
#define DUK_HTHREAD_STRING_UC_STRING(DUK_HTHREAD_STRING_UC_STRING1577,61468
#define DUK_STRIDX_UC_BOOLEAN DUK_STRIDX_UC_BOOLEAN1578,61589
#define DUK_HEAP_STRING_UC_BOOLEAN(DUK_HEAP_STRING_UC_BOOLEAN1579,61706
#define DUK_HTHREAD_STRING_UC_BOOLEAN(DUK_HTHREAD_STRING_UC_BOOLEAN1580,61826
#define DUK_STRIDX_UC_NUMBER DUK_STRIDX_UC_NUMBER1581,61948
#define DUK_HEAP_STRING_UC_NUMBER(DUK_HEAP_STRING_UC_NUMBER1582,62064
#define DUK_HTHREAD_STRING_UC_NUMBER(DUK_HTHREAD_STRING_UC_NUMBER1583,62183
#define DUK_STRIDX_UC_DATE DUK_STRIDX_UC_DATE1584,62304
#define DUK_HEAP_STRING_UC_DATE(DUK_HEAP_STRING_UC_DATE1585,62418
#define DUK_HTHREAD_STRING_UC_DATE(DUK_HTHREAD_STRING_UC_DATE1586,62535
#define DUK_STRIDX_REG_EXP DUK_STRIDX_REG_EXP1587,62654
#define DUK_HEAP_STRING_REG_EXP(DUK_HEAP_STRING_REG_EXP1588,62770
#define DUK_HTHREAD_STRING_REG_EXP(DUK_HTHREAD_STRING_REG_EXP1589,62887
#define DUK_STRIDX_UC_ERROR DUK_STRIDX_UC_ERROR1590,63006
#define DUK_HEAP_STRING_UC_ERROR(DUK_HEAP_STRING_UC_ERROR1591,63121
#define DUK_HTHREAD_STRING_UC_ERROR(DUK_HTHREAD_STRING_UC_ERROR1592,63239
#define DUK_STRIDX_MATH DUK_STRIDX_MATH1593,63359
#define DUK_HEAP_STRING_MATH(DUK_HEAP_STRING_MATH1594,63473
#define DUK_HTHREAD_STRING_MATH(DUK_HTHREAD_STRING_MATH1595,63587
#define DUK_STRIDX_JSON DUK_STRIDX_JSON1596,63703
#define DUK_HEAP_STRING_JSON(DUK_HEAP_STRING_JSON1597,63817
#define DUK_HTHREAD_STRING_JSON(DUK_HTHREAD_STRING_JSON1598,63931
#define DUK_STRIDX_EMPTY_STRING DUK_STRIDX_EMPTY_STRING1599,64047
#define DUK_HEAP_STRING_EMPTY_STRING(DUK_HEAP_STRING_EMPTY_STRING1600,64157
#define DUK_HTHREAD_STRING_EMPTY_STRING(DUK_HTHREAD_STRING_EMPTY_STRING1601,64279
#define DUK_STRIDX_ARRAY_BUFFER DUK_STRIDX_ARRAY_BUFFER1602,64403
#define DUK_HEAP_STRING_ARRAY_BUFFER(DUK_HEAP_STRING_ARRAY_BUFFER1603,64524
#define DUK_HTHREAD_STRING_ARRAY_BUFFER(DUK_HTHREAD_STRING_ARRAY_BUFFER1604,64646
#define DUK_STRIDX_DATA_VIEW DUK_STRIDX_DATA_VIEW1605,64770
#define DUK_HEAP_STRING_DATA_VIEW(DUK_HEAP_STRING_DATA_VIEW1606,64888
#define DUK_HTHREAD_STRING_DATA_VIEW(DUK_HTHREAD_STRING_DATA_VIEW1607,65007
#define DUK_STRIDX_INT8_ARRAY DUK_STRIDX_INT8_ARRAY1608,65128
#define DUK_HEAP_STRING_INT8_ARRAY(DUK_HEAP_STRING_INT8_ARRAY1609,65247
#define DUK_HTHREAD_STRING_INT8_ARRAY(DUK_HTHREAD_STRING_INT8_ARRAY1610,65367
#define DUK_STRIDX_UINT8_ARRAY DUK_STRIDX_UINT8_ARRAY1611,65489
#define DUK_HEAP_STRING_UINT8_ARRAY(DUK_HEAP_STRING_UINT8_ARRAY1612,65609
#define DUK_HTHREAD_STRING_UINT8_ARRAY(DUK_HTHREAD_STRING_UINT8_ARRAY1613,65730
#define DUK_STRIDX_UINT8_CLAMPED_ARRAY DUK_STRIDX_UINT8_CLAMPED_ARRAY1614,65853
#define DUK_HEAP_STRING_UINT8_CLAMPED_ARRAY(DUK_HEAP_STRING_UINT8_CLAMPED_ARRAY1615,65980
#define DUK_HTHREAD_STRING_UINT8_CLAMPED_ARRAY(DUK_HTHREAD_STRING_UINT8_CLAMPED_ARRAY1616,66109
#define DUK_STRIDX_INT16_ARRAY DUK_STRIDX_INT16_ARRAY1617,66240
#define DUK_HEAP_STRING_INT16_ARRAY(DUK_HEAP_STRING_INT16_ARRAY1618,66360
#define DUK_HTHREAD_STRING_INT16_ARRAY(DUK_HTHREAD_STRING_INT16_ARRAY1619,66481
#define DUK_STRIDX_UINT16_ARRAY DUK_STRIDX_UINT16_ARRAY1620,66604
#define DUK_HEAP_STRING_UINT16_ARRAY(DUK_HEAP_STRING_UINT16_ARRAY1621,66725
#define DUK_HTHREAD_STRING_UINT16_ARRAY(DUK_HTHREAD_STRING_UINT16_ARRAY1622,66847
#define DUK_STRIDX_INT32_ARRAY DUK_STRIDX_INT32_ARRAY1623,66971
#define DUK_HEAP_STRING_INT32_ARRAY(DUK_HEAP_STRING_INT32_ARRAY1624,67091
#define DUK_HTHREAD_STRING_INT32_ARRAY(DUK_HTHREAD_STRING_INT32_ARRAY1625,67212
#define DUK_STRIDX_UINT32_ARRAY DUK_STRIDX_UINT32_ARRAY1626,67335
#define DUK_HEAP_STRING_UINT32_ARRAY(DUK_HEAP_STRING_UINT32_ARRAY1627,67456
#define DUK_HTHREAD_STRING_UINT32_ARRAY(DUK_HTHREAD_STRING_UINT32_ARRAY1628,67578
#define DUK_STRIDX_FLOAT32_ARRAY DUK_STRIDX_FLOAT32_ARRAY1629,67702
#define DUK_HEAP_STRING_FLOAT32_ARRAY(DUK_HEAP_STRING_FLOAT32_ARRAY1630,67824
#define DUK_HTHREAD_STRING_FLOAT32_ARRAY(DUK_HTHREAD_STRING_FLOAT32_ARRAY1631,67947
#define DUK_STRIDX_FLOAT64_ARRAY DUK_STRIDX_FLOAT64_ARRAY1632,68072
#define DUK_HEAP_STRING_FLOAT64_ARRAY(DUK_HEAP_STRING_FLOAT64_ARRAY1633,68194
#define DUK_HTHREAD_STRING_FLOAT64_ARRAY(DUK_HTHREAD_STRING_FLOAT64_ARRAY1634,68317
#define DUK_STRIDX_GLOBAL DUK_STRIDX_GLOBAL1635,68442
#define DUK_HEAP_STRING_GLOBAL(DUK_HEAP_STRING_GLOBAL1636,68558
#define DUK_HTHREAD_STRING_GLOBAL(DUK_HTHREAD_STRING_GLOBAL1637,68674
#define DUK_STRIDX_OBJ_ENV DUK_STRIDX_OBJ_ENV1638,68792
#define DUK_HEAP_STRING_OBJ_ENV(DUK_HEAP_STRING_OBJ_ENV1639,68908
#define DUK_HTHREAD_STRING_OBJ_ENV(DUK_HTHREAD_STRING_OBJ_ENV1640,69025
#define DUK_STRIDX_DEC_ENV DUK_STRIDX_DEC_ENV1641,69144
#define DUK_HEAP_STRING_DEC_ENV(DUK_HEAP_STRING_DEC_ENV1642,69260
#define DUK_HTHREAD_STRING_DEC_ENV(DUK_HTHREAD_STRING_DEC_ENV1643,69377
#define DUK_STRIDX_UC_BUFFER DUK_STRIDX_UC_BUFFER1644,69496
#define DUK_HEAP_STRING_UC_BUFFER(DUK_HEAP_STRING_UC_BUFFER1645,69612
#define DUK_HTHREAD_STRING_UC_BUFFER(DUK_HTHREAD_STRING_UC_BUFFER1646,69731
#define DUK_STRIDX_UC_POINTER DUK_STRIDX_UC_POINTER1647,69852
#define DUK_HEAP_STRING_UC_POINTER(DUK_HEAP_STRING_UC_POINTER1648,69969
#define DUK_HTHREAD_STRING_UC_POINTER(DUK_HTHREAD_STRING_UC_POINTER1649,70089
#define DUK_STRIDX_UC_THREAD DUK_STRIDX_UC_THREAD1650,70211
#define DUK_HEAP_STRING_UC_THREAD(DUK_HEAP_STRING_UC_THREAD1651,70327
#define DUK_HTHREAD_STRING_UC_THREAD(DUK_HTHREAD_STRING_UC_THREAD1652,70446
#define DUK_STRIDX_EVAL DUK_STRIDX_EVAL1653,70567
#define DUK_HEAP_STRING_EVAL(DUK_HEAP_STRING_EVAL1654,70681
#define DUK_HTHREAD_STRING_EVAL(DUK_HTHREAD_STRING_EVAL1655,70795
#define DUK_STRIDX_VALUE DUK_STRIDX_VALUE1656,70911
#define DUK_HEAP_STRING_VALUE(DUK_HEAP_STRING_VALUE1657,71026
#define DUK_HTHREAD_STRING_VALUE(DUK_HTHREAD_STRING_VALUE1658,71141
#define DUK_STRIDX_WRITABLE DUK_STRIDX_WRITABLE1659,71258
#define DUK_HEAP_STRING_WRITABLE(DUK_HEAP_STRING_WRITABLE1660,71376
#define DUK_HTHREAD_STRING_WRITABLE(DUK_HTHREAD_STRING_WRITABLE1661,71494
#define DUK_STRIDX_CONFIGURABLE DUK_STRIDX_CONFIGURABLE1662,71614
#define DUK_HEAP_STRING_CONFIGURABLE(DUK_HEAP_STRING_CONFIGURABLE1663,71736
#define DUK_HTHREAD_STRING_CONFIGURABLE(DUK_HTHREAD_STRING_CONFIGURABLE1664,71858
#define DUK_STRIDX_ENUMERABLE DUK_STRIDX_ENUMERABLE1665,71982
#define DUK_HEAP_STRING_ENUMERABLE(DUK_HEAP_STRING_ENUMERABLE1666,72102
#define DUK_HTHREAD_STRING_ENUMERABLE(DUK_HTHREAD_STRING_ENUMERABLE1667,72222
#define DUK_STRIDX_JOIN DUK_STRIDX_JOIN1668,72344
#define DUK_HEAP_STRING_JOIN(DUK_HEAP_STRING_JOIN1669,72458
#define DUK_HTHREAD_STRING_JOIN(DUK_HTHREAD_STRING_JOIN1670,72572
#define DUK_STRIDX_TO_LOCALE_STRING DUK_STRIDX_TO_LOCALE_STRING1671,72688
#define DUK_HEAP_STRING_TO_LOCALE_STRING(DUK_HEAP_STRING_TO_LOCALE_STRING1672,72812
#define DUK_HTHREAD_STRING_TO_LOCALE_STRING(DUK_HTHREAD_STRING_TO_LOCALE_STRING1673,72938
#define DUK_STRIDX_VALUE_OF DUK_STRIDX_VALUE_OF1674,73066
#define DUK_HEAP_STRING_VALUE_OF(DUK_HEAP_STRING_VALUE_OF1675,73183
#define DUK_HTHREAD_STRING_VALUE_OF(DUK_HTHREAD_STRING_VALUE_OF1676,73301
#define DUK_STRIDX_TO_UTC_STRING DUK_STRIDX_TO_UTC_STRING1677,73421
#define DUK_HEAP_STRING_TO_UTC_STRING(DUK_HEAP_STRING_TO_UTC_STRING1678,73542
#define DUK_HTHREAD_STRING_TO_UTC_STRING(DUK_HTHREAD_STRING_TO_UTC_STRING1679,73665
#define DUK_STRIDX_TO_ISO_STRING DUK_STRIDX_TO_ISO_STRING1680,73790
#define DUK_HEAP_STRING_TO_ISO_STRING(DUK_HEAP_STRING_TO_ISO_STRING1681,73911
#define DUK_HTHREAD_STRING_TO_ISO_STRING(DUK_HTHREAD_STRING_TO_ISO_STRING1682,74034
#define DUK_STRIDX_TO_GMT_STRING DUK_STRIDX_TO_GMT_STRING1683,74159
#define DUK_HEAP_STRING_TO_GMT_STRING(DUK_HEAP_STRING_TO_GMT_STRING1684,74280
#define DUK_HTHREAD_STRING_TO_GMT_STRING(DUK_HTHREAD_STRING_TO_GMT_STRING1685,74403
#define DUK_STRIDX_SOURCE DUK_STRIDX_SOURCE1686,74528
#define DUK_HEAP_STRING_SOURCE(DUK_HEAP_STRING_SOURCE1687,74644
#define DUK_HTHREAD_STRING_SOURCE(DUK_HTHREAD_STRING_SOURCE1688,74760
#define DUK_STRIDX_IGNORE_CASE DUK_STRIDX_IGNORE_CASE1689,74878
#define DUK_HEAP_STRING_IGNORE_CASE(DUK_HEAP_STRING_IGNORE_CASE1690,74998
#define DUK_HTHREAD_STRING_IGNORE_CASE(DUK_HTHREAD_STRING_IGNORE_CASE1691,75119
#define DUK_STRIDX_MULTILINE DUK_STRIDX_MULTILINE1692,75242
#define DUK_HEAP_STRING_MULTILINE(DUK_HEAP_STRING_MULTILINE1693,75361
#define DUK_HTHREAD_STRING_MULTILINE(DUK_HTHREAD_STRING_MULTILINE1694,75480
#define DUK_STRIDX_LAST_INDEX DUK_STRIDX_LAST_INDEX1695,75601
#define DUK_HEAP_STRING_LAST_INDEX(DUK_HEAP_STRING_LAST_INDEX1696,75720
#define DUK_HTHREAD_STRING_LAST_INDEX(DUK_HTHREAD_STRING_LAST_INDEX1697,75840
#define DUK_STRIDX_FLAGS DUK_STRIDX_FLAGS1698,75962
#define DUK_HEAP_STRING_FLAGS(DUK_HEAP_STRING_FLAGS1699,76077
#define DUK_HTHREAD_STRING_FLAGS(DUK_HTHREAD_STRING_FLAGS1700,76192
#define DUK_STRIDX_INDEX DUK_STRIDX_INDEX1701,76309
#define DUK_HEAP_STRING_INDEX(DUK_HEAP_STRING_INDEX1702,76424
#define DUK_HTHREAD_STRING_INDEX(DUK_HTHREAD_STRING_INDEX1703,76539
#define DUK_STRIDX_PROTOTYPE DUK_STRIDX_PROTOTYPE1704,76656
#define DUK_HEAP_STRING_PROTOTYPE(DUK_HEAP_STRING_PROTOTYPE1705,76775
#define DUK_HTHREAD_STRING_PROTOTYPE(DUK_HTHREAD_STRING_PROTOTYPE1706,76894
#define DUK_STRIDX_CONSTRUCTOR DUK_STRIDX_CONSTRUCTOR1707,77015
#define DUK_HEAP_STRING_CONSTRUCTOR(DUK_HEAP_STRING_CONSTRUCTOR1708,77136
#define DUK_HTHREAD_STRING_CONSTRUCTOR(DUK_HTHREAD_STRING_CONSTRUCTOR1709,77257
#define DUK_STRIDX_MESSAGE DUK_STRIDX_MESSAGE1710,77380
#define DUK_HEAP_STRING_MESSAGE(DUK_HEAP_STRING_MESSAGE1711,77497
#define DUK_HTHREAD_STRING_MESSAGE(DUK_HTHREAD_STRING_MESSAGE1712,77614
#define DUK_STRIDX_LC_BOOLEAN DUK_STRIDX_LC_BOOLEAN1713,77733
#define DUK_HEAP_STRING_LC_BOOLEAN(DUK_HEAP_STRING_LC_BOOLEAN1714,77850
#define DUK_HTHREAD_STRING_LC_BOOLEAN(DUK_HTHREAD_STRING_LC_BOOLEAN1715,77970
#define DUK_STRIDX_LC_NUMBER DUK_STRIDX_LC_NUMBER1716,78092
#define DUK_HEAP_STRING_LC_NUMBER(DUK_HEAP_STRING_LC_NUMBER1717,78208
#define DUK_HTHREAD_STRING_LC_NUMBER(DUK_HTHREAD_STRING_LC_NUMBER1718,78327
#define DUK_STRIDX_LC_STRING DUK_STRIDX_LC_STRING1719,78448
#define DUK_HEAP_STRING_LC_STRING(DUK_HEAP_STRING_LC_STRING1720,78564
#define DUK_HTHREAD_STRING_LC_STRING(DUK_HTHREAD_STRING_LC_STRING1721,78683
#define DUK_STRIDX_LC_SYMBOL DUK_STRIDX_LC_SYMBOL1722,78804
#define DUK_HEAP_STRING_LC_SYMBOL(DUK_HEAP_STRING_LC_SYMBOL1723,78920
#define DUK_HTHREAD_STRING_LC_SYMBOL(DUK_HTHREAD_STRING_LC_SYMBOL1724,79039
#define DUK_STRIDX_LC_OBJECT DUK_STRIDX_LC_OBJECT1725,79160
#define DUK_HEAP_STRING_LC_OBJECT(DUK_HEAP_STRING_LC_OBJECT1726,79276
#define DUK_HTHREAD_STRING_LC_OBJECT(DUK_HTHREAD_STRING_LC_OBJECT1727,79395
#define DUK_STRIDX_LC_UNDEFINED DUK_STRIDX_LC_UNDEFINED1728,79516
#define DUK_HEAP_STRING_LC_UNDEFINED(DUK_HEAP_STRING_LC_UNDEFINED1729,79635
#define DUK_HTHREAD_STRING_LC_UNDEFINED(DUK_HTHREAD_STRING_LC_UNDEFINED1730,79757
#define DUK_STRIDX_NAN DUK_STRIDX_NAN1731,79881
#define DUK_HEAP_STRING_NAN(DUK_HEAP_STRING_NAN1732,79994
#define DUK_HTHREAD_STRING_NAN(DUK_HTHREAD_STRING_NAN1733,80107
#define DUK_STRIDX_INFINITY DUK_STRIDX_INFINITY1734,80222
#define DUK_HEAP_STRING_INFINITY(DUK_HEAP_STRING_INFINITY1735,80340
#define DUK_HTHREAD_STRING_INFINITY(DUK_HTHREAD_STRING_INFINITY1736,80458
#define DUK_STRIDX_MINUS_INFINITY DUK_STRIDX_MINUS_INFINITY1737,80578
#define DUK_HEAP_STRING_MINUS_INFINITY(DUK_HEAP_STRING_MINUS_INFINITY1738,80697
#define DUK_HTHREAD_STRING_MINUS_INFINITY(DUK_HTHREAD_STRING_MINUS_INFINITY1739,80821
#define DUK_STRIDX_MINUS_ZERO DUK_STRIDX_MINUS_ZERO1740,80947
#define DUK_HEAP_STRING_MINUS_ZERO(DUK_HEAP_STRING_MINUS_ZERO1741,81059
#define DUK_HTHREAD_STRING_MINUS_ZERO(DUK_HTHREAD_STRING_MINUS_ZERO1742,81179
#define DUK_STRIDX_COMMA DUK_STRIDX_COMMA1743,81301
#define DUK_HEAP_STRING_COMMA(DUK_HEAP_STRING_COMMA1744,81412
#define DUK_HTHREAD_STRING_COMMA(DUK_HTHREAD_STRING_COMMA1745,81527
#define DUK_STRIDX_NEWLINE_4SPACE DUK_STRIDX_NEWLINE_4SPACE1746,81644
#define DUK_HEAP_STRING_NEWLINE_4SPACE(DUK_HEAP_STRING_NEWLINE_4SPACE1747,81760
#define DUK_HTHREAD_STRING_NEWLINE_4SPACE(DUK_HTHREAD_STRING_NEWLINE_4SPACE1748,81884
#define DUK_STRIDX_BRACKETED_ELLIPSIS DUK_STRIDX_BRACKETED_ELLIPSIS1749,82010
#define DUK_HEAP_STRING_BRACKETED_ELLIPSIS(DUK_HEAP_STRING_BRACKETED_ELLIPSIS1750,82125
#define DUK_HTHREAD_STRING_BRACKETED_ELLIPSIS(DUK_HTHREAD_STRING_BRACKETED_ELLIPSIS1751,82253
#define DUK_STRIDX_INVALID_DATE DUK_STRIDX_INVALID_DATE1752,82383
#define DUK_HEAP_STRING_INVALID_DATE(DUK_HEAP_STRING_INVALID_DATE1753,82505
#define DUK_HTHREAD_STRING_INVALID_DATE(DUK_HTHREAD_STRING_INVALID_DATE1754,82627
#define DUK_STRIDX_LC_ARGUMENTS DUK_STRIDX_LC_ARGUMENTS1755,82751
#define DUK_HEAP_STRING_LC_ARGUMENTS(DUK_HEAP_STRING_LC_ARGUMENTS1756,82870
#define DUK_HTHREAD_STRING_LC_ARGUMENTS(DUK_HTHREAD_STRING_LC_ARGUMENTS1757,82992
#define DUK_STRIDX_CALLEE DUK_STRIDX_CALLEE1758,83116
#define DUK_HEAP_STRING_CALLEE(DUK_HEAP_STRING_CALLEE1759,83232
#define DUK_HTHREAD_STRING_CALLEE(DUK_HTHREAD_STRING_CALLEE1760,83348
#define DUK_STRIDX_CALLER DUK_STRIDX_CALLER1761,83466
#define DUK_HEAP_STRING_CALLER(DUK_HEAP_STRING_CALLER1762,83582
#define DUK_HTHREAD_STRING_CALLER(DUK_HTHREAD_STRING_CALLER1763,83698
#define DUK_STRIDX_APPLY DUK_STRIDX_APPLY1764,83816
#define DUK_HEAP_STRING_APPLY(DUK_HEAP_STRING_APPLY1765,83931
#define DUK_HTHREAD_STRING_APPLY(DUK_HTHREAD_STRING_APPLY1766,84046
#define DUK_STRIDX_CONSTRUCT DUK_STRIDX_CONSTRUCT1767,84163
#define DUK_HEAP_STRING_CONSTRUCT(DUK_HEAP_STRING_CONSTRUCT1768,84282
#define DUK_HTHREAD_STRING_CONSTRUCT(DUK_HTHREAD_STRING_CONSTRUCT1769,84401
#define DUK_STRIDX_DELETE_PROPERTY DUK_STRIDX_DELETE_PROPERTY1770,84522
#define DUK_HEAP_STRING_DELETE_PROPERTY(DUK_HEAP_STRING_DELETE_PROPERTY1771,84646
#define DUK_HTHREAD_STRING_DELETE_PROPERTY(DUK_HTHREAD_STRING_DELETE_PROPERTY1772,84771
#define DUK_STRIDX_GET DUK_STRIDX_GET1773,84898
#define DUK_HEAP_STRING_GET(DUK_HEAP_STRING_GET1774,85011
#define DUK_HTHREAD_STRING_GET(DUK_HTHREAD_STRING_GET1775,85124
#define DUK_STRIDX_HAS DUK_STRIDX_HAS1776,85239
#define DUK_HEAP_STRING_HAS(DUK_HEAP_STRING_HAS1777,85352
#define DUK_HTHREAD_STRING_HAS(DUK_HTHREAD_STRING_HAS1778,85465
#define DUK_STRIDX_OWN_KEYS DUK_STRIDX_OWN_KEYS1779,85580
#define DUK_HEAP_STRING_OWN_KEYS(DUK_HEAP_STRING_OWN_KEYS1780,85697
#define DUK_HTHREAD_STRING_OWN_KEYS(DUK_HTHREAD_STRING_OWN_KEYS1781,85815
#define DUK_STRIDX_WELLKNOWN_SYMBOL_TO_PRIMITIVE DUK_STRIDX_WELLKNOWN_SYMBOL_TO_PRIMITIVE1782,85935
#define DUK_HEAP_STRING_WELLKNOWN_SYMBOL_TO_PRIMITIVE(DUK_HEAP_STRING_WELLKNOWN_SYMBOL_TO_PRIMITIVE1783,86071
#define DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_TO_PRIMITIVE(DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_TO_PRIMITIVE1784,86210
#define DUK_STRIDX_WELLKNOWN_SYMBOL_HAS_INSTANCE DUK_STRIDX_WELLKNOWN_SYMBOL_HAS_INSTANCE1785,86351
#define DUK_HEAP_STRING_WELLKNOWN_SYMBOL_HAS_INSTANCE(DUK_HEAP_STRING_WELLKNOWN_SYMBOL_HAS_INSTANCE1786,86487
#define DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_HAS_INSTANCE(DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_HAS_INSTANCE1787,86626
#define DUK_STRIDX_WELLKNOWN_SYMBOL_TO_STRING_TAG DUK_STRIDX_WELLKNOWN_SYMBOL_TO_STRING_TAG1788,86767
#define DUK_HEAP_STRING_WELLKNOWN_SYMBOL_TO_STRING_TAG(DUK_HEAP_STRING_WELLKNOWN_SYMBOL_TO_STRING_TAG1789,86903
#define DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_TO_STRING_TAG(DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_TO_STRING_TAG1790,87043
#define DUK_STRIDX_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE DUK_STRIDX_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE1791,87185
#define DUK_HEAP_STRING_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE(DUK_HEAP_STRING_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE1792,87328
#define DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE(DUK_HTHREAD_STRING_WELLKNOWN_SYMBOL_IS_CONCAT_SPREADABLE1793,87475
#define DUK_STRIDX_SET_PROTOTYPE_OF DUK_STRIDX_SET_PROTOTYPE_OF1794,87625
#define DUK_HEAP_STRING_SET_PROTOTYPE_OF(DUK_HEAP_STRING_SET_PROTOTYPE_OF1795,87749
#define DUK_HTHREAD_STRING_SET_PROTOTYPE_OF(DUK_HTHREAD_STRING_SET_PROTOTYPE_OF1796,87875
#define DUK_STRIDX___PROTO__ DUK_STRIDX___PROTO__1797,88003
#define DUK_HEAP_STRING___PROTO__(DUK_HEAP_STRING___PROTO__1798,88122
#define DUK_HTHREAD_STRING___PROTO__(DUK_HTHREAD_STRING___PROTO__1799,88241
#define DUK_STRIDX_TO_STRING DUK_STRIDX_TO_STRING1800,88362
#define DUK_HEAP_STRING_TO_STRING(DUK_HEAP_STRING_TO_STRING1801,88480
#define DUK_HTHREAD_STRING_TO_STRING(DUK_HTHREAD_STRING_TO_STRING1802,88599
#define DUK_STRIDX_TO_JSON DUK_STRIDX_TO_JSON1803,88720
#define DUK_HEAP_STRING_TO_JSON(DUK_HEAP_STRING_TO_JSON1804,88836
#define DUK_HTHREAD_STRING_TO_JSON(DUK_HTHREAD_STRING_TO_JSON1805,88953
#define DUK_STRIDX_TYPE DUK_STRIDX_TYPE1806,89072
#define DUK_HEAP_STRING_TYPE(DUK_HEAP_STRING_TYPE1807,89186
#define DUK_HTHREAD_STRING_TYPE(DUK_HTHREAD_STRING_TYPE1808,89300
#define DUK_STRIDX_DATA DUK_STRIDX_DATA1809,89416
#define DUK_HEAP_STRING_DATA(DUK_HEAP_STRING_DATA1810,89530
#define DUK_HTHREAD_STRING_DATA(DUK_HTHREAD_STRING_DATA1811,89644
#define DUK_STRIDX_LC_BUFFER DUK_STRIDX_LC_BUFFER1812,89760
#define DUK_HEAP_STRING_LC_BUFFER(DUK_HEAP_STRING_LC_BUFFER1813,89876
#define DUK_HTHREAD_STRING_LC_BUFFER(DUK_HTHREAD_STRING_LC_BUFFER1814,89995
#define DUK_STRIDX_LENGTH DUK_STRIDX_LENGTH1815,90116
#define DUK_HEAP_STRING_LENGTH(DUK_HEAP_STRING_LENGTH1816,90232
#define DUK_HTHREAD_STRING_LENGTH(DUK_HTHREAD_STRING_LENGTH1817,90348
#define DUK_STRIDX_SET DUK_STRIDX_SET1818,90466
#define DUK_HEAP_STRING_SET(DUK_HEAP_STRING_SET1819,90579
#define DUK_HTHREAD_STRING_SET(DUK_HTHREAD_STRING_SET1820,90692
#define DUK_STRIDX_STACK DUK_STRIDX_STACK1821,90807
#define DUK_HEAP_STRING_STACK(DUK_HEAP_STRING_STACK1822,90922
#define DUK_HTHREAD_STRING_STACK(DUK_HTHREAD_STRING_STACK1823,91037
#define DUK_STRIDX_PC DUK_STRIDX_PC1824,91154
#define DUK_HEAP_STRING_PC(DUK_HEAP_STRING_PC1825,91266
#define DUK_HTHREAD_STRING_PC(DUK_HTHREAD_STRING_PC1826,91378
#define DUK_STRIDX_LINE_NUMBER DUK_STRIDX_LINE_NUMBER1827,91492
#define DUK_HEAP_STRING_LINE_NUMBER(DUK_HEAP_STRING_LINE_NUMBER1828,91612
#define DUK_HTHREAD_STRING_LINE_NUMBER(DUK_HTHREAD_STRING_LINE_NUMBER1829,91733
#define DUK_STRIDX_INT_TRACEDATA DUK_STRIDX_INT_TRACEDATA1830,91856
#define DUK_HEAP_STRING_INT_TRACEDATA(DUK_HEAP_STRING_INT_TRACEDATA1831,91979
#define DUK_HTHREAD_STRING_INT_TRACEDATA(DUK_HTHREAD_STRING_INT_TRACEDATA1832,92102
#define DUK_STRIDX_NAME DUK_STRIDX_NAME1833,92227
#define DUK_HEAP_STRING_NAME(DUK_HEAP_STRING_NAME1834,92341
#define DUK_HTHREAD_STRING_NAME(DUK_HTHREAD_STRING_NAME1835,92455
#define DUK_STRIDX_FILE_NAME DUK_STRIDX_FILE_NAME1836,92571
#define DUK_HEAP_STRING_FILE_NAME(DUK_HEAP_STRING_FILE_NAME1837,92689
#define DUK_HTHREAD_STRING_FILE_NAME(DUK_HTHREAD_STRING_FILE_NAME1838,92808
#define DUK_STRIDX_LC_POINTER DUK_STRIDX_LC_POINTER1839,92929
#define DUK_HEAP_STRING_LC_POINTER(DUK_HEAP_STRING_LC_POINTER1840,93046
#define DUK_HTHREAD_STRING_LC_POINTER(DUK_HTHREAD_STRING_LC_POINTER1841,93166
#define DUK_STRIDX_INT_TARGET DUK_STRIDX_INT_TARGET1842,93288
#define DUK_HEAP_STRING_INT_TARGET(DUK_HEAP_STRING_INT_TARGET1843,93408
#define DUK_HTHREAD_STRING_INT_TARGET(DUK_HTHREAD_STRING_INT_TARGET1844,93528
#define DUK_STRIDX_INT_NEXT DUK_STRIDX_INT_NEXT1845,93650
#define DUK_HEAP_STRING_INT_NEXT(DUK_HEAP_STRING_INT_NEXT1846,93768
#define DUK_HTHREAD_STRING_INT_NEXT(DUK_HTHREAD_STRING_INT_NEXT1847,93886
#define DUK_STRIDX_INT_BYTECODE DUK_STRIDX_INT_BYTECODE1848,94006
#define DUK_HEAP_STRING_INT_BYTECODE(DUK_HEAP_STRING_INT_BYTECODE1849,94128
#define DUK_HTHREAD_STRING_INT_BYTECODE(DUK_HTHREAD_STRING_INT_BYTECODE1850,94250
#define DUK_STRIDX_INT_FORMALS DUK_STRIDX_INT_FORMALS1851,94374
#define DUK_HEAP_STRING_INT_FORMALS(DUK_HEAP_STRING_INT_FORMALS1852,94495
#define DUK_HTHREAD_STRING_INT_FORMALS(DUK_HTHREAD_STRING_INT_FORMALS1853,94616
#define DUK_STRIDX_INT_VARMAP DUK_STRIDX_INT_VARMAP1854,94739
#define DUK_HEAP_STRING_INT_VARMAP(DUK_HEAP_STRING_INT_VARMAP1855,94859
#define DUK_HTHREAD_STRING_INT_VARMAP(DUK_HTHREAD_STRING_INT_VARMAP1856,94979
#define DUK_STRIDX_INT_SOURCE DUK_STRIDX_INT_SOURCE1857,95101
#define DUK_HEAP_STRING_INT_SOURCE(DUK_HEAP_STRING_INT_SOURCE1858,95221
#define DUK_HTHREAD_STRING_INT_SOURCE(DUK_HTHREAD_STRING_INT_SOURCE1859,95341
#define DUK_STRIDX_INT_PC2LINE DUK_STRIDX_INT_PC2LINE1860,95463
#define DUK_HEAP_STRING_INT_PC2LINE(DUK_HEAP_STRING_INT_PC2LINE1861,95584
#define DUK_HTHREAD_STRING_INT_PC2LINE(DUK_HTHREAD_STRING_INT_PC2LINE1862,95705
#define DUK_STRIDX_INT_MAP DUK_STRIDX_INT_MAP1863,95828
#define DUK_HEAP_STRING_INT_MAP(DUK_HEAP_STRING_INT_MAP1864,95945
#define DUK_HTHREAD_STRING_INT_MAP(DUK_HTHREAD_STRING_INT_MAP1865,96062
#define DUK_STRIDX_INT_VARENV DUK_STRIDX_INT_VARENV1866,96181
#define DUK_HEAP_STRING_INT_VARENV(DUK_HEAP_STRING_INT_VARENV1867,96301
#define DUK_HTHREAD_STRING_INT_VARENV(DUK_HTHREAD_STRING_INT_VARENV1868,96421
#define DUK_STRIDX_INT_FINALIZER DUK_STRIDX_INT_FINALIZER1869,96543
#define DUK_HEAP_STRING_INT_FINALIZER(DUK_HEAP_STRING_INT_FINALIZER1870,96666
#define DUK_HTHREAD_STRING_INT_FINALIZER(DUK_HTHREAD_STRING_INT_FINALIZER1871,96789
#define DUK_STRIDX_INT_VALUE DUK_STRIDX_INT_VALUE1872,96914
#define DUK_HEAP_STRING_INT_VALUE(DUK_HEAP_STRING_INT_VALUE1873,97033
#define DUK_HTHREAD_STRING_INT_VALUE(DUK_HTHREAD_STRING_INT_VALUE1874,97152
#define DUK_STRIDX_COMPILE DUK_STRIDX_COMPILE1875,97273
#define DUK_HEAP_STRING_COMPILE(DUK_HEAP_STRING_COMPILE1876,97390
#define DUK_HTHREAD_STRING_COMPILE(DUK_HTHREAD_STRING_COMPILE1877,97507
#define DUK_STRIDX_INPUT DUK_STRIDX_INPUT1878,97626
#define DUK_HEAP_STRING_INPUT(DUK_HEAP_STRING_INPUT1879,97741
#define DUK_HTHREAD_STRING_INPUT(DUK_HTHREAD_STRING_INPUT1880,97856
#define DUK_STRIDX_ERR_CREATE DUK_STRIDX_ERR_CREATE1881,97973
#define DUK_HEAP_STRING_ERR_CREATE(DUK_HEAP_STRING_ERR_CREATE1882,98092
#define DUK_HTHREAD_STRING_ERR_CREATE(DUK_HTHREAD_STRING_ERR_CREATE1883,98212
#define DUK_STRIDX_ERR_THROW DUK_STRIDX_ERR_THROW1884,98334
#define DUK_HEAP_STRING_ERR_THROW(DUK_HEAP_STRING_ERR_THROW1885,98452
#define DUK_HTHREAD_STRING_ERR_THROW(DUK_HTHREAD_STRING_ERR_THROW1886,98571
#define DUK_STRIDX_ENV DUK_STRIDX_ENV1887,98692
#define DUK_HEAP_STRING_ENV(DUK_HEAP_STRING_ENV1888,98805
#define DUK_HTHREAD_STRING_ENV(DUK_HTHREAD_STRING_ENV1889,98918
#define DUK_STRIDX_HEX DUK_STRIDX_HEX1890,99033
#define DUK_HEAP_STRING_HEX(DUK_HEAP_STRING_HEX1891,99146
#define DUK_HTHREAD_STRING_HEX(DUK_HTHREAD_STRING_HEX1892,99259
#define DUK_STRIDX_BASE64 DUK_STRIDX_BASE641893,99374
#define DUK_HEAP_STRING_BASE64(DUK_HEAP_STRING_BASE641894,99490
#define DUK_HTHREAD_STRING_BASE64(DUK_HTHREAD_STRING_BASE641895,99606
#define DUK_STRIDX_JX DUK_STRIDX_JX1896,99724
#define DUK_HEAP_STRING_JX(DUK_HEAP_STRING_JX1897,99836
#define DUK_HTHREAD_STRING_JX(DUK_HTHREAD_STRING_JX1898,99948
#define DUK_STRIDX_JC DUK_STRIDX_JC1899,100062
#define DUK_HEAP_STRING_JC(DUK_HEAP_STRING_JC1900,100174
#define DUK_HTHREAD_STRING_JC(DUK_HTHREAD_STRING_JC1901,100286
#define DUK_STRIDX_JSON_EXT_UNDEFINED DUK_STRIDX_JSON_EXT_UNDEFINED1902,100400
#define DUK_HEAP_STRING_JSON_EXT_UNDEFINED(DUK_HEAP_STRING_JSON_EXT_UNDEFINED1903,100525
#define DUK_HTHREAD_STRING_JSON_EXT_UNDEFINED(DUK_HTHREAD_STRING_JSON_EXT_UNDEFINED1904,100653
#define DUK_STRIDX_JSON_EXT_NAN DUK_STRIDX_JSON_EXT_NAN1905,100783
#define DUK_HEAP_STRING_JSON_EXT_NAN(DUK_HEAP_STRING_JSON_EXT_NAN1906,100906
#define DUK_HTHREAD_STRING_JSON_EXT_NAN(DUK_HTHREAD_STRING_JSON_EXT_NAN1907,101028
#define DUK_STRIDX_JSON_EXT_POSINF DUK_STRIDX_JSON_EXT_POSINF1908,101152
#define DUK_HEAP_STRING_JSON_EXT_POSINF(DUK_HEAP_STRING_JSON_EXT_POSINF1909,101275
#define DUK_HTHREAD_STRING_JSON_EXT_POSINF(DUK_HTHREAD_STRING_JSON_EXT_POSINF1910,101400
#define DUK_STRIDX_JSON_EXT_NEGINF DUK_STRIDX_JSON_EXT_NEGINF1911,101527
#define DUK_HEAP_STRING_JSON_EXT_NEGINF(DUK_HEAP_STRING_JSON_EXT_NEGINF1912,101651
#define DUK_HTHREAD_STRING_JSON_EXT_NEGINF(DUK_HTHREAD_STRING_JSON_EXT_NEGINF1913,101776
#define DUK_STRIDX_JSON_EXT_FUNCTION1 DUK_STRIDX_JSON_EXT_FUNCTION11914,101903
#define DUK_HEAP_STRING_JSON_EXT_FUNCTION1(DUK_HEAP_STRING_JSON_EXT_FUNCTION11915,102027
#define DUK_HTHREAD_STRING_JSON_EXT_FUNCTION1(DUK_HTHREAD_STRING_JSON_EXT_FUNCTION11916,102155
#define DUK_STRIDX_JSON_EXT_FUNCTION2 DUK_STRIDX_JSON_EXT_FUNCTION21917,102285
#define DUK_HEAP_STRING_JSON_EXT_FUNCTION2(DUK_HEAP_STRING_JSON_EXT_FUNCTION21918,102407
#define DUK_HTHREAD_STRING_JSON_EXT_FUNCTION2(DUK_HTHREAD_STRING_JSON_EXT_FUNCTION21919,102535
#define DUK_STRIDX_BREAK DUK_STRIDX_BREAK1920,102665
#define DUK_HEAP_STRING_BREAK(DUK_HEAP_STRING_BREAK1921,102780
#define DUK_HTHREAD_STRING_BREAK(DUK_HTHREAD_STRING_BREAK1922,102895
#define DUK_STRIDX_CASE DUK_STRIDX_CASE1923,103012
#define DUK_HEAP_STRING_CASE(DUK_HEAP_STRING_CASE1924,103126
#define DUK_HTHREAD_STRING_CASE(DUK_HTHREAD_STRING_CASE1925,103240
#define DUK_STRIDX_CATCH DUK_STRIDX_CATCH1926,103356
#define DUK_HEAP_STRING_CATCH(DUK_HEAP_STRING_CATCH1927,103471
#define DUK_HTHREAD_STRING_CATCH(DUK_HTHREAD_STRING_CATCH1928,103586
#define DUK_STRIDX_CONTINUE DUK_STRIDX_CONTINUE1929,103703
#define DUK_HEAP_STRING_CONTINUE(DUK_HEAP_STRING_CONTINUE1930,103821
#define DUK_HTHREAD_STRING_CONTINUE(DUK_HTHREAD_STRING_CONTINUE1931,103939
#define DUK_STRIDX_DEBUGGER DUK_STRIDX_DEBUGGER1932,104059
#define DUK_HEAP_STRING_DEBUGGER(DUK_HEAP_STRING_DEBUGGER1933,104177
#define DUK_HTHREAD_STRING_DEBUGGER(DUK_HTHREAD_STRING_DEBUGGER1934,104295
#define DUK_STRIDX_DEFAULT DUK_STRIDX_DEFAULT1935,104415
#define DUK_HEAP_STRING_DEFAULT(DUK_HEAP_STRING_DEFAULT1936,104532
#define DUK_HTHREAD_STRING_DEFAULT(DUK_HTHREAD_STRING_DEFAULT1937,104649
#define DUK_STRIDX_DELETE DUK_STRIDX_DELETE1938,104768
#define DUK_HEAP_STRING_DELETE(DUK_HEAP_STRING_DELETE1939,104884
#define DUK_HTHREAD_STRING_DELETE(DUK_HTHREAD_STRING_DELETE1940,105000
#define DUK_STRIDX_DO DUK_STRIDX_DO1941,105118
#define DUK_HEAP_STRING_DO(DUK_HEAP_STRING_DO1942,105230
#define DUK_HTHREAD_STRING_DO(DUK_HTHREAD_STRING_DO1943,105342
#define DUK_STRIDX_ELSE DUK_STRIDX_ELSE1944,105456
#define DUK_HEAP_STRING_ELSE(DUK_HEAP_STRING_ELSE1945,105570
#define DUK_HTHREAD_STRING_ELSE(DUK_HTHREAD_STRING_ELSE1946,105684
#define DUK_STRIDX_FINALLY DUK_STRIDX_FINALLY1947,105800
#define DUK_HEAP_STRING_FINALLY(DUK_HEAP_STRING_FINALLY1948,105917
#define DUK_HTHREAD_STRING_FINALLY(DUK_HTHREAD_STRING_FINALLY1949,106034
#define DUK_STRIDX_FOR DUK_STRIDX_FOR1950,106153
#define DUK_HEAP_STRING_FOR(DUK_HEAP_STRING_FOR1951,106266
#define DUK_HTHREAD_STRING_FOR(DUK_HTHREAD_STRING_FOR1952,106379
#define DUK_STRIDX_LC_FUNCTION DUK_STRIDX_LC_FUNCTION1953,106494
#define DUK_HEAP_STRING_LC_FUNCTION(DUK_HEAP_STRING_LC_FUNCTION1954,106612
#define DUK_HTHREAD_STRING_LC_FUNCTION(DUK_HTHREAD_STRING_LC_FUNCTION1955,106733
#define DUK_STRIDX_IF DUK_STRIDX_IF1956,106856
#define DUK_HEAP_STRING_IF(DUK_HEAP_STRING_IF1957,106968
#define DUK_HTHREAD_STRING_IF(DUK_HTHREAD_STRING_IF1958,107080
#define DUK_STRIDX_IN DUK_STRIDX_IN1959,107194
#define DUK_HEAP_STRING_IN(DUK_HEAP_STRING_IN1960,107306
#define DUK_HTHREAD_STRING_IN(DUK_HTHREAD_STRING_IN1961,107418
#define DUK_STRIDX_INSTANCEOF DUK_STRIDX_INSTANCEOF1962,107532
#define DUK_HEAP_STRING_INSTANCEOF(DUK_HEAP_STRING_INSTANCEOF1963,107652
#define DUK_HTHREAD_STRING_INSTANCEOF(DUK_HTHREAD_STRING_INSTANCEOF1964,107772
#define DUK_STRIDX_NEW DUK_STRIDX_NEW1965,107894
#define DUK_HEAP_STRING_NEW(DUK_HEAP_STRING_NEW1966,108007
#define DUK_HTHREAD_STRING_NEW(DUK_HTHREAD_STRING_NEW1967,108120
#define DUK_STRIDX_RETURN DUK_STRIDX_RETURN1968,108235
#define DUK_HEAP_STRING_RETURN(DUK_HEAP_STRING_RETURN1969,108351
#define DUK_HTHREAD_STRING_RETURN(DUK_HTHREAD_STRING_RETURN1970,108467
#define DUK_STRIDX_SWITCH DUK_STRIDX_SWITCH1971,108585
#define DUK_HEAP_STRING_SWITCH(DUK_HEAP_STRING_SWITCH1972,108701
#define DUK_HTHREAD_STRING_SWITCH(DUK_HTHREAD_STRING_SWITCH1973,108817
#define DUK_STRIDX_THIS DUK_STRIDX_THIS1974,108935
#define DUK_HEAP_STRING_THIS(DUK_HEAP_STRING_THIS1975,109049
#define DUK_HTHREAD_STRING_THIS(DUK_HTHREAD_STRING_THIS1976,109163
#define DUK_STRIDX_THROW DUK_STRIDX_THROW1977,109279
#define DUK_HEAP_STRING_THROW(DUK_HEAP_STRING_THROW1978,109394
#define DUK_HTHREAD_STRING_THROW(DUK_HTHREAD_STRING_THROW1979,109509
#define DUK_STRIDX_TRY DUK_STRIDX_TRY1980,109626
#define DUK_HEAP_STRING_TRY(DUK_HEAP_STRING_TRY1981,109739
#define DUK_HTHREAD_STRING_TRY(DUK_HTHREAD_STRING_TRY1982,109852
#define DUK_STRIDX_TYPEOF DUK_STRIDX_TYPEOF1983,109967
#define DUK_HEAP_STRING_TYPEOF(DUK_HEAP_STRING_TYPEOF1984,110083
#define DUK_HTHREAD_STRING_TYPEOF(DUK_HTHREAD_STRING_TYPEOF1985,110199
#define DUK_STRIDX_VAR DUK_STRIDX_VAR1986,110317
#define DUK_HEAP_STRING_VAR(DUK_HEAP_STRING_VAR1987,110430
#define DUK_HTHREAD_STRING_VAR(DUK_HTHREAD_STRING_VAR1988,110543
#define DUK_STRIDX_CONST DUK_STRIDX_CONST1989,110658
#define DUK_HEAP_STRING_CONST(DUK_HEAP_STRING_CONST1990,110773
#define DUK_HTHREAD_STRING_CONST(DUK_HTHREAD_STRING_CONST1991,110888
#define DUK_STRIDX_VOID DUK_STRIDX_VOID1992,111005
#define DUK_HEAP_STRING_VOID(DUK_HEAP_STRING_VOID1993,111119
#define DUK_HTHREAD_STRING_VOID(DUK_HTHREAD_STRING_VOID1994,111233
#define DUK_STRIDX_WHILE DUK_STRIDX_WHILE1995,111349
#define DUK_HEAP_STRING_WHILE(DUK_HEAP_STRING_WHILE1996,111464
#define DUK_HTHREAD_STRING_WHILE(DUK_HTHREAD_STRING_WHILE1997,111579
#define DUK_STRIDX_WITH DUK_STRIDX_WITH1998,111696
#define DUK_HEAP_STRING_WITH(DUK_HEAP_STRING_WITH1999,111810
#define DUK_HTHREAD_STRING_WITH(DUK_HTHREAD_STRING_WITH2000,111924
#define DUK_STRIDX_CLASS DUK_STRIDX_CLASS2001,112040
#define DUK_HEAP_STRING_CLASS(DUK_HEAP_STRING_CLASS2002,112155
#define DUK_HTHREAD_STRING_CLASS(DUK_HTHREAD_STRING_CLASS2003,112270
#define DUK_STRIDX_ENUM DUK_STRIDX_ENUM2004,112387
#define DUK_HEAP_STRING_ENUM(DUK_HEAP_STRING_ENUM2005,112501
#define DUK_HTHREAD_STRING_ENUM(DUK_HTHREAD_STRING_ENUM2006,112615
#define DUK_STRIDX_EXPORT DUK_STRIDX_EXPORT2007,112731
#define DUK_HEAP_STRING_EXPORT(DUK_HEAP_STRING_EXPORT2008,112847
#define DUK_HTHREAD_STRING_EXPORT(DUK_HTHREAD_STRING_EXPORT2009,112963
#define DUK_STRIDX_EXTENDS DUK_STRIDX_EXTENDS2010,113081
#define DUK_HEAP_STRING_EXTENDS(DUK_HEAP_STRING_EXTENDS2011,113198
#define DUK_HTHREAD_STRING_EXTENDS(DUK_HTHREAD_STRING_EXTENDS2012,113315
#define DUK_STRIDX_IMPORT DUK_STRIDX_IMPORT2013,113434
#define DUK_HEAP_STRING_IMPORT(DUK_HEAP_STRING_IMPORT2014,113550
#define DUK_HTHREAD_STRING_IMPORT(DUK_HTHREAD_STRING_IMPORT2015,113666
#define DUK_STRIDX_SUPER DUK_STRIDX_SUPER2016,113784
#define DUK_HEAP_STRING_SUPER(DUK_HEAP_STRING_SUPER2017,113899
#define DUK_HTHREAD_STRING_SUPER(DUK_HTHREAD_STRING_SUPER2018,114014
#define DUK_STRIDX_LC_NULL DUK_STRIDX_LC_NULL2019,114131
#define DUK_HEAP_STRING_LC_NULL(DUK_HEAP_STRING_LC_NULL2020,114245
#define DUK_HTHREAD_STRING_LC_NULL(DUK_HTHREAD_STRING_LC_NULL2021,114362
#define DUK_STRIDX_TRUE DUK_STRIDX_TRUE2022,114481
#define DUK_HEAP_STRING_TRUE(DUK_HEAP_STRING_TRUE2023,114595
#define DUK_HTHREAD_STRING_TRUE(DUK_HTHREAD_STRING_TRUE2024,114709
#define DUK_STRIDX_FALSE DUK_STRIDX_FALSE2025,114825
#define DUK_HEAP_STRING_FALSE(DUK_HEAP_STRING_FALSE2026,114940
#define DUK_HTHREAD_STRING_FALSE(DUK_HTHREAD_STRING_FALSE2027,115055
#define DUK_STRIDX_IMPLEMENTS DUK_STRIDX_IMPLEMENTS2028,115172
#define DUK_HEAP_STRING_IMPLEMENTS(DUK_HEAP_STRING_IMPLEMENTS2029,115292
#define DUK_HTHREAD_STRING_IMPLEMENTS(DUK_HTHREAD_STRING_IMPLEMENTS2030,115412
#define DUK_STRIDX_INTERFACE DUK_STRIDX_INTERFACE2031,115534
#define DUK_HEAP_STRING_INTERFACE(DUK_HEAP_STRING_INTERFACE2032,115653
#define DUK_HTHREAD_STRING_INTERFACE(DUK_HTHREAD_STRING_INTERFACE2033,115772
#define DUK_STRIDX_LET DUK_STRIDX_LET2034,115893
#define DUK_HEAP_STRING_LET(DUK_HEAP_STRING_LET2035,116006
#define DUK_HTHREAD_STRING_LET(DUK_HTHREAD_STRING_LET2036,116119
#define DUK_STRIDX_PACKAGE DUK_STRIDX_PACKAGE2037,116234
#define DUK_HEAP_STRING_PACKAGE(DUK_HEAP_STRING_PACKAGE2038,116351
#define DUK_HTHREAD_STRING_PACKAGE(DUK_HTHREAD_STRING_PACKAGE2039,116468
#define DUK_STRIDX_PRIVATE DUK_STRIDX_PRIVATE2040,116587
#define DUK_HEAP_STRING_PRIVATE(DUK_HEAP_STRING_PRIVATE2041,116704
#define DUK_HTHREAD_STRING_PRIVATE(DUK_HTHREAD_STRING_PRIVATE2042,116821
#define DUK_STRIDX_PROTECTED DUK_STRIDX_PROTECTED2043,116940
#define DUK_HEAP_STRING_PROTECTED(DUK_HEAP_STRING_PROTECTED2044,117059
#define DUK_HTHREAD_STRING_PROTECTED(DUK_HTHREAD_STRING_PROTECTED2045,117178
#define DUK_STRIDX_PUBLIC DUK_STRIDX_PUBLIC2046,117299
#define DUK_HEAP_STRING_PUBLIC(DUK_HEAP_STRING_PUBLIC2047,117415
#define DUK_HTHREAD_STRING_PUBLIC(DUK_HTHREAD_STRING_PUBLIC2048,117531
#define DUK_STRIDX_STATIC DUK_STRIDX_STATIC2049,117649
#define DUK_HEAP_STRING_STATIC(DUK_HEAP_STRING_STATIC2050,117765
#define DUK_HTHREAD_STRING_STATIC(DUK_HTHREAD_STRING_STATIC2051,117881
#define DUK_STRIDX_YIELD DUK_STRIDX_YIELD2052,117999
#define DUK_HEAP_STRING_YIELD(DUK_HEAP_STRING_YIELD2053,118114
#define DUK_HTHREAD_STRING_YIELD(DUK_HTHREAD_STRING_YIELD2054,118229
#define DUK_HEAP_NUM_STRINGS DUK_HEAP_NUM_STRINGS2056,118347
#define DUK_STRIDX_START_RESERVED DUK_STRIDX_START_RESERVED2057,118421
#define DUK_STRIDX_START_STRICT_RESERVED DUK_STRIDX_START_STRICT_RESERVED2058,118495
#define DUK_STRIDX_END_RESERVED DUK_STRIDX_END_RESERVED2059,118569
DUK_INTERNAL_DECL const duk_uint8_t duk_strings_data[972];duk_strings_data2065,118847
#define DUK_STRDATA_MAX_STRLEN DUK_STRDATA_MAX_STRLEN2067,118937
#define DUK_STRDATA_DATA_LENGTH DUK_STRDATA_DATA_LENGTH2068,119010
DUK_INTERNAL_DECL const duk_c_function duk_bi_native_functions[185];duk_bi_native_functions2259,133783
#define DUK_BIDX_GLOBAL DUK_BIDX_GLOBAL2261,133883
#define DUK_BIDX_GLOBAL_ENV DUK_BIDX_GLOBAL_ENV2262,133955
#define DUK_BIDX_OBJECT_CONSTRUCTOR DUK_BIDX_OBJECT_CONSTRUCTOR2263,134027
#define DUK_BIDX_OBJECT_PROTOTYPE DUK_BIDX_OBJECT_PROTOTYPE2264,134099
#define DUK_BIDX_FUNCTION_CONSTRUCTOR DUK_BIDX_FUNCTION_CONSTRUCTOR2265,134171
#define DUK_BIDX_FUNCTION_PROTOTYPE DUK_BIDX_FUNCTION_PROTOTYPE2266,134243
#define DUK_BIDX_NATIVE_FUNCTION_PROTOTYPE DUK_BIDX_NATIVE_FUNCTION_PROTOTYPE2267,134315
#define DUK_BIDX_ARRAY_CONSTRUCTOR DUK_BIDX_ARRAY_CONSTRUCTOR2268,134387
#define DUK_BIDX_ARRAY_PROTOTYPE DUK_BIDX_ARRAY_PROTOTYPE2269,134459
#define DUK_BIDX_STRING_CONSTRUCTOR DUK_BIDX_STRING_CONSTRUCTOR2270,134531
#define DUK_BIDX_STRING_PROTOTYPE DUK_BIDX_STRING_PROTOTYPE2271,134603
#define DUK_BIDX_BOOLEAN_CONSTRUCTOR DUK_BIDX_BOOLEAN_CONSTRUCTOR2272,134676
#define DUK_BIDX_BOOLEAN_PROTOTYPE DUK_BIDX_BOOLEAN_PROTOTYPE2273,134749
#define DUK_BIDX_NUMBER_CONSTRUCTOR DUK_BIDX_NUMBER_CONSTRUCTOR2274,134822
#define DUK_BIDX_NUMBER_PROTOTYPE DUK_BIDX_NUMBER_PROTOTYPE2275,134895
#define DUK_BIDX_DATE_CONSTRUCTOR DUK_BIDX_DATE_CONSTRUCTOR2276,134968
#define DUK_BIDX_DATE_PROTOTYPE DUK_BIDX_DATE_PROTOTYPE2277,135041
#define DUK_BIDX_REGEXP_CONSTRUCTOR DUK_BIDX_REGEXP_CONSTRUCTOR2278,135114
#define DUK_BIDX_REGEXP_PROTOTYPE DUK_BIDX_REGEXP_PROTOTYPE2279,135187
#define DUK_BIDX_ERROR_CONSTRUCTOR DUK_BIDX_ERROR_CONSTRUCTOR2280,135260
#define DUK_BIDX_ERROR_PROTOTYPE DUK_BIDX_ERROR_PROTOTYPE2281,135333
#define DUK_BIDX_EVAL_ERROR_CONSTRUCTOR DUK_BIDX_EVAL_ERROR_CONSTRUCTOR2282,135406
#define DUK_BIDX_EVAL_ERROR_PROTOTYPE DUK_BIDX_EVAL_ERROR_PROTOTYPE2283,135479
#define DUK_BIDX_RANGE_ERROR_CONSTRUCTOR DUK_BIDX_RANGE_ERROR_CONSTRUCTOR2284,135552
#define DUK_BIDX_RANGE_ERROR_PROTOTYPE DUK_BIDX_RANGE_ERROR_PROTOTYPE2285,135625
#define DUK_BIDX_REFERENCE_ERROR_CONSTRUCTOR DUK_BIDX_REFERENCE_ERROR_CONSTRUCTOR2286,135698
#define DUK_BIDX_REFERENCE_ERROR_PROTOTYPE DUK_BIDX_REFERENCE_ERROR_PROTOTYPE2287,135771
#define DUK_BIDX_SYNTAX_ERROR_CONSTRUCTOR DUK_BIDX_SYNTAX_ERROR_CONSTRUCTOR2288,135844
#define DUK_BIDX_SYNTAX_ERROR_PROTOTYPE DUK_BIDX_SYNTAX_ERROR_PROTOTYPE2289,135917
#define DUK_BIDX_TYPE_ERROR_CONSTRUCTOR DUK_BIDX_TYPE_ERROR_CONSTRUCTOR2290,135990
#define DUK_BIDX_TYPE_ERROR_PROTOTYPE DUK_BIDX_TYPE_ERROR_PROTOTYPE2291,136063
#define DUK_BIDX_URI_ERROR_CONSTRUCTOR DUK_BIDX_URI_ERROR_CONSTRUCTOR2292,136136
#define DUK_BIDX_URI_ERROR_PROTOTYPE DUK_BIDX_URI_ERROR_PROTOTYPE2293,136209
#define DUK_BIDX_TYPE_ERROR_THROWER DUK_BIDX_TYPE_ERROR_THROWER2294,136282
#define DUK_BIDX_DUKTAPE DUK_BIDX_DUKTAPE2295,136355
#define DUK_BIDX_THREAD_PROTOTYPE DUK_BIDX_THREAD_PROTOTYPE2296,136428
#define DUK_BIDX_POINTER_PROTOTYPE DUK_BIDX_POINTER_PROTOTYPE2297,136501
#define DUK_BIDX_DOUBLE_ERROR DUK_BIDX_DOUBLE_ERROR2298,136574
#define DUK_BIDX_SYMBOL_PROTOTYPE DUK_BIDX_SYMBOL_PROTOTYPE2299,136647
#define DUK_BIDX_ARRAYBUFFER_PROTOTYPE DUK_BIDX_ARRAYBUFFER_PROTOTYPE2300,136720
#define DUK_BIDX_DATAVIEW_PROTOTYPE DUK_BIDX_DATAVIEW_PROTOTYPE2301,136793
#define DUK_BIDX_INT8ARRAY_PROTOTYPE DUK_BIDX_INT8ARRAY_PROTOTYPE2302,136866
#define DUK_BIDX_UINT8ARRAY_PROTOTYPE DUK_BIDX_UINT8ARRAY_PROTOTYPE2303,136939
#define DUK_BIDX_UINT8CLAMPEDARRAY_PROTOTYPE DUK_BIDX_UINT8CLAMPEDARRAY_PROTOTYPE2304,137012
#define DUK_BIDX_INT16ARRAY_PROTOTYPE DUK_BIDX_INT16ARRAY_PROTOTYPE2305,137085
#define DUK_BIDX_UINT16ARRAY_PROTOTYPE DUK_BIDX_UINT16ARRAY_PROTOTYPE2306,137158
#define DUK_BIDX_INT32ARRAY_PROTOTYPE DUK_BIDX_INT32ARRAY_PROTOTYPE2307,137231
#define DUK_BIDX_UINT32ARRAY_PROTOTYPE DUK_BIDX_UINT32ARRAY_PROTOTYPE2308,137304
#define DUK_BIDX_FLOAT32ARRAY_PROTOTYPE DUK_BIDX_FLOAT32ARRAY_PROTOTYPE2309,137377
#define DUK_BIDX_FLOAT64ARRAY_PROTOTYPE DUK_BIDX_FLOAT64ARRAY_PROTOTYPE2310,137450
#define DUK_BIDX_NODEJS_BUFFER_PROTOTYPE DUK_BIDX_NODEJS_BUFFER_PROTOTYPE2311,137523
#define DUK_NUM_BUILTINS DUK_NUM_BUILTINS2312,137596
#define DUK_NUM_BIDX_BUILTINS DUK_NUM_BIDX_BUILTINS2313,137669
#define DUK_NUM_ALL_BUILTINS DUK_NUM_ALL_BUILTINS2314,137742
DUK_INTERNAL_DECL const duk_uint8_t duk_builtins_data[4281];duk_builtins_data2317,137876
#define DUK_BUILTINS_DATA_LENGTH DUK_BUILTINS_DATA_LENGTH2319,137968
DUK_INTERNAL_DECL const duk_uint8_t duk_builtins_data[4281];duk_builtins_data2322,138106
#define DUK_BUILTINS_DATA_LENGTH DUK_BUILTINS_DATA_LENGTH2324,138198
DUK_INTERNAL_DECL const duk_uint8_t duk_builtins_data[4281];duk_builtins_data2327,138336
#define DUK_BUILTINS_DATA_LENGTH DUK_BUILTINS_DATA_LENGTH2329,138428
#define DUK_UTIL_H_INCLUDEDDUK_UTIL_H_INCLUDED2344,138752
#define DUK_UTIL_GET_RANDOM_DOUBLE(DUK_UTIL_GET_RANDOM_DOUBLE2347,138820
#define DUK_UTIL_GET_RANDOM_DOUBLE(DUK_UTIL_GET_RANDOM_DOUBLE2349,138911
#define DUK_DOUBLE_2TO32 DUK_DOUBLE_2TO322356,139029
#define DUK_DOUBLE_2TO31 DUK_DOUBLE_2TO312357,139071
#define DUK_DOUBLE_LOG2E DUK_DOUBLE_LOG2E2358,139113
#define DUK_DOUBLE_LOG10E DUK_DOUBLE_LOG10E2359,139161
#define DUK_HTON32(DUK_HTON322366,139272
#define DUK_NTOH32(DUK_NTOH322367,139311
#define DUK_HTON16(DUK_HTON162368,139350
#define DUK_NTOH16(DUK_NTOH162369,139389
#define DUK_HTON32(DUK_HTON322371,139462
#define DUK_NTOH32(DUK_NTOH322372,139488
#define DUK_HTON16(DUK_HTON162373,139514
#define DUK_NTOH16(DUK_NTOH162374,139540
struct duk_bitdecoder_ctx {duk_bitdecoder_ctx2383,139659
	const duk_uint8_t *data;data2384,139687
	duk_size_t offset;offset2385,139713
	duk_size_t length;length2386,139733
	duk_uint32_t currval;currval2387,139753
	duk_small_int_t currbits;currbits2388,139776
#define DUK_BD_BITPACKED_STRING_MAXLEN DUK_BD_BITPACKED_STRING_MAXLEN2391,139807
struct duk_bitencoder_ctx {duk_bitencoder_ctx2397,139881
	duk_uint8_t *data;data2398,139909
	duk_size_t offset;offset2399,139929
	duk_size_t length;length2400,139949
	duk_uint32_t currval;currval2401,139969
	duk_small_int_t currbits;currbits2402,139992
	duk_small_int_t truncated;truncated2403,140019
#define DUK_RAW_WRITE_U8(DUK_RAW_WRITE_U82412,140237
#define DUK_RAW_WRITE_U16_BE(DUK_RAW_WRITE_U16_BE2415,140326
#define DUK_RAW_WRITE_U32_BE(DUK_RAW_WRITE_U32_BE2416,140414
#define DUK_RAW_WRITE_FLOAT_BE(DUK_RAW_WRITE_FLOAT_BE2417,140502
#define DUK_RAW_WRITE_DOUBLE_BE(DUK_RAW_WRITE_DOUBLE_BE2418,140593
#define DUK_RAW_WRITE_XUTF8(DUK_RAW_WRITE_XUTF82419,140687
#define DUK_RAW_WRITEINC_U8(DUK_RAW_WRITEINC_U82421,140778
#define DUK_RAW_WRITEINC_U16_BE(DUK_RAW_WRITEINC_U16_BE2424,140872
#define DUK_RAW_WRITEINC_U32_BE(DUK_RAW_WRITEINC_U32_BE2425,140967
#define DUK_RAW_WRITEINC_FLOAT_BE(DUK_RAW_WRITEINC_FLOAT_BE2426,141062
#define DUK_RAW_WRITEINC_DOUBLE_BE(DUK_RAW_WRITEINC_DOUBLE_BE2427,141160
#define DUK_RAW_WRITEINC_XUTF8(DUK_RAW_WRITEINC_XUTF82428,141261
#define DUK_RAW_WRITEINC_CESU8(DUK_RAW_WRITEINC_CESU82429,141358
#define DUK_RAW_READ_U8(DUK_RAW_READ_U82431,141456
#define DUK_RAW_READ_U16_BE(DUK_RAW_READ_U16_BE2432,141510
#define DUK_RAW_READ_U32_BE(DUK_RAW_READ_U32_BE2433,141571
#define DUK_RAW_READ_DOUBLE_BE(DUK_RAW_READ_DOUBLE_BE2434,141632
#define DUK_RAW_READINC_U8(DUK_RAW_READINC_U82436,141700
#define DUK_RAW_READINC_U16_BE(DUK_RAW_READINC_U16_BE2437,141759
#define DUK_RAW_READINC_U32_BE(DUK_RAW_READINC_U32_BE2438,141827
#define DUK_RAW_READINC_DOUBLE_BE(DUK_RAW_READINC_DOUBLE_BE2439,141895
struct duk_bufwriter_ctx {duk_bufwriter_ctx2477,143669
	duk_uint8_t *p;p2478,143696
	duk_uint8_t *p_base;p_base2479,143713
	duk_uint8_t *p_limit;p_limit2480,143735
	duk_hbuffer_dynamic *buf;buf2481,143758
#define DUK_BW_SLACK_ADD DUK_BW_SLACK_ADD2485,143822
#define DUK_BW_SLACK_SHIFT DUK_BW_SLACK_SHIFT2486,143860
#define DUK_BW_SLACK_ADD DUK_BW_SLACK_ADD2488,143938
#define DUK_BW_SLACK_SHIFT DUK_BW_SLACK_SHIFT2489,143976
#define DUK_BW_INIT_PUSHBUF(DUK_BW_INIT_PUSHBUF2494,144133
#define DUK_BW_INIT_WITHBUF(DUK_BW_INIT_WITHBUF2497,144244
#define DUK_BW_COMPACT(DUK_BW_COMPACT2500,144349
#define DUK_BW_PUSH_AS_STRING(DUK_BW_PUSH_AS_STRING2504,144510
#define DUK_BW_ASSERT_VALID_EXPR(DUK_BW_ASSERT_VALID_EXPR2517,145111
#define DUK_BW_ASSERT_VALID(DUK_BW_ASSERT_VALID2518,145196
#define DUK_BW_ASSERT_VALID_EXPR(DUK_BW_ASSERT_VALID_EXPR2520,145298
#define DUK_BW_ASSERT_VALID(DUK_BW_ASSERT_VALID2521,145363
#define DUK_BW_GET_PTR(DUK_BW_GET_PTR2526,145478
#define DUK_BW_SET_PTR(DUK_BW_SET_PTR2528,145530
#define DUK_BW_ADD_PTR(DUK_BW_ADD_PTR2531,145614
#define DUK_BW_GET_BASEPTR(DUK_BW_GET_BASEPTR2534,145703
#define DUK_BW_GET_LIMITPTR(DUK_BW_GET_LIMITPTR2536,145764
#define DUK_BW_GET_SIZE(DUK_BW_GET_SIZE2538,145827
#define DUK_BW_SET_SIZE(DUK_BW_SET_SIZE2540,145914
#define DUK_BW_RESET_SIZE(DUK_BW_RESET_SIZE2544,146100
#define DUK_BW_GET_BUFFER(DUK_BW_GET_BUFFER2548,146244
#define DUK_BW_ENSURE(DUK_BW_ENSURE2553,146337
#define DUK_BW_ENSURE_RAW(DUK_BW_ENSURE_RAW2564,146756
#define DUK_BW_ENSURE_GETPTR(DUK_BW_ENSURE_GETPTR2568,146933
#define DUK_BW_ASSERT_SPACE_EXPR(DUK_BW_ASSERT_SPACE_EXPR2570,147034
#define DUK_BW_ASSERT_SPACE(DUK_BW_ASSERT_SPACE2573,147219
#define DUK_BW_SETPTR_AND_COMPACT(DUK_BW_SETPTR_AND_COMPACT2579,147358
#define DUK_BW_WRITE_RAW_U8(DUK_BW_WRITE_RAW_U82590,147759
#define DUK_BW_WRITE_RAW_U8_2(DUK_BW_WRITE_RAW_U8_22594,147910
#define DUK_BW_WRITE_RAW_U8_3(DUK_BW_WRITE_RAW_U8_32602,148180
#define DUK_BW_WRITE_RAW_U8_4(DUK_BW_WRITE_RAW_U8_42611,148493
#define DUK_BW_WRITE_RAW_U8_5(DUK_BW_WRITE_RAW_U8_52621,148849
#define DUK_BW_WRITE_RAW_U8_6(DUK_BW_WRITE_RAW_U8_62632,149248
#define DUK_BW_WRITE_RAW_XUTF8(DUK_BW_WRITE_RAW_XUTF82644,149690
#define DUK_BW_WRITE_RAW_CESU8(DUK_BW_WRITE_RAW_CESU82652,150040
#define DUK_BW_WRITE_RAW_BYTES(DUK_BW_WRITE_RAW_BYTES2662,150481
#define DUK_BW_WRITE_RAW_CSTRING(DUK_BW_WRITE_RAW_CSTRING2670,150798
#define DUK_BW_WRITE_RAW_HSTRING(DUK_BW_WRITE_RAW_HSTRING2678,151148
#define DUK_BW_WRITE_RAW_HBUFFER(DUK_BW_WRITE_RAW_HBUFFER2684,151435
#define DUK_BW_WRITE_RAW_HBUFFER_FIXED(DUK_BW_WRITE_RAW_HBUFFER_FIXED2690,151736
#define DUK_BW_WRITE_RAW_HBUFFER_DYNAMIC(DUK_BW_WRITE_RAW_HBUFFER_DYNAMIC2696,152055
#define DUK_BW_WRITE_RAW_SLICE(DUK_BW_WRITE_RAW_SLICE2704,152436
#define DUK_BW_INSERT_RAW_BYTES(DUK_BW_INSERT_RAW_BYTES2708,152625
#define DUK_BW_INSERT_RAW_SLICE(DUK_BW_INSERT_RAW_SLICE2714,152888
#define DUK_BW_INSERT_RAW_AREA(DUK_BW_INSERT_RAW_AREA2721,153186
#define DUK_BW_REMOVE_RAW_SLICE(DUK_BW_REMOVE_RAW_SLICE2725,153328
#define DUK_BW_WRITE_ENSURE_U8(DUK_BW_WRITE_ENSURE_U82730,153486
#define DUK_BW_WRITE_ENSURE_U8_2(DUK_BW_WRITE_ENSURE_U8_22734,153641
#define DUK_BW_WRITE_ENSURE_U8_3(DUK_BW_WRITE_ENSURE_U8_32738,153815
#define DUK_BW_WRITE_ENSURE_U8_4(DUK_BW_WRITE_ENSURE_U8_42742,154002
#define DUK_BW_WRITE_ENSURE_U8_5(DUK_BW_WRITE_ENSURE_U8_52746,154202
#define DUK_BW_WRITE_ENSURE_U8_6(DUK_BW_WRITE_ENSURE_U8_62750,154415
#define DUK_BW_WRITE_ENSURE_XUTF8(DUK_BW_WRITE_ENSURE_XUTF82754,154641
#define DUK_BW_WRITE_ENSURE_CESU8(DUK_BW_WRITE_ENSURE_CESU82758,154827
#define DUK_BW_WRITE_ENSURE_BYTES(DUK_BW_WRITE_ENSURE_BYTES2764,155095
#define DUK_BW_WRITE_ENSURE_CSTRING(DUK_BW_WRITE_ENSURE_CSTRING2773,155463
#define DUK_BW_WRITE_ENSURE_HSTRING(DUK_BW_WRITE_ENSURE_HSTRING2782,155866
#define DUK_BW_WRITE_ENSURE_HBUFFER(DUK_BW_WRITE_ENSURE_HBUFFER2789,156206
#define DUK_BW_WRITE_ENSURE_HBUFFER_FIXED(DUK_BW_WRITE_ENSURE_HBUFFER_FIXED2796,156560
#define DUK_BW_WRITE_ENSURE_HBUFFER_DYNAMIC(DUK_BW_WRITE_ENSURE_HBUFFER_DYNAMIC2803,156932
#define DUK_BW_WRITE_ENSURE_SLICE(DUK_BW_WRITE_ENSURE_SLICE2811,157311
#define DUK_BW_INSERT_ENSURE_BYTES(DUK_BW_INSERT_ENSURE_BYTES2813,157433
#define DUK_BW_INSERT_ENSURE_SLICE(DUK_BW_INSERT_ENSURE_SLICE2815,157560
#define DUK_BW_INSERT_ENSURE_AREA(DUK_BW_INSERT_ENSURE_AREA2817,157695
#define DUK_BW_REMOVE_ENSURE_SLICE(DUK_BW_REMOVE_ENSURE_SLICE2820,157866
DUK_INTERNAL_DECL const duk_uint8_t duk_lc_digits[36];duk_lc_digits2829,158107
DUK_INTERNAL_DECL const duk_uint8_t duk_uc_nybbles[16];duk_uc_nybbles2830,158162
DUK_INTERNAL_DECL const duk_int8_t duk_hex_dectab[256];duk_hex_dectab2831,158218
DUK_INTERNAL_DECL const duk_int16_t duk_hex_dectab_shift4[256];duk_hex_dectab_shift42833,158308
DUK_INTERNAL_DECL const duk_uint16_t duk_hex_enctab[256];duk_hex_enctab2834,158372
DUK_INTERNAL_DECL duk_uint8_t duk_util_probe_steps[32];duk_util_probe_steps2841,158595
#define duk_memcpy(duk_memcpy2914,163989
#define duk_memcpy_unsafe(duk_memcpy_unsafe2922,164303
#define duk_memmove(duk_memmove2923,164375
#define duk_memmove_unsafe(duk_memmove_unsafe2931,164691
#define duk_memset(duk_memset2932,164765
#define duk_memset_unsafe(duk_memset_unsafe2939,165031
#define duk_memzero(duk_memzero2940,165103
#define duk_memzero_unsafe(duk_memzero_unsafe2946,165319
#define duk_memcpy(duk_memcpy2948,165428
#define duk_memcpy_unsafe(duk_memcpy_unsafe2956,165706
#define duk_memmove(duk_memmove2968,166141
#define duk_memmove_unsafe(duk_memmove_unsafe2976,166421
#define duk_memset(duk_memset2988,166858
#define duk_memset_unsafe(duk_memset_unsafe2995,167106
#define duk_memzero(duk_memzero3005,167458
#define duk_memzero_unsafe(duk_memzero_unsafe3011,167656
#define DUK_IS_POWER_OF_TWO(DUK_IS_POWER_OF_TWO3066,170364
#define DUK_ERRMSG_H_INCLUDEDDUK_ERRMSG_H_INCLUDED3093,171544
#define DUK_STR_INTERNAL_ERROR DUK_STR_INTERNAL_ERROR3096,171620
#define DUK_STR_UNSUPPORTED DUK_STR_UNSUPPORTED3097,171686
#define DUK_STR_INVALID_COUNT DUK_STR_INVALID_COUNT3098,171749
#define DUK_STR_INVALID_ARGS DUK_STR_INVALID_ARGS3099,171814
#define DUK_STR_INVALID_STATE DUK_STR_INVALID_STATE3100,171878
#define DUK_STR_INVALID_INPUT DUK_STR_INVALID_INPUT3101,171943
#define DUK_STR_INVALID_LENGTH DUK_STR_INVALID_LENGTH3102,172008
#define DUK_STR_NOT_CONSTRUCTABLE DUK_STR_NOT_CONSTRUCTABLE3103,172074
#define DUK_STR_CONSTRUCT_ONLY DUK_STR_CONSTRUCT_ONLY3104,172143
#define DUK_STR_NOT_CALLABLE DUK_STR_NOT_CALLABLE3105,172221
#define DUK_STR_NOT_EXTENSIBLE DUK_STR_NOT_EXTENSIBLE3106,172285
#define DUK_STR_NOT_WRITABLE DUK_STR_NOT_WRITABLE3107,172351
#define DUK_STR_NOT_CONFIGURABLE DUK_STR_NOT_CONFIGURABLE3108,172415
#define DUK_STR_INVALID_CONTEXT DUK_STR_INVALID_CONTEXT3109,172483
#define DUK_STR_INVALID_INDEX DUK_STR_INVALID_INDEX3110,172550
#define DUK_STR_PUSH_BEYOND_ALLOC_STACK DUK_STR_PUSH_BEYOND_ALLOC_STACK3111,172614
#define DUK_STR_NOT_UNDEFINED DUK_STR_NOT_UNDEFINED3112,172700
#define DUK_STR_NOT_NULL DUK_STR_NOT_NULL3113,172767
#define DUK_STR_NOT_BOOLEAN DUK_STR_NOT_BOOLEAN3114,172834
#define DUK_STR_NOT_NUMBER DUK_STR_NOT_NUMBER3115,172901
#define DUK_STR_NOT_STRING DUK_STR_NOT_STRING3116,172968
#define DUK_STR_NOT_OBJECT DUK_STR_NOT_OBJECT3117,173035
#define DUK_STR_NOT_POINTER DUK_STR_NOT_POINTER3118,173102
#define DUK_STR_NOT_BUFFER DUK_STR_NOT_BUFFER3119,173169
#define DUK_STR_UNEXPECTED_TYPE DUK_STR_UNEXPECTED_TYPE3120,173273
#define DUK_STR_NOT_THREAD DUK_STR_NOT_THREAD3121,173340
#define DUK_STR_NOT_COMPFUNC DUK_STR_NOT_COMPFUNC3122,173407
#define DUK_STR_NOT_NATFUNC DUK_STR_NOT_NATFUNC3123,173474
#define DUK_STR_NOT_C_FUNCTION DUK_STR_NOT_C_FUNCTION3124,173541
#define DUK_STR_NOT_FUNCTION DUK_STR_NOT_FUNCTION3125,173608
#define DUK_STR_NOT_REGEXP DUK_STR_NOT_REGEXP3126,173675
#define DUK_STR_TOPRIMITIVE_FAILED DUK_STR_TOPRIMITIVE_FAILED3127,173742
#define DUK_STR_NUMBER_OUTSIDE_RANGE DUK_STR_NUMBER_OUTSIDE_RANGE3128,173822
#define DUK_STR_NOT_OBJECT_COERCIBLE DUK_STR_NOT_OBJECT_COERCIBLE3129,173894
#define DUK_STR_CANNOT_NUMBER_COERCE_SYMBOL DUK_STR_CANNOT_NUMBER_COERCE_SYMBOL3130,173966
#define DUK_STR_CANNOT_STRING_COERCE_SYMBOL DUK_STR_CANNOT_STRING_COERCE_SYMBOL3131,174045
#define DUK_STR_STRING_TOO_LONG DUK_STR_STRING_TOO_LONG3132,174124
#define DUK_STR_BUFFER_TOO_LONG DUK_STR_BUFFER_TOO_LONG3133,174191
#define DUK_STR_ALLOC_FAILED DUK_STR_ALLOC_FAILED3134,174258
#define DUK_STR_WRONG_BUFFER_TYPE DUK_STR_WRONG_BUFFER_TYPE3135,174322
#define DUK_STR_BASE64_ENCODE_FAILED DUK_STR_BASE64_ENCODE_FAILED3136,174391
#define DUK_STR_SOURCE_DECODE_FAILED DUK_STR_SOURCE_DECODE_FAILED3137,174463
#define DUK_STR_UTF8_DECODE_FAILED DUK_STR_UTF8_DECODE_FAILED3138,174535
#define DUK_STR_BASE64_DECODE_FAILED DUK_STR_BASE64_DECODE_FAILED3139,174606
#define DUK_STR_HEX_DECODE_FAILED DUK_STR_HEX_DECODE_FAILED3140,174678
#define DUK_STR_INVALID_BYTECODE DUK_STR_INVALID_BYTECODE3141,174747
#define DUK_STR_NO_SOURCECODE DUK_STR_NO_SOURCECODE3142,174815
#define DUK_STR_RESULT_TOO_LONG DUK_STR_RESULT_TOO_LONG3143,174880
#define DUK_STR_INVALID_CFUNC_RC DUK_STR_INVALID_CFUNC_RC3144,174947
#define DUK_STR_INVALID_INSTANCEOF_RVAL DUK_STR_INVALID_INSTANCEOF_RVAL3145,175020
#define DUK_STR_INVALID_INSTANCEOF_RVAL_NOPROTO DUK_STR_INVALID_INSTANCEOF_RVAL_NOPROTO3146,175095
#define DUK_STR_FMT_PTR DUK_STR_FMT_PTR3149,175192
#define DUK_STR_FMT_INVALID_JSON DUK_STR_FMT_INVALID_JSON3150,175246
#define DUK_STR_JSONDEC_RECLIMIT DUK_STR_JSONDEC_RECLIMIT3151,175326
#define DUK_STR_JSONENC_RECLIMIT DUK_STR_JSONENC_RECLIMIT3152,175405
#define DUK_STR_CYCLIC_INPUT DUK_STR_CYCLIC_INPUT3153,175484
#define DUK_STR_INVALID_BASE DUK_STR_INVALID_BASE3156,175578
#define DUK_STR_STRICT_CALLER_READ DUK_STR_STRICT_CALLER_READ3157,175648
#define DUK_STR_PROXY_REJECTED DUK_STR_PROXY_REJECTED3158,175727
#define DUK_STR_INVALID_ARRAY_LENGTH DUK_STR_INVALID_ARRAY_LENGTH3159,175793
#define DUK_STR_SETTER_UNDEFINED DUK_STR_SETTER_UNDEFINED3160,175865
#define DUK_STR_INVALID_DESCRIPTOR DUK_STR_INVALID_DESCRIPTOR3161,175933
#define DUK_STR_PROXY_REVOKED DUK_STR_PROXY_REVOKED3164,176016
#define DUK_STR_INVALID_TRAP_RESULT DUK_STR_INVALID_TRAP_RESULT3165,176081
#define DUK_STR_INVALID_ESCAPE DUK_STR_INVALID_ESCAPE3170,176182
#define DUK_STR_UNTERMINATED_STRING DUK_STR_UNTERMINATED_STRING3171,176248
#define DUK_STR_UNTERMINATED_COMMENT DUK_STR_UNTERMINATED_COMMENT3172,176319
#define DUK_STR_UNTERMINATED_REGEXP DUK_STR_UNTERMINATED_REGEXP3173,176391
#define DUK_STR_TOKEN_LIMIT DUK_STR_TOKEN_LIMIT3174,176462
#define DUK_STR_REGEXP_SUPPORT_DISABLED DUK_STR_REGEXP_SUPPORT_DISABLED3175,176525
#define DUK_STR_INVALID_NUMBER_LITERAL DUK_STR_INVALID_NUMBER_LITERAL3176,176600
#define DUK_STR_INVALID_TOKEN DUK_STR_INVALID_TOKEN3177,176674
#define DUK_STR_PARSE_ERROR DUK_STR_PARSE_ERROR3180,176755
#define DUK_STR_DUPLICATE_LABEL DUK_STR_DUPLICATE_LABEL3181,176818
#define DUK_STR_INVALID_LABEL DUK_STR_INVALID_LABEL3182,176885
#define DUK_STR_INVALID_ARRAY_LITERAL DUK_STR_INVALID_ARRAY_LITERAL3183,176950
#define DUK_STR_INVALID_OBJECT_LITERAL DUK_STR_INVALID_OBJECT_LITERAL3184,177023
#define DUK_STR_INVALID_VAR_DECLARATION DUK_STR_INVALID_VAR_DECLARATION3185,177097
#define DUK_STR_CANNOT_DELETE_IDENTIFIER DUK_STR_CANNOT_DELETE_IDENTIFIER3186,177177
#define DUK_STR_INVALID_EXPRESSION DUK_STR_INVALID_EXPRESSION3187,177253
#define DUK_STR_INVALID_LVALUE DUK_STR_INVALID_LVALUE3188,177323
#define DUK_STR_INVALID_NEWTARGET DUK_STR_INVALID_NEWTARGET3189,177389
#define DUK_STR_EXPECTED_IDENTIFIER DUK_STR_EXPECTED_IDENTIFIER3190,177459
#define DUK_STR_EMPTY_EXPR_NOT_ALLOWED DUK_STR_EMPTY_EXPR_NOT_ALLOWED3191,177530
#define DUK_STR_INVALID_FOR DUK_STR_INVALID_FOR3192,177610
#define DUK_STR_INVALID_SWITCH DUK_STR_INVALID_SWITCH3193,177683
#define DUK_STR_INVALID_BREAK_CONT_LABEL DUK_STR_INVALID_BREAK_CONT_LABEL3194,177759
#define DUK_STR_INVALID_RETURN DUK_STR_INVALID_RETURN3195,177839
#define DUK_STR_INVALID_TRY DUK_STR_INVALID_TRY3196,177905
#define DUK_STR_INVALID_THROW DUK_STR_INVALID_THROW3197,177968
#define DUK_STR_WITH_IN_STRICT_MODE DUK_STR_WITH_IN_STRICT_MODE3198,178033
#define DUK_STR_FUNC_STMT_NOT_ALLOWED DUK_STR_FUNC_STMT_NOT_ALLOWED3199,178104
#define DUK_STR_UNTERMINATED_STMT DUK_STR_UNTERMINATED_STMT3200,178186
#define DUK_STR_INVALID_ARG_NAME DUK_STR_INVALID_ARG_NAME3201,178260
#define DUK_STR_INVALID_FUNC_NAME DUK_STR_INVALID_FUNC_NAME3202,178333
#define DUK_STR_INVALID_GETSET_NAME DUK_STR_INVALID_GETSET_NAME3203,178406
#define DUK_STR_FUNC_NAME_REQUIRED DUK_STR_FUNC_NAME_REQUIRED3204,178484
#define DUK_STR_INVALID_QUANTIFIER DUK_STR_INVALID_QUANTIFIER3207,178572
#define DUK_STR_INVALID_QUANTIFIER_NO_ATOM DUK_STR_INVALID_QUANTIFIER_NO_ATOM3208,178649
#define DUK_STR_INVALID_QUANTIFIER_VALUES DUK_STR_INVALID_QUANTIFIER_VALUES3209,178734
#define DUK_STR_QUANTIFIER_TOO_MANY_COPIES DUK_STR_QUANTIFIER_TOO_MANY_COPIES3210,178825
#define DUK_STR_UNEXPECTED_CLOSING_PAREN DUK_STR_UNEXPECTED_CLOSING_PAREN3211,178917
#define DUK_STR_UNEXPECTED_END_OF_PATTERN DUK_STR_UNEXPECTED_END_OF_PATTERN3212,178999
#define DUK_STR_UNEXPECTED_REGEXP_TOKEN DUK_STR_UNEXPECTED_REGEXP_TOKEN3213,179076
#define DUK_STR_INVALID_REGEXP_FLAGS DUK_STR_INVALID_REGEXP_FLAGS3214,179154
#define DUK_STR_INVALID_REGEXP_ESCAPE DUK_STR_INVALID_REGEXP_ESCAPE3215,179226
#define DUK_STR_INVALID_BACKREFS DUK_STR_INVALID_BACKREFS3216,179299
#define DUK_STR_INVALID_REGEXP_CHARACTER DUK_STR_INVALID_REGEXP_CHARACTER3217,179375
#define DUK_STR_INVALID_REGEXP_GROUP DUK_STR_INVALID_REGEXP_GROUP3218,179451
#define DUK_STR_UNTERMINATED_CHARCLASS DUK_STR_UNTERMINATED_CHARCLASS3219,179523
#define DUK_STR_INVALID_RANGE DUK_STR_INVALID_RANGE3220,179603
#define DUK_STR_VALSTACK_LIMIT DUK_STR_VALSTACK_LIMIT3223,179682
#define DUK_STR_CALLSTACK_LIMIT DUK_STR_CALLSTACK_LIMIT3224,179748
#define DUK_STR_PROTOTYPE_CHAIN_LIMIT DUK_STR_PROTOTYPE_CHAIN_LIMIT3225,179815
#define DUK_STR_BOUND_CHAIN_LIMIT DUK_STR_BOUND_CHAIN_LIMIT3226,179888
#define DUK_STR_NATIVE_STACK_LIMIT DUK_STR_NATIVE_STACK_LIMIT3227,179971
#define DUK_STR_COMPILER_RECURSION_LIMIT DUK_STR_COMPILER_RECURSION_LIMIT3228,180042
#define DUK_STR_BYTECODE_LIMIT DUK_STR_BYTECODE_LIMIT3229,180118
#define DUK_STR_REG_LIMIT DUK_STR_REG_LIMIT3230,180184
#define DUK_STR_TEMP_LIMIT DUK_STR_TEMP_LIMIT3231,180250
#define DUK_STR_CONST_LIMIT DUK_STR_CONST_LIMIT3232,180312
#define DUK_STR_FUNC_LIMIT DUK_STR_FUNC_LIMIT3233,180375
#define DUK_STR_REGEXP_COMPILER_RECURSION_LIMIT DUK_STR_REGEXP_COMPILER_RECURSION_LIMIT3234,180441
#define DUK_STR_REGEXP_EXECUTOR_RECURSION_LIMIT DUK_STR_REGEXP_EXECUTOR_RECURSION_LIMIT3235,180524
#define DUK_STR_REGEXP_EXECUTOR_STEP_LIMIT DUK_STR_REGEXP_EXECUTOR_STEP_LIMIT3236,180607
#define DUK_JS_BYTECODE_H_INCLUDEDDUK_JS_BYTECODE_H_INCLUDED3246,180847
typedef duk_uint32_t duk_instr_t;duk_instr_t3324,184580
#define DUK_BC_SHIFT_OP DUK_BC_SHIFT_OP3326,184615
#define DUK_BC_SHIFT_A DUK_BC_SHIFT_A3327,184653
#define DUK_BC_SHIFT_B DUK_BC_SHIFT_B3328,184691
#define DUK_BC_SHIFT_C DUK_BC_SHIFT_C3329,184730
#define DUK_BC_SHIFT_BC DUK_BC_SHIFT_BC3330,184769
#define DUK_BC_SHIFT_ABC DUK_BC_SHIFT_ABC3331,184820
#define DUK_BC_UNSHIFTED_MASK_OP DUK_BC_UNSHIFTED_MASK_OP3333,184872
#define DUK_BC_UNSHIFTED_MASK_A DUK_BC_UNSHIFTED_MASK_A3334,184915
#define DUK_BC_UNSHIFTED_MASK_B DUK_BC_UNSHIFTED_MASK_B3335,184958
#define DUK_BC_UNSHIFTED_MASK_C DUK_BC_UNSHIFTED_MASK_C3336,185001
#define DUK_BC_UNSHIFTED_MASK_BC DUK_BC_UNSHIFTED_MASK_BC3337,185044
#define DUK_BC_UNSHIFTED_MASK_ABC DUK_BC_UNSHIFTED_MASK_ABC3338,185089
#define DUK_BC_SHIFTED_MASK_OP DUK_BC_SHIFTED_MASK_OP3340,185137
#define DUK_BC_SHIFTED_MASK_A DUK_BC_SHIFTED_MASK_A3341,185219
#define DUK_BC_SHIFTED_MASK_B DUK_BC_SHIFTED_MASK_B3342,185299
#define DUK_BC_SHIFTED_MASK_C DUK_BC_SHIFTED_MASK_C3343,185379
#define DUK_BC_SHIFTED_MASK_BC DUK_BC_SHIFTED_MASK_BC3344,185459
#define DUK_BC_SHIFTED_MASK_ABC DUK_BC_SHIFTED_MASK_ABC3345,185541
#define DUK_DEC_OP(DUK_DEC_OP3347,185626
#define DUK_DEC_A(DUK_DEC_A3348,185677
#define DUK_DEC_B(DUK_DEC_B3349,185735
#define DUK_DEC_C(DUK_DEC_C3350,185794
#define DUK_DEC_BC(DUK_DEC_BC3351,185853
#define DUK_DEC_ABC(DUK_DEC_ABC3352,185914
#define DUK_ENC_OP(DUK_ENC_OP3354,185977
#define DUK_ENC_OP_ABC(DUK_ENC_OP_ABC3355,186034
#define DUK_ENC_OP_A_BC(DUK_ENC_OP_A_BC3359,186264
#define DUK_ENC_OP_A_B_C(DUK_ENC_OP_A_B_C3364,186565
#define DUK_ENC_OP_A_B(DUK_ENC_OP_A_B3370,186937
#define DUK_ENC_OP_A(DUK_ENC_OP_A3371,187006
#define DUK_ENC_OP_BC(DUK_ENC_OP_BC3372,187073
#define DUK_BC_NOREGCONST_OP(DUK_BC_NOREGCONST_OP3375,187201
#define DUK_BC_OP_MIN DUK_BC_OP_MIN3380,187389
#define DUK_BC_OP_MAX DUK_BC_OP_MAX3381,187427
#define DUK_BC_A_MIN DUK_BC_A_MIN3382,187469
#define DUK_BC_A_MAX DUK_BC_A_MAX3383,187507
#define DUK_BC_B_MIN DUK_BC_B_MIN3384,187549
#define DUK_BC_B_MAX DUK_BC_B_MAX3385,187587
#define DUK_BC_C_MIN DUK_BC_C_MIN3386,187629
#define DUK_BC_C_MAX DUK_BC_C_MAX3387,187667
#define DUK_BC_BC_MIN DUK_BC_BC_MIN3388,187709
#define DUK_BC_BC_MAX DUK_BC_BC_MAX3389,187747
#define DUK_BC_ABC_MIN DUK_BC_ABC_MIN3390,187791
#define DUK_BC_ABC_MAX DUK_BC_ABC_MAX3391,187829
#define DUK_BC_REGCONST_B DUK_BC_REGCONST_B3394,187933
#define DUK_BC_REGCONST_C DUK_BC_REGCONST_C3395,187978
#define DUK_BC_INCDECP_FLAG_DEC DUK_BC_INCDECP_FLAG_DEC3398,188060
#define DUK_BC_INCDECP_FLAG_POST DUK_BC_INCDECP_FLAG_POST3399,188105
#define DUK_OP_LDREG DUK_OP_LDREG3402,188166
#define DUK_OP_STREG DUK_OP_STREG3403,188204
#define DUK_OP_JUMP DUK_OP_JUMP3404,188242
#define DUK_OP_LDCONST DUK_OP_LDCONST3405,188280
#define DUK_OP_LDINT DUK_OP_LDINT3406,188318
#define DUK_OP_LDINTX DUK_OP_LDINTX3407,188356
#define DUK_OP_LDTHIS DUK_OP_LDTHIS3408,188394
#define DUK_OP_LDUNDEF DUK_OP_LDUNDEF3409,188432
#define DUK_OP_LDNULL DUK_OP_LDNULL3410,188470
#define DUK_OP_LDTRUE DUK_OP_LDTRUE3411,188508
#define DUK_OP_LDFALSE DUK_OP_LDFALSE3412,188546
#define DUK_OP_GETVAR DUK_OP_GETVAR3413,188585
#define DUK_OP_BNOT DUK_OP_BNOT3414,188624
#define DUK_OP_LNOT DUK_OP_LNOT3415,188663
#define DUK_OP_UNM DUK_OP_UNM3416,188702
#define DUK_OP_UNP DUK_OP_UNP3417,188741
#define DUK_OP_EQ DUK_OP_EQ3418,188780
#define DUK_OP_EQ_RR DUK_OP_EQ_RR3419,188819
#define DUK_OP_EQ_CR DUK_OP_EQ_CR3420,188858
#define DUK_OP_EQ_RC DUK_OP_EQ_RC3421,188897
#define DUK_OP_EQ_CC DUK_OP_EQ_CC3422,188936
#define DUK_OP_NEQ DUK_OP_NEQ3423,188975
#define DUK_OP_NEQ_RR DUK_OP_NEQ_RR3424,189014
#define DUK_OP_NEQ_CR DUK_OP_NEQ_CR3425,189053
#define DUK_OP_NEQ_RC DUK_OP_NEQ_RC3426,189092
#define DUK_OP_NEQ_CC DUK_OP_NEQ_CC3427,189131
#define DUK_OP_SEQ DUK_OP_SEQ3428,189170
#define DUK_OP_SEQ_RR DUK_OP_SEQ_RR3429,189209
#define DUK_OP_SEQ_CR DUK_OP_SEQ_CR3430,189248
#define DUK_OP_SEQ_RC DUK_OP_SEQ_RC3431,189287
#define DUK_OP_SEQ_CC DUK_OP_SEQ_CC3432,189326
#define DUK_OP_SNEQ DUK_OP_SNEQ3433,189365
#define DUK_OP_SNEQ_RR DUK_OP_SNEQ_RR3434,189404
#define DUK_OP_SNEQ_CR DUK_OP_SNEQ_CR3435,189443
#define DUK_OP_SNEQ_RC DUK_OP_SNEQ_RC3436,189482
#define DUK_OP_SNEQ_CC DUK_OP_SNEQ_CC3437,189521
#define DUK_OP_GT DUK_OP_GT3438,189560
#define DUK_OP_GT_RR DUK_OP_GT_RR3439,189599
#define DUK_OP_GT_CR DUK_OP_GT_CR3440,189638
#define DUK_OP_GT_RC DUK_OP_GT_RC3441,189677
#define DUK_OP_GT_CC DUK_OP_GT_CC3442,189716
#define DUK_OP_GE DUK_OP_GE3443,189755
#define DUK_OP_GE_RR DUK_OP_GE_RR3444,189794
#define DUK_OP_GE_CR DUK_OP_GE_CR3445,189833
#define DUK_OP_GE_RC DUK_OP_GE_RC3446,189872
#define DUK_OP_GE_CC DUK_OP_GE_CC3447,189911
#define DUK_OP_LT DUK_OP_LT3448,189950
#define DUK_OP_LT_RR DUK_OP_LT_RR3449,189989
#define DUK_OP_LT_CR DUK_OP_LT_CR3450,190028
#define DUK_OP_LT_RC DUK_OP_LT_RC3451,190067
#define DUK_OP_LT_CC DUK_OP_LT_CC3452,190106
#define DUK_OP_LE DUK_OP_LE3453,190145
#define DUK_OP_LE_RR DUK_OP_LE_RR3454,190184
#define DUK_OP_LE_CR DUK_OP_LE_CR3455,190223
#define DUK_OP_LE_RC DUK_OP_LE_RC3456,190262
#define DUK_OP_LE_CC DUK_OP_LE_CC3457,190301
#define DUK_OP_IFTRUE DUK_OP_IFTRUE3458,190340
#define DUK_OP_IFTRUE_R DUK_OP_IFTRUE_R3459,190379
#define DUK_OP_IFTRUE_C DUK_OP_IFTRUE_C3460,190418
#define DUK_OP_IFFALSE DUK_OP_IFFALSE3461,190457
#define DUK_OP_IFFALSE_R DUK_OP_IFFALSE_R3462,190496
#define DUK_OP_IFFALSE_C DUK_OP_IFFALSE_C3463,190535
#define DUK_OP_ADD DUK_OP_ADD3464,190574
#define DUK_OP_ADD_RR DUK_OP_ADD_RR3465,190613
#define DUK_OP_ADD_CR DUK_OP_ADD_CR3466,190652
#define DUK_OP_ADD_RC DUK_OP_ADD_RC3467,190691
#define DUK_OP_ADD_CC DUK_OP_ADD_CC3468,190730
#define DUK_OP_SUB DUK_OP_SUB3469,190769
#define DUK_OP_SUB_RR DUK_OP_SUB_RR3470,190808
#define DUK_OP_SUB_CR DUK_OP_SUB_CR3471,190847
#define DUK_OP_SUB_RC DUK_OP_SUB_RC3472,190886
#define DUK_OP_SUB_CC DUK_OP_SUB_CC3473,190925
#define DUK_OP_MUL DUK_OP_MUL3474,190964
#define DUK_OP_MUL_RR DUK_OP_MUL_RR3475,191003
#define DUK_OP_MUL_CR DUK_OP_MUL_CR3476,191042
#define DUK_OP_MUL_RC DUK_OP_MUL_RC3477,191081
#define DUK_OP_MUL_CC DUK_OP_MUL_CC3478,191120
#define DUK_OP_DIV DUK_OP_DIV3479,191159
#define DUK_OP_DIV_RR DUK_OP_DIV_RR3480,191198
#define DUK_OP_DIV_CR DUK_OP_DIV_CR3481,191237
#define DUK_OP_DIV_RC DUK_OP_DIV_RC3482,191276
#define DUK_OP_DIV_CC DUK_OP_DIV_CC3483,191315
#define DUK_OP_MOD DUK_OP_MOD3484,191354
#define DUK_OP_MOD_RR DUK_OP_MOD_RR3485,191393
#define DUK_OP_MOD_CR DUK_OP_MOD_CR3486,191432
#define DUK_OP_MOD_RC DUK_OP_MOD_RC3487,191471
#define DUK_OP_MOD_CC DUK_OP_MOD_CC3488,191510
#define DUK_OP_EXP DUK_OP_EXP3489,191549
#define DUK_OP_EXP_RR DUK_OP_EXP_RR3490,191588
#define DUK_OP_EXP_CR DUK_OP_EXP_CR3491,191627
#define DUK_OP_EXP_RC DUK_OP_EXP_RC3492,191666
#define DUK_OP_EXP_CC DUK_OP_EXP_CC3493,191705
#define DUK_OP_BAND DUK_OP_BAND3494,191744
#define DUK_OP_BAND_RR DUK_OP_BAND_RR3495,191783
#define DUK_OP_BAND_CR DUK_OP_BAND_CR3496,191822
#define DUK_OP_BAND_RC DUK_OP_BAND_RC3497,191861
#define DUK_OP_BAND_CC DUK_OP_BAND_CC3498,191900
#define DUK_OP_BOR DUK_OP_BOR3499,191939
#define DUK_OP_BOR_RR DUK_OP_BOR_RR3500,191978
#define DUK_OP_BOR_CR DUK_OP_BOR_CR3501,192017
#define DUK_OP_BOR_RC DUK_OP_BOR_RC3502,192056
#define DUK_OP_BOR_CC DUK_OP_BOR_CC3503,192095
#define DUK_OP_BXOR DUK_OP_BXOR3504,192134
#define DUK_OP_BXOR_RR DUK_OP_BXOR_RR3505,192173
#define DUK_OP_BXOR_CR DUK_OP_BXOR_CR3506,192212
#define DUK_OP_BXOR_RC DUK_OP_BXOR_RC3507,192251
#define DUK_OP_BXOR_CC DUK_OP_BXOR_CC3508,192290
#define DUK_OP_BASL DUK_OP_BASL3509,192329
#define DUK_OP_BASL_RR DUK_OP_BASL_RR3510,192368
#define DUK_OP_BASL_CR DUK_OP_BASL_CR3511,192407
#define DUK_OP_BASL_RC DUK_OP_BASL_RC3512,192446
#define DUK_OP_BASL_CC DUK_OP_BASL_CC3513,192485
#define DUK_OP_BLSR DUK_OP_BLSR3514,192524
#define DUK_OP_BLSR_RR DUK_OP_BLSR_RR3515,192563
#define DUK_OP_BLSR_CR DUK_OP_BLSR_CR3516,192602
#define DUK_OP_BLSR_RC DUK_OP_BLSR_RC3517,192641
#define DUK_OP_BLSR_CC DUK_OP_BLSR_CC3518,192680
#define DUK_OP_BASR DUK_OP_BASR3519,192719
#define DUK_OP_BASR_RR DUK_OP_BASR_RR3520,192758
#define DUK_OP_BASR_CR DUK_OP_BASR_CR3521,192797
#define DUK_OP_BASR_RC DUK_OP_BASR_RC3522,192836
#define DUK_OP_BASR_CC DUK_OP_BASR_CC3523,192875
#define DUK_OP_INSTOF DUK_OP_INSTOF3524,192914
#define DUK_OP_INSTOF_RR DUK_OP_INSTOF_RR3525,192954
#define DUK_OP_INSTOF_CR DUK_OP_INSTOF_CR3526,192994
#define DUK_OP_INSTOF_RC DUK_OP_INSTOF_RC3527,193034
#define DUK_OP_INSTOF_CC DUK_OP_INSTOF_CC3528,193074
#define DUK_OP_IN DUK_OP_IN3529,193114
#define DUK_OP_IN_RR DUK_OP_IN_RR3530,193154
#define DUK_OP_IN_CR DUK_OP_IN_CR3531,193194
#define DUK_OP_IN_RC DUK_OP_IN_RC3532,193234
#define DUK_OP_IN_CC DUK_OP_IN_CC3533,193274
#define DUK_OP_GETPROP DUK_OP_GETPROP3534,193314
#define DUK_OP_GETPROP_RR DUK_OP_GETPROP_RR3535,193354
#define DUK_OP_GETPROP_CR DUK_OP_GETPROP_CR3536,193394
#define DUK_OP_GETPROP_RC DUK_OP_GETPROP_RC3537,193434
#define DUK_OP_GETPROP_CC DUK_OP_GETPROP_CC3538,193474
#define DUK_OP_PUTPROP DUK_OP_PUTPROP3539,193514
#define DUK_OP_PUTPROP_RR DUK_OP_PUTPROP_RR3540,193554
#define DUK_OP_PUTPROP_CR DUK_OP_PUTPROP_CR3541,193594
#define DUK_OP_PUTPROP_RC DUK_OP_PUTPROP_RC3542,193634
#define DUK_OP_PUTPROP_CC DUK_OP_PUTPROP_CC3543,193674
#define DUK_OP_DELPROP DUK_OP_DELPROP3544,193714
#define DUK_OP_DELPROP_RR DUK_OP_DELPROP_RR3545,193754
#define DUK_OP_DELPROP_CR_UNUSED DUK_OP_DELPROP_CR_UNUSED3546,193794
#define DUK_OP_DELPROP_RC DUK_OP_DELPROP_RC3547,193852
#define DUK_OP_DELPROP_CC_UNUSED DUK_OP_DELPROP_CC_UNUSED3548,193892
#define DUK_OP_PREINCR DUK_OP_PREINCR3549,193950
#define DUK_OP_PREDECR DUK_OP_PREDECR3550,194038
#define DUK_OP_POSTINCR DUK_OP_POSTINCR3551,194130
#define DUK_OP_POSTDECR DUK_OP_POSTDECR3552,194170
#define DUK_OP_PREINCV DUK_OP_PREINCV3553,194210
#define DUK_OP_PREDECV DUK_OP_PREDECV3554,194250
#define DUK_OP_POSTINCV DUK_OP_POSTINCV3555,194290
#define DUK_OP_POSTDECV DUK_OP_POSTDECV3556,194330
#define DUK_OP_PREINCP DUK_OP_PREINCP3557,194370
#define DUK_OP_PREINCP_RR DUK_OP_PREINCP_RR3558,194464
#define DUK_OP_PREINCP_CR DUK_OP_PREINCP_CR3559,194504
#define DUK_OP_PREINCP_RC DUK_OP_PREINCP_RC3560,194544
#define DUK_OP_PREINCP_CC DUK_OP_PREINCP_CC3561,194584
#define DUK_OP_PREDECP DUK_OP_PREDECP3562,194624
#define DUK_OP_PREDECP_RR DUK_OP_PREDECP_RR3563,194664
#define DUK_OP_PREDECP_CR DUK_OP_PREDECP_CR3564,194704
#define DUK_OP_PREDECP_RC DUK_OP_PREDECP_RC3565,194744
#define DUK_OP_PREDECP_CC DUK_OP_PREDECP_CC3566,194784
#define DUK_OP_POSTINCP DUK_OP_POSTINCP3567,194824
#define DUK_OP_POSTINCP_RR DUK_OP_POSTINCP_RR3568,194864
#define DUK_OP_POSTINCP_CR DUK_OP_POSTINCP_CR3569,194904
#define DUK_OP_POSTINCP_RC DUK_OP_POSTINCP_RC3570,194944
#define DUK_OP_POSTINCP_CC DUK_OP_POSTINCP_CC3571,194984
#define DUK_OP_POSTDECP DUK_OP_POSTDECP3572,195024
#define DUK_OP_POSTDECP_RR DUK_OP_POSTDECP_RR3573,195064
#define DUK_OP_POSTDECP_CR DUK_OP_POSTDECP_CR3574,195104
#define DUK_OP_POSTDECP_RC DUK_OP_POSTDECP_RC3575,195144
#define DUK_OP_POSTDECP_CC DUK_OP_POSTDECP_CC3576,195184
#define DUK_OP_DECLVAR DUK_OP_DECLVAR3577,195224
#define DUK_OP_DECLVAR_RR DUK_OP_DECLVAR_RR3578,195264
#define DUK_OP_DECLVAR_CR DUK_OP_DECLVAR_CR3579,195304
#define DUK_OP_DECLVAR_RC DUK_OP_DECLVAR_RC3580,195344
#define DUK_OP_DECLVAR_CC DUK_OP_DECLVAR_CC3581,195384
#define DUK_OP_REGEXP DUK_OP_REGEXP3582,195424
#define DUK_OP_REGEXP_RR DUK_OP_REGEXP_RR3583,195464
#define DUK_OP_REGEXP_CR DUK_OP_REGEXP_CR3584,195504
#define DUK_OP_REGEXP_RC DUK_OP_REGEXP_RC3585,195544
#define DUK_OP_REGEXP_CC DUK_OP_REGEXP_CC3586,195584
#define DUK_OP_CLOSURE DUK_OP_CLOSURE3587,195624
#define DUK_OP_TYPEOF DUK_OP_TYPEOF3588,195664
#define DUK_OP_TYPEOFID DUK_OP_TYPEOFID3589,195704
#define DUK_OP_PUTVAR DUK_OP_PUTVAR3590,195744
#define DUK_OP_DELVAR DUK_OP_DELVAR3591,195784
#define DUK_OP_RETREG DUK_OP_RETREG3592,195824
#define DUK_OP_RETUNDEF DUK_OP_RETUNDEF3593,195864
#define DUK_OP_RETCONST DUK_OP_RETCONST3594,195904
#define DUK_OP_RETCONSTN DUK_OP_RETCONSTN3595,195944
#define DUK_OP_LABEL DUK_OP_LABEL3596,196033
#define DUK_OP_ENDLABEL DUK_OP_ENDLABEL3597,196073
#define DUK_OP_BREAK DUK_OP_BREAK3598,196113
#define DUK_OP_CONTINUE DUK_OP_CONTINUE3599,196153
#define DUK_OP_TRYCATCH DUK_OP_TRYCATCH3600,196193
#define DUK_OP_ENDTRY DUK_OP_ENDTRY3601,196233
#define DUK_OP_ENDCATCH DUK_OP_ENDCATCH3602,196273
#define DUK_OP_ENDFIN DUK_OP_ENDFIN3603,196313
#define DUK_OP_THROW DUK_OP_THROW3604,196353
#define DUK_OP_INVLHS DUK_OP_INVLHS3605,196393
#define DUK_OP_CSREG DUK_OP_CSREG3606,196433
#define DUK_OP_CSVAR DUK_OP_CSVAR3607,196473
#define DUK_OP_CSVAR_RR DUK_OP_CSVAR_RR3608,196513
#define DUK_OP_CSVAR_CR DUK_OP_CSVAR_CR3609,196553
#define DUK_OP_CSVAR_RC DUK_OP_CSVAR_RC3610,196593
#define DUK_OP_CSVAR_CC DUK_OP_CSVAR_CC3611,196633
#define DUK_OP_CALL0 DUK_OP_CALL03612,196673
#define DUK_OP_CALL1 DUK_OP_CALL13613,196754
#define DUK_OP_CALL2 DUK_OP_CALL23614,196794
#define DUK_OP_CALL3 DUK_OP_CALL33615,196834
#define DUK_OP_CALL4 DUK_OP_CALL43616,196874
#define DUK_OP_CALL5 DUK_OP_CALL53617,196914
#define DUK_OP_CALL6 DUK_OP_CALL63618,196954
#define DUK_OP_CALL7 DUK_OP_CALL73619,196994
#define DUK_OP_CALL8 DUK_OP_CALL83620,197034
#define DUK_OP_CALL9 DUK_OP_CALL93621,197074
#define DUK_OP_CALL10 DUK_OP_CALL103622,197114
#define DUK_OP_CALL11 DUK_OP_CALL113623,197154
#define DUK_OP_CALL12 DUK_OP_CALL123624,197194
#define DUK_OP_CALL13 DUK_OP_CALL133625,197234
#define DUK_OP_CALL14 DUK_OP_CALL143626,197274
#define DUK_OP_CALL15 DUK_OP_CALL153627,197314
#define DUK_OP_NEWOBJ DUK_OP_NEWOBJ3628,197354
#define DUK_OP_NEWARR DUK_OP_NEWARR3629,197394
#define DUK_OP_MPUTOBJ DUK_OP_MPUTOBJ3630,197434
#define DUK_OP_MPUTOBJI DUK_OP_MPUTOBJI3631,197474
#define DUK_OP_INITSET DUK_OP_INITSET3632,197514
#define DUK_OP_INITGET DUK_OP_INITGET3633,197554
#define DUK_OP_MPUTARR DUK_OP_MPUTARR3634,197594
#define DUK_OP_MPUTARRI DUK_OP_MPUTARRI3635,197634
#define DUK_OP_SETALEN DUK_OP_SETALEN3636,197674
#define DUK_OP_INITENUM DUK_OP_INITENUM3637,197714
#define DUK_OP_NEXTENUM DUK_OP_NEXTENUM3638,197754
#define DUK_OP_NEWTARGET DUK_OP_NEWTARGET3639,197794
#define DUK_OP_DEBUGGER DUK_OP_DEBUGGER3640,197834
#define DUK_OP_NOP DUK_OP_NOP3641,197874
#define DUK_OP_INVALID DUK_OP_INVALID3642,197914
#define DUK_OP_UNUSED207 DUK_OP_UNUSED2073643,197954
#define DUK_OP_GETPROPC DUK_OP_GETPROPC3644,197994
#define DUK_OP_GETPROPC_RR DUK_OP_GETPROPC_RR3645,198034
#define DUK_OP_GETPROPC_CR DUK_OP_GETPROPC_CR3646,198074
#define DUK_OP_GETPROPC_RC DUK_OP_GETPROPC_RC3647,198114
#define DUK_OP_GETPROPC_CC DUK_OP_GETPROPC_CC3648,198154
#define DUK_OP_UNUSED212 DUK_OP_UNUSED2123649,198194
#define DUK_OP_UNUSED213 DUK_OP_UNUSED2133650,198234
#define DUK_OP_UNUSED214 DUK_OP_UNUSED2143651,198274
#define DUK_OP_UNUSED215 DUK_OP_UNUSED2153652,198314
#define DUK_OP_UNUSED216 DUK_OP_UNUSED2163653,198354
#define DUK_OP_UNUSED217 DUK_OP_UNUSED2173654,198394
#define DUK_OP_UNUSED218 DUK_OP_UNUSED2183655,198434
#define DUK_OP_UNUSED219 DUK_OP_UNUSED2193656,198474
#define DUK_OP_UNUSED220 DUK_OP_UNUSED2203657,198514
#define DUK_OP_UNUSED221 DUK_OP_UNUSED2213658,198554
#define DUK_OP_UNUSED222 DUK_OP_UNUSED2223659,198594
#define DUK_OP_UNUSED223 DUK_OP_UNUSED2233660,198634
#define DUK_OP_UNUSED224 DUK_OP_UNUSED2243661,198674
#define DUK_OP_UNUSED225 DUK_OP_UNUSED2253662,198714
#define DUK_OP_UNUSED226 DUK_OP_UNUSED2263663,198754
#define DUK_OP_UNUSED227 DUK_OP_UNUSED2273664,198794
#define DUK_OP_UNUSED228 DUK_OP_UNUSED2283665,198834
#define DUK_OP_UNUSED229 DUK_OP_UNUSED2293666,198874
#define DUK_OP_UNUSED230 DUK_OP_UNUSED2303667,198914
#define DUK_OP_UNUSED231 DUK_OP_UNUSED2313668,198954
#define DUK_OP_UNUSED232 DUK_OP_UNUSED2323669,198994
#define DUK_OP_UNUSED233 DUK_OP_UNUSED2333670,199034
#define DUK_OP_UNUSED234 DUK_OP_UNUSED2343671,199074
#define DUK_OP_UNUSED235 DUK_OP_UNUSED2353672,199114
#define DUK_OP_UNUSED236 DUK_OP_UNUSED2363673,199154
#define DUK_OP_UNUSED237 DUK_OP_UNUSED2373674,199194
#define DUK_OP_UNUSED238 DUK_OP_UNUSED2383675,199234
#define DUK_OP_UNUSED239 DUK_OP_UNUSED2393676,199274
#define DUK_OP_UNUSED240 DUK_OP_UNUSED2403677,199314
#define DUK_OP_UNUSED241 DUK_OP_UNUSED2413678,199354
#define DUK_OP_UNUSED242 DUK_OP_UNUSED2423679,199394
#define DUK_OP_UNUSED243 DUK_OP_UNUSED2433680,199434
#define DUK_OP_UNUSED244 DUK_OP_UNUSED2443681,199474
#define DUK_OP_UNUSED245 DUK_OP_UNUSED2453682,199514
#define DUK_OP_UNUSED246 DUK_OP_UNUSED2463683,199554
#define DUK_OP_UNUSED247 DUK_OP_UNUSED2473684,199594
#define DUK_OP_UNUSED248 DUK_OP_UNUSED2483685,199634
#define DUK_OP_UNUSED249 DUK_OP_UNUSED2493686,199674
#define DUK_OP_UNUSED250 DUK_OP_UNUSED2503687,199714
#define DUK_OP_UNUSED251 DUK_OP_UNUSED2513688,199754
#define DUK_OP_UNUSED252 DUK_OP_UNUSED2523689,199794
#define DUK_OP_UNUSED253 DUK_OP_UNUSED2533690,199834
#define DUK_OP_UNUSED254 DUK_OP_UNUSED2543691,199874
#define DUK_OP_UNUSED255 DUK_OP_UNUSED2553692,199914
#define DUK_OP_NONE DUK_OP_NONE3693,199954
#define DUK_BC_TRYCATCH_FLAG_HAVE_CATCH DUK_BC_TRYCATCH_FLAG_HAVE_CATCH3699,200226
#define DUK_BC_TRYCATCH_FLAG_HAVE_FINALLY DUK_BC_TRYCATCH_FLAG_HAVE_FINALLY3700,200280
#define DUK_BC_TRYCATCH_FLAG_CATCH_BINDING DUK_BC_TRYCATCH_FLAG_CATCH_BINDING3701,200334
#define DUK_BC_TRYCATCH_FLAG_WITH_BINDING DUK_BC_TRYCATCH_FLAG_WITH_BINDING3702,200388
#define DUK_BC_DECLVAR_FLAG_FUNC_DECL DUK_BC_DECLVAR_FLAG_FUNC_DECL3707,200549
#define DUK_BC_CALL_FLAG_TAILCALL DUK_BC_CALL_FLAG_TAILCALL3712,200742
#define DUK_BC_CALL_FLAG_CONSTRUCT DUK_BC_CALL_FLAG_CONSTRUCT3713,200796
#define DUK_BC_CALL_FLAG_CALLED_AS_EVAL DUK_BC_CALL_FLAG_CALLED_AS_EVAL3714,200850
#define DUK_BC_CALL_FLAG_INDIRECT DUK_BC_CALL_FLAG_INDIRECT3715,200904
#define DUK_BC_LDINT_BIAS DUK_BC_LDINT_BIAS3718,200999
#define DUK_BC_LDINTX_SHIFT DUK_BC_LDINTX_SHIFT3719,201046
#define DUK_BC_JUMP_BIAS DUK_BC_JUMP_BIAS3720,201085
#define DUK_LEXER_H_INCLUDEDDUK_LEXER_H_INCLUDED3730,201285
typedef void (*duk_re_range_callback)(void *user, duk_codepoint_t r1, duk_codepoint_t r2, duk_boduk_re_range_callback3732,201315
#define DUK_LEXER_INITCTX(DUK_LEXER_INITCTX3753,202349
#define DUK_LEXER_SETPOINT(DUK_LEXER_SETPOINT3755,202413
#define DUK_LEXER_GETPOINT(DUK_LEXER_GETPOINT3757,202484
#define DUK_LEXER_WINDOW_SIZE DUK_LEXER_WINDOW_SIZE3760,202629
#define DUK_LEXER_BUFFER_SIZE DUK_LEXER_BUFFER_SIZE3762,202723
#define DUK_TOK_MINVAL DUK_TOK_MINVAL3765,202784
#define DUK_TOK_EOF DUK_TOK_EOF3768,202880
#define DUK_TOK_IDENTIFIER DUK_TOK_IDENTIFIER3771,202973
#define DUK_TOK_START_RESERVED DUK_TOK_START_RESERVED3774,203057
#define DUK_TOK_BREAK DUK_TOK_BREAK3775,203109
#define DUK_TOK_CASE DUK_TOK_CASE3776,203161
#define DUK_TOK_CATCH DUK_TOK_CATCH3777,203213
#define DUK_TOK_CONTINUE DUK_TOK_CONTINUE3778,203265
#define DUK_TOK_DEBUGGER DUK_TOK_DEBUGGER3779,203317
#define DUK_TOK_DEFAULT DUK_TOK_DEFAULT3780,203369
#define DUK_TOK_DELETE DUK_TOK_DELETE3781,203421
#define DUK_TOK_DO DUK_TOK_DO3782,203473
#define DUK_TOK_ELSE DUK_TOK_ELSE3783,203525
#define DUK_TOK_FINALLY DUK_TOK_FINALLY3784,203578
#define DUK_TOK_FOR DUK_TOK_FOR3785,203631
#define DUK_TOK_FUNCTION DUK_TOK_FUNCTION3786,203684
#define DUK_TOK_IF DUK_TOK_IF3787,203737
#define DUK_TOK_IN DUK_TOK_IN3788,203790
#define DUK_TOK_INSTANCEOF DUK_TOK_INSTANCEOF3789,203843
#define DUK_TOK_NEW DUK_TOK_NEW3790,203896
#define DUK_TOK_RETURN DUK_TOK_RETURN3791,203949
#define DUK_TOK_SWITCH DUK_TOK_SWITCH3792,204002
#define DUK_TOK_THIS DUK_TOK_THIS3793,204055
#define DUK_TOK_THROW DUK_TOK_THROW3794,204108
#define DUK_TOK_TRY DUK_TOK_TRY3795,204161
#define DUK_TOK_TYPEOF DUK_TOK_TYPEOF3796,204214
#define DUK_TOK_VAR DUK_TOK_VAR3797,204267
#define DUK_TOK_CONST DUK_TOK_CONST3798,204320
#define DUK_TOK_VOID DUK_TOK_VOID3799,204373
#define DUK_TOK_WHILE DUK_TOK_WHILE3800,204426
#define DUK_TOK_WITH DUK_TOK_WITH3801,204479
#define DUK_TOK_CLASS DUK_TOK_CLASS3804,204577
#define DUK_TOK_ENUM DUK_TOK_ENUM3805,204630
#define DUK_TOK_EXPORT DUK_TOK_EXPORT3806,204683
#define DUK_TOK_EXTENDS DUK_TOK_EXTENDS3807,204736
#define DUK_TOK_IMPORT DUK_TOK_IMPORT3808,204789
#define DUK_TOK_SUPER DUK_TOK_SUPER3809,204842
#define DUK_TOK_NULL DUK_TOK_NULL3814,204996
#define DUK_TOK_TRUE DUK_TOK_TRUE3815,205049
#define DUK_TOK_FALSE DUK_TOK_FALSE3816,205102
#define DUK_TOK_START_STRICT_RESERVED DUK_TOK_START_STRICT_RESERVED3819,205226
#define DUK_TOK_IMPLEMENTS DUK_TOK_IMPLEMENTS3820,205296
#define DUK_TOK_INTERFACE DUK_TOK_INTERFACE3821,205349
#define DUK_TOK_LET DUK_TOK_LET3822,205402
#define DUK_TOK_PACKAGE DUK_TOK_PACKAGE3823,205455
#define DUK_TOK_PRIVATE DUK_TOK_PRIVATE3824,205508
#define DUK_TOK_PROTECTED DUK_TOK_PROTECTED3825,205561
#define DUK_TOK_PUBLIC DUK_TOK_PUBLIC3826,205614
#define DUK_TOK_STATIC DUK_TOK_STATIC3827,205667
#define DUK_TOK_YIELD DUK_TOK_YIELD3828,205720
#define DUK_TOK_END_RESERVED DUK_TOK_END_RESERVED3830,205774
#define DUK_TOK_GET DUK_TOK_GET3835,205991
#define DUK_TOK_SET DUK_TOK_SET3836,206044
#define DUK_TOK_LCURLY DUK_TOK_LCURLY3839,206162
#define DUK_TOK_RCURLY DUK_TOK_RCURLY3840,206215
#define DUK_TOK_LBRACKET DUK_TOK_LBRACKET3841,206268
#define DUK_TOK_RBRACKET DUK_TOK_RBRACKET3842,206321
#define DUK_TOK_LPAREN DUK_TOK_LPAREN3843,206374
#define DUK_TOK_RPAREN DUK_TOK_RPAREN3844,206427
#define DUK_TOK_PERIOD DUK_TOK_PERIOD3845,206480
#define DUK_TOK_SEMICOLON DUK_TOK_SEMICOLON3846,206533
#define DUK_TOK_COMMA DUK_TOK_COMMA3847,206586
#define DUK_TOK_LT DUK_TOK_LT3848,206639
#define DUK_TOK_GT DUK_TOK_GT3849,206692
#define DUK_TOK_LE DUK_TOK_LE3850,206745
#define DUK_TOK_GE DUK_TOK_GE3851,206798
#define DUK_TOK_EQ DUK_TOK_EQ3852,206851
#define DUK_TOK_NEQ DUK_TOK_NEQ3853,206904
#define DUK_TOK_SEQ DUK_TOK_SEQ3854,206957
#define DUK_TOK_SNEQ DUK_TOK_SNEQ3855,207010
#define DUK_TOK_ADD DUK_TOK_ADD3856,207063
#define DUK_TOK_SUB DUK_TOK_SUB3857,207116
#define DUK_TOK_MUL DUK_TOK_MUL3858,207169
#define DUK_TOK_DIV DUK_TOK_DIV3859,207222
#define DUK_TOK_MOD DUK_TOK_MOD3860,207275
#define DUK_TOK_EXP DUK_TOK_EXP3861,207328
#define DUK_TOK_INCREMENT DUK_TOK_INCREMENT3862,207381
#define DUK_TOK_DECREMENT DUK_TOK_DECREMENT3863,207434
#define DUK_TOK_ALSHIFT DUK_TOK_ALSHIFT3864,207487
#define DUK_TOK_ARSHIFT DUK_TOK_ARSHIFT3865,207592
#define DUK_TOK_RSHIFT DUK_TOK_RSHIFT3866,207645
#define DUK_TOK_BAND DUK_TOK_BAND3867,207698
#define DUK_TOK_BOR DUK_TOK_BOR3868,207751
#define DUK_TOK_BXOR DUK_TOK_BXOR3869,207804
#define DUK_TOK_LNOT DUK_TOK_LNOT3870,207857
#define DUK_TOK_BNOT DUK_TOK_BNOT3871,207910
#define DUK_TOK_LAND DUK_TOK_LAND3872,207963
#define DUK_TOK_LOR DUK_TOK_LOR3873,208016
#define DUK_TOK_QUESTION DUK_TOK_QUESTION3874,208069
#define DUK_TOK_COLON DUK_TOK_COLON3875,208122
#define DUK_TOK_EQUALSIGN DUK_TOK_EQUALSIGN3876,208175
#define DUK_TOK_ADD_EQ DUK_TOK_ADD_EQ3877,208228
#define DUK_TOK_SUB_EQ DUK_TOK_SUB_EQ3878,208281
#define DUK_TOK_MUL_EQ DUK_TOK_MUL_EQ3879,208334
#define DUK_TOK_DIV_EQ DUK_TOK_DIV_EQ3880,208387
#define DUK_TOK_MOD_EQ DUK_TOK_MOD_EQ3881,208440
#define DUK_TOK_EXP_EQ DUK_TOK_EXP_EQ3882,208493
#define DUK_TOK_ALSHIFT_EQ DUK_TOK_ALSHIFT_EQ3883,208546
#define DUK_TOK_ARSHIFT_EQ DUK_TOK_ARSHIFT_EQ3884,208599
#define DUK_TOK_RSHIFT_EQ DUK_TOK_RSHIFT_EQ3885,208652
#define DUK_TOK_BAND_EQ DUK_TOK_BAND_EQ3886,208705
#define DUK_TOK_BOR_EQ DUK_TOK_BOR_EQ3887,208758
#define DUK_TOK_BXOR_EQ DUK_TOK_BXOR_EQ3888,208811
#define DUK_TOK_NUMBER DUK_TOK_NUMBER3893,208975
#define DUK_TOK_STRING DUK_TOK_STRING3894,209028
#define DUK_TOK_REGEXP DUK_TOK_REGEXP3895,209082
#define DUK_TOK_MAXVAL DUK_TOK_MAXVAL3897,209137
#define DUK_TOK_INVALID DUK_TOK_INVALID3899,209209
#define DUK_STRIDX_TO_TOK(DUK_STRIDX_TO_TOK3902,209339
#define DUK_RETOK_EOF DUK_RETOK_EOF4047,214138
#define DUK_RETOK_DISJUNCTION DUK_RETOK_DISJUNCTION4048,214191
#define DUK_RETOK_QUANTIFIER DUK_RETOK_QUANTIFIER4049,214244
#define DUK_RETOK_ASSERT_START DUK_RETOK_ASSERT_START4050,214297
#define DUK_RETOK_ASSERT_END DUK_RETOK_ASSERT_END4051,214350
#define DUK_RETOK_ASSERT_WORD_BOUNDARY DUK_RETOK_ASSERT_WORD_BOUNDARY4052,214403
#define DUK_RETOK_ASSERT_NOT_WORD_BOUNDARY DUK_RETOK_ASSERT_NOT_WORD_BOUNDARY4053,214456
#define DUK_RETOK_ASSERT_START_POS_LOOKAHEAD DUK_RETOK_ASSERT_START_POS_LOOKAHEAD4054,214509
#define DUK_RETOK_ASSERT_START_NEG_LOOKAHEAD DUK_RETOK_ASSERT_START_NEG_LOOKAHEAD4055,214562
#define DUK_RETOK_ATOM_PERIOD DUK_RETOK_ATOM_PERIOD4056,214615
#define DUK_RETOK_ATOM_CHAR DUK_RETOK_ATOM_CHAR4057,214668
#define DUK_RETOK_ATOM_DIGIT DUK_RETOK_ATOM_DIGIT4058,214722
#define DUK_RETOK_ATOM_NOT_DIGIT DUK_RETOK_ATOM_NOT_DIGIT4059,214814
#define DUK_RETOK_ATOM_WHITE DUK_RETOK_ATOM_WHITE4060,214880
#define DUK_RETOK_ATOM_NOT_WHITE DUK_RETOK_ATOM_NOT_WHITE4061,214946
#define DUK_RETOK_ATOM_WORD_CHAR DUK_RETOK_ATOM_WORD_CHAR4062,215012
#define DUK_RETOK_ATOM_NOT_WORD_CHAR DUK_RETOK_ATOM_NOT_WORD_CHAR4063,215078
#define DUK_RETOK_ATOM_BACKREFERENCE DUK_RETOK_ATOM_BACKREFERENCE4064,215144
#define DUK_RETOK_ATOM_START_CAPTURE_GROUP DUK_RETOK_ATOM_START_CAPTURE_GROUP4065,215198
#define DUK_RETOK_ATOM_START_NONCAPTURE_GROUP DUK_RETOK_ATOM_START_NONCAPTURE_GROUP4066,215252
#define DUK_RETOK_ATOM_START_CHARCLASS DUK_RETOK_ATOM_START_CHARCLASS4067,215306
#define DUK_RETOK_ATOM_START_CHARCLASS_INVERTED DUK_RETOK_ATOM_START_CHARCLASS_INVERTED4068,215360
#define DUK_RETOK_ATOM_END_GROUP DUK_RETOK_ATOM_END_GROUP4069,215414
#define DUK_LEXER_TEMP_BUF_LIMIT DUK_LEXER_TEMP_BUF_LIMIT4072,215508
struct duk_token {duk_token4078,215778
	duk_small_uint_t t;           /* token type (with reserved word identification) */t4079,215797
	duk_small_uint_t t_nores;     /* token type (with reserved words as DUK_TOK_IDENTIFER) */t_nores4080,215881
	duk_double_t num;             /* numeric value of token */num4081,215972
	duk_hstring *str1;            /* string 1 of token (borrowed, stored to ctx->slot1_idx) */str14082,216032
	duk_hstring *str2;            /* string 2 of token (borrowed, stored to ctx->slot2_idx) */str24083,216124
	duk_size_t start_offset;      /* start byte offset of token in lexer input */start_offset4084,216216
	duk_int_t start_line;         /* start line of token (first char) */start_line4085,216295
	duk_int_t num_escapes;        /* number of escapes and line continuations (for directive prolognum_escapes4086,216365
	duk_bool_t lineterm;          /* token was preceded by a lineterm */lineterm4087,216468
	duk_bool_t allow_auto_semi;   /* token allows automatic semicolon insertion (eof or preceded byallow_auto_semi4088,216538
#define DUK_RE_QUANTIFIER_INFINITE DUK_RE_QUANTIFIER_INFINITE4091,216651
struct duk_re_token {duk_re_token4094,216753
	duk_small_uint_t t;          /* token type */t4095,216775
	duk_small_uint_t greedy;greedy4096,216822
	duk_uint32_t num;            /* numeric value (character, count) */num4097,216848
	duk_uint32_t qmin;qmin4098,216917
	duk_uint32_t qmax;qmax4099,216937
struct duk_lexer_point {duk_lexer_point4103,217020
	duk_size_t offset;offset4104,217045
	duk_int_t line;line4105,217065
struct duk_lexer_codepoint {duk_lexer_codepoint4109,217153
	duk_codepoint_t codepoint;codepoint4110,217182
	duk_size_t offset;offset4111,217210
	duk_int_t line;line4112,217230
struct duk_lexer_ctx {duk_lexer_ctx4116,217329
	duk_lexer_codepoint *window; /* unicode code points, window[0] is always next, points to 'buffewindow4118,217394
	duk_lexer_codepoint buffer[DUK_LEXER_BUFFER_SIZE];buffer4119,217496
	duk_hthread *thr;                              /* thread; minimizes argument passing */thr4124,217666
	const duk_uint8_t *input;                      /* input string (may be a user pointer) */input4126,217756
	duk_size_t input_length;                       /* input byte length */input_length4127,217847
	duk_size_t input_offset;                       /* input offset for window leading edge (not wininput_offset4128,217919
	duk_int_t input_line;                          /* input linenumber at input_offset (not window[input_line4129,218026
	duk_idx_t slot1_idx;                           /* valstack slot for 1st token value */slot1_idx4131,218141
	duk_idx_t slot2_idx;                           /* valstack slot for 2nd token value */slot2_idx4132,218229
	duk_idx_t buf_idx;                             /* valstack slot for temp buffer */buf_idx4133,218317
	duk_hbuffer_dynamic *buf;                      /* temp accumulation buffer */buf4134,218401
	duk_bufwriter_ctx bw;                          /* bufwriter for temp accumulation */bw4135,218480
	duk_int_t token_count;                         /* number of tokens parsed */token_count4137,218567
	duk_int_t token_limit;                         /* maximum token count before error (sanity backtoken_limit4138,218645
	duk_small_uint_t flags;                        /* lexer flags, use compiler flag defines for noflags4140,218751
#define DUK_JS_COMPILER_H_INCLUDEDDUK_JS_COMPILER_H_INCLUDED4170,219853
#define DUK_COMPILER_TOKEN_LIMIT DUK_COMPILER_TOKEN_LIMIT4173,219922
#define DUK_COMPILER_PEEPHOLE_MAXITER DUK_COMPILER_PEEPHOLE_MAXITER4176,220086
#define DUK_COMPILER_MAX_BYTECODE_LENGTH DUK_COMPILER_MAX_BYTECODE_LENGTH4179,220178
#define DUK_IVAL_NONE DUK_IVAL_NONE4189,220518
#define DUK_IVAL_PLAIN DUK_IVAL_PLAIN4190,220568
#define DUK_IVAL_ARITH DUK_IVAL_ARITH4191,220638
#define DUK_IVAL_PROP DUK_IVAL_PROP4192,220738
#define DUK_IVAL_VAR DUK_IVAL_VAR4193,220795
#define DUK_ISPEC_NONE DUK_ISPEC_NONE4195,220853
#define DUK_ISPEC_VALUE DUK_ISPEC_VALUE4196,220903
#define DUK_ISPEC_REGCONST DUK_ISPEC_REGCONST4197,220976
#define DUK_REGCONST_CONST_MARKER DUK_REGCONST_CONST_MARKER4203,221236
typedef duk_int32_t duk_regconst_t;duk_regconst_t4208,221459
typedef struct {__anonffb0efc104084210,221496
	duk_small_uint_t t;          /* DUK_ISPEC_XXX */t4211,221513
	duk_regconst_t regconst;regconst4212,221563
	duk_idx_t valstack_idx;      /* always set; points to a reserved valstack slot */valstack_idx4213,221589
} duk_ispec;duk_ispec4214,221672
typedef struct {__anonffb0efc105084216,221686
	duk_small_uint_t t;          /* DUK_IVAL_XXX */t4225,221867
	duk_small_uint_t op;         /* bytecode opcode for binary ops */op4226,221916
	duk_ispec x1;x14227,221983
	duk_ispec x2;x24228,221998
} duk_ivalue;duk_ivalue4229,222013
struct duk_compiler_instr {duk_compiler_instr4237,222163
	duk_instr_t ins;ins4238,222191
	duk_uint32_t line;line4240,222238
#define DUK_LABEL_FLAG_ALLOW_BREAK DUK_LABEL_FLAG_ALLOW_BREAK4248,222296
#define DUK_LABEL_FLAG_ALLOW_CONTINUE DUK_LABEL_FLAG_ALLOW_CONTINUE4249,222347
#define DUK_DECL_TYPE_VAR DUK_DECL_TYPE_VAR4251,222399
#define DUK_DECL_TYPE_FUNC DUK_DECL_TYPE_FUNC4252,222442
typedef struct {__anonffb0efc106084255,222518
	duk_small_uint_t flags;flags4256,222535
	duk_int_t label_id;          /* numeric label_id (-1 reserved as marker) */label_id4257,222560
	duk_hstring *h_label;        /* borrowed label name */h_label4258,222637
	duk_int_t catch_depth;       /* catch depth at point of definition */catch_depth4259,222693
	duk_int_t pc_label;          /* pc of label statement:pc_label4260,222764
} duk_labelinfo;duk_labelinfo4270,223194
struct duk_compiler_func {duk_compiler_func4273,223289
	duk_bufwriter_ctx bw_code;          /* bufwriter for code */bw_code4279,223518
	duk_hstring *h_name;                /* function name (borrowed reference), ends up in _name */h_name4281,223581
	duk_hobject *h_consts;              /* array */h_consts4283,223708
	duk_hobject *h_funcs;               /* array of function templates: [func1, offset1, line1, funh_funcs4284,223757
	duk_hobject *h_decls;               /* array of declarations: [ name1, val1, name2, val2, ... ]h_decls4287,224018
	duk_hobject *h_labelnames;          /* array of active label names */h_labelnames4291,224363
	duk_hbuffer_dynamic *h_labelinfos;  /* C array of duk_labelinfo */h_labelinfos4292,224434
	duk_hobject *h_argnames;            /* array of formal argument names (-> _Formals) */h_argnames4293,224502
	duk_hobject *h_varmap;              /* variable map for pass 2 (identifier -> register number oh_varmap4294,224590
	duk_idx_t consts_idx;consts_idx4298,224786
	duk_idx_t funcs_idx;funcs_idx4299,224809
	duk_idx_t decls_idx;decls_idx4300,224831
	duk_idx_t labelnames_idx;labelnames_idx4301,224853
	duk_idx_t labelinfos_idx;labelinfos_idx4302,224880
	duk_idx_t argnames_idx;argnames_idx4303,224907
	duk_idx_t varmap_idx;varmap_idx4304,224932
	duk_regconst_t temp_first;           /* first register that is a temporary (below: variables) *temp_first4307,224982
	duk_regconst_t temp_next;            /* next temporary register to allocate */temp_next4308,225080
	duk_regconst_t temp_max;             /* highest value of temp_reg (temp_max - 1 is highest usedtemp_max4309,225160
	duk_regconst_t shuffle1;shuffle14312,225323
	duk_regconst_t shuffle2;shuffle24313,225349
	duk_regconst_t shuffle3;shuffle34314,225375
	duk_int_t nud_count;nud_count4317,225452
	duk_int_t led_count;led_count4318,225474
	duk_int_t paren_level;              /* parenthesis count, 0 = top level */paren_level4319,225496
	duk_bool_t expr_lhs;                /* expression is left-hand-side compatible */expr_lhs4320,225572
	duk_bool_t allow_in;                /* current paren level allows 'in' token */allow_in4321,225655
	duk_int_t stmt_next;                /* statement id allocation (running counter) */stmt_next4324,225750
	duk_int_t label_next;               /* label id allocation (running counter) */label_next4325,225835
	duk_int_t catch_depth;              /* catch stack depth */catch_depth4326,225916
	duk_int_t with_depth;               /* with stack depth (affects identifier lookups) */with_depth4327,225977
	duk_int_t fnum_next;                /* inner function numbering */fnum_next4328,226066
	duk_int_t num_formals;              /* number of formal arguments */num_formals4329,226134
	duk_regconst_t reg_stmt_value;      /* register for writing value of 'non-empty' statements (glreg_stmt_value4330,226204
	duk_int_t min_line;                 /* XXX: typing (duk_hcompfunc has duk_uint32_t) */min_line4332,226374
	duk_int_t max_line;max_line4333,226462
	duk_uint8_t is_function;             /* is an actual function (not global/eval code) */is_function4337,226515
	duk_uint8_t is_eval;                 /* is eval code */is_eval4338,226604
	duk_uint8_t is_global;               /* is global code */is_global4339,226661
	duk_uint8_t is_namebinding;          /* needs a name binding */is_namebinding4340,226720
	duk_uint8_t is_constructable;        /* result is constructable */is_constructable4341,226785
	duk_uint8_t is_setget;               /* is a setter/getter */is_setget4342,226853
	duk_uint8_t is_strict;               /* function is strict */is_strict4343,226916
	duk_uint8_t is_notail;               /* function must not be tail called */is_notail4344,226979
	duk_uint8_t in_directive_prologue;   /* parsing in "directive prologue", recognize directives *in_directive_prologue4345,227056
	duk_uint8_t in_scanning;             /* parsing in "scanning" phase (first pass) */in_scanning4346,227154
	duk_uint8_t may_direct_eval;         /* function may call direct eval */may_direct_eval4347,227239
	duk_uint8_t id_access_arguments;     /* function refers to 'arguments' identifier */id_access_arguments4348,227313
	duk_uint8_t id_access_slow;          /* function makes one or more slow path accesses that won'id_access_slow4349,227399
	duk_uint8_t id_access_slow_own;      /* function makes one or more slow path accesses that may id_access_slow_own4350,227527
	duk_uint8_t is_arguments_shadowed;   /* argument/function declaration shadows 'arguments' */is_arguments_shadowed4351,227653
	duk_uint8_t needs_shuffle;           /* function needs shuffle registers */needs_shuffle4352,227747
	duk_uint8_t reject_regexp_in_adv;    /* reject RegExp literal on next advance() call; needed foreject_regexp_in_adv4353,227824
	duk_uint8_t allow_regexp_in_adv;     /* allow RegExp literal on next advance() call */allow_regexp_in_adv4354,227961
struct duk_compiler_ctx {duk_compiler_ctx4357,228053
	duk_hthread *thr;thr4358,228079
	duk_hstring *h_filename;            /* borrowed reference */h_filename4361,228175
	duk_lexer_ctx lex;lex4364,228310
	duk_token prev_token;prev_token4367,228377
	duk_token curr_token;curr_token4368,228400
	duk_idx_t tok11_idx;                /* curr_token slot1 (matches 'lex' slot1_idx) */tok11_idx4369,228423
	duk_idx_t tok12_idx;                /* curr_token slot2 (matches 'lex' slot2_idx) */tok12_idx4370,228509
	duk_idx_t tok21_idx;                /* prev_token slot1 */tok21_idx4371,228595
	duk_idx_t tok22_idx;                /* prev_token slot2 */tok22_idx4372,228655
	duk_int_t recursion_depth;recursion_depth4375,228739
	duk_int_t recursion_limit;recursion_limit4376,228767
	duk_int_t emit_jumpslot_pc;emit_jumpslot_pc4379,228827
	duk_compiler_func curr_func;curr_func4382,228950
#define DUK_REGEXP_H_INCLUDEDDUK_REGEXP_H_INCLUDED4399,229344
#define DUK_RE_MAX_ATOM_COPIES DUK_RE_MAX_ATOM_COPIES4402,229427
#define DUK_RE_COMPILE_TOKEN_LIMIT DUK_RE_COMPILE_TOKEN_LIMIT4405,229508
#define DUK_RE_EXECUTE_STEPS_LIMIT DUK_RE_EXECUTE_STEPS_LIMIT4408,229605
#define DUK_REOP_MATCH DUK_REOP_MATCH4411,229693
#define DUK_REOP_CHAR DUK_REOP_CHAR4412,229738
#define DUK_REOP_PERIOD DUK_REOP_PERIOD4413,229783
#define DUK_REOP_RANGES DUK_REOP_RANGES4414,229828
#define DUK_REOP_INVRANGES DUK_REOP_INVRANGES4415,229873
#define DUK_REOP_JUMP DUK_REOP_JUMP4416,229918
#define DUK_REOP_SPLIT1 DUK_REOP_SPLIT14417,229963
#define DUK_REOP_SPLIT2 DUK_REOP_SPLIT24418,230008
#define DUK_REOP_SQMINIMAL DUK_REOP_SQMINIMAL4419,230053
#define DUK_REOP_SQGREEDY DUK_REOP_SQGREEDY4420,230098
#define DUK_REOP_SAVE DUK_REOP_SAVE4421,230144
#define DUK_REOP_WIPERANGE DUK_REOP_WIPERANGE4422,230190
#define DUK_REOP_LOOKPOS DUK_REOP_LOOKPOS4423,230236
#define DUK_REOP_LOOKNEG DUK_REOP_LOOKNEG4424,230282
#define DUK_REOP_BACKREFERENCE DUK_REOP_BACKREFERENCE4425,230328
#define DUK_REOP_ASSERT_START DUK_REOP_ASSERT_START4426,230374
#define DUK_REOP_ASSERT_END DUK_REOP_ASSERT_END4427,230420
#define DUK_REOP_ASSERT_WORD_BOUNDARY DUK_REOP_ASSERT_WORD_BOUNDARY4428,230466
#define DUK_REOP_ASSERT_NOT_WORD_BOUNDARY DUK_REOP_ASSERT_NOT_WORD_BOUNDARY4429,230512
#define DUK_RE_FLAG_GLOBAL DUK_RE_FLAG_GLOBAL4432,230571
#define DUK_RE_FLAG_IGNORE_CASE DUK_RE_FLAG_IGNORE_CASE4433,230624
#define DUK_RE_FLAG_MULTILINE DUK_RE_FLAG_MULTILINE4434,230677
struct duk_re_matcher_ctx {duk_re_matcher_ctx4436,230731
	duk_hthread *thr;thr4437,230759
	duk_uint32_t re_flags;re_flags4439,230779
	const duk_uint8_t *input;input4440,230803
	const duk_uint8_t *input_end;input_end4441,230830
	const duk_uint8_t *bytecode;bytecode4442,230861
	const duk_uint8_t *bytecode_end;bytecode_end4443,230891
	const duk_uint8_t **saved;  /* allocated from valstack (fixed buffer) */saved4444,230925
	duk_uint32_t nsaved;nsaved4445,230999
	duk_uint32_t recursion_depth;recursion_depth4446,231021
	duk_uint32_t recursion_limit;recursion_limit4447,231052
	duk_uint32_t steps_count;steps_count4448,231083
	duk_uint32_t steps_limit;steps_limit4449,231110
struct duk_re_compiler_ctx {duk_re_compiler_ctx4452,231141
	duk_hthread *thr;thr4453,231170
	duk_uint32_t re_flags;re_flags4455,231190
	duk_lexer_ctx lex;lex4456,231214
	duk_re_token curr_token;curr_token4457,231234
	duk_bufwriter_ctx bw;bw4458,231260
	duk_uint32_t captures;  /* highest capture number emitted so far (used as: ++captures) */captures4459,231283
	duk_uint32_t highest_backref;highest_backref4460,231374
	duk_uint32_t recursion_depth;recursion_depth4461,231405
	duk_uint32_t recursion_limit;recursion_limit4462,231436
	duk_uint32_t nranges;  /* internal temporary value, used for char classes */nranges4463,231467
#define DUK_HEAPHDR_H_INCLUDEDDUK_HEAPHDR_H_INCLUDED4486,232183
struct duk_heaphdr {duk_heaphdr4514,233418
	duk_uint32_t h_flags;h_flags4515,233439
	duk_size_t h_assert_refcount;h_assert_refcount4522,233671
	duk_uint16_t h_refcount;h_refcount4525,233741
	duk_uint32_t h_refcount;h_refcount4527,233801
	duk_size_t h_refcount;h_refcount4529,233833
	duk_uint16_t h_next16;h_next164534,233937
	duk_heaphdr *h_next;h_next4536,233967
	duk_uint16_t h_prev16;h_prev164542,234157
	duk_heaphdr *h_prev;h_prev4544,234187
	duk_uint16_t h_extra16;h_extra164557,234715
struct duk_heaphdr_string {duk_heaphdr_string4561,234751
	duk_uint32_t h_flags;h_flags4568,235112
	duk_size_t h_assert_refcount;h_assert_refcount4575,235344
	duk_uint16_t h_refcount;h_refcount4578,235414
	duk_uint16_t h_strextra16;  /* round out to 8 bytes */h_strextra164579,235440
	duk_uint32_t h_refcount;h_refcount4581,235530
	duk_size_t h_refcount;h_refcount4583,235562
	duk_uint16_t h_strextra16;h_strextra164586,235599
	duk_hstring *h_next;h_next4589,235669
#define DUK_HEAPHDR_FLAGS_TYPE_MASK DUK_HEAPHDR_FLAGS_TYPE_MASK4593,235735
#define DUK_HEAPHDR_FLAGS_FLAG_MASK DUK_HEAPHDR_FLAGS_FLAG_MASK4594,235789
#define DUK_HEAPHDR_FLAGS_HEAP_START DUK_HEAPHDR_FLAGS_HEAP_START4597,235934
#define DUK_HEAPHDR_FLAGS_USER_START DUK_HEAPHDR_FLAGS_USER_START4598,235998
#define DUK_HEAPHDR_HEAP_FLAG_NUMBER(DUK_HEAPHDR_HEAP_FLAG_NUMBER4600,236064
#define DUK_HEAPHDR_USER_FLAG_NUMBER(DUK_HEAPHDR_USER_FLAG_NUMBER4601,236142
#define DUK_HEAPHDR_HEAP_FLAG(DUK_HEAPHDR_HEAP_FLAG4602,236220
#define DUK_HEAPHDR_USER_FLAG(DUK_HEAPHDR_USER_FLAG4603,236307
#define DUK_HEAPHDR_FLAG_REACHABLE DUK_HEAPHDR_FLAG_REACHABLE4605,236395
#define DUK_HEAPHDR_FLAG_TEMPROOT DUK_HEAPHDR_FLAG_TEMPROOT4606,236494
#define DUK_HEAPHDR_FLAG_FINALIZABLE DUK_HEAPHDR_FLAG_FINALIZABLE4607,236606
#define DUK_HEAPHDR_FLAG_FINALIZED DUK_HEAPHDR_FLAG_FINALIZED4608,236725
#define DUK_HEAPHDR_FLAG_READONLY DUK_HEAPHDR_FLAG_READONLY4609,236843
#define DUK_HTYPE_MIN DUK_HTYPE_MIN4611,236951
#define DUK_HTYPE_STRING DUK_HTYPE_STRING4612,236994
#define DUK_HTYPE_OBJECT DUK_HTYPE_OBJECT4613,237037
#define DUK_HTYPE_BUFFER DUK_HTYPE_BUFFER4614,237080
#define DUK_HTYPE_MAX DUK_HTYPE_MAX4615,237123
#define DUK_HEAPHDR_GET_NEXT(DUK_HEAPHDR_GET_NEXT4618,237198
#define DUK_HEAPHDR_SET_NEXT(DUK_HEAPHDR_SET_NEXT4620,237313
#define DUK_HEAPHDR_GET_NEXT(DUK_HEAPHDR_GET_NEXT4624,237459
#define DUK_HEAPHDR_SET_NEXT(DUK_HEAPHDR_SET_NEXT4625,237511
#define DUK_HEAPHDR_GET_PREV(DUK_HEAPHDR_GET_PREV4632,237678
#define DUK_HEAPHDR_SET_PREV(DUK_HEAPHDR_SET_PREV4634,237793
#define DUK_HEAPHDR_GET_PREV(DUK_HEAPHDR_GET_PREV4638,237941
#define DUK_HEAPHDR_SET_PREV(DUK_HEAPHDR_SET_PREV4639,237998
#define DUK_HEAPHDR_GET_REFCOUNT(DUK_HEAPHDR_GET_REFCOUNT4646,238141
#define DUK_HEAPHDR_SET_REFCOUNT(DUK_HEAPHDR_SET_REFCOUNT4647,238197
#define DUK_HEAPHDR_PREINC_REFCOUNT(DUK_HEAPHDR_PREINC_REFCOUNT4651,238351
#define DUK_HEAPHDR_PREDEC_REFCOUNT(DUK_HEAPHDR_PREDEC_REFCOUNT4652,238443
#define DUK_HEAPHDR_GET_FLAGS_RAW(DUK_HEAPHDR_GET_FLAGS_RAW4662,238787
#define DUK_HEAPHDR_SET_FLAGS_RAW(DUK_HEAPHDR_SET_FLAGS_RAW4663,238840
#define DUK_HEAPHDR_GET_FLAGS(DUK_HEAPHDR_GET_FLAGS4666,238920
#define DUK_HEAPHDR_SET_FLAGS(DUK_HEAPHDR_SET_FLAGS4667,239003
#define DUK_HEAPHDR_GET_TYPE(DUK_HEAPHDR_GET_TYPE4670,239137
#define DUK_HEAPHDR_SET_TYPE(DUK_HEAPHDR_SET_TYPE4671,239220
#define DUK_HEAPHDR_HTYPE_VALID(DUK_HEAPHDR_HTYPE_VALID4678,239514
#define DUK_HEAPHDR_SET_TYPE_AND_FLAGS(DUK_HEAPHDR_SET_TYPE_AND_FLAGS4682,239606
#define DUK_HEAPHDR_SET_FLAG_BITS(DUK_HEAPHDR_SET_FLAG_BITS4687,239799
#define DUK_HEAPHDR_CLEAR_FLAG_BITS(DUK_HEAPHDR_CLEAR_FLAG_BITS4692,239955
#define DUK_HEAPHDR_CHECK_FLAG_BITS(DUK_HEAPHDR_CHECK_FLAG_BITS4697,240116
#define DUK_HEAPHDR_SET_REACHABLE(DUK_HEAPHDR_SET_REACHABLE4699,240193
#define DUK_HEAPHDR_CLEAR_REACHABLE(DUK_HEAPHDR_CLEAR_REACHABLE4700,240293
#define DUK_HEAPHDR_HAS_REACHABLE(DUK_HEAPHDR_HAS_REACHABLE4701,240395
#define DUK_HEAPHDR_SET_TEMPROOT(DUK_HEAPHDR_SET_TEMPROOT4703,240498
#define DUK_HEAPHDR_CLEAR_TEMPROOT(DUK_HEAPHDR_CLEAR_TEMPROOT4704,240597
#define DUK_HEAPHDR_HAS_TEMPROOT(DUK_HEAPHDR_HAS_TEMPROOT4705,240698
#define DUK_HEAPHDR_SET_FINALIZABLE(DUK_HEAPHDR_SET_FINALIZABLE4707,240800
#define DUK_HEAPHDR_CLEAR_FINALIZABLE(DUK_HEAPHDR_CLEAR_FINALIZABLE4708,240902
#define DUK_HEAPHDR_HAS_FINALIZABLE(DUK_HEAPHDR_HAS_FINALIZABLE4709,241006
#define DUK_HEAPHDR_SET_FINALIZED(DUK_HEAPHDR_SET_FINALIZED4711,241111
#define DUK_HEAPHDR_CLEAR_FINALIZED(DUK_HEAPHDR_CLEAR_FINALIZED4712,241211
#define DUK_HEAPHDR_HAS_FINALIZED(DUK_HEAPHDR_HAS_FINALIZED4713,241313
#define DUK_HEAPHDR_SET_READONLY(DUK_HEAPHDR_SET_READONLY4715,241416
#define DUK_HEAPHDR_CLEAR_READONLY(DUK_HEAPHDR_CLEAR_READONLY4716,241515
#define DUK_HEAPHDR_HAS_READONLY(DUK_HEAPHDR_HAS_READONLY4717,241616
#define DUK_HEAPHDR_GET_FLAG_RANGE(DUK_HEAPHDR_GET_FLAG_RANGE4720,241790
#define DUK_HEAPHDR_SET_FLAG_RANGE(DUK_HEAPHDR_SET_FLAG_RANGE4722,241881
#define DUK_HEAPHDR_INIT_NULLS(DUK_HEAPHDR_INIT_NULLS4730,242116
#define DUK_HEAPHDR_INIT_NULLS(DUK_HEAPHDR_INIT_NULLS4735,242274
#define DUK_HEAPHDR_STRING_INIT_NULLS(DUK_HEAPHDR_STRING_INIT_NULLS4740,242388
#define DUK_HEAPHDR_IS_OBJECT(DUK_HEAPHDR_IS_OBJECT4754,242715
#define DUK_HEAPHDR_IS_STRING(DUK_HEAPHDR_IS_STRING4755,242772
#define DUK_HEAPHDR_IS_BUFFER(DUK_HEAPHDR_IS_BUFFER4756,242853
#define DUK_HEAPHDR_ASSERT_LINKS(DUK_HEAPHDR_ASSERT_LINKS4769,243335
#define DUK_HEAPHDR_ASSERT_VALID(DUK_HEAPHDR_ASSERT_VALID4770,243433
#define DUK_HEAPHDR_ASSERT_LINKS(DUK_HEAPHDR_ASSERT_LINKS4772,243524
#define DUK_HEAPHDR_ASSERT_VALID(DUK_HEAPHDR_ASSERT_VALID4773,243582
#define DUK_REFCOUNT_H_INCLUDEDDUK_REFCOUNT_H_INCLUDED4787,244051
#define DUK_TVAL_NEEDS_REFCOUNT_UPDATE(DUK_TVAL_NEEDS_REFCOUNT_UPDATE4796,244323
#define DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE(DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE4798,244461
#define DUK_TVAL_NEEDS_REFCOUNT_UPDATE(DUK_TVAL_NEEDS_REFCOUNT_UPDATE4801,244645
#define DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE(DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE4802,244724
#define DUK_TVAL_INCREF_FAST(DUK_TVAL_INCREF_FAST4810,245058
#define DUK_TVAL_DECREF_FAST(DUK_TVAL_DECREF_FAST4821,245494
#define DUK_TVAL_DECREF_NORZ_FAST(DUK_TVAL_DECREF_NORZ_FAST4834,245969
#define DUK_HEAPHDR_INCREF_FAST(DUK_HEAPHDR_INCREF_FAST4847,246454
#define DUK_HEAPHDR_DECREF_FAST_RAW(DUK_HEAPHDR_DECREF_FAST_RAW4856,246818
#define DUK_HEAPHDR_DECREF_FAST(DUK_HEAPHDR_DECREF_FAST4867,247236
#define DUK_HEAPHDR_DECREF_NORZ_FAST(DUK_HEAPHDR_DECREF_NORZ_FAST4869,247351
#define DUK_TVAL_INCREF_SLOW(DUK_TVAL_INCREF_SLOW4875,247610
#define DUK_TVAL_DECREF_SLOW(DUK_TVAL_DECREF_SLOW4876,247695
#define DUK_TVAL_DECREF_NORZ_SLOW(DUK_TVAL_DECREF_NORZ_SLOW4877,247787
#define DUK_HEAPHDR_INCREF_SLOW(DUK_HEAPHDR_INCREF_SLOW4878,247884
#define DUK_HEAPHDR_DECREF_SLOW(DUK_HEAPHDR_DECREF_SLOW4879,247987
#define DUK_HEAPHDR_DECREF_NORZ_SLOW(DUK_HEAPHDR_DECREF_NORZ_SLOW4880,248097
#define DUK_HSTRING_INCREF_SLOW(DUK_HSTRING_INCREF_SLOW4881,248212
#define DUK_HSTRING_DECREF_SLOW(DUK_HSTRING_DECREF_SLOW4882,248315
#define DUK_HSTRING_DECREF_NORZ_SLOW(DUK_HSTRING_DECREF_NORZ_SLOW4883,248425
#define DUK_HBUFFER_INCREF_SLOW(DUK_HBUFFER_INCREF_SLOW4884,248540
#define DUK_HBUFFER_DECREF_SLOW(DUK_HBUFFER_DECREF_SLOW4885,248643
#define DUK_HBUFFER_DECREF_NORZ_SLOW(DUK_HBUFFER_DECREF_NORZ_SLOW4886,248753
#define DUK_HOBJECT_INCREF_SLOW(DUK_HOBJECT_INCREF_SLOW4887,248868
#define DUK_HOBJECT_DECREF_SLOW(DUK_HOBJECT_DECREF_SLOW4888,248971
#define DUK_HOBJECT_DECREF_NORZ_SLOW(DUK_HOBJECT_DECREF_NORZ_SLOW4889,249081
#define DUK_TVAL_INCREF(DUK_TVAL_INCREF4899,249546
#define DUK_TVAL_DECREF(DUK_TVAL_DECREF4900,249626
#define DUK_TVAL_DECREF_NORZ(DUK_TVAL_DECREF_NORZ4901,249706
#define DUK_HEAPHDR_INCREF(DUK_HEAPHDR_INCREF4902,249791
#define DUK_HEAPHDR_DECREF(DUK_HEAPHDR_DECREF4903,249873
#define DUK_HEAPHDR_DECREF_NORZ(DUK_HEAPHDR_DECREF_NORZ4904,249993
#define DUK_HSTRING_INCREF(DUK_HSTRING_INCREF4905,250118
#define DUK_HSTRING_DECREF(DUK_HSTRING_DECREF4906,250211
#define DUK_HSTRING_DECREF_NORZ(DUK_HSTRING_DECREF_NORZ4907,250331
#define DUK_HOBJECT_INCREF(DUK_HOBJECT_INCREF4908,250476
#define DUK_HOBJECT_DECREF(DUK_HOBJECT_DECREF4909,250569
#define DUK_HOBJECT_DECREF_NORZ(DUK_HOBJECT_DECREF_NORZ4910,250689
#define DUK_HBUFFER_INCREF(DUK_HBUFFER_INCREF4911,250814
#define DUK_HBUFFER_DECREF(DUK_HBUFFER_DECREF4912,250907
#define DUK_HBUFFER_DECREF_NORZ(DUK_HBUFFER_DECREF_NORZ4913,251027
#define DUK_HCOMPFUNC_INCREF(DUK_HCOMPFUNC_INCREF4914,251172
#define DUK_HCOMPFUNC_DECREF(DUK_HCOMPFUNC_DECREF4915,251271
#define DUK_HCOMPFUNC_DECREF_NORZ(DUK_HCOMPFUNC_DECREF_NORZ4916,251391
#define DUK_HNATFUNC_INCREF(DUK_HNATFUNC_INCREF4917,251516
#define DUK_HNATFUNC_DECREF(DUK_HNATFUNC_DECREF4918,251615
#define DUK_HNATFUNC_DECREF_NORZ(DUK_HNATFUNC_DECREF_NORZ4919,251735
#define DUK_HBUFOBJ_INCREF(DUK_HBUFOBJ_INCREF4920,251860
#define DUK_HBUFOBJ_DECREF(DUK_HBUFOBJ_DECREF4921,251959
#define DUK_HBUFOBJ_DECREF_NORZ(DUK_HBUFOBJ_DECREF_NORZ4922,252079
#define DUK_HTHREAD_INCREF(DUK_HTHREAD_INCREF4923,252204
#define DUK_HTHREAD_DECREF(DUK_HTHREAD_DECREF4924,252303
#define DUK_HTHREAD_DECREF_NORZ(DUK_HTHREAD_DECREF_NORZ4925,252423
#define DUK_TVAL_INCREF(DUK_TVAL_INCREF4927,252554
#define DUK_TVAL_DECREF(DUK_TVAL_DECREF4928,252634
#define DUK_TVAL_DECREF_NORZ(DUK_TVAL_DECREF_NORZ4929,252714
#define DUK_HEAPHDR_INCREF(DUK_HEAPHDR_INCREF4930,252799
#define DUK_HEAPHDR_DECREF(DUK_HEAPHDR_DECREF4931,252881
#define DUK_HEAPHDR_DECREF_NORZ(DUK_HEAPHDR_DECREF_NORZ4932,252963
#define DUK_HSTRING_INCREF(DUK_HSTRING_INCREF4933,253050
#define DUK_HSTRING_DECREF(DUK_HSTRING_DECREF4934,253143
#define DUK_HSTRING_DECREF_NORZ(DUK_HSTRING_DECREF_NORZ4935,253225
#define DUK_HOBJECT_INCREF(DUK_HOBJECT_INCREF4936,253312
#define DUK_HOBJECT_DECREF(DUK_HOBJECT_DECREF4937,253405
#define DUK_HOBJECT_DECREF_NORZ(DUK_HOBJECT_DECREF_NORZ4938,253487
#define DUK_HBUFFER_INCREF(DUK_HBUFFER_INCREF4939,253574
#define DUK_HBUFFER_DECREF(DUK_HBUFFER_DECREF4940,253667
#define DUK_HBUFFER_DECREF_NORZ(DUK_HBUFFER_DECREF_NORZ4941,253749
#define DUK_HCOMPFUNC_INCREF(DUK_HCOMPFUNC_INCREF4942,253836
#define DUK_HCOMPFUNC_DECREF(DUK_HCOMPFUNC_DECREF4943,253935
#define DUK_HCOMPFUNC_DECREF_NORZ(DUK_HCOMPFUNC_DECREF_NORZ4944,254039
#define DUK_HNATFUNC_INCREF(DUK_HNATFUNC_INCREF4945,254148
#define DUK_HNATFUNC_DECREF(DUK_HNATFUNC_DECREF4946,254247
#define DUK_HNATFUNC_DECREF_NORZ(DUK_HNATFUNC_DECREF_NORZ4947,254351
#define DUK_HBUFOBJ_INCREF(DUK_HBUFOBJ_INCREF4948,254460
#define DUK_HBUFOBJ_DECREF(DUK_HBUFOBJ_DECREF4949,254559
#define DUK_HBUFOB_DECREF_NORZ(DUK_HBUFOB_DECREF_NORZ4950,254663
#define DUK_HTHREAD_INCREF(DUK_HTHREAD_INCREF4951,254772
#define DUK_HTHREAD_DECREF(DUK_HTHREAD_DECREF4952,254871
#define DUK_HTHREAD_DECREF_NORZ(DUK_HTHREAD_DECREF_NORZ4953,254975
#define DUK_HEAPHDR_INCREF_ALLOWNULL(DUK_HEAPHDR_INCREF_ALLOWNULL4959,255237
#define DUK_HEAPHDR_DECREF_ALLOWNULL(DUK_HEAPHDR_DECREF_ALLOWNULL4964,255383
#define DUK_HEAPHDR_DECREF_NORZ_ALLOWNULL(DUK_HEAPHDR_DECREF_NORZ_ALLOWNULL4969,255529
#define DUK_HOBJECT_INCREF_ALLOWNULL(DUK_HOBJECT_INCREF_ALLOWNULL4974,255685
#define DUK_HOBJECT_DECREF_ALLOWNULL(DUK_HOBJECT_DECREF_ALLOWNULL4979,255815
#define DUK_HOBJECT_DECREF_NORZ_ALLOWNULL(DUK_HOBJECT_DECREF_NORZ_ALLOWNULL4984,255945
#define DUK_HBUFFER_INCREF_ALLOWNULL(DUK_HBUFFER_INCREF_ALLOWNULL4989,256085
#define DUK_HBUFFER_DECREF_ALLOWNULL(DUK_HBUFFER_DECREF_ALLOWNULL4994,256215
#define DUK_HBUFFER_DECREF_NORZ_ALLOWNULL(DUK_HBUFFER_DECREF_NORZ_ALLOWNULL4999,256345
#define DUK_HTHREAD_INCREF_ALLOWNULL(DUK_HTHREAD_INCREF_ALLOWNULL5004,256485
#define DUK_HTHREAD_DECREF_ALLOWNULL(DUK_HTHREAD_DECREF_ALLOWNULL5009,256615
#define DUK_HTHREAD_DECREF_NORZ_ALLOWNULL(DUK_HTHREAD_DECREF_NORZ_ALLOWNULL5014,256745
#define DUK_REFZERO_CHECK_FAST(DUK_REFZERO_CHECK_FAST5026,257197
#define DUK_REFZERO_CHECK_SLOW(DUK_REFZERO_CHECK_SLOW5029,257288
#define DUK_REFZERO_CHECK_FAST(DUK_REFZERO_CHECK_FAST5033,257418
#define DUK_REFZERO_CHECK_SLOW(DUK_REFZERO_CHECK_SLOW5034,257471
#define DUK_TVAL_SET_UNDEFINED_UPDREF_ALT0(DUK_TVAL_SET_UNDEFINED_UPDREF_ALT05043,257808
#define DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ_ALT0(DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ_ALT05050,258088
#define DUK_TVAL_SET_UNUSED_UPDREF_ALT0(DUK_TVAL_SET_UNUSED_UPDREF_ALT05057,258358
#define DUK_TVAL_SET_NULL_UPDREF_ALT0(DUK_TVAL_SET_NULL_UPDREF_ALT05064,258632
#define DUK_TVAL_SET_BOOLEAN_UPDREF_ALT0(DUK_TVAL_SET_BOOLEAN_UPDREF_ALT05071,258902
#define DUK_TVAL_SET_NUMBER_UPDREF_ALT0(DUK_TVAL_SET_NUMBER_UPDREF_ALT05078,259195
#define DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF_ALT0(DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF_ALT05084,259485
#define DUK_TVAL_SET_DOUBLE_UPDREF_ALT0(DUK_TVAL_SET_DOUBLE_UPDREF_ALT05090,259796
#define DUK_TVAL_SET_NAN_UPDREF_ALT0(DUK_TVAL_SET_NAN_UPDREF_ALT05096,260086
#define DUK_TVAL_SET_I48_UPDREF_ALT0(DUK_TVAL_SET_I48_UPDREF_ALT05103,260382
#define DUK_TVAL_SET_I32_UPDREF_ALT0(DUK_TVAL_SET_I32_UPDREF_ALT05109,260666
#define DUK_TVAL_SET_U32_UPDREF_ALT0(DUK_TVAL_SET_U32_UPDREF_ALT05115,260950
#define DUK_TVAL_SET_DOUBLE_CAST_UPDREF(DUK_TVAL_SET_DOUBLE_CAST_UPDREF5122,261240
#define DUK_TVAL_SET_LIGHTFUNC_UPDREF_ALT0(DUK_TVAL_SET_LIGHTFUNC_UPDREF_ALT05126,261408
#define DUK_TVAL_SET_STRING_UPDREF_ALT0(DUK_TVAL_SET_STRING_UPDREF_ALT05133,261737
#define DUK_TVAL_SET_OBJECT_UPDREF_ALT0(DUK_TVAL_SET_OBJECT_UPDREF_ALT05141,262069
#define DUK_TVAL_SET_BUFFER_UPDREF_ALT0(DUK_TVAL_SET_BUFFER_UPDREF_ALT05149,262401
#define DUK_TVAL_SET_POINTER_UPDREF_ALT0(DUK_TVAL_SET_POINTER_UPDREF_ALT05157,262733
#define DUK_TVAL_SET_TVAL_UPDREF_ALT0(DUK_TVAL_SET_TVAL_UPDREF_ALT05172,263347
#define DUK_TVAL_SET_TVAL_UPDREF_ALT1(DUK_TVAL_SET_TVAL_UPDREF_ALT15184,263818
#define DUK_TVAL_SET_UNDEFINED_UPDREF DUK_TVAL_SET_UNDEFINED_UPDREF5199,264382
#define DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ5200,264463
#define DUK_TVAL_SET_UNUSED_UPDREF DUK_TVAL_SET_UNUSED_UPDREF5201,264549
#define DUK_TVAL_SET_NULL_UPDREF DUK_TVAL_SET_NULL_UPDREF5202,264627
#define DUK_TVAL_SET_BOOLEAN_UPDREF DUK_TVAL_SET_BOOLEAN_UPDREF5203,264703
#define DUK_TVAL_SET_NUMBER_UPDREF DUK_TVAL_SET_NUMBER_UPDREF5204,264782
#define DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF5205,264860
#define DUK_TVAL_SET_DOUBLE_UPDREF DUK_TVAL_SET_DOUBLE_UPDREF5206,264946
#define DUK_TVAL_SET_NAN_UPDREF DUK_TVAL_SET_NAN_UPDREF5207,265024
#define DUK_TVAL_SET_I48_UPDREF DUK_TVAL_SET_I48_UPDREF5209,265128
#define DUK_TVAL_SET_I32_UPDREF DUK_TVAL_SET_I32_UPDREF5210,265203
#define DUK_TVAL_SET_U32_UPDREF DUK_TVAL_SET_U32_UPDREF5211,265278
#define DUK_TVAL_SET_I48_UPDREF DUK_TVAL_SET_I48_UPDREF5213,265359
#define DUK_TVAL_SET_I32_UPDREF DUK_TVAL_SET_I32_UPDREF5214,265468
#define DUK_TVAL_SET_U32_UPDREF DUK_TVAL_SET_U32_UPDREF5215,265546
#define DUK_TVAL_SET_FASTINT_UPDREF DUK_TVAL_SET_FASTINT_UPDREF5217,265654
#define DUK_TVAL_SET_LIGHTFUNC_UPDREF DUK_TVAL_SET_LIGHTFUNC_UPDREF5218,265743
#define DUK_TVAL_SET_STRING_UPDREF DUK_TVAL_SET_STRING_UPDREF5219,265824
#define DUK_TVAL_SET_OBJECT_UPDREF DUK_TVAL_SET_OBJECT_UPDREF5220,265902
#define DUK_TVAL_SET_BUFFER_UPDREF DUK_TVAL_SET_BUFFER_UPDREF5221,265980
#define DUK_TVAL_SET_POINTER_UPDREF DUK_TVAL_SET_POINTER_UPDREF5222,266058
#define DUK_TVAL_SET_TVAL_UPDREF DUK_TVAL_SET_TVAL_UPDREF5226,266208
#define DUK_TVAL_SET_TVAL_UPDREF_FAST DUK_TVAL_SET_TVAL_UPDREF_FAST5227,266284
#define DUK_TVAL_SET_TVAL_UPDREF_SLOW DUK_TVAL_SET_TVAL_UPDREF_SLOW5228,266360
#define DUK_TVAL_SET_TVAL_UPDREF DUK_TVAL_SET_TVAL_UPDREF5231,266468
#define DUK_TVAL_SET_TVAL_UPDREF_FAST DUK_TVAL_SET_TVAL_UPDREF_FAST5232,266544
#define DUK_TVAL_SET_TVAL_UPDREF_SLOW DUK_TVAL_SET_TVAL_UPDREF_SLOW5233,266620
#define DUK_TVAL_NEEDS_REFCOUNT_UPDATE(DUK_TVAL_NEEDS_REFCOUNT_UPDATE5238,266745
#define DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE(DUK_HEAPHDR_NEEDS_REFCOUNT_UPDATE5239,266794
#define DUK_TVAL_INCREF_FAST(DUK_TVAL_INCREF_FAST5241,266844
#define DUK_TVAL_DECREF_FAST(DUK_TVAL_DECREF_FAST5242,266917
#define DUK_TVAL_DECREF_NORZ_FAST(DUK_TVAL_DECREF_NORZ_FAST5243,266990
#define DUK_TVAL_INCREF_SLOW(DUK_TVAL_INCREF_SLOW5244,267063
#define DUK_TVAL_DECREF_SLOW(DUK_TVAL_DECREF_SLOW5245,267136
#define DUK_TVAL_DECREF_NORZ_SLOW(DUK_TVAL_DECREF_NORZ_SLOW5246,267209
#define DUK_TVAL_INCREF(DUK_TVAL_INCREF5247,267282
#define DUK_TVAL_DECREF(DUK_TVAL_DECREF5248,267355
#define DUK_TVAL_DECREF_NORZ(DUK_TVAL_DECREF_NORZ5249,267428
#define DUK_HEAPHDR_INCREF_FAST(DUK_HEAPHDR_INCREF_FAST5250,267501
#define DUK_HEAPHDR_DECREF_FAST(DUK_HEAPHDR_DECREF_FAST5251,267574
#define DUK_HEAPHDR_DECREF_NORZ_FAST(DUK_HEAPHDR_DECREF_NORZ_FAST5252,267647
#define DUK_HEAPHDR_INCREF_SLOW(DUK_HEAPHDR_INCREF_SLOW5253,267720
#define DUK_HEAPHDR_DECREF_SLOW(DUK_HEAPHDR_DECREF_SLOW5254,267793
#define DUK_HEAPHDR_DECREF_NORZ_SLOW(DUK_HEAPHDR_DECREF_NORZ_SLOW5255,267866
#define DUK_HEAPHDR_INCREF(DUK_HEAPHDR_INCREF5256,267939
#define DUK_HEAPHDR_DECREF(DUK_HEAPHDR_DECREF5257,268012
#define DUK_HEAPHDR_DECREF_NORZ(DUK_HEAPHDR_DECREF_NORZ5258,268085
#define DUK_HSTRING_INCREF_FAST(DUK_HSTRING_INCREF_FAST5259,268158
#define DUK_HSTRING_DECREF_FAST(DUK_HSTRING_DECREF_FAST5260,268231
#define DUK_HSTRING_DECREF_NORZ_FAST(DUK_HSTRING_DECREF_NORZ_FAST5261,268304
#define DUK_HSTRING_INCREF_SLOW(DUK_HSTRING_INCREF_SLOW5262,268377
#define DUK_HSTRING_DECREF_SLOW(DUK_HSTRING_DECREF_SLOW5263,268450
#define DUK_HSTRING_DECREF_NORZ_SLOW(DUK_HSTRING_DECREF_NORZ_SLOW5264,268523
#define DUK_HSTRING_INCREF(DUK_HSTRING_INCREF5265,268596
#define DUK_HSTRING_DECREF(DUK_HSTRING_DECREF5266,268669
#define DUK_HSTRING_DECREF_NORZ(DUK_HSTRING_DECREF_NORZ5267,268742
#define DUK_HOBJECT_INCREF_FAST(DUK_HOBJECT_INCREF_FAST5268,268815
#define DUK_HOBJECT_DECREF_FAST(DUK_HOBJECT_DECREF_FAST5269,268888
#define DUK_HOBJECT_DECREF_NORZ_FAST(DUK_HOBJECT_DECREF_NORZ_FAST5270,268961
#define DUK_HOBJECT_INCREF_SLOW(DUK_HOBJECT_INCREF_SLOW5271,269034
#define DUK_HOBJECT_DECREF_SLOW(DUK_HOBJECT_DECREF_SLOW5272,269107
#define DUK_HOBJECT_DECREF_NORZ_SLOW(DUK_HOBJECT_DECREF_NORZ_SLOW5273,269180
#define DUK_HOBJECT_INCREF(DUK_HOBJECT_INCREF5274,269253
#define DUK_HOBJECT_DECREF(DUK_HOBJECT_DECREF5275,269326
#define DUK_HOBJECT_DECREF_NORZ(DUK_HOBJECT_DECREF_NORZ5276,269399
#define DUK_HBUFFER_INCREF_FAST(DUK_HBUFFER_INCREF_FAST5277,269472
#define DUK_HBUFFER_DECREF_FAST(DUK_HBUFFER_DECREF_FAST5278,269545
#define DUK_HBUFFER_DECREF_NORZ_FAST(DUK_HBUFFER_DECREF_NORZ_FAST5279,269618
#define DUK_HBUFFER_INCREF_SLOW(DUK_HBUFFER_INCREF_SLOW5280,269691
#define DUK_HBUFFER_DECREF_SLOW(DUK_HBUFFER_DECREF_SLOW5281,269764
#define DUK_HBUFFER_DECREF_NORZ_SLOW(DUK_HBUFFER_DECREF_NORZ_SLOW5282,269837
#define DUK_HBUFFER_INCREF(DUK_HBUFFER_INCREF5283,269910
#define DUK_HBUFFER_DECREF(DUK_HBUFFER_DECREF5284,269983
#define DUK_HBUFFER_DECREF_NORZ(DUK_HBUFFER_DECREF_NORZ5285,270056
#define DUK_HCOMPFUNC_INCREF(DUK_HCOMPFUNC_INCREF5287,270130
#define DUK_HCOMPFUNC_DECREF(DUK_HCOMPFUNC_DECREF5288,270203
#define DUK_HCOMPFUNC_DECREF_NORZ(DUK_HCOMPFUNC_DECREF_NORZ5289,270276
#define DUK_HNATFUNC_INCREF(DUK_HNATFUNC_INCREF5290,270349
#define DUK_HNATFUNC_DECREF(DUK_HNATFUNC_DECREF5291,270422
#define DUK_HNATFUNC_DECREF_NORZ(DUK_HNATFUNC_DECREF_NORZ5292,270495
#define DUK_HBUFOBJ_INCREF(DUK_HBUFOBJ_INCREF5293,270568
#define DUK_HBUFOBJ_DECREF(DUK_HBUFOBJ_DECREF5294,270641
#define DUK_HBUFOBJ_DECREF_NORZ(DUK_HBUFOBJ_DECREF_NORZ5295,270714
#define DUK_HTHREAD_INCREF(DUK_HTHREAD_INCREF5296,270787
#define DUK_HTHREAD_DECREF(DUK_HTHREAD_DECREF5297,270860
#define DUK_HTHREAD_DECREF_NORZ(DUK_HTHREAD_DECREF_NORZ5298,270933
#define DUK_HOBJECT_INCREF_ALLOWNULL(DUK_HOBJECT_INCREF_ALLOWNULL5299,271006
#define DUK_HOBJECT_DECREF_ALLOWNULL(DUK_HOBJECT_DECREF_ALLOWNULL5300,271079
#define DUK_HOBJECT_DECREF_NORZ_ALLOWNULL(DUK_HOBJECT_DECREF_NORZ_ALLOWNULL5301,271152
#define DUK_HBUFFER_INCREF_ALLOWNULL(DUK_HBUFFER_INCREF_ALLOWNULL5302,271228
#define DUK_HBUFFER_DECREF_ALLOWNULL(DUK_HBUFFER_DECREF_ALLOWNULL5303,271301
#define DUK_HBUFFER_DECREF_NORZ_ALLOWNULL(DUK_HBUFFER_DECREF_NORZ_ALLOWNULL5304,271374
#define DUK_REFZERO_CHECK_FAST(DUK_REFZERO_CHECK_FAST5306,271451
#define DUK_REFZERO_CHECK_SLOW(DUK_REFZERO_CHECK_SLOW5307,271524
#define DUK_TVAL_SET_UNDEFINED_UPDREF_ALT0(DUK_TVAL_SET_UNDEFINED_UPDREF_ALT05309,271598
#define DUK_TVAL_SET_UNUSED_UPDREF_ALT0(DUK_TVAL_SET_UNUSED_UPDREF_ALT05315,271782
#define DUK_TVAL_SET_NULL_UPDREF_ALT0(DUK_TVAL_SET_NULL_UPDREF_ALT05321,271960
#define DUK_TVAL_SET_BOOLEAN_UPDREF_ALT0(DUK_TVAL_SET_BOOLEAN_UPDREF_ALT05327,272134
#define DUK_TVAL_SET_NUMBER_UPDREF_ALT0(DUK_TVAL_SET_NUMBER_UPDREF_ALT05333,272331
#define DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF_ALT0(DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF_ALT05338,272525
#define DUK_TVAL_SET_DOUBLE_UPDREF_ALT0(DUK_TVAL_SET_DOUBLE_UPDREF_ALT05343,272740
#define DUK_TVAL_SET_NAN_UPDREF_ALT0(DUK_TVAL_SET_NAN_UPDREF_ALT05348,272934
#define DUK_TVAL_SET_I48_UPDREF_ALT0(DUK_TVAL_SET_I48_UPDREF_ALT05354,273134
#define DUK_TVAL_SET_I32_UPDREF_ALT0(DUK_TVAL_SET_I32_UPDREF_ALT05359,273322
#define DUK_TVAL_SET_U32_UPDREF_ALT0(DUK_TVAL_SET_U32_UPDREF_ALT05364,273510
#define DUK_TVAL_SET_DOUBLE_CAST_UPDREF(DUK_TVAL_SET_DOUBLE_CAST_UPDREF5370,273704
#define DUK_TVAL_SET_LIGHTFUNC_UPDREF_ALT0(DUK_TVAL_SET_LIGHTFUNC_UPDREF_ALT05374,273872
#define DUK_TVAL_SET_STRING_UPDREF_ALT0(DUK_TVAL_SET_STRING_UPDREF_ALT05380,274105
#define DUK_TVAL_SET_OBJECT_UPDREF_ALT0(DUK_TVAL_SET_OBJECT_UPDREF_ALT05386,274300
#define DUK_TVAL_SET_BUFFER_UPDREF_ALT0(DUK_TVAL_SET_BUFFER_UPDREF_ALT05392,274495
#define DUK_TVAL_SET_POINTER_UPDREF_ALT0(DUK_TVAL_SET_POINTER_UPDREF_ALT05398,274690
#define DUK_TVAL_SET_TVAL_UPDREF_ALT0(DUK_TVAL_SET_TVAL_UPDREF_ALT05404,274887
#define DUK_TVAL_SET_UNDEFINED_UPDREF DUK_TVAL_SET_UNDEFINED_UPDREF5411,275117
#define DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ DUK_TVAL_SET_UNDEFINED_UPDREF_NORZ5412,275198
#define DUK_TVAL_SET_UNUSED_UPDREF DUK_TVAL_SET_UNUSED_UPDREF5413,275279
#define DUK_TVAL_SET_NULL_UPDREF DUK_TVAL_SET_NULL_UPDREF5414,275357
#define DUK_TVAL_SET_BOOLEAN_UPDREF DUK_TVAL_SET_BOOLEAN_UPDREF5415,275433
#define DUK_TVAL_SET_NUMBER_UPDREF DUK_TVAL_SET_NUMBER_UPDREF5416,275512
#define DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF DUK_TVAL_SET_NUMBER_CHKFAST_UPDREF5417,275590
#define DUK_TVAL_SET_DOUBLE_UPDREF DUK_TVAL_SET_DOUBLE_UPDREF5418,275676
#define DUK_TVAL_SET_NAN_UPDREF DUK_TVAL_SET_NAN_UPDREF5419,275754
#define DUK_TVAL_SET_I48_UPDREF DUK_TVAL_SET_I48_UPDREF5421,275858
#define DUK_TVAL_SET_I32_UPDREF DUK_TVAL_SET_I32_UPDREF5422,275933
#define DUK_TVAL_SET_U32_UPDREF DUK_TVAL_SET_U32_UPDREF5423,276008
#define DUK_TVAL_SET_I48_UPDREF DUK_TVAL_SET_I48_UPDREF5425,276089
#define DUK_TVAL_SET_I32_UPDREF DUK_TVAL_SET_I32_UPDREF5426,276198
#define DUK_TVAL_SET_U32_UPDREF DUK_TVAL_SET_U32_UPDREF5427,276276
#define DUK_TVAL_SET_FASTINT_UPDREF DUK_TVAL_SET_FASTINT_UPDREF5429,276384
#define DUK_TVAL_SET_LIGHTFUNC_UPDREF DUK_TVAL_SET_LIGHTFUNC_UPDREF5430,276473
#define DUK_TVAL_SET_STRING_UPDREF DUK_TVAL_SET_STRING_UPDREF5431,276554
#define DUK_TVAL_SET_OBJECT_UPDREF DUK_TVAL_SET_OBJECT_UPDREF5432,276632
#define DUK_TVAL_SET_BUFFER_UPDREF DUK_TVAL_SET_BUFFER_UPDREF5433,276710
#define DUK_TVAL_SET_POINTER_UPDREF DUK_TVAL_SET_POINTER_UPDREF5434,276788
#define DUK_TVAL_SET_TVAL_UPDREF DUK_TVAL_SET_TVAL_UPDREF5436,276868
#define DUK_TVAL_SET_TVAL_UPDREF_FAST DUK_TVAL_SET_TVAL_UPDREF_FAST5437,276944
#define DUK_TVAL_SET_TVAL_UPDREF_SLOW DUK_TVAL_SET_TVAL_UPDREF_SLOW5438,277020
#define DUK_TVAL_SET_TVAL_UPDREF_NORZ(DUK_TVAL_SET_TVAL_UPDREF_NORZ5446,277222
#define DUK_TVAL_SET_U32_UPDREF_NORZ(DUK_TVAL_SET_U32_UPDREF_NORZ5456,277550
#define DUK_API_INTERNAL_H_INCLUDEDDUK_API_INTERNAL_H_INCLUDED5512,280222
#define DUK_INLINE_PERFDUK_INLINE_PERF5516,280320
#define DUK_ALWAYS_INLINE_PERFDUK_ALWAYS_INLINE_PERF5517,280344
#define DUK_NOINLINE_PERFDUK_NOINLINE_PERF5518,280375
#define DUK_INLINE_PERF DUK_INLINE_PERF5520,280407
#define DUK_ALWAYS_INLINE_PERF DUK_ALWAYS_INLINE_PERF5521,280442
#define DUK_NOINLINE_PERF DUK_NOINLINE_PERF5522,280491
#define DUK_EXEC_INLINE_PERFDUK_EXEC_INLINE_PERF5527,280627
#define DUK_EXEC_ALWAYS_INLINE_PERFDUK_EXEC_ALWAYS_INLINE_PERF5528,280656
#define DUK_EXEC_NOINLINE_PERFDUK_EXEC_NOINLINE_PERF5529,280692
#define DUK_EXEC_INLINE_PERF DUK_EXEC_INLINE_PERF5531,280729
#define DUK_EXEC_ALWAYS_INLINE_PERF DUK_EXEC_ALWAYS_INLINE_PERF5532,280769
#define DUK_EXEC_NOINLINE_PERF DUK_EXEC_NOINLINE_PERF5533,280823
#define DUK_PUSH_SPRINTF_INITIAL_SIZE DUK_PUSH_SPRINTF_INITIAL_SIZE5537,280908
#define DUK_PUSH_SPRINTF_SANITY_LIMIT DUK_PUSH_SPRINTF_SANITY_LIMIT5538,280952
#define DUK_ERRCODE_FLAG_NOBLAME_FILELINE DUK_ERRCODE_FLAG_NOBLAME_FILELINE5543,281151
#define duk_push_u64(duk_push_u645605,284301
#define duk_push_i64(duk_push_i645607,284379
#define duk_push_u32(duk_push_u325611,284540
#define duk_push_i32(duk_push_i325613,284614
#define duk_push_idx(duk_push_idx5617,284751
#define duk_push_uarridx(duk_push_uarridx5619,284823
#define duk_push_size_t(duk_push_size_t5621,284901
#define duk_require_hobject_promote_lfunc(duk_require_hobject_promote_lfunc5646,286606
#define duk_get_hobject_promote_lfunc(duk_get_hobject_promote_lfunc5648,286732
#define duk_push_hthread(duk_push_hthread5704,290260
#define duk_push_hnatfunc(duk_push_hnatfunc5706,290340
#define duk_get_prop_stridx_short(duk_get_prop_stridx_short5750,293329
#define duk_xget_owndataprop_stridx_short(duk_xget_owndataprop_stridx_short5759,294141
#define duk_put_prop_stridx_short(duk_put_prop_stridx_short5766,294725
#define duk_del_prop_stridx_short(duk_del_prop_stridx_short5779,295626
#define duk_has_prop_stridx_short(duk_has_prop_stridx_short5790,296301
#define duk_xdef_prop_stridx_short(duk_xdef_prop_stridx_short5802,297081
#define duk_xdef_prop_wec(duk_xdef_prop_wec5808,297546
#define duk_xdef_prop_index_wec(duk_xdef_prop_index_wec5810,297644
#define duk_xdef_prop_stridx_wec(duk_xdef_prop_stridx_wec5812,297773
#define duk_xdef_prop_stridx_short_wec(duk_xdef_prop_stridx_short_wec5814,297902
#define DUK_ASSERT_VALID_NEGIDX(DUK_ASSERT_VALID_NEGIDX5870,300682
#define DUK_ASSERT_VALID_POSIDX(DUK_ASSERT_VALID_POSIDX5872,300818
#define DUK_GET_TVAL_NEGIDX(DUK_GET_TVAL_NEGIDX5874,300955
#define DUK_GET_TVAL_POSIDX(DUK_GET_TVAL_POSIDX5876,301081
#define DUK_GET_HOBJECT_NEGIDX(DUK_GET_HOBJECT_NEGIDX5878,301210
#define DUK_GET_HOBJECT_POSIDX(DUK_GET_HOBJECT_POSIDX5880,301360
#define DUK_GET_THIS_TVAL_PTR(DUK_GET_THIS_TVAL_PTR5883,301514
#define DUK_HSTRING_H_INCLUDEDDUK_HSTRING_H_INCLUDED5911,302778
#define DUK_HSTRING_MAX_BYTELEN DUK_HSTRING_MAX_BYTELEN5923,303239
#define DUK_HSTRING_MAX_BYTELEN DUK_HSTRING_MAX_BYTELEN5925,303312
#define DUK_HSTRING_FLAG_ASCII DUK_HSTRING_FLAG_ASCII5937,303790
#define DUK_HSTRING_FLAG_ARRIDX DUK_HSTRING_FLAG_ARRIDX5938,303904
#define DUK_HSTRING_FLAG_SYMBOL DUK_HSTRING_FLAG_SYMBOL5939,304018
#define DUK_HSTRING_FLAG_HIDDEN DUK_HSTRING_FLAG_HIDDEN5940,304137
#define DUK_HSTRING_FLAG_RESERVED_WORD DUK_HSTRING_FLAG_RESERVED_WORD5941,304293
#define DUK_HSTRING_FLAG_STRICT_RESERVED_WORD DUK_HSTRING_FLAG_STRICT_RESERVED_WORD5942,304416
#define DUK_HSTRING_FLAG_EVAL_OR_ARGUMENTS DUK_HSTRING_FLAG_EVAL_OR_ARGUMENTS5943,304535
#define DUK_HSTRING_FLAG_EXTDATA DUK_HSTRING_FLAG_EXTDATA5944,304651
#define DUK_HSTRING_FLAG_PINNED_LITERAL DUK_HSTRING_FLAG_PINNED_LITERAL5945,304782
#define DUK_HSTRING_HAS_ASCII(DUK_HSTRING_HAS_ASCII5947,304899
#define DUK_HSTRING_HAS_ARRIDX(DUK_HSTRING_HAS_ARRIDX5948,305014
#define DUK_HSTRING_HAS_SYMBOL(DUK_HSTRING_HAS_SYMBOL5949,305130
#define DUK_HSTRING_HAS_HIDDEN(DUK_HSTRING_HAS_HIDDEN5950,305246
#define DUK_HSTRING_HAS_RESERVED_WORD(DUK_HSTRING_HAS_RESERVED_WORD5951,305362
#define DUK_HSTRING_HAS_STRICT_RESERVED_WORD(DUK_HSTRING_HAS_STRICT_RESERVED_WORD5952,305485
#define DUK_HSTRING_HAS_EVAL_OR_ARGUMENTS(DUK_HSTRING_HAS_EVAL_OR_ARGUMENTS5953,305615
#define DUK_HSTRING_HAS_EXTDATA(DUK_HSTRING_HAS_EXTDATA5954,305742
#define DUK_HSTRING_HAS_PINNED_LITERAL(DUK_HSTRING_HAS_PINNED_LITERAL5955,305859
#define DUK_HSTRING_SET_ASCII(DUK_HSTRING_SET_ASCII5957,305984
#define DUK_HSTRING_SET_ARRIDX(DUK_HSTRING_SET_ARRIDX5958,306097
#define DUK_HSTRING_SET_SYMBOL(DUK_HSTRING_SET_SYMBOL5959,306211
#define DUK_HSTRING_SET_HIDDEN(DUK_HSTRING_SET_HIDDEN5960,306325
#define DUK_HSTRING_SET_RESERVED_WORD(DUK_HSTRING_SET_RESERVED_WORD5961,306439
#define DUK_HSTRING_SET_STRICT_RESERVED_WORD(DUK_HSTRING_SET_STRICT_RESERVED_WORD5962,306560
#define DUK_HSTRING_SET_EVAL_OR_ARGUMENTS(DUK_HSTRING_SET_EVAL_OR_ARGUMENTS5963,306688
#define DUK_HSTRING_SET_EXTDATA(DUK_HSTRING_SET_EXTDATA5964,306813
#define DUK_HSTRING_SET_PINNED_LITERAL(DUK_HSTRING_SET_PINNED_LITERAL5965,306928
#define DUK_HSTRING_CLEAR_ASCII(DUK_HSTRING_CLEAR_ASCII5967,307051
#define DUK_HSTRING_CLEAR_ARRIDX(DUK_HSTRING_CLEAR_ARRIDX5968,307166
#define DUK_HSTRING_CLEAR_SYMBOL(DUK_HSTRING_CLEAR_SYMBOL5969,307282
#define DUK_HSTRING_CLEAR_HIDDEN(DUK_HSTRING_CLEAR_HIDDEN5970,307398
#define DUK_HSTRING_CLEAR_RESERVED_WORD(DUK_HSTRING_CLEAR_RESERVED_WORD5971,307514
#define DUK_HSTRING_CLEAR_STRICT_RESERVED_WORD(DUK_HSTRING_CLEAR_STRICT_RESERVED_WORD5972,307637
#define DUK_HSTRING_CLEAR_EVAL_OR_ARGUMENTS(DUK_HSTRING_CLEAR_EVAL_OR_ARGUMENTS5973,307767
#define DUK_HSTRING_CLEAR_EXTDATA(DUK_HSTRING_CLEAR_EXTDATA5974,307894
#define DUK_HSTRING_CLEAR_PINNED_LITERAL(DUK_HSTRING_CLEAR_PINNED_LITERAL5975,308011
#define DUK_HSTRING_IS_ASCII(DUK_HSTRING_IS_ASCII5982,308391
#define DUK_HSTRING_IS_EMPTY(DUK_HSTRING_IS_EMPTY5983,308489
#define DUK_HSTRING_GET_HASH(DUK_HSTRING_GET_HASH5986,308609
#define DUK_HSTRING_SET_HASH(DUK_HSTRING_SET_HASH5987,308686
#define DUK_HSTRING_GET_HASH(DUK_HSTRING_GET_HASH5991,308818
#define DUK_HSTRING_SET_HASH(DUK_HSTRING_SET_HASH5992,308882
#define DUK_HSTRING_GET_BYTELEN(DUK_HSTRING_GET_BYTELEN5998,308995
#define DUK_HSTRING_SET_BYTELEN(DUK_HSTRING_SET_BYTELEN5999,309071
#define DUK_HSTRING_GET_CHARLEN(DUK_HSTRING_GET_CHARLEN6003,309195
#define DUK_HSTRING_SET_CHARLEN(DUK_HSTRING_SET_CHARLEN6004,309276
#define DUK_HSTRING_GET_CHARLEN(DUK_HSTRING_GET_CHARLEN6008,309362
#define DUK_HSTRING_SET_CHARLEN(DUK_HSTRING_SET_CHARLEN6009,309443
#define DUK_HSTRING_GET_BYTELEN(DUK_HSTRING_GET_BYTELEN6014,309562
#define DUK_HSTRING_SET_BYTELEN(DUK_HSTRING_SET_BYTELEN6015,309626
#define DUK_HSTRING_GET_CHARLEN(DUK_HSTRING_GET_CHARLEN6018,309704
#define DUK_HSTRING_SET_CHARLEN(DUK_HSTRING_SET_CHARLEN6019,309785
#define DUK_HSTRING_GET_EXTDATA(DUK_HSTRING_GET_EXTDATA6025,309908
#define DUK_HSTRING_GET_DATA(DUK_HSTRING_GET_DATA6027,309961
#define DUK_HSTRING_GET_DATA(DUK_HSTRING_GET_DATA6031,310135
#define DUK_HSTRING_GET_DATA_END(DUK_HSTRING_GET_DATA_END6035,310212
#define DUK_HSTRING_NO_ARRAY_INDEX DUK_HSTRING_NO_ARRAY_INDEX6041,310383
#define DUK_HSTRING_GET_ARRIDX_FAST(DUK_HSTRING_GET_ARRIDX_FAST6044,310471
#define DUK_HSTRING_GET_ARRIDX_SLOW(DUK_HSTRING_GET_ARRIDX_SLOW6045,310525
#define DUK_HSTRING_GET_ARRIDX_FAST(DUK_HSTRING_GET_ARRIDX_FAST6050,310724
#define DUK_HSTRING_GET_ARRIDX_SLOW(DUK_HSTRING_GET_ARRIDX_SLOW6054,310913
#define DUK_SYMBOL_TYPE_HIDDEN DUK_SYMBOL_TYPE_HIDDEN6059,311052
#define DUK_SYMBOL_TYPE_GLOBAL DUK_SYMBOL_TYPE_GLOBAL6060,311085
#define DUK_SYMBOL_TYPE_LOCAL DUK_SYMBOL_TYPE_LOCAL6061,311118
#define DUK_SYMBOL_TYPE_WELLKNOWN DUK_SYMBOL_TYPE_WELLKNOWN6062,311150
#define DUK_HSTRING_ASSERT_VALID(DUK_HSTRING_ASSERT_VALID6067,311326
#define DUK_HSTRING_ASSERT_VALID(DUK_HSTRING_ASSERT_VALID6069,311417
struct duk_hstring {duk_hstring6076,311495
	duk_heaphdr_string hdr;hdr6082,311751
	duk_uint32_t hash;hash6088,311907
	duk_uarridx_t arridx;arridx6093,312035
	duk_uint32_t blen;blen6100,312186
	duk_uint16_t clen16;clen166106,312331
	duk_uint32_t clen;clen6111,312393
struct duk_hstring_external {duk_hstring_external6123,312744
	duk_hstring str;str6124,312774
	const duk_uint8_t *extdata;extdata6132,312982
#define DUK_HOBJECT_H_INCLUDEDDUK_HOBJECT_H_INCLUDED6181,315008
#define DUK_HOBJECT_FLAG_EXTENSIBLE DUK_HOBJECT_FLAG_EXTENSIBLE6190,315287
#define DUK_HOBJECT_FLAG_CONSTRUCTABLE DUK_HOBJECT_FLAG_CONSTRUCTABLE6191,315388
#define DUK_HOBJECT_FLAG_CALLABLE DUK_HOBJECT_FLAG_CALLABLE6192,315492
#define DUK_HOBJECT_FLAG_BOUNDFUNC DUK_HOBJECT_FLAG_BOUNDFUNC6193,315591
#define DUK_HOBJECT_FLAG_COMPFUNC DUK_HOBJECT_FLAG_COMPFUNC6194,315722
#define DUK_HOBJECT_FLAG_NATFUNC DUK_HOBJECT_FLAG_NATFUNC6195,315848
#define DUK_HOBJECT_FLAG_BUFOBJ DUK_HOBJECT_FLAG_BUFOBJ6196,315971
#define DUK_HOBJECT_FLAG_FASTREFS DUK_HOBJECT_FLAG_FASTREFS6197,316107
#define DUK_HOBJECT_FLAG_ARRAY_PART DUK_HOBJECT_FLAG_ARRAY_PART6198,316262
#define DUK_HOBJECT_FLAG_STRICT DUK_HOBJECT_FLAG_STRICT6199,316391
#define DUK_HOBJECT_FLAG_NOTAIL DUK_HOBJECT_FLAG_NOTAIL6200,316507
#define DUK_HOBJECT_FLAG_NEWENV DUK_HOBJECT_FLAG_NEWENV6201,316630
#define DUK_HOBJECT_FLAG_NAMEBINDING DUK_HOBJECT_FLAG_NAMEBINDING6202,316775
#define DUK_HOBJECT_FLAG_CREATEARGS DUK_HOBJECT_FLAG_CREATEARGS6203,316957
#define DUK_HOBJECT_FLAG_HAVE_FINALIZER DUK_HOBJECT_FLAG_HAVE_FINALIZER6204,317091
#define DUK_HOBJECT_FLAG_EXOTIC_ARRAY DUK_HOBJECT_FLAG_EXOTIC_ARRAY6205,317218
#define DUK_HOBJECT_FLAG_EXOTIC_STRINGOBJ DUK_HOBJECT_FLAG_EXOTIC_STRINGOBJ6206,317353
#define DUK_HOBJECT_FLAG_EXOTIC_ARGUMENTS DUK_HOBJECT_FLAG_EXOTIC_ARGUMENTS6207,317478
#define DUK_HOBJECT_FLAG_EXOTIC_PROXYOBJ DUK_HOBJECT_FLAG_EXOTIC_PROXYOBJ6208,317631
#define DUK_HOBJECT_FLAG_SPECIAL_CALL DUK_HOBJECT_FLAG_SPECIAL_CALL6209,317726
#define DUK_HOBJECT_FLAG_CLASS_BASE DUK_HOBJECT_FLAG_CLASS_BASE6211,317868
#define DUK_HOBJECT_FLAG_CLASS_BITS DUK_HOBJECT_FLAG_CLASS_BITS6212,317948
#define DUK_HOBJECT_GET_CLASS_NUMBER(DUK_HOBJECT_GET_CLASS_NUMBER6214,317998
#define DUK_HOBJECT_SET_CLASS_NUMBER(DUK_HOBJECT_SET_CLASS_NUMBER6216,318144
#define DUK_HOBJECT_GET_CLASS_MASK(DUK_HOBJECT_GET_CLASS_MASK6219,318296
#define DUK_HOBJECT_CLASS_AS_FLAGS(DUK_HOBJECT_CLASS_AS_FLAGS6227,318702
#define DUK_HOBJECT_CLASS_NONE DUK_HOBJECT_CLASS_NONE6230,318842
#define DUK_HOBJECT_CLASS_OBJECT DUK_HOBJECT_CLASS_OBJECT6231,318891
#define DUK_HOBJECT_CLASS_ARRAY DUK_HOBJECT_CLASS_ARRAY6232,318940
#define DUK_HOBJECT_CLASS_FUNCTION DUK_HOBJECT_CLASS_FUNCTION6233,318989
#define DUK_HOBJECT_CLASS_ARGUMENTS DUK_HOBJECT_CLASS_ARGUMENTS6234,319038
#define DUK_HOBJECT_CLASS_BOOLEAN DUK_HOBJECT_CLASS_BOOLEAN6235,319087
#define DUK_HOBJECT_CLASS_DATE DUK_HOBJECT_CLASS_DATE6236,319136
#define DUK_HOBJECT_CLASS_ERROR DUK_HOBJECT_CLASS_ERROR6237,319185
#define DUK_HOBJECT_CLASS_JSON DUK_HOBJECT_CLASS_JSON6238,319234
#define DUK_HOBJECT_CLASS_MATH DUK_HOBJECT_CLASS_MATH6239,319283
#define DUK_HOBJECT_CLASS_NUMBER DUK_HOBJECT_CLASS_NUMBER6240,319332
#define DUK_HOBJECT_CLASS_REGEXP DUK_HOBJECT_CLASS_REGEXP6241,319382
#define DUK_HOBJECT_CLASS_STRING DUK_HOBJECT_CLASS_STRING6242,319432
#define DUK_HOBJECT_CLASS_GLOBAL DUK_HOBJECT_CLASS_GLOBAL6243,319482
#define DUK_HOBJECT_CLASS_SYMBOL DUK_HOBJECT_CLASS_SYMBOL6244,319532
#define DUK_HOBJECT_CLASS_OBJENV DUK_HOBJECT_CLASS_OBJENV6245,319582
#define DUK_HOBJECT_CLASS_DECENV DUK_HOBJECT_CLASS_DECENV6246,319646
#define DUK_HOBJECT_CLASS_POINTER DUK_HOBJECT_CLASS_POINTER6247,319710
#define DUK_HOBJECT_CLASS_THREAD DUK_HOBJECT_CLASS_THREAD6248,319774
#define DUK_HOBJECT_CLASS_BUFOBJ_MIN DUK_HOBJECT_CLASS_BUFOBJ_MIN6249,319869
#define DUK_HOBJECT_CLASS_ARRAYBUFFER DUK_HOBJECT_CLASS_ARRAYBUFFER6250,319919
#define DUK_HOBJECT_CLASS_DATAVIEW DUK_HOBJECT_CLASS_DATAVIEW6251,320006
#define DUK_HOBJECT_CLASS_INT8ARRAY DUK_HOBJECT_CLASS_INT8ARRAY6252,320056
#define DUK_HOBJECT_CLASS_UINT8ARRAY DUK_HOBJECT_CLASS_UINT8ARRAY6253,320106
#define DUK_HOBJECT_CLASS_UINT8CLAMPEDARRAY DUK_HOBJECT_CLASS_UINT8CLAMPEDARRAY6254,320156
#define DUK_HOBJECT_CLASS_INT16ARRAY DUK_HOBJECT_CLASS_INT16ARRAY6255,320206
#define DUK_HOBJECT_CLASS_UINT16ARRAY DUK_HOBJECT_CLASS_UINT16ARRAY6256,320256
#define DUK_HOBJECT_CLASS_INT32ARRAY DUK_HOBJECT_CLASS_INT32ARRAY6257,320306
#define DUK_HOBJECT_CLASS_UINT32ARRAY DUK_HOBJECT_CLASS_UINT32ARRAY6258,320356
#define DUK_HOBJECT_CLASS_FLOAT32ARRAY DUK_HOBJECT_CLASS_FLOAT32ARRAY6259,320406
#define DUK_HOBJECT_CLASS_FLOAT64ARRAY DUK_HOBJECT_CLASS_FLOAT64ARRAY6260,320456
#define DUK_HOBJECT_CLASS_BUFOBJ_MAX DUK_HOBJECT_CLASS_BUFOBJ_MAX6261,320506
#define DUK_HOBJECT_CLASS_MAX DUK_HOBJECT_CLASS_MAX6262,320556
#define DUK_HOBJECT_CMASK_ALL DUK_HOBJECT_CMASK_ALL6265,320626
#define DUK_HOBJECT_CMASK_NONE DUK_HOBJECT_CMASK_NONE6266,320718
#define DUK_HOBJECT_CMASK_ARGUMENTS DUK_HOBJECT_CMASK_ARGUMENTS6267,320797
#define DUK_HOBJECT_CMASK_ARRAY DUK_HOBJECT_CMASK_ARRAY6268,320881
#define DUK_HOBJECT_CMASK_BOOLEAN DUK_HOBJECT_CMASK_BOOLEAN6269,320961
#define DUK_HOBJECT_CMASK_DATE DUK_HOBJECT_CMASK_DATE6270,321043
#define DUK_HOBJECT_CMASK_ERROR DUK_HOBJECT_CMASK_ERROR6271,321122
#define DUK_HOBJECT_CMASK_FUNCTION DUK_HOBJECT_CMASK_FUNCTION6272,321202
#define DUK_HOBJECT_CMASK_JSON DUK_HOBJECT_CMASK_JSON6273,321285
#define DUK_HOBJECT_CMASK_MATH DUK_HOBJECT_CMASK_MATH6274,321364
#define DUK_HOBJECT_CMASK_NUMBER DUK_HOBJECT_CMASK_NUMBER6275,321443
#define DUK_HOBJECT_CMASK_OBJECT DUK_HOBJECT_CMASK_OBJECT6276,321524
#define DUK_HOBJECT_CMASK_REGEXP DUK_HOBJECT_CMASK_REGEXP6277,321605
#define DUK_HOBJECT_CMASK_STRING DUK_HOBJECT_CMASK_STRING6278,321686
#define DUK_HOBJECT_CMASK_GLOBAL DUK_HOBJECT_CMASK_GLOBAL6279,321767
#define DUK_HOBJECT_CMASK_SYMBOL DUK_HOBJECT_CMASK_SYMBOL6280,321848
#define DUK_HOBJECT_CMASK_OBJENV DUK_HOBJECT_CMASK_OBJENV6281,321929
#define DUK_HOBJECT_CMASK_DECENV DUK_HOBJECT_CMASK_DECENV6282,322010
#define DUK_HOBJECT_CMASK_POINTER DUK_HOBJECT_CMASK_POINTER6283,322091
#define DUK_HOBJECT_CMASK_ARRAYBUFFER DUK_HOBJECT_CMASK_ARRAYBUFFER6284,322173
#define DUK_HOBJECT_CMASK_DATAVIEW DUK_HOBJECT_CMASK_DATAVIEW6285,322259
#define DUK_HOBJECT_CMASK_INT8ARRAY DUK_HOBJECT_CMASK_INT8ARRAY6286,322342
#define DUK_HOBJECT_CMASK_UINT8ARRAY DUK_HOBJECT_CMASK_UINT8ARRAY6287,322426
#define DUK_HOBJECT_CMASK_UINT8CLAMPEDARRAY DUK_HOBJECT_CMASK_UINT8CLAMPEDARRAY6288,322511
#define DUK_HOBJECT_CMASK_INT16ARRAY DUK_HOBJECT_CMASK_INT16ARRAY6289,322603
#define DUK_HOBJECT_CMASK_UINT16ARRAY DUK_HOBJECT_CMASK_UINT16ARRAY6290,322688
#define DUK_HOBJECT_CMASK_INT32ARRAY DUK_HOBJECT_CMASK_INT32ARRAY6291,322774
#define DUK_HOBJECT_CMASK_UINT32ARRAY DUK_HOBJECT_CMASK_UINT32ARRAY6292,322859
#define DUK_HOBJECT_CMASK_FLOAT32ARRAY DUK_HOBJECT_CMASK_FLOAT32ARRAY6293,322945
#define DUK_HOBJECT_CMASK_FLOAT64ARRAY DUK_HOBJECT_CMASK_FLOAT64ARRAY6294,323032
#define DUK_HOBJECT_CMASK_ALL_BUFOBJS DUK_HOBJECT_CMASK_ALL_BUFOBJS6296,323120
#define DUK_HOBJECT_IS_OBJENV(DUK_HOBJECT_IS_OBJENV6309,323554
#define DUK_HOBJECT_IS_DECENV(DUK_HOBJECT_IS_DECENV6310,323665
#define DUK_HOBJECT_IS_ENV(DUK_HOBJECT_IS_ENV6311,323776
#define DUK_HOBJECT_IS_ARRAY(DUK_HOBJECT_IS_ARRAY6312,323882
#define DUK_HOBJECT_IS_BOUNDFUNC(DUK_HOBJECT_IS_BOUNDFUNC6313,324007
#define DUK_HOBJECT_IS_COMPFUNC(DUK_HOBJECT_IS_COMPFUNC6314,324121
#define DUK_HOBJECT_IS_NATFUNC(DUK_HOBJECT_IS_NATFUNC6315,324234
#define DUK_HOBJECT_IS_BUFOBJ(DUK_HOBJECT_IS_BUFOBJ6317,324388
#define DUK_HOBJECT_IS_BUFOBJ(DUK_HOBJECT_IS_BUFOBJ6319,324505
#define DUK_HOBJECT_IS_THREAD(DUK_HOBJECT_IS_THREAD6321,324561
#define DUK_HOBJECT_IS_PROXY(DUK_HOBJECT_IS_PROXY6323,324703
#define DUK_HOBJECT_IS_PROXY(DUK_HOBJECT_IS_PROXY6325,324793
#define DUK_HOBJECT_IS_NONBOUND_FUNCTION(DUK_HOBJECT_IS_NONBOUND_FUNCTION6328,324850
#define DUK_HOBJECT_IS_FUNCTION(DUK_HOBJECT_IS_FUNCTION6332,325107
#define DUK_HOBJECT_IS_CALLABLE(DUK_HOBJECT_IS_CALLABLE6337,325451
#define DUK_HOBJECT_EXOTIC_BEHAVIOR_FLAGS DUK_HOBJECT_EXOTIC_BEHAVIOR_FLAGS6340,325570
#define DUK_HOBJECT_HAS_EXOTIC_BEHAVIOR(DUK_HOBJECT_HAS_EXOTIC_BEHAVIOR6345,325982
#define DUK_HOBJECT_VIRTUAL_PROPERTY_FLAGS DUK_HOBJECT_VIRTUAL_PROPERTY_FLAGS6348,326175
#define DUK_HOBJECT_HAS_VIRTUAL_PROPERTIES(DUK_HOBJECT_HAS_VIRTUAL_PROPERTIES6351,326416
#define DUK_HOBJECT_HAS_EXTENSIBLE(DUK_HOBJECT_HAS_EXTENSIBLE6353,326539
#define DUK_HOBJECT_HAS_CONSTRUCTABLE(DUK_HOBJECT_HAS_CONSTRUCTABLE6354,326654
#define DUK_HOBJECT_HAS_CALLABLE(DUK_HOBJECT_HAS_CALLABLE6355,326772
#define DUK_HOBJECT_HAS_BOUNDFUNC(DUK_HOBJECT_HAS_BOUNDFUNC6356,326885
#define DUK_HOBJECT_HAS_COMPFUNC(DUK_HOBJECT_HAS_COMPFUNC6357,326999
#define DUK_HOBJECT_HAS_NATFUNC(DUK_HOBJECT_HAS_NATFUNC6358,327112
#define DUK_HOBJECT_HAS_BUFOBJ(DUK_HOBJECT_HAS_BUFOBJ6360,327266
#define DUK_HOBJECT_HAS_BUFOBJ(DUK_HOBJECT_HAS_BUFOBJ6362,327383
#define DUK_HOBJECT_HAS_FASTREFS(DUK_HOBJECT_HAS_FASTREFS6364,327439
#define DUK_HOBJECT_HAS_ARRAY_PART(DUK_HOBJECT_HAS_ARRAY_PART6365,327552
#define DUK_HOBJECT_HAS_STRICT(DUK_HOBJECT_HAS_STRICT6366,327667
#define DUK_HOBJECT_HAS_NOTAIL(DUK_HOBJECT_HAS_NOTAIL6367,327778
#define DUK_HOBJECT_HAS_NEWENV(DUK_HOBJECT_HAS_NEWENV6368,327889
#define DUK_HOBJECT_HAS_NAMEBINDING(DUK_HOBJECT_HAS_NAMEBINDING6369,328000
#define DUK_HOBJECT_HAS_CREATEARGS(DUK_HOBJECT_HAS_CREATEARGS6370,328116
#define DUK_HOBJECT_HAS_HAVE_FINALIZER(DUK_HOBJECT_HAS_HAVE_FINALIZER6371,328231
#define DUK_HOBJECT_HAS_EXOTIC_ARRAY(DUK_HOBJECT_HAS_EXOTIC_ARRAY6372,328350
#define DUK_HOBJECT_HAS_EXOTIC_STRINGOBJ(DUK_HOBJECT_HAS_EXOTIC_STRINGOBJ6373,328467
#define DUK_HOBJECT_HAS_EXOTIC_ARGUMENTS(DUK_HOBJECT_HAS_EXOTIC_ARGUMENTS6374,328588
#define DUK_HOBJECT_HAS_EXOTIC_PROXYOBJ(DUK_HOBJECT_HAS_EXOTIC_PROXYOBJ6376,328740
#define DUK_HOBJECT_HAS_EXOTIC_PROXYOBJ(DUK_HOBJECT_HAS_EXOTIC_PROXYOBJ6378,328866
#define DUK_HOBJECT_HAS_SPECIAL_CALL(DUK_HOBJECT_HAS_SPECIAL_CALL6380,328922
#define DUK_HOBJECT_SET_EXTENSIBLE(DUK_HOBJECT_SET_EXTENSIBLE6382,329040
#define DUK_HOBJECT_SET_CONSTRUCTABLE(DUK_HOBJECT_SET_CONSTRUCTABLE6383,329153
#define DUK_HOBJECT_SET_CALLABLE(DUK_HOBJECT_SET_CALLABLE6384,329269
#define DUK_HOBJECT_SET_BOUNDFUNC(DUK_HOBJECT_SET_BOUNDFUNC6385,329380
#define DUK_HOBJECT_SET_COMPFUNC(DUK_HOBJECT_SET_COMPFUNC6386,329492
#define DUK_HOBJECT_SET_NATFUNC(DUK_HOBJECT_SET_NATFUNC6387,329603
#define DUK_HOBJECT_SET_BUFOBJ(DUK_HOBJECT_SET_BUFOBJ6389,329755
#define DUK_HOBJECT_SET_FASTREFS(DUK_HOBJECT_SET_FASTREFS6391,329871
#define DUK_HOBJECT_SET_ARRAY_PART(DUK_HOBJECT_SET_ARRAY_PART6392,329982
#define DUK_HOBJECT_SET_STRICT(DUK_HOBJECT_SET_STRICT6393,330095
#define DUK_HOBJECT_SET_NOTAIL(DUK_HOBJECT_SET_NOTAIL6394,330204
#define DUK_HOBJECT_SET_NEWENV(DUK_HOBJECT_SET_NEWENV6395,330313
#define DUK_HOBJECT_SET_NAMEBINDING(DUK_HOBJECT_SET_NAMEBINDING6396,330422
#define DUK_HOBJECT_SET_CREATEARGS(DUK_HOBJECT_SET_CREATEARGS6397,330536
#define DUK_HOBJECT_SET_HAVE_FINALIZER(DUK_HOBJECT_SET_HAVE_FINALIZER6398,330649
#define DUK_HOBJECT_SET_EXOTIC_ARRAY(DUK_HOBJECT_SET_EXOTIC_ARRAY6399,330766
#define DUK_HOBJECT_SET_EXOTIC_STRINGOBJ(DUK_HOBJECT_SET_EXOTIC_STRINGOBJ6400,330881
#define DUK_HOBJECT_SET_EXOTIC_ARGUMENTS(DUK_HOBJECT_SET_EXOTIC_ARGUMENTS6401,331000
#define DUK_HOBJECT_SET_EXOTIC_PROXYOBJ(DUK_HOBJECT_SET_EXOTIC_PROXYOBJ6403,331150
#define DUK_HOBJECT_SET_SPECIAL_CALL(DUK_HOBJECT_SET_SPECIAL_CALL6405,331275
#define DUK_HOBJECT_CLEAR_EXTENSIBLE(DUK_HOBJECT_CLEAR_EXTENSIBLE6407,331391
#define DUK_HOBJECT_CLEAR_CONSTRUCTABLE(DUK_HOBJECT_CLEAR_CONSTRUCTABLE6408,331506
#define DUK_HOBJECT_CLEAR_CALLABLE(DUK_HOBJECT_CLEAR_CALLABLE6409,331624
#define DUK_HOBJECT_CLEAR_BOUNDFUNC(DUK_HOBJECT_CLEAR_BOUNDFUNC6410,331737
#define DUK_HOBJECT_CLEAR_COMPFUNC(DUK_HOBJECT_CLEAR_COMPFUNC6411,331851
#define DUK_HOBJECT_CLEAR_NATFUNC(DUK_HOBJECT_CLEAR_NATFUNC6412,331964
#define DUK_HOBJECT_CLEAR_BUFOBJ(DUK_HOBJECT_CLEAR_BUFOBJ6414,332118
#define DUK_HOBJECT_CLEAR_FASTREFS(DUK_HOBJECT_CLEAR_FASTREFS6416,332236
#define DUK_HOBJECT_CLEAR_ARRAY_PART(DUK_HOBJECT_CLEAR_ARRAY_PART6417,332349
#define DUK_HOBJECT_CLEAR_STRICT(DUK_HOBJECT_CLEAR_STRICT6418,332464
#define DUK_HOBJECT_CLEAR_NOTAIL(DUK_HOBJECT_CLEAR_NOTAIL6419,332575
#define DUK_HOBJECT_CLEAR_NEWENV(DUK_HOBJECT_CLEAR_NEWENV6420,332686
#define DUK_HOBJECT_CLEAR_NAMEBINDING(DUK_HOBJECT_CLEAR_NAMEBINDING6421,332797
#define DUK_HOBJECT_CLEAR_CREATEARGS(DUK_HOBJECT_CLEAR_CREATEARGS6422,332913
#define DUK_HOBJECT_CLEAR_HAVE_FINALIZER(DUK_HOBJECT_CLEAR_HAVE_FINALIZER6423,333028
#define DUK_HOBJECT_CLEAR_EXOTIC_ARRAY(DUK_HOBJECT_CLEAR_EXOTIC_ARRAY6424,333147
#define DUK_HOBJECT_CLEAR_EXOTIC_STRINGOBJ(DUK_HOBJECT_CLEAR_EXOTIC_STRINGOBJ6425,333264
#define DUK_HOBJECT_CLEAR_EXOTIC_ARGUMENTS(DUK_HOBJECT_CLEAR_EXOTIC_ARGUMENTS6426,333385
#define DUK_HOBJECT_CLEAR_EXOTIC_PROXYOBJ(DUK_HOBJECT_CLEAR_EXOTIC_PROXYOBJ6428,333537
#define DUK_HOBJECT_CLEAR_SPECIAL_CALL(DUK_HOBJECT_CLEAR_SPECIAL_CALL6430,333664
#define DUK_HOBJECT_PROHIBITS_FASTREFS(DUK_HOBJECT_PROHIBITS_FASTREFS6436,333959
#define DUK_HOBJECT_ALLOWS_FASTREFS(DUK_HOBJECT_ALLOWS_FASTREFS6440,334225
#define DUK_PROPDESC_FLAG_WRITABLE DUK_PROPDESC_FLAG_WRITABLE6445,334405
#define DUK_PROPDESC_FLAG_ENUMERABLE DUK_PROPDESC_FLAG_ENUMERABLE6446,334489
#define DUK_PROPDESC_FLAG_CONFIGURABLE DUK_PROPDESC_FLAG_CONFIGURABLE6447,334573
#define DUK_PROPDESC_FLAG_ACCESSOR DUK_PROPDESC_FLAG_ACCESSOR6448,334657
#define DUK_PROPDESC_FLAG_VIRTUAL DUK_PROPDESC_FLAG_VIRTUAL6449,334733
#define DUK_PROPDESC_FLAGS_MASK DUK_PROPDESC_FLAGS_MASK6452,335021
#define DUK_PROPDESC_FLAG_NO_OVERWRITE DUK_PROPDESC_FLAG_NO_OVERWRITE6460,335475
#define DUK_PROPDESC_FLAGS_NONE DUK_PROPDESC_FLAGS_NONE6463,335650
#define DUK_PROPDESC_FLAGS_W DUK_PROPDESC_FLAGS_W6464,335700
#define DUK_PROPDESC_FLAGS_E DUK_PROPDESC_FLAGS_E6465,335777
#define DUK_PROPDESC_FLAGS_C DUK_PROPDESC_FLAGS_C6466,335856
#define DUK_PROPDESC_FLAGS_WE DUK_PROPDESC_FLAGS_WE6467,335937
#define DUK_PROPDESC_FLAGS_WC DUK_PROPDESC_FLAGS_WC6468,336045
#define DUK_PROPDESC_FLAGS_EC DUK_PROPDESC_FLAGS_EC6469,336155
#define DUK_PROPDESC_FLAGS_WEC DUK_PROPDESC_FLAGS_WEC6470,336267
#define DUK_GETDESC_FLAG_PUSH_VALUE DUK_GETDESC_FLAG_PUSH_VALUE6475,336572
#define DUK_GETDESC_FLAG_IGNORE_PROTOLOOP DUK_GETDESC_FLAG_IGNORE_PROTOLOOP6476,336654
#define DUK_HOBJECT_ASSERT_VALID(DUK_HOBJECT_ASSERT_VALID6486,336967
#define DUK_HOBJECT_ASSERT_VALID(DUK_HOBJECT_ASSERT_VALID6488,337058
#define DUK_HOBJECT_GET_PROPS(DUK_HOBJECT_GET_PROPS6496,337203
#define DUK_HOBJECT_SET_PROPS(DUK_HOBJECT_SET_PROPS6498,337338
#define DUK_HOBJECT_GET_PROPS(DUK_HOBJECT_GET_PROPS6502,337500
#define DUK_HOBJECT_SET_PROPS(DUK_HOBJECT_SET_PROPS6504,337554
#define DUK_HOBJECT_E_GET_KEY_BASE(DUK_HOBJECT_E_GET_KEY_BASE6511,337713
#define DUK_HOBJECT_E_GET_VALUE_BASE(DUK_HOBJECT_E_GET_VALUE_BASE6515,337833
#define DUK_HOBJECT_E_GET_FLAGS_BASE(DUK_HOBJECT_E_GET_FLAGS_BASE6520,338014
#define DUK_HOBJECT_A_GET_BASE(DUK_HOBJECT_A_GET_BASE6524,338214
#define DUK_HOBJECT_H_GET_BASE(DUK_HOBJECT_H_GET_BASE6529,338432
#define DUK_HOBJECT_P_COMPUTE_SIZE(DUK_HOBJECT_P_COMPUTE_SIZE6535,338707
#define DUK_HOBJECT_P_SET_REALLOC_PTRS(DUK_HOBJECT_P_SET_REALLOC_PTRS6541,338927
#define DUK_HOBJECT_E_FLAG_PADDING(DUK_HOBJECT_E_FLAG_PADDING6551,339438
#define DUK_HOBJECT_E_FLAG_PADDING(DUK_HOBJECT_E_FLAG_PADDING6553,339531
#define DUK_HOBJECT_E_FLAG_PADDING(DUK_HOBJECT_E_FLAG_PADDING6555,339624
#define DUK_HOBJECT_E_GET_KEY_BASE(DUK_HOBJECT_E_GET_KEY_BASE6559,339712
#define DUK_HOBJECT_E_GET_VALUE_BASE(DUK_HOBJECT_E_GET_VALUE_BASE6564,339890
#define DUK_HOBJECT_E_GET_FLAGS_BASE(DUK_HOBJECT_E_GET_FLAGS_BASE6568,340013
#define DUK_HOBJECT_A_GET_BASE(DUK_HOBJECT_A_GET_BASE6572,340213
#define DUK_HOBJECT_H_GET_BASE(DUK_HOBJECT_H_GET_BASE6578,340493
#define DUK_HOBJECT_P_COMPUTE_SIZE(DUK_HOBJECT_P_COMPUTE_SIZE6585,340830
#define DUK_HOBJECT_P_SET_REALLOC_PTRS(DUK_HOBJECT_P_SET_REALLOC_PTRS6592,341092
#define DUK_HOBJECT_E_GET_KEY_BASE(DUK_HOBJECT_E_GET_KEY_BASE6603,341727
#define DUK_HOBJECT_E_GET_VALUE_BASE(DUK_HOBJECT_E_GET_VALUE_BASE6609,341958
#define DUK_HOBJECT_E_GET_FLAGS_BASE(DUK_HOBJECT_E_GET_FLAGS_BASE6613,342081
#define DUK_HOBJECT_A_GET_BASE(DUK_HOBJECT_A_GET_BASE6620,342396
#define DUK_HOBJECT_H_GET_BASE(DUK_HOBJECT_H_GET_BASE6625,342566
#define DUK_HOBJECT_P_COMPUTE_SIZE(DUK_HOBJECT_P_COMPUTE_SIZE6631,342819
#define DUK_HOBJECT_P_SET_REALLOC_PTRS(DUK_HOBJECT_P_SET_REALLOC_PTRS6637,343039
#define DUK_HOBJECT_P_ALLOC_SIZE(DUK_HOBJECT_P_ALLOC_SIZE6648,343549
#define DUK_HOBJECT_E_GET_KEY(DUK_HOBJECT_E_GET_KEY6651,343700
#define DUK_HOBJECT_E_GET_KEY_PTR(DUK_HOBJECT_E_GET_KEY_PTR6652,343800
#define DUK_HOBJECT_E_GET_VALUE(DUK_HOBJECT_E_GET_VALUE6653,343901
#define DUK_HOBJECT_E_GET_VALUE_PTR(DUK_HOBJECT_E_GET_VALUE_PTR6654,344003
#define DUK_HOBJECT_E_GET_VALUE_TVAL(DUK_HOBJECT_E_GET_VALUE_TVAL6655,344106
#define DUK_HOBJECT_E_GET_VALUE_TVAL_PTR(DUK_HOBJECT_E_GET_VALUE_TVAL_PTR6656,344205
#define DUK_HOBJECT_E_GET_VALUE_GETTER(DUK_HOBJECT_E_GET_VALUE_GETTER6657,344305
#define DUK_HOBJECT_E_GET_VALUE_GETTER_PTR(DUK_HOBJECT_E_GET_VALUE_GETTER_PTR6658,344408
#define DUK_HOBJECT_E_GET_VALUE_SETTER(DUK_HOBJECT_E_GET_VALUE_SETTER6659,344512
#define DUK_HOBJECT_E_GET_VALUE_SETTER_PTR(DUK_HOBJECT_E_GET_VALUE_SETTER_PTR6660,344615
#define DUK_HOBJECT_E_GET_FLAGS(DUK_HOBJECT_E_GET_FLAGS6661,344719
#define DUK_HOBJECT_E_GET_FLAGS_PTR(DUK_HOBJECT_E_GET_FLAGS_PTR6662,344821
#define DUK_HOBJECT_A_GET_VALUE(DUK_HOBJECT_A_GET_VALUE6663,344924
#define DUK_HOBJECT_A_GET_VALUE_PTR(DUK_HOBJECT_A_GET_VALUE_PTR6664,345020
#define DUK_HOBJECT_H_GET_INDEX(DUK_HOBJECT_H_GET_INDEX6665,345117
#define DUK_HOBJECT_H_GET_INDEX_PTR(DUK_HOBJECT_H_GET_INDEX_PTR6666,345213
#define DUK_HOBJECT_E_SET_KEY(DUK_HOBJECT_E_SET_KEY6668,345311
#define DUK_HOBJECT_E_SET_VALUE(DUK_HOBJECT_E_SET_VALUE6671,345425
#define DUK_HOBJECT_E_SET_VALUE_TVAL(DUK_HOBJECT_E_SET_VALUE_TVAL6674,345543
#define DUK_HOBJECT_E_SET_VALUE_GETTER(DUK_HOBJECT_E_SET_VALUE_GETTER6677,345668
#define DUK_HOBJECT_E_SET_VALUE_SETTER(DUK_HOBJECT_E_SET_VALUE_SETTER6680,345799
#define DUK_HOBJECT_E_SET_FLAGS(DUK_HOBJECT_E_SET_FLAGS6683,345930
#define DUK_HOBJECT_A_SET_VALUE(DUK_HOBJECT_A_SET_VALUE6686,346062
#define DUK_HOBJECT_A_SET_VALUE_TVAL(DUK_HOBJECT_A_SET_VALUE_TVAL6689,346180
#define DUK_HOBJECT_H_SET_INDEX(DUK_HOBJECT_H_SET_INDEX6691,346302
#define DUK_HOBJECT_E_SET_FLAG_BITS(DUK_HOBJECT_E_SET_FLAG_BITS6695,346421
#define DUK_HOBJECT_E_CLEAR_FLAG_BITS(DUK_HOBJECT_E_CLEAR_FLAG_BITS6699,346556
#define DUK_HOBJECT_E_SLOT_IS_WRITABLE(DUK_HOBJECT_E_SLOT_IS_WRITABLE6703,346694
#define DUK_HOBJECT_E_SLOT_IS_ENUMERABLE(DUK_HOBJECT_E_SLOT_IS_ENUMERABLE6704,346827
#define DUK_HOBJECT_E_SLOT_IS_CONFIGURABLE(DUK_HOBJECT_E_SLOT_IS_CONFIGURABLE6705,346962
#define DUK_HOBJECT_E_SLOT_IS_ACCESSOR(DUK_HOBJECT_E_SLOT_IS_ACCESSOR6706,347099
#define DUK_HOBJECT_E_SLOT_SET_WRITABLE(DUK_HOBJECT_E_SLOT_SET_WRITABLE6708,347233
#define DUK_HOBJECT_E_SLOT_SET_ENUMERABLE(DUK_HOBJECT_E_SLOT_SET_ENUMERABLE6709,347363
#define DUK_HOBJECT_E_SLOT_SET_CONFIGURABLE(DUK_HOBJECT_E_SLOT_SET_CONFIGURABLE6710,347495
#define DUK_HOBJECT_E_SLOT_SET_ACCESSOR(DUK_HOBJECT_E_SLOT_SET_ACCESSOR6711,347629
#define DUK_HOBJECT_E_SLOT_CLEAR_WRITABLE(DUK_HOBJECT_E_SLOT_CLEAR_WRITABLE6713,347760
#define DUK_HOBJECT_E_SLOT_CLEAR_ENUMERABLE(DUK_HOBJECT_E_SLOT_CLEAR_ENUMERABLE6714,347892
#define DUK_HOBJECT_E_SLOT_CLEAR_CONFIGURABLE(DUK_HOBJECT_E_SLOT_CLEAR_CONFIGURABLE6715,348026
#define DUK_HOBJECT_E_SLOT_CLEAR_ACCESSOR(DUK_HOBJECT_E_SLOT_CLEAR_ACCESSOR6716,348162
#define DUK_PROPDESC_IS_WRITABLE(DUK_PROPDESC_IS_WRITABLE6718,348295
#define DUK_PROPDESC_IS_ENUMERABLE(DUK_PROPDESC_IS_ENUMERABLE6719,348392
#define DUK_PROPDESC_IS_CONFIGURABLE(DUK_PROPDESC_IS_CONFIGURABLE6720,348491
#define DUK_PROPDESC_IS_ACCESSOR(DUK_PROPDESC_IS_ACCESSOR6721,348592
#define DUK_HOBJECT_HASHIDX_UNUSED DUK_HOBJECT_HASHIDX_UNUSED6723,348690
#define DUK_HOBJECT_HASHIDX_DELETED DUK_HOBJECT_HASHIDX_DELETED6724,348751
#define DUK_HOBJECT_GET_ESIZE(DUK_HOBJECT_GET_ESIZE6731,348890
#define DUK_HOBJECT_SET_ESIZE(DUK_HOBJECT_SET_ESIZE6732,348939
#define DUK_HOBJECT_GET_ENEXT(DUK_HOBJECT_GET_ENEXT6733,349012
#define DUK_HOBJECT_SET_ENEXT(DUK_HOBJECT_SET_ENEXT6734,349061
#define DUK_HOBJECT_POSTINC_ENEXT(DUK_HOBJECT_POSTINC_ENEXT6735,349134
#define DUK_HOBJECT_GET_ASIZE(DUK_HOBJECT_GET_ASIZE6736,349189
#define DUK_HOBJECT_SET_ASIZE(DUK_HOBJECT_SET_ASIZE6737,349238
#define DUK_HOBJECT_GET_HSIZE(DUK_HOBJECT_GET_HSIZE6739,349350
#define DUK_HOBJECT_SET_HSIZE(DUK_HOBJECT_SET_HSIZE6740,349399
#define DUK_HOBJECT_GET_HSIZE(DUK_HOBJECT_GET_HSIZE6742,349478
#define DUK_HOBJECT_SET_HSIZE(DUK_HOBJECT_SET_HSIZE6743,349513
#define DUK_HOBJECT_GET_ESIZE(DUK_HOBJECT_GET_ESIZE6746,349600
#define DUK_HOBJECT_SET_ESIZE(DUK_HOBJECT_SET_ESIZE6747,349647
#define DUK_HOBJECT_GET_ENEXT(DUK_HOBJECT_GET_ENEXT6748,349718
#define DUK_HOBJECT_SET_ENEXT(DUK_HOBJECT_SET_ENEXT6749,349765
#define DUK_HOBJECT_POSTINC_ENEXT(DUK_HOBJECT_POSTINC_ENEXT6750,349836
#define DUK_HOBJECT_GET_ASIZE(DUK_HOBJECT_GET_ASIZE6751,349889
#define DUK_HOBJECT_SET_ASIZE(DUK_HOBJECT_SET_ASIZE6752,349936
#define DUK_HOBJECT_GET_HSIZE(DUK_HOBJECT_GET_HSIZE6754,350046
#define DUK_HOBJECT_SET_HSIZE(DUK_HOBJECT_SET_HSIZE6755,350093
#define DUK_HOBJECT_GET_HSIZE(DUK_HOBJECT_GET_HSIZE6757,350170
#define DUK_HOBJECT_SET_HSIZE(DUK_HOBJECT_SET_HSIZE6758,350205
#define DUK_HOBJECT_PROTOTYPE_CHAIN_SANITY DUK_HOBJECT_PROTOTYPE_CHAIN_SANITY6769,350460
#define DUK_HOBJECT_CLASS_NUMBER_TO_STRIDX(DUK_HOBJECT_CLASS_NUMBER_TO_STRIDX6776,350617
#define DUK_HOBJECT_GET_CLASS_STRING(DUK_HOBJECT_GET_CLASS_STRING6778,350697
#define DUK_HOBJECT_GET_PROTOTYPE(DUK_HOBJECT_GET_PROTOTYPE6789,350939
#define DUK_HOBJECT_SET_PROTOTYPE(DUK_HOBJECT_SET_PROTOTYPE6791,351062
#define DUK_HOBJECT_GET_PROTOTYPE(DUK_HOBJECT_GET_PROTOTYPE6795,351212
#define DUK_HOBJECT_SET_PROTOTYPE(DUK_HOBJECT_SET_PROTOTYPE6797,351274
#define DUK_HOBJECT_SET_PROTOTYPE_UPDREF(DUK_HOBJECT_SET_PROTOTYPE_UPDREF6803,351452
#define DUK_HOBJECT_SET_PROTOTYPE_INIT_INCREF(DUK_HOBJECT_SET_PROTOTYPE_INIT_INCREF6808,351657
#define DUK_HOBJECT_HAS_FINALIZER_FAST(DUK_HOBJECT_HAS_FINALIZER_FAST6823,352130
#define DUK_HOBJECT_HAS_FINALIZER_FAST(DUK_HOBJECT_HAS_FINALIZER_FAST6825,352231
#define DUK_HOBJECT_MAX_PROPERTIES DUK_HOBJECT_MAX_PROPERTIES6839,352761
#define DUK_HOBJECT_MAX_PROPERTIES DUK_HOBJECT_MAX_PROPERTIES6841,352821
#define DUK_HOBJECT_ALIGN_TARGET DUK_HOBJECT_ALIGN_TARGET6846,353017
#define DUK_HOBJECT_ALIGN_TARGET DUK_HOBJECT_ALIGN_TARGET6848,353090
#define DUK_HOBJECT_ALIGN_TARGET DUK_HOBJECT_ALIGN_TARGET6850,353163
#define DUK_PC2LINE_SKIP DUK_PC2LINE_SKIP6859,353285
#define DUK_PC2LINE_MAX_DIFF_LENGTH DUK_PC2LINE_MAX_DIFF_LENGTH6862,353402
struct duk_propaccessor {duk_propaccessor6868,353506
	duk_hobject *get;get6869,353532
	duk_hobject *set;set6870,353551
union duk_propvalue {duk_propvalue6873,353574
	duk_tval v;v6878,353765
	duk_propaccessor a;a6879,353778
struct duk_propdesc {duk_propdesc6882,353803
	duk_small_uint_t flags;flags6884,353874
	duk_hobject *get;get6885,353899
	duk_hobject *set;set6886,353918
	duk_int_t e_idx;  /* prop index in 'entry part', < 0 if not there */e_idx6889,354002
	duk_int_t h_idx;  /* prop index in 'hash part', < 0 if not there */h_idx6890,354072
	duk_int_t a_idx;  /* prop index in 'array part', < 0 if not there */a_idx6891,354141
struct duk_hobject {duk_hobject6894,354215
	duk_heaphdr hdr;hdr6895,354236
	duk_uint8_t *props;props6968,358503
	duk_uint16_t prototype16;prototype166973,358647
	duk_hobject *prototype;prototype6975,358680
	duk_uint16_t e_size16;e_size166979,358745
	duk_uint16_t e_next16;e_next166980,358769
	duk_uint16_t a_size16;a_size166981,358793
	duk_uint16_t h_size16;h_size166983,358856
	duk_uint32_t e_size;  /* entry part size */e_size6986,358893
	duk_uint32_t e_next;  /* index for next new key ([0,e_next[ are gc reachable) */e_next6987,358938
	duk_uint32_t a_size;  /* array part size (entirely gc reachable) */a_size6988,359020
	duk_uint32_t h_size;  /* hash part size or 0 if unused */h_size6990,359128
DUK_INTERNAL_DECL duk_uint8_t duk_class_number_to_stridx[32];duk_class_number_to_stridx7000,359260
#define DUK_DELPROP_FLAG_THROW DUK_DELPROP_FLAG_THROW7054,362892
#define DUK_DELPROP_FLAG_FORCE DUK_DELPROP_FLAG_FORCE7055,362934
#define DUK_HCOMPFUNC_H_INCLUDEDDUK_HCOMPFUNC_H_INCLUDED7140,367948
#define DUK_HCOMPFUNC_GET_DATA(DUK_HCOMPFUNC_GET_DATA7149,368112
#define DUK_HCOMPFUNC_SET_DATA(DUK_HCOMPFUNC_SET_DATA7151,368242
#define DUK_HCOMPFUNC_GET_FUNCS(DUK_HCOMPFUNC_GET_FUNCS7154,368378
#define DUK_HCOMPFUNC_SET_FUNCS(DUK_HCOMPFUNC_SET_FUNCS7156,368508
#define DUK_HCOMPFUNC_GET_BYTECODE(DUK_HCOMPFUNC_GET_BYTECODE7159,368647
#define DUK_HCOMPFUNC_SET_BYTECODE(DUK_HCOMPFUNC_SET_BYTECODE7161,368782
#define DUK_HCOMPFUNC_GET_LEXENV(DUK_HCOMPFUNC_GET_LEXENV7164,368927
#define DUK_HCOMPFUNC_SET_LEXENV(DUK_HCOMPFUNC_SET_LEXENV7166,369059
#define DUK_HCOMPFUNC_GET_VARENV(DUK_HCOMPFUNC_GET_VARENV7169,369201
#define DUK_HCOMPFUNC_SET_VARENV(DUK_HCOMPFUNC_SET_VARENV7171,369333
#define DUK_HCOMPFUNC_GET_DATA(DUK_HCOMPFUNC_GET_DATA7175,369481
#define DUK_HCOMPFUNC_SET_DATA(DUK_HCOMPFUNC_SET_DATA7176,369564
#define DUK_HCOMPFUNC_GET_FUNCS(DUK_HCOMPFUNC_GET_FUNCS7179,369662
#define DUK_HCOMPFUNC_SET_FUNCS(DUK_HCOMPFUNC_SET_FUNCS7180,369716
#define DUK_HCOMPFUNC_GET_BYTECODE(DUK_HCOMPFUNC_GET_BYTECODE7183,369801
#define DUK_HCOMPFUNC_SET_BYTECODE(DUK_HCOMPFUNC_SET_BYTECODE7184,369861
#define DUK_HCOMPFUNC_GET_LEXENV(DUK_HCOMPFUNC_GET_LEXENV7187,369952
#define DUK_HCOMPFUNC_SET_LEXENV(DUK_HCOMPFUNC_SET_LEXENV7188,370009
#define DUK_HCOMPFUNC_GET_VARENV(DUK_HCOMPFUNC_GET_VARENV7191,370097
#define DUK_HCOMPFUNC_SET_VARENV(DUK_HCOMPFUNC_SET_VARENV7192,370154
#define DUK_HCOMPFUNC_GET_BUFFER_BASE(DUK_HCOMPFUNC_GET_BUFFER_BASE7202,370363
#define DUK_HCOMPFUNC_GET_CONSTS_BASE(DUK_HCOMPFUNC_GET_CONSTS_BASE7205,370490
#define DUK_HCOMPFUNC_GET_FUNCS_BASE(DUK_HCOMPFUNC_GET_FUNCS_BASE7208,370608
#define DUK_HCOMPFUNC_GET_CODE_BASE(DUK_HCOMPFUNC_GET_CODE_BASE7211,370695
#define DUK_HCOMPFUNC_GET_CONSTS_END(DUK_HCOMPFUNC_GET_CONSTS_END7214,370784
#define DUK_HCOMPFUNC_GET_FUNCS_END(DUK_HCOMPFUNC_GET_FUNCS_END7217,370895
#define DUK_HCOMPFUNC_GET_CODE_END(DUK_HCOMPFUNC_GET_CODE_END7221,371069
#define DUK_HCOMPFUNC_GET_CONSTS_SIZE(DUK_HCOMPFUNC_GET_CONSTS_SIZE7225,371315
#define DUK_HCOMPFUNC_GET_FUNCS_SIZE(DUK_HCOMPFUNC_GET_FUNCS_SIZE7234,371549
#define DUK_HCOMPFUNC_GET_CODE_SIZE(DUK_HCOMPFUNC_GET_CODE_SIZE7243,371780
#define DUK_HCOMPFUNC_GET_CONSTS_COUNT(DUK_HCOMPFUNC_GET_CONSTS_COUNT7252,372006
#define DUK_HCOMPFUNC_GET_FUNCS_COUNT(DUK_HCOMPFUNC_GET_FUNCS_COUNT7255,372137
#define DUK_HCOMPFUNC_GET_CODE_COUNT(DUK_HCOMPFUNC_GET_CODE_COUNT7258,372271
#define DUK_HCOMPFUNC_ASSERT_VALID(DUK_HCOMPFUNC_ASSERT_VALID7267,372530
#define DUK_HCOMPFUNC_ASSERT_VALID(DUK_HCOMPFUNC_ASSERT_VALID7269,372625
struct duk_hcompfunc {duk_hcompfunc7276,372712
	duk_hobject obj;obj7278,372761
	duk_uint16_t data16;data167303,373714
	duk_hbuffer *data;data7305,373742
	duk_uint16_t funcs16;funcs167316,374100
	duk_uint16_t bytecode16;bytecode167317,374123
	duk_hobject **funcs;funcs7319,374155
	duk_instr_t *bytecode;bytecode7320,374177
	duk_uint16_t lex_env16;lex_env167327,374374
	duk_uint16_t var_env16;var_env167328,374399
	duk_hobject *lex_env;lex_env7330,374430
	duk_hobject *var_env;var_env7331,374453
	duk_uint16_t nregs;                /* regs to allocate */nregs7356,375670
	duk_uint16_t nargs;                /* number of arguments allocated to regs */nargs7357,375729
	duk_uint32_t start_line;start_line7399,377183
	duk_uint32_t end_line;end_line7400,377209
#define DUK_HNATFUNC_H_INCLUDEDDUK_HNATFUNC_H_INCLUDED7412,377425
#define DUK_HNATFUNC_ASSERT_VALID(DUK_HNATFUNC_ASSERT_VALID7416,377557
#define DUK_HNATFUNC_ASSERT_VALID(DUK_HNATFUNC_ASSERT_VALID7418,377650
#define DUK_HNATFUNC_NARGS_VARARGS DUK_HNATFUNC_NARGS_VARARGS7421,377712
#define DUK_HNATFUNC_NARGS_MAX DUK_HNATFUNC_NARGS_MAX7422,377767
struct duk_hnatfunc {duk_hnatfunc7424,377827
	duk_hobject obj;obj7426,377875
	duk_c_function func;func7428,377894
	duk_int16_t nargs;nargs7429,377916
	duk_int16_t magic;magic7430,377936
#define DUK_HBOUNDFUNC_H_INCLUDEDDUK_HBOUNDFUNC_H_INCLUDED7453,378731
#define DUK_HBOUNDFUNC_MAX_ARGS DUK_HBOUNDFUNC_MAX_ARGS7458,378885
#define DUK_HBOUNDFUNC_ASSERT_VALID(DUK_HBOUNDFUNC_ASSERT_VALID7462,379034
#define DUK_HBOUNDFUNC_ASSERT_VALID(DUK_HBOUNDFUNC_ASSERT_VALID7464,379131
struct duk_hboundfunc {duk_hboundfunc7467,379195
	duk_hobject obj;obj7469,379246
	duk_tval target;target7474,379362
	duk_tval this_binding;this_binding7477,379402
	duk_tval *args;  /* Separate allocation. */args7480,379456
	duk_idx_t nargs;nargs7481,379501
#define DUK_HBUFOBJ_H_INCLUDEDDUK_HBUFOBJ_H_INCLUDED7492,379731
#define DUK_HBUFOBJ_ELEM_UINT8 DUK_HBUFOBJ_ELEM_UINT87497,379883
#define DUK_HBUFOBJ_ELEM_UINT8CLAMPED DUK_HBUFOBJ_ELEM_UINT8CLAMPED7498,379926
#define DUK_HBUFOBJ_ELEM_INT8 DUK_HBUFOBJ_ELEM_INT87499,379969
#define DUK_HBUFOBJ_ELEM_UINT16 DUK_HBUFOBJ_ELEM_UINT167500,380012
#define DUK_HBUFOBJ_ELEM_INT16 DUK_HBUFOBJ_ELEM_INT167501,380055
#define DUK_HBUFOBJ_ELEM_UINT32 DUK_HBUFOBJ_ELEM_UINT327502,380098
#define DUK_HBUFOBJ_ELEM_INT32 DUK_HBUFOBJ_ELEM_INT327503,380141
#define DUK_HBUFOBJ_ELEM_FLOAT32 DUK_HBUFOBJ_ELEM_FLOAT327504,380184
#define DUK_HBUFOBJ_ELEM_FLOAT64 DUK_HBUFOBJ_ELEM_FLOAT647505,380227
#define DUK_HBUFOBJ_ELEM_MAX DUK_HBUFOBJ_ELEM_MAX7506,380270
#define DUK_HBUFOBJ_ASSERT_VALID(DUK_HBUFOBJ_ASSERT_VALID7510,380411
#define DUK_HBUFOBJ_ASSERT_VALID(DUK_HBUFOBJ_ASSERT_VALID7512,380502
#define DUK_HBUFOBJ_GET_SLICE_BASE(DUK_HBUFOBJ_GET_SLICE_BASE7519,380760
#define DUK_HBUFOBJ_FULL_SLICE(DUK_HBUFOBJ_FULL_SLICE7528,381190
#define DUK_HBUFOBJ_VALID_SLICE(DUK_HBUFOBJ_VALID_SLICE7535,381491
#define DUK_HBUFOBJ_VALID_BYTEOFFSET_INCL(DUK_HBUFOBJ_VALID_BYTEOFFSET_INCL7546,382053
#define DUK_HBUFOBJ_VALID_BYTEOFFSET_EXCL(DUK_HBUFOBJ_VALID_BYTEOFFSET_EXCL7550,382231
#define DUK_HBUFOBJ_CLAMP_BYTELENGTH(DUK_HBUFOBJ_CLAMP_BYTELENGTH7560,382744
#define DUK_HBUFOBJ_HAS_VIRTUAL_INDICES(DUK_HBUFOBJ_HAS_VIRTUAL_INDICES7565,382942
struct duk_hbufobj {duk_hbufobj7567,383008
	duk_hobject obj;obj7569,383056
	duk_hbuffer *buf;buf7572,383127
	duk_hobject *buf_prop;buf_prop7575,383204
	duk_uint_t offset;       /* byte offset to buf */offset7590,383760
	duk_uint_t length;       /* byte index limit for element access, exclusive */length7591,383811
	duk_uint8_t shift;       /* element size shift:shift7592,383890
	duk_uint8_t elem_type;   /* element type */elem_type7598,384144
	duk_uint8_t is_typedarray;is_typedarray7599,384189
#define DUK_HTHREAD_H_INCLUDEDDUK_HTHREAD_H_INCLUDED7625,385226
#define DUK_VALSTACK_INITIAL_SIZE DUK_VALSTACK_INITIAL_SIZE7632,385331
#define DUK_VALSTACK_INTERNAL_EXTRA DUK_VALSTACK_INTERNAL_EXTRA7637,385511
#define DUK_VALSTACK_API_ENTRY_MINIMUM DUK_VALSTACK_API_ENTRY_MINIMUM7643,385724
#define DUK_ACT_FLAG_STRICT DUK_ACT_FLAG_STRICT7649,385816
#define DUK_ACT_FLAG_TAILCALLED DUK_ACT_FLAG_TAILCALLED7650,385906
#define DUK_ACT_FLAG_CONSTRUCT DUK_ACT_FLAG_CONSTRUCT7651,386008
#define DUK_ACT_FLAG_PREVENT_YIELD DUK_ACT_FLAG_PREVENT_YIELD7652,386119
#define DUK_ACT_FLAG_DIRECT_EVAL DUK_ACT_FLAG_DIRECT_EVAL7653,386225
#define DUK_ACT_FLAG_CONSTRUCT_PROXY DUK_ACT_FLAG_CONSTRUCT_PROXY7654,386315
#define DUK_ACT_FLAG_BREAKPOINT_ACTIVE DUK_ACT_FLAG_BREAKPOINT_ACTIVE7655,386444
#define DUK_ACT_GET_FUNC(DUK_ACT_GET_FUNC7657,386538
#define DUK_TB_FLAG_NOBLAME_FILELINE DUK_TB_FLAG_NOBLAME_FILELINE7663,386661
#define DUK_CAT_TYPE_MASK DUK_CAT_TYPE_MASK7672,386932
#define DUK_CAT_TYPE_BITS DUK_CAT_TYPE_BITS7673,386982
#define DUK_CAT_LABEL_MASK DUK_CAT_LABEL_MASK7674,387021
#define DUK_CAT_LABEL_BITS DUK_CAT_LABEL_BITS7675,387071
#define DUK_CAT_LABEL_SHIFT DUK_CAT_LABEL_SHIFT7676,387111
#define DUK_CAT_FLAG_CATCH_ENABLED DUK_CAT_FLAG_CATCH_ENABLED7678,387151
#define DUK_CAT_FLAG_FINALLY_ENABLED DUK_CAT_FLAG_FINALLY_ENABLED7679,387235
#define DUK_CAT_FLAG_CATCH_BINDING_ENABLED DUK_CAT_FLAG_CATCH_BINDING_ENABLED7680,387321
#define DUK_CAT_FLAG_LEXENV_ACTIVE DUK_CAT_FLAG_LEXENV_ACTIVE7681,387415
#define DUK_CAT_TYPE_UNKNOWN DUK_CAT_TYPE_UNKNOWN7683,387520
#define DUK_CAT_TYPE_TCF DUK_CAT_TYPE_TCF7684,387559
#define DUK_CAT_TYPE_LABEL DUK_CAT_TYPE_LABEL7685,387598
#define DUK_CAT_GET_TYPE(DUK_CAT_GET_TYPE7687,387638
#define DUK_CAT_GET_LABEL(DUK_CAT_GET_LABEL7688,387708
#define DUK_CAT_HAS_CATCH_ENABLED(DUK_CAT_HAS_CATCH_ENABLED7690,387805
#define DUK_CAT_HAS_FINALLY_ENABLED(DUK_CAT_HAS_FINALLY_ENABLED7691,387894
#define DUK_CAT_HAS_CATCH_BINDING_ENABLED(DUK_CAT_HAS_CATCH_BINDING_ENABLED7692,387985
#define DUK_CAT_HAS_LEXENV_ACTIVE(DUK_CAT_HAS_LEXENV_ACTIVE7693,388082
#define DUK_CAT_SET_CATCH_ENABLED(DUK_CAT_SET_CATCH_ENABLED7695,388172
#define DUK_CAT_SET_FINALLY_ENABLED(DUK_CAT_SET_FINALLY_ENABLED7698,388278
#define DUK_CAT_SET_CATCH_BINDING_ENABLED(DUK_CAT_SET_CATCH_BINDING_ENABLED7701,388386
#define DUK_CAT_SET_LEXENV_ACTIVE(DUK_CAT_SET_LEXENV_ACTIVE7704,388508
#define DUK_CAT_CLEAR_CATCH_ENABLED(DUK_CAT_CLEAR_CATCH_ENABLED7708,388615
#define DUK_CAT_CLEAR_FINALLY_ENABLED(DUK_CAT_CLEAR_FINALLY_ENABLED7711,388724
#define DUK_CAT_CLEAR_CATCH_BINDING_ENABLED(DUK_CAT_CLEAR_CATCH_BINDING_ENABLED7714,388835
#define DUK_CAT_CLEAR_LEXENV_ACTIVE(DUK_CAT_CLEAR_LEXENV_ACTIVE7717,388960
#define DUK_HTHREAD_GET_STRING(DUK_HTHREAD_GET_STRING7726,389130
#define DUK_HTHREAD_GET_STRING(DUK_HTHREAD_GET_STRING7730,389301
#define DUK_HTHREAD_GET_STRING(DUK_HTHREAD_GET_STRING7733,389437
#define DUK_HTHREAD_STATE_INACTIVE DUK_HTHREAD_STATE_INACTIVE7739,389576
#define DUK_HTHREAD_STATE_RUNNING DUK_HTHREAD_STATE_RUNNING7740,389654
#define DUK_HTHREAD_STATE_RESUMED DUK_HTHREAD_STATE_RESUMED7741,389749
#define DUK_HTHREAD_STATE_YIELDED DUK_HTHREAD_STATE_YIELDED7742,389853
#define DUK_HTHREAD_STATE_TERMINATED DUK_HTHREAD_STATE_TERMINATED7743,389921
#define DUK_HTHREAD_INTCTR_DEFAULT DUK_HTHREAD_INTCTR_DEFAULT7751,390284
#define DUK_HTHREAD_ASSERT_VALID(DUK_HTHREAD_ASSERT_VALID7765,390792
#define DUK_CTX_ASSERT_VALID(DUK_CTX_ASSERT_VALID7769,391000
#define DUK_HTHREAD_ASSERT_VALID(DUK_HTHREAD_ASSERT_VALID7771,391087
#define DUK_CTX_ASSERT_VALID(DUK_CTX_ASSERT_VALID7772,391142
#define DUK_ASSERT_API_ENTRY(DUK_ASSERT_API_ENTRY7778,391348
#define DUK_ASSERT_STRIDX_VALID(DUK_ASSERT_STRIDX_VALID7788,391561
#define DUK_ASSERT_BIDX_VALID(DUK_ASSERT_BIDX_VALID7791,391656
#define DUK_HTHREAD_THIS_PTR(DUK_HTHREAD_THIS_PTR7799,391836
struct duk_activation {duk_activation7809,392077
	duk_tval tv_func;       /* borrowed: full duk_tval for function being executed; for lightfuncs tv_func7810,392101
	duk_hobject *func;      /* borrowed: function being executed; for bound function calls, this isfunc7811,392200
	duk_activation *parent; /* previous (parent) activation (or NULL if none) */parent7812,392346
	duk_hobject *var_env;   /* current variable environment (may be NULL if delayed) */var_env7813,392424
	duk_hobject *lex_env;   /* current lexical environment (may be NULL if delayed) */lex_env7814,392509
	duk_catcher *cat;       /* current catcher (or NULL) */cat7815,392593
	duk_hobject *prev_caller;prev_caller7821,392809
	duk_instr_t *curr_pc;   /* next instruction to execute (points to 'func' bytecode, stable pointcurr_pc7824,392844
	duk_size_t bottom_byteoff;bottom_byteoff7837,393421
	duk_size_t retval_byteoff;retval_byteoff7849,393924
	duk_size_t reserve_byteoff;reserve_byteoff7861,394351
	duk_uint32_t prev_line; /* needed for stepping */prev_line7864,394419
	duk_small_uint_t flags;flags7867,394478
struct duk_catcher {duk_catcher7870,394507
	duk_catcher *parent;            /* previous (parent) catcher (or NULL if none) */parent7871,394528
	duk_hstring *h_varname;         /* borrowed reference to catch variable name (or NULL if none) h_varname7872,394611
	duk_instr_t *pc_base;           /* resume execution from pc_base or pc_base+1 (points to 'func'pc_base7874,394796
	duk_size_t idx_base;            /* idx_base and idx_base+1 get completion value and type */idx_base7875,394922
	duk_uint32_t flags;             /* type and control flags, label number */flags7876,395015
struct duk_hthread {duk_hthread7882,395230
	duk_hobject obj;obj7884,395277
	duk_instr_t **ptr_curr_pc;ptr_curr_pc7891,395581
	duk_heap *heap;heap7894,395631
	duk_uint8_t strict;strict7897,395700
	duk_uint8_t state;state7900,395743
	duk_uint8_t unused1;unused17901,395763
	duk_uint8_t unused2;unused27902,395785
	duk_tval *valstack;                     /* start of valstack allocation */valstack7934,397202
	duk_tval *valstack_end;                 /* end of valstack reservation/guarantee (exclusive) */valstack_end7935,397278
	duk_tval *valstack_alloc_end;           /* end of valstack allocation */valstack_alloc_end7936,397375
	duk_tval *valstack_bottom;              /* bottom of current frame */valstack_bottom7937,397449
	duk_tval *valstack_top;                 /* top of current frame (exclusive) */valstack_top7938,397520
	duk_activation *callstack_curr;         /* current activation (or NULL if none) */callstack_curr7943,397724
	duk_size_t callstack_top;               /* number of activation records in callstack (0 if nonecallstack_top7944,397808
	duk_size_t callstack_preventcount;      /* number of activation records in callstack preventingcallstack_preventcount7945,397909
	duk_hthread *resumer;                   /* who resumed us (if any) */resumer7948,398052
	duk_compiler_ctx *compile_ctx;compile_ctx7951,398198
	duk_int_t interrupt_counter;    /* countdown state */interrupt_counter7961,398677
	duk_int_t interrupt_init;       /* start value for current countdown */interrupt_init7962,398732
	duk_hobject *builtins[DUK_NUM_BUILTINS];builtins7976,399335
	duk_uint16_t *strs16;strs167983,399554
	duk_hstring **strs;strs7985,399583
#define DUK_HARRAY_H_INCLUDEDDUK_HARRAY_H_INCLUDED8035,401830
#define DUK_HARRAY_ASSERT_VALID(DUK_HARRAY_ASSERT_VALID8039,401956
#define DUK_HARRAY_ASSERT_VALID(DUK_HARRAY_ASSERT_VALID8041,402045
#define DUK_HARRAY_LENGTH_WRITABLE(DUK_HARRAY_LENGTH_WRITABLE8044,402105
#define DUK_HARRAY_LENGTH_NONWRITABLE(DUK_HARRAY_LENGTH_NONWRITABLE8045,402178
#define DUK_HARRAY_SET_LENGTH_WRITABLE(DUK_HARRAY_SET_LENGTH_WRITABLE8046,402250
#define DUK_HARRAY_SET_LENGTH_NONWRITABLE(DUK_HARRAY_SET_LENGTH_NONWRITABLE8047,402342
struct duk_harray {duk_harray8049,402435
	duk_hobject obj;obj8051,402482
	duk_uint32_t length;length8059,402708
	duk_bool_t length_nonwritable;length_nonwritable8070,403125
#define DUK_HENV_H_INCLUDEDDUK_HENV_H_INCLUDED8081,403325
#define DUK_HDECENV_ASSERT_VALID(DUK_HDECENV_ASSERT_VALID8086,403516
#define DUK_HOBJENV_ASSERT_VALID(DUK_HOBJENV_ASSERT_VALID8087,403601
#define DUK_HDECENV_ASSERT_VALID(DUK_HDECENV_ASSERT_VALID8089,403692
#define DUK_HOBJENV_ASSERT_VALID(DUK_HOBJENV_ASSERT_VALID8090,403745
struct duk_hdecenv {duk_hdecenv8093,403806
	duk_hobject obj;obj8095,403854
	duk_hthread *thread;thread8101,404088
	duk_hobject *varmap;varmap8102,404110
	duk_size_t regbase_byteoff;regbase_byteoff8103,404132
struct duk_hobjenv {duk_hobjenv8106,404165
	duk_hobject obj;obj8108,404213
	duk_hobject *target;target8111,404292
	duk_bool_t has_this;has_this8117,404509
#define DUK_HBUFFER_H_INCLUDEDDUK_HBUFFER_H_INCLUDED8135,404958
#define DUK_HBUFFER_FLAG_DYNAMIC DUK_HBUFFER_FLAG_DYNAMIC8145,405157
#define DUK_HBUFFER_FLAG_EXTERNAL DUK_HBUFFER_FLAG_EXTERNAL8146,405289
#define DUK_HBUFFER_HAS_DYNAMIC(DUK_HBUFFER_HAS_DYNAMIC8148,405426
#define DUK_HBUFFER_HAS_EXTERNAL(DUK_HBUFFER_HAS_EXTERNAL8149,405541
#define DUK_HBUFFER_SET_DYNAMIC(DUK_HBUFFER_SET_DYNAMIC8151,405658
#define DUK_HBUFFER_SET_EXTERNAL(DUK_HBUFFER_SET_EXTERNAL8152,405771
#define DUK_HBUFFER_CLEAR_DYNAMIC(DUK_HBUFFER_CLEAR_DYNAMIC8154,405886
#define DUK_HBUFFER_CLEAR_EXTERNAL(DUK_HBUFFER_CLEAR_EXTERNAL8155,406001
#define DUK_HBUFFER_MAX_BYTELEN DUK_HBUFFER_MAX_BYTELEN8168,406456
#define DUK_HBUFFER_MAX_BYTELEN DUK_HBUFFER_MAX_BYTELEN8173,406628
#define DUK_HBUFFER_GET_SIZE(DUK_HBUFFER_GET_SIZE8182,406806
#define DUK_HBUFFER_SET_SIZE(DUK_HBUFFER_SET_SIZE8183,406867
#define DUK_HBUFFER_ADD_SIZE(DUK_HBUFFER_ADD_SIZE8189,407092
#define DUK_HBUFFER_SUB_SIZE(DUK_HBUFFER_SUB_SIZE8192,407186
#define DUK_HBUFFER_GET_SIZE(DUK_HBUFFER_GET_SIZE8196,407286
#define DUK_HBUFFER_SET_SIZE(DUK_HBUFFER_SET_SIZE8197,407352
#define DUK_HBUFFER_ADD_SIZE(DUK_HBUFFER_ADD_SIZE8200,407447
#define DUK_HBUFFER_SUB_SIZE(DUK_HBUFFER_SUB_SIZE8203,407526
#define DUK_HBUFFER_FIXED_GET_SIZE(DUK_HBUFFER_FIXED_GET_SIZE8208,407613
#define DUK_HBUFFER_FIXED_SET_SIZE(DUK_HBUFFER_FIXED_SET_SIZE8209,407699
#define DUK_HBUFFER_DYNAMIC_GET_SIZE(DUK_HBUFFER_DYNAMIC_GET_SIZE8211,407786
#define DUK_HBUFFER_DYNAMIC_SET_SIZE(DUK_HBUFFER_DYNAMIC_SET_SIZE8212,407872
#define DUK_HBUFFER_DYNAMIC_ADD_SIZE(DUK_HBUFFER_DYNAMIC_ADD_SIZE8213,407963
#define DUK_HBUFFER_DYNAMIC_SUB_SIZE(DUK_HBUFFER_DYNAMIC_SUB_SIZE8214,408055
#define DUK_HBUFFER_EXTERNAL_GET_SIZE(DUK_HBUFFER_EXTERNAL_GET_SIZE8216,408148
#define DUK_HBUFFER_EXTERNAL_SET_SIZE(DUK_HBUFFER_EXTERNAL_SET_SIZE8217,408234
#define DUK_HBUFFER_FIXED_GET_DATA_PTR(DUK_HBUFFER_FIXED_GET_DATA_PTR8219,408326
#define DUK_HBUFFER_DYNAMIC_GET_DATA_PTR(DUK_HBUFFER_DYNAMIC_GET_DATA_PTR8222,408469
#define DUK_HBUFFER_DYNAMIC_SET_DATA_PTR(DUK_HBUFFER_DYNAMIC_SET_DATA_PTR8224,408608
#define DUK_HBUFFER_DYNAMIC_SET_DATA_PTR_NULL(DUK_HBUFFER_DYNAMIC_SET_DATA_PTR_NULL8227,408779
#define DUK_HBUFFER_DYNAMIC_GET_DATA_PTR(DUK_HBUFFER_DYNAMIC_GET_DATA_PTR8231,408927
#define DUK_HBUFFER_DYNAMIC_SET_DATA_PTR(DUK_HBUFFER_DYNAMIC_SET_DATA_PTR8232,409000
#define DUK_HBUFFER_DYNAMIC_SET_DATA_PTR_NULL(DUK_HBUFFER_DYNAMIC_SET_DATA_PTR_NULL8235,409111
#define DUK_HBUFFER_EXTERNAL_GET_DATA_PTR(DUK_HBUFFER_EXTERNAL_GET_DATA_PTR8244,409351
#define DUK_HBUFFER_EXTERNAL_SET_DATA_PTR(DUK_HBUFFER_EXTERNAL_SET_DATA_PTR8246,409431
#define DUK_HBUFFER_EXTERNAL_SET_DATA_PTR_NULL(DUK_HBUFFER_EXTERNAL_SET_DATA_PTR_NULL8249,409543
#define DUK_HBUFFER_EXTERNAL_GET_DATA_PTR(DUK_HBUFFER_EXTERNAL_GET_DATA_PTR8253,409662
#define DUK_HBUFFER_EXTERNAL_SET_DATA_PTR(DUK_HBUFFER_EXTERNAL_SET_DATA_PTR8255,409742
#define DUK_HBUFFER_EXTERNAL_SET_DATA_PTR_NULL(DUK_HBUFFER_EXTERNAL_SET_DATA_PTR_NULL8258,409854
#define DUK_HBUFFER_GET_DATA_PTR(DUK_HBUFFER_GET_DATA_PTR8267,410149
#define DUK_HBUFFER_GET_DATA_PTR(DUK_HBUFFER_GET_DATA_PTR8280,410692
#define DUK_HBUFFER_ASSERT_VALID(DUK_HBUFFER_ASSERT_VALID8290,411058
#define DUK_HBUFFER_ASSERT_VALID(DUK_HBUFFER_ASSERT_VALID8292,411149
struct duk_hbuffer {duk_hbuffer8300,411272
	duk_heaphdr hdr;hdr8301,411293
	duk_size_t size;size8311,411530
struct duk_hbuffer_fixed {duk_hbuffer_fixed8346,412879
	union {__anonffb0efc1070a8353,413204
		struct {__anonffb0efc108088354,413213
			duk_heaphdr hdr;hdr8355,413224
			duk_size_t size;size8359,413325
		} s;s8361,413352
		duk_uint32_t dummy_for_align4;dummy_for_align48363,413387
		duk_double_t dummy_for_align8_1;dummy_for_align8_18365,413450
		duk_uint64_t dummy_for_align8_2;dummy_for_align8_28367,413516
	} u;u8374,413658
struct duk_hbuffer_dynamic {duk_hbuffer_dynamic8403,414742
	duk_heaphdr hdr;hdr8404,414771
	duk_size_t size;size8409,414869
	void *curr_alloc;  /* may be NULL if alloc_size == 0 */curr_alloc8415,414972
struct duk_hbuffer_external {duk_hbuffer_external8432,415562
	duk_heaphdr hdr;hdr8433,415592
	duk_size_t size;size8438,415690
	void *curr_alloc;  /* may be NULL if alloc_size == 0 */curr_alloc8444,415811
#define DUK_HPROXY_H_INCLUDEDDUK_HPROXY_H_INCLUDED8466,416511
#define DUK_HPROXY_ASSERT_VALID(DUK_HPROXY_ASSERT_VALID8470,416637
#define DUK_HPROXY_ASSERT_VALID(DUK_HPROXY_ASSERT_VALID8472,416726
struct duk_hproxy {duk_hproxy8475,416786
	duk_hobject obj;obj8477,416833
	duk_hobject *target;target8480,416880
	duk_hobject *handler;handler8483,416934
#define DUK_HEAP_H_INCLUDEDDUK_HEAP_H_INCLUDED8497,417219
#define DUK_HEAP_FLAG_MARKANDSWEEP_RECLIMIT_REACHED DUK_HEAP_FLAG_MARKANDSWEEP_RECLIMIT_REACHED8505,417315
#define DUK_HEAP_FLAG_INTERRUPT_RUNNING DUK_HEAP_FLAG_INTERRUPT_RUNNING8506,417476
#define DUK_HEAP_FLAG_FINALIZER_NORESCUE DUK_HEAP_FLAG_FINALIZER_NORESCUE8507,417617
#define DUK_HEAP_FLAG_DEBUGGER_PAUSED DUK_HEAP_FLAG_DEBUGGER_PAUSED8508,417759
#define DUK__HEAP_HAS_FLAGS(DUK__HEAP_HAS_FLAGS8510,417901
#define DUK__HEAP_SET_FLAGS(DUK__HEAP_SET_FLAGS8511,417979
#define DUK__HEAP_CLEAR_FLAGS(DUK__HEAP_CLEAR_FLAGS8514,418068
#define DUK_HEAP_HAS_MARKANDSWEEP_RECLIMIT_REACHED(DUK_HEAP_HAS_MARKANDSWEEP_RECLIMIT_REACHED8518,418161
#define DUK_HEAP_HAS_INTERRUPT_RUNNING(DUK_HEAP_HAS_INTERRUPT_RUNNING8519,418293
#define DUK_HEAP_HAS_FINALIZER_NORESCUE(DUK_HEAP_HAS_FINALIZER_NORESCUE8520,418413
#define DUK_HEAP_HAS_DEBUGGER_PAUSED(DUK_HEAP_HAS_DEBUGGER_PAUSED8521,418534
#define DUK_HEAP_SET_MARKANDSWEEP_RECLIMIT_REACHED(DUK_HEAP_SET_MARKANDSWEEP_RECLIMIT_REACHED8523,418653
#define DUK_HEAP_SET_INTERRUPT_RUNNING(DUK_HEAP_SET_INTERRUPT_RUNNING8524,418785
#define DUK_HEAP_SET_FINALIZER_NORESCUE(DUK_HEAP_SET_FINALIZER_NORESCUE8525,418905
#define DUK_HEAP_SET_DEBUGGER_PAUSED(DUK_HEAP_SET_DEBUGGER_PAUSED8526,419026
#define DUK_HEAP_CLEAR_MARKANDSWEEP_RECLIMIT_REACHED(DUK_HEAP_CLEAR_MARKANDSWEEP_RECLIMIT_REACHED8528,419145
#define DUK_HEAP_CLEAR_INTERRUPT_RUNNING(DUK_HEAP_CLEAR_INTERRUPT_RUNNING8529,419279
#define DUK_HEAP_CLEAR_FINALIZER_NORESCUE(DUK_HEAP_CLEAR_FINALIZER_NORESCUE8530,419401
#define DUK_HEAP_CLEAR_DEBUGGER_PAUSED(DUK_HEAP_CLEAR_DEBUGGER_PAUSED8531,419524
#define DUK_LJ_TYPE_UNKNOWN DUK_LJ_TYPE_UNKNOWN8537,419746
#define DUK_LJ_TYPE_THROW DUK_LJ_TYPE_THROW8538,419797
#define DUK_LJ_TYPE_YIELD DUK_LJ_TYPE_YIELD8539,419864
#define DUK_LJ_TYPE_RESUME DUK_LJ_TYPE_RESUME8540,419957
#define DUK_LJ_TYPE_BREAK DUK_LJ_TYPE_BREAK8541,420075
#define DUK_LJ_TYPE_CONTINUE DUK_LJ_TYPE_CONTINUE8542,420201
#define DUK_LJ_TYPE_RETURN DUK_LJ_TYPE_RETURN8543,420330
#define DUK_LJ_TYPE_NORMAL DUK_LJ_TYPE_NORMAL8544,420457
#define DUK_MS_FLAG_EMERGENCY DUK_MS_FLAG_EMERGENCY8557,420883
#define DUK_MS_FLAG_POSTPONE_RESCUE DUK_MS_FLAG_POSTPONE_RESCUE8563,421141
#define DUK_MS_FLAG_NO_OBJECT_COMPACTION DUK_MS_FLAG_NO_OBJECT_COMPACTION8569,421408
#define DUK_HEAP_SWITCH_THREAD(DUK_HEAP_SWITCH_THREAD8580,421729
#define DUK_HEAP_SWITCH_THREAD(DUK_HEAP_SWITCH_THREAD8582,421821
#define DUK_STATS_INC(DUK_STATS_INC8592,421975
#define DUK_STATS_INC(DUK_STATS_INC8596,422067
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_MULT DUK_HEAP_MARK_AND_SWEEP_TRIGGER_MULT8614,422697
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_ADD DUK_HEAP_MARK_AND_SWEEP_TRIGGER_ADD8615,422783
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_SKIP DUK_HEAP_MARK_AND_SWEEP_TRIGGER_SKIP8616,422847
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_MULT DUK_HEAP_MARK_AND_SWEEP_TRIGGER_MULT8618,422916
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_ADD DUK_HEAP_MARK_AND_SWEEP_TRIGGER_ADD8619,423001
#define DUK_HEAP_MARK_AND_SWEEP_TRIGGER_SKIP DUK_HEAP_MARK_AND_SWEEP_TRIGGER_SKIP8620,423065
#define DUK_GC_TORTURE(DUK_GC_TORTURE8625,423186
#define DUK_GC_TORTURE(DUK_GC_TORTURE8627,423274
#define DUK_HEAP_STRCACHE_SIZE DUK_HEAP_STRCACHE_SIZE8633,423437
#define DUK_HEAP_STRINGCACHE_NOCACHE_LIMIT DUK_HEAP_STRINGCACHE_NOCACHE_LIMIT8634,423497
#define DUK_HEAP_INSERT_INTO_HEAP_ALLOCATED(DUK_HEAP_INSERT_INTO_HEAP_ALLOCATED8637,423646
#define DUK_HEAP_REMOVE_FROM_HEAP_ALLOCATED(DUK_HEAP_REMOVE_FROM_HEAP_ALLOCATED8639,423795
#define DUK_HEAP_INSERT_INTO_FINALIZE_LIST(DUK_HEAP_INSERT_INTO_FINALIZE_LIST8642,423950
#define DUK_HEAP_REMOVE_FROM_FINALIZE_LIST(DUK_HEAP_REMOVE_FROM_FINALIZE_LIST8643,424058
#define DUK_HEAP_GET_STRING(DUK_HEAP_GET_STRING8652,424297
#define DUK_HEAP_GET_STRING(DUK_HEAP_GET_STRING8656,424466
#define DUK_HEAP_GET_STRING(DUK_HEAP_GET_STRING8659,424596
#define DUK_ALLOC_RAW(DUK_ALLOC_RAW8668,424771
#define DUK_REALLOC_RAW(DUK_REALLOC_RAW8671,424857
#define DUK_FREE_RAW(DUK_FREE_RAW8674,424973
typedef void *(*duk_mem_getptr)(duk_heap *heap, void *ud);duk_mem_getptr8706,426536
#define DUK_ALLOC(DUK_ALLOC8708,426596
#define DUK_ALLOC_ZEROED(DUK_ALLOC_ZEROED8709,426687
#define DUK_REALLOC(DUK_REALLOC8710,426785
#define DUK_REALLOC_INDIRECT(DUK_REALLOC_INDIRECT8711,426888
#define DUK_FREE(DUK_FREE8712,427005
#define DUK_ALLOC_CHECKED(DUK_ALLOC_CHECKED8721,427248
#define DUK_ALLOC_CHECKED_ZEROED(DUK_ALLOC_CHECKED_ZEROED8722,427346
#define DUK_FREE_CHECKED(DUK_FREE_CHECKED8723,427451
#define DUK_HEAP_ALLOC_FAIL_MARKANDSWEEP_LIMIT DUK_HEAP_ALLOC_FAIL_MARKANDSWEEP_LIMIT8729,427575
#define DUK_HEAP_ALLOC_FAIL_MARKANDSWEEP_EMERGENCY_LIMIT DUK_HEAP_ALLOC_FAIL_MARKANDSWEEP_EMERGENCY_LIMIT8736,428181
#define DUK_HEAP_MAX_BREAKPOINTS DUK_HEAP_MAX_BREAKPOINTS8747,428601
#define DUK_HEAP_DBG_RATELIMIT_OPCODES DUK_HEAP_DBG_RATELIMIT_OPCODES8754,428943
#define DUK_HEAP_DBG_RATELIMIT_MILLISECS DUK_HEAP_DBG_RATELIMIT_MILLISECS8757,429053
#define DUK_PAUSE_FLAG_ONE_OPCODE DUK_PAUSE_FLAG_ONE_OPCODE8760,429128
#define DUK_PAUSE_FLAG_ONE_OPCODE_ACTIVE DUK_PAUSE_FLAG_ONE_OPCODE_ACTIVE8761,429232
#define DUK_PAUSE_FLAG_LINE_CHANGE DUK_PAUSE_FLAG_LINE_CHANGE8762,429360
#define DUK_PAUSE_FLAG_FUNC_ENTRY DUK_PAUSE_FLAG_FUNC_ENTRY8763,429458
#define DUK_PAUSE_FLAG_FUNC_EXIT DUK_PAUSE_FLAG_FUNC_EXIT8764,429548
#define DUK_PAUSE_FLAG_CAUGHT_ERROR DUK_PAUSE_FLAG_CAUGHT_ERROR8765,429643
#define DUK_PAUSE_FLAG_UNCAUGHT_ERROR DUK_PAUSE_FLAG_UNCAUGHT_ERROR8766,429752
struct duk_breakpoint {duk_breakpoint8768,429868
	duk_hstring *filename;filename8769,429892
	duk_uint32_t line;line8770,429916
struct duk_strcache_entry {duk_strcache_entry8782,430288
	duk_hstring *h;h8783,430316
	duk_uint32_t bidx;bidx8784,430333
	duk_uint32_t cidx;cidx8785,430353
struct duk_ljstate {duk_ljstate8793,430529
	duk_jmpbuf *jmpbuf_ptr;   /* current setjmp() catchpoint */jmpbuf_ptr8794,430550
	duk_small_uint_t type;    /* longjmp type */type8795,430611
	duk_bool_t iserror;       /* isError flag for yield */iserror8796,430657
	duk_tval value1;          /* 1st related value (type specific) */value18797,430713
	duk_tval value2;          /* 2nd related value (type specific) */value28798,430780
#define DUK_ASSERT_LJSTATE_UNSET(DUK_ASSERT_LJSTATE_UNSET8801,430851
#define DUK_ASSERT_LJSTATE_SET(DUK_ASSERT_LJSTATE_SET8808,431147
struct duk_litcache_entry {duk_litcache_entry8817,431322
	const duk_uint8_t *addr;addr8818,431350
	duk_hstring *h;h8819,431376
#define DUK_HEAP_ASSERT_VALID(DUK_HEAP_ASSERT_VALID8828,431523
#define DUK_HEAP_ASSERT_VALID(DUK_HEAP_ASSERT_VALID8830,431614
struct duk_heap {duk_heap8833,431675
	duk_small_uint_t flags;flags8834,431693
	duk_alloc_function alloc_func;alloc_func8837,431747
	duk_realloc_function realloc_func;realloc_func8838,431779
	duk_free_function free_func;free_func8839,431815
	void *heap_udata;heap_udata8844,431987
	duk_fatal_function fatal_func;fatal_func8851,432250
	duk_heaphdr *heap_allocated;heap_allocated8857,432476
	duk_heaphdr *refzero_list;refzero_list8866,432895
	duk_heaphdr *finalize_list;finalize_list8871,433016
	duk_heaphdr *currently_finalizing;currently_finalizing8874,433144
	duk_activation *activation_free;activation_free8880,433287
	duk_catcher *catcher_free;catcher_free8883,433363
	duk_int_t ms_trigger_counter;ms_trigger_counter8891,433585
	duk_uint_t ms_recursion_depth;ms_recursion_depth8897,433759
	duk_small_uint_t ms_base_flags;ms_base_flags8900,433871
	duk_uint_t ms_running;ms_running8910,434272
	duk_uint_t ms_prevent_count;ms_prevent_count8918,434640
	duk_uint_t pf_prevent_count;pf_prevent_count8925,434968
	duk_uint_t pf_skip_finalizers;pf_skip_finalizers8932,435251
	duk_bool_t error_not_allowed;error_not_allowed8939,435495
	duk_bool_t heap_initializing;heap_initializing8946,435657
	duk_bool_t creating_error;creating_error8952,435838
	duk_bool_t augmenting_error;augmenting_error8959,436120
	duk_ljstate lj;lj8963,436180
	duk_hthread *heap_thread;heap_thread8966,436256
	duk_hthread *curr_thread;curr_thread8969,436315
	duk_hobject *heap_object;heap_object8972,436412
	duk_int_t call_recursion_depth;call_recursion_depth8975,436511
	duk_int_t call_recursion_limit;call_recursion_limit8976,436544
	duk_uint32_t hash_seed;hash_seed8979,436663
	duk_uint32_t rnd_state;  /* State for Shamir's three-op algorithm */rnd_state8984,436847
	duk_uint64_t rnd_state[2];  /* State for xoroshiro128+ */rnd_state8986,436923
	duk_uint32_t sym_counter[2];sym_counter8995,437240
	duk_int_t inst_count_exec;inst_count_exec9002,437493
	duk_int_t inst_count_interrupt;inst_count_interrupt9003,437521
	duk_debug_read_function dbg_read_cb;                /* required, NULL implies detached */dbg_read_cb9009,437707
	duk_debug_write_function dbg_write_cb;              /* required */dbg_write_cb9010,437798
	duk_debug_peek_function dbg_peek_cb;dbg_peek_cb9011,437866
	duk_debug_read_flush_function dbg_read_flush_cb;dbg_read_flush_cb9012,437904
	duk_debug_write_flush_function dbg_write_flush_cb;dbg_write_flush_cb9013,437954
	duk_debug_request_function dbg_request_cb;dbg_request_cb9014,438006
	duk_debug_detached_function dbg_detached_cb;dbg_detached_cb9015,438050
	void *dbg_udata;dbg_udata9016,438096
	duk_bool_t dbg_processing;              /* currently processing messages or breakpoints: don't dbg_processing9019,438181
	duk_bool_t dbg_state_dirty;             /* resend state next time executor is about to run */dbg_state_dirty9020,438369
	duk_bool_t dbg_force_restart;           /* force executor restart to recheck breakpoints; used dbg_force_restart9021,438464
	duk_bool_t dbg_detaching;               /* debugger detaching; used to avoid calling detach handbg_detaching9022,438603
	duk_small_uint_t dbg_pause_flags;       /* flags for automatic pause behavior */dbg_pause_flags9023,438719
	duk_activation *dbg_pause_act;          /* activation related to pause behavior (pause on line dbg_pause_act9024,438801
	duk_uint32_t dbg_pause_startline;       /* starting line number for line change related pause bdbg_pause_startline9025,438929
	duk_breakpoint dbg_breakpoints[DUK_HEAP_MAX_BREAKPOINTS];  /* breakpoints: [0,breakpoint_count[dbg_breakpoints9026,439036
	duk_small_uint_t dbg_breakpoint_count;dbg_breakpoint_count9027,439149
	duk_breakpoint *dbg_breakpoints_active[DUK_HEAP_MAX_BREAKPOINTS + 1];  /* currently active breadbg_breakpoints_active9028,439189
	duk_uint_t dbg_exec_counter;            /* cumulative opcode execution count (overflows are OK)dbg_exec_counter9032,439477
	duk_uint_t dbg_last_counter;            /* value of dbg_exec_counter when we last did a Date-badbg_last_counter9033,439577
	duk_double_t dbg_last_time;             /* time when status/peek was last done (Date-based ratedbg_last_time9034,439686
	duk_bool_t dbg_have_next_byte;dbg_have_next_byte9037,439847
	duk_uint8_t dbg_next_byte;dbg_next_byte9038,439879
	duk_bool_t dbg_calling_transport;       /* transport call in progress, calling into Duktape fordbg_calling_transport9041,439978
	duk_uint16_t *strtable16;strtable169046,440168
	duk_hstring **strtable;strtable9048,440201
	duk_uint32_t st_mask;    /* mask for lookup, st_size - 1 */st_mask9050,440233
	duk_uint32_t st_size;    /* stringtable size */st_size9051,440294
	duk_uint32_t st_count;   /* string count for resize load factor checks */st_count9053,440398
	duk_bool_t st_resizing;  /* string table is being resized; avoid recursive resize */st_resizing9055,440480
	duk_strcache_entry strcache[DUK_HEAP_STRCACHE_SIZE];strcache9060,440722
	duk_litcache_entry litcache[DUK_USE_LITCACHE_SIZE];litcache9067,440977
	duk_uint16_t strs16[DUK_HEAP_NUM_STRINGS];strs169075,441181
	duk_hstring *strs[DUK_HEAP_NUM_STRINGS];strs9077,441231
	duk_int_t stats_exec_opcodes;stats_exec_opcodes9083,441329
	duk_int_t stats_exec_interrupt;stats_exec_interrupt9084,441360
	duk_int_t stats_exec_throw;stats_exec_throw9085,441393
	duk_int_t stats_call_all;stats_call_all9086,441422
	duk_int_t stats_call_tailcall;stats_call_tailcall9087,441449
	duk_int_t stats_call_ecmatoecma;stats_call_ecmatoecma9088,441481
	duk_int_t stats_safecall_all;stats_safecall_all9089,441515
	duk_int_t stats_safecall_nothrow;stats_safecall_nothrow9090,441546
	duk_int_t stats_safecall_throw;stats_safecall_throw9091,441581
	duk_int_t stats_ms_try_count;stats_ms_try_count9092,441614
	duk_int_t stats_ms_skip_count;stats_ms_skip_count9093,441645
	duk_int_t stats_ms_emergency_count;stats_ms_emergency_count9094,441677
	duk_int_t stats_strtab_intern_hit;stats_strtab_intern_hit9095,441714
	duk_int_t stats_strtab_intern_miss;stats_strtab_intern_miss9096,441750
	duk_int_t stats_strtab_resize_check;stats_strtab_resize_check9097,441787
	duk_int_t stats_strtab_resize_grow;stats_strtab_resize_grow9098,441825
	duk_int_t stats_strtab_resize_shrink;stats_strtab_resize_shrink9099,441862
	duk_int_t stats_strtab_litcache_hit;stats_strtab_litcache_hit9100,441901
	duk_int_t stats_strtab_litcache_miss;stats_strtab_litcache_miss9101,441939
	duk_int_t stats_strtab_litcache_pin;stats_strtab_litcache_pin9102,441978
	duk_int_t stats_object_realloc_props;stats_object_realloc_props9103,442016
	duk_int_t stats_object_abandon_array;stats_object_abandon_array9104,442055
	duk_int_t stats_getownpropdesc_count;stats_getownpropdesc_count9105,442094
	duk_int_t stats_getownpropdesc_hit;stats_getownpropdesc_hit9106,442133
	duk_int_t stats_getownpropdesc_miss;stats_getownpropdesc_miss9107,442170
	duk_int_t stats_getpropdesc_count;stats_getpropdesc_count9108,442208
	duk_int_t stats_getpropdesc_hit;stats_getpropdesc_hit9109,442244
	duk_int_t stats_getpropdesc_miss;stats_getpropdesc_miss9110,442278
	duk_int_t stats_getprop_all;stats_getprop_all9111,442313
	duk_int_t stats_getprop_arrayidx;stats_getprop_arrayidx9112,442343
	duk_int_t stats_getprop_bufobjidx;stats_getprop_bufobjidx9113,442378
	duk_int_t stats_getprop_bufferidx;stats_getprop_bufferidx9114,442414
	duk_int_t stats_getprop_bufferlen;stats_getprop_bufferlen9115,442450
	duk_int_t stats_getprop_stringidx;stats_getprop_stringidx9116,442486
	duk_int_t stats_getprop_stringlen;stats_getprop_stringlen9117,442522
	duk_int_t stats_getprop_proxy;stats_getprop_proxy9118,442558
	duk_int_t stats_getprop_arguments;stats_getprop_arguments9119,442590
	duk_int_t stats_putprop_all;stats_putprop_all9120,442626
	duk_int_t stats_putprop_arrayidx;stats_putprop_arrayidx9121,442656
	duk_int_t stats_putprop_bufobjidx;stats_putprop_bufobjidx9122,442691
	duk_int_t stats_putprop_bufferidx;stats_putprop_bufferidx9123,442727
	duk_int_t stats_putprop_proxy;stats_putprop_proxy9124,442763
	duk_int_t stats_getvar_all;stats_getvar_all9125,442795
	duk_int_t stats_putvar_all;stats_putvar_all9126,442824
	duk_int_t stats_envrec_delayedcreate;stats_envrec_delayedcreate9127,442853
	duk_int_t stats_envrec_create;stats_envrec_create9128,442892
	duk_int_t stats_envrec_newenv;stats_envrec_newenv9129,442924
	duk_int_t stats_envrec_oldenv;stats_envrec_oldenv9130,442956
	duk_int_t stats_envrec_pushclosure;stats_envrec_pushclosure9131,442988
#define DUK_DEBUGGER_H_INCLUDEDDUK_DEBUGGER_H_INCLUDED9215,447294
#define DUK_DBG_IB_EOM DUK_DBG_IB_EOM9220,447430
#define DUK_DBG_IB_REQUEST DUK_DBG_IB_REQUEST9221,447476
#define DUK_DBG_IB_REPLY DUK_DBG_IB_REPLY9222,447522
#define DUK_DBG_IB_ERROR DUK_DBG_IB_ERROR9223,447568
#define DUK_DBG_IB_NOTIFY DUK_DBG_IB_NOTIFY9224,447614
#define DUK_DBG_IB_INT4 DUK_DBG_IB_INT49227,447688
#define DUK_DBG_IB_STR4 DUK_DBG_IB_STR49228,447734
#define DUK_DBG_IB_STR2 DUK_DBG_IB_STR29229,447780
#define DUK_DBG_IB_BUF4 DUK_DBG_IB_BUF49230,447826
#define DUK_DBG_IB_BUF2 DUK_DBG_IB_BUF29231,447872
#define DUK_DBG_IB_UNUSED DUK_DBG_IB_UNUSED9232,447918
#define DUK_DBG_IB_UNDEFINED DUK_DBG_IB_UNDEFINED9233,447964
#define DUK_DBG_IB_NULL DUK_DBG_IB_NULL9234,448010
#define DUK_DBG_IB_TRUE DUK_DBG_IB_TRUE9235,448056
#define DUK_DBG_IB_FALSE DUK_DBG_IB_FALSE9236,448102
#define DUK_DBG_IB_NUMBER DUK_DBG_IB_NUMBER9237,448148
#define DUK_DBG_IB_OBJECT DUK_DBG_IB_OBJECT9238,448194
#define DUK_DBG_IB_POINTER DUK_DBG_IB_POINTER9239,448240
#define DUK_DBG_IB_LIGHTFUNC DUK_DBG_IB_LIGHTFUNC9240,448286
#define DUK_DBG_IB_HEAPPTR DUK_DBG_IB_HEAPPTR9241,448332
#define DUK_DBG_ERR_UNKNOWN DUK_DBG_ERR_UNKNOWN9247,448490
#define DUK_DBG_ERR_UNSUPPORTED DUK_DBG_ERR_UNSUPPORTED9248,448536
#define DUK_DBG_ERR_TOOMANY DUK_DBG_ERR_TOOMANY9249,448582
#define DUK_DBG_ERR_NOTFOUND DUK_DBG_ERR_NOTFOUND9250,448628
#define DUK_DBG_ERR_APPLICATION DUK_DBG_ERR_APPLICATION9251,448674
#define DUK_DBG_CMD_STATUS DUK_DBG_CMD_STATUS9254,448770
#define DUK_DBG_CMD_UNUSED_2 DUK_DBG_CMD_UNUSED_29255,448816
#define DUK_DBG_CMD_UNUSED_3 DUK_DBG_CMD_UNUSED_39256,448895
#define DUK_DBG_CMD_UNUSED_4 DUK_DBG_CMD_UNUSED_49257,448974
#define DUK_DBG_CMD_THROW DUK_DBG_CMD_THROW9258,449051
#define DUK_DBG_CMD_DETACHING DUK_DBG_CMD_DETACHING9259,449097
#define DUK_DBG_CMD_APPNOTIFY DUK_DBG_CMD_APPNOTIFY9260,449143
#define DUK_DBG_CMD_BASICINFO DUK_DBG_CMD_BASICINFO9263,449232
#define DUK_DBG_CMD_TRIGGERSTATUS DUK_DBG_CMD_TRIGGERSTATUS9264,449278
#define DUK_DBG_CMD_PAUSE DUK_DBG_CMD_PAUSE9265,449324
#define DUK_DBG_CMD_RESUME DUK_DBG_CMD_RESUME9266,449370
#define DUK_DBG_CMD_STEPINTO DUK_DBG_CMD_STEPINTO9267,449416
#define DUK_DBG_CMD_STEPOVER DUK_DBG_CMD_STEPOVER9268,449462
#define DUK_DBG_CMD_STEPOUT DUK_DBG_CMD_STEPOUT9269,449508
#define DUK_DBG_CMD_LISTBREAK DUK_DBG_CMD_LISTBREAK9270,449554
#define DUK_DBG_CMD_ADDBREAK DUK_DBG_CMD_ADDBREAK9271,449600
#define DUK_DBG_CMD_DELBREAK DUK_DBG_CMD_DELBREAK9272,449646
#define DUK_DBG_CMD_GETVAR DUK_DBG_CMD_GETVAR9273,449692
#define DUK_DBG_CMD_PUTVAR DUK_DBG_CMD_PUTVAR9274,449738
#define DUK_DBG_CMD_GETCALLSTACK DUK_DBG_CMD_GETCALLSTACK9275,449784
#define DUK_DBG_CMD_GETLOCALS DUK_DBG_CMD_GETLOCALS9276,449830
#define DUK_DBG_CMD_EVAL DUK_DBG_CMD_EVAL9277,449876
#define DUK_DBG_CMD_DETACH DUK_DBG_CMD_DETACH9278,449922
#define DUK_DBG_CMD_DUMPHEAP DUK_DBG_CMD_DUMPHEAP9279,449968
#define DUK_DBG_CMD_GETBYTECODE DUK_DBG_CMD_GETBYTECODE9280,450014
#define DUK_DBG_CMD_APPREQUEST DUK_DBG_CMD_APPREQUEST9281,450060
#define DUK_DBG_CMD_GETHEAPOBJINFO DUK_DBG_CMD_GETHEAPOBJINFO9282,450106
#define DUK_DBG_CMD_GETOBJPROPDESC DUK_DBG_CMD_GETOBJPROPDESC9283,450152
#define DUK_DBG_CMD_GETOBJPROPDESCRANGE DUK_DBG_CMD_GETOBJPROPDESCRANGE9284,450198
#define DUK_DBG_PROPFLAG_SYMBOL DUK_DBG_PROPFLAG_SYMBOL9289,450373
#define DUK_DBG_PROPFLAG_HIDDEN DUK_DBG_PROPFLAG_HIDDEN9290,450424
#define DUK_DEBUG_H_INCLUDEDDUK_DEBUG_H_INCLUDED9390,455614
#define DUK_D(DUK_D9395,455735
#define DUK_D(DUK_D9397,455760
#define DUK_DD(DUK_DD9401,455876
#define DUK_DD(DUK_DD9403,455902
#define DUK_DDD(DUK_DDD9407,456019
#define DUK_DDD(DUK_DDD9409,456046
#define DUK__DEBUG_LOG(DUK__DEBUG_LOG9421,456340
#define DUK_DPRINT(DUK_DPRINT9424,456544
#define DUK_DPRINT(DUK_DPRINT9426,456628
#define DUK_DDPRINT(DUK_DDPRINT9430,456723
#define DUK_DDPRINT(DUK_DDPRINT9432,456808
#define DUK_DDDPRINT(DUK_DDDPRINT9436,456904
#define DUK_DDDPRINT(DUK_DDDPRINT9438,456990
#define DUK__DEBUG_STASH(DUK__DEBUG_STASH9443,457062
#define DUK_DPRINT DUK_DPRINT9458,457886
#define DUK_DPRINT DUK_DPRINT9460,457998
#define DUK_DDPRINT DUK_DDPRINT9464,458145
#define DUK_DDPRINT DUK_DDPRINT9466,458259
#define DUK_DDDPRINT DUK_DDDPRINT9470,458367
#define DUK_DDDPRINT DUK_DDDPRINT9472,458483
#define DUK_D(DUK_D9483,458649
#define DUK_DD(DUK_DD9484,458694
#define DUK_DDD(DUK_DDD9485,458740
#define DUK_DPRINT(DUK_DPRINT9489,458826
#define DUK_DDPRINT(DUK_DDPRINT9490,458850
#define DUK_DDDPRINT(DUK_DDDPRINT9491,458875
#define DUK_DPRINT DUK_DPRINT9495,458940
#define DUK_DDPRINT DUK_DDPRINT9496,459018
#define DUK_DDDPRINT DUK_DDDPRINT9497,459056
struct duk_fixedbuffer {duk_fixedbuffer9508,459210
	duk_uint8_t *buffer;buffer9509,459235
	duk_size_t length;length9510,459257
	duk_size_t offset;offset9511,459277
	duk_bool_t truncated;truncated9512,459297
#define DUK_DEBUG_STASH_SIZE DUK_DEBUG_STASH_SIZE9531,459983
DUK_INTERNAL_DECL char duk_debug_file_stash[DUK_DEBUG_STASH_SIZE];duk_debug_file_stash9533,460047
DUK_INTERNAL_DECL duk_int_t duk_debug_line_stash;duk_debug_line_stash9534,460114
DUK_INTERNAL_DECL char duk_debug_func_stash[DUK_DEBUG_STASH_SIZE];duk_debug_func_stash9535,460164
DUK_INTERNAL_DECL duk_int_t duk_debug_level_stash;duk_debug_level_stash9536,460231
#define DUK_ERROR_H_INCLUDEDDUK_ERROR_H_INCLUDED9569,461640
#define DUK_ERROR(DUK_ERROR9608,463188
#define DUK_ERROR_RAW(DUK_ERROR_RAW9613,463548
#define DUK_ERROR_FMT1(DUK_ERROR_FMT19619,463907
#define DUK_ERROR_RAW_FMT1(DUK_ERROR_RAW_FMT19624,464289
#define DUK_ERROR_FMT2(DUK_ERROR_FMT29630,464670
#define DUK_ERROR_RAW_FMT2(DUK_ERROR_RAW_FMT29635,465065
#define DUK_ERROR_FMT3(DUK_ERROR_FMT39641,465459
#define DUK_ERROR_RAW_FMT3(DUK_ERROR_RAW_FMT39646,465867
#define DUK_ERROR_FMT4(DUK_ERROR_FMT49652,466274
#define DUK_ERROR_RAW_FMT4(DUK_ERROR_RAW_FMT49657,466695
#define DUK_ERROR(DUK_ERROR9665,467152
#define DUK_ERROR_RAW(DUK_ERROR_RAW9666,467237
#define DUK_ERROR_FMT1(DUK_ERROR_FMT19668,467323
#define DUK_ERROR_RAW_FMT1(DUK_ERROR_RAW_FMT19669,467393
#define DUK_ERROR_FMT2(DUK_ERROR_FMT29671,467496
#define DUK_ERROR_RAW_FMT2(DUK_ERROR_RAW_FMT29672,467571
#define DUK_ERROR_FMT3(DUK_ERROR_FMT39674,467679
#define DUK_ERROR_RAW_FMT3(DUK_ERROR_RAW_FMT39675,467759
#define DUK_ERROR_FMT4(DUK_ERROR_FMT49677,467872
#define DUK_ERROR_RAW_FMT4(DUK_ERROR_RAW_FMT49678,467957
#define DUK_FATAL_WITHOUT_CONTEXT(DUK_FATAL_WITHOUT_CONTEXT9688,468233
#define DUK_ERROR_REQUIRE_TYPE_INDEX(DUK_ERROR_REQUIRE_TYPE_INDEX9714,469353
#define DUK_ERROR_REQUIRE_TYPE_INDEX(DUK_ERROR_REQUIRE_TYPE_INDEX9718,469581
#define DUK_ERROR_INTERNAL(DUK_ERROR_INTERNAL9723,469811
#define DUK_DCERROR_INTERNAL(DUK_DCERROR_INTERNAL9726,469942
#define DUK_ERROR_ALLOC_FAILED(DUK_ERROR_ALLOC_FAILED9730,470041
#define DUK_ERROR_UNSUPPORTED(DUK_ERROR_UNSUPPORTED9733,470180
#define DUK_DCERROR_UNSUPPORTED(DUK_DCERROR_UNSUPPORTED9736,470293
#define DUK_ERROR_ERROR(DUK_ERROR_ERROR9740,470398
#define DUK_ERROR_RANGE_INDEX(DUK_ERROR_RANGE_INDEX9743,470528
#define DUK_ERROR_RANGE_PUSH_BEYOND(DUK_ERROR_RANGE_PUSH_BEYOND9746,470670
#define DUK_ERROR_RANGE_INVALID_ARGS(DUK_ERROR_RANGE_INVALID_ARGS9749,470813
#define DUK_DCERROR_RANGE_INVALID_ARGS(DUK_DCERROR_RANGE_INVALID_ARGS9752,470925
#define DUK_ERROR_RANGE_INVALID_COUNT(DUK_ERROR_RANGE_INVALID_COUNT9756,471044
#define DUK_DCERROR_RANGE_INVALID_COUNT(DUK_DCERROR_RANGE_INVALID_COUNT9759,471158
#define DUK_ERROR_RANGE_INVALID_LENGTH(DUK_ERROR_RANGE_INVALID_LENGTH9763,471279
#define DUK_DCERROR_RANGE_INVALID_LENGTH(DUK_DCERROR_RANGE_INVALID_LENGTH9766,471395
#define DUK_ERROR_RANGE(DUK_ERROR_RANGE9770,471518
#define DUK_ERROR_EVAL(DUK_ERROR_EVAL9773,471648
#define DUK_ERROR_REFERENCE(DUK_ERROR_REFERENCE9776,471749
#define DUK_ERROR_SYNTAX(DUK_ERROR_SYNTAX9779,471860
#define DUK_ERROR_TYPE_INVALID_ARGS(DUK_ERROR_TYPE_INVALID_ARGS9782,471965
#define DUK_DCERROR_TYPE_INVALID_ARGS(DUK_DCERROR_TYPE_INVALID_ARGS9785,472108
#define DUK_ERROR_TYPE_INVALID_STATE(DUK_ERROR_TYPE_INVALID_STATE9789,472225
#define DUK_DCERROR_TYPE_INVALID_STATE(DUK_DCERROR_TYPE_INVALID_STATE9792,472370
#define DUK_ERROR_TYPE_INVALID_TRAP_RESULT(DUK_ERROR_TYPE_INVALID_TRAP_RESULT9796,472489
#define DUK_DCERROR_TYPE_INVALID_TRAP_RESULT(DUK_DCERROR_TYPE_INVALID_TRAP_RESULT9799,472646
#define DUK_ERROR_TYPE(DUK_ERROR_TYPE9802,472772
#define DUK_ERROR_URI(DUK_ERROR_URI9805,472873
#define DUK_ERROR_REQUIRE_TYPE_INDEX(DUK_ERROR_REQUIRE_TYPE_INDEX9811,473085
#define DUK_ERROR_INTERNAL(DUK_ERROR_INTERNAL9815,473198
#define DUK_DCERROR_INTERNAL(DUK_DCERROR_INTERNAL9818,473276
#define DUK_ERROR_ALLOC_FAILED(DUK_ERROR_ALLOC_FAILED9822,473378
#define DUK_ERROR_UNSUPPORTED(DUK_ERROR_UNSUPPORTED9825,473460
#define DUK_DCERROR_UNSUPPORTED(DUK_DCERROR_UNSUPPORTED9828,473541
#define DUK_ERROR_ERROR(DUK_ERROR_ERROR9832,473646
#define DUK_ERROR_RANGE_INDEX(DUK_ERROR_RANGE_INDEX9835,473725
#define DUK_ERROR_RANGE_PUSH_BEYOND(DUK_ERROR_RANGE_PUSH_BEYOND9838,473810
#define DUK_ERROR_RANGE_INVALID_ARGS(DUK_ERROR_RANGE_INVALID_ARGS9841,473897
#define DUK_DCERROR_RANGE_INVALID_ARGS(DUK_DCERROR_RANGE_INVALID_ARGS9844,473985
#define DUK_ERROR_RANGE_INVALID_COUNT(DUK_ERROR_RANGE_INVALID_COUNT9848,474103
#define DUK_DCERROR_RANGE_INVALID_COUNT(DUK_DCERROR_RANGE_INVALID_COUNT9851,474192
#define DUK_ERROR_RANGE_INVALID_LENGTH(DUK_ERROR_RANGE_INVALID_LENGTH9855,474311
#define DUK_DCERROR_RANGE_INVALID_LENGTH(DUK_DCERROR_RANGE_INVALID_LENGTH9858,474401
#define DUK_ERROR_RANGE(DUK_ERROR_RANGE9862,474521
#define DUK_ERROR_EVAL(DUK_ERROR_EVAL9865,474600
#define DUK_ERROR_REFERENCE(DUK_ERROR_REFERENCE9868,474677
#define DUK_ERROR_SYNTAX(DUK_ERROR_SYNTAX9871,474764
#define DUK_ERROR_TYPE_INVALID_ARGS(DUK_ERROR_TYPE_INVALID_ARGS9874,474845
#define DUK_DCERROR_TYPE_INVALID_ARGS(DUK_DCERROR_TYPE_INVALID_ARGS9877,474931
#define DUK_ERROR_TYPE_INVALID_STATE(DUK_ERROR_TYPE_INVALID_STATE9881,475047
#define DUK_DCERROR_TYPE_INVALID_STATE(DUK_DCERROR_TYPE_INVALID_STATE9884,475134
#define DUK_ERROR_TYPE_INVALID_TRAP_RESULT(DUK_ERROR_TYPE_INVALID_TRAP_RESULT9887,475223
#define DUK_DCERROR_TYPE_INVALID_TRAP_RESULT(DUK_DCERROR_TYPE_INVALID_TRAP_RESULT9890,475316
#define DUK_ERROR_TYPE_INVALID_TRAP_RESULT(DUK_ERROR_TYPE_INVALID_TRAP_RESULT9894,475439
#define DUK_ERROR_TYPE(DUK_ERROR_TYPE9897,475532
#define DUK_ERROR_URI(DUK_ERROR_URI9900,475609
#define DUK_ASSERT(DUK_ASSERT9921,476352
#define DUK_ASSERT_EXPR(DUK_ASSERT_EXPR9929,476614
#define DUK_ASSERT(DUK_ASSERT9935,476825
#define DUK_ASSERT_EXPR(DUK_ASSERT_EXPR9937,476890
#define DUK_ASSERT_DISABLE(DUK_ASSERT_DISABLE9944,477108
#define DUK_ASSERT_REFCOUNT_NONZERO_HEAPHDR(DUK_ASSERT_REFCOUNT_NONZERO_HEAPHDR9951,477283
#define DUK_ASSERT_REFCOUNT_NONZERO_TVAL(DUK_ASSERT_REFCOUNT_NONZERO_TVAL9954,477433
#define DUK_ASSERT_REFCOUNT_NONZERO_HEAPHDR(DUK_ASSERT_REFCOUNT_NONZERO_HEAPHDR9960,477646
#define DUK_ASSERT_REFCOUNT_NONZERO_TVAL(DUK_ASSERT_REFCOUNT_NONZERO_TVAL9961,477718
#define DUK_ASSERT_TOP(DUK_ASSERT_TOP9964,477798
#define DUK_ASSERT_DOUBLE_IS_NORMALIZED(DUK_ASSERT_DOUBLE_IS_NORMALIZED9967,477956
#define DUK_ASSERT_DOUBLE_IS_NORMALIZED(DUK_ASSERT_DOUBLE_IS_NORMALIZED9973,478170
#define DUK_ASSERT_VS_SPACE(DUK_ASSERT_VS_SPACE9976,478235
#define DUK_ASSERT_SET_GARBAGE(DUK_ASSERT_SET_GARBAGE9985,478457
#define DUK_ASSERT_SET_GARBAGE(DUK_ASSERT_SET_GARBAGE9989,478575
#define DUK_VALSTACK_ASSERT_EXTRA DUK_VALSTACK_ASSERT_EXTRA10000,478934
#define DUK_ASSERT_VALSTACK_SPACE(DUK_ASSERT_VALSTACK_SPACE10004,479179
#define DUK_ASSERT_VALSTACK_SPACE(DUK_ASSERT_VALSTACK_SPACE10009,479373
#define DUK_AUGMENT_FLAG_NOBLAME_FILELINE DUK_AUGMENT_FLAG_NOBLAME_FILELINE10031,480388
#define DUK_AUGMENT_FLAG_SKIP_ONE DUK_AUGMENT_FLAG_SKIP_ONE10032,480510
#define DUK_UNICODE_H_INCLUDEDDUK_UNICODE_H_INCLUDED10085,483759
#define DUK_UNICODE_MAX_XUTF8_LENGTH DUK_UNICODE_MAX_XUTF8_LENGTH10091,483837
#define DUK_UNICODE_MAX_XUTF8_BMP_LENGTH DUK_UNICODE_MAX_XUTF8_BMP_LENGTH10092,483913
#define DUK_UNICODE_MAX_CESU8_LENGTH DUK_UNICODE_MAX_CESU8_LENGTH10093,483993
#define DUK_UNICODE_MAX_CESU8_BMP_LENGTH DUK_UNICODE_MAX_CESU8_BMP_LENGTH10094,484075
#define DUK_UNICODE_CP_ZWNJ DUK_UNICODE_CP_ZWNJ10103,484284
#define DUK_UNICODE_CP_ZWJ DUK_UNICODE_CP_ZWJ10104,484367
#define DUK_UNICODE_CP_REPLACEMENT_CHARACTER DUK_UNICODE_CP_REPLACEMENT_CHARACTER10105,484446
#define DUK_ASC_NUL DUK_ASC_NUL10118,484952
#define DUK_ASC_SOH DUK_ASC_SOH10119,484990
#define DUK_ASC_STX DUK_ASC_STX10120,485028
#define DUK_ASC_ETX DUK_ASC_ETX10121,485066
#define DUK_ASC_EOT DUK_ASC_EOT10122,485104
#define DUK_ASC_ENQ DUK_ASC_ENQ10123,485142
#define DUK_ASC_ACK DUK_ASC_ACK10124,485180
#define DUK_ASC_BEL DUK_ASC_BEL10125,485218
#define DUK_ASC_BS DUK_ASC_BS10126,485256
#define DUK_ASC_HT DUK_ASC_HT10127,485294
#define DUK_ASC_LF DUK_ASC_LF10128,485332
#define DUK_ASC_VT DUK_ASC_VT10129,485370
#define DUK_ASC_FF DUK_ASC_FF10130,485408
#define DUK_ASC_CR DUK_ASC_CR10131,485446
#define DUK_ASC_SO DUK_ASC_SO10132,485484
#define DUK_ASC_SI DUK_ASC_SI10133,485522
#define DUK_ASC_DLE DUK_ASC_DLE10134,485560
#define DUK_ASC_DC1 DUK_ASC_DC110135,485598
#define DUK_ASC_DC2 DUK_ASC_DC210136,485636
#define DUK_ASC_DC3 DUK_ASC_DC310137,485674
#define DUK_ASC_DC4 DUK_ASC_DC410138,485712
#define DUK_ASC_NAK DUK_ASC_NAK10139,485750
#define DUK_ASC_SYN DUK_ASC_SYN10140,485788
#define DUK_ASC_ETB DUK_ASC_ETB10141,485826
#define DUK_ASC_CAN DUK_ASC_CAN10142,485864
#define DUK_ASC_EM DUK_ASC_EM10143,485902
#define DUK_ASC_SUB DUK_ASC_SUB10144,485940
#define DUK_ASC_ESC DUK_ASC_ESC10145,485978
#define DUK_ASC_FS DUK_ASC_FS10146,486016
#define DUK_ASC_GS DUK_ASC_GS10147,486054
#define DUK_ASC_RS DUK_ASC_RS10148,486092
#define DUK_ASC_US DUK_ASC_US10149,486130
#define DUK_ASC_SPACE DUK_ASC_SPACE10150,486168
#define DUK_ASC_EXCLAMATION DUK_ASC_EXCLAMATION10151,486206
#define DUK_ASC_DOUBLEQUOTE DUK_ASC_DOUBLEQUOTE10152,486244
#define DUK_ASC_HASH DUK_ASC_HASH10153,486282
#define DUK_ASC_DOLLAR DUK_ASC_DOLLAR10154,486320
#define DUK_ASC_PERCENT DUK_ASC_PERCENT10155,486358
#define DUK_ASC_AMP DUK_ASC_AMP10156,486396
#define DUK_ASC_SINGLEQUOTE DUK_ASC_SINGLEQUOTE10157,486434
#define DUK_ASC_LPAREN DUK_ASC_LPAREN10158,486472
#define DUK_ASC_RPAREN DUK_ASC_RPAREN10159,486510
#define DUK_ASC_STAR DUK_ASC_STAR10160,486548
#define DUK_ASC_PLUS DUK_ASC_PLUS10161,486586
#define DUK_ASC_COMMA DUK_ASC_COMMA10162,486624
#define DUK_ASC_MINUS DUK_ASC_MINUS10163,486662
#define DUK_ASC_PERIOD DUK_ASC_PERIOD10164,486700
#define DUK_ASC_SLASH DUK_ASC_SLASH10165,486738
#define DUK_ASC_0 DUK_ASC_010166,486776
#define DUK_ASC_1 DUK_ASC_110167,486814
#define DUK_ASC_2 DUK_ASC_210168,486852
#define DUK_ASC_3 DUK_ASC_310169,486890
#define DUK_ASC_4 DUK_ASC_410170,486928
#define DUK_ASC_5 DUK_ASC_510171,486966
#define DUK_ASC_6 DUK_ASC_610172,487004
#define DUK_ASC_7 DUK_ASC_710173,487042
#define DUK_ASC_8 DUK_ASC_810174,487080
#define DUK_ASC_9 DUK_ASC_910175,487118
#define DUK_ASC_COLON DUK_ASC_COLON10176,487156
#define DUK_ASC_SEMICOLON DUK_ASC_SEMICOLON10177,487194
#define DUK_ASC_LANGLE DUK_ASC_LANGLE10178,487232
#define DUK_ASC_EQUALS DUK_ASC_EQUALS10179,487270
#define DUK_ASC_RANGLE DUK_ASC_RANGLE10180,487308
#define DUK_ASC_QUESTION DUK_ASC_QUESTION10181,487346
#define DUK_ASC_ATSIGN DUK_ASC_ATSIGN10182,487384
#define DUK_ASC_UC_A DUK_ASC_UC_A10183,487422
#define DUK_ASC_UC_B DUK_ASC_UC_B10184,487460
#define DUK_ASC_UC_C DUK_ASC_UC_C10185,487498
#define DUK_ASC_UC_D DUK_ASC_UC_D10186,487536
#define DUK_ASC_UC_E DUK_ASC_UC_E10187,487574
#define DUK_ASC_UC_F DUK_ASC_UC_F10188,487612
#define DUK_ASC_UC_G DUK_ASC_UC_G10189,487650
#define DUK_ASC_UC_H DUK_ASC_UC_H10190,487688
#define DUK_ASC_UC_I DUK_ASC_UC_I10191,487726
#define DUK_ASC_UC_J DUK_ASC_UC_J10192,487764
#define DUK_ASC_UC_K DUK_ASC_UC_K10193,487802
#define DUK_ASC_UC_L DUK_ASC_UC_L10194,487840
#define DUK_ASC_UC_M DUK_ASC_UC_M10195,487878
#define DUK_ASC_UC_N DUK_ASC_UC_N10196,487916
#define DUK_ASC_UC_O DUK_ASC_UC_O10197,487954
#define DUK_ASC_UC_P DUK_ASC_UC_P10198,487992
#define DUK_ASC_UC_Q DUK_ASC_UC_Q10199,488030
#define DUK_ASC_UC_R DUK_ASC_UC_R10200,488068
#define DUK_ASC_UC_S DUK_ASC_UC_S10201,488106
#define DUK_ASC_UC_T DUK_ASC_UC_T10202,488144
#define DUK_ASC_UC_U DUK_ASC_UC_U10203,488182
#define DUK_ASC_UC_V DUK_ASC_UC_V10204,488220
#define DUK_ASC_UC_W DUK_ASC_UC_W10205,488258
#define DUK_ASC_UC_X DUK_ASC_UC_X10206,488296
#define DUK_ASC_UC_Y DUK_ASC_UC_Y10207,488334
#define DUK_ASC_UC_Z DUK_ASC_UC_Z10208,488372
#define DUK_ASC_LBRACKET DUK_ASC_LBRACKET10209,488410
#define DUK_ASC_BACKSLASH DUK_ASC_BACKSLASH10210,488448
#define DUK_ASC_RBRACKET DUK_ASC_RBRACKET10211,488486
#define DUK_ASC_CARET DUK_ASC_CARET10212,488524
#define DUK_ASC_UNDERSCORE DUK_ASC_UNDERSCORE10213,488562
#define DUK_ASC_GRAVE DUK_ASC_GRAVE10214,488600
#define DUK_ASC_LC_A DUK_ASC_LC_A10215,488638
#define DUK_ASC_LC_B DUK_ASC_LC_B10216,488676
#define DUK_ASC_LC_C DUK_ASC_LC_C10217,488714
#define DUK_ASC_LC_D DUK_ASC_LC_D10218,488752
#define DUK_ASC_LC_E DUK_ASC_LC_E10219,488790
#define DUK_ASC_LC_F DUK_ASC_LC_F10220,488828
#define DUK_ASC_LC_G DUK_ASC_LC_G10221,488866
#define DUK_ASC_LC_H DUK_ASC_LC_H10222,488904
#define DUK_ASC_LC_I DUK_ASC_LC_I10223,488942
#define DUK_ASC_LC_J DUK_ASC_LC_J10224,488980
#define DUK_ASC_LC_K DUK_ASC_LC_K10225,489018
#define DUK_ASC_LC_L DUK_ASC_LC_L10226,489056
#define DUK_ASC_LC_M DUK_ASC_LC_M10227,489094
#define DUK_ASC_LC_N DUK_ASC_LC_N10228,489132
#define DUK_ASC_LC_O DUK_ASC_LC_O10229,489170
#define DUK_ASC_LC_P DUK_ASC_LC_P10230,489208
#define DUK_ASC_LC_Q DUK_ASC_LC_Q10231,489246
#define DUK_ASC_LC_R DUK_ASC_LC_R10232,489284
#define DUK_ASC_LC_S DUK_ASC_LC_S10233,489322
#define DUK_ASC_LC_T DUK_ASC_LC_T10234,489360
#define DUK_ASC_LC_U DUK_ASC_LC_U10235,489398
#define DUK_ASC_LC_V DUK_ASC_LC_V10236,489436
#define DUK_ASC_LC_W DUK_ASC_LC_W10237,489474
#define DUK_ASC_LC_X DUK_ASC_LC_X10238,489512
#define DUK_ASC_LC_Y DUK_ASC_LC_Y10239,489550
#define DUK_ASC_LC_Z DUK_ASC_LC_Z10240,489588
#define DUK_ASC_LCURLY DUK_ASC_LCURLY10241,489626
#define DUK_ASC_PIPE DUK_ASC_PIPE10242,489664
#define DUK_ASC_RCURLY DUK_ASC_RCURLY10243,489702
#define DUK_ASC_TILDE DUK_ASC_TILDE10244,489740
#define DUK_ASC_DEL DUK_ASC_DEL10245,489778
#define DUK_LOWERCASE_CHAR_ASCII(DUK_LOWERCASE_CHAR_ASCII10254,489938
#define DUK_CANON_BITMAP_BLKSIZE DUK_CANON_BITMAP_BLKSIZE10322,491408
#define DUK_CANON_BITMAP_BLKSHIFT DUK_CANON_BITMAP_BLKSHIFT10323,491481
#define DUK_CANON_BITMAP_BLKMASK DUK_CANON_BITMAP_BLKMASK10324,491553
DUK_INTERNAL_DECL const duk_uint8_t duk_unicode_xutf8_markers[7];duk_unicode_xutf8_markers10334,491770
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_digit[2];duk_unicode_re_ranges_digit10335,491836
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_white[22];duk_unicode_re_ranges_white10336,491905
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_wordchar[8];duk_unicode_re_ranges_wordchar10337,491975
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_not_digit[4];duk_unicode_re_ranges_not_digit10338,492047
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_not_white[24];duk_unicode_re_ranges_not_white10339,492120
DUK_INTERNAL_DECL const duk_uint16_t duk_unicode_re_ranges_not_wordchar[10];duk_unicode_re_ranges_not_wordchar10340,492194
DUK_INTERNAL_DECL const duk_int8_t duk_is_idchar_tab[128];duk_is_idchar_tab10341,492271
#define DUK_JSON_H_INCLUDEDDUK_JSON_H_INCLUDED10377,494277
#define DUK_JSON_FLAG_ASCII_ONLY DUK_JSON_FLAG_ASCII_ONLY10380,494336
#define DUK_JSON_FLAG_AVOID_KEY_QUOTES DUK_JSON_FLAG_AVOID_KEY_QUOTES10381,494431
#define DUK_JSON_FLAG_EXT_CUSTOM DUK_JSON_FLAG_EXT_CUSTOM10382,494543
#define DUK_JSON_FLAG_EXT_COMPATIBLE DUK_JSON_FLAG_EXT_COMPATIBLE10383,494638
#define DUK_JSON_ENC_REQSTACK DUK_JSON_ENC_REQSTACK10386,494802
#define DUK_JSON_DEC_REQSTACK DUK_JSON_DEC_REQSTACK10389,494916
#define DUK_JSON_ENC_LOOPARRAY DUK_JSON_ENC_LOOPARRAY10392,495012
typedef struct {__anonffb0efc1090810395,495126
	duk_hthread *thr;thr10396,495143
	duk_bufwriter_ctx bw;        /* output bufwriter */bw10397,495162
	duk_hobject *h_replacer;     /* replacer function */h_replacer10398,495215
	duk_hstring *h_gap;          /* gap (if empty string, NULL) */h_gap10399,495269
	duk_idx_t idx_proplist;      /* explicit PropertyList */idx_proplist10400,495333
	duk_idx_t idx_loop;          /* valstack index of loop detection object */idx_loop10401,495391
	duk_small_uint_t flags;flags10402,495467
	duk_small_uint_t flag_ascii_only;flag_ascii_only10403,495492
	duk_small_uint_t flag_avoid_key_quotes;flag_avoid_key_quotes10404,495527
	duk_small_uint_t flag_ext_custom;flag_ext_custom10406,495615
	duk_small_uint_t flag_ext_compatible;flag_ext_compatible10407,495650
	duk_small_uint_t flag_ext_custom_or_compatible;flag_ext_custom_or_compatible10408,495689
	duk_uint_t recursion_depth;recursion_depth10410,495745
	duk_uint_t recursion_limit;recursion_limit10411,495774
	duk_uint_t mask_for_undefined;      /* type bit mask: types which certainly produce 'undefined'mask_for_undefined10412,495803
	duk_small_uint_t stridx_custom_undefined;stridx_custom_undefined10414,495950
	duk_small_uint_t stridx_custom_nan;stridx_custom_nan10415,495993
	duk_small_uint_t stridx_custom_neginf;stridx_custom_neginf10416,496030
	duk_small_uint_t stridx_custom_posinf;stridx_custom_posinf10417,496070
	duk_small_uint_t stridx_custom_function;stridx_custom_function10418,496110
	duk_hobject *visiting[DUK_JSON_ENC_LOOPARRAY];  /* indexed by recursion_depth */visiting10420,496159
} duk_json_enc_ctx;duk_json_enc_ctx10421,496241
typedef struct {__anonffb0efc10a0810423,496262
	duk_hthread *thr;thr10424,496279
	const duk_uint8_t *p;p10425,496298
	const duk_uint8_t *p_start;p_start10426,496321
	const duk_uint8_t *p_end;p_end10427,496350
	duk_idx_t idx_reviver;idx_reviver10428,496377
	duk_small_uint_t flags;flags10429,496401
	duk_small_uint_t flag_ext_custom;flag_ext_custom10431,496473
	duk_small_uint_t flag_ext_compatible;flag_ext_compatible10432,496508
	duk_small_uint_t flag_ext_custom_or_compatible;flag_ext_custom_or_compatible10433,496547
	duk_int_t recursion_depth;recursion_depth10435,496603
	duk_int_t recursion_limit;recursion_limit10436,496631
} duk_json_dec_ctx;duk_json_dec_ctx10437,496659
#define DUK_JS_H_INCLUDEDDUK_JS_H_INCLUDED10447,496843
#define DUK_CALL_FLAG_TAILCALL DUK_CALL_FLAG_TAILCALL10450,496961
#define DUK_CALL_FLAG_CONSTRUCT DUK_CALL_FLAG_CONSTRUCT10451,497047
#define DUK_CALL_FLAG_CALLED_AS_EVAL DUK_CALL_FLAG_CALLED_AS_EVAL10452,497157
#define DUK_CALL_FLAG_ALLOW_ECMATOECMA DUK_CALL_FLAG_ALLOW_ECMATOECMA10453,497263
#define DUK_CALL_FLAG_DIRECT_EVAL DUK_CALL_FLAG_DIRECT_EVAL10454,497377
#define DUK_CALL_FLAG_CONSTRUCT_PROXY DUK_CALL_FLAG_CONSTRUCT_PROXY10455,497468
#define DUK_CALL_FLAG_DEFAULT_INSTANCE_UPDATED DUK_CALL_FLAG_DEFAULT_INSTANCE_UPDATED10456,497600
#define DUK_EQUALS_FLAG_SAMEVALUE DUK_EQUALS_FLAG_SAMEVALUE10459,497778
#define DUK_EQUALS_FLAG_STRICT DUK_EQUALS_FLAG_STRICT10460,497885
#define DUK_COMPARE_FLAG_NEGATE DUK_COMPARE_FLAG_NEGATE10463,498040
#define DUK_COMPARE_FLAG_EVAL_LEFT_FIRST DUK_COMPARE_FLAG_EVAL_LEFT_FIRST10464,498116
#define duk_js_equals(duk_js_equals10499,500401
#define duk_js_strict_equals(duk_js_strict_equals10501,500488
#define duk_js_samevalue(duk_js_samevalue10503,500598
#define duk_js_lessthan(duk_js_lessthan10507,500748
#define duk_js_greaterthan(duk_js_greaterthan10511,500922
#define duk_js_lessthanorequal(duk_js_lessthanorequal10515,501093
#define duk_js_greaterthanorequal(duk_js_greaterthanorequal10519,501272
#define DUK_NUMCONV_H_INCLUDEDDUK_NUMCONV_H_INCLUDED10566,504374
#define DUK_N2S_FLAG_FIXED_FORMAT DUK_N2S_FLAG_FIXED_FORMAT10571,504527
#define DUK_N2S_FLAG_FORCE_EXP DUK_N2S_FLAG_FORCE_EXP10574,504639
#define DUK_N2S_FLAG_NO_ZERO_PAD DUK_N2S_FLAG_NO_ZERO_PAD10581,504924
#define DUK_N2S_FLAG_FRACTION_DIGITS DUK_N2S_FLAG_FRACTION_DIGITS10587,505151
#define DUK_S2N_MAX_EXPONENT DUK_S2N_MAX_EXPONENT10601,505698
#define DUK_S2N_FLAG_TRIM_WHITE DUK_S2N_FLAG_TRIM_WHITE10604,505816
#define DUK_S2N_FLAG_ALLOW_EXP DUK_S2N_FLAG_ALLOW_EXP10607,505890
#define DUK_S2N_FLAG_ALLOW_GARBAGE DUK_S2N_FLAG_ALLOW_GARBAGE10610,506002
#define DUK_S2N_FLAG_ALLOW_PLUS DUK_S2N_FLAG_ALLOW_PLUS10613,506085
#define DUK_S2N_FLAG_ALLOW_MINUS DUK_S2N_FLAG_ALLOW_MINUS10616,506169
#define DUK_S2N_FLAG_ALLOW_INF DUK_S2N_FLAG_ALLOW_INF10619,506245
#define DUK_S2N_FLAG_ALLOW_FRAC DUK_S2N_FLAG_ALLOW_FRAC10622,506324
#define DUK_S2N_FLAG_ALLOW_NAKED_FRAC DUK_S2N_FLAG_ALLOW_NAKED_FRAC10625,506418
#define DUK_S2N_FLAG_ALLOW_EMPTY_FRAC DUK_S2N_FLAG_ALLOW_EMPTY_FRAC10628,506512
#define DUK_S2N_FLAG_ALLOW_EMPTY_AS_ZERO DUK_S2N_FLAG_ALLOW_EMPTY_AS_ZERO10631,506613
#define DUK_S2N_FLAG_ALLOW_LEADING_ZERO DUK_S2N_FLAG_ALLOW_LEADING_ZERO10634,506716
#define DUK_S2N_FLAG_ALLOW_AUTO_HEX_INT DUK_S2N_FLAG_ALLOW_AUTO_HEX_INT10639,506891
#define DUK_S2N_FLAG_ALLOW_AUTO_LEGACY_OCT_INT DUK_S2N_FLAG_ALLOW_AUTO_LEGACY_OCT_INT10644,507060
#define DUK_S2N_FLAG_ALLOW_AUTO_OCT_INT DUK_S2N_FLAG_ALLOW_AUTO_OCT_INT10649,507239
#define DUK_S2N_FLAG_ALLOW_AUTO_BIN_INT DUK_S2N_FLAG_ALLOW_AUTO_BIN_INT10654,507414
#define DUK_BUILTIN_PROTOS_H_INCLUDEDDUK_BUILTIN_PROTOS_H_INCLUDED10672,508002
#define  DUK_BI_DATE_ISO8601_BUFSIZE DUK_BI_DATE_ISO8601_BUFSIZE10680,508238
#define DUK_SELFTEST_H_INCLUDEDDUK_SELFTEST_H_INCLUDED10754,511532
DUK_INTERNAL double duk_computed_nan;duk_computed_nan10770,512090
DUK_INTERNAL double duk_computed_infinity;duk_computed_infinity10774,512175
DUK_INTERNAL int duk_repl_fpclassify(double x) {duk_repl_fpclassify10778,512263
DUK_INTERNAL int duk_repl_signbit(double x) {duk_repl_signbit10810,512971
DUK_INTERNAL int duk_repl_isfinite(double x) {duk_repl_isfinite10818,513141
DUK_INTERNAL int duk_repl_isnan(double x) {duk_repl_isnan10829,513343
DUK_INTERNAL int duk_repl_isinf(double x) {duk_repl_isinf10836,513484
#define DUK__DEBUG_BUFSIZE DUK__DEBUG_BUFSIZE10862,513949
DUK_INTERNAL void duk_debug_log(duk_int_t level, const char *file, duk_int_t line, const char *fduk_debug_log10866,514038
DUK_INTERNAL char duk_debug_file_stash[DUK_DEBUG_STASH_SIZE];duk_debug_file_stash10892,514724
DUK_INTERNAL duk_int_t duk_debug_line_stash;duk_debug_line_stash10893,514786
DUK_INTERNAL char duk_debug_func_stash[DUK_DEBUG_STASH_SIZE];duk_debug_func_stash10894,514831
DUK_INTERNAL duk_int_t duk_debug_level_stash;duk_debug_level_stash10895,514893
DUK_INTERNAL void duk_debug_log(const char *fmt, ...) {duk_debug_log10897,514940
#define DUK__REFCINIT(DUK__REFCINIT10941,515935
#define DUK__REFCINIT(DUK__REFCINIT10943,516012
DUK_INTERNAL const duk_uint8_t duk_strings_data[972] = {duk_strings_data10949,516202
DUK_INTERNAL const duk_c_function duk_bi_native_functions[185] = {duk_bi_native_functions11004,519927
DUK_INTERNAL const duk_uint8_t duk_builtins_data[4281] = {duk_builtins_data11192,526253
DUK_INTERNAL const duk_uint8_t duk_builtins_data[4281] = {duk_builtins_data11392,541007
DUK_INTERNAL const duk_uint8_t duk_builtins_data[4281] = {duk_builtins_data11592,555755
#define DUK__ERRFMT_BUFSIZE DUK__ERRFMT_BUFSIZE11805,570725
DUK_INTERNAL DUK_COLD void duk_err_handle_error_fmt(duk_hthread *thr, const char *filename, duk_duk_err_handle_error_fmt11809,570831
DUK_INTERNAL DUK_COLD void duk_err_handle_error(duk_hthread *thr, const char *filename, duk_uintduk_err_handle_error11819,571336
DUK_INTERNAL DUK_COLD void duk_err_handle_error(duk_hthread *thr, duk_errcode_t code) {duk_err_handle_error11825,571638
DUK_INTERNAL DUK_COLD void duk_err_require_type_index(duk_hthread *thr, const char *filename, duduk_err_require_type_index11837,571913
DUK_INTERNAL DUK_COLD void duk_err_require_type_index(duk_hthread *thr, const char *filename, duduk_err_require_type_index11842,572264
DUK_INTERNAL DUK_COLD void duk_err_error_internal(duk_hthread *thr, const char *filename, duk_induk_err_error_internal11847,572623
DUK_INTERNAL DUK_COLD void duk_err_error_alloc_failed(duk_hthread *thr, const char *filename, duduk_err_error_alloc_failed11850,572821
DUK_INTERNAL DUK_COLD void duk_err_error(duk_hthread *thr, const char *filename, duk_int_t linenduk_err_error11853,573021
DUK_INTERNAL DUK_COLD void duk_err_range(duk_hthread *thr, const char *filename, duk_int_t linenduk_err_range11856,573216
DUK_INTERNAL DUK_COLD void duk_err_range_index(duk_hthread *thr, const char *filename, duk_int_tduk_err_range_index11859,573417
DUK_INTERNAL DUK_COLD void duk_err_range_push_beyond(duk_hthread *thr, const char *filename, dukduk_err_range_push_beyond11862,573655
DUK_INTERNAL DUK_COLD void duk_err_type_invalid_args(duk_hthread *thr, const char *filename, dukduk_err_type_invalid_args11865,573871
DUK_INTERNAL DUK_COLD void duk_err_type_invalid_state(duk_hthread *thr, const char *filename, duduk_err_type_invalid_state11868,574075
DUK_INTERNAL DUK_COLD void duk_err_type_invalid_trap_result(duk_hthread *thr, const char *filenaduk_err_type_invalid_trap_result11871,574281
DUK_LOCAL void duk__err_shared(duk_hthread *thr, duk_errcode_t code) {duk__err_shared11880,574714
DUK_INTERNAL DUK_COLD void duk_err_error(duk_hthread *thr) {duk_err_error11883,574829
DUK_INTERNAL DUK_COLD void duk_err_range(duk_hthread *thr) {duk_err_range11886,574930
DUK_INTERNAL DUK_COLD void duk_err_eval(duk_hthread *thr) {duk_err_eval11889,575037
DUK_INTERNAL DUK_COLD void duk_err_reference(duk_hthread *thr) {duk_err_reference11892,575142
DUK_INTERNAL DUK_COLD void duk_err_syntax(duk_hthread *thr) {duk_err_syntax11895,575257
DUK_INTERNAL DUK_COLD void duk_err_type(duk_hthread *thr) {duk_err_type11898,575366
DUK_INTERNAL DUK_COLD void duk_err_uri(duk_hthread *thr) {duk_err_uri11901,575471
DUK_INTERNAL DUK_COLD void duk_default_fatal_handler(void *udata, const char *msg) {duk_default_fatal_handler11910,575622
DUK_INTERNAL const duk_int8_t duk_is_idchar_tab[128] = {duk_is_idchar_tab11967,577559
DUK_INTERNAL duk_small_int_t duk_unicode_get_xutf8_length(duk_ucodepoint_t cp) {duk_unicode_get_xutf8_length11987,578467
DUK_INTERNAL duk_small_int_t duk_unicode_get_cesu8_length(duk_ucodepoint_t cp) {duk_unicode_get_cesu8_length12014,579025
DUK_INTERNAL const duk_uint8_t duk_unicode_xutf8_markers[7] = {duk_unicode_xutf8_markers12035,579551
DUK_INTERNAL duk_small_int_t duk_unicode_encode_xutf8(duk_ucodepoint_t cp, duk_uint8_t *out) {duk_unicode_encode_xutf812043,579824
DUK_INTERNAL duk_small_int_t duk_unicode_encode_cesu8(duk_ucodepoint_t cp, duk_uint8_t *out) {duk_unicode_encode_cesu812077,580723
DUK_INTERNAL duk_small_int_t duk_unicode_decode_xutf8(duk_hthread *thr, const duk_uint8_t **ptr,duk_unicode_decode_xutf812137,582751
DUK_INTERNAL duk_ucodepoint_t duk_unicode_decode_xutf8_checked(duk_hthread *thr, const duk_uint8duk_unicode_decode_xutf8_checked12230,585278
DUK_INTERNAL duk_size_t duk_unicode_unvalidated_utf8_length(const duk_uint8_t *data, duk_size_t duk_unicode_unvalidated_utf8_length12255,586316
DUK_INTERNAL duk_size_t duk_unicode_unvalidated_utf8_length(const duk_uint8_t *data, duk_size_t duk_unicode_unvalidated_utf8_length12281,586886
DUK_INTERNAL duk_bool_t duk_unicode_is_utf8_compatible(const duk_uint8_t *buf, duk_size_t len) {duk_unicode_is_utf8_compatible12355,588725
DUK_LOCAL duk_uint32_t duk__uni_decode_value(duk_bitdecoder_ctx *bd_ctx) {duk__uni_decode_value12446,590876
DUK_LOCAL duk_small_int_t duk__uni_range_match(const duk_uint8_t *unitab, duk_size_t unilen, dukduk__uni_range_match12466,591334
DUK_INTERNAL duk_small_int_t duk_unicode_is_whitespace(duk_codepoint_t cp) {duk_unicode_is_whitespace12503,592183
DUK_INTERNAL duk_small_int_t duk_unicode_is_line_terminator(duk_codepoint_t cp) {duk_unicode_is_line_terminator12583,594788
DUK_INTERNAL duk_small_int_t duk_unicode_is_identifier_start(duk_codepoint_t cp) {duk_unicode_is_identifier_start12603,595202
DUK_INTERNAL duk_small_int_t duk_unicode_is_identifier_part(duk_codepoint_t cp) {duk_unicode_is_identifier_part12682,597489
DUK_INTERNAL duk_small_int_t duk_unicode_is_letter(duk_codepoint_t cp) {duk_unicode_is_letter12778,600651
duk_codepoint_t duk__slow_case_conversion(duk_hthread *thr,duk__slow_case_conversion12854,603054
duk_codepoint_t duk__case_transform_helper(duk_hthread *thr,duk__case_transform_helper12960,606282
DUK_INTERNAL void duk_unicode_case_convert_string(duk_hthread *thr, duk_bool_t uppercase) {duk_unicode_case_convert_string13049,609012
DUK_INTERNAL duk_codepoint_t duk_unicode_re_canonicalize_char(duk_hthread *thr, duk_codepoint_t duk_unicode_re_canonicalize_char13117,610995
DUK_INTERNAL duk_small_int_t duk_unicode_re_is_wordchar(duk_codepoint_t x) {duk_unicode_re_is_wordchar13152,612101
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_digit[2] = {duk_unicode_re_ranges_digit13171,612537
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_white[22] = {duk_unicode_re_ranges_white13174,612658
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_wordchar[8] = {duk_unicode_re_ranges_wordchar13187,613290
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_not_digit[4] = {duk_unicode_re_ranges_not_digit13193,613567
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_not_white[24] = {duk_unicode_re_ranges_not_white13197,613743
DUK_INTERNAL const duk_uint16_t duk_unicode_re_ranges_not_wordchar[10] = {duk_unicode_re_ranges_not_wordchar13211,614430
union duk__u16_union {duk__u16_union13232,615222
	duk_uint8_t b[2];b13233,615245
	duk_uint16_t x;x13234,615264
typedef union duk__u16_union duk__u16_union;duk__u16_union13236,615284
union duk__u32_union {duk__u32_union13238,615330
	duk_uint8_t b[4];b13239,615353
	duk_uint32_t x;x13240,615372
typedef union duk__u32_union duk__u32_union;duk__u32_union13242,615392
union duk__u64_union {duk__u64_union13245,615469
	duk_uint8_t b[8];b13246,615492
	duk_uint64_t x;x13247,615511
typedef union duk__u64_union duk__u64_union;duk__u64_union13249,615531
DUK_INTERNAL DUK_ALWAYS_INLINE duk_uint16_t duk_raw_read_u16_be(const duk_uint8_t *p) {duk_raw_read_u16_be13252,615584
DUK_INTERNAL DUK_ALWAYS_INLINE duk_uint32_t duk_raw_read_u32_be(const duk_uint8_t *p) {duk_raw_read_u32_be13259,615788
DUK_INTERNAL DUK_ALWAYS_INLINE duk_float_t duk_raw_read_float_be(const duk_uint8_t *p) {duk_raw_read_float_be13266,615992
DUK_INTERNAL DUK_ALWAYS_INLINE duk_double_t duk_raw_read_double_be(const duk_uint8_t *p) {duk_raw_read_double_be13273,616210
DUK_INTERNAL DUK_ALWAYS_INLINE duk_uint16_t duk_raw_readinc_u16_be(const duk_uint8_t **p) {duk_raw_readinc_u16_be13280,616431
DUK_INTERNAL DUK_ALWAYS_INLINE duk_uint32_t duk_raw_readinc_u32_be(const duk_uint8_t **p) {duk_raw_readinc_u32_be13286,616594
DUK_INTERNAL DUK_ALWAYS_INLINE duk_float_t duk_raw_readinc_float_be(const duk_uint8_t **p) {duk_raw_readinc_float_be13292,616757
DUK_INTERNAL DUK_ALWAYS_INLINE duk_double_t duk_raw_readinc_double_be(const duk_uint8_t **p) {duk_raw_readinc_double_be13298,616922
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_write_u16_be(duk_uint8_t *p, duk_uint16_t val) {duk_raw_write_u16_be13304,617091
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_write_u32_be(duk_uint8_t *p, duk_uint32_t val) {duk_raw_write_u32_be13310,617287
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_write_float_be(duk_uint8_t *p, duk_float_t val) {duk_raw_write_float_be13316,617483
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_write_double_be(duk_uint8_t *p, duk_double_t val) {duk_raw_write_double_be13323,617705
DUK_INTERNAL duk_small_int_t duk_raw_write_xutf8(duk_uint8_t *p, duk_ucodepoint_t val) {duk_raw_write_xutf813330,617930
DUK_INTERNAL duk_small_int_t duk_raw_write_cesu8(duk_uint8_t *p, duk_ucodepoint_t val) {duk_raw_write_cesu813335,618092
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_writeinc_u16_be(duk_uint8_t **p, duk_uint16_t val) {duk_raw_writeinc_u16_be13340,618254
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_writeinc_u32_be(duk_uint8_t **p, duk_uint32_t val) {duk_raw_writeinc_u32_be13345,618396
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_writeinc_float_be(duk_uint8_t **p, duk_float_t val) duk_raw_writeinc_float_be13350,618538
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_raw_writeinc_double_be(duk_uint8_t **p, duk_double_t valduk_raw_writeinc_double_be13355,618683
DUK_INTERNAL void duk_raw_writeinc_xutf8(duk_uint8_t **p, duk_ucodepoint_t val) {duk_raw_writeinc_xutf813360,618831
DUK_INTERNAL void duk_raw_writeinc_cesu8(duk_uint8_t **p, duk_ucodepoint_t val) {duk_raw_writeinc_cesu813365,618986
DUK_INTERNAL const duk_uint8_t duk_lc_digits[36] = {duk_lc_digits13381,619350
DUK_INTERNAL const duk_uint8_t duk_uc_nybbles[16] = {duk_uc_nybbles13393,619889
DUK_INTERNAL const duk_int8_t duk_hex_dectab[256] = {duk_hex_dectab13404,620196
DUK_INTERNAL const duk_int16_t duk_hex_dectab_shift4[256] = {duk_hex_dectab_shift413426,621702
DUK_INTERNAL const duk_uint16_t duk_hex_enctab[256] = {duk_hex_enctab13462,624026
DUK_INTERNAL void duk_byteswap_bytes(duk_uint8_t *p, duk_small_uint_t len) {duk_byteswap_bytes13540,629090
DUK_INTERNAL duk_uint8_t duk_class_number_to_stridx[32] = {duk_class_number_to_stridx13649,631446
DUK_INTERNAL void *duk_default_alloc_function(void *udata, duk_size_t size) {duk_default_alloc_function13694,632677
DUK_INTERNAL void *duk_default_realloc_function(void *udata, void *ptr, duk_size_t newsize) {duk_default_realloc_function13703,632951
DUK_INTERNAL void duk_default_free_function(void *udata, void *ptr) {duk_default_free_function13712,633272
DUK_EXTERNAL void *duk_resize_buffer(duk_hthread *thr, duk_idx_t idx, duk_size_t new_size) {duk_resize_buffer13725,633602
DUK_EXTERNAL void *duk_steal_buffer(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size) {duk_steal_buffer13744,634139
DUK_EXTERNAL void duk_config_buffer(duk_hthread *thr, duk_idx_t idx, void *ptr, duk_size_t len) duk_config_buffer13775,635049
#define DUK__SER_MARKER DUK__SER_MARKER13809,636112
#define DUK__SER_STRING DUK__SER_STRING13810,636142
#define DUK__SER_NUMBER DUK__SER_NUMBER13811,636172
#define DUK__BYTECODE_INITIAL_ALLOC DUK__BYTECODE_INITIAL_ALLOC13812,636202
#define DUK__NO_FORMALS DUK__NO_FORMALS13813,636242
DUK_LOCAL const duk_uint8_t *duk__load_string_raw(duk_hthread *thr, const duk_uint8_t *p) {duk__load_string_raw13819,636350
DUK_LOCAL const duk_uint8_t *duk__load_buffer_raw(duk_hthread *thr, const duk_uint8_t *p) {duk__load_buffer_raw13828,636568
DUK_LOCAL duk_uint8_t *duk__dump_hstring_raw(duk_uint8_t *p, duk_hstring *h) {duk__dump_hstring_raw13840,636919
DUK_LOCAL duk_uint8_t *duk__dump_hbuffer_raw(duk_hthread *thr, duk_uint8_t *p, duk_hbuffer *h) {duk__dump_hbuffer_raw13857,637336
DUK_LOCAL duk_uint8_t *duk__dump_string_prop(duk_hthread *thr, duk_uint8_t *p, duk_bufwriter_ctxduk__dump_string_prop13877,637902
DUK_LOCAL duk_uint8_t *duk__dump_buffer_prop(duk_hthread *thr, duk_uint8_t *p, duk_bufwriter_ctxduk__dump_buffer_prop13895,638587
DUK_LOCAL duk_uint8_t *duk__dump_uint32_prop(duk_hthread *thr, duk_uint8_t *p, duk_bufwriter_ctxduk__dump_uint32_prop13913,639279
DUK_LOCAL duk_uint8_t *duk__dump_varmap(duk_hthread *thr, duk_uint8_t *p, duk_bufwriter_ctx *bw_duk__dump_varmap13928,639794
DUK_LOCAL duk_uint8_t *duk__dump_formals(duk_hthread *thr, duk_uint8_t *p, duk_bufwriter_ctx *bwduk__dump_formals13970,641430
static duk_uint8_t *duk__dump_func(duk_hthread *thr, duk_hcompfunc *func, duk_bufwriter_ctx *bw_duk__dump_func14011,642832
#define DUK__ASSERT_LEFT(DUK__ASSERT_LEFT14162,648933
static const duk_uint8_t *duk__load_func(duk_hthread *thr, const duk_uint8_t *p, const duk_uint8duk__load_func14166,649044
DUK_EXTERNAL void duk_dump_function(duk_hthread *thr) {duk_dump_function14469,659774
DUK_EXTERNAL void duk_load_function(duk_hthread *thr) {duk_load_function14500,660784
DUK_EXTERNAL void duk_dump_function(duk_hthread *thr) {duk_dump_function14540,661877
DUK_EXTERNAL void duk_load_function(duk_hthread *thr) {duk_load_function14546,662020
struct duk__pcall_prop_args {duk__pcall_prop_args14584,663159
	duk_idx_t obj_idx;obj_idx14585,663189
	duk_idx_t nargs;nargs14586,663209
	duk_small_uint_t call_flags;call_flags14587,663227
typedef struct duk__pcall_prop_args duk__pcall_prop_args;duk__pcall_prop_args14589,663260
struct duk__pcall_method_args {duk__pcall_method_args14591,663319
	duk_idx_t nargs;nargs14592,663351
	duk_small_uint_t call_flags;call_flags14593,663369
typedef struct duk__pcall_method_args duk__pcall_method_args;duk__pcall_method_args14595,663402
struct duk__pcall_args {duk__pcall_args14597,663465
	duk_idx_t nargs;nargs14598,663490
	duk_small_uint_t call_flags;call_flags14599,663508
typedef struct duk__pcall_args duk__pcall_args;duk__pcall_args14601,663541
DUK_LOCAL duk_idx_t duk__call_get_idx_func(duk_hthread *thr, duk_idx_t nargs, duk_idx_t other) {duk__call_get_idx_func14607,663741
DUK_LOCAL duk_idx_t duk__call_get_idx_func_unvalidated(duk_hthread *thr, duk_idx_t nargs, duk_idduk__call_get_idx_func_unvalidated14627,664382
DUK_LOCAL void duk__call_prop_prep_stack(duk_hthread *thr, duk_idx_t normalized_obj_idx, duk_idxduk__call_prop_prep_stack14644,664874
DUK_EXTERNAL void duk_call(duk_hthread *thr, duk_idx_t nargs) {duk_call14686,666209
DUK_EXTERNAL void duk_call_method(duk_hthread *thr, duk_idx_t nargs) {duk_call_method14701,666630
DUK_EXTERNAL void duk_call_prop(duk_hthread *thr, duk_idx_t obj_idx, duk_idx_t nargs) {duk_call_prop14714,667015
DUK_LOCAL duk_ret_t duk__pcall_raw(duk_hthread *thr, void *udata) {duk__pcall_raw14735,667676
DUK_EXTERNAL duk_int_t duk_pcall(duk_hthread *thr, duk_idx_t nargs) {duk_pcall14756,668183
DUK_LOCAL duk_ret_t duk__pcall_method_raw(duk_hthread *thr, void *udata) {duk__pcall_method_raw14771,668571
DUK_INTERNAL duk_int_t duk_pcall_method_flags(duk_hthread *thr, duk_idx_t nargs, duk_small_uint_duk_pcall_method_flags14791,669057
DUK_EXTERNAL duk_int_t duk_pcall_method(duk_hthread *thr, duk_idx_t nargs) {duk_pcall_method14806,669510
DUK_LOCAL duk_ret_t duk__pcall_prop_raw(duk_hthread *thr, void *udata) {duk__pcall_prop_raw14812,669666
DUK_EXTERNAL duk_int_t duk_pcall_prop(duk_hthread *thr, duk_idx_t obj_idx, duk_idx_t nargs) {duk_pcall_prop14831,670172
DUK_EXTERNAL duk_int_t duk_safe_call(duk_hthread *thr, duk_safe_call_function func, void *udata,duk_safe_call14847,670619
DUK_EXTERNAL void duk_new(duk_hthread *thr, duk_idx_t nargs) {duk_new14888,672495
DUK_LOCAL duk_ret_t duk__pnew_helper(duk_hthread *thr, void *udata) {duk__pnew_helper14902,672903
DUK_EXTERNAL duk_int_t duk_pnew(duk_hthread *thr, duk_idx_t nargs) {duk_pnew14912,673090
DUK_EXTERNAL duk_bool_t duk_is_constructor_call(duk_hthread *thr) {duk_is_constructor_call14931,673611
DUK_EXTERNAL void duk_require_constructor_call(duk_hthread *thr) {duk_require_constructor_call14943,673859
DUK_EXTERNAL duk_bool_t duk_is_strict_call(duk_hthread *thr) {duk_is_strict_call14952,674074
DUK_EXTERNAL duk_int_t duk_get_current_magic(duk_hthread *thr) {duk_get_current_magic14979,674778
DUK_EXTERNAL duk_int_t duk_get_magic(duk_hthread *thr, duk_idx_t idx) {duk_get_magic15004,675342
DUK_EXTERNAL void duk_set_magic(duk_hthread *thr, duk_idx_t idx, duk_int_t magic) {duk_set_magic15029,675987
DUK_INTERNAL void duk_resolve_nonbound_function(duk_hthread *thr) {duk_resolve_nonbound_function15046,676349
DUK_LOCAL const duk_uint8_t *duk__prep_codec_arg(duk_hthread *thr, duk_idx_t idx, duk_size_t *ouduk__prep_codec_arg15098,677852
DUK_LOCAL const duk_int8_t duk__base64_decode_nequal_step[5] = {duk__base64_decode_nequal_step15131,678880
DUK_LOCAL const duk_uint8_t duk__base64_enctab_fast[64] = {duk__base64_enctab_fast15140,679186
DUK_LOCAL const duk_int8_t duk__base64_dectab_fast[256] = {duk__base64_dectab_fast15155,679962
DUK_LOCAL DUK_ALWAYS_INLINE void duk__base64_encode_fast_3(const duk_uint8_t *src, duk_uint8_t *duk__base64_encode_fast_315176,681445
DUK_LOCAL DUK_ALWAYS_INLINE void duk__base64_encode_fast_2(const duk_uint8_t *src, duk_uint8_t *duk__base64_encode_fast_215200,682306
DUK_LOCAL DUK_ALWAYS_INLINE void duk__base64_encode_fast_1(const duk_uint8_t *src, duk_uint8_t *duk__base64_encode_fast_115211,682751
DUK_LOCAL void duk__base64_encode_helper(const duk_uint8_t *src, duk_size_t srclen, duk_uint8_t duk__base64_encode_helper15221,683089
DUK_LOCAL void duk__base64_encode_helper(const duk_uint8_t *src, duk_size_t srclen, duk_uint8_t duk__base64_encode_helper15282,684463
DUK_LOCAL duk_bool_t duk__base64_decode_helper(const duk_uint8_t *src, duk_size_t srclen, duk_uiduk__base64_decode_helper15356,686125
DUK_LOCAL duk_bool_t duk__base64_decode_helper(const duk_uint8_t *src, duk_size_t srclen, duk_uiduk__base64_decode_helper15552,692996
DUK_EXTERNAL const char *duk_base64_encode(duk_hthread *thr, duk_idx_t idx) {duk_base64_encode15692,696367
DUK_EXTERNAL void duk_base64_decode(duk_hthread *thr, duk_idx_t idx) {duk_base64_decode15728,697313
DUK_EXTERNAL const char *duk_base64_encode(duk_hthread *thr, duk_idx_t idx) {duk_base64_encode15766,698581
DUK_EXTERNAL void duk_base64_decode(duk_hthread *thr, duk_idx_t idx) {duk_base64_decode15772,698740
DUK_EXTERNAL const char *duk_hex_encode(duk_hthread *thr, duk_idx_t idx) {duk_hex_encode15784,698973
DUK_EXTERNAL void duk_hex_decode(duk_hthread *thr, duk_idx_t idx) {duk_hex_decode15840,700673
DUK_EXTERNAL const char *duk_hex_encode(duk_hthread *thr, duk_idx_t idx) {duk_hex_encode15928,703146
DUK_EXTERNAL void duk_hex_decode(duk_hthread *thr, duk_idx_t idx) {duk_hex_decode15933,703301
DUK_EXTERNAL const char *duk_json_encode(duk_hthread *thr, duk_idx_t idx) {duk_json_encode15945,703530
DUK_EXTERNAL void duk_json_decode(duk_hthread *thr, duk_idx_t idx) {duk_json_decode15971,704253
DUK_EXTERNAL const char *duk_json_encode(duk_hthread *thr, duk_idx_t idx) {duk_json_encode15991,704820
DUK_EXTERNAL void duk_json_decode(duk_hthread *thr, duk_idx_t idx) {duk_json_decode15998,705005
typedef struct duk__compile_raw_args duk__compile_raw_args;duk__compile_raw_args16012,705330
struct duk__compile_raw_args {duk__compile_raw_args16013,705390
	duk_size_t src_length;  /* should be first on 64-bit platforms */src_length16014,705421
	const duk_uint8_t *src_buffer;src_buffer16015,705488
	duk_uint_t flags;flags16016,705520
DUK_EXTERNAL duk_int_t duk_eval_raw(duk_hthread *thr, const char *src_buffer, duk_size_t src_lenduk_eval_raw16020,705577
DUK_LOCAL duk_ret_t duk__do_compile(duk_hthread *thr, void *udata) {duk__do_compile16063,706756
DUK_EXTERNAL duk_int_t duk_compile_raw(duk_hthread *thr, const char *src_buffer, duk_size_t src_duk_compile_raw16136,708873
DUK_EXTERNAL void duk_push_context_dump(duk_hthread *thr) {duk_push_context_dump16186,710300
DUK_EXTERNAL void duk_push_context_dump(duk_hthread *thr) {duk_push_context_dump16220,711498
DUK_EXTERNAL void duk_debugger_attach(duk_hthread *thr,duk_debugger_attach16229,711719
DUK_EXTERNAL void duk_debugger_detach(duk_hthread *thr) {duk_debugger_detach16291,713919
DUK_EXTERNAL void duk_debugger_cooperate(duk_hthread *thr) {duk_debugger_cooperate16301,714189
DUK_EXTERNAL duk_bool_t duk_debugger_notify(duk_hthread *thr, duk_idx_t nvalues) {duk_debugger_notify16322,714756
DUK_EXTERNAL void duk_debugger_pause(duk_hthread *thr) {duk_debugger_pause16358,715810
DUK_EXTERNAL void duk_debugger_attach(duk_hthread *thr,duk_debugger_attach16383,716589
DUK_EXTERNAL void duk_debugger_detach(duk_hthread *thr) {duk_debugger_detach16405,717527
DUK_EXTERNAL void duk_debugger_cooperate(duk_hthread *thr) {duk_debugger_cooperate16411,717688
DUK_EXTERNAL duk_bool_t duk_debugger_notify(duk_hthread *thr, duk_idx_t nvalues) {duk_debugger_notify16417,717808
DUK_EXTERNAL void duk_debugger_pause(duk_hthread *thr) {duk_debugger_pause16433,718141
typedef struct duk_internal_thread_state duk_internal_thread_state;duk_internal_thread_state16447,718445
struct duk_internal_thread_state {duk_internal_thread_state16449,718514
	duk_ljstate lj;lj16450,718549
	duk_bool_t creating_error;creating_error16451,718566
	duk_hthread *curr_thread;curr_thread16452,718594
	duk_int_t call_recursion_depth;call_recursion_depth16453,718621
DUK_EXTERNAL duk_hthread *duk_create_heap(duk_alloc_function alloc_func,duk_create_heap16456,718658
DUK_EXTERNAL void duk_destroy_heap(duk_hthread *thr) {duk_destroy_heap16507,720200
DUK_EXTERNAL void duk_suspend(duk_hthread *thr, duk_thread_state *state) {duk_suspend16520,720399
DUK_EXTERNAL void duk_resume(duk_hthread *thr, const duk_thread_state *state) {duk_resume16562,721787
DUK_EXTERNAL void duk_set_global_object(duk_hthread *thr) {duk_set_global_object16587,722633
DUK_LOCAL void duk__inspect_multiple_uint(duk_hthread *thr, const char *fmt, duk_int_t *vals) {duk__inspect_multiple_uint16656,724647
#define DUK__IDX_TYPE DUK__IDX_TYPE16688,725550
#define DUK__IDX_ITAG DUK__IDX_ITAG16689,725578
#define DUK__IDX_REFC DUK__IDX_REFC16690,725606
#define DUK__IDX_HBYTES DUK__IDX_HBYTES16691,725634
#define DUK__IDX_CLASS DUK__IDX_CLASS16692,725662
#define DUK__IDX_PBYTES DUK__IDX_PBYTES16693,725690
#define DUK__IDX_ESIZE DUK__IDX_ESIZE16694,725718
#define DUK__IDX_ENEXT DUK__IDX_ENEXT16695,725746
#define DUK__IDX_ASIZE DUK__IDX_ASIZE16696,725774
#define DUK__IDX_HSIZE DUK__IDX_HSIZE16697,725802
#define DUK__IDX_BCBYTES DUK__IDX_BCBYTES16698,725830
#define DUK__IDX_DBYTES DUK__IDX_DBYTES16699,725859
#define DUK__IDX_TSTATE DUK__IDX_TSTATE16700,725888
#define DUK__IDX_VARIANT DUK__IDX_VARIANT16701,725917
DUK_EXTERNAL void duk_inspect_value(duk_hthread *thr, duk_idx_t idx) {duk_inspect_value16703,725947
DUK_EXTERNAL void duk_inspect_callstack_entry(duk_hthread *thr, duk_int_t level) {duk_inspect_callstack_entry16832,730624
DUK_EXTERNAL void *duk_alloc_raw(duk_hthread *thr, duk_size_t size) {duk_alloc_raw16899,732302
DUK_EXTERNAL void duk_free_raw(duk_hthread *thr, void *ptr) {duk_free_raw16905,732444
DUK_EXTERNAL void *duk_realloc_raw(duk_hthread *thr, void *ptr, duk_size_t size) {duk_realloc_raw16911,732569
DUK_EXTERNAL void *duk_alloc(duk_hthread *thr, duk_size_t size) {duk_alloc16917,732731
DUK_EXTERNAL void duk_free(duk_hthread *thr, void *ptr) {duk_free16923,732865
DUK_EXTERNAL void *duk_realloc(duk_hthread *thr, void *ptr, duk_size_t size) {duk_realloc16929,732984
DUK_EXTERNAL void duk_get_memory_functions(duk_hthread *thr, duk_memory_functions *out_funcs) {duk_get_memory_functions16945,733491
DUK_EXTERNAL void duk_gc(duk_hthread *thr, duk_uint_t flags) {duk_gc16960,733915
DUK_EXTERNAL duk_bool_t duk_get_prop(duk_hthread *thr, duk_idx_t obj_idx) {duk_get_prop16988,734742
DUK_EXTERNAL duk_bool_t duk_get_prop_string(duk_hthread *thr, duk_idx_t obj_idx, const char *keyduk_get_prop_string17011,735397
DUK_EXTERNAL duk_bool_t duk_get_prop_lstring(duk_hthread *thr, duk_idx_t obj_idx, const char *keduk_get_prop_lstring17020,735680
DUK_EXTERNAL duk_bool_t duk_get_prop_literal_raw(duk_hthread *thr, duk_idx_t obj_idx, const charduk_get_prop_literal_raw17030,736028
DUK_EXTERNAL duk_bool_t duk_get_prop_index(duk_hthread *thr, duk_idx_t obj_idx, duk_uarridx_t arduk_get_prop_index17041,736396
DUK_EXTERNAL duk_bool_t duk_get_prop_heapptr(duk_hthread *thr, duk_idx_t obj_idx, void *ptr) {duk_get_prop_heapptr17049,736656
DUK_INTERNAL duk_bool_t duk_get_prop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_duk_get_prop_stridx17057,736936
DUK_INTERNAL duk_bool_t duk_get_prop_stridx_short_raw(duk_hthread *thr, duk_uint_t packed_args) duk_get_prop_stridx_short_raw17066,737268
DUK_INTERNAL duk_bool_t duk_get_prop_stridx_boolean(duk_hthread *thr, duk_idx_t obj_idx, duk_smaduk_get_prop_stridx_boolean17071,737528
DUK_INTERNAL duk_bool_t duk_xget_owndataprop(duk_hthread *thr, duk_idx_t obj_idx) {duk_xget_owndataprop17093,738344
DUK_INTERNAL duk_bool_t duk_xget_owndataprop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_smaduk_xget_owndataprop_stridx17121,738965
DUK_INTERNAL duk_bool_t duk_xget_owndataprop_stridx_short_raw(duk_hthread *thr, duk_uint_t packeduk_xget_owndataprop_stridx_short_raw17130,739313
DUK_LOCAL duk_bool_t duk__put_prop_shared(duk_hthread *thr, duk_idx_t obj_idx, duk_idx_t idx_keyduk__put_prop_shared17135,739592
DUK_EXTERNAL duk_bool_t duk_put_prop(duk_hthread *thr, duk_idx_t obj_idx) {duk_put_prop17165,740619
DUK_EXTERNAL duk_bool_t duk_put_prop_string(duk_hthread *thr, duk_idx_t obj_idx, const char *keyduk_put_prop_string17170,740774
DUK_EXTERNAL duk_bool_t duk_put_prop_lstring(duk_hthread *thr, duk_idx_t obj_idx, const char *keduk_put_prop_lstring17183,741252
DUK_EXTERNAL duk_bool_t duk_put_prop_literal_raw(duk_hthread *thr, duk_idx_t obj_idx, const charduk_put_prop_literal_raw17193,741604
DUK_EXTERNAL duk_bool_t duk_put_prop_index(duk_hthread *thr, duk_idx_t obj_idx, duk_uarridx_t arduk_put_prop_index17204,741976
DUK_EXTERNAL duk_bool_t duk_put_prop_heapptr(duk_hthread *thr, duk_idx_t obj_idx, void *ptr) {duk_put_prop_heapptr17212,742248
DUK_INTERNAL duk_bool_t duk_put_prop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_duk_put_prop_stridx17221,742541
DUK_INTERNAL duk_bool_t duk_put_prop_stridx_short_raw(duk_hthread *thr, duk_uint_t packed_args) duk_put_prop_stridx_short_raw17230,742878
DUK_EXTERNAL duk_bool_t duk_del_prop(duk_hthread *thr, duk_idx_t obj_idx) {duk_del_prop17235,743138
DUK_EXTERNAL duk_bool_t duk_del_prop_string(duk_hthread *thr, duk_idx_t obj_idx, const char *keyduk_del_prop_string17258,743725
DUK_EXTERNAL duk_bool_t duk_del_prop_lstring(duk_hthread *thr, duk_idx_t obj_idx, const char *keduk_del_prop_lstring17267,744008
DUK_EXTERNAL duk_bool_t duk_del_prop_literal_raw(duk_hthread *thr, duk_idx_t obj_idx, const charduk_del_prop_literal_raw17277,744356
DUK_EXTERNAL duk_bool_t duk_del_prop_index(duk_hthread *thr, duk_idx_t obj_idx, duk_uarridx_t arduk_del_prop_index17288,744724
DUK_EXTERNAL duk_bool_t duk_del_prop_heapptr(duk_hthread *thr, duk_idx_t obj_idx, void *ptr) {duk_del_prop_heapptr17296,744984
DUK_INTERNAL duk_bool_t duk_del_prop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_duk_del_prop_stridx17304,745264
DUK_EXTERNAL duk_bool_t duk_has_prop(duk_hthread *thr, duk_idx_t obj_idx) {duk_has_prop17320,745862
DUK_EXTERNAL duk_bool_t duk_has_prop_string(duk_hthread *thr, duk_idx_t obj_idx, const char *keyduk_has_prop_string17341,746423
DUK_EXTERNAL duk_bool_t duk_has_prop_lstring(duk_hthread *thr, duk_idx_t obj_idx, const char *keduk_has_prop_lstring17350,746706
DUK_EXTERNAL duk_bool_t duk_has_prop_literal_raw(duk_hthread *thr, duk_idx_t obj_idx, const charduk_has_prop_literal_raw17360,747054
DUK_EXTERNAL duk_bool_t duk_has_prop_index(duk_hthread *thr, duk_idx_t obj_idx, duk_uarridx_t arduk_has_prop_index17371,747422
DUK_EXTERNAL duk_bool_t duk_has_prop_heapptr(duk_hthread *thr, duk_idx_t obj_idx, void *ptr) {duk_has_prop_heapptr17379,747682
DUK_INTERNAL duk_bool_t duk_has_prop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_duk_has_prop_stridx17387,747962
DUK_INTERNAL void duk_xdef_prop(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_t desc_flagsduk_xdef_prop17408,748826
DUK_INTERNAL void duk_xdef_prop_index(duk_hthread *thr, duk_idx_t obj_idx, duk_uarridx_t arr_idxduk_xdef_prop_index17425,749282
DUK_INTERNAL void duk_xdef_prop_stridx(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uint_t strduk_xdef_prop_stridx17437,749637
DUK_INTERNAL void duk_xdef_prop_stridx_short_raw(duk_hthread *thr, duk_uint_t packed_args) {duk_xdef_prop_stridx_short_raw17454,750155
DUK_INTERNAL void duk_xdef_prop_stridx_thrower(duk_hthread *thr, duk_idx_t obj_idx, duk_small_uiduk_xdef_prop_stridx_thrower17485,751345
DUK_EXTERNAL void duk_get_prop_desc(duk_hthread *thr, duk_idx_t obj_idx, duk_uint_t flags) {duk_get_prop_desc17496,751847
DUK_EXTERNAL void duk_def_prop(duk_hthread *thr, duk_idx_t obj_idx, duk_uint_t flags) {duk_def_prop17504,752169
DUK_EXTERNAL void duk_compact(duk_hthread *thr, duk_idx_t obj_idx) {duk_compact17594,754637
DUK_INTERNAL void duk_compact_m1(duk_hthread *thr) {duk_compact_m117606,754923
DUK_EXTERNAL void duk_enum(duk_hthread *thr, duk_idx_t obj_idx, duk_uint_t enum_flags) {duk_enum17614,755096
DUK_EXTERNAL duk_bool_t duk_next(duk_hthread *thr, duk_idx_t enum_index, duk_bool_t get_value) {duk_next17622,755409
DUK_INTERNAL void duk_seal_freeze_raw(duk_hthread *thr, duk_idx_t obj_idx, duk_bool_t is_freeze)duk_seal_freeze_raw17630,755657
DUK_EXTERNAL void duk_seal(duk_hthread *thr, duk_idx_t obj_idx) {duk_seal17685,757253
DUK_EXTERNAL void duk_freeze(duk_hthread *thr, duk_idx_t obj_idx) {duk_freeze17691,757404
DUK_EXTERNAL void duk_put_function_list(duk_hthread *thr, duk_idx_t obj_idx, const duk_function_duk_put_function_list17701,757609
DUK_EXTERNAL void duk_put_number_list(duk_hthread *thr, duk_idx_t obj_idx, const duk_number_listduk_put_number_list17716,758025
DUK_EXTERNAL duk_bool_t duk_get_global_string(duk_hthread *thr, const char *key) {duk_get_global_string17738,758649
DUK_EXTERNAL duk_bool_t duk_get_global_lstring(duk_hthread *thr, const char *key, duk_size_t keyduk_get_global_lstring17752,759002
DUK_EXTERNAL duk_bool_t duk_get_global_literal_raw(duk_hthread *thr, const char *key, duk_size_tduk_get_global_literal_raw17767,759420
DUK_EXTERNAL duk_bool_t duk_get_global_heapptr(duk_hthread *thr, void *ptr) {duk_get_global_heapptr17783,759858
DUK_EXTERNAL duk_bool_t duk_put_global_string(duk_hthread *thr, const char *key) {duk_put_global_string17798,760208
DUK_EXTERNAL duk_bool_t duk_put_global_lstring(duk_hthread *thr, const char *key, duk_size_t keyduk_put_global_lstring17813,760621
DUK_EXTERNAL duk_bool_t duk_put_global_literal_raw(duk_hthread *thr, const char *key, duk_size_tduk_put_global_literal_raw17829,761099
DUK_EXTERNAL duk_bool_t duk_put_global_heapptr(duk_hthread *thr, void *ptr) {duk_put_global_heapptr17846,761597
DUK_INTERNAL duk_bool_t duk_get_method_stridx(duk_hthread *thr, duk_idx_t idx, duk_small_uint_t duk_get_method_stridx17865,762037
DUK_EXTERNAL void duk_get_prototype(duk_hthread *thr, duk_idx_t idx) {duk_get_prototype17882,762434
DUK_EXTERNAL void duk_set_prototype(duk_hthread *thr, duk_idx_t idx) {duk_set_prototype17900,762844
DUK_INTERNAL void duk_clear_prototype(duk_hthread *thr, duk_idx_t idx) {duk_clear_prototype17925,763532
DUK_INTERNAL duk_bool_t duk_is_bare_object(duk_hthread *thr, duk_idx_t idx) {duk_is_bare_object17943,763980
DUK_EXTERNAL void duk_get_finalizer(duk_hthread *thr, duk_idx_t idx) {duk_get_finalizer17966,764545
DUK_EXTERNAL void duk_set_finalizer(duk_hthread *thr, duk_idx_t idx) {duk_set_finalizer17976,764862
DUK_EXTERNAL void duk_get_finalizer(duk_hthread *thr, duk_idx_t idx) {duk_get_finalizer18010,766168
DUK_EXTERNAL void duk_set_finalizer(duk_hthread *thr, duk_idx_t idx) {duk_set_finalizer18017,766343
DUK_EXTERNAL duk_double_t duk_random(duk_hthread *thr) {duk_random18031,766662
DUK_EXTERNAL const char *duk_api_global_filename = NULL;duk_api_global_filename18060,767629
DUK_EXTERNAL duk_int_t duk_api_global_line = 0;duk_api_global_line18061,767686
DUK_LOCAL const char * const duk__symbol_type_strings[4] = {duk__symbol_type_strings18068,767767
DUK_LOCAL const duk_uint_t duk__type_from_tag[] = {duk__type_from_tag18073,767908
DUK_LOCAL const duk_uint_t duk__type_mask_from_tag[] = {duk__type_mask_from_tag18086,768180
#define DUK__ASSERT_SPACE(DUK__ASSERT_SPACE18102,768594
#define DUK__CHECK_SPACE(DUK__CHECK_SPACE18109,768845
#define DUK__CHECK_SPACE(DUK__CHECK_SPACE18111,768898
DUK_LOCAL duk_small_uint_t duk__get_symbol_type(duk_hstring *h) {duk__get_symbol_type18118,769062
DUK_LOCAL const char *duk__get_symbol_type_string(duk_hstring *h) {duk__get_symbol_type_string18145,769814
DUK_LOCAL duk_int_t duk__api_coerce_d2i(duk_hthread *thr, duk_idx_t idx, duk_int_t def_value, duduk__api_coerce_d2i18154,770139
DUK_LOCAL duk_uint_t duk__api_coerce_d2ui(duk_hthread *thr, duk_idx_t idx, duk_uint_t def_value,duk__api_coerce_d2ui18215,771896
DUK_EXTERNAL duk_idx_t duk_normalize_index(duk_hthread *thr, duk_idx_t idx) {duk_normalize_index18275,773311
DUK_EXTERNAL duk_idx_t duk_require_normalize_index(duk_hthread *thr, duk_idx_t idx) {duk_require_normalize_index18310,774333
DUK_INTERNAL duk_tval *duk_get_tval(duk_hthread *thr, duk_idx_t idx) {duk_get_tval18338,775093
DUK_LOCAL const duk_tval_unused duk__const_tval_unused = DUK_TVAL_UNUSED_INITIALIZER();duk__const_tval_unused18371,776177
DUK_INTERNAL duk_tval *duk_get_tval_or_unused(duk_hthread *thr, duk_idx_t idx) {duk_get_tval_or_unused18373,776266
DUK_INTERNAL duk_tval *duk_require_tval(duk_hthread *thr, duk_idx_t idx) {duk_require_tval18385,776522
DUK_EXTERNAL duk_bool_t duk_is_valid_index(duk_hthread *thr, duk_idx_t idx) {duk_is_valid_index18415,777360
DUK_EXTERNAL void duk_require_valid_index(duk_hthread *thr, duk_idx_t idx) {duk_require_valid_index18423,777572
DUK_EXTERNAL duk_idx_t duk_get_top(duk_hthread *thr) {duk_get_top18437,777876
DUK_INTERNAL duk_idx_t duk_get_top_require_min(duk_hthread *thr, duk_idx_t min_top) {duk_get_top_require_min18446,778131
DUK_EXTERNAL void duk_set_top(duk_hthread *thr, duk_idx_t idx) {duk_set_top18463,778647
DUK_INTERNAL void duk_set_top_unsafe(duk_hthread *thr, duk_idx_t idx) {duk_set_top_unsafe18560,781311
DUK_INTERNAL void duk_set_top_unsafe(duk_hthread *thr, duk_idx_t idx) {duk_set_top_unsafe18566,781471
DUK_INTERNAL void duk_set_top_and_wipe(duk_hthread *thr, duk_idx_t top, duk_idx_t idx_wipe_startduk_set_top_and_wipe18634,783341
DUK_EXTERNAL duk_idx_t duk_get_top_index(duk_hthread *thr) {duk_get_top_index18646,783774
DUK_INTERNAL duk_idx_t duk_get_top_index_unsafe(duk_hthread *thr) {duk_get_top_index_unsafe18665,784294
DUK_EXTERNAL duk_idx_t duk_require_top_index(duk_hthread *thr) {duk_require_top_index18674,784491
DUK_LOCAL DUK_COLD DUK_NOINLINE duk_bool_t duk__resize_valstack(duk_hthread *thr, duk_size_t newduk__resize_valstack18711,785964
DUK_LOCAL DUK_COLD DUK_NOINLINE duk_bool_t duk__valstack_grow(duk_hthread *thr, duk_size_t min_bduk__valstack_grow18858,792420
DUK_INTERNAL DUK_INLINE void duk_valstack_grow_check_throw(duk_hthread *thr, duk_size_t min_byteduk_valstack_grow_check_throw18905,793827
DUK_INTERNAL DUK_INLINE duk_bool_t duk_valstack_grow_check_nothrow(duk_hthread *thr, duk_size_t duk_valstack_grow_check_nothrow18923,794423
DUK_INTERNAL void duk_valstack_shrink_check_nothrow(duk_hthread *thr, duk_bool_t snug) {duk_valstack_shrink_check_nothrow18938,794900
DUK_EXTERNAL duk_bool_t duk_check_stack(duk_hthread *thr, duk_idx_t extra) {duk_check_stack19005,797479
DUK_EXTERNAL void duk_require_stack(duk_hthread *thr, duk_idx_t extra) {duk_require_stack19028,798205
DUK_EXTERNAL duk_bool_t duk_check_stack_top(duk_hthread *thr, duk_idx_t top) {duk_check_stack_top19051,798918
DUK_EXTERNAL void duk_require_stack_top(duk_hthread *thr, duk_idx_t top) {duk_require_stack_top19074,799634
DUK_EXTERNAL void duk_swap(duk_hthread *thr, duk_idx_t idx1, duk_idx_t idx2) {duk_swap19101,800407
DUK_EXTERNAL void duk_swap_top(duk_hthread *thr, duk_idx_t idx) {duk_swap_top19119,800845
DUK_EXTERNAL void duk_dup(duk_hthread *thr, duk_idx_t from_idx) {duk_dup19125,800968
DUK_EXTERNAL void duk_dup_top(duk_hthread *thr) {duk_dup_top19140,801347
DUK_INTERNAL void duk_dup_0(duk_hthread *thr) {duk_dup_019163,801898
DUK_INTERNAL void duk_dup_1(duk_hthread *thr) {duk_dup_119167,801994
DUK_INTERNAL void duk_dup_2(duk_hthread *thr) {duk_dup_219171,802090
DUK_INTERNAL void duk_dup_m2(duk_hthread *thr) {duk_dup_m219175,802186
DUK_INTERNAL void duk_dup_m3(duk_hthread *thr) {duk_dup_m319179,802284
DUK_INTERNAL void duk_dup_m4(duk_hthread *thr) {duk_dup_m419183,802382
DUK_EXTERNAL void duk_insert(duk_hthread *thr, duk_idx_t to_idx) {duk_insert19188,802481
DUK_INTERNAL void duk_insert_undefined(duk_hthread *thr, duk_idx_t idx) {duk_insert_undefined19222,803349
DUK_INTERNAL void duk_insert_undefined_n(duk_hthread *thr, duk_idx_t idx, duk_idx_t count) {duk_insert_undefined_n19230,803568
DUK_EXTERNAL void duk_pull(duk_hthread *thr, duk_idx_t from_idx) {duk_pull19245,803943
DUK_EXTERNAL void duk_replace(duk_hthread *thr, duk_idx_t to_idx) {duk_replace19279,804854
DUK_EXTERNAL void duk_copy(duk_hthread *thr, duk_idx_t from_idx, duk_idx_t to_idx) {duk_copy19301,805395
DUK_EXTERNAL void duk_remove(duk_hthread *thr, duk_idx_t idx) {duk_remove19316,805805
DUK_INTERNAL void duk_remove_unsafe(duk_hthread *thr, duk_idx_t idx) {duk_remove_unsafe19355,806792
DUK_INTERNAL void duk_remove_m2(duk_hthread *thr) {duk_remove_m219361,806954
DUK_INTERNAL void duk_remove_n(duk_hthread *thr, duk_idx_t idx, duk_idx_t count) {duk_remove_n19367,807060
DUK_INTERNAL void duk_remove_n_unsafe(duk_hthread *thr, duk_idx_t idx, duk_idx_t count) {duk_remove_n_unsafe19412,808240
DUK_EXTERNAL void duk_xcopymove_raw(duk_hthread *to_thr, duk_hthread *from_thr, duk_idx_t count,duk_xcopymove_raw19422,808465
DUK_INTERNAL duk_tval *duk_reserve_gap(duk_hthread *thr, duk_idx_t idx_base, duk_idx_t count) {duk_reserve_gap19498,810852
DUK_EXTERNAL void duk_require_undefined(duk_hthread *thr, duk_idx_t idx) {duk_require_undefined19528,811844
DUK_EXTERNAL void duk_require_null(duk_hthread *thr, duk_idx_t idx) {duk_require_null19541,812190
DUK_LOCAL DUK_ALWAYS_INLINE duk_bool_t duk__get_boolean_raw(duk_hthread *thr, duk_idx_t idx, dukduk__get_boolean_raw19554,812516
DUK_EXTERNAL duk_bool_t duk_get_boolean(duk_hthread *thr, duk_idx_t idx) {duk_get_boolean19573,812948
DUK_EXTERNAL duk_bool_t duk_get_boolean_default(duk_hthread *thr, duk_idx_t idx, duk_bool_t def_duk_get_boolean_default19579,813120
DUK_EXTERNAL duk_bool_t duk_require_boolean(duk_hthread *thr, duk_idx_t idx) {duk_require_boolean19585,813308
DUK_EXTERNAL duk_bool_t duk_opt_boolean(duk_hthread *thr, duk_idx_t idx, duk_bool_t def_value) {duk_opt_boolean19603,813762
DUK_LOCAL DUK_ALWAYS_INLINE duk_double_t duk__get_number_raw(duk_hthread *thr, duk_idx_t idx, duduk__get_number_raw19612,814037
DUK_EXTERNAL duk_double_t duk_get_number(duk_hthread *thr, duk_idx_t idx) {duk_get_number19641,814834
DUK_EXTERNAL duk_double_t duk_get_number_default(duk_hthread *thr, duk_idx_t idx, duk_double_t dduk_get_number_default19646,815016
DUK_EXTERNAL duk_double_t duk_require_number(duk_hthread *thr, duk_idx_t idx) {duk_require_number19651,815205
DUK_EXTERNAL duk_double_t duk_opt_number(duk_hthread *thr, duk_idx_t idx, duk_double_t def_valueduk_opt_number19674,815833
DUK_EXTERNAL duk_int_t duk_get_int(duk_hthread *thr, duk_idx_t idx) {duk_get_int19684,816163
DUK_EXTERNAL duk_uint_t duk_get_uint(duk_hthread *thr, duk_idx_t idx) {duk_get_uint19690,816348
DUK_EXTERNAL duk_int_t duk_get_int_default(duk_hthread *thr, duk_idx_t idx, duk_int_t def_value)duk_get_int_default19696,816537
DUK_EXTERNAL duk_uint_t duk_get_uint_default(duk_hthread *thr, duk_idx_t idx, duk_uint_t def_valduk_get_uint_default19702,816745
DUK_EXTERNAL duk_int_t duk_require_int(duk_hthread *thr, duk_idx_t idx) {duk_require_int19708,816958
DUK_EXTERNAL duk_uint_t duk_require_uint(duk_hthread *thr, duk_idx_t idx) {duk_require_uint19714,817147
DUK_EXTERNAL duk_int_t duk_opt_int(duk_hthread *thr, duk_idx_t idx, duk_int_t def_value) {duk_opt_int19720,817340
DUK_EXTERNAL duk_uint_t duk_opt_uint(duk_hthread *thr, duk_idx_t idx, duk_uint_t def_value) {duk_opt_uint19729,817605
DUK_EXTERNAL const char *duk_get_lstring(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_len) {duk_get_lstring19738,817874
DUK_EXTERNAL const char *duk_require_lstring(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_leduk_require_lstring19760,818287
DUK_INTERNAL const char *duk_require_lstring_notsymbol(duk_hthread *thr, duk_idx_t idx, duk_sizeduk_require_lstring_notsymbol19773,818606
DUK_EXTERNAL const char *duk_get_string(duk_hthread *thr, duk_idx_t idx) {duk_get_string19786,818945
DUK_EXTERNAL const char *duk_opt_lstring(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_len, cduk_opt_lstring19799,819197
DUK_EXTERNAL const char *duk_opt_string(duk_hthread *thr, duk_idx_t idx, const char *def_ptr) {duk_opt_string19811,819572
DUK_EXTERNAL const char *duk_get_lstring_default(duk_hthread *thr, duk_idx_t idx, duk_size_t *ouduk_get_lstring_default19820,819843
DUK_EXTERNAL const char *duk_get_string_default(duk_hthread *thr, duk_idx_t idx, const char *defduk_get_string_default19842,820314
DUK_INTERNAL const char *duk_get_string_notsymbol(duk_hthread *thr, duk_idx_t idx) {duk_get_string_notsymbol19855,820602
DUK_EXTERNAL const char *duk_require_string(duk_hthread *thr, duk_idx_t idx) {duk_require_string19868,820866
DUK_INTERNAL const char *duk_require_string_notsymbol(duk_hthread *thr, duk_idx_t idx) {duk_require_string_notsymbol19874,821022
DUK_EXTERNAL void duk_require_object(duk_hthread *thr, duk_idx_t idx) {duk_require_object19884,821279
DUK_LOCAL void *duk__get_pointer_raw(duk_hthread *thr, duk_idx_t idx, void *def_value) {duk__get_pointer_raw19897,821613
DUK_EXTERNAL void *duk_get_pointer(duk_hthread *thr, duk_idx_t idx) {duk_get_pointer19913,821943
DUK_EXTERNAL void *duk_opt_pointer(duk_hthread *thr, duk_idx_t idx, void *def_value) {duk_opt_pointer19918,822104
DUK_EXTERNAL void *duk_get_pointer_default(duk_hthread *thr, duk_idx_t idx, void *def_value) {duk_get_pointer_default19927,822369
DUK_EXTERNAL void *duk_require_pointer(duk_hthread *thr, duk_idx_t idx) {duk_require_pointer19932,822546
DUK_LOCAL void *duk__get_buffer_helper(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size, voduk__get_buffer_helper19970,823415
DUK_EXTERNAL void *duk_get_buffer(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size) {duk_get_buffer20005,824196
DUK_EXTERNAL void *duk_opt_buffer(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size, void *dduk_opt_buffer20011,824423
DUK_EXTERNAL void *duk_get_buffer_default(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size,duk_get_buffer_default20023,824790
DUK_EXTERNAL void *duk_require_buffer(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size) {duk_require_buffer20029,825044
DUK_INTERNAL void *duk_get_buffer_data_raw(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_sizeduk_get_buffer_data_raw20040,825556
DUK_EXTERNAL void *duk_get_buffer_data(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size) {duk_get_buffer_data20102,827292
DUK_EXTERNAL void *duk_get_buffer_data_default(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_duk_get_buffer_data_default20107,827530
DUK_EXTERNAL void *duk_opt_buffer_data(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size, voduk_opt_buffer_data20112,827797
DUK_EXTERNAL void *duk_require_buffer_data(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_sizeduk_require_buffer_data20124,828174
DUK_LOCAL duk_heaphdr *duk__get_tagged_heaphdr_raw(duk_hthread *thr, duk_idx_t idx, duk_uint_t tduk__get_tagged_heaphdr_raw20134,828595
DUK_INTERNAL duk_hstring *duk_get_hstring(duk_hthread *thr, duk_idx_t idx) {duk_get_hstring20152,829020
DUK_INTERNAL duk_hstring *duk_get_hstring_notsymbol(duk_hthread *thr, duk_idx_t idx) {duk_get_hstring_notsymbol20157,829207
DUK_INTERNAL duk_hstring *duk_require_hstring(duk_hthread *thr, duk_idx_t idx) {duk_require_hstring20169,829502
DUK_INTERNAL duk_hstring *duk_require_hstring_notsymbol(duk_hthread *thr, duk_idx_t idx) {duk_require_hstring_notsymbol20182,829860
DUK_INTERNAL duk_hobject *duk_get_hobject(duk_hthread *thr, duk_idx_t idx) {duk_get_hobject20195,830257
DUK_INTERNAL duk_hobject *duk_require_hobject(duk_hthread *thr, duk_idx_t idx) {duk_require_hobject20200,830444
DUK_INTERNAL duk_hbuffer *duk_get_hbuffer(duk_hthread *thr, duk_idx_t idx) {duk_get_hbuffer20213,830802
DUK_INTERNAL duk_hbuffer *duk_require_hbuffer(duk_hthread *thr, duk_idx_t idx) {duk_require_hbuffer20218,830989
DUK_INTERNAL duk_hthread *duk_get_hthread(duk_hthread *thr, duk_idx_t idx) {duk_get_hthread20231,831347
DUK_INTERNAL duk_hthread *duk_require_hthread(duk_hthread *thr, duk_idx_t idx) {duk_require_hthread20243,831653
DUK_INTERNAL duk_hcompfunc *duk_get_hcompfunc(duk_hthread *thr, duk_idx_t idx) {duk_get_hcompfunc20256,832058
DUK_INTERNAL duk_hcompfunc *duk_require_hcompfunc(duk_hthread *thr, duk_idx_t idx) {duk_require_hcompfunc20268,832372
DUK_INTERNAL duk_hnatfunc *duk_get_hnatfunc(duk_hthread *thr, duk_idx_t idx) {duk_get_hnatfunc20281,832797
DUK_INTERNAL duk_hnatfunc *duk_require_hnatfunc(duk_hthread *thr, duk_idx_t idx) {duk_require_hnatfunc20293,833107
DUK_EXTERNAL duk_c_function duk_get_c_function(duk_hthread *thr, duk_idx_t idx) {duk_get_c_function20306,833525
DUK_EXTERNAL duk_c_function duk_opt_c_function(duk_hthread *thr, duk_idx_t idx, duk_c_function dduk_opt_c_function20330,834025
DUK_EXTERNAL duk_c_function duk_get_c_function_default(duk_hthread *thr, duk_idx_t idx, duk_c_fuduk_get_c_function_default20339,834314
DUK_EXTERNAL duk_c_function duk_require_c_function(duk_hthread *thr, duk_idx_t idx) {duk_require_c_function20352,834578
DUK_EXTERNAL void duk_require_function(duk_hthread *thr, duk_idx_t idx) {duk_require_function20365,834911
DUK_EXTERNAL void duk_require_constructable(duk_hthread *thr, duk_idx_t idx) {duk_require_constructable20373,835172
DUK_EXTERNAL duk_hthread *duk_get_context(duk_hthread *thr, duk_idx_t idx) {duk_get_context20386,835609
DUK_EXTERNAL duk_hthread *duk_require_context(duk_hthread *thr, duk_idx_t idx) {duk_require_context20392,835753
DUK_EXTERNAL duk_hthread *duk_opt_context(duk_hthread *thr, duk_idx_t idx, duk_hthread *def_valuduk_opt_context20398,835905
DUK_EXTERNAL duk_hthread *duk_get_context_default(duk_hthread *thr, duk_idx_t idx, duk_hthread *duk_get_context_default20407,836184
DUK_EXTERNAL void *duk_get_heapptr(duk_hthread *thr, duk_idx_t idx) {duk_get_heapptr20420,836436
DUK_EXTERNAL void *duk_opt_heapptr(duk_hthread *thr, duk_idx_t idx, void *def_value) {duk_opt_heapptr20437,836794
DUK_EXTERNAL void *duk_get_heapptr_default(duk_hthread *thr, duk_idx_t idx, void *def_value) {duk_get_heapptr_default20446,837059
DUK_EXTERNAL void *duk_require_heapptr(duk_hthread *thr, duk_idx_t idx) {duk_require_heapptr20459,837290
DUK_LOCAL duk_hobject *duk__get_hobject_promote_mask_raw(duk_hthread *thr, duk_idx_t idx, duk_uiduk__get_hobject_promote_mask_raw20478,837825
DUK_INTERNAL duk_hobject *duk_get_hobject_promote_mask(duk_hthread *thr, duk_idx_t idx, duk_uintduk_get_hobject_promote_mask20515,838989
DUK_INTERNAL duk_hobject *duk_require_hobject_promote_mask(duk_hthread *thr, duk_idx_t idx, duk_duk_require_hobject_promote_mask20523,839317
DUK_INTERNAL duk_hobject *duk_require_hobject_accept_mask(duk_hthread *thr, duk_idx_t idx, duk_uduk_require_hobject_accept_mask20531,839739
DUK_INTERNAL duk_hobject *duk_get_hobject_with_class(duk_hthread *thr, duk_idx_t idx, duk_small_duk_get_hobject_with_class20536,839971
DUK_INTERNAL duk_hobject *duk_require_hobject_with_class(duk_hthread *thr, duk_idx_t idx, duk_smduk_require_hobject_with_class20550,840417
DUK_EXTERNAL duk_size_t duk_get_length(duk_hthread *thr, duk_idx_t idx) {duk_get_length20569,841138
DUK_LOCAL duk_heaphdr *duk__known_heaphdr(duk_hthread *thr, duk_idx_t idx) {duk__known_heaphdr20654,843655
DUK_INTERNAL duk_hstring *duk_known_hstring(duk_hthread *thr, duk_idx_t idx) {duk_known_hstring20671,844036
DUK_INTERNAL duk_hobject *duk_known_hobject(duk_hthread *thr, duk_idx_t idx) {duk_known_hobject20677,844248
DUK_INTERNAL duk_hbuffer *duk_known_hbuffer(duk_hthread *thr, duk_idx_t idx) {duk_known_hbuffer20683,844460
DUK_INTERNAL duk_hcompfunc *duk_known_hcompfunc(duk_hthread *thr, duk_idx_t idx) {duk_known_hcompfunc20689,844672
DUK_INTERNAL duk_hnatfunc *duk_known_hnatfunc(duk_hthread *thr, duk_idx_t idx) {duk_known_hnatfunc20695,844892
DUK_EXTERNAL void duk_set_length(duk_hthread *thr, duk_idx_t idx, duk_size_t len) {duk_set_length20701,845108
DUK_LOCAL duk_bool_t duk__defaultvalue_coerce_attempt(duk_hthread *thr, duk_idx_t idx, duk_smallduk__defaultvalue_coerce_attempt20719,845617
DUK_EXTERNAL void duk_to_undefined(duk_hthread *thr, duk_idx_t idx) {duk_to_undefined20736,846156
DUK_EXTERNAL void duk_to_null(duk_hthread *thr, duk_idx_t idx) {duk_to_null20746,846394
DUK_LOCAL const char * const duk__toprim_hint_strings[3] = {duk__toprim_hint_strings20757,846643
DUK_LOCAL void duk__to_primitive_helper(duk_hthread *thr, duk_idx_t idx, duk_int_t hint, duk_booduk__to_primitive_helper20760,846738
DUK_EXTERNAL void duk_to_primitive(duk_hthread *thr, duk_idx_t idx, duk_int_t hint) {duk_to_primitive20844,849582
DUK_INTERNAL void duk_to_primitive_ordinary(duk_hthread *thr, duk_idx_t idx, duk_int_t hint) {duk_to_primitive_ordinary20849,849770
DUK_EXTERNAL duk_bool_t duk_to_boolean(duk_hthread *thr, duk_idx_t idx) {duk_to_boolean20855,849959
DUK_INTERNAL duk_bool_t duk_to_boolean_top_pop(duk_hthread *thr) {duk_to_boolean_top_pop20874,850444
DUK_EXTERNAL duk_double_t duk_to_number(duk_hthread *thr, duk_idx_t idx) {duk_to_number20890,850735
DUK_INTERNAL duk_double_t duk_to_number_m1(duk_hthread *thr) {duk_to_number_m120910,851364
DUK_INTERNAL duk_double_t duk_to_number_m2(duk_hthread *thr) {duk_to_number_m220914,851489
DUK_INTERNAL duk_double_t duk_to_number_tval(duk_hthread *thr, duk_tval *tv) {duk_to_number_tval20919,851615
typedef duk_double_t (*duk__toint_coercer)(duk_hthread *thr, duk_tval *tv);duk__toint_coercer20954,852485
DUK_LOCAL duk_double_t duk__to_int_uint_helper(duk_hthread *thr, duk_idx_t idx, duk__toint_coercduk__to_int_uint_helper20956,852562
DUK_EXTERNAL duk_int_t duk_to_int(duk_hthread *thr, duk_idx_t idx) {duk_to_int20984,853332
DUK_EXTERNAL duk_uint_t duk_to_uint(duk_hthread *thr, duk_idx_t idx) {duk_to_uint20993,853680
DUK_EXTERNAL duk_int32_t duk_to_int32(duk_hthread *thr, duk_idx_t idx) {duk_to_int3221002,854032
DUK_EXTERNAL duk_uint32_t duk_to_uint32(duk_hthread *thr, duk_idx_t idx) {duk_to_uint3221018,854458
DUK_EXTERNAL duk_uint16_t duk_to_uint16(duk_hthread *thr, duk_idx_t idx) {duk_to_uint1621034,854888
DUK_INTERNAL duk_uint8_t duk_to_uint8clamped(duk_hthread *thr, duk_idx_t idx) {duk_to_uint8clamped21052,855406
DUK_EXTERNAL const char *duk_to_lstring(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_len) {duk_to_lstring21089,856410
DUK_LOCAL duk_ret_t duk__safe_to_string_raw(duk_hthread *thr, void *udata) {duk__safe_to_string_raw21097,856657
DUK_EXTERNAL const char *duk_safe_to_lstring(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_leduk_safe_to_lstring21105,856828
DUK_EXTERNAL const char *duk_to_stacktrace(duk_hthread *thr, duk_idx_t idx) {duk_to_stacktrace21138,857876
DUK_LOCAL duk_ret_t duk__safe_to_stacktrace_raw(duk_hthread *thr, void *udata) {duk__safe_to_stacktrace_raw21159,858520
DUK_EXTERNAL const char *duk_safe_to_stacktrace(duk_hthread *thr, duk_idx_t idx) {duk_safe_to_stacktrace21168,858700
DUK_INTERNAL duk_hstring *duk_to_property_key_hstring(duk_hthread *thr, duk_idx_t idx) {duk_to_property_key_hstring21192,859470
DUK_INTERNAL duk_hstring *duk_safe_to_hstring(duk_hthread *thr, duk_idx_t idx) {duk_safe_to_hstring21212,860143
DUK_INTERNAL void duk_push_class_string_tval(duk_hthread *thr, duk_tval *tv, duk_bool_t avoid_siduk_push_class_string_tval21223,860480
DUK_INTERNAL duk_int_t duk_to_int_clamped_raw(duk_hthread *thr, duk_idx_t idx, duk_int_t minval,duk_to_int_clamped_raw21306,863186
DUK_INTERNAL duk_int_t duk_to_int_clamped(duk_hthread *thr, duk_idx_t idx, duk_idx_t minval, dukduk_to_int_clamped21369,864785
DUK_INTERNAL duk_int_t duk_to_int_check_range(duk_hthread *thr, duk_idx_t idx, duk_int_t minval,duk_to_int_check_range21377,865016
DUK_EXTERNAL const char *duk_to_string(duk_hthread *thr, duk_idx_t idx) {duk_to_string21382,865284
DUK_INTERNAL duk_hstring *duk_to_hstring(duk_hthread *thr, duk_idx_t idx) {duk_to_hstring21483,868012
DUK_INTERNAL duk_hstring *duk_to_hstring_m1(duk_hthread *thr) {duk_to_hstring_m121494,868239
DUK_INTERNAL duk_hstring *duk_to_hstring_acceptsymbol(duk_hthread *thr, duk_idx_t idx) {duk_to_hstring_acceptsymbol21499,868367
DUK_EXTERNAL const char *duk_buffer_to_string(duk_hthread *thr, duk_idx_t idx) {duk_buffer_to_string21518,869062
DUK_EXTERNAL void *duk_to_buffer_raw(duk_hthread *thr, duk_idx_t idx, duk_size_t *out_size, duk_duk_to_buffer_raw21535,869465
DUK_EXTERNAL void *duk_to_pointer(duk_hthread *thr, duk_idx_t idx) {duk_to_pointer21590,871236
DUK_LOCAL void duk__push_func_from_lightfunc(duk_hthread *thr, duk_c_function func, duk_small_uiduk__push_func_from_lightfunc21640,872353
DUK_EXTERNAL void duk_to_object(duk_hthread *thr, duk_idx_t idx) {duk_to_object21678,873748
DUK_INTERNAL duk_hobject *duk_to_hobject(duk_hthread *thr, duk_idx_t idx) {duk_to_hobject21803,877652
DUK_LOCAL duk_bool_t duk__tag_check(duk_hthread *thr, duk_idx_t idx, duk_small_uint_t tag) {duk__tag_check21817,877881
DUK_LOCAL duk_bool_t duk__obj_flag_any_default_false(duk_hthread *thr, duk_idx_t idx, duk_uint_tduk__obj_flag_any_default_false21825,878097
DUK_INTERNAL duk_int_t duk_get_type_tval(duk_tval *tv) {duk_get_type_tval21837,878399
DUK_EXTERNAL duk_int_t duk_get_type(duk_hthread *thr, duk_idx_t idx) {duk_get_type21876,879514
DUK_LOCAL const char * const duk__type_names[] = {duk__type_names21888,879802
DUK_INTERNAL const char *duk_get_type_name(duk_hthread *thr, duk_idx_t idx) {duk_get_type_name21901,879970
DUK_INTERNAL duk_small_uint_t duk_get_class_number(duk_hthread *thr, duk_idx_t idx) {duk_get_class_number21914,880407
DUK_EXTERNAL duk_bool_t duk_check_type(duk_hthread *thr, duk_idx_t idx, duk_int_t type) {duk_check_type21940,881097
DUK_INTERNAL duk_uint_t duk_get_type_mask_tval(duk_tval *tv) {duk_get_type_mask_tval21946,881269
DUK_EXTERNAL duk_uint_t duk_get_type_mask(duk_hthread *thr, duk_idx_t idx) {duk_get_type_mask21985,882438
DUK_EXTERNAL duk_bool_t duk_check_type_mask(duk_hthread *thr, duk_idx_t idx, duk_uint_t mask) {duk_check_type_mask21996,882665
DUK_EXTERNAL duk_bool_t duk_is_undefined(duk_hthread *thr, duk_idx_t idx) {duk_is_undefined22009,882998
DUK_EXTERNAL duk_bool_t duk_is_null(duk_hthread *thr, duk_idx_t idx) {duk_is_null22014,883158
DUK_EXTERNAL duk_bool_t duk_is_boolean(duk_hthread *thr, duk_idx_t idx) {duk_is_boolean22019,883308
DUK_EXTERNAL duk_bool_t duk_is_number(duk_hthread *thr, duk_idx_t idx) {duk_is_number22024,883464
DUK_EXTERNAL duk_bool_t duk_is_nan(duk_hthread *thr, duk_idx_t idx) {duk_is_nan22041,883847
DUK_EXTERNAL duk_bool_t duk_is_string(duk_hthread *thr, duk_idx_t idx) {duk_is_string22062,884463
DUK_INTERNAL duk_bool_t duk_is_string_notsymbol(duk_hthread *thr, duk_idx_t idx) {duk_is_string_notsymbol22067,884617
DUK_EXTERNAL duk_bool_t duk_is_object(duk_hthread *thr, duk_idx_t idx) {duk_is_object22072,884784
DUK_EXTERNAL duk_bool_t duk_is_buffer(duk_hthread *thr, duk_idx_t idx) {duk_is_buffer22077,884938
DUK_EXTERNAL duk_bool_t duk_is_buffer_data(duk_hthread *thr, duk_idx_t idx) {duk_is_buffer_data22083,885134
DUK_EXTERNAL duk_bool_t duk_is_buffer_data(duk_hthread *thr, duk_idx_t idx) {duk_is_buffer_data22102,885581
DUK_EXTERNAL duk_bool_t duk_is_pointer(duk_hthread *thr, duk_idx_t idx) {duk_is_pointer22110,885768
DUK_EXTERNAL duk_bool_t duk_is_lightfunc(duk_hthread *thr, duk_idx_t idx) {duk_is_lightfunc22115,885924
DUK_EXTERNAL duk_bool_t duk_is_symbol(duk_hthread *thr, duk_idx_t idx) {duk_is_symbol22120,886084
DUK_EXTERNAL duk_bool_t duk_is_array(duk_hthread *thr, duk_idx_t idx) {duk_is_array22135,886512
DUK_EXTERNAL duk_bool_t duk_is_function(duk_hthread *thr, duk_idx_t idx) {duk_is_function22147,886716
DUK_INTERNAL duk_bool_t duk_is_callable_tval(duk_hthread *thr, duk_tval *tv) {duk_is_callable_tval22165,887093
DUK_EXTERNAL duk_bool_t duk_is_constructable(duk_hthread *thr, duk_idx_t idx) {duk_is_constructable22182,887436
DUK_EXTERNAL duk_bool_t duk_is_c_function(duk_hthread *thr, duk_idx_t idx) {duk_is_c_function22200,887823
DUK_EXTERNAL duk_bool_t duk_is_ecmascript_function(duk_hthread *thr, duk_idx_t idx) {duk_is_ecmascript_function22207,888088
DUK_EXTERNAL duk_bool_t duk_is_bound_function(duk_hthread *thr, duk_idx_t idx) {duk_is_bound_function22214,888363
DUK_EXTERNAL duk_bool_t duk_is_thread(duk_hthread *thr, duk_idx_t idx) {duk_is_thread22221,888634
DUK_EXTERNAL duk_bool_t duk_is_fixed_buffer(duk_hthread *thr, duk_idx_t idx) {duk_is_fixed_buffer22233,888901
DUK_EXTERNAL duk_bool_t duk_is_dynamic_buffer(duk_hthread *thr, duk_idx_t idx) {duk_is_dynamic_buffer22248,889254
DUK_EXTERNAL duk_bool_t duk_is_external_buffer(duk_hthread *thr, duk_idx_t idx) {duk_is_external_buffer22263,889641
DUK_EXTERNAL duk_errcode_t duk_get_error_code(duk_hthread *thr, duk_idx_t idx) {duk_get_error_code22278,890028
DUK_INTERNAL void duk_push_tval(duk_hthread *thr, duk_tval *tv) {duk_push_tval22326,891117
DUK_EXTERNAL void duk_push_undefined(duk_hthread *thr) {duk_push_undefined22338,891397
DUK_EXTERNAL void duk_push_null(duk_hthread *thr) {duk_push_null22350,891697
DUK_EXTERNAL void duk_push_boolean(duk_hthread *thr, duk_bool_t val) {duk_push_boolean22359,891883
DUK_EXTERNAL void duk_push_true(duk_hthread *thr) {duk_push_true22370,892185
DUK_EXTERNAL void duk_push_false(duk_hthread *thr) {duk_push_false22379,892379
DUK_EXTERNAL void duk_push_number(duk_hthread *thr, duk_double_t val) {duk_push_number22389,892642
DUK_EXTERNAL void duk_push_int(duk_hthread *thr, duk_int_t val) {duk_push_int22401,892931
DUK_EXTERNAL void duk_push_uint(duk_hthread *thr, duk_uint_t val) {duk_push_uint22430,893653
DUK_EXTERNAL void duk_push_nan(duk_hthread *thr) {duk_push_nan22460,894452
DUK_EXTERNAL const char *duk_push_lstring(duk_hthread *thr, const char *str, duk_size_t len) {duk_push_lstring22472,894741
DUK_EXTERNAL const char *duk_push_string(duk_hthread *thr, const char *str) {duk_push_string22506,895750
DUK_EXTERNAL const char *duk_push_literal_raw(duk_hthread *thr, const char *str, duk_size_t len)duk_push_literal_raw22519,896045
DUK_EXTERNAL const char *duk_push_literal_raw(duk_hthread *thr, const char *str, duk_size_t len)duk_push_literal_raw22543,896778
DUK_EXTERNAL void duk_push_pointer(duk_hthread *thr, void *val) {duk_push_pointer22553,897082
DUK_INTERNAL duk_hstring *duk_push_uint_to_hstring(duk_hthread *thr, duk_uint_t i) {duk_push_uint_to_hstring22562,897290
DUK_LOCAL void duk__push_this_helper(duk_hthread *thr, duk_small_uint_t check_object_coercible) duk__push_this_helper22574,897631
DUK_EXTERNAL void duk_push_this(duk_hthread *thr) {duk_push_this22609,898577
DUK_INTERNAL void duk_push_this_check_object_coercible(duk_hthread *thr) {duk_push_this_check_object_coercible22615,898720
DUK_INTERNAL duk_hobject *duk_push_this_coercible_to_object(duk_hthread *thr) {duk_push_this_coercible_to_object22621,898886
DUK_INTERNAL duk_hstring *duk_push_this_coercible_to_string(duk_hthread *thr) {duk_push_this_coercible_to_string22632,899140
DUK_INTERNAL duk_tval *duk_get_borrowed_this_tval(duk_hthread *thr) {duk_get_borrowed_this_tval22639,899410
DUK_EXTERNAL void duk_push_new_target(duk_hthread *thr) {duk_push_new_target22650,899852
DUK_EXTERNAL void duk_push_current_function(duk_hthread *thr) {duk_push_current_function22690,900991
DUK_EXTERNAL void duk_push_current_thread(duk_hthread *thr) {duk_push_current_thread22703,901235
DUK_EXTERNAL void duk_push_global_object(duk_hthread *thr) {duk_push_global_object22713,901465
DUK_LOCAL void duk__push_stash(duk_hthread *thr) {duk__push_stash22720,901629
DUK_EXTERNAL void duk_push_heap_stash(duk_hthread *thr) {duk_push_heap_stash22731,902069
DUK_EXTERNAL void duk_push_global_stash(duk_hthread *thr) {duk_push_global_stash22740,902300
DUK_EXTERNAL void duk_push_thread_stash(duk_hthread *thr, duk_hthread *target_thr) {duk_push_thread_stash22746,902444
DUK_LOCAL duk_int_t duk__try_push_vsprintf(duk_hthread *thr, void *buf, duk_size_t sz, const chaduk__try_push_vsprintf22757,902787
DUK_EXTERNAL const char *duk_push_vsprintf(duk_hthread *thr, const char *fmt, va_list ap) {duk_push_vsprintf22774,903232
DUK_EXTERNAL const char *duk_push_sprintf(duk_hthread *thr, const char *fmt, ...) {duk_push_sprintf22840,905052
DUK_INTERNAL duk_hobject *duk_push_object_helper(duk_hthread *thr, duk_uint_t hobject_flags_and_duk_push_object_helper22854,905310
DUK_INTERNAL duk_hobject *duk_push_object_helper_proto(duk_hthread *thr, duk_uint_t hobject_flagduk_push_object_helper_proto22886,906225
DUK_EXTERNAL duk_idx_t duk_push_object(duk_hthread *thr) {duk_push_object22897,906559
DUK_EXTERNAL duk_idx_t duk_push_array(duk_hthread *thr) {duk_push_array22908,906989
DUK_EXTERNAL duk_idx_t duk_push_bare_array(duk_hthread *thr) {duk_push_bare_array22937,907872
DUK_INTERNAL duk_harray *duk_push_harray(duk_hthread *thr) {duk_push_harray22964,908652
DUK_INTERNAL duk_harray *duk_push_harray_with_size(duk_hthread *thr, duk_uint32_t size) {duk_push_harray_with_size22980,909167
DUK_INTERNAL duk_tval *duk_push_harray_with_size_outptr(duk_hthread *thr, duk_uint32_t size) {duk_push_harray_with_size_outptr22997,909566
DUK_EXTERNAL duk_idx_t duk_push_thread_raw(duk_hthread *thr, duk_uint_t flags) {duk_push_thread_raw23007,909839
DUK_INTERNAL duk_hcompfunc *duk_push_hcompfunc(duk_hthread *thr) {duk_push_hcompfunc23064,911597
DUK_INTERNAL duk_hboundfunc *duk_push_hboundfunc(duk_hthread *thr) {duk_push_hboundfunc23101,912814
DUK_LOCAL duk_idx_t duk__push_c_function_raw(duk_hthread *thr, duk_c_function func, duk_idx_t naduk__push_c_function_raw23131,913740
DUK_EXTERNAL duk_idx_t duk_push_c_function(duk_hthread *thr, duk_c_function func, duk_int_t nargduk_push_c_function23176,914981
DUK_INTERNAL void duk_push_c_function_builtin(duk_hthread *thr, duk_c_function func, duk_int_t nduk_push_c_function_builtin23197,915712
DUK_INTERNAL void duk_push_c_function_builtin_noconstruct(duk_hthread *thr, duk_c_function func,duk_push_c_function_builtin_noconstruct23216,916386
DUK_EXTERNAL duk_idx_t duk_push_c_lightfunc(duk_hthread *thr, duk_c_function func, duk_idx_t narduk_push_c_lightfunc23234,917030
DUK_INTERNAL duk_hbufobj *duk_push_bufobj_raw(duk_hthread *thr, duk_uint_t hobject_flags_and_claduk_push_bufobj_raw23269,918132
#define DUK__PACK_ARGS(DUK__PACK_ARGS23297,918969
static const duk_uint32_t duk__bufobj_flags_lookup[] = {duk__bufobj_flags_lookup23300,919149
DUK_EXTERNAL void duk_push_buffer_object(duk_hthread *thr, duk_idx_t idx_buffer, duk_size_t byteduk_push_buffer_object23318,921290
DUK_EXTERNAL void duk_push_buffer_object(duk_hthread *thr, duk_idx_t idx_buffer, duk_size_t byteduk_push_buffer_object23424,924819
DUK_EXTERNAL duk_idx_t duk_push_error_object_va_raw(duk_hthread *thr, duk_errcode_t err_code, coduk_push_error_object_va_raw23435,925191
DUK_EXTERNAL duk_idx_t duk_push_error_object_raw(duk_hthread *thr, duk_errcode_t err_code, constduk_push_error_object_raw23489,927276
DUK_EXTERNAL duk_idx_t duk_push_error_object_stash(duk_hthread *thr, duk_errcode_t err_code, conduk_push_error_object_stash23502,927652
DUK_EXTERNAL void *duk_push_buffer_raw(duk_hthread *thr, duk_size_t size, duk_small_uint_t flagsduk_push_buffer_raw23519,928139
DUK_INTERNAL void *duk_push_fixed_buffer_nozero(duk_hthread *thr, duk_size_t len) {duk_push_fixed_buffer_nozero23548,928829
DUK_INTERNAL void *duk_push_fixed_buffer_zero(duk_hthread *thr, duk_size_t len) {duk_push_fixed_buffer_zero23553,929004
DUK_EXTERNAL duk_idx_t duk_push_proxy(duk_hthread *thr, duk_uint_t proxy_flags) {duk_push_proxy23570,929414
DUK_EXTERNAL duk_idx_t duk_push_proxy(duk_hthread *thr, duk_uint_t proxy_flags) {duk_push_proxy23664,932711
DUK_LOCAL void duk__validate_push_heapptr(duk_hthread *thr, void *ptr) {duk__validate_push_heapptr23673,932971
DUK_EXTERNAL duk_idx_t duk_push_heapptr(duk_hthread *thr, void *ptr) {duk_push_heapptr23770,935663
DUK_EXTERNAL duk_idx_t duk_push_bare_object(duk_hthread *thr) {duk_push_bare_object23862,938644
DUK_INTERNAL void duk_push_hstring(duk_hthread *thr, duk_hstring *h) {duk_push_hstring23873,939076
DUK_INTERNAL void duk_push_hstring_stridx(duk_hthread *thr, duk_small_uint_t stridx) {duk_push_hstring_stridx23883,939274
DUK_INTERNAL void duk_push_hstring_empty(duk_hthread *thr) {duk_push_hstring_empty23889,939487
DUK_INTERNAL void duk_push_hobject(duk_hthread *thr, duk_hobject *h) {duk_push_hobject23894,939657
DUK_INTERNAL void duk_push_hbuffer(duk_hthread *thr, duk_hbuffer *h) {duk_push_hbuffer23904,939855
DUK_INTERNAL void duk_push_hobject_bidx(duk_hthread *thr, duk_small_int_t builtin_idx) {duk_push_hobject_bidx23914,940053
DUK_LOCAL DUK_ALWAYS_INLINE void duk__pop_n_unsafe_raw(duk_hthread *thr, duk_idx_t count) {duk__pop_n_unsafe_raw23926,940360
DUK_EXTERNAL void duk_pop_n(duk_hthread *thr, duk_idx_t count) {duk_pop_n23960,941184
DUK_INTERNAL void duk_pop_n_unsafe(duk_hthread *thr, duk_idx_t count) {duk_pop_n_unsafe23974,941600
DUK_INTERNAL void duk_pop_n_unsafe(duk_hthread *thr, duk_idx_t count) {duk_pop_n_unsafe23979,941759
DUK_INTERNAL void duk_pop_n_nodecref_unsafe(duk_hthread *thr, duk_idx_t count) {duk_pop_n_nodecref_unsafe23987,942053
DUK_INTERNAL void duk_pop_n_nodecref_unsafe(duk_hthread *thr, duk_idx_t count) {duk_pop_n_nodecref_unsafe24007,942616
DUK_EXTERNAL void duk_pop(duk_hthread *thr) {duk_pop24017,942958
DUK_INTERNAL void duk_pop_unsafe(duk_hthread *thr) {duk_pop_unsafe24021,943054
DUK_INTERNAL void duk_pop_nodecref_unsafe(duk_hthread *thr) {duk_pop_nodecref_unsafe24025,943164
DUK_LOCAL DUK_ALWAYS_INLINE void duk__pop_unsafe_raw(duk_hthread *thr) {duk__pop_unsafe_raw24030,943325
DUK_EXTERNAL void duk_pop(duk_hthread *thr) {duk_pop24048,943913
DUK_INTERNAL void duk_pop_unsafe(duk_hthread *thr) {duk_pop_unsafe24059,944207
DUK_INTERNAL void duk_pop_nodecref_unsafe(duk_hthread *thr) {duk_pop_nodecref_unsafe24063,944317
DUK_INTERNAL void duk_pop_undefined(duk_hthread *thr) {duk_pop_undefined24080,944849
DUK_INTERNAL void duk_pop_undefined(duk_hthread *thr) {duk_pop_undefined24085,944999
DUK_EXTERNAL void duk_pop_2(duk_hthread *thr) {duk_pop_224099,945493
DUK_INTERNAL void duk_pop_2_unsafe(duk_hthread *thr) {duk_pop_2_unsafe24103,945591
DUK_INTERNAL void duk_pop_2_nodecref_unsafe(duk_hthread *thr) {duk_pop_2_nodecref_unsafe24107,945703
DUK_LOCAL DUK_ALWAYS_INLINE void duk__pop_2_unsafe_raw(duk_hthread *thr) {duk__pop_2_unsafe_raw24112,945839
DUK_EXTERNAL void duk_pop_2(duk_hthread *thr) {duk_pop_224137,946640
DUK_INTERNAL void duk_pop_2_unsafe(duk_hthread *thr) {duk_pop_2_unsafe24148,946941
DUK_INTERNAL void duk_pop_2_nodecref_unsafe(duk_hthread *thr) {duk_pop_2_nodecref_unsafe24152,947055
DUK_EXTERNAL void duk_pop_3(duk_hthread *thr) {duk_pop_324166,947586
DUK_INTERNAL void duk_pop_3_unsafe(duk_hthread *thr) {duk_pop_3_unsafe24171,947685
DUK_INTERNAL void duk_pop_3_nodecref_unsafe(duk_hthread *thr) {duk_pop_3_nodecref_unsafe24176,947798
DUK_INTERNAL void duk_pack(duk_hthread *thr, duk_idx_t count) {duk_pack24187,948113
DUK_INTERNAL duk_idx_t duk_unpack_array_like(duk_hthread *thr, duk_idx_t idx) {duk_unpack_array_like24242,949964
DUK_EXTERNAL void duk_throw_raw(duk_hthread *thr) {duk_throw_raw24357,953257
DUK_EXTERNAL void duk_fatal_raw(duk_hthread *thr, const char *err_msg) {duk_fatal_raw24402,954757
DUK_EXTERNAL void duk_error_va_raw(duk_hthread *thr, duk_errcode_t err_code, const char *filenamduk_error_va_raw24426,955587
DUK_EXTERNAL void duk_error_raw(duk_hthread *thr, duk_errcode_t err_code, const char *filename, duk_error_raw24434,955887
DUK_LOCAL void duk__throw_error_from_stash(duk_hthread *thr, duk_errcode_t err_code, const char duk__throw_error_from_stash24455,956531
#define DUK__ERROR_STASH_SHARED(DUK__ERROR_STASH_SHARED24471,956968
DUK_EXTERNAL duk_ret_t duk_error_stash(duk_hthread *thr, duk_errcode_t err_code, const char *fmtduk_error_stash24479,957169
DUK_EXTERNAL duk_ret_t duk_generic_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_generic_error_stash24483,957340
DUK_EXTERNAL duk_ret_t duk_eval_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_eval_error_stash24487,957500
DUK_EXTERNAL duk_ret_t duk_range_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_range_error_stash24491,957662
DUK_EXTERNAL duk_ret_t duk_reference_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_reference_error_stash24495,957826
DUK_EXTERNAL duk_ret_t duk_syntax_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_syntax_error_stash24499,957998
DUK_EXTERNAL duk_ret_t duk_type_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_type_error_stash24503,958164
DUK_EXTERNAL duk_ret_t duk_uri_error_stash(duk_hthread *thr, const char *fmt, ...) {duk_uri_error_stash24507,958326
DUK_EXTERNAL duk_bool_t duk_equals(duk_hthread *thr, duk_idx_t idx1, duk_idx_t idx2) {duk_equals24517,958548
DUK_EXTERNAL duk_bool_t duk_strict_equals(duk_hthread *thr, duk_idx_t idx1, duk_idx_t idx2) {duk_strict_equals24534,958951
DUK_EXTERNAL duk_bool_t duk_samevalue(duk_hthread *thr, duk_idx_t idx1, duk_idx_t idx2) {duk_samevalue24549,959310
DUK_EXTERNAL duk_bool_t duk_instanceof(duk_hthread *thr, duk_idx_t idx1, duk_idx_t idx2) {duk_instanceof24568,959684
DUK_INTERNAL void duk_push_lightfunc_name_raw(duk_hthread *thr, duk_c_function func, duk_small_uduk_push_lightfunc_name_raw24591,960320
DUK_INTERNAL void duk_push_lightfunc_name(duk_hthread *thr, duk_tval *tv) {duk_push_lightfunc_name24612,961203
DUK_INTERNAL void duk_push_lightfunc_tostring(duk_hthread *thr, duk_tval *tv) {duk_push_lightfunc_tostring24623,961498
DUK_INTERNAL void duk_push_string_funcptr(duk_hthread *thr, duk_uint8_t *ptr, duk_size_t sz) {duk_push_string_funcptr24644,962088
#define DUK__READABLE_SUMMARY_MAXCHARS DUK__READABLE_SUMMARY_MAXCHARS24680,963010
#define DUK__READABLE_STRING_MAXCHARS DUK__READABLE_STRING_MAXCHARS24681,963087
#define DUK__READABLE_ERRMSG_MAXCHARS DUK__READABLE_ERRMSG_MAXCHARS24682,963156
DUK_LOCAL void duk__push_hstring_readable_unicode(duk_hthread *thr, duk_hstring *h_input, duk_smduk__push_hstring_readable_unicode24689,963481
DUK_LOCAL const char *duk__push_string_tval_readable(duk_hthread *thr, duk_tval *tv, duk_bool_t duk__push_string_tval_readable24740,965084
DUK_INTERNAL const char *duk_push_string_tval_readable(duk_hthread *thr, duk_tval *tv) {duk_push_string_tval_readable24820,967739
DUK_INTERNAL const char *duk_push_string_readable(duk_hthread *thr, duk_idx_t idx) {duk_push_string_readable24825,967927
DUK_INTERNAL const char *duk_push_string_tval_readable_error(duk_hthread *thr, duk_tval *tv) {duk_push_string_tval_readable_error24830,968111
DUK_INTERNAL void duk_push_symbol_descriptive_string(duk_hthread *thr, duk_hstring *h) {duk_push_symbol_descriptive_string24835,968305
DUK_INTERNAL void duk_copy_tvals_incref(duk_hthread *thr, duk_tval *tv_dst, duk_tval *tv_src, duduk_copy_tvals_incref24889,969709
DUK_LOCAL void duk__concat_and_join_helper(duk_hthread *thr, duk_idx_t count_in, duk_bool_t is_jduk__concat_and_join_helper24920,970461
DUK_EXTERNAL void duk_concat(duk_hthread *thr, duk_idx_t count) {duk_concat25023,973294
DUK_INTERNAL void duk_concat_2(duk_hthread *thr) {duk_concat_225030,973482
DUK_INTERNAL void duk_concat_2(duk_hthread *thr) {duk_concat_225035,973617
DUK_EXTERNAL void duk_join(duk_hthread *thr, duk_idx_t count) {duk_join25074,974736
DUK_EXTERNAL void duk_decode_string(duk_hthread *thr, duk_idx_t idx, duk_decode_char_function caduk_decode_string25084,975028
DUK_EXTERNAL void duk_map_string(duk_hthread *thr, duk_idx_t idx, duk_map_char_function callbackduk_map_string25107,975649
DUK_EXTERNAL void duk_substring(duk_hthread *thr, duk_idx_t idx, duk_size_t start_offset, duk_siduk_substring25147,976767
DUK_EXTERNAL void duk_trim(duk_hthread *thr, duk_idx_t idx) {duk_trim25195,978520
DUK_EXTERNAL duk_codepoint_t duk_char_code_at(duk_hthread *thr, duk_idx_t idx, duk_size_t char_oduk_char_code_at25270,980523
DUK_INTERNAL duk_double_t duk_time_get_ecmascript_time(duk_hthread *thr) {duk_time_get_ecmascript_time25299,981338
DUK_INTERNAL duk_double_t duk_time_get_ecmascript_time_nofrac(duk_hthread *thr) {duk_time_get_ecmascript_time_nofrac25307,981581
DUK_INTERNAL duk_double_t duk_time_get_monotonic_time(duk_hthread *thr) {duk_time_get_monotonic_time25315,981866
DUK_EXTERNAL duk_double_t duk_get_now(duk_hthread *thr) {duk_get_now25324,982119
DUK_EXTERNAL void duk_time_to_components(duk_hthread *thr, duk_double_t timeval, duk_time_componduk_time_to_components25341,982530
DUK_EXTERNAL duk_double_t duk_components_to_time(duk_hthread *thr, duk_time_components *comp) {duk_components_to_time25370,983591
#define  DUK__ARRAY_MID_JOIN_LIMIT DUK__ARRAY_MID_JOIN_LIMIT25449,987114
DUK_LOCAL duk_uint32_t duk__push_this_obj_len_u32(duk_hthread *thr) {duk__push_this_obj_len_u3225462,987528
DUK_LOCAL duk_uint32_t duk__push_this_obj_len_u32_limited(duk_hthread *thr) {duk__push_this_obj_len_u32_limited25475,987905
DUK_LOCAL duk_harray *duk__arraypart_fastpath_this(duk_hthread *thr) {duk__arraypart_fastpath_this25495,988767
DUK_INTERNAL duk_ret_t duk_bi_array_constructor(duk_hthread *thr) {duk_bi_array_constructor25548,990591
DUK_INTERNAL duk_ret_t duk_bi_array_constructor_is_array(duk_hthread *thr) {duk_bi_array_constructor_is_array25584,991447
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_to_string(duk_hthread *thr) {duk_bi_array_prototype_to_string25594,991655
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_concat(duk_hthread *thr) {duk_bi_array_prototype_concat25633,992857
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_join_shared(duk_hthread *thr) {duk_bi_array_prototype_join_shared25769,996916
DUK_LOCAL duk_ret_t duk__array_pop_fastpath(duk_hthread *thr, duk_harray *h_arr) {duk__array_pop_fastpath25852,999425
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_pop(duk_hthread *thr) {duk_bi_array_prototype_pop25892,1000474
DUK_LOCAL duk_ret_t duk__array_push_fastpath(duk_hthread *thr, duk_harray *h_arr) {duk__array_push_fastpath25926,1001309
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_push(duk_hthread *thr) {duk_bi_array_prototype_push25973,1002712
DUK_LOCAL duk_small_int_t duk__array_sort_compare(duk_hthread *thr, duk_int_t idx1, duk_int_t idduk__array_sort_compare26042,1004579
DUK_LOCAL void duk__array_sort_swap(duk_hthread *thr, duk_int_t l, duk_int_t r) {duk__array_sort_swap26161,1007919
DUK_LOCAL void duk__debuglog_qsort_state(duk_hthread *thr, duk_int_t lo, duk_int_t hi, duk_int_tduk__debuglog_qsort_state26191,1008836
DUK_LOCAL void duk__array_qsort(duk_hthread *thr, duk_int_t lo, duk_int_t hi) {duk__array_qsort26221,1009495
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_sort(duk_hthread *thr) {duk_bi_array_prototype_sort26317,1012276
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_splice(duk_hthread *thr) {duk_bi_array_prototype_splice26353,1013200
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_reverse(duk_hthread *thr) {duk_bi_array_prototype_reverse26520,1018358
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_slice(duk_hthread *thr) {duk_bi_array_prototype_slice26571,1019538
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_shift(duk_hthread *thr) {duk_bi_array_prototype_shift26637,1020958
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_unshift(duk_hthread *thr) {duk_bi_array_prototype_unshift26679,1021904
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_indexof_shared(duk_hthread *thr) {duk_bi_array_prototype_indexof_shared26741,1023840
#define DUK__ITER_EVERY DUK__ITER_EVERY26831,1026581
#define DUK__ITER_SOME DUK__ITER_SOME26832,1026610
#define DUK__ITER_FOREACH DUK__ITER_FOREACH26833,1026639
#define DUK__ITER_MAP DUK__ITER_MAP26834,1026668
#define DUK__ITER_FILTER DUK__ITER_FILTER26835,1026697
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_iter_shared(duk_hthread *thr) {duk_bi_array_prototype_iter_shared26842,1026963
DUK_INTERNAL duk_ret_t duk_bi_array_prototype_reduce_shared(duk_hthread *thr) {duk_bi_array_prototype_reduce_shared26967,1029861
DUK_INTERNAL duk_ret_t duk_bi_boolean_prototype_tostring_shared(duk_hthread *thr) {duk_bi_boolean_prototype_tostring_shared27071,1032978
DUK_INTERNAL duk_ret_t duk_bi_boolean_constructor(duk_hthread *thr) {duk_bi_boolean_constructor27108,1033892
static const duk_uint8_t duk__buffer_proto_from_classnum[] = {duk__buffer_proto_from_classnum27144,1034978
static const duk_uint8_t duk__buffer_class_from_elemtype[9] = {duk__buffer_class_from_elemtype27161,1035514
static const duk_uint8_t duk__buffer_proto_from_elemtype[9] = {duk__buffer_proto_from_elemtype27176,1035968
static const duk_uint8_t duk__buffer_nbytes_from_fldtype[6] = {duk__buffer_nbytes_from_fldtype27189,1036372
static duk_uint16_t duk__buffer_elemtype_copy_compatible[9] = {duk__buffer_elemtype_copy_compatible27205,1037008
DUK_LOCAL duk_hbufobj *duk__hbufobj_promote_this(duk_hthread *thr) {duk__hbufobj_promote_this27246,1038175
#define DUK__BUFOBJ_FLAG_THROW DUK__BUFOBJ_FLAG_THROW27263,1038662
#define DUK__BUFOBJ_FLAG_PROMOTE DUK__BUFOBJ_FLAG_PROMOTE27264,1038705
DUK_LOCAL duk_heaphdr *duk__getrequire_bufobj_this(duk_hthread *thr, duk_small_uint_t flags) {duk__getrequire_bufobj_this27270,1038989
DUK_LOCAL duk_hbufobj *duk__get_bufobj_this(duk_hthread *thr) {duk__get_bufobj_this27313,1040379
DUK_LOCAL duk_hbufobj *duk__require_bufobj_this(duk_hthread *thr) {duk__require_bufobj_this27320,1040617
DUK_LOCAL duk_hbufobj *duk__require_bufobj_value(duk_hthread *thr, duk_idx_t idx) {duk__require_bufobj_value27325,1040865
DUK_LOCAL void duk__set_bufobj_buffer(duk_hthread *thr, duk_hbufobj *h_bufobj, duk_hbuffer *h_vaduk__set_bufobj_buffer27352,1041584
DUK_LOCAL void duk__resolve_offset_opt_length(duk_hthread *thr,duk__resolve_offset_opt_length27371,1042228
DUK_LOCAL void duk__clamp_startend_nonegidx_noshift(duk_hthread *thr,duk__clamp_startend_nonegidx_noshift27430,1044013
DUK_LOCAL void duk__clamp_startend_negidx_shifted(duk_hthread *thr,duk__clamp_startend_negidx_shifted27467,1045555
DUK_INTERNAL void duk_hbufobj_promote_plain(duk_hthread *thr, duk_idx_t idx) {duk_hbufobj_promote_plain27525,1047450
DUK_INTERNAL void duk_hbufobj_push_uint8array_from_plain(duk_hthread *thr, duk_hbuffer *h_buf) {duk_hbufobj_push_uint8array_from_plain27531,1047594
DUK_INTERNAL void duk_hbufobj_push_validated_read(duk_hthread *thr, duk_hbufobj *h_bufobj, duk_uduk_hbufobj_push_validated_read27572,1049308
DUK_INTERNAL void duk_hbufobj_validated_write(duk_hthread *thr, duk_hbufobj *h_bufobj, duk_uint8duk_hbufobj_validated_write27610,1050468
DUK_LOCAL duk_hbuffer *duk__hbufobj_fixed_from_argvalue(duk_hthread *thr) {duk__hbufobj_fixed_from_argvalue27664,1052281
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_constructor(duk_hthread *thr) {duk_bi_nodejs_buffer_constructor27750,1054913
DUK_INTERNAL duk_ret_t duk_bi_arraybuffer_constructor(duk_hthread *thr) {duk_bi_arraybuffer_constructor27775,1055607
DUK_INTERNAL duk_ret_t duk_bi_typedarray_constructor(duk_hthread *thr) {duk_bi_typedarray_constructor27817,1056761
DUK_INTERNAL duk_ret_t duk_bi_dataview_constructor(duk_hthread *thr) {duk_bi_dataview_constructor28196,1069640
DUK_INTERNAL duk_ret_t duk_bi_arraybuffer_isview(duk_hthread *thr) {duk_bi_arraybuffer_isview28248,1071248
DUK_INTERNAL duk_ret_t duk_bi_uint8array_allocplain(duk_hthread *thr) {duk_bi_uint8array_allocplain28274,1071907
DUK_INTERNAL duk_ret_t duk_bi_uint8array_plainof(duk_hthread *thr) {duk_bi_uint8array_plainof28285,1072151
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_tostring(duk_hthread *thr) {duk_bi_nodejs_buffer_tostring28314,1072862
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_tojson(duk_hthread *thr) {duk_bi_nodejs_buffer_tojson28373,1075032
DUK_INTERNAL duk_ret_t duk_bi_buffer_compare_shared(duk_hthread *thr) {duk_bi_buffer_compare_shared28417,1076369
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_fill(duk_hthread *thr) {duk_bi_nodejs_buffer_fill28470,1078093
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_write(duk_hthread *thr) {duk_bi_nodejs_buffer_write28544,1080465
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_copy(duk_hthread *thr) {duk_bi_nodejs_buffer_copy28587,1081699
DUK_INTERNAL duk_ret_t duk_bi_typedarray_set(duk_hthread *thr) {duk_bi_typedarray_set28725,1087512
DUK_LOCAL void duk__arraybuffer_plain_slice(duk_hthread *thr, duk_hbuffer *h_val) {duk__arraybuffer_plain_slice29004,1097685
DUK_INTERNAL duk_ret_t duk_bi_buffer_slice_shared(duk_hthread *thr) {duk_bi_buffer_slice_shared29036,1098996
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_is_encoding(duk_hthread *thr) {duk_bi_nodejs_buffer_is_encoding29189,1104496
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_is_buffer(duk_hthread *thr) {duk_bi_nodejs_buffer_is_buffer29206,1104942
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_byte_length(duk_hthread *thr) {duk_bi_nodejs_buffer_byte_length29233,1105593
DUK_INTERNAL duk_ret_t duk_bi_nodejs_buffer_concat(duk_hthread *thr) {duk_bi_nodejs_buffer_concat29264,1106345
#define  DUK__FLD_8BIT DUK__FLD_8BIT29383,1110208
#define  DUK__FLD_16BIT DUK__FLD_16BIT29384,1110241
#define  DUK__FLD_32BIT DUK__FLD_32BIT29385,1110274
#define  DUK__FLD_FLOAT DUK__FLD_FLOAT29386,1110307
#define  DUK__FLD_DOUBLE DUK__FLD_DOUBLE29387,1110340
#define  DUK__FLD_VARINT DUK__FLD_VARINT29388,1110373
#define  DUK__FLD_BIGENDIAN DUK__FLD_BIGENDIAN29389,1110406
#define  DUK__FLD_SIGNED DUK__FLD_SIGNED29390,1110446
#define  DUK__FLD_TYPEDARRAY DUK__FLD_TYPEDARRAY29391,1110486
DUK_INTERNAL duk_ret_t duk_bi_buffer_readfield(duk_hthread *thr) {duk_bi_buffer_readfield29394,1110589
DUK_INTERNAL duk_ret_t duk_bi_buffer_writefield(duk_hthread *thr) {duk_bi_buffer_writefield29653,1117754
DUK_LOCAL duk_hbufobj *duk__autospawn_arraybuffer(duk_hthread *thr, duk_hbuffer *h_buf) {duk__autospawn_arraybuffer29930,1125895
DUK_INTERNAL duk_ret_t duk_bi_typedarray_buffer_getter(duk_hthread *thr) {duk_bi_typedarray_buffer_getter29947,1126487
DUK_INTERNAL duk_ret_t duk_bi_typedarray_byteoffset_getter(duk_hthread *thr) {duk_bi_typedarray_byteoffset_getter29995,1128152
DUK_INTERNAL duk_ret_t duk_bi_typedarray_bytelength_getter(duk_hthread *thr) {duk_bi_typedarray_bytelength_getter30011,1128609
DUK_INTERNAL duk_ret_t duk_bi_typedarray_byteoffset_getter(duk_hthread *thr) {duk_bi_typedarray_byteoffset_getter30038,1129441
DUK_INTERNAL duk_ret_t duk_bi_typedarray_bytelength_getter(duk_hthread *thr) {duk_bi_typedarray_bytelength_getter30043,1129558
typedef struct {__anonffb0efc10b0830093,1130848
	duk_hthread *thr;thr30094,1130865
	duk_uint8_t *ptr;ptr30095,1130884
	duk_uint8_t *buf;buf30096,1130903
	duk_uint8_t *buf_end;buf_end30097,1130922
	duk_size_t len;len30098,1130945
	duk_idx_t idx_buf;idx_buf30099,1130962
} duk_cbor_encode_context;duk_cbor_encode_context30100,1130982
typedef struct {__anonffb0efc10c0830102,1131010
	duk_hthread *thr;thr30103,1131027
	const duk_uint8_t *buf;buf30104,1131046
	duk_size_t off;off30105,1131071
	duk_size_t len;len30106,1131088
} duk_cbor_decode_context;duk_cbor_decode_context30107,1131105
DUK_LOCAL duk_uint32_t duk__cbor_double_to_uint32(double d) {duk__cbor_double_to_uint3230116,1131297
DUK_LOCAL void duk__cbor_encode_error(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_error30126,1131525
DUK_LOCAL void duk__cbor_encode_sizet_uint32_check(duk_cbor_encode_context *enc_ctx, duk_size_t duk__cbor_encode_sizet_uint32_check30131,1131735
DUK_LOCAL DUK_NOINLINE void duk__cbor_encode_ensure_slowpath(duk_cbor_encode_context *enc_ctx, dduk__cbor_encode_ensure_slowpath30137,1131980
DUK_LOCAL DUK_INLINE void duk__cbor_encode_ensure(duk_cbor_encode_context *enc_ctx, duk_size_t lduk__cbor_encode_ensure30183,1133229
DUK_LOCAL duk_size_t duk__cbor_get_reserve(duk_cbor_encode_context *enc_ctx) {duk__cbor_get_reserve30190,1133470
DUK_LOCAL void duk__cbor_encode_uint32(duk_cbor_encode_context *enc_ctx, duk_uint32_t u, duk_uinduk__cbor_encode_uint3230196,1133698
DUK_LOCAL void duk__cbor_encode_double(duk_cbor_encode_context *enc_ctx, double d) {duk__cbor_encode_double30219,1134312
DUK_LOCAL void duk__cbor_encode_double_fp(duk_cbor_encode_context *enc_ctx, double d) {duk__cbor_encode_double_fp30232,1134637
DUK_LOCAL void duk__cbor_encode_double(duk_cbor_encode_context *enc_ctx, double d) {duk__cbor_encode_double30352,1138253
DUK_LOCAL void duk__cbor_encode_string_top(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_string_top30462,1142732
DUK_LOCAL void duk__cbor_encode_object(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_object30521,1144941
DUK_LOCAL void duk__cbor_encode_buffer(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_buffer30597,1147567
DUK_LOCAL void duk__cbor_encode_pointer(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_pointer30616,1148131
DUK_LOCAL void duk__cbor_encode_lightfunc(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_lightfunc30639,1149061
DUK_LOCAL void duk__cbor_encode_value(duk_cbor_encode_context *enc_ctx) {duk__cbor_encode_value30651,1149343
DUK_LOCAL void duk__cbor_req_stack(duk_cbor_decode_context *dec_ctx) {duk__cbor_req_stack30730,1151004
DUK_LOCAL void duk__cbor_decode_error(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_error30734,1151115
DUK_LOCAL duk_uint8_t duk__cbor_decode_readbyte(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_readbyte30738,1151251
DUK_LOCAL duk_uint16_t duk__cbor_decode_read_u16(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_read_u1630746,1151512
DUK_LOCAL duk_uint32_t duk__cbor_decode_read_u32(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_read_u3230758,1151846
DUK_LOCAL duk_uint8_t duk__cbor_decode_peekbyte(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_peekbyte30770,1152180
DUK_LOCAL void duk__cbor_decode_rewind(duk_cbor_decode_context *dec_ctx, duk_size_t len) {duk__cbor_decode_rewind30777,1152392
DUK_LOCAL const duk_uint8_t *duk__cbor_decode_consume(duk_cbor_decode_context *dec_ctx, duk_sizeduk__cbor_decode_consume30790,1152756
DUK_LOCAL int duk__cbor_decode_checkbreak(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_checkbreak30802,1153133
DUK_LOCAL void duk__cbor_decode_push_aival_int(duk_cbor_decode_context *dec_ctx, duk_uint8_t ib,duk__cbor_decode_push_aival_int30814,1153411
DUK_LOCAL void duk__cbor_decode_skip_aival_int(duk_cbor_decode_context *dec_ctx, duk_uint8_t ib)duk__cbor_decode_skip_aival_int30927,1156478
DUK_LOCAL duk_uint32_t duk__cbor_decode_aival_uint32(duk_cbor_decode_context *dec_ctx, duk_uint8duk__cbor_decode_aival_uint3230944,1156925
DUK_LOCAL void duk__cbor_decode_buffer(duk_cbor_decode_context *dec_ctx, duk_uint8_t expected_baduk__cbor_decode_buffer30976,1157675
DUK_LOCAL void duk__cbor_decode_join_buffers(duk_cbor_decode_context *dec_ctx, duk_idx_t count) duk__cbor_decode_join_buffers30994,1158358
DUK_LOCAL void duk__cbor_decode_and_join_strbuf(duk_cbor_decode_context *dec_ctx, duk_uint8_t exduk__cbor_decode_and_join_strbuf31038,1159450
DUK_LOCAL duk_double_t duk__cbor_decode_half_float(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_half_float31058,1159999
DUK_LOCAL void duk__cbor_decode_string(duk_cbor_decode_context *dec_ctx, duk_uint8_t ib, duk_uinduk__cbor_decode_string31134,1162069
DUK_LOCAL duk_bool_t duk__cbor_decode_array(duk_cbor_decode_context *dec_ctx, duk_uint8_t ib, duduk__cbor_decode_array31178,1163556
DUK_LOCAL duk_bool_t duk__cbor_decode_map(duk_cbor_decode_context *dec_ctx, duk_uint8_t ib, duk_duk__cbor_decode_map31218,1164400
DUK_LOCAL duk_double_t duk__cbor_decode_float(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_float31262,1165407
DUK_LOCAL duk_double_t duk__cbor_decode_double(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_double31271,1165692
#define DUK__CBOR_AI DUK__CBOR_AI31281,1166002
DUK_LOCAL void duk__cbor_decode_value(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_value31283,1166038
DUK_LOCAL void duk__cbor_decode_value(duk_cbor_decode_context *dec_ctx) {duk__cbor_decode_value31488,1172766
DUK_LOCAL void duk__cbor_encode(duk_hthread *thr, duk_idx_t idx, duk_uint_t encode_flags) {duk__cbor_encode31619,1176280
DUK_LOCAL void duk__cbor_decode(duk_hthread *thr, duk_idx_t idx, duk_uint_t decode_flags) {duk__cbor_decode31642,1176896
DUK_LOCAL void duk__cbor_encode(duk_hthread *thr, duk_idx_t idx, duk_uint_t encode_flags) {duk__cbor_encode31670,1177598
DUK_LOCAL void duk__cbor_decode(duk_hthread *thr, duk_idx_t idx, duk_uint_t decode_flags) {duk__cbor_decode31676,1177765
DUK_EXTERNAL void duk_cbor_encode(duk_hthread *thr, duk_idx_t idx, duk_uint_t encode_flags) {duk_cbor_encode31688,1177992
DUK_EXTERNAL void duk_cbor_decode(duk_hthread *thr, duk_idx_t idx, duk_uint_t decode_flags) {duk_cbor_decode31692,1178159
DUK_INTERNAL duk_ret_t duk_bi_cbor_encode(duk_hthread *thr) {duk_bi_cbor_encode31699,1178395
DUK_INTERNAL duk_ret_t duk_bi_cbor_decode(duk_hthread *thr) {duk_bi_cbor_decode31712,1178755
DUK_INTERNAL duk_ret_t duk_bi_cbor_encode(duk_hthread *thr) {duk_bi_cbor_encode31719,1178931
DUK_INTERNAL duk_ret_t duk_bi_cbor_decode(duk_hthread *thr) {duk_bi_cbor_decode31723,1179053
#define  DUK__DPRINT_PARTS_AND_DPARTS(DUK__DPRINT_PARTS_AND_DPARTS31764,1180464
#define  DUK__DPRINT_PARTS(DUK__DPRINT_PARTS31775,1181139
#define  DUK__DPRINT_DPARTS(DUK__DPRINT_DPARTS31782,1181495
#define DUK__YEAR(DUK__YEAR31795,1182124
DUK_LOCAL duk_uint8_t duk__date_equivyear[14] = {duk__date_equivyear31796,1182174
#define DUK__NUM_ISO8601_PARSER_PARTS DUK__NUM_ISO8601_PARSER_PARTS31831,1183299
#define DUK__PI_YEAR DUK__PI_YEAR31834,1183368
#define DUK__PI_MONTH DUK__PI_MONTH31835,1183399
#define DUK__PI_DAY DUK__PI_DAY31836,1183430
#define DUK__PI_HOUR DUK__PI_HOUR31837,1183461
#define DUK__PI_MINUTE DUK__PI_MINUTE31838,1183492
#define DUK__PI_SECOND DUK__PI_SECOND31839,1183523
#define DUK__PI_MILLISECOND DUK__PI_MILLISECOND31840,1183554
#define DUK__PI_TZHOUR DUK__PI_TZHOUR31841,1183585
#define DUK__PI_TZMINUTE DUK__PI_TZMINUTE31842,1183616
#define DUK__PM_YEAR DUK__PM_YEAR31845,1183673
#define DUK__PM_MONTH DUK__PM_MONTH31846,1183722
#define DUK__PM_DAY DUK__PM_DAY31847,1183772
#define DUK__PM_HOUR DUK__PM_HOUR31848,1183820
#define DUK__PM_MINUTE DUK__PM_MINUTE31849,1183869
#define DUK__PM_SECOND DUK__PM_SECOND31850,1183920
#define DUK__PM_MILLISECOND DUK__PM_MILLISECOND31851,1183971
#define DUK__PM_TZHOUR DUK__PM_TZHOUR31852,1184027
#define DUK__PM_TZMINUTE DUK__PM_TZMINUTE31853,1184078
#define DUK__SI_PLUS DUK__SI_PLUS31856,1184164
#define DUK__SI_MINUS DUK__SI_MINUS31857,1184195
#define DUK__SI_T DUK__SI_T31858,1184226
#define DUK__SI_SPACE DUK__SI_SPACE31859,1184257
#define DUK__SI_COLON DUK__SI_COLON31860,1184288
#define DUK__SI_PERIOD DUK__SI_PERIOD31861,1184319
#define DUK__SI_Z DUK__SI_Z31862,1184350
#define DUK__SI_NUL DUK__SI_NUL31863,1184381
#define DUK__SM_PLUS DUK__SM_PLUS31866,1184443
#define DUK__SM_MINUS DUK__SM_MINUS31867,1184492
#define DUK__SM_T DUK__SM_T31868,1184542
#define DUK__SM_SPACE DUK__SM_SPACE31869,1184588
#define DUK__SM_COLON DUK__SM_COLON31870,1184638
#define DUK__SM_PERIOD DUK__SM_PERIOD31871,1184688
#define DUK__SM_Z DUK__SM_Z31872,1184739
#define DUK__SM_NUL DUK__SM_NUL31873,1184785
#define DUK__CF_NEG DUK__CF_NEG31876,1184860
#define DUK__CF_ACCEPT DUK__CF_ACCEPT31877,1184946
#define DUK__CF_ACCEPT_NUL DUK__CF_ACCEPT_NUL31878,1185005
#define DUK__PACK_RULE(DUK__PACK_RULE31880,1185104
#define DUK__UNPACK_RULE(DUK__UNPACK_RULE31886,1185314
#define DUK__RULE_MASK_PART_SEP DUK__RULE_MASK_PART_SEP31891,1185506
DUK_LOCAL const duk_uint8_t duk__parse_iso8601_seps[] = {duk__parse_iso8601_seps31894,1185610
DUK_LOCAL const duk_uint32_t duk__parse_iso8601_control[] = {duk__parse_iso8601_control31900,1185913
DUK_LOCAL duk_bool_t duk__parse_string_iso8601_subset(duk_hthread *thr, const char *str) {duk__parse_string_iso8601_subset31921,1187555
DUK_LOCAL duk_ret_t duk__parse_string(duk_hthread *thr, const char *str) {duk__parse_string32116,1193557
DUK_LOCAL duk_uint8_t duk__days_in_month[12] = {duk__days_in_month32155,1194631
#define DUK__LOCAL_TZOFFSET_MAXITER DUK__LOCAL_TZOFFSET_MAXITER32164,1195032
#define DUK__WEEKDAY_MOD_ADDER DUK__WEEKDAY_MOD_ADDER32172,1195455
DUK_INTERNAL duk_bool_t duk_bi_date_is_leap_year(duk_int_t year) {duk_bi_date_is_leap_year32174,1195521
DUK_INTERNAL duk_bool_t duk_bi_date_timeval_in_valid_range(duk_double_t x) {duk_bi_date_timeval_in_valid_range32187,1195723
DUK_INTERNAL duk_bool_t duk_bi_date_timeval_in_leeway_range(duk_double_t x) {duk_bi_date_timeval_in_leeway_range32191,1195876
DUK_INTERNAL duk_bool_t duk_bi_date_year_in_valid_range(duk_double_t x) {duk_bi_date_year_in_valid_range32195,1196044
DUK_LOCAL duk_double_t duk__timeclip(duk_double_t x) {duk__timeclip32199,1196191
DUK_LOCAL duk_int_t duk__div_floor(duk_int_t a, duk_int_t b) {duk__div_floor32215,1196548
DUK_LOCAL duk_int_t duk__day_from_year(duk_int_t year) {duk__day_from_year32229,1196971
DUK_LOCAL duk_int_t duk__year_from_day(duk_int_t day, duk_small_int_t *out_day_within_year) {duk__year_from_day32240,1197384
DUK_LOCAL duk_double_t duk__make_day(duk_double_t year, duk_double_t month, duk_double_t day) {duk__make_day32277,1198586
DUK_INTERNAL void duk_bi_date_timeval_to_parts(duk_double_t d, duk_int_t *parts, duk_double_t *dduk_bi_date_timeval_to_parts32339,1200617
DUK_INTERNAL duk_double_t duk_bi_date_get_timeval_from_dparts(duk_double_t *dparts, duk_small_uiduk_bi_date_get_timeval_from_dparts32485,1206588
DUK_LOCAL duk_double_t duk__push_this_get_timeval_tzoffset(duk_hthread *thr, duk_small_uint_t flduk__push_this_get_timeval_tzoffset32623,1211970
DUK_LOCAL duk_double_t duk__push_this_get_timeval(duk_hthread *thr, duk_small_uint_t flags) {duk__push_this_get_timeval32666,1213161
DUK_LOCAL duk_ret_t duk__set_this_timeval_from_dparts(duk_hthread *thr, duk_double_t *dparts, duduk__set_this_timeval_from_dparts32674,1213520
DUK_LOCAL void duk__format_parts_iso8601(duk_int_t *parts, duk_int_t tzoffset, duk_small_uint_t duk__format_parts_iso860132693,1214202
DUK_LOCAL duk_ret_t duk__to_string_helper(duk_hthread *thr, duk_small_uint_t flags) {duk__to_string_helper32763,1217200
DUK_LOCAL duk_ret_t duk__get_part_helper(duk_hthread *thr, duk_small_uint_t flags_and_idx) {duk__get_part_helper32819,1219016
DUK_LOCAL duk_ret_t duk__set_part_helper(duk_hthread *thr, duk_small_uint_t flags_and_maxnargs) duk__set_part_helper32851,1220287
DUK_LOCAL void duk__twodigit_year_fixup(duk_hthread *thr, duk_idx_t idx_val) {duk__twodigit_year_fixup32950,1223482
DUK_LOCAL void duk__set_parts_from_args(duk_hthread *thr, duk_double_t *dparts, duk_idx_t nargs)duk__set_parts_from_args32976,1224228
static duk_uint16_t duk__date_magics[] = {duk__date_magics33029,1225990
DUK_LOCAL duk_small_uint_t duk__date_get_indirect_magic(duk_hthread *thr) {duk__date_get_indirect_magic33151,1229939
DUK_INTERNAL duk_ret_t duk_bi_date_constructor(duk_hthread *thr) {duk_bi_date_constructor33162,1230306
DUK_INTERNAL duk_ret_t duk_bi_date_constructor_parse(duk_hthread *thr) {duk_bi_date_constructor_parse33212,1232038
DUK_INTERNAL duk_ret_t duk_bi_date_constructor_utc(duk_hthread *thr) {duk_bi_date_constructor_utc33216,1232169
DUK_INTERNAL duk_ret_t duk_bi_date_constructor_now(duk_hthread *thr) {duk_bi_date_constructor_now33235,1232686
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_tostring_shared(duk_hthread *thr) {duk_bi_date_prototype_tostring_shared33278,1234111
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_value_of(duk_hthread *thr) {duk_bi_date_prototype_value_of33283,1234299
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_to_json(duk_hthread *thr) {duk_bi_date_prototype_to_json33294,1234651
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_get_shared(duk_hthread *thr) {duk_bi_date_prototype_get_shared33360,1236482
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_get_timezone_offset(duk_hthread *thr) {duk_bi_date_prototype_get_timezone_offset33365,1236680
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_set_shared(duk_hthread *thr) {duk_bi_date_prototype_set_shared33445,1239106
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_set_time(duk_hthread *thr) {duk_bi_date_prototype_set_time33450,1239314
DUK_INTERNAL duk_ret_t duk_bi_date_prototype_toprimitive(duk_hthread *thr) {duk_bi_date_prototype_toprimitive33471,1239858
#define DUK__STRPTIME_BUF_SIZE DUK__STRPTIME_BUF_SIZE33565,1242194
#define DUK__STRFTIME_BUF_SIZE DUK__STRFTIME_BUF_SIZE33566,1242229
DUK_INTERNAL duk_double_t duk_bi_date_get_now_gettimeofday(void) {duk_bi_date_get_now_gettimeofday33570,1242384
DUK_INTERNAL duk_double_t duk_bi_date_get_now_time(void) {duk_bi_date_get_now_time33589,1242879
DUK_INTERNAL duk_int_t duk_bi_date_get_local_tzoffset_gmtime(duk_double_t d) {duk_bi_date_get_local_tzoffset_gmtime33603,1243310
DUK_INTERNAL duk_bool_t duk_bi_date_parse_string_strptime(duk_hthread *thr, const char *str) {duk_bi_date_parse_string_strptime33752,1249700
DUK_INTERNAL duk_bool_t duk_bi_date_parse_string_getdate(duk_hthread *thr, const char *str) {duk_bi_date_parse_string_getdate33787,1250974
DUK_INTERNAL duk_bool_t duk_bi_date_format_parts_strftime(duk_hthread *thr, duk_int_t *parts, duduk_bi_date_format_parts_strftime33814,1251633
DUK_INTERNAL duk_double_t duk_bi_date_get_monotonic_time_clock_gettime(void) {duk_bi_date_get_monotonic_time_clock_gettime33866,1253540
DUK_LOCAL void duk__convert_systime_to_ularge(const SYSTEMTIME *st, ULARGE_INTEGER *res) {duk__convert_systime_to_ularge33896,1254362
DUK_LOCAL void duk__convert_filetime_to_ularge(const FILETIME *ft, ULARGE_INTEGER *res) {duk__convert_filetime_to_ularge33908,1254730
DUK_LOCAL void duk__set_systime_jan1970(SYSTEMTIME *st) {duk__set_systime_jan197033914,1254940
DUK_INTERNAL duk_double_t duk_bi_date_get_now_windows(void) {duk_bi_date_get_now_windows33928,1255412
DUK_INTERNAL duk_double_t duk_bi_date_get_now_windows_subms(void) {duk_bi_date_get_now_windows_subms33950,1256245
DUK_INTERNAL duk_int_t duk_bi_date_get_local_tzoffset_windows(duk_double_t d) {duk_bi_date_get_local_tzoffset_windows33972,1256958
DUK_INTERNAL duk_int_t duk_bi_date_get_local_tzoffset_windows_no_dst(duk_double_t d) {duk_bi_date_get_local_tzoffset_windows_no_dst34015,1258675
DUK_INTERNAL duk_double_t duk_bi_date_get_monotonic_time_windows_qpc(void) {duk_bi_date_get_monotonic_time_windows_qpc34052,1259962
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_info(duk_hthread *thr) {duk_bi_duktape_object_info34091,1261550
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_act(duk_hthread *thr) {duk_bi_duktape_object_act34096,1261663
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_gc(duk_hthread *thr) {duk_bi_duktape_object_gc34104,1261836
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_fin(duk_hthread *thr) {duk_bi_duktape_object_fin34118,1262195
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_enc(duk_hthread *thr) {duk_bi_duktape_object_enc34140,1262898
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_dec(duk_hthread *thr) {duk_bi_duktape_object_dec34184,1264537
DUK_INTERNAL duk_ret_t duk_bi_duktape_object_compact(duk_hthread *thr) {duk_bi_duktape_object_compact34227,1265897
typedef struct {__anonffb0efc10d0834248,1266381
	duk_uint8_t *out;      /* where to write next byte(s) */out34249,1266398
	duk_codepoint_t lead;  /* lead surrogate */lead34250,1266456
} duk__encode_context;duk__encode_context34251,1266501
typedef struct {__anonffb0efc10e0834253,1266525
	duk_codepoint_t codepoint;  /* built up incrementally */codepoint34255,1266570
	duk_uint8_t upper;          /* max value of next byte (decode error otherwise) */upper34256,1266628
	duk_uint8_t lower;          /* min value of next byte (ditto) */lower34257,1266711
	duk_uint8_t needed;         /* how many more bytes we need */needed34258,1266777
	duk_uint8_t bom_handled;    /* BOM seen or no longer expected */bom_handled34259,1266840
	duk_uint8_t fatal;fatal34262,1266936
	duk_uint8_t ignore_bom;ignore_bom34263,1266956
} duk__decode_context;duk__decode_context34264,1266981
#define DUK__CP_CONTINUE DUK__CP_CONTINUE34269,1267139
#define DUK__CP_ERROR DUK__CP_ERROR34270,1267224
#define DUK__CP_RETRY DUK__CP_RETRY34271,1267278
DUK_LOCAL duk_uint8_t *duk__utf8_emit_repl(duk_uint8_t *ptr) {duk__utf8_emit_repl34278,1267474
DUK_LOCAL void duk__utf8_decode_init(duk__decode_context *dec_ctx) {duk__utf8_decode_init34285,1267601
DUK_LOCAL duk_codepoint_t duk__utf8_decode_next(duk__decode_context *dec_ctx, duk_uint8_t x) {duk__utf8_decode_next34296,1267905
DUK_LOCAL void duk__utf8_encode_char(void *udata, duk_codepoint_t codepoint) {duk__utf8_encode_char34381,1270540
DUK_LOCAL duk_ret_t duk__decode_helper(duk_hthread *thr, duk__decode_context *dec_ctx) {duk__decode_helper34440,1272385
DUK_INTERNAL duk_ret_t duk_bi_textencoder_constructor(duk_hthread *thr) {duk_bi_textencoder_constructor34577,1277022
DUK_INTERNAL duk_ret_t duk_bi_textencoder_prototype_encoding_getter(duk_hthread *thr) {duk_bi_textencoder_prototype_encoding_getter34586,1277256
DUK_INTERNAL duk_ret_t duk_bi_textencoder_prototype_encode(duk_hthread *thr) {duk_bi_textencoder_prototype_encode34591,1277391
DUK_INTERNAL duk_ret_t duk_bi_textdecoder_constructor(duk_hthread *thr) {duk_bi_textdecoder_constructor34674,1280388
DUK_LOCAL duk__decode_context *duk__get_textdecoder_context(duk_hthread *thr) {duk__get_textdecoder_context34709,1281475
DUK_INTERNAL duk_ret_t duk_bi_textdecoder_prototype_shared_getter(duk_hthread *thr) {duk_bi_textdecoder_prototype_shared_getter34718,1281791
DUK_INTERNAL duk_ret_t duk_bi_textdecoder_prototype_decode(duk_hthread *thr) {duk_bi_textdecoder_prototype_decode34742,1282363
DUK_INTERNAL duk_ret_t duk_textdecoder_decode_utf8_nodejs(duk_hthread *thr) {duk_textdecoder_decode_utf8_nodejs34759,1282940
DUK_INTERNAL duk_ret_t duk_bi_error_constructor_shared(duk_hthread *thr) {duk_bi_error_constructor_shared34780,1283453
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_to_string(duk_hthread *thr) {duk_bi_error_prototype_to_string34819,1284840
#define DUK__OUTPUT_TYPE_TRACEBACK DUK__OUTPUT_TYPE_TRACEBACK34884,1286741
#define DUK__OUTPUT_TYPE_FILENAME DUK__OUTPUT_TYPE_FILENAME34885,1286783
#define DUK__OUTPUT_TYPE_LINENUMBER DUK__OUTPUT_TYPE_LINENUMBER34886,1286822
DUK_LOCAL duk_ret_t duk__error_getter_helper(duk_hthread *thr, duk_small_int_t output_type) {duk__error_getter_helper34888,1286862
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_stack_getter(duk_hthread *thr) {duk_bi_error_prototype_stack_getter35079,1294365
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_filename_getter(duk_hthread *thr) {duk_bi_error_prototype_filename_getter35083,1294514
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_linenumber_getter(duk_hthread *thr) {duk_bi_error_prototype_linenumber_getter35087,1294665
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_stack_getter(duk_hthread *thr) {duk_bi_error_prototype_stack_getter35105,1295396
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_filename_getter(duk_hthread *thr) {duk_bi_error_prototype_filename_getter35112,1295639
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_linenumber_getter(duk_hthread *thr) {duk_bi_error_prototype_linenumber_getter35117,1295752
DUK_LOCAL duk_ret_t duk__error_setter_helper(duk_hthread *thr, duk_small_uint_t stridx_key) {duk__error_setter_helper35124,1295901
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_stack_setter(duk_hthread *thr) {duk_bi_error_prototype_stack_setter35150,1296930
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_filename_setter(duk_hthread *thr) {duk_bi_error_prototype_filename_setter35154,1297069
DUK_INTERNAL duk_ret_t duk_bi_error_prototype_linenumber_setter(duk_hthread *thr) {duk_bi_error_prototype_linenumber_setter35158,1297215
DUK_INTERNAL duk_ret_t duk_bi_function_prototype(duk_hthread *thr) {duk_bi_function_prototype35174,1297654
DUK_INTERNAL duk_ret_t duk_bi_function_constructor(duk_hthread *thr) {duk_bi_function_constructor35181,1297854
DUK_INTERNAL duk_ret_t duk_bi_function_prototype_to_string(duk_hthread *thr) {duk_bi_function_prototype_to_string35264,1300463
DUK_INTERNAL duk_ret_t duk_bi_function_prototype_call(duk_hthread *thr) {duk_bi_function_prototype_call35335,1302791
DUK_INTERNAL duk_ret_t duk_bi_function_prototype_apply(duk_hthread *thr) {duk_bi_function_prototype_apply35343,1303034
DUK_INTERNAL duk_ret_t duk_bi_reflect_apply(duk_hthread *thr) {duk_bi_reflect_apply35349,1303201
DUK_INTERNAL duk_ret_t duk_bi_reflect_construct(duk_hthread *thr) {duk_bi_reflect_construct35355,1303357
DUK_INTERNAL duk_ret_t duk_bi_function_prototype_bind(duk_hthread *thr) {duk_bi_function_prototype_bind35367,1303821
DUK_INTERNAL duk_ret_t duk_bi_native_function_length(duk_hthread *thr) {duk_bi_native_function_length35549,1310425
DUK_INTERNAL duk_ret_t duk_bi_native_function_name(duk_hthread *thr) {duk_bi_native_function_name35582,1311271
DUK_INTERNAL duk_ret_t duk_bi_function_prototype_hasinstance(duk_hthread *thr) {duk_bi_function_prototype_hasinstance35611,1311906
#define DUK__MKBITS(DUK__MKBITS35639,1312681
#define DUK__CHECK_BITMASK(DUK__CHECK_BITMASK35643,1312850
DUK_LOCAL const duk_uint8_t duk__encode_uriunescaped_table[16] = {duk__encode_uriunescaped_table35646,1312995
DUK_LOCAL const duk_uint8_t duk__encode_uricomponent_unescaped_table[16] = {duk__encode_uricomponent_unescaped_table35658,1313844
DUK_LOCAL const duk_uint8_t duk__decode_uri_reserved_table[16] = {duk__decode_uri_reserved_table35670,1314708
DUK_LOCAL const duk_uint8_t duk__decode_uri_component_reserved_table[16] = {duk__decode_uri_component_reserved_table35682,1315550
DUK_LOCAL const duk_uint8_t duk__escape_unescaped_table[16] = {duk__escape_unescaped_table35695,1316432
typedef struct {__anonffb0efc10f0835707,1317268
	duk_hthread *thr;thr35708,1317285
	duk_hstring *h_str;h_str35709,1317304
	duk_bufwriter_ctx bw;bw35710,1317325
	const duk_uint8_t *p;p35711,1317348
	const duk_uint8_t *p_start;p_start35712,1317371
	const duk_uint8_t *p_end;p_end35713,1317400
} duk__transform_context;duk__transform_context35714,1317427
typedef void (*duk__transform_callback)(duk__transform_context *tfm_ctx, const void *udata, duk_duk__transform_callback35716,1317454
DUK_LOCAL duk_small_int_t duk__decode_hex_escape(const duk_uint8_t *p, duk_small_int_t n) {duk__decode_hex_escape35719,1317614
DUK_LOCAL int duk__transform_helper(duk_hthread *thr, duk__transform_callback callback, const voduk__transform_helper35736,1317924
DUK_LOCAL void duk__transform_callback_encode_uri(duk__transform_context *tfm_ctx, const void *uduk__transform_callback_encode_uri35763,1318835
DUK_LOCAL void duk__transform_callback_decode_uri(duk__transform_context *tfm_ctx, const void *uduk__transform_callback_decode_uri35826,1321046
DUK_LOCAL void duk__transform_callback_escape(duk__transform_context *tfm_ctx, const void *udataduk__transform_callback_escape35966,1325197
DUK_LOCAL void duk__transform_callback_unescape(duk__transform_context *tfm_ctx, const void *udaduk__transform_callback_unescape36006,1326725
DUK_INTERNAL duk_ret_t duk_bi_global_object_eval(duk_hthread *thr) {duk_bi_global_object_eval36041,1327858
DUK_INTERNAL duk_ret_t duk_bi_global_object_parse_int(duk_hthread *thr) {duk_bi_global_object_parse_int36226,1334293
DUK_INTERNAL duk_ret_t duk_bi_global_object_parse_float(duk_hthread *thr) {duk_bi_global_object_parse_float36274,1335626
DUK_INTERNAL duk_ret_t duk_bi_global_object_is_nan(duk_hthread *thr) {duk_bi_global_object_is_nan36302,1336406
DUK_INTERNAL duk_ret_t duk_bi_global_object_is_finite(duk_hthread *thr) {duk_bi_global_object_is_finite36310,1336656
DUK_INTERNAL duk_ret_t duk_bi_global_object_decode_uri(duk_hthread *thr) {duk_bi_global_object_decode_uri36322,1336937
DUK_INTERNAL duk_ret_t duk_bi_global_object_decode_uri_component(duk_hthread *thr) {duk_bi_global_object_decode_uri_component36326,1337134
DUK_INTERNAL duk_ret_t duk_bi_global_object_encode_uri(duk_hthread *thr) {duk_bi_global_object_encode_uri36330,1337351
DUK_INTERNAL duk_ret_t duk_bi_global_object_encode_uri_component(duk_hthread *thr) {duk_bi_global_object_encode_uri_component36334,1337548
DUK_INTERNAL duk_ret_t duk_bi_global_object_escape(duk_hthread *thr) {duk_bi_global_object_escape36339,1337796
DUK_INTERNAL duk_ret_t duk_bi_global_object_unescape(duk_hthread *thr) {duk_bi_global_object_unescape36343,1337959
#define DUK__JSON_DECSTR_BUFSIZE DUK__JSON_DECSTR_BUFSIZE36377,1339034
#define DUK__JSON_DECSTR_CHUNKSIZE DUK__JSON_DECSTR_CHUNKSIZE36378,1339071
#define DUK__JSON_ENCSTR_CHUNKSIZE DUK__JSON_ENCSTR_CHUNKSIZE36379,1339109
#define DUK__JSON_STRINGIFY_BUFSIZE DUK__JSON_STRINGIFY_BUFSIZE36380,1339147
#define DUK__JSON_MAX_ESC_LEN DUK__JSON_MAX_ESC_LEN36381,1339187
DUK_LOCAL const duk_uint8_t duk__json_quotestr_lookup[256] = {duk__json_quotestr_lookup36444,1342691
DUK_LOCAL const duk_uint8_t duk__json_quotestr_esc[14] = {duk__json_quotestr_esc36469,1344475
DUK_LOCAL const duk_uint8_t duk__json_decstr_lookup[256] = {duk__json_decstr_lookup36478,1344821
DUK_LOCAL const duk_uint8_t duk__json_eatwhite_lookup[256] = {duk__json_eatwhite_lookup36502,1346569
DUK_LOCAL const duk_uint8_t duk__json_decnumber_lookup[256] = {duk__json_decnumber_lookup36526,1348330
DUK_LOCAL void duk__dec_syntax_error(duk_json_dec_ctx *js_ctx) {duk__dec_syntax_error36562,1350548
DUK_LOCAL void duk__dec_eat_white(duk_json_dec_ctx *js_ctx) {duk__dec_eat_white36572,1350924
DUK_LOCAL duk_uint8_t duk__dec_peek(duk_json_dec_ctx *js_ctx) {duk__dec_peek36603,1351689
DUK_LOCAL duk_uint8_t duk__dec_get(duk_json_dec_ctx *js_ctx) {duk__dec_get36609,1351824
DUK_LOCAL duk_uint8_t duk__dec_get_nonwhite(duk_json_dec_ctx *js_ctx) {duk__dec_get_nonwhite36614,1351953
DUK_LOCAL duk_uint_fast32_t duk__dec_decode_hex_escape(duk_json_dec_ctx *js_ctx, duk_small_uint_duk__dec_decode_hex_escape36620,1352153
DUK_LOCAL void duk__dec_req_stridx(duk_json_dec_ctx *js_ctx, duk_small_uint_t stridx) {duk__dec_req_stridx36653,1353034
DUK_LOCAL duk_small_int_t duk__dec_string_escape(duk_json_dec_ctx *js_ctx, duk_uint8_t **ext_p) duk__dec_string_escape36690,1353853
DUK_LOCAL void duk__dec_string(duk_json_dec_ctx *js_ctx) {duk__dec_string36739,1355060
DUK_LOCAL void duk__dec_plain_string(duk_json_dec_ctx *js_ctx) {duk__dec_plain_string36848,1357859
DUK_LOCAL void duk__dec_pointer(duk_json_dec_ctx *js_ctx) {duk__dec_pointer36890,1359077
DUK_LOCAL void duk__dec_buffer(duk_json_dec_ctx *js_ctx) {duk__dec_buffer36943,1360417
DUK_LOCAL void duk__dec_number(duk_json_dec_ctx *js_ctx) {duk__dec_number37001,1361922
DUK_LOCAL void duk__dec_objarr_entry(duk_json_dec_ctx *js_ctx) {duk__dec_objarr_entry37066,1363965
DUK_LOCAL void duk__dec_objarr_exit(duk_json_dec_ctx *js_ctx) {duk__dec_objarr_exit37081,1364441
DUK_LOCAL void duk__dec_object(duk_json_dec_ctx *js_ctx) {duk__dec_object37089,1364669
DUK_LOCAL void duk__dec_array(duk_json_dec_ctx *js_ctx) {duk__dec_array37172,1366496
DUK_LOCAL void duk__dec_value(duk_json_dec_ctx *js_ctx) {duk__dec_value37240,1368003
DUK_LOCAL void duk__dec_reviver_walk(duk_json_dec_ctx *js_ctx) {duk__dec_reviver_walk37312,1370329
#define DUK__EMIT_1(DUK__EMIT_137403,1373711
#define DUK__EMIT_2(DUK__EMIT_237404,1373798
#define DUK__EMIT_HSTR(DUK__EMIT_HSTR37405,1373912
#define DUK__EMIT_CSTR(DUK__EMIT_CSTR37407,1374060
#define DUK__EMIT_STRIDX(DUK__EMIT_STRIDX37409,1374140
#define DUK__UNEMIT_1(DUK__UNEMIT_137410,1374212
DUK_LOCAL void duk__emit_1(duk_json_enc_ctx *js_ctx, duk_uint_fast8_t ch) {duk__emit_137412,1374277
DUK_LOCAL void duk__emit_2(duk_json_enc_ctx *js_ctx, duk_uint_fast8_t ch1, duk_uint_fast8_t ch2)duk__emit_237416,1374411
DUK_LOCAL void duk__emit_hstring(duk_json_enc_ctx *js_ctx, duk_hstring *h) {duk__emit_hstring37420,1374576
DUK_LOCAL void duk__emit_cstring(duk_json_enc_ctx *js_ctx, const char *str) {duk__emit_cstring37425,1374790
DUK_LOCAL void duk__emit_stridx(duk_json_enc_ctx *js_ctx, duk_small_uint_t stridx) {duk__emit_stridx37430,1374939
DUK_LOCAL void duk__unemit_1(duk_json_enc_ctx *js_ctx) {duk__unemit_137440,1375213
#define DUK__MKESC(DUK__MKESC37445,1375381
DUK_LOCAL duk_uint8_t *duk__emit_esc_auto_fast(duk_json_enc_ctx *js_ctx, duk_uint_fast32_t cp, dduk__emit_esc_auto_fast37450,1375539
DUK_LOCAL void duk__enc_key_autoquote(duk_json_enc_ctx *js_ctx, duk_hstring *k) {duk__enc_key_autoquote37504,1377012
DUK_LOCAL void duk__enc_quote_string(duk_json_enc_ctx *js_ctx, duk_hstring *h_str) {duk__enc_quote_string37555,1378390
DUK_LOCAL void duk__enc_double(duk_json_enc_ctx *js_ctx) {duk__enc_double37692,1382751
DUK_LOCAL void duk__enc_fastint_tval(duk_json_enc_ctx *js_ctx, duk_tval *tv) {duk__enc_fastint_tval37756,1384583
DUK_LOCAL duk_uint8_t *duk__enc_buffer_data_hex(const duk_uint8_t *src, duk_size_t src_len, duk_duk__enc_buffer_data_hex37781,1385489
DUK_LOCAL duk_uint8_t *duk__enc_buffer_data_hex(const duk_uint8_t *src, duk_size_t src_len, duk_duk__enc_buffer_data_hex37839,1387293
DUK_LOCAL void duk__enc_buffer_data(duk_json_enc_ctx *js_ctx, duk_uint8_t *buf_data, duk_size_t duk__enc_buffer_data37858,1387691
DUK_LOCAL void duk__enc_buffer_jx_jc(duk_json_enc_ctx *js_ctx, duk_hbuffer *h) {duk__enc_buffer_jx_jc37912,1389243
DUK_LOCAL void duk__enc_buffer_json_fastpath(duk_json_enc_ctx *js_ctx, duk_hbuffer *h) {duk__enc_buffer_json_fastpath37920,1389588
DUK_LOCAL void duk__enc_pointer(duk_json_enc_ctx *js_ctx, void *ptr) {duk__enc_pointer37967,1391257
DUK_LOCAL void duk__enc_bufobj(duk_json_enc_ctx *js_ctx, duk_hbufobj *h_bufobj) {duk__enc_bufobj38005,1392335
DUK_LOCAL void duk__enc_newline_indent(duk_json_enc_ctx *js_ctx, duk_uint_t depth) {duk__enc_newline_indent38024,1393067
DUK_LOCAL void duk__enc_newline_indent(duk_json_enc_ctx *js_ctx, duk_uint_t depth) {duk__enc_newline_indent38034,1393401
DUK_LOCAL void duk__enc_objarr_entry(duk_json_enc_ctx *js_ctx, duk_idx_t *entry_top) {duk__enc_objarr_entry38087,1395112
DUK_LOCAL void duk__enc_objarr_exit(duk_json_enc_ctx *js_ctx, duk_idx_t *entry_top) {duk__enc_objarr_exit38141,1396895
DUK_LOCAL void duk__enc_object(duk_json_enc_ctx *js_ctx) {duk__enc_object38173,1397911
DUK_LOCAL void duk__enc_array(duk_json_enc_ctx *js_ctx) {duk__enc_array38269,1400951
DUK_LOCAL duk_bool_t duk__enc_value(duk_json_enc_ctx *js_ctx, duk_idx_t idx_holder) {duk__enc_value38335,1402775
DUK_LOCAL duk_bool_t duk__enc_allow_into_proplist(duk_tval *tv) {duk__enc_allow_into_proplist38601,1412022
DUK_LOCAL duk_bool_t duk__json_stringify_fast_value(duk_json_enc_ctx *js_ctx, duk_tval *tv) {duk__json_stringify_fast_value38641,1413135
DUK_LOCAL duk_ret_t duk__json_stringify_fast(duk_hthread *thr, void *udata) {duk__json_stringify_fast39121,1428932
void duk_bi_json_parse_helper(duk_hthread *thr,duk_bi_json_parse_helper39146,1429538
void duk_bi_json_stringify_helper(duk_hthread *thr,duk_bi_json_stringify_helper39248,1433397
DUK_INTERNAL duk_ret_t duk_bi_json_object_parse(duk_hthread *thr) {duk_bi_json_object_parse39588,1445739
DUK_INTERNAL duk_ret_t duk_bi_json_object_stringify(duk_hthread *thr) {duk_bi_json_object_stringify39596,1445981
typedef double (*duk__one_arg_func)(double);duk__one_arg_func39640,1447121
typedef double (*duk__two_arg_func)(double, double);duk__two_arg_func39641,1447166
DUK_LOCAL duk_ret_t duk__math_minmax(duk_hthread *thr, duk_double_t initial, duk__two_arg_func mduk__math_minmax39643,1447220
DUK_LOCAL double duk__fmin_fixed(double x, double y) {duk__fmin_fixed39674,1448210
DUK_LOCAL double duk__fmax_fixed(double x, double y) {duk__fmax_fixed39701,1449077
DUK_LOCAL double duk__cbrt(double x) {duk__cbrt39716,1449451
DUK_LOCAL double duk__log2(double x) {duk__log239740,1450091
DUK_LOCAL double duk__log10(double x) {duk__log1039748,1450228
DUK_LOCAL double duk__trunc(double x) {duk__trunc39756,1450369
DUK_LOCAL double duk__round_fixed(double x) {duk__round_fixed39768,1450664
DUK_LOCAL double duk__fabs(double x) {duk__fabs39814,1452137
DUK_LOCAL double duk__acos(double x) {duk__acos39817,1452199
DUK_LOCAL double duk__asin(double x) {duk__asin39820,1452261
DUK_LOCAL double duk__atan(double x) {duk__atan39823,1452323
DUK_LOCAL double duk__ceil(double x) {duk__ceil39826,1452385
DUK_LOCAL double duk__cos(double x) {duk__cos39829,1452447
DUK_LOCAL double duk__exp(double x) {duk__exp39832,1452507
DUK_LOCAL double duk__floor(double x) {duk__floor39835,1452567
DUK_LOCAL double duk__log(double x) {duk__log39838,1452631
DUK_LOCAL double duk__sin(double x) {duk__sin39841,1452691
DUK_LOCAL double duk__sqrt(double x) {duk__sqrt39844,1452751
DUK_LOCAL double duk__tan(double x) {duk__tan39847,1452813
DUK_LOCAL double duk__atan2_fixed(double x, double y) {duk__atan2_fixed39850,1452873
DUK_LOCAL const duk__one_arg_func duk__one_arg_funcs[] = {duk__one_arg_funcs39884,1453951
DUK_LOCAL const duk__two_arg_func duk__two_arg_funcs[] = {duk__two_arg_funcs39929,1454669
DUK_INTERNAL duk_ret_t duk_bi_math_object_onearg_shared(duk_hthread *thr) {duk_bi_math_object_onearg_shared39939,1454864
DUK_INTERNAL duk_ret_t duk_bi_math_object_twoarg_shared(duk_hthread *thr) {duk_bi_math_object_twoarg_shared39952,1455305
DUK_INTERNAL duk_ret_t duk_bi_math_object_max(duk_hthread *thr) {duk_bi_math_object_max39967,1455875
DUK_INTERNAL duk_ret_t duk_bi_math_object_min(duk_hthread *thr) {duk_bi_math_object_min39971,1456014
DUK_INTERNAL duk_ret_t duk_bi_math_object_random(duk_hthread *thr) {duk_bi_math_object_random39975,1456152
DUK_INTERNAL duk_ret_t duk_bi_math_object_hypot(duk_hthread *thr) {duk_bi_math_object_hypot39981,1456331
DUK_INTERNAL duk_ret_t duk_bi_math_object_sign(duk_hthread *thr) {duk_bi_math_object_sign40049,1458073
DUK_INTERNAL duk_ret_t duk_bi_math_object_clz32(duk_hthread *thr) {duk_bi_math_object_clz3240067,1458499
DUK_INTERNAL duk_ret_t duk_bi_math_object_imul(duk_hthread *thr) {duk_bi_math_object_imul40125,1459409
DUK_LOCAL duk_double_t duk__push_this_number_plain(duk_hthread *thr) {duk__push_this_number_plain40151,1459992
DUK_INTERNAL duk_ret_t duk_bi_number_constructor(duk_hthread *thr) {duk_bi_number_constructor40180,1460990
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_value_of(duk_hthread *thr) {duk_bi_number_prototype_value_of40230,1462653
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_to_string(duk_hthread *thr) {duk_bi_number_prototype_to_string40235,1462785
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_to_locale_string(duk_hthread *thr) {duk_bi_number_prototype_to_locale_string40256,1463318
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_to_fixed(duk_hthread *thr) {duk_bi_number_prototype_to_fixed40269,1463707
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_to_exponential(duk_hthread *thr) {duk_bi_number_prototype_to_exponential40305,1464611
DUK_INTERNAL duk_ret_t duk_bi_number_prototype_to_precision(duk_hthread *thr) {duk_bi_number_prototype_to_precision40339,1465510
DUK_INTERNAL duk_ret_t duk_bi_number_check_shared(duk_hthread *thr) {duk_bi_number_check_shared40391,1466756
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_to_string(duk_hthread *thr) {duk_bi_object_prototype_to_string40431,1467585
DUK_INTERNAL duk_ret_t duk_bi_object_constructor(duk_hthread *thr) {duk_bi_object_constructor40440,1467825
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_assign(duk_hthread *thr) {duk_bi_object_constructor_assign40481,1469367
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_is(duk_hthread *thr) {duk_bi_object_constructor_is40515,1470202
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_create(duk_hthread *thr) {duk_bi_object_constructor_create40523,1470406
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_define_properties(duk_hthread *thr) {duk_bi_object_constructor_define_properties40561,1471425
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_seal_freeze_shared(duk_hthread *thr) {duk_bi_object_constructor_seal_freeze_shared40648,1474070
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_is_sealed_frozen_shared(duk_hthread *thr) {duk_bi_object_constructor_is_sealed_frozen_shared40657,1474356
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_to_locale_string(duk_hthread *thr) {duk_bi_object_prototype_to_locale_string40682,1475362
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_value_of(duk_hthread *thr) {duk_bi_object_prototype_value_of40696,1475916
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_is_prototype_of(duk_hthread *thr) {duk_bi_object_prototype_is_prototype_of40704,1476194
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_has_own_property(duk_hthread *thr) {duk_bi_object_prototype_has_own_property40728,1476911
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_property_is_enumerable(duk_hthread *thr) {duk_bi_object_prototype_property_is_enumerable40734,1477158
DUK_INTERNAL duk_ret_t duk_bi_object_getprototype_shared(duk_hthread *thr) {duk_bi_object_getprototype_shared40745,1477696
DUK_INTERNAL duk_ret_t duk_bi_object_setprototype_shared(duk_hthread *thr) {duk_bi_object_setprototype_shared40803,1479263
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_define_property(duk_hthread *thr) {duk_bi_object_constructor_define_property40898,1481871
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_get_own_property_descriptor(duk_hthread *thr) {duk_bi_object_constructor_get_own_property_descriptor40985,1484725
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_is_extensible(duk_hthread *thr) {duk_bi_object_constructor_is_extensible41001,1485184
DUK_LOCAL const duk_small_uint_t duk__object_keys_enum_flags[4] = {duk__object_keys_enum_flags41030,1486092
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_keys_shared(duk_hthread *thr) {duk_bi_object_constructor_keys_shared41054,1486756
DUK_INTERNAL duk_ret_t duk_bi_object_constructor_prevent_extensions(duk_hthread *thr) {duk_bi_object_constructor_prevent_extensions41128,1489221
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_defineaccessor(duk_hthread *thr) {duk_bi_object_prototype_defineaccessor41180,1490502
DUK_INTERNAL duk_ret_t duk_bi_object_prototype_lookupaccessor(duk_hthread *thr) {duk_bi_object_prototype_lookupaccessor41194,1491020
DUK_INTERNAL duk_ret_t duk_bi_performance_now(duk_hthread *thr) {duk_bi_performance_now41237,1492212
DUK_INTERNAL duk_ret_t duk_bi_pointer_constructor(duk_hthread *thr) {duk_bi_pointer_constructor41270,1493136
DUK_INTERNAL duk_ret_t duk_bi_pointer_prototype_tostring_shared(duk_hthread *thr) {duk_bi_pointer_prototype_tostring_shared41303,1494176
DUK_INTERNAL duk_ret_t duk_bi_promise_constructor(duk_hthread *thr) {duk_bi_promise_constructor41344,1495074
DUK_INTERNAL duk_ret_t duk_bi_promise_all(duk_hthread *thr) {duk_bi_promise_all41349,1495215
DUK_INTERNAL duk_ret_t duk_bi_promise_race(duk_hthread *thr) {duk_bi_promise_race41354,1495348
DUK_INTERNAL duk_ret_t duk_bi_promise_reject(duk_hthread *thr) {duk_bi_promise_reject41359,1495482
DUK_INTERNAL duk_ret_t duk_bi_promise_resolve(duk_hthread *thr) {duk_bi_promise_resolve41364,1495618
DUK_INTERNAL duk_ret_t duk_bi_promise_catch(duk_hthread *thr) {duk_bi_promise_catch41369,1495755
DUK_INTERNAL duk_ret_t duk_bi_promise_then(duk_hthread *thr) {duk_bi_promise_then41374,1495890
DUK_INTERNAL void duk_proxy_ownkeys_postprocess(duk_hthread *thr, duk_hobject *h_proxy_target, dduk_proxy_ownkeys_postprocess41392,1496404
DUK_INTERNAL duk_ret_t duk_bi_proxy_constructor(duk_hthread *thr) {duk_bi_proxy_constructor41469,1498954
DUK_INTERNAL duk_ret_t duk_bi_reflect_object_delete_property(duk_hthread *thr) {duk_bi_reflect_object_delete_property41489,1499602
DUK_INTERNAL duk_ret_t duk_bi_reflect_object_get(duk_hthread *thr) {duk_bi_reflect_object_get41508,1500070
DUK_INTERNAL duk_ret_t duk_bi_reflect_object_has(duk_hthread *thr) {duk_bi_reflect_object_has41531,1500736
DUK_INTERNAL duk_ret_t duk_bi_reflect_object_set(duk_hthread *thr) {duk_bi_reflect_object_set41550,1501174
DUK_LOCAL void duk__get_this_regexp(duk_hthread *thr) {duk__get_this_regexp41586,1502111
DUK_INTERNAL duk_ret_t duk_bi_regexp_constructor(duk_hthread *thr) {duk_bi_regexp_constructor41597,1502422
DUK_INTERNAL duk_ret_t duk_bi_regexp_prototype_exec(duk_hthread *thr) {duk_bi_regexp_prototype_exec41668,1504282
DUK_INTERNAL duk_ret_t duk_bi_regexp_prototype_test(duk_hthread *thr) {duk_bi_regexp_prototype_test41680,1504466
DUK_INTERNAL duk_ret_t duk_bi_regexp_prototype_tostring(duk_hthread *thr) {duk_bi_regexp_prototype_tostring41695,1504784
DUK_INTERNAL duk_ret_t duk_bi_regexp_prototype_flags(duk_hthread *thr) {duk_bi_regexp_prototype_flags41707,1505153
DUK_INTERNAL duk_ret_t duk_bi_regexp_prototype_shared_getter(duk_hthread *thr) {duk_bi_regexp_prototype_shared_getter41736,1506091
DUK_LOCAL duk_hstring *duk__str_tostring_notregexp(duk_hthread *thr, duk_idx_t idx) {duk__str_tostring_notregexp41830,1508744
DUK_LOCAL duk_int_t duk__str_search_shared(duk_hthread *thr, duk_hstring *h_this, duk_hstring *hduk__str_search_shared41843,1509057
DUK_INTERNAL duk_ret_t duk_bi_string_constructor(duk_hthread *thr) {duk_bi_string_constructor41921,1511231
DUK_LOCAL duk_ret_t duk__construct_from_codepoints(duk_hthread *thr, duk_bool_t nonbmp) {duk__construct_from_codepoints41963,1512699
DUK_INTERNAL duk_ret_t duk_bi_string_constructor_from_char_code(duk_hthread *thr) {duk_bi_string_constructor_from_char_code42021,1514654
DUK_INTERNAL duk_ret_t duk_bi_string_constructor_from_code_point(duk_hthread *thr) {duk_bi_string_constructor_from_code_point42026,1514825
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_to_string(duk_hthread *thr) {duk_bi_string_prototype_to_string42035,1515013
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_char_at(duk_hthread *thr) {duk_bi_string_prototype_char_at42070,1515834
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_char_code_at(duk_hthread *thr) {duk_bi_string_prototype_char_code_at42106,1516961
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_substring(duk_hthread *thr) {duk_bi_string_prototype_substring42155,1518262
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_substr(duk_hthread *thr) {duk_bi_string_prototype_substr42188,1519055
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_slice(duk_hthread *thr) {duk_bi_string_prototype_slice42232,1520427
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_caseconv_shared(duk_hthread *thr) {duk_bi_string_prototype_caseconv_shared42272,1521282
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_indexof_shared(duk_hthread *thr) {duk_bi_string_prototype_indexof_shared42284,1521588
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_replace(duk_hthread *thr) {duk_bi_string_prototype_replace42329,1523008
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_split(duk_hthread *thr) {duk_bi_string_prototype_split42708,1533913
DUK_LOCAL void duk__to_regexp_helper(duk_hthread *thr, duk_idx_t idx, duk_bool_t force_new) {duk__to_regexp_helper42987,1542191
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_search(duk_hthread *thr) {duk_bi_string_prototype_search43013,1542783
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_match(duk_hthread *thr) {duk_bi_string_prototype_match43052,1543941
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_concat(duk_hthread *thr) {duk_bi_string_prototype_concat43124,1545574
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_trim(duk_hthread *thr) {duk_bi_string_prototype_trim43132,1545874
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_repeat(duk_hthread *thr) {duk_bi_string_prototype_repeat43141,1546102
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_locale_compare(duk_hthread *thr) {duk_bi_string_prototype_locale_compare43240,1549291
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_startswith_endswith(duk_hthread *thr) {duk_bi_string_prototype_startswith_endswith43298,1550872
DUK_INTERNAL duk_ret_t duk_bi_string_prototype_includes(duk_hthread *thr) {duk_bi_string_prototype_includes43363,1552781
DUK_INTERNAL duk_ret_t duk_bi_symbol_constructor_shared(duk_hthread *thr) {duk_bi_symbol_constructor_shared43398,1553557
DUK_LOCAL duk_hstring *duk__auto_unbox_symbol(duk_hthread *thr, duk_tval *tv_arg) {duk__auto_unbox_symbol43459,1555522
DUK_INTERNAL duk_ret_t duk_bi_symbol_tostring_shared(duk_hthread *thr) {duk_bi_symbol_tostring_shared43497,1556403
DUK_INTERNAL duk_ret_t duk_bi_symbol_key_for(duk_hthread *thr) {duk_bi_symbol_key_for43515,1556806
DUK_INTERNAL duk_ret_t duk_bi_symbol_toprimitive(duk_hthread *thr) {duk_bi_symbol_toprimitive43544,1557701
DUK_INTERNAL duk_ret_t duk_bi_thread_constructor(duk_hthread *thr) {duk_bi_thread_constructor43568,1558161
DUK_INTERNAL duk_ret_t duk_bi_thread_resume(duk_hthread *ctx) {duk_bi_thread_resume43610,1559338
DUK_INTERNAL duk_ret_t duk_bi_thread_yield(duk_hthread *thr) {duk_bi_thread_yield43776,1565271
DUK_INTERNAL duk_ret_t duk_bi_thread_current(duk_hthread *thr) {duk_bi_thread_current43878,1568842
DUK_INTERNAL duk_ret_t duk_bi_type_error_thrower(duk_hthread *thr) {duk_bi_type_error_thrower43890,1569087
DUK_INTERNAL void duk_fb_put_bytes(duk_fixedbuffer *fb, const duk_uint8_t *buffer, duk_size_t leduk_fb_put_bytes43903,1569422
DUK_INTERNAL void duk_fb_put_byte(duk_fixedbuffer *fb, duk_uint8_t x) {duk_fb_put_byte43918,1569847
DUK_INTERNAL void duk_fb_put_cstring(duk_fixedbuffer *fb, const char *x) {duk_fb_put_cstring43922,1569974
DUK_INTERNAL void duk_fb_sprintf(duk_fixedbuffer *fb, const char *fmt, ...) {duk_fb_sprintf43926,1570128
DUK_INTERNAL void duk_fb_put_funcptr(duk_fixedbuffer *fb, duk_uint8_t *fptr, duk_size_t fptr_sizduk_fb_put_funcptr43951,1570793
DUK_INTERNAL duk_bool_t duk_fb_is_full(duk_fixedbuffer *fb) {duk_fb_is_full43958,1571040
#define DUK__ALLOWED_STANDARD_SPECIFIERS DUK__ALLOWED_STANDARD_SPECIFIERS44029,1573867
#define DUK__MAX_FORMAT_TAG_LENGTH DUK__MAX_FORMAT_TAG_LENGTH44032,1573994
#define DUK__DEEP_DEPTH_LIMIT DUK__DEEP_DEPTH_LIMIT44035,1574095
#define DUK__LOOP_STACK_DEPTH DUK__LOOP_STACK_DEPTH44038,1574185
DUK_LOCAL const char * const duk__bc_optab[256] = {duk__bc_optab44041,1574280
typedef struct duk__dprint_state duk__dprint_state;duk__dprint_state44083,1577287
struct duk__dprint_state {duk__dprint_state44084,1577339
	duk_fixedbuffer *fb;fb44085,1577366
	duk_hobject *loop_stack[DUK__LOOP_STACK_DEPTH];loop_stack44090,1577524
	duk_int_t loop_stack_index;loop_stack_index44091,1577573
	duk_int_t loop_stack_limit;loop_stack_limit44092,1577602
	duk_int_t depth;depth44094,1577632
	duk_int_t depth_limit;depth_limit44095,1577650
	duk_bool_t pointer;pointer44097,1577675
	duk_bool_t heavy;heavy44098,1577696
	duk_bool_t binary;binary44099,1577715
	duk_bool_t follow_proto;follow_proto44100,1577735
	duk_bool_t internal;internal44101,1577761
	duk_bool_t hexdump;hexdump44102,1577783
DUK_LOCAL void duk__print_shared_heaphdr(duk__dprint_state *st, duk_heaphdr *h) {duk__print_shared_heaphdr44115,1578496
DUK_LOCAL void duk__print_shared_heaphdr_string(duk__dprint_state *st, duk_heaphdr_string *h) {duk__print_shared_heaphdr_string44163,1580373
DUK_LOCAL void duk__print_hstring(duk__dprint_state *st, duk_hstring *h, duk_bool_t quotes) {duk__print_hstring44207,1582191
#define DUK__COMMA(DUK__COMMA44267,1583792
DUK_LOCAL void duk__print_hobject(duk__dprint_state *st, duk_hobject *h) {duk__print_hobject44275,1583942
DUK_LOCAL void duk__print_hbuffer(duk__dprint_state *st, duk_hbuffer *h) {duk__print_hbuffer44579,1595415
DUK_LOCAL void duk__print_heaphdr(duk__dprint_state *st, duk_heaphdr *h) {duk__print_heaphdr44626,1596720
DUK_LOCAL void duk__print_tval(duk__dprint_state *st, duk_tval *tv) {duk__print_tval44654,1597302
DUK_LOCAL void duk__print_instr(duk__dprint_state *st, duk_instr_t ins) {duk__print_instr44748,1599600
DUK_LOCAL void duk__print_opcode(duk__dprint_state *st, duk_small_int_t opcode) {duk__print_opcode44773,1600510
DUK_LOCAL void duk__print_catcher(duk__dprint_state *st, duk_catcher *cat) {duk__print_catcher44783,1600810
DUK_LOCAL void duk__print_activation(duk__dprint_state *st, duk_activation *act) {duk__print_activation44802,1601302
DUK_INTERNAL duk_int_t duk_debug_vsnprintf(char *str, duk_size_t size, const char *format, va_liduk_debug_vsnprintf44824,1602156
DUK_INTERNAL void duk_debug_format_funcptr(char *buf, duk_size_t buf_size, duk_uint8_t *fptr, duduk_debug_format_funcptr45031,1608598
#define DUK__DBG_TPORT_ENTER(DUK__DBG_TPORT_ENTER45078,1609677
#define DUK__DBG_TPORT_EXIT(DUK__DBG_TPORT_EXIT45082,1609815
#define DUK__DBG_TPORT_ENTER(DUK__DBG_TPORT_ENTER45087,1609958
#define DUK__DBG_TPORT_EXIT(DUK__DBG_TPORT_EXIT45088,1610005
typedef union {__anonffb0efc1100a45095,1610086
	void *p;p45096,1610102
	duk_uint_t b[1];b45097,1610112
} duk__ptr_union;duk__ptr_union45102,1610297
#define DUK__SET_CONN_BROKEN(DUK__SET_CONN_BROKEN45108,1610344
DUK_LOCAL void duk__debug_do_detach1(duk_heap *heap, duk_int_t reason) {duk__debug_do_detach145113,1610498
DUK_LOCAL void duk__debug_do_detach2(duk_heap *heap) {duk__debug_do_detach245170,1612454
DUK_INTERNAL void duk_debug_do_detach(duk_heap *heap) {duk_debug_do_detach45200,1613176
DUK_LOCAL void duk__debug_null_most_callbacks(duk_hthread *thr) {duk__debug_null_most_callbacks45210,1613581
DUK_LOCAL void duk__debug_set_pause_state(duk_hthread *thr, duk_heap *heap, duk_small_uint_t pauduk__debug_set_pause_state45230,1614118
DUK_INTERNAL duk_bool_t duk_debug_read_peek(duk_hthread *thr) {duk_debug_read_peek45258,1615102
DUK_INTERNAL void duk_debug_read_flush(duk_hthread *thr) {duk_debug_read_flush45281,1615651
DUK_INTERNAL void duk_debug_write_flush(duk_hthread *thr) {duk_debug_write_flush45302,1616126
DUK_INTERNAL void duk_debug_skip_bytes(duk_hthread *thr, duk_size_t length) {duk_debug_skip_bytes45328,1616669
DUK_INTERNAL void duk_debug_skip_byte(duk_hthread *thr) {duk_debug_skip_byte45341,1616961
DUK_INTERNAL uint8_t duk_debug_peek_byte(duk_hthread *thr) {duk_debug_peek_byte45352,1617169
DUK_INTERNAL void duk_debug_read_bytes(duk_hthread *thr, duk_uint8_t *data, duk_size_t length) {duk_debug_read_bytes45367,1617563
DUK_INTERNAL duk_uint8_t duk_debug_read_byte(duk_hthread *thr) {duk_debug_read_byte45417,1618800
DUK_LOCAL duk_uint32_t duk__debug_read_uint32_raw(duk_hthread *thr) {duk__debug_read_uint32_raw45425,1618998
DUK_LOCAL duk_int32_t duk__debug_read_int32_raw(duk_hthread *thr) {duk__debug_read_int32_raw45437,1619306
DUK_LOCAL duk_uint16_t duk__debug_read_uint16_raw(duk_hthread *thr) {duk__debug_read_uint16_raw45441,1619432
DUK_INTERNAL duk_int32_t duk_debug_read_int(duk_hthread *thr) {duk_debug_read_int45451,1619660
DUK_LOCAL duk_hstring *duk__debug_read_hstring_raw(duk_hthread *thr, duk_uint32_t len) {duk__debug_read_hstring_raw45472,1620192
DUK_INTERNAL duk_hstring *duk_debug_read_hstring(duk_hthread *thr) {duk_debug_read_hstring45489,1620777
DUK_LOCAL duk_hbuffer *duk__debug_read_hbuffer_raw(duk_hthread *thr, duk_uint32_t len) {duk__debug_read_hbuffer_raw45516,1621530
DUK_LOCAL void *duk__debug_read_pointer_raw(duk_hthread *thr) {duk__debug_read_pointer_raw45526,1621844
DUK_LOCAL duk_double_t duk__debug_read_double_raw(duk_hthread *thr) {duk__debug_read_double_raw45548,1622365
DUK_INTERNAL duk_heaphdr *duk_debug_read_any_ptr(duk_hthread *thr) {duk_debug_read_any_ptr45577,1623003
DUK_INTERNAL duk_tval *duk_debug_read_tval(duk_hthread *thr) {duk_debug_read_tval45606,1623663
DUK_INTERNAL void duk_debug_write_bytes(duk_hthread *thr, const duk_uint8_t *data, duk_size_t leduk_debug_write_bytes45725,1626215
DUK_INTERNAL void duk_debug_write_byte(duk_hthread *thr, duk_uint8_t x) {duk_debug_write_byte45773,1627423
DUK_INTERNAL void duk_debug_write_unused(duk_hthread *thr) {duk_debug_write_unused45777,1627558
DUK_INTERNAL void duk_debug_write_undefined(duk_hthread *thr) {duk_debug_write_undefined45781,1627669
DUK_INTERNAL void duk_debug_write_null(duk_hthread *thr) {duk_debug_write_null45786,1627824
DUK_INTERNAL void duk_debug_write_boolean(duk_hthread *thr, duk_uint_t val) {duk_debug_write_boolean45791,1627938
DUK_INTERNAL void duk_debug_write_int(duk_hthread *thr, duk_int32_t x) {duk_debug_write_int45796,1628124
DUK_INTERNAL void duk_debug_write_uint(duk_hthread *thr, duk_uint32_t x) {duk_debug_write_uint45822,1628837
DUK_INTERNAL void duk_debug_write_strbuf(duk_hthread *thr, const char *data, duk_size_t length, duk_debug_write_strbuf45837,1629477
DUK_INTERNAL void duk_debug_write_string(duk_hthread *thr, const char *data, duk_size_t length) duk_debug_write_string45866,1630433
DUK_INTERNAL void duk_debug_write_cstring(duk_hthread *thr, const char *data) {duk_debug_write_cstring45870,1630595
DUK_INTERNAL void duk_debug_write_hstring(duk_hthread *thr, duk_hstring *h) {duk_debug_write_hstring45878,1630818
DUK_LOCAL void duk__debug_write_hstring_safe_top(duk_hthread *thr) {duk__debug_write_hstring_safe_top45887,1631182
DUK_INTERNAL void duk_debug_write_buffer(duk_hthread *thr, const char *data, duk_size_t length) duk_debug_write_buffer45891,1631315
DUK_INTERNAL void duk_debug_write_hbuffer(duk_hthread *thr, duk_hbuffer *h) {duk_debug_write_hbuffer45895,1631477
DUK_LOCAL void duk__debug_write_pointer_raw(duk_hthread *thr, void *ptr, duk_uint8_t ibyte) {duk__debug_write_pointer_raw45903,1631795
DUK_INTERNAL void duk_debug_write_pointer(duk_hthread *thr, void *ptr) {duk_debug_write_pointer45921,1632311
DUK_INTERNAL void duk_debug_write_heapptr(duk_hthread *thr, duk_heaphdr *h) {duk_debug_write_heapptr45926,1632524
DUK_INTERNAL void duk_debug_write_hobject(duk_hthread *thr, duk_hobject *obj) {duk_debug_write_hobject45931,1632741
DUK_INTERNAL void duk_debug_write_tval(duk_hthread *thr, duk_tval *tv) {duk_debug_write_tval45950,1633317
DUK_LOCAL void duk__debug_write_tval_heapptr(duk_hthread *thr, duk_tval *tv) {duk__debug_write_tval_heapptr46041,1636528
DUK_INTERNAL void duk_debug_write_reply(duk_hthread *thr) {duk_debug_write_reply46062,1637068
DUK_INTERNAL void duk_debug_write_error_eom(duk_hthread *thr, duk_small_uint_t err_code, const cduk_debug_write_error_eom46066,1637177
DUK_INTERNAL void duk_debug_write_notify(duk_hthread *thr, duk_small_uint_t command) {duk_debug_write_notify46074,1637472
DUK_INTERNAL void duk_debug_write_eom(duk_hthread *thr) {duk_debug_write_eom46079,1637659
DUK_INTERNAL duk_uint_fast32_t duk_debug_curr_line(duk_hthread *thr) {duk_debug_curr_line46094,1638117
DUK_INTERNAL void duk_debug_send_status(duk_hthread *thr) {duk_debug_send_status46122,1638915
DUK_INTERNAL void duk_debug_send_throw(duk_hthread *thr, duk_bool_t fatal) {duk_debug_send_throw46150,1639814
DUK_LOCAL duk_bool_t duk__debug_skip_dvalue(duk_hthread *thr) {duk__debug_skip_dvalue46206,1641447
DUK_LOCAL void duk__debug_skip_to_eom(duk_hthread *thr) {duk__debug_skip_to_eom46280,1643017
DUK_LOCAL duk_int32_t duk__debug_read_validate_csindex(duk_hthread *thr) {duk__debug_read_validate_csindex46291,1643258
DUK_LOCAL duk_activation *duk__debug_read_level_get_activation(duk_hthread *thr) {duk__debug_read_level_get_activation46304,1643741
DUK_LOCAL void duk__debug_handle_basic_info(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_basic_info46320,1644108
DUK_LOCAL void duk__debug_handle_trigger_status(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_trigger_status46341,1644737
DUK_LOCAL void duk__debug_handle_pause(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_pause46350,1644978
DUK_LOCAL void duk__debug_handle_resume(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_resume46357,1645184
DUK_LOCAL void duk__debug_handle_step(duk_hthread *thr, duk_heap *heap, duk_int32_t cmd) {duk__debug_handle_step46380,1645770
DUK_LOCAL void duk__debug_handle_list_break(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_list_break46411,1646811
DUK_LOCAL void duk__debug_handle_add_break(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_add_break46423,1647233
DUK_LOCAL void duk__debug_handle_del_break(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_del_break46443,1647879
DUK_LOCAL void duk__debug_handle_get_var(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_var46458,1648302
DUK_LOCAL void duk__debug_handle_put_var(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_put_var46487,1648991
DUK_LOCAL void duk__debug_handle_get_call_stack(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_call_stack46516,1649656
DUK_LOCAL void duk__debug_handle_get_locals(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_locals46563,1651300
DUK_LOCAL void duk__debug_handle_eval(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_eval46609,1652667
DUK_LOCAL void duk__debug_handle_detach(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_detach46699,1655263
DUK_LOCAL void duk__debug_handle_apprequest(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_apprequest46710,1655575
DUK_LOCAL void duk__debug_dump_heaphdr(duk_hthread *thr, duk_heap *heap, duk_heaphdr *hdr) {duk__debug_dump_heaphdr46793,1658449
DUK_LOCAL void duk__debug_dump_heap_allocated(duk_hthread *thr, duk_heap *heap) {duk__debug_dump_heap_allocated46868,1661264
DUK_LOCAL void duk__debug_dump_strtab(duk_hthread *thr, duk_heap *heap) {duk__debug_dump_strtab46878,1661508
DUK_LOCAL void duk__debug_handle_dump_heap(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_dump_heap46895,1661912
DUK_LOCAL void duk__debug_handle_get_bytecode(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_bytecode46905,1662217
DUK_LOCAL const char * const duk__debug_getinfo_hstring_keys[] = {duk__debug_getinfo_hstring_keys47006,1664851
DUK_LOCAL duk_uint_t duk__debug_getinfo_hstring_masks[] = {duk__debug_getinfo_hstring_masks47018,1665071
DUK_LOCAL const char * const duk__debug_getinfo_hobject_keys[] = {duk__debug_getinfo_hobject_keys47030,1665383
DUK_LOCAL duk_uint_t duk__debug_getinfo_hobject_masks[] = {duk__debug_getinfo_hobject_masks47053,1665783
DUK_LOCAL const char * const duk__debug_getinfo_hbuffer_keys[] = {duk__debug_getinfo_hbuffer_keys47076,1666470
DUK_LOCAL duk_uint_t duk__debug_getinfo_hbuffer_masks[] = {duk__debug_getinfo_hbuffer_masks47081,1666592
DUK_LOCAL void duk__debug_getinfo_flags_key(duk_hthread *thr, const char *key) {duk__debug_getinfo_flags_key47087,1666732
DUK_LOCAL void duk__debug_getinfo_prop_uint(duk_hthread *thr, const char *key, duk_uint_t val) {duk__debug_getinfo_prop_uint47092,1666883
DUK_LOCAL void duk__debug_getinfo_prop_int(duk_hthread *thr, const char *key, duk_int_t val) {duk__debug_getinfo_prop_int47098,1667083
DUK_LOCAL void duk__debug_getinfo_prop_bool(duk_hthread *thr, const char *key, duk_bool_t val) {duk__debug_getinfo_prop_bool47104,1667280
DUK_LOCAL void duk__debug_getinfo_bitmask(duk_hthread *thr, const char * const * keys, duk_uint_duk__debug_getinfo_bitmask47110,1667483
DUK_LOCAL duk_bool_t duk__debug_getprop_index(duk_hthread *thr, duk_heap *heap, duk_hobject *h_oduk__debug_getprop_index47132,1668213
DUK_LOCAL void duk__debug_handle_get_heap_obj_info(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_heap_obj_info47192,1669736
DUK_LOCAL void duk__debug_handle_get_obj_prop_desc(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_obj_prop_desc47415,1678265
DUK_LOCAL void duk__debug_handle_get_obj_prop_desc_range(duk_hthread *thr, duk_heap *heap) {duk__debug_handle_get_obj_prop_desc_range47458,1679504
DUK_LOCAL void duk__debug_process_message(duk_hthread *thr) {duk__debug_process_message47508,1681045
DUK_LOCAL void duk__check_resend_status(duk_hthread *thr) {duk__check_resend_status47652,1684442
DUK_INTERNAL duk_bool_t duk_debug_process_messages(duk_hthread *thr, duk_bool_t no_block) {duk_debug_process_messages47659,1684641
DUK_INTERNAL void duk_debug_halt_execution(duk_hthread *thr, duk_bool_t use_prev_pc) {duk_debug_halt_execution47784,1689350
DUK_INTERNAL duk_small_int_t duk_debug_add_breakpoint(duk_hthread *thr, duk_hstring *filename, dduk_debug_add_breakpoint47851,1691425
DUK_INTERNAL duk_bool_t duk_debug_remove_breakpoint(duk_hthread *thr, duk_small_uint_t breakpoinduk_debug_remove_breakpoint47879,1692362
DUK_INTERNAL duk_bool_t duk_debug_is_attached(duk_heap *heap) {duk_debug_is_attached47925,1693630
DUK_INTERNAL duk_bool_t duk_debug_is_paused(duk_heap *heap) {duk_debug_is_paused47929,1693734
DUK_INTERNAL void duk_debug_set_paused(duk_heap *heap) {duk_debug_set_paused47933,1693850
DUK_INTERNAL void duk_debug_clear_paused(duk_heap *heap) {duk_debug_clear_paused47948,1694441
DUK_INTERNAL void duk_debug_clear_pause_state(duk_heap *heap) {duk_debug_clear_pause_state47963,1694907
DUK_LOCAL void duk__err_augment_user(duk_hthread *thr, duk_small_uint_t stridx_cb) {duk__err_augment_user48041,1698234
DUK_LOCAL void duk__add_traceback(duk_hthread *thr, duk_hthread *thr_callstack, const char *c_fiduk__add_traceback48122,1700898
DUK_LOCAL void duk__add_fileline(duk_hthread *thr, duk_hthread *thr_callstack, const char *c_filduk__add_fileline48280,1705785
DUK_LOCAL void duk__add_compiler_error_line(duk_hthread *thr) {duk__add_compiler_error_line48395,1709503
DUK_LOCAL void duk__err_augment_builtin_create(duk_hthread *thr, duk_hthread *thr_callstack, conduk__err_augment_builtin_create48454,1711629
DUK_INTERNAL void duk_err_augment_error_create(duk_hthread *thr, duk_hthread *thr_callstack, conduk_err_augment_error_create48507,1713573
DUK_INTERNAL void duk_err_augment_error_throw(duk_hthread *thr) {duk_err_augment_error_throw48562,1715330
DUK_LOCAL void duk__uncaught_minimal(duk_hthread *thr) {duk__uncaught_minimal48578,1715833
DUK_LOCAL void duk__uncaught_error_aware(duk_hthread *thr) {duk__uncaught_error_aware48600,1716521
DUK_INTERNAL void duk_err_longjmp(duk_hthread *thr) {duk_err_longjmp48613,1716917
DUK_LOCAL duk_bool_t duk__have_active_catcher(duk_hthread *thr) {duk__have_active_catcher48685,1719339
DUK_INTERNAL duk_hobject *duk_error_prototype_from_code(duk_hthread *thr, duk_errcode_t code) {duk_error_prototype_from_code48714,1720108
DUK_INTERNAL void duk_err_check_debugger_integration(duk_hthread *thr) {duk_err_check_debugger_integration48739,1720926
DUK_INTERNAL void duk_err_setup_ljstate1(duk_hthread *thr, duk_small_uint_t lj_type, duk_tval *tduk_err_setup_ljstate148831,1724231
DUK_INTERNAL void duk_err_create_and_throw(duk_hthread *thr, duk_errcode_t code, const char *msgduk_err_create_and_throw48871,1725450
DUK_INTERNAL void duk_error_throw_from_negative_rc(duk_hthread *thr, duk_ret_t rc) {duk_error_throw_from_negative_rc48993,1729716
DUK_INTERNAL duk_hbuffer *duk_hbuffer_alloc(duk_heap *heap, duk_size_t size, duk_small_uint_t flduk_hbuffer_alloc49021,1730705
DUK_INTERNAL void *duk_hbuffer_get_dynalloc_ptr(duk_heap *heap, void *ud) {duk_hbuffer_get_dynalloc_ptr49138,1734272
DUK_INTERNAL void duk_hbuffer_assert_valid(duk_hbuffer *h) {duk_hbuffer_assert_valid49152,1734643
DUK_INTERNAL void duk_hbuffer_resize(duk_hthread *thr, duk_hbuffer_dynamic *buf, duk_size_t new_duk_hbuffer_resize49169,1734970
DUK_INTERNAL void duk_hbuffer_reset(duk_hthread *thr, duk_hbuffer_dynamic *buf) {duk_hbuffer_reset49228,1736733
DUK_INTERNAL duk_uint_t duk_hbufobj_clamp_bytelength(duk_hbufobj *h_bufobj, duk_uint_t len) {duk_hbufobj_clamp_bytelength49240,1737114
#define DUK__FIXED_HASH_SEED DUK__FIXED_HASH_SEED49266,1737824
DUK_INTERNAL void duk_free_hobject(duk_heap *heap, duk_hobject *h) {duk_free_hobject49278,1738160
DUK_INTERNAL void duk_free_hbuffer(duk_heap *heap, duk_hbuffer *h) {duk_free_hbuffer49334,1739683
DUK_INTERNAL void duk_free_hstring(duk_heap *heap, duk_hstring *h) {duk_free_hstring49346,1740124
DUK_INTERNAL void duk_heap_free_heaphdr_raw(duk_heap *heap, duk_heaphdr *hdr) {duk_heap_free_heaphdr_raw49363,1740679
DUK_LOCAL duk_size_t duk__heap_free_activation_freelist(duk_heap *heap) {duk__heap_free_activation_freelist49397,1741675
DUK_LOCAL duk_size_t duk__heap_free_catcher_freelist(duk_heap *heap) {duk__heap_free_catcher_freelist49416,1742178
DUK_INTERNAL void duk_heap_free_freelists(duk_heap *heap) {duk_heap_free_freelists49435,1742629
DUK_LOCAL void duk__free_allocated(duk_heap *heap) {duk__free_allocated49453,1743151
DUK_LOCAL void duk__free_finalize_list(duk_heap *heap) {duk__free_finalize_list49472,1743661
DUK_LOCAL void duk__free_stringtable(duk_heap *heap) {duk__free_stringtable49487,1744054
DUK_LOCAL void duk__free_run_finalizers(duk_heap *heap) {duk__free_run_finalizers49493,1744229
DUK_INTERNAL void duk_heap_free(duk_heap *heap) {duk_heap_free49596,1748068
DUK_LOCAL duk_bool_t duk__init_heap_strings(duk_heap *heap) {duk__init_heap_strings49692,1751701
DUK_LOCAL duk_bool_t duk__init_heap_strings(duk_heap *heap) {duk__init_heap_strings49723,1752641
DUK_LOCAL duk_bool_t duk__init_heap_thread(duk_heap *heap) {duk__init_heap_thread49786,1754445
#define DUK__DUMPSZ(DUK__DUMPSZ49828,1755657
#define DUK__DUMPLM_SIGNED_RAW(DUK__DUMPLM_SIGNED_RAW49837,1756014
#define DUK__DUMPLM_UNSIGNED_RAW(DUK__DUMPLM_UNSIGNED_RAW49842,1756216
#define DUK__DUMPLM_SIGNED(DUK__DUMPLM_SIGNED49847,1756438
#define DUK__DUMPLM_UNSIGNED(DUK__DUMPLM_UNSIGNED49850,1756571
DUK_LOCAL void duk__dump_type_sizes(void) {duk__dump_type_sizes49854,1756709
DUK_LOCAL void duk__dump_type_limits(void) {duk__dump_type_limits49965,1759784
DUK_LOCAL void duk__dump_misc_options(void) {duk__dump_misc_options50011,1761118
duk_heap *duk_heap_alloc(duk_alloc_function alloc_func,duk_heap_alloc50050,1762509
DUK_LOCAL duk_ret_t duk__fake_global_finalizer(duk_hthread *thr) {duk__fake_global_finalizer50497,1774797
DUK_LOCAL void duk__run_global_torture_finalizer(duk_hthread *thr) {duk__run_global_torture_finalizer50531,1776026
DUK_INTERNAL void duk_heap_process_finalize_list(duk_heap *heap) {duk_heap_process_finalize_list50612,1780356
DUK_LOCAL duk_ret_t duk__finalize_helper(duk_hthread *thr, void *udata) {duk__finalize_helper50823,1788026
DUK_INTERNAL void duk_heap_run_finalizer(duk_heap *heap, duk_hobject *obj) {duk_heap_run_finalizer50855,1789332
#define DUK__STRHASH_SHORTSTRING DUK__STRHASH_SHORTSTRING50953,1792871
#define DUK__STRHASH_MEDIUMSTRING DUK__STRHASH_MEDIUMSTRING50954,1792912
#define DUK__STRHASH_BLOCKSIZE DUK__STRHASH_BLOCKSIZE50955,1792962
DUK_INTERNAL duk_uint32_t duk_heap_hashstring(duk_heap *heap, const duk_uint8_t *str, duk_size_tduk_heap_hashstring50957,1793003
DUK_INTERNAL duk_uint32_t duk_heap_hashstring(duk_heap *heap, const duk_uint8_t *str, duk_size_tduk_heap_hashstring51013,1795042
DUK_LOCAL void duk__mark_hstring(duk_heap *heap, duk_hstring *h) {duk__mark_hstring51067,1796793
DUK_LOCAL void duk__mark_hobject(duk_heap *heap, duk_hobject *h) {duk__mark_hobject51078,1797031
DUK_LOCAL void duk__mark_heaphdr(duk_heap *heap, duk_heaphdr *h) {duk__mark_heaphdr51224,1801999
DUK_LOCAL void duk__mark_tval(duk_heap *heap, duk_tval *tv) {duk__mark_tval51284,1803801
DUK_LOCAL void duk__mark_tvals(duk_heap *heap, duk_tval *tv, duk_idx_t count) {duk__mark_tvals51298,1804139
DUK_LOCAL void duk__mark_heaphdr_nonnull(duk_heap *heap, duk_heaphdr *h) {duk__mark_heaphdr_nonnull51314,1804557
DUK_LOCAL void duk__mark_roots_heap(duk_heap *heap) {duk__mark_roots_heap51325,1804785
DUK_LOCAL void duk__mark_finalizable(duk_heap *heap) {duk__mark_finalizable51361,1805959
DUK_LOCAL void duk__mark_finalize_list(duk_heap *heap) {duk__mark_finalize_list51426,1807795
DUK_LOCAL void duk__handle_temproot(duk_heap *heap, duk_heaphdr *hdr, duk_size_t *count) {duk__handle_temproot51470,1809333
DUK_LOCAL void duk__mark_temproots_by_heap_scan(duk_heap *heap) {duk__mark_temproots_by_heap_scan51494,1810067
DUK_LOCAL void duk__finalize_refcounts(duk_heap *heap) {duk__finalize_refcounts51548,1811455
DUK_LOCAL void duk__clear_finalize_list_flags(duk_heap *heap) {duk__clear_finalize_list_flags51594,1813047
DUK_LOCAL void duk__sweep_stringtable(duk_heap *heap, duk_size_t *out_count_keep) {duk__sweep_stringtable51617,1813638
DUK_LOCAL void duk__sweep_heap(duk_heap *heap, duk_small_uint_t flags, duk_size_t *out_count_keeduk__sweep_heap51709,1816122
DUK_LOCAL void duk__wipe_litcache(duk_heap *heap) {duk__wipe_litcache51884,1821938
DUK_LOCAL int duk__protected_compact_object(duk_hthread *thr, void *udata) {duk__protected_compact_object51905,1822354
DUK_LOCAL void duk__compact_object_list(duk_heap *heap, duk_hthread *thr, duk_heaphdr *start, duduk__compact_object_list51916,1822625
DUK_LOCAL void duk__compact_objects(duk_heap *heap) {duk__compact_objects51967,1824186
typedef void (*duk__gc_heaphdr_assert)(duk_heap *heap, duk_heaphdr *h);duk__gc_heaphdr_assert52005,1825517
typedef void (*duk__gc_hstring_assert)(duk_heap *heap, duk_hstring *h);duk__gc_hstring_assert52006,1825589
DUK_LOCAL void duk__assert_walk_list(duk_heap *heap, duk_heaphdr *start, duk__gc_heaphdr_assert duk__assert_walk_list52008,1825662
DUK_LOCAL void duk__assert_walk_strtable(duk_heap *heap, duk__gc_hstring_assert func) {duk__assert_walk_strtable52015,1825889
DUK_LOCAL void duk__assert_heaphdr_flags_cb(duk_heap *heap, duk_heaphdr *h) {duk__assert_heaphdr_flags_cb52033,1826267
DUK_LOCAL void duk__assert_heaphdr_flags(duk_heap *heap) {duk__assert_heaphdr_flags52040,1826524
DUK_LOCAL void duk__assert_validity_cb1(duk_heap *heap, duk_heaphdr *h) {duk__assert_validity_cb152048,1826852
DUK_LOCAL void duk__assert_validity_cb2(duk_heap *heap, duk_hstring *h) {duk__assert_validity_cb252053,1827054
DUK_LOCAL void duk__assert_validity(duk_heap *heap) {duk__assert_validity52058,1827260
DUK_LOCAL void duk__assert_valid_refcounts_cb(duk_heap *heap, duk_heaphdr *h) {duk__assert_valid_refcounts_cb52070,1827741
DUK_LOCAL void duk__assert_valid_refcounts(duk_heap *heap) {duk__assert_valid_refcounts52091,1828593
DUK_LOCAL void duk__clear_assert_refcounts_cb1(duk_heap *heap, duk_heaphdr *h) {duk__clear_assert_refcounts_cb152095,1828741
DUK_LOCAL void duk__clear_assert_refcounts_cb2(duk_heap *heap, duk_hstring *h) {duk__clear_assert_refcounts_cb252099,1828869
DUK_LOCAL void duk__clear_assert_refcounts(duk_heap *heap) {duk__clear_assert_refcounts52103,1829015
DUK_LOCAL void duk__check_refcount_heaphdr(duk_heaphdr *hdr) {duk__check_refcount_heaphdr52114,1829491
DUK_LOCAL void duk__check_assert_refcounts_cb1(duk_heap *heap, duk_heaphdr *h) {duk__check_assert_refcounts_cb152146,1830629
DUK_LOCAL void duk__check_assert_refcounts_cb2(duk_heap *heap, duk_hstring *h) {duk__check_assert_refcounts_cb252150,1830763
DUK_LOCAL void duk__check_assert_refcounts(duk_heap *heap) {duk__check_assert_refcounts52154,1830913
DUK_LOCAL void duk__assert_litcache_nulls(duk_heap *heap) {duk__assert_litcache_nulls52165,1831381
DUK_LOCAL void duk__dump_stats(duk_heap *heap) {duk__dump_stats52186,1831881
DUK_INTERNAL void duk_heap_mark_and_sweep(duk_heap *heap, duk_small_uint_t flags) {duk_heap_mark_and_sweep52248,1835890
DUK_LOCAL DUK_NOINLINE_PERF DUK_COLD void *duk__heap_mem_alloc_slowpath(duk_heap *heap, duk_sizeduk__heap_mem_alloc_slowpath52546,1846406
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_alloc(duk_heap *heap, duk_size_t size) {duk_heap_mem_alloc52604,1848087
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_alloc_zeroed(duk_heap *heap, duk_size_t duk_heap_mem_alloc_zeroed52649,1849325
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_alloc_checked(duk_hthread *thr, duk_sizeduk_heap_mem_alloc_checked52663,1849648
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_alloc_checked_zeroed(duk_hthread *thr, dduk_heap_mem_alloc_checked_zeroed52681,1850095
DUK_LOCAL DUK_NOINLINE_PERF DUK_COLD void *duk__heap_mem_realloc_slowpath(duk_heap *heap, void *duk__heap_mem_realloc_slowpath52705,1850715
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_realloc(duk_heap *heap, void *ptr, duk_sduk_heap_mem_realloc52764,1852418
DUK_LOCAL DUK_NOINLINE_PERF DUK_COLD void *duk__heap_mem_realloc_indirect_slowpath(duk_heap *headuk__heap_mem_realloc_indirect_slowpath52813,1853854
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void *duk_heap_mem_realloc_indirect(duk_heap *heap, duk_memduk_heap_mem_realloc_indirect52887,1856008
DUK_INTERNAL DUK_INLINE_PERF DUK_HOT void duk_heap_mem_free(duk_heap *heap, void *ptr) {duk_heap_mem_free52932,1857216
DUK_INTERNAL void duk_heap_insert_into_heap_allocated(duk_heap *heap, duk_heaphdr *hdr) {duk_heap_insert_into_heap_allocated52954,1857865
DUK_INTERNAL void duk_heap_remove_from_heap_allocated(duk_heap *heap, duk_heaphdr *hdr) {duk_heap_remove_from_heap_allocated52974,1858464
DUK_INTERNAL void duk_heap_insert_into_finalize_list(duk_heap *heap, duk_heaphdr *hdr) {duk_heap_insert_into_finalize_list53017,1859589
DUK_INTERNAL void duk_heap_remove_from_finalize_list(duk_heap *heap, duk_heaphdr *hdr) {duk_heap_remove_from_finalize_list53036,1860163
DUK_INTERNAL duk_bool_t duk_heap_in_heap_allocated(duk_heap *heap, duk_heaphdr *ptr) {duk_heap_in_heap_allocated53082,1861385
DUK_INTERNAL void duk_heap_switch_thread(duk_heap *heap, duk_hthread *new_thr) {duk_heap_switch_thread53096,1861739
DUK_INTERNAL void duk_heap_assert_valid(duk_heap *heap) {duk_heap_assert_valid53131,1862875
DUK_LOCAL void duk__decref_tvals_norz(duk_hthread *thr, duk_tval *tv, duk_idx_t count) {duk__decref_tvals_norz53170,1864346
DUK_INTERNAL void duk_hobject_refcount_finalize_norz(duk_heap *heap, duk_hobject *h) {duk_hobject_refcount_finalize_norz53179,1864545
DUK_INTERNAL void duk_heaphdr_refcount_finalize_norz(duk_heap *heap, duk_heaphdr *hdr) {duk_heaphdr_refcount_finalize_norz53362,1870677
DUK_LOCAL void duk__refcount_free_pending(duk_heap *heap) {duk__refcount_free_pending53421,1873437
DUK_LOCAL DUK_INLINE void duk__refcount_refzero_hobject(duk_heap *heap, duk_hobject *obj, duk_boduk__refcount_refzero_hobject53468,1874834
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_refzero_check_fast(duk_hthread *thr) {duk_refzero_check_fast53575,1878517
DUK_INTERNAL void duk_refzero_check_slow(duk_hthread *thr) {duk_refzero_check_slow53585,1878846
DUK_LOCAL DUK_INLINE void duk__refcount_refzero_hstring(duk_heap *heap, duk_hstring *str) {duk__refcount_refzero_hstring53600,1879245
DUK_LOCAL DUK_INLINE void duk__refcount_refzero_hbuffer(duk_heap *heap, duk_hbuffer *buf) {duk__refcount_refzero_hbuffer53615,1879671
#define DUK__RZ_SUPPRESS_ASSERT1(DUK__RZ_SUPPRESS_ASSERT153654,1881392
#define DUK__RZ_SUPPRESS_ASSERT2(DUK__RZ_SUPPRESS_ASSERT253676,1882544
#define DUK__RZ_SUPPRESS_COND(DUK__RZ_SUPPRESS_COND53680,1882741
#define DUK__RZ_SUPPRESS_ASSERT2(DUK__RZ_SUPPRESS_ASSERT253682,1882804
#define DUK__RZ_SUPPRESS_COND(DUK__RZ_SUPPRESS_COND53683,1882856
#define DUK__RZ_SUPPRESS_CHECK(DUK__RZ_SUPPRESS_CHECK53686,1882953
#define DUK__RZ_STRING(DUK__RZ_STRING53695,1883268
#define DUK__RZ_BUFFER(DUK__RZ_BUFFER53698,1883373
#define DUK__RZ_OBJECT(DUK__RZ_OBJECT53701,1883478
#define DUK__RZ_INLINE DUK__RZ_INLINE53707,1883722
#define DUK__RZ_INLINE DUK__RZ_INLINE53709,1883769
DUK_LOCAL DUK__RZ_INLINE void duk__hstring_refzero_helper(duk_hthread *thr, duk_hstring *h) {duk__hstring_refzero_helper53712,1883808
DUK_LOCAL DUK__RZ_INLINE void duk__hbuffer_refzero_helper(duk_hthread *thr, duk_hbuffer *h) {duk__hbuffer_refzero_helper53723,1884039
DUK_LOCAL DUK__RZ_INLINE void duk__hobject_refzero_helper(duk_hthread *thr, duk_hobject *h, duk_duk__hobject_refzero_helper53734,1884270
DUK_LOCAL DUK__RZ_INLINE void duk__heaphdr_refzero_helper(duk_hthread *thr, duk_heaphdr *h, duk_duk__heaphdr_refzero_helper53745,1884531
DUK_INTERNAL DUK_NOINLINE void duk_heaphdr_refzero(duk_hthread *thr, duk_heaphdr *h) {duk_heaphdr_refzero53788,1885664
DUK_INTERNAL DUK_NOINLINE void duk_heaphdr_refzero_norz(duk_hthread *thr, duk_heaphdr *h) {duk_heaphdr_refzero_norz53792,1885817
DUK_INTERNAL DUK_NOINLINE void duk_hstring_refzero(duk_hthread *thr, duk_hstring *h) {duk_hstring_refzero53796,1885975
DUK_INTERNAL DUK_NOINLINE void duk_hbuffer_refzero(duk_hthread *thr, duk_hbuffer *h) {duk_hbuffer_refzero53800,1886103
DUK_INTERNAL DUK_NOINLINE void duk_hobject_refzero(duk_hthread *thr, duk_hobject *h) {duk_hobject_refzero53804,1886231
DUK_INTERNAL DUK_NOINLINE void duk_hobject_refzero_norz(duk_hthread *thr, duk_hobject *h) {duk_hobject_refzero_norz53808,1886384
DUK_INTERNAL void duk_tval_incref(duk_tval *tv) {duk_tval_incref53813,1886586
DUK_INTERNAL void duk_tval_decref(duk_hthread *thr, duk_tval *tv) {duk_tval_decref53826,1886967
DUK_INTERNAL void duk_tval_decref_norz(duk_hthread *thr, duk_tval *tv) {duk_tval_decref_norz53846,1887436
#define DUK__DECREF_ASSERTS(DUK__DECREF_ASSERTS53867,1887965
#define DUK__INCREF_SHARED(DUK__INCREF_SHARED53875,1888265
#define DUK__DECREF_SHARED(DUK__DECREF_SHARED53882,1888526
#define DUK__INCREF_SHARED(DUK__INCREF_SHARED53891,1888737
#define DUK__DECREF_SHARED(DUK__DECREF_SHARED53895,1888924
DUK_INTERNAL void duk_heaphdr_incref(duk_heaphdr *h) {duk_heaphdr_incref53906,1889239
DUK_INTERNAL void duk_heaphdr_decref(duk_hthread *thr, duk_heaphdr *h) {duk_heaphdr_decref53914,1889441
DUK_INTERNAL void duk_heaphdr_decref_norz(duk_hthread *thr, duk_heaphdr *h) {duk_heaphdr_decref_norz53924,1889737
DUK_INTERNAL void duk_heap_strcache_string_remove(duk_heap *heap, duk_hstring *h) {duk_heap_strcache_string_remove54002,1891997
DUK_LOCAL const duk_uint8_t *duk__scan_forwards(const duk_uint8_t *p, const duk_uint8_t *q, duk_duk__scan_forwards54027,1892750
DUK_LOCAL const duk_uint8_t *duk__scan_backwards(const duk_uint8_t *p, const duk_uint8_t *q, dukduk__scan_backwards54043,1893016
DUK_INTERNAL duk_uint_fast32_t duk_heap_strcache_offset_char2byte(duk_hthread *thr, duk_hstring duk_heap_strcache_offset_char2byte54075,1893895
#define DUK__STRTAB_RESIZE_CHECKDUK__STRTAB_RESIZE_CHECK54302,1901605
#define DUK__HEAPPTR_ENC16(DUK__HEAPPTR_ENC1654308,1901769
#define DUK__HEAPPTR_DEC16(DUK__HEAPPTR_DEC1654309,1901858
#define DUK__GET_STRTABLE(DUK__GET_STRTABLE54310,1901947
#define DUK__HEAPPTR_ENC16(DUK__HEAPPTR_ENC1654312,1902014
#define DUK__HEAPPTR_DEC16(DUK__HEAPPTR_DEC1654313,1902060
#define DUK__GET_STRTABLE(DUK__GET_STRTABLE54314,1902106
#define DUK__STRTAB_U32_MAX_STRLEN DUK__STRTAB_U32_MAX_STRLEN54317,1902173
DUK_INTERNAL void duk_heap_strtable_dump(duk_heap *heap) {duk_heap_strtable_dump54324,1902314
DUK_LOCAL void duk__strtable_assert_checks(duk_heap *heap) {duk__strtable_assert_checks54382,1904250
DUK_LOCAL duk_hstring *duk__strtable_alloc_hstring(duk_heap *heap,duk__strtable_alloc_hstring54429,1905451
DUK_LOCAL void duk__strtable_grow_inplace(duk_heap *heap) {duk__strtable_grow_inplace54557,1909696
DUK_LOCAL void duk__strtable_shrink_inplace(duk_heap *heap) {duk__strtable_shrink_inplace54674,1913029
DUK_LOCAL DUK_COLD DUK_NOINLINE void duk__strtable_resize_check(duk_heap *heap) {duk__strtable_resize_check54760,1915538
DUK_LOCAL void duk__strtable_resize_torture(duk_heap *heap) {duk__strtable_resize_torture54822,1917663
DUK_LOCAL duk_hstring *duk__strtable_do_intern(duk_heap *heap, const duk_uint8_t *str, duk_uint3duk__strtable_do_intern54845,1918165
DUK_LOCAL duk_hstring *duk__strtab_romstring_lookup(duk_heap *heap, const duk_uint8_t *str, duk_duk__strtab_romstring_lookup54968,1922629
DUK_INTERNAL duk_hstring *duk_heap_strtable_intern(duk_heap *heap, const duk_uint8_t *str, duk_uduk_heap_strtable_intern54998,1923611
DUK_INTERNAL duk_hstring *duk_heap_strtable_intern_u32(duk_heap *heap, duk_uint32_t val) {duk_heap_strtable_intern_u3255061,1925597
DUK_INTERNAL duk_hstring *duk_heap_strtable_intern_checked(duk_hthread *thr, const duk_uint8_t *duk_heap_strtable_intern_checked55088,1926448
DUK_LOCAL duk_uint_t duk__strtable_litcache_key(const duk_uint8_t *str, duk_uint32_t blen) {duk__strtable_litcache_key55104,1926895
DUK_INTERNAL duk_hstring *duk_heap_strtable_intern_literal_checked(duk_hthread *thr, const duk_uduk_heap_strtable_intern_literal_checked55117,1927370
DUK_INTERNAL duk_hstring *duk_heap_strtable_intern_u32_checked(duk_hthread *thr, duk_uint32_t vaduk_heap_strtable_intern_u32_checked55159,1928985
DUK_INTERNAL void duk_heap_strtable_unlink(duk_heap *heap, duk_hstring *h) {duk_heap_strtable_unlink55182,1929585
DUK_INTERNAL void duk_heap_strtable_unlink_prev(duk_heap *heap, duk_hstring *h, duk_hstring *preduk_heap_strtable_unlink_prev55233,1931026
DUK_INTERNAL void duk_heap_strtable_force_resize(duk_heap *heap) {duk_heap_strtable_force_resize55273,1932206
DUK_INTERNAL void duk_heap_strtable_free(duk_heap *heap) {duk_heap_strtable_free55296,1932714
DUK_INTERNAL void duk_heaphdr_assert_links(duk_heap *heap, duk_heaphdr *h) {duk_heaphdr_assert_links55352,1933944
DUK_INTERNAL void duk_heaphdr_assert_links(duk_heap *heap, duk_heaphdr *h) {duk_heaphdr_assert_links55363,1934334
DUK_INTERNAL void duk_heaphdr_assert_valid(duk_heaphdr *h) {duk_heaphdr_assert_valid55369,1934454
DUK_INTERNAL void duk_heaphdr_assert_valid_subclassed(duk_heaphdr *h) {duk_heaphdr_assert_valid_subclassed55375,1934645
DUK_LOCAL void duk__init_object_parts(duk_heap *heap, duk_uint_t hobject_flags, duk_hobject *objduk__init_object_parts55440,1936556
DUK_LOCAL void *duk__hobject_alloc_init(duk_hthread *thr, duk_uint_t hobject_flags, duk_size_t sduk__hobject_alloc_init55468,1937639
DUK_INTERNAL duk_hobject *duk_hobject_alloc_unchecked(duk_heap *heap, duk_uint_t hobject_flags) duk_hobject_alloc_unchecked55488,1938317
DUK_INTERNAL duk_hobject *duk_hobject_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hobject_alloc55510,1938979
DUK_INTERNAL duk_hcompfunc *duk_hcompfunc_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hcompfunc_alloc55517,1939194
DUK_INTERNAL duk_hnatfunc *duk_hnatfunc_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hnatfunc_alloc55536,1939689
DUK_INTERNAL duk_hboundfunc *duk_hboundfunc_alloc(duk_heap *heap, duk_uint_t hobject_flags) {duk_hboundfunc_alloc55547,1939976
DUK_INTERNAL duk_hbufobj *duk_hbufobj_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hbufobj_alloc55569,1940503
DUK_INTERNAL duk_hthread *duk_hthread_alloc_unchecked(duk_heap *heap, duk_uint_t hobject_flags) duk_hthread_alloc_unchecked55589,1941071
DUK_INTERNAL duk_hthread *duk_hthread_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hthread_alloc55632,1942093
DUK_INTERNAL duk_harray *duk_harray_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_harray_alloc55643,1942368
DUK_INTERNAL duk_hdecenv *duk_hdecenv_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hdecenv_alloc55653,1942611
DUK_INTERNAL duk_hobjenv *duk_hobjenv_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hobjenv_alloc55669,1943025
DUK_INTERNAL duk_hproxy *duk_hproxy_alloc(duk_hthread *thr, duk_uint_t hobject_flags) {duk_hproxy_alloc55682,1943344
DUK_INTERNAL void duk_hobject_assert_valid(duk_hobject *h) {duk_hobject_assert_valid55702,1943869
DUK_INTERNAL void duk_harray_assert_valid(duk_harray *h) {duk_harray_assert_valid55723,1945293
DUK_INTERNAL void duk_hboundfunc_assert_valid(duk_hboundfunc *h) {duk_hboundfunc_assert_valid55729,1945495
DUK_INTERNAL void duk_hbufobj_assert_valid(duk_hbufobj *h) {duk_hbufobj_assert_valid55740,1945957
DUK_INTERNAL void duk_hcompfunc_assert_valid(duk_hcompfunc *h) {duk_hcompfunc_assert_valid55768,1947266
DUK_INTERNAL void duk_hnatfunc_assert_valid(duk_hnatfunc *h) {duk_hnatfunc_assert_valid55772,1947358
DUK_INTERNAL void duk_hdecenv_assert_valid(duk_hdecenv *h) {duk_hdecenv_assert_valid55776,1947448
DUK_INTERNAL void duk_hobjenv_assert_valid(duk_hobjenv *h) {duk_hobjenv_assert_valid55782,1947644
DUK_INTERNAL void duk_hproxy_assert_valid(duk_hproxy *h) {duk_hproxy_assert_valid55789,1947870
DUK_INTERNAL void duk_hthread_assert_valid(duk_hthread *thr) {duk_hthread_assert_valid55796,1948086
DUK_INTERNAL void duk_ctx_assert_valid(duk_hthread *thr) {duk_ctx_assert_valid55804,1948375
#define DUK__ENUM_START_INDEX DUK__ENUM_START_INDEX55848,1950213
typedef duk_uint32_t duk__sort_key_t;duk__sort_key_t55882,1951708
typedef duk_uint64_t duk__sort_key_t;duk__sort_key_t55884,1951779
typedef duk_double_t duk__sort_key_t;duk__sort_key_t55886,1951823
DUK_LOCAL duk__sort_key_t duk__hstring_sort_key(duk_hstring *x) {duk__hstring_sort_key55890,1951907
DUK_LOCAL duk_bool_t duk__sort_compare_es6(duk_hstring *a, duk_hstring *b, duk__sort_key_t val_bduk__sort_compare_es655912,1952728
DUK_LOCAL void duk__sort_enum_keys_es6(duk_hthread *thr, duk_hobject *h_obj, duk_int_fast32_t idduk__sort_enum_keys_es655928,1953063
DUK_LOCAL void duk__add_enum_key(duk_hthread *thr, duk_hstring *k) {duk__add_enum_key56000,1955276
DUK_LOCAL void duk__add_enum_key_stridx(duk_hthread *thr, duk_small_uint_t stridx) {duk__add_enum_key_stridx56009,1955508
DUK_INTERNAL void duk_hobject_enumerator_create(duk_hthread *thr, duk_small_uint_t enum_flags) {duk_hobject_enumerator_create56013,1955658
DUK_INTERNAL duk_bool_t duk_hobject_enumerator_next(duk_hthread *thr, duk_bool_t get_value) {duk_hobject_enumerator_next56382,1967363
DUK_INTERNAL duk_ret_t duk_hobject_get_enumerated_keys(duk_hthread *thr, duk_small_uint_t enum_fduk_hobject_get_enumerated_keys56477,1970243
DUK_INTERNAL duk_bool_t duk_hobject_prototype_chain_contains(duk_hthread *thr, duk_hobject *h, dduk_hobject_prototype_chain_contains56538,1971788
DUK_INTERNAL void duk_hobject_set_prototype_updref(duk_hthread *thr, duk_hobject *h, duk_hobjectduk_hobject_set_prototype_updref56570,1972480
DUK_INTERNAL void duk_hobject_pc2line_pack(duk_hthread *thr, duk_compiler_instr *instrs, duk_uinduk_hobject_pc2line_pack56600,1973407
DUK_LOCAL duk_uint_fast32_t duk__hobject_pc2line_query_raw(duk_hthread *thr, duk_hbuffer_fixed *duk__hobject_pc2line_query_raw56708,1977375
DUK_INTERNAL duk_uint_fast32_t duk_hobject_pc2line_query(duk_hthread *thr, duk_idx_t idx_func, dduk_hobject_pc2line_query56806,1980423
#define DUK__NO_ARRAY_INDEX DUK__NO_ARRAY_INDEX56879,1983465
#define DUK__HASH_UNUSED DUK__HASH_UNUSED56882,1983568
#define DUK__HASH_DELETED DUK__HASH_DELETED56883,1983635
#define DUK__VALSTACK_SPACE DUK__VALSTACK_SPACE56888,1983846
#define DUK__VALSTACK_PROXY_LOOKUP DUK__VALSTACK_PROXY_LOOKUP56893,1983993
DUK_LOCAL duk_uint32_t duk__tval_number_to_arr_idx(duk_tval *tv) {duk__tval_number_to_arr_idx56923,1985624
DUK_LOCAL duk_uint32_t duk__tval_fastint_to_arr_idx(duk_tval *tv) {duk__tval_fastint_to_arr_idx56946,1986340
DUK_LOCAL duk_uint32_t duk__to_property_key(duk_hthread *thr, duk_idx_t idx, duk_hstring **out_hduk__to_property_key56972,1987155
DUK_LOCAL duk_uint32_t duk__push_tval_to_property_key(duk_hthread *thr, duk_tval *tv_key, duk_hsduk__push_tval_to_property_key57007,1988276
DUK_LOCAL duk_bool_t duk__key_is_plain_buf_ownprop(duk_hthread *thr, duk_hbuffer *buf, duk_hstriduk__key_is_plain_buf_ownprop57013,1988570
DUK_LOCAL duk_uint32_t duk__get_default_h_size(duk_uint32_t e_size) {duk__get_default_h_size57036,1989285
DUK_LOCAL duk_uint32_t duk__get_min_grow_e(duk_uint32_t e_size) {duk__get_min_grow_e57067,1990105
DUK_LOCAL duk_uint32_t duk__get_min_grow_a(duk_uint32_t a_size) {duk__get_min_grow_a57076,1990408
DUK_LOCAL duk_uint32_t duk__count_used_e_keys(duk_hthread *thr, duk_hobject *obj) {duk__count_used_e_keys57085,1990717
DUK_LOCAL void duk__compute_a_stats(duk_hthread *thr, duk_hobject *obj, duk_uint32_t *out_used, duk__compute_a_stats57107,1991306
DUK_LOCAL duk_bool_t duk__abandon_array_density_check(duk_uint32_t a_used, duk_uint32_t a_size) duk__abandon_array_density_check57137,1992252
DUK_LOCAL duk_bool_t duk__abandon_array_slow_check_required(duk_uint32_t arr_idx, duk_uint32_t oduk__abandon_array_slow_check_required57158,1993061
DUK_LOCAL duk_bool_t duk__abandon_array_check(duk_hthread *thr, duk_uint32_t arr_idx, duk_hobjecduk__abandon_array_check57187,1994188
DUK_LOCAL duk_tval *duk__obtain_arridx_slot_slowpath(duk_hthread *thr, duk_uint32_t arr_idx, dukduk__obtain_arridx_slot_slowpath57234,1995624
DUK_LOCAL DUK_INLINE duk_tval *duk__obtain_arridx_slot(duk_hthread *thr, duk_uint32_t arr_idx, dduk__obtain_arridx_slot57278,1997497
DUK_INTERNAL duk_bool_t duk_hobject_proxy_check(duk_hobject *obj, duk_hobject **out_target, duk_duk_hobject_proxy_check57291,1997867
DUK_INTERNAL duk_hobject *duk_hobject_resolve_proxy_target(duk_hobject *obj) {duk_hobject_resolve_proxy_target57320,1998682
DUK_LOCAL duk_bool_t duk__proxy_check_prop(duk_hthread *thr, duk_hobject *obj, duk_small_uint_t duk__proxy_check_prop57343,1999286
DUK_INTERNAL void duk_hobject_realloc_props(duk_hthread *thr,duk_hobject_realloc_props57437,2003123
DUK_INTERNAL void duk_hobject_resize_entrypart(duk_hthread *thr,duk_hobject_resize_entrypart57901,2019731
DUK_LOCAL void duk__grow_props_for_new_entry_item(duk_hthread *thr, duk_hobject *obj) {duk__grow_props_for_new_entry_item57926,2020473
DUK_LOCAL void duk__grow_props_for_array_item(duk_hthread *thr, duk_hobject *obj, duk_uint32_t hduk__grow_props_for_array_item57975,2021986
DUK_LOCAL void duk__abandon_array_part(duk_hthread *thr, duk_hobject *obj) {duk__abandon_array_part58016,2023279
DUK_INTERNAL void duk_hobject_compact_props(duk_hthread *thr, duk_hobject *obj) {duk_hobject_compact_props58084,2025389
DUK_INTERNAL duk_bool_t duk_hobject_find_entry(duk_heap *heap, duk_hobject *obj, duk_hstring *keduk_hobject_find_entry58147,2027557
DUK_INTERNAL duk_tval *duk_hobject_find_entry_tval_ptr(duk_heap *heap, duk_hobject *obj, duk_hstduk_hobject_find_entry_tval_ptr58231,2030014
DUK_INTERNAL duk_tval *duk_hobject_find_entry_tval_ptr_stridx(duk_heap *heap, duk_hobject *obj, duk_hobject_find_entry_tval_ptr_stridx58248,2030465
DUK_INTERNAL duk_tval *duk_hobject_find_entry_tval_ptr_and_attrs(duk_heap *heap, duk_hobject *obduk_hobject_find_entry_tval_ptr_and_attrs58253,2030746
DUK_INTERNAL duk_tval *duk_hobject_find_array_entry_tval_ptr(duk_heap *heap, duk_hobject *obj, dduk_hobject_find_array_entry_tval_ptr58274,2031412
DUK_LOCAL duk_int_t duk__hobject_alloc_entry_checked(duk_hthread *thr, duk_hobject *obj, duk_hstduk__hobject_alloc_entry_checked58299,2032170
DUK_INTERNAL duk_tval *duk_hobject_get_internal_value_tval_ptr(duk_heap *heap, duk_hobject *obj)duk_hobject_get_internal_value_tval_ptr58377,2034707
DUK_LOCAL duk_heaphdr *duk_hobject_get_internal_value_heaphdr(duk_heap *heap, duk_hobject *obj) duk_hobject_get_internal_value_heaphdr58381,2034890
DUK_INTERNAL duk_hstring *duk_hobject_get_internal_value_string(duk_heap *heap, duk_hobject *objduk_hobject_get_internal_value_string58397,2035238
DUK_LOCAL duk_hobject *duk__hobject_get_entry_object_stridx(duk_heap *heap, duk_hobject *obj, duduk__hobject_get_entry_object_stridx58407,2035519
DUK_INTERNAL duk_harray *duk_hobject_get_formals(duk_hthread *thr, duk_hobject *obj) {duk_hobject_get_formals58420,2035871
DUK_INTERNAL duk_hobject *duk_hobject_get_varmap(duk_hthread *thr, duk_hobject *obj) {duk_hobject_get_varmap58431,2036232
duk_bool_t duk__lookup_arguments_map(duk_hthread *thr,duk__lookup_arguments_map58452,2036947
DUK_LOCAL duk_bool_t duk__check_arguments_map_for_get(duk_hthread *thr, duk_hobject *obj, duk_hsduk__check_arguments_map_for_get58508,2039279
DUK_LOCAL void duk__check_arguments_map_for_put(duk_hthread *thr, duk_hobject *obj, duk_hstring duk__check_arguments_map_for_put58545,2040477
DUK_LOCAL void duk__check_arguments_map_for_delete(duk_hthread *thr, duk_hobject *obj, duk_hstriduk__check_arguments_map_for_delete58588,2042063
DUK_LOCAL duk_bool_t duk__get_own_propdesc_raw(duk_hthread *thr, duk_hobject *obj, duk_hstring *duk__get_own_propdesc_raw58651,2044795
DUK_INTERNAL duk_bool_t duk_hobject_get_own_propdesc(duk_hthread *thr, duk_hobject *obj, duk_hstduk_hobject_get_own_propdesc58977,2056351
DUK_LOCAL duk_bool_t duk__get_propdesc(duk_hthread *thr, duk_hobject *obj, duk_hstring *key, dukduk__get_propdesc59006,2057401
DUK_LOCAL duk_tval *duk__getprop_shallow_fastpath_array_tval(duk_hthread *thr, duk_hobject *obj,duk__getprop_shallow_fastpath_array_tval59080,2060100
DUK_LOCAL duk_bool_t duk__putprop_shallow_fastpath_array_tval(duk_hthread *thr, duk_hobject *objduk__putprop_shallow_fastpath_array_tval59142,2062009
DUK_LOCAL duk_bool_t duk__getprop_fastpath_bufobj_tval(duk_hthread *thr, duk_hobject *obj, duk_tduk__getprop_fastpath_bufobj_tval59212,2064037
DUK_LOCAL duk_bool_t duk__putprop_fastpath_bufobj_tval(duk_hthread *thr, duk_hobject *obj, duk_tduk__putprop_fastpath_bufobj_tval59265,2065659
DUK_INTERNAL duk_bool_t duk_hobject_getprop(duk_hthread *thr, duk_tval *tv_obj, duk_tval *tv_keyduk_hobject_getprop59330,2067637
DUK_INTERNAL duk_bool_t duk_hobject_hasprop(duk_hthread *thr, duk_tval *tv_obj, duk_tval *tv_keyduk_hobject_hasprop59820,2085035
DUK_INTERNAL duk_bool_t duk_hobject_hasprop_raw(duk_hthread *thr, duk_hobject *obj, duk_hstring duk_hobject_hasprop_raw59959,2089910
DUK_LOCAL duk_uint32_t duk__to_new_array_length_checked(duk_hthread *thr, duk_tval *tv) {duk__to_new_array_length_checked59983,2090614
duk_bool_t duk__handle_put_array_length_smaller(duk_hthread *thr,duk__handle_put_array_length_smaller60041,2092310
DUK_LOCAL duk_bool_t duk__handle_put_array_length(duk_hthread *thr, duk_hobject *obj) {duk__handle_put_array_length60227,2098998
DUK_INTERNAL duk_bool_t duk_hobject_putprop(duk_hthread *thr, duk_tval *tv_obj, duk_tval *tv_keyduk_hobject_putprop60327,2102212
DUK_INTERNAL duk_bool_t duk_hobject_delprop_raw(duk_hthread *thr, duk_hobject *obj, duk_hstring duk_hobject_delprop_raw61184,2130561
DUK_INTERNAL duk_bool_t duk_hobject_delprop(duk_hthread *thr, duk_tval *tv_obj, duk_tval *tv_keyduk_hobject_delprop61344,2136147
DUK_INTERNAL void duk_hobject_define_property_internal(duk_hthread *thr, duk_hobject *obj, duk_hduk_hobject_define_property_internal61545,2142440
DUK_INTERNAL void duk_hobject_define_property_internal_arridx(duk_hthread *thr, duk_hobject *objduk_hobject_define_property_internal_arridx61670,2147273
DUK_INTERNAL duk_size_t duk_hobject_get_length(duk_hthread *thr, duk_hobject *obj) {duk_hobject_get_length61720,2148939
DUK_INTERNAL duk_bool_t duk_hobject_has_finalizer_fast_raw(duk_heap *heap, duk_hobject *obj) {duk_hobject_has_finalizer_fast_raw61756,2150050
DUK_INTERNAL void duk_hobject_object_get_own_property_descriptor(duk_hthread *thr, duk_idx_t objduk_hobject_object_get_own_property_descriptor61790,2150914
void duk_hobject_prepare_property_descriptor(duk_hthread *thr,duk_hobject_prepare_property_descriptor61864,2153289
duk_bool_t duk_hobject_define_property_helper(duk_hthread *thr,duk_hobject_define_property_helper62006,2157945
DUK_INTERNAL duk_bool_t duk_hobject_object_ownprop_helper(duk_hthread *thr, duk_small_uint_t reqduk_hobject_object_ownprop_helper62886,2187376
DUK_INTERNAL void duk_hobject_object_seal_freeze_helper(duk_hthread *thr, duk_hobject *obj, duk_duk_hobject_object_seal_freeze_helper62920,2188691
DUK_INTERNAL duk_bool_t duk_hobject_object_is_sealed_frozen_helper(duk_hthread *thr, duk_hobjectduk_hobject_object_is_sealed_frozen_helper62982,2190762
DUK_INTERNAL void duk_hstring_assert_valid(duk_hstring *h) {duk_hstring_assert_valid63055,2192613
DUK_INTERNAL duk_ucodepoint_t duk_hstring_char_code_at_raw(duk_hthread *thr, duk_hstring *h, dukduk_hstring_char_code_at_raw63071,2192922
DUK_INTERNAL void duk_hstring_init_charlen(duk_hstring *h) {duk_hstring_init_charlen63126,2194944
DUK_INTERNAL DUK_HOT duk_size_t duk_hstring_get_charlen(duk_hstring *h) {duk_hstring_get_charlen63145,2195521
DUK_LOCAL DUK_COLD duk_size_t duk__hstring_get_charlen_slowpath(duk_hstring *h) {duk__hstring_get_charlen_slowpath63160,2195850
DUK_LOCAL duk_size_t duk__hstring_get_charlen_slowpath(duk_hstring *h) {duk__hstring_get_charlen_slowpath63187,2196654
DUK_INTERNAL DUK_HOT duk_size_t duk_hstring_get_charlen(duk_hstring *h) {duk_hstring_get_charlen63218,2197544
DUK_INTERNAL DUK_HOT duk_size_t duk_hstring_get_charlen(duk_hstring *h) {duk_hstring_get_charlen63231,2197855
DUK_INTERNAL duk_bool_t duk_hstring_equals_ascii_cstring(duk_hstring *h, const char *cstr) {duk_hstring_equals_ascii_cstring63242,2198135
DUK_INTERNAL duk_bool_t duk_hthread_init_stacks(duk_heap *heap, duk_hthread *thr) {duk_hthread_init_stacks63270,2198842
DUK_INTERNAL void *duk_hthread_get_valstack_ptr(duk_heap *heap, void *ud) {duk_hthread_get_valstack_ptr63312,2200030
#define DUK__PROP_FLAGS_BITS DUK__PROP_FLAGS_BITS63330,2200503
#define DUK__LENGTH_PROP_BITS DUK__LENGTH_PROP_BITS63331,2200546
#define DUK__NARGS_BITS DUK__NARGS_BITS63332,2200589
#define DUK__PROP_TYPE_BITS DUK__PROP_TYPE_BITS63333,2200632
#define DUK__NARGS_VARARGS_MARKER DUK__NARGS_VARARGS_MARKER63335,2200676
#define DUK__PROP_TYPE_DOUBLE DUK__PROP_TYPE_DOUBLE63337,2200723
#define DUK__PROP_TYPE_STRING DUK__PROP_TYPE_STRING63338,2200766
#define DUK__PROP_TYPE_STRIDX DUK__PROP_TYPE_STRIDX63339,2200809
#define DUK__PROP_TYPE_BUILTIN DUK__PROP_TYPE_BUILTIN63340,2200852
#define DUK__PROP_TYPE_UNDEFINED DUK__PROP_TYPE_UNDEFINED63341,2200895
#define DUK__PROP_TYPE_BOOLEAN_TRUE DUK__PROP_TYPE_BOOLEAN_TRUE63342,2200938
#define DUK__PROP_TYPE_BOOLEAN_FALSE DUK__PROP_TYPE_BOOLEAN_FALSE63343,2200981
#define DUK__PROP_TYPE_ACCESSOR DUK__PROP_TYPE_ACCESSOR63344,2201024
DUK_LOCAL void duk__duplicate_ram_global_object(duk_hthread *thr) {duk__duplicate_ram_global_object63353,2201276
DUK_INTERNAL void duk_hthread_create_builtin_objects(duk_hthread *thr) {duk_hthread_create_builtin_objects63447,2205399
DUK_LOCAL void duk__push_stridx(duk_hthread *thr, duk_bitdecoder_ctx *bd) {duk__push_stridx63470,2206192
DUK_LOCAL void duk__push_string(duk_hthread *thr, duk_bitdecoder_ctx *bd) {duk__push_string63478,2206461
DUK_LOCAL void duk__push_stridx_or_string(duk_hthread *thr, duk_bitdecoder_ctx *bd) {duk__push_stridx_or_string63488,2206851
DUK_LOCAL void duk__push_double(duk_hthread *thr, duk_bitdecoder_ctx *bd) {duk__push_double63500,2207151
DUK_INTERNAL void duk_hthread_create_builtin_objects(duk_hthread *thr) {duk_hthread_create_builtin_objects63514,2207541
DUK_INTERNAL void duk_hthread_copy_builtin_objects(duk_hthread *thr_from, duk_hthread *thr_to) {duk_hthread_copy_builtin_objects64181,2230636
DUK_INTERNAL void duk_hthread_terminate(duk_hthread *thr) {duk_hthread_terminate64211,2231457
DUK_INTERNAL duk_uint_fast32_t duk_hthread_get_act_curr_pc(duk_hthread *thr, duk_activation *actduk_hthread_get_act_curr_pc64236,2232230
DUK_INTERNAL duk_uint_fast32_t duk_hthread_get_act_prev_pc(duk_hthread *thr, duk_activation *actduk_hthread_get_act_prev_pc64252,2232735
DUK_INTERNAL void duk_hthread_sync_currpc(duk_hthread *thr) {duk_hthread_sync_currpc64272,2233279
DUK_INTERNAL void duk_hthread_sync_and_null_currpc(duk_hthread *thr) {duk_hthread_sync_and_null_currpc64287,2233670
DUK_INTERNAL void duk_hthread_catcher_unwind_norz(duk_hthread *thr, duk_activation *act) {duk_hthread_catcher_unwind_norz64315,2234493
DUK_INTERNAL void duk_hthread_catcher_unwind_nolexenv_norz(duk_hthread *thr, duk_activation *actduk_hthread_catcher_unwind_nolexenv_norz64345,2235588
duk_catcher *duk__hthread_catcher_alloc_slow(duk_hthread *thr) {duk__hthread_catcher_alloc_slow64366,2236137
DUK_INTERNAL DUK_INLINE duk_catcher *duk_hthread_catcher_alloc(duk_hthread *thr) {duk_hthread_catcher_alloc64375,2236367
DUK_INTERNAL duk_catcher *duk_hthread_catcher_alloc(duk_hthread *thr) {duk_hthread_catcher_alloc64389,2236703
DUK_INTERNAL void duk_hthread_catcher_free(duk_hthread *thr, duk_catcher *cat) {duk_hthread_catcher_free64394,2236860
duk_activation *duk__hthread_activation_alloc_slow(duk_hthread *thr) {duk__hthread_activation_alloc_slow64411,2237286
DUK_INTERNAL DUK_INLINE duk_activation *duk_hthread_activation_alloc(duk_hthread *thr) {duk_hthread_activation_alloc64420,2237534
DUK_INTERNAL duk_activation *duk_hthread_activation_alloc(duk_hthread *thr) {duk_hthread_activation_alloc64434,2237891
DUK_INTERNAL void duk_hthread_activation_free(duk_hthread *thr, duk_activation *act) {duk_hthread_activation_free64440,2238061
DUK_LOCAL void duk__activation_unwind_nofree_norz(duk_hthread *thr) {duk__activation_unwind_nofree_norz64456,2238587
DUK_INTERNAL void duk_hthread_activation_unwind_norz(duk_hthread *thr) {duk_hthread_activation_unwind_norz64616,2243537
DUK_INTERNAL void duk_hthread_activation_unwind_reuse_norz(duk_hthread *thr) {duk_hthread_activation_unwind_reuse_norz64641,2244348
DUK_INTERNAL duk_activation *duk_hthread_get_activation_for_level(duk_hthread *thr, duk_int_t leduk_hthread_get_activation_for_level64650,2244779
DUK_INTERNAL void duk_hthread_valstack_torture_realloc(duk_hthread *thr) {duk_hthread_valstack_torture_realloc64671,2245157
DUK_INTERNAL double duk_js_arith_mod(double d1, double d2) {duk_js_arith_mod64721,2247157
DUK_INTERNAL double duk_js_arith_pow(double x, double y) {duk_js_arith_pow64770,2249486
DUK_INTERNAL void duk_native_stack_check(duk_hthread *thr) {duk_native_stack_check64887,2253162
#define DUK__AUGMENT_CALL_RELAX_COUNT DUK__AUGMENT_CALL_RELAX_COUNT64902,2253626
#define DUK__CALL_HANDLING_REQUIRE_STACK DUK__CALL_HANDLING_REQUIRE_STACK64905,2253726
DUK_LOCAL DUK_NOINLINE void duk__call_c_recursion_limit_check_slowpath(duk_hthread *thr) {duk__call_c_recursion_limit_check_slowpath64907,2253771
DUK_LOCAL DUK_ALWAYS_INLINE void duk__call_c_recursion_limit_check(duk_hthread *thr) {duk__call_c_recursion_limit_check64925,2254487
DUK_LOCAL DUK_NOINLINE void duk__call_callstack_limit_check_slowpath(duk_hthread *thr) {duk__call_callstack_limit_check_slowpath64941,2255022
DUK_LOCAL DUK_ALWAYS_INLINE void duk__call_callstack_limit_check(duk_hthread *thr) {duk__call_callstack_limit_check64963,2255912
DUK_LOCAL void duk__interrupt_fixup(duk_hthread *thr, duk_hthread *entry_curr_thread) {duk__interrupt_fixup64979,2256383
DUK_LOCAL void duk__create_arguments_object(duk_hthread *thr,duk__create_arguments_object65018,2257832
DUK_LOCAL void duk__handle_createargs_for_call(duk_hthread *thr,duk__handle_createargs_for_call65272,2267233
DUK_LOCAL void duk__update_default_instance_proto(duk_hthread *thr, duk_idx_t idx_func) {duk__update_default_instance_proto65333,2269798
DUK_INTERNAL void duk_call_construct_postprocess(duk_hthread *thr, duk_small_uint_t proxy_invariduk_call_construct_postprocess65358,2270804
DUK_LOCAL void duk__handle_bound_chain_for_call(duk_hthread *thr,duk__handle_bound_chain_for_call65410,2272948
DUK_LOCAL duk_bool_t duk__handle_specialfuncs_for_call(duk_hthread *thr, duk_idx_t idx_func, dukduk__handle_specialfuncs_for_call65502,2275787
DUK_LOCAL void duk__handle_proxy_for_call(duk_hthread *thr, duk_idx_t idx_func, duk_hproxy *h_prduk__handle_proxy_for_call65711,2283238
DUK_LOCAL void duk__handle_oldenv_for_call(duk_hthread *thr,duk__handle_oldenv_for_call65823,2286977
DUK_LOCAL void duk__update_func_caller_prop(duk_hthread *thr, duk_hobject *func) {duk__update_func_caller_prop65854,2287918
DUK_LOCAL DUK_INLINE void duk__coerce_nonstrict_this_binding(duk_hthread *thr, duk_idx_t idx_thiduk__coerce_nonstrict_this_binding65965,2291803
DUK_LOCAL DUK_ALWAYS_INLINE duk_bool_t duk__resolve_target_fastpath_check(duk_hthread *thr, duk_duk__resolve_target_fastpath_check66005,2293485
DUK_LOCAL duk_hobject *duk__resolve_target_func_and_this_binding(duk_hthread *thr,duk__resolve_target_func_and_this_binding66050,2294738
DUK_LOCAL void duk__safe_call_adjust_valstack(duk_hthread *thr, duk_idx_t idx_retbase, duk_idx_tduk__safe_call_adjust_valstack66243,2301080
DUK_LOCAL duk_small_uint_t duk__call_setup_act_attempt_tailcall(duk_hthread *thr,duk__call_setup_act_attempt_tailcall66307,2303551
DUK_LOCAL void duk__call_setup_act_not_tailcall(duk_hthread *thr,duk__call_setup_act_not_tailcall66530,2312606
DUK_LOCAL void duk__call_env_setup(duk_hthread *thr, duk_hobject *func, duk_activation *act, dukduk__call_env_setup66681,2318297
DUK_LOCAL void duk__call_thread_state_update(duk_hthread *thr) {duk__call_thread_state_update66744,2320354
DUK_LOCAL duk_int_t duk__handle_call_raw(duk_hthread *thr,duk__handle_call_raw66795,2322149
DUK_INTERNAL duk_int_t duk_handle_call_unprotected_nargs(duk_hthread *thr,duk_handle_call_unprotected_nargs67255,2339029
DUK_INTERNAL duk_int_t duk_handle_call_unprotected(duk_hthread *thr,duk_handle_call_unprotected67265,2339470
DUK_LOCAL void duk__handle_safe_call_inner(duk_hthread *thr,duk__handle_safe_call_inner67290,2340461
DUK_LOCAL void duk__handle_safe_call_error(duk_hthread *thr,duk__handle_safe_call_error67350,2342394
DUK_LOCAL void duk__handle_safe_call_shared_unwind(duk_hthread *thr,duk__handle_safe_call_shared_unwind67444,2345942
DUK_INTERNAL duk_int_t duk_handle_safe_call(duk_hthread *thr,duk_handle_safe_call67481,2347356
DUK_INTERNAL DUK_NOINLINE DUK_COLD void duk_call_setup_propcall_error(duk_hthread *thr, duk_tvalduk_call_setup_propcall_error67720,2357289
#define DUK__CONST_MARKER DUK__CONST_MARKER67823,2361470
#define DUK__REMOVECONST(DUK__REMOVECONST67824,2361540
#define DUK__ISREG(DUK__ISREG67825,2361611
#define DUK__ISCONST(DUK__ISCONST67826,2361666
#define DUK__ISREG_TEMP(DUK__ISREG_TEMP67827,2361720
#define DUK__ISREG_NOTTEMP(DUK__ISREG_NOTTEMP67828,2361904
#define DUK__GETTEMP(DUK__GETTEMP67829,2362092
#define DUK__SETTEMP(DUK__SETTEMP67830,2362170
#define DUK__SETTEMP_CHECKMAX(DUK__SETTEMP_CHECKMAX67831,2362311
#define DUK__ALLOCTEMP(DUK__ALLOCTEMP67832,2362393
#define DUK__ALLOCTEMPS(DUK__ALLOCTEMPS67833,2362464
#define DUK__MAX_ARRAY_INIT_VALUES DUK__MAX_ARRAY_INIT_VALUES67836,2362602
#define DUK__MAX_OBJECT_INIT_PAIRS DUK__MAX_OBJECT_INIT_PAIRS67837,2362647
#define DUK__GETCONST_MAX_CONSTS_CHECK DUK__GETCONST_MAX_CONSTS_CHECK67840,2362747
#define DUK__MAX_CONSTS DUK__MAX_CONSTS67845,2362920
#define DUK__MAX_FUNCS DUK__MAX_FUNCS67846,2362976
#define DUK__MAX_TEMPS DUK__MAX_TEMPS67847,2363032
#define DUK__BC_INITIAL_INSTS DUK__BC_INITIAL_INSTS67851,2363156
#define DUK__BC_INITIAL_INSTS DUK__BC_INITIAL_INSTS67853,2363207
#define DUK__RECURSION_INCREASE(DUK__RECURSION_INCREASE67856,2363261
#define DUK__RECURSION_DECREASE(DUK__RECURSION_DECREASE67861,2363486
#define DUK__COMPILE_ENTRY_SLOTS DUK__COMPILE_ENTRY_SLOTS67869,2363853
#define DUK__FUNCTION_INIT_REQUIRE_SLOTS DUK__FUNCTION_INIT_REQUIRE_SLOTS67870,2363897
#define DUK__FUNCTION_BODY_REQUIRE_SLOTS DUK__FUNCTION_BODY_REQUIRE_SLOTS67871,2363942
#define DUK__PARSE_STATEMENTS_SLOTS DUK__PARSE_STATEMENTS_SLOTS67872,2363987
#define DUK__PARSE_EXPR_SLOTS DUK__PARSE_EXPR_SLOTS67873,2364032
typedef struct {__anonffb0efc1110867878,2364171
	duk_small_uint_t flags;flags67879,2364188
	duk_compiler_ctx comp_ctx_alloc;comp_ctx_alloc67880,2364213
	duk_lexer_point lex_pt_alloc;lex_pt_alloc67881,2364247
} duk__compiler_stkstate;duk__compiler_stkstate67882,2364278
#define DUK__FUNC_FLAG_DECL DUK__FUNC_FLAG_DECL68031,2375460
#define DUK__FUNC_FLAG_GETSET DUK__FUNC_FLAG_GETSET68032,2375548
#define DUK__FUNC_FLAG_METDEF DUK__FUNC_FLAG_METDEF68033,2375645
#define DUK__FUNC_FLAG_PUSHNAME_PASS1 DUK__FUNC_FLAG_PUSHNAME_PASS168034,2375756
#define DUK__FUNC_FLAG_USE_PREVTOKEN DUK__FUNC_FLAG_USE_PREVTOKEN68035,2375873
#define DUK__BP_INVALID DUK__BP_INVALID68052,2376620
#define DUK__BP_EOF DUK__BP_EOF68053,2376703
#define DUK__BP_CLOSING DUK__BP_CLOSING68054,2376744
#define DUK__BP_FOR_EXPR DUK__BP_FOR_EXPR68055,2376842
#define DUK__BP_COMMA DUK__BP_COMMA68056,2376952
#define DUK__BP_ASSIGNMENT DUK__BP_ASSIGNMENT68057,2376993
#define DUK__BP_CONDITIONAL DUK__BP_CONDITIONAL68058,2377034
#define DUK__BP_LOR DUK__BP_LOR68059,2377076
#define DUK__BP_LAND DUK__BP_LAND68060,2377118
#define DUK__BP_BOR DUK__BP_BOR68061,2377160
#define DUK__BP_BXOR DUK__BP_BXOR68062,2377202
#define DUK__BP_BAND DUK__BP_BAND68063,2377244
#define DUK__BP_EQUALITY DUK__BP_EQUALITY68064,2377286
#define DUK__BP_RELATIONAL DUK__BP_RELATIONAL68065,2377328
#define DUK__BP_SHIFT DUK__BP_SHIFT68066,2377370
#define DUK__BP_ADDITIVE DUK__BP_ADDITIVE68067,2377412
#define DUK__BP_MULTIPLICATIVE DUK__BP_MULTIPLICATIVE68068,2377454
#define DUK__BP_EXPONENTIATION DUK__BP_EXPONENTIATION68069,2377496
#define DUK__BP_POSTFIX DUK__BP_POSTFIX68070,2377538
#define DUK__BP_CALL DUK__BP_CALL68071,2377580
#define DUK__BP_MEMBER DUK__BP_MEMBER68072,2377622
#define DUK__TOKEN_LBP_BP_MASK DUK__TOKEN_LBP_BP_MASK68074,2377665
#define DUK__TOKEN_LBP_FLAG_NO_REGEXP DUK__TOKEN_LBP_FLAG_NO_REGEXP68075,2377709
#define DUK__TOKEN_LBP_FLAG_TERMINATES DUK__TOKEN_LBP_FLAG_TERMINATES68076,2377807
#define DUK__TOKEN_LBP_FLAG_UNUSED DUK__TOKEN_LBP_FLAG_UNUSED68077,2377917
#define DUK__TOKEN_LBP_GET_BP(DUK__TOKEN_LBP_GET_BP68079,2377981
#define DUK__MK_LBP(DUK__MK_LBP68081,2378079
#define DUK__MK_LBP_FLAGS(DUK__MK_LBP_FLAGS68082,2378164
DUK_LOCAL const duk_uint8_t duk__token_lbp[] = {duk__token_lbp68084,2378228
DUK_LOCAL void duk__comp_recursion_increase(duk_compiler_ctx *comp_ctx) {duk__comp_recursion_increase68193,2386533
DUK_LOCAL void duk__comp_recursion_decrease(duk_compiler_ctx *comp_ctx) {duk__comp_recursion_decrease68203,2386878
DUK_LOCAL duk_bool_t duk__hstring_is_eval_or_arguments(duk_compiler_ctx *comp_ctx, duk_hstring *duk__hstring_is_eval_or_arguments68209,2387060
DUK_LOCAL duk_bool_t duk__hstring_is_eval_or_arguments_in_strict_mode(duk_compiler_ctx *comp_ctxduk__hstring_is_eval_or_arguments_in_strict_mode68215,2387256
DUK_LOCAL void duk__advance_helper(duk_compiler_ctx *comp_ctx, duk_small_int_t expect) {duk__advance_helper68229,2387664
DUK_LOCAL void duk__advance_expect(duk_compiler_ctx *comp_ctx, duk_small_int_t expect) {duk__advance_expect68293,2390397
DUK_LOCAL void duk__advance(duk_compiler_ctx *comp_ctx) {duk__advance68298,2390610
DUK_LOCAL void duk__init_func_valstack_slots(duk_compiler_ctx *comp_ctx) {duk__init_func_valstack_slots68307,2390804
DUK_LOCAL void duk__reset_func_for_pass2(duk_compiler_ctx *comp_ctx) {duk__reset_func_for_pass268370,2392912
DUK_LOCAL duk_int_t duk__cleanup_varmap(duk_compiler_ctx *comp_ctx) {duk__cleanup_varmap68397,2393881
DUK_LOCAL void duk__convert_to_func_template(duk_compiler_ctx *comp_ctx) {duk__convert_to_func_template68447,2395309
#define DUK__EMIT_FLAG_NO_SHUFFLE_A DUK__EMIT_FLAG_NO_SHUFFLE_A68874,2410944
#define DUK__EMIT_FLAG_NO_SHUFFLE_B DUK__EMIT_FLAG_NO_SHUFFLE_B68875,2410994
#define DUK__EMIT_FLAG_NO_SHUFFLE_C DUK__EMIT_FLAG_NO_SHUFFLE_C68876,2411044
#define DUK__EMIT_FLAG_A_IS_SOURCE DUK__EMIT_FLAG_A_IS_SOURCE68877,2411095
#define DUK__EMIT_FLAG_B_IS_TARGET DUK__EMIT_FLAG_B_IS_TARGET68878,2411190
#define DUK__EMIT_FLAG_C_IS_TARGET DUK__EMIT_FLAG_C_IS_TARGET68879,2411285
#define DUK__EMIT_FLAG_BC_REGCONST DUK__EMIT_FLAG_BC_REGCONST68880,2411380
#define DUK__EMIT_FLAG_RESERVE_JUMPSLOT DUK__EMIT_FLAG_RESERVE_JUMPSLOT68881,2411466
DUK_LOCAL duk_int_t duk__get_current_pc(duk_compiler_ctx *comp_ctx) {duk__get_current_pc68884,2411634
DUK_LOCAL duk_compiler_instr *duk__get_instr_ptr(duk_compiler_ctx *comp_ctx, duk_int_t pc) {duk__get_instr_ptr68890,2411862
DUK_LOCAL void duk__emit(duk_compiler_ctx *comp_ctx, duk_instr_t ins) {duk__emit68899,2412321
DUK_LOCAL void duk__update_lineinfo_currtoken(duk_compiler_ctx *comp_ctx) {duk__update_lineinfo_currtoken68973,2414910
DUK_LOCAL void duk__emit_op_only(duk_compiler_ctx *comp_ctx, duk_small_uint_t op) {duk__emit_op_only68992,2415324
DUK_LOCAL void duk__emit_a_b_c(duk_compiler_ctx *comp_ctx, duk_small_uint_t op_flags, duk_regconduk__emit_a_b_c68997,2415488
DUK_LOCAL void duk__emit_a_b(duk_compiler_ctx *comp_ctx, duk_small_uint_t op_flags, duk_regconstduk__emit_a_b69262,2424779
DUK_LOCAL void duk__emit_b_c(duk_compiler_ctx *comp_ctx, duk_small_uint_t op_flags, duk_regconstduk__emit_b_c69269,2425037
DUK_LOCAL void duk__emit_a_bc(duk_compiler_ctx *comp_ctx, duk_small_uint_t op_flags, duk_regconsduk__emit_a_bc69294,2425861
DUK_LOCAL void duk__emit_bc(duk_compiler_ctx *comp_ctx, duk_small_uint_t op, duk_regconst_t bc) duk__emit_bc69352,2427659
DUK_LOCAL void duk__emit_abc(duk_compiler_ctx *comp_ctx, duk_small_uint_t op, duk_regconst_t abcduk__emit_abc69359,2427878
DUK_LOCAL void duk__emit_load_int32_raw(duk_compiler_ctx *comp_ctx, duk_regconst_t reg, duk_int3duk__emit_load_int32_raw69387,2428825
DUK_LOCAL void duk__emit_load_int32(duk_compiler_ctx *comp_ctx, duk_regconst_t reg, duk_int32_t duk__emit_load_int3269408,2430025
DUK_LOCAL void duk__emit_load_int32_noshuffle(duk_compiler_ctx *comp_ctx, duk_regconst_t reg, duduk__emit_load_int32_noshuffle69416,2430350
DUK_LOCAL void duk__emit_load_int32_noshuffle(duk_compiler_ctx *comp_ctx, duk_regconst_t reg, duduk__emit_load_int32_noshuffle69420,2430560
DUK_LOCAL void duk__emit_jump(duk_compiler_ctx *comp_ctx, duk_int_t target_pc) {duk__emit_jump69429,2430861
DUK_LOCAL duk_int_t duk__emit_jump_empty(duk_compiler_ctx *comp_ctx) {duk__emit_jump_empty69440,2431361
DUK_LOCAL void duk__insert_jump_entry(duk_compiler_ctx *comp_ctx, duk_int_t jump_pc) {duk__insert_jump_entry69451,2431703
DUK_LOCAL void duk__patch_jump(duk_compiler_ctx *comp_ctx, duk_int_t jump_pc, duk_int_t target_pduk__patch_jump69488,2432995
DUK_LOCAL void duk__patch_jump_here(duk_compiler_ctx *comp_ctx, duk_int_t jump_pc) {duk__patch_jump_here69512,2433788
DUK_LOCAL void duk__patch_trycatch(duk_compiler_ctx *comp_ctx, duk_int_t ldconst_pc, duk_int_t tduk__patch_trycatch69516,2433944
DUK_LOCAL void duk__emit_if_false_skip(duk_compiler_ctx *comp_ctx, duk_regconst_t regconst) {duk__emit_if_false_skip69555,2435660
DUK_LOCAL void duk__emit_if_true_skip(duk_compiler_ctx *comp_ctx, duk_regconst_t regconst) {duk__emit_if_true_skip69562,2435922
DUK_LOCAL void duk__emit_invalid(duk_compiler_ctx *comp_ctx) {duk__emit_invalid69569,2436181
DUK_LOCAL void duk__peephole_optimize_bytecode(duk_compiler_ctx *comp_ctx) {duk__peephole_optimize_bytecode69580,2436491
#define DUK__IVAL_FLAG_ALLOW_CONST DUK__IVAL_FLAG_ALLOW_CONST69651,2438776
#define DUK__IVAL_FLAG_REQUIRE_TEMP DUK__IVAL_FLAG_REQUIRE_TEMP69652,2438868
#define DUK__IVAL_FLAG_REQUIRE_SHORT DUK__IVAL_FLAG_REQUIRE_SHORT69653,2438994
#define DUK__DUMP_ISPEC(DUK__DUMP_ISPEC69677,2440379
#define DUK__DUMP_IVALUE(DUK__DUMP_IVALUE69678,2440431
DUK_LOCAL void duk__ivalue_regconst(duk_ivalue *x, duk_regconst_t regconst) {duk__ivalue_regconst69681,2440492
DUK_LOCAL void duk__ivalue_plain_fromstack(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_plain_fromstack69687,2440656
DUK_LOCAL void duk__ivalue_var_fromstack(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_var_fromstack69693,2440848
DUK_LOCAL_DECL void duk__ivalue_var_hstring(duk_compiler_ctx *comp_ctx, duk_ivalue *x, duk_hstriduk__ivalue_var_hstring69699,2441036
DUK_LOCAL void duk__copy_ispec(duk_compiler_ctx *comp_ctx, duk_ispec *src, duk_ispec *dst) {duk__copy_ispec69705,2441246
DUK_LOCAL void duk__copy_ivalue(duk_compiler_ctx *comp_ctx, duk_ivalue *src, duk_ivalue *dst) {duk__copy_ivalue69711,2441456
DUK_LOCAL duk_regconst_t duk__alloctemps(duk_compiler_ctx *comp_ctx, duk_small_int_t num) {duk__alloctemps69722,2441857
DUK_LOCAL duk_regconst_t duk__alloctemp(duk_compiler_ctx *comp_ctx) {duk__alloctemp69741,2442457
DUK_LOCAL void duk__settemp_checkmax(duk_compiler_ctx *comp_ctx, duk_regconst_t temp_next) {duk__settemp_checkmax69745,2442568
DUK_LOCAL duk_regconst_t duk__getconst(duk_compiler_ctx *comp_ctx) {duk__getconst69753,2442846
DUK_LOCAL duk_bool_t duk__const_needs_refcount(duk_compiler_ctx *comp_ctx, duk_regconst_t rc) {duk__const_needs_refcount69799,2444464
duk_regconst_t duk__ispec_toregconst_raw(duk_compiler_ctx *comp_ctx,duk__ispec_toregconst_raw69834,2445727
DUK_LOCAL void duk__ispec_toforcedreg(duk_compiler_ctx *comp_ctx, duk_ispec *x, duk_regconst_t fduk__ispec_toforcedreg70006,2450960
DUK_LOCAL void duk__ivalue_toplain_raw(duk_compiler_ctx *comp_ctx, duk_ivalue *x, duk_regconst_tduk__ivalue_toplain_raw70016,2451408
DUK_LOCAL void duk__ivalue_toplain(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_toplain70208,2457380
DUK_LOCAL void duk__ivalue_toplain_ignore(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_toplain_ignore70213,2457597
duk_regconst_t duk__ivalue_toregconst_raw(duk_compiler_ctx *comp_ctx,duk__ivalue_toregconst_raw70231,2458135
DUK_LOCAL duk_regconst_t duk__ivalue_toreg(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_toreg70263,2459600
DUK_LOCAL void duk__ivalue_toforcedreg(duk_compiler_ctx *comp_ctx, duk_ivalue *x, duk_int_t forcduk__ivalue_toforcedreg70273,2459968
DUK_LOCAL duk_regconst_t duk__ivalue_toregconst(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_toregconst70278,2460181
DUK_LOCAL duk_regconst_t duk__ivalue_totempconst(duk_compiler_ctx *comp_ctx, duk_ivalue *x) {duk__ivalue_totempconst70282,2460368
DUK_LOCAL duk_regconst_t duk__lookup_active_register_binding(duk_compiler_ctx *comp_ctx) {duk__lookup_active_register_binding70298,2460926
DUK_LOCAL duk_bool_t duk__lookup_lhs(duk_compiler_ctx *comp_ctx, duk_regconst_t *out_reg_varbindduk__lookup_lhs70379,2463626
DUK_LOCAL void duk__add_label(duk_compiler_ctx *comp_ctx, duk_hstring *h_label, duk_int_t pc_labduk__add_label70410,2464535
DUK_LOCAL void duk__update_label_flags(duk_compiler_ctx *comp_ctx, duk_int_t label_id, duk_smallduk__update_label_flags70474,2467159
DUK_LOCAL void duk__lookup_active_label(duk_compiler_ctx *comp_ctx, duk_hstring *h_label, duk_boduk__lookup_active_label70515,2469039
DUK_LOCAL void duk__reset_labels_to_length(duk_compiler_ctx *comp_ctx, duk_size_t len) {duk__reset_labels_to_length70589,2471762
#define DUK__OBJ_LIT_KEY_PLAIN DUK__OBJ_LIT_KEY_PLAIN70605,2472488
#define DUK__OBJ_LIT_KEY_GET DUK__OBJ_LIT_KEY_GET70606,2472572
#define DUK__OBJ_LIT_KEY_SET DUK__OBJ_LIT_KEY_SET70607,2472648
DUK_LOCAL void duk__nud_array_literal(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__nud_array_literal70609,2472725
typedef struct {__anonffb0efc1120870769,2477981
	duk_regconst_t reg_obj;reg_obj70770,2477998
	duk_regconst_t temp_start;temp_start70771,2478023
	duk_small_uint_t num_pairs;num_pairs70772,2478051
	duk_small_uint_t num_total_pairs;num_total_pairs70773,2478080
} duk__objlit_state;duk__objlit_state70774,2478115
DUK_LOCAL void duk__objlit_flush_keys(duk_compiler_ctx *comp_ctx, duk__objlit_state *st) {duk__objlit_flush_keys70776,2478137
DUK_LOCAL duk_bool_t duk__objlit_load_key(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_tokenduk__objlit_load_key70800,2479078
DUK_LOCAL void duk__nud_object_literal(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__nud_object_literal70819,2479789
DUK_LOCAL duk_int_t duk__parse_arguments(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_arguments71057,2488492
DUK_LOCAL duk_bool_t duk__expr_is_empty(duk_compiler_ctx *comp_ctx) {duk__expr_is_empty71101,2489936
DUK_LOCAL void duk__expr_nud(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__expr_nud71107,2490177
DUK_LOCAL void duk__expr_led(duk_compiler_ctx *comp_ctx, duk_ivalue *left, duk_ivalue *res) {duk__expr_led71643,2507039
DUK_LOCAL duk_small_uint_t duk__expr_lbp(duk_compiler_ctx *comp_ctx) {duk__expr_lbp72618,2540089
#define DUK__EXPR_RBP_MASK DUK__EXPR_RBP_MASK72657,2541383
#define DUK__EXPR_FLAG_REJECT_IN DUK__EXPR_FLAG_REJECT_IN72658,2541425
#define DUK__EXPR_FLAG_ALLOW_EMPTY DUK__EXPR_FLAG_ALLOW_EMPTY72659,2541515
#define DUK__EXPR_FLAG_REQUIRE_INIT DUK__EXPR_FLAG_REQUIRE_INIT72660,2541592
DUK_LOCAL void duk__expr(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uint_t rbp_flagsduk__expr72663,2541719
DUK_LOCAL void duk__exprtop(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uint_t rbp_flduk__exprtop72723,2543734
DUK_LOCAL void duk__expr_toforcedreg(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uintduk__expr_toforcedreg72763,2545116
DUK_LOCAL duk_regconst_t duk__expr_toregconst(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_sduk__expr_toregconst72769,2545379
DUK_LOCAL void duk__expr_toplain(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uint_t rduk__expr_toplain72781,2545826
DUK_LOCAL void duk__expr_toplain_ignore(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uduk__expr_toplain_ignore72786,2546012
DUK_LOCAL duk_regconst_t duk__exprtop_toreg(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_smaduk__exprtop_toreg72791,2546212
DUK_LOCAL void duk__exprtop_toforcedreg(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uduk__exprtop_toforcedreg72803,2546651
DUK_LOCAL duk_regconst_t duk__exprtop_toregconst(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duduk__exprtop_toregconst72809,2546920
#define DUK__HAS_VAL DUK__HAS_VAL72833,2547844
#define DUK__HAS_TERM DUK__HAS_TERM72834,2547923
#define DUK__ALLOW_AUTO_SEMI_ALWAYS DUK__ALLOW_AUTO_SEMI_ALWAYS72835,2548025
#define DUK__STILL_PROLOGUE DUK__STILL_PROLOGUE72836,2548143
#define DUK__IS_TERMINAL DUK__IS_TERMINAL72837,2548245
DUK_LOCAL void duk__parse_var_decl(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uint_tduk__parse_var_decl72857,2549154
DUK_LOCAL void duk__parse_var_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_small_uint_tduk__parse_var_stmt72935,2551673
DUK_LOCAL void duk__parse_for_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_int_t pc_labduk__parse_for_stmt72952,2552126
DUK_LOCAL void duk__parse_switch_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_int_t pc_duk__parse_switch_stmt73309,2565508
DUK_LOCAL void duk__parse_if_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_if_stmt73510,2572321
DUK_LOCAL void duk__parse_do_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_int_t pc_labeduk__parse_do_stmt73558,2573796
DUK_LOCAL void duk__parse_while_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_int_t pc_lduk__parse_while_stmt73586,2574845
DUK_LOCAL void duk__parse_break_or_continue_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_break_or_continue_stmt73620,2575987
DUK_LOCAL void duk__parse_return_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_return_stmt73676,2578717
DUK_LOCAL void duk__parse_throw_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_throw_stmt73780,2582752
DUK_LOCAL void duk__parse_try_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_try_stmt73798,2583270
DUK_LOCAL void duk__parse_with_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res) {duk__parse_with_stmt74032,2591295
DUK_LOCAL duk_int_t duk__stmt_label_site(duk_compiler_ctx *comp_ctx, duk_int_t label_id) {duk__stmt_label_site74073,2592647
DUK_LOCAL void duk__parse_stmt(duk_compiler_ctx *comp_ctx, duk_ivalue *res, duk_bool_t allow_souduk__parse_stmt74096,2593349
DUK_LOCAL void duk__parse_stmts(duk_compiler_ctx *comp_ctx, duk_bool_t allow_source_elem, duk_boduk__parse_stmts74618,2611331
DUK_LOCAL void duk__init_varmap_and_prologue_for_pass2(duk_compiler_ctx *comp_ctx, duk_regconst_duk__init_varmap_and_prologue_for_pass274714,2614781
DUK_LOCAL void duk__parse_func_body(duk_compiler_ctx *comp_ctx, duk_bool_t expect_eof, duk_bool_duk__parse_func_body75039,2625576
DUK_LOCAL void duk__parse_func_formals(duk_compiler_ctx *comp_ctx) {duk__parse_func_formals75319,2634287
DUK_LOCAL void duk__parse_func_like_raw(duk_compiler_ctx *comp_ctx, duk_small_uint_t flags) {duk__parse_func_like_raw75367,2635890
DUK_LOCAL duk_int_t duk__parse_func_like_fnum(duk_compiler_ctx *comp_ctx, duk_small_uint_t flagsduk__parse_func_like_fnum75490,2640276
DUK_LOCAL duk_ret_t duk__js_compile_raw(duk_hthread *thr, void *udata) {duk__js_compile_raw75628,2645497
DUK_INTERNAL void duk_js_compile(duk_hthread *thr, const duk_uint8_t *src_buffer, duk_size_t srcduk_js_compile75778,2650067
#define DUK__REPLACE_TO_TVPTR(DUK__REPLACE_TO_TVPTR75914,2653946
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF duk_double_t duk__compute_mod(duk_double_t d1, duk_double_duk__compute_mod75962,2655527
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF duk_double_t duk__compute_exp(duk_double_t d1, duk_double_duk__compute_exp75967,2655739
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_arith_add(duk_hthread *thr, duk_tval *tv_x, dduk__vm_arith_add75972,2655920
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_arith_binary_op(duk_hthread *thr, duk_tval *tduk__vm_arith_binary_op76079,2659377
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_bitwise_binary_op(duk_hthread *thr, duk_tval duk__vm_bitwise_binary_op76237,2663795
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_arith_unary_op(duk_hthread *thr, duk_uint_fasduk__vm_arith_unary_op76365,2667586
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_bitwise_not(duk_hthread *thr, duk_uint_fast_tduk__vm_bitwise_not76442,2669955
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__vm_logical_not(duk_hthread *thr, duk_uint_fast_tduk__vm_logical_not76476,2670870
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__prepost_incdec_reg_helper(duk_hthread *thr, duk_duk__prepost_incdec_reg_helper76504,2671861
DUK_LOCAL DUK_EXEC_ALWAYS_INLINE_PERF void duk__prepost_incdec_var_helper(duk_hthread *thr, duk_duk__prepost_incdec_var_helper76580,2673949
#define DUK__LONGJMP_RESTART DUK__LONGJMP_RESTART76652,2676465
#define DUK__LONGJMP_RETHROW DUK__LONGJMP_RETHROW76653,2676547
#define DUK__RETHAND_RESTART DUK__RETHAND_RESTART76655,2676644
#define DUK__RETHAND_FINISHED DUK__RETHAND_FINISHED76656,2676726
DUK_LOCAL void duk__reconfig_valstack_ecma_return(duk_hthread *thr) {duk__reconfig_valstack_ecma_return76665,2677036
DUK_LOCAL void duk__reconfig_valstack_ecma_catcher(duk_hthread *thr, duk_activation *act) {duk__reconfig_valstack_ecma_catcher76697,2678299
DUK_LOCAL void duk__set_catcher_regs_norz(duk_hthread *thr, duk_catcher *cat, duk_tval *tv_val_uduk__set_catcher_regs_norz76727,2679451
DUK_LOCAL void duk__handle_catch_part1(duk_hthread *thr, duk_tval *tv_val_unstable, duk_small_uiduk__handle_catch_part176743,2679971
DUK_LOCAL void duk__handle_catch_part2(duk_hthread *thr) {duk__handle_catch_part276801,2681907
DUK_LOCAL void duk__handle_finally(duk_hthread *thr, duk_tval *tv_val_unstable, duk_small_uint_tduk__handle_finally76881,2684663
DUK_LOCAL void duk__handle_label(duk_hthread *thr, duk_small_uint_t lj_type) {duk__handle_label76916,2685712
DUK_LOCAL void duk__handle_yield(duk_hthread *thr, duk_hthread *resumer, duk_tval *tv_val_unstabduk__handle_yield76950,2686864
DUK_LOCAL duk_small_uint_t duk__handle_longjmp(duk_hthread *thr, duk_activation *entry_act, voladuk__handle_longjmp76971,2687762
DUK_LOCAL DUK_EXEC_NOINLINE_PERF void duk__handle_break_or_continue(duk_hthread *thr,duk__handle_break_or_continue77378,2703688
DUK_LOCAL duk_small_uint_t duk__handle_return(duk_hthread *thr, duk_activation *entry_act) {duk__handle_return77442,2705867
#define DUK__INT_NOACTION DUK__INT_NOACTION77639,2713741
#define DUK__INT_RESTART DUK__INT_RESTART77640,2713825
DUK_LOCAL void duk__interrupt_handle_debugger(duk_hthread *thr, duk_bool_t *out_immediate, duk_sduk__interrupt_handle_debugger77643,2713960
DUK_LOCAL DUK_EXEC_NOINLINE_PERF DUK_COLD duk_small_uint_t duk__executor_interrupt(duk_hthread *duk__executor_interrupt77831,2720611
DUK_LOCAL void duk__executor_recheck_debugger(duk_hthread *thr, duk_activation *act, duk_hcompfuduk__executor_recheck_debugger77956,2724839
DUK_LOCAL DUK_EXEC_NOINLINE_PERF void duk__handle_op_initset_initget(duk_hthread *thr, duk_uint_duk__handle_op_initset_initget78084,2729522
DUK_LOCAL DUK_EXEC_NOINLINE_PERF void duk__handle_op_trycatch(duk_hthread *thr, duk_uint_fast32_duk__handle_op_trycatch78117,2730740
DUK_LOCAL DUK_EXEC_NOINLINE_PERF duk_instr_t *duk__handle_op_endtry(duk_hthread *thr, duk_uint_fduk__handle_op_endtry78282,2737282
DUK_LOCAL DUK_EXEC_NOINLINE_PERF duk_instr_t *duk__handle_op_endcatch(duk_hthread *thr, duk_uintduk__handle_op_endcatch78326,2738752
DUK_LOCAL DUK_EXEC_NOINLINE_PERF duk_small_uint_t duk__handle_op_endfin(duk_hthread *thr, duk_uiduk__handle_op_endfin78387,2740726
DUK_LOCAL DUK_EXEC_NOINLINE_PERF void duk__handle_op_initenum(duk_hthread *thr, duk_uint_fast32_duk__handle_op_initenum78488,2744124
DUK_LOCAL DUK_EXEC_NOINLINE_PERF duk_small_uint_t duk__handle_op_nextenum(duk_hthread *thr, duk_duk__handle_op_nextenum78516,2744975
DUK_LOCAL duk_bool_t duk__executor_handle_call(duk_hthread *thr, duk_idx_t idx, duk_idx_t nargs,duk__executor_handle_call78566,2746602
#define DUK__FUN(DUK__FUN78623,2748832
#define DUK__FUN(DUK__FUN78625,2748870
#define DUK__STRICT(DUK__STRICT78629,2748985
#define DUK__REG(DUK__REG78635,2749266
#define DUK__REGP(DUK__REGP78636,2749326
#define DUK__CONST(DUK__CONST78637,2749383
#define DUK__CONSTP(DUK__CONSTP78638,2749429
#define DUK__RCBIT_B DUK__RCBIT_B78647,2749882
#define DUK__RCBIT_C DUK__RCBIT_C78648,2749931
#define DUK__TVAL_SHIFT DUK__TVAL_SHIFT78651,2750057
#define DUK__TVAL_SHIFT DUK__TVAL_SHIFT78653,2750125
#define DUK__SHIFT_A DUK__SHIFT_A78655,2750237
#define DUK__SHIFT_B DUK__SHIFT_B78656,2750303
#define DUK__SHIFT_C DUK__SHIFT_C78657,2750369
#define DUK__SHIFT_BC DUK__SHIFT_BC78658,2750435
#define DUK__MASK_A DUK__MASK_A78659,2750502
#define DUK__MASK_B DUK__MASK_B78660,2750578
#define DUK__MASK_C DUK__MASK_C78661,2750654
#define DUK__MASK_BC DUK__MASK_BC78662,2750730
#define DUK__BYTEOFF_A(DUK__BYTEOFF_A78663,2750807
#define DUK__BYTEOFF_B(DUK__BYTEOFF_B78664,2750878
#define DUK__BYTEOFF_C(DUK__BYTEOFF_C78665,2750949
#define DUK__BYTEOFF_BC(DUK__BYTEOFF_BC78666,2751020
#define DUK__REGP_A(DUK__REGP_A78668,2751094
#define DUK__REGP_B(DUK__REGP_B78669,2751212
#define DUK__REGP_C(DUK__REGP_C78670,2751330
#define DUK__REGP_BC(DUK__REGP_BC78671,2751448
#define DUK__CONSTP_A(DUK__CONSTP_A78672,2751567
#define DUK__CONSTP_B(DUK__CONSTP_B78673,2751671
#define DUK__CONSTP_C(DUK__CONSTP_C78674,2751775
#define DUK__CONSTP_BC(DUK__CONSTP_BC78675,2751879
#define DUK__REGCONSTP_B(DUK__REGCONSTP_B78676,2751984
#define DUK__REGCONSTP_C(DUK__REGCONSTP_C78677,2752138
#define DUK__REGP_A(DUK__REGP_A78680,2752396
#define DUK__REGP_B(DUK__REGP_B78681,2752455
#define DUK__REGP_C(DUK__REGP_C78682,2752514
#define DUK__REGP_BC(DUK__REGP_BC78683,2752573
#define DUK__CONSTP_A(DUK__CONSTP_A78684,2752633
#define DUK__CONSTP_B(DUK__CONSTP_B78685,2752694
#define DUK__CONSTP_C(DUK__CONSTP_C78686,2752755
#define DUK__CONSTP_BC(DUK__CONSTP_BC78687,2752816
#define DUK__REGCONSTP_B(DUK__REGCONSTP_B78688,2752878
#define DUK__REGCONSTP_C(DUK__REGCONSTP_C78689,2752987
#define DUK__INTERNAL_ERROR(DUK__INTERNAL_ERROR78693,2753187
#define DUK__INTERNAL_ERROR(DUK__INTERNAL_ERROR78698,2753310
#define DUK__SYNC_CURR_PC(DUK__SYNC_CURR_PC78703,2753397
#define DUK__SYNC_AND_NULL_CURR_PC(DUK__SYNC_AND_NULL_CURR_PC78708,2753545
#define DUK__LOOKUP_INDIRECT(DUK__LOOKUP_INDIRECT78716,2753770
#define DUK__LOOKUP_INDIRECT(DUK__LOOKUP_INDIRECT78720,2753923
#define DUK__LOOKUP_INDIRECT(DUK__LOOKUP_INDIRECT78728,2754216
DUK_LOCAL void duk__handle_executor_error(duk_heap *heap,duk__handle_executor_error78736,2754430
DUK_INTERNAL void duk_js_execute_bytecode(duk_hthread *exec_thr) {duk_js_execute_bytecode78791,2756596
DUK_LOCAL DUK_NOINLINE DUK_HOT void duk__js_execute_bytecode_inner(duk_hthread *entry_thread, duduk__js_execute_bytecode_inner78922,2761088
#define DUK__REPLACE_TOP_A_BREAK(DUK__REPLACE_TOP_A_BREAK79186,2770693
#define DUK__REPLACE_TOP_BC_BREAK(DUK__REPLACE_TOP_BC_BREAK79187,2770752
#define DUK__REPLACE_BOOL_A_BREAK(DUK__REPLACE_BOOL_A_BREAK79188,2770813
#define DUK__EQ_BODY(DUK__EQ_BODY79449,2777933
#define DUK__NEQ_BODY(DUK__NEQ_BODY79455,2778112
#define DUK__SEQ_BODY(DUK__SEQ_BODY79462,2778306
#define DUK__SNEQ_BODY(DUK__SNEQ_BODY79468,2778488
#define DUK__COMPARE_BODY(DUK__COMPARE_BODY79531,2780657
#define DUK__GT_BODY(DUK__GT_BODY79537,2780864
#define DUK__GE_BODY(DUK__GE_BODY79538,2780933
#define DUK__LT_BODY(DUK__LT_BODY79539,2781059
#define DUK__LE_BODY(DUK__LE_BODY79540,2781159
#define DUK__INSTOF_BODY(DUK__INSTOF_BODY79893,2792441
#define DUK__IN_BODY(DUK__IN_BODY79899,2792628
#define DUK__GETPROP_BODY(DUK__GETPROP_BODY80073,2798132
#define DUK__GETPROPC_BODY(DUK__GETPROPC_BODY80081,2798381
#define DUK__PUTPROP_BODY(DUK__PUTPROP_BODY80096,2798953
#define DUK__DELPROP_BODY(DUK__DELPROP_BODY80107,2799305
#define DUK__RETURN_SHARED(DUK__RETURN_SHARED80386,2808327
DUK_INTERNAL duk_bool_t duk_js_toboolean(duk_tval *tv) {duk_js_toboolean81214,2832143
DUK_LOCAL duk_double_t duk__tonumber_string_raw(duk_hthread *thr) {duk__tonumber_string_raw81311,2834842
DUK_INTERNAL duk_double_t duk_js_tonumber(duk_hthread *thr, duk_tval *tv) {duk_js_tonumber81351,2836159
DUK_INTERNAL duk_double_t duk_js_tointeger_number(duk_double_t x) {duk_js_tointeger_number81428,2838065
DUK_INTERNAL duk_double_t duk_js_tointeger(duk_hthread *thr, duk_tval *tv) {duk_js_tointeger81458,2838834
DUK_LOCAL duk_double_t duk__toint32_touint32_helper(duk_double_t x, duk_bool_t is_toint32) {duk__toint32_touint32_helper81469,2839169
DUK_INTERNAL duk_int32_t duk_js_toint32(duk_hthread *thr, duk_tval *tv) {duk_js_toint3281510,2840134
DUK_INTERNAL duk_uint32_t duk_js_touint32(duk_hthread *thr, duk_tval *tv) {duk_js_touint3281528,2840725
DUK_INTERNAL duk_uint16_t duk_js_touint16(duk_hthread *thr, duk_tval *tv) {duk_js_touint1681546,2841310
DUK_LOCAL duk_bool_t duk__js_equals_number(duk_double_t x, duk_double_t y) {duk__js_equals_number81578,2842300
DUK_LOCAL duk_bool_t duk__js_samevalue_number(duk_double_t x, duk_double_t y) {duk__js_samevalue_number81616,2843624
DUK_INTERNAL duk_bool_t duk_js_equals_helper(duk_hthread *thr, duk_tval *tv_x, duk_tval *tv_y, dduk_js_equals_helper81681,2845836
DUK_INTERNAL duk_small_int_t duk_js_data_compare(const duk_uint8_t *buf1, const duk_uint8_t *bufduk_js_data_compare81882,2852265
DUK_INTERNAL duk_small_int_t duk_js_string_compare(duk_hstring *h1, duk_hstring *h2) {duk_js_string_compare81912,2852937
DUK_LOCAL duk_bool_t duk__compare_fastint(duk_bool_t retval, duk_int64_t v1, duk_int64_t v2) {duk__compare_fastint81951,2854425
DUK_LOCAL duk_bool_t duk__compare_number(duk_bool_t retval, duk_double_t d1, duk_double_t d2) {duk__compare_number81962,2854673
DUK_LOCAL duk_bool_t duk__compare_number(duk_bool_t retval, duk_double_t d1, duk_double_t d2) {duk__compare_number82013,2855863
DUK_INTERNAL duk_bool_t duk_js_compare_helper(duk_hthread *thr, duk_tval *tv_x, duk_tval *tv_y, duk_js_compare_helper82058,2857242
DUK_LOCAL duk_bool_t duk__js_instanceof_helper(duk_hthread *thr, duk_tval *tv_x, duk_tval *tv_y,duk__js_instanceof_helper82172,2860648
DUK_INTERNAL duk_bool_t duk_js_instanceof_ordinary(duk_hthread *thr, duk_tval *tv_x, duk_tval *tduk_js_instanceof_ordinary82364,2866098
DUK_INTERNAL duk_bool_t duk_js_instanceof(duk_hthread *thr, duk_tval *tv_x, duk_tval *tv_y) {duk_js_instanceof82369,2866285
DUK_INTERNAL duk_bool_t duk_js_in(duk_hthread *thr, duk_tval *tv_x, duk_tval *tv_y) {duk_js_in82383,2866583
DUK_INTERNAL duk_small_uint_t duk_js_typeof_stridx(duk_tval *tv_x) {duk_js_typeof_stridx82431,2868183
DUK_INTERNAL duk_bool_t duk_js_isarray_hobject(duk_hobject *h) {duk_js_isarray_hobject82508,2869847
DUK_INTERNAL duk_bool_t duk_js_isarray(duk_tval *tv) {duk_js_isarray82516,2870097
DUK_INTERNAL duk_uarridx_t duk_js_to_arrayindex_string(const duk_uint8_t *str, duk_uint32_t blenduk_js_to_arrayindex_string82534,2870521
DUK_INTERNAL duk_uarridx_t duk_js_to_arrayindex_hstring_fast_known(duk_hstring *h) {duk_js_to_arrayindex_hstring_fast_known82605,2872548
DUK_INTERNAL duk_uarridx_t duk_js_to_arrayindex_hstring_fast(duk_hstring *h) {duk_js_to_arrayindex_hstring_fast82627,2873090
typedef struct {__anonffb0efc1130882674,2875039
	duk_hobject *env;env82675,2875056
	duk_hobject *holder;      /* for object-bound identifiers */holder82676,2875075
	duk_tval *value;          /* for register-bound and declarative env identifiers */value82677,2875137
	duk_uint_t attrs;         /* property attributes for identifier (relevant if value != NULL) */attrs82678,2875221
	duk_bool_t has_this;      /* for object-bound identifiers: provide 'this' binding */has_this82679,2875317
} duk__id_lookup_result;duk__id_lookup_result82680,2875403
DUK_LOCAL void duk__inc_data_inner_refcounts(duk_hthread *thr, duk_hcompfunc *f) {duk__inc_data_inner_refcounts82708,2876648
DUK_LOCAL const duk_uint16_t duk__closure_copy_proplist[] = {duk__closure_copy_proplist82743,2877793
void duk_js_push_closure(duk_hthread *thr,duk_js_push_closure82759,2878181
DUK_LOCAL void duk__preallocate_env_entries(duk_hthread *thr, duk_hobject *varmap, duk_hobject *duk__preallocate_env_entries83141,2893332
duk_hobject *duk_create_activation_environment_record(duk_hthread *thr,duk_create_activation_environment_record83166,2894257
void duk_js_init_activation_environment_records_delayed(duk_hthread *thr,duk_js_init_activation_environment_records_delayed83226,2896152
DUK_INTERNAL void duk_js_close_environment_record(duk_hthread *thr, duk_hobject *env) {duk_js_close_environment_record83277,2897675
duk_bool_t duk__getid_open_decl_env_regs(duk_hthread *thr,duk__getid_open_decl_env_regs83404,2902929
duk_bool_t duk__getid_activation_regs(duk_hthread *thr,duk__getid_activation_regs83453,2904480
duk_bool_t duk__get_identifier_reference(duk_hthread *thr,duk__get_identifier_reference83502,2905744
duk_bool_t duk__getvar_helper(duk_hthread *thr,duk__getvar_helper83816,2916550
duk_bool_t duk_js_getvar_envrec(duk_hthread *thr,duk_js_getvar_envrec83880,2918345
duk_bool_t duk_js_getvar_activation(duk_hthread *thr,duk_js_getvar_activation83888,2918631
void duk__putvar_helper(duk_hthread *thr,duk__putvar_helper83912,2919474
void duk_js_putvar_envrec(duk_hthread *thr,duk_js_putvar_envrec84012,2922673
void duk_js_putvar_activation(duk_hthread *thr,duk_js_putvar_activation84021,2922966
duk_bool_t duk__delvar_helper(duk_hthread *thr,duk__delvar_helper84050,2924067
duk_bool_t duk_js_delvar_activation(duk_hthread *thr,duk_js_delvar_activation84106,2925795
duk_bool_t duk__declvar_helper(duk_hthread *thr,duk__declvar_helper84164,2928193
duk_bool_t duk_js_declvar_activation(duk_hthread *thr,duk_js_declvar_activation84392,2935964
#define DUK__MAX_RE_DECESC_DIGITS DUK__MAX_RE_DECESC_DIGITS84508,2941113
#define DUK__MAX_RE_QUANT_DIGITS DUK__MAX_RE_QUANT_DIGITS84509,2941153
#define DUK__ISDIGIT(DUK__ISDIGIT84512,2941343
#define DUK__ISHEXDIGIT(DUK__ISHEXDIGIT84513,2941415
#define DUK__ISOCTDIGIT(DUK__ISOCTDIGIT84514,2941471
#define DUK__ISDIGIT03(DUK__ISDIGIT0384515,2941543
#define DUK__ISDIGIT47(DUK__ISDIGIT4784516,2941615
#define DUK__LOOKUP(DUK__LOOKUP84519,2941725
#define DUK__ADVANCECHARS(DUK__ADVANCECHARS84520,2941806
#define DUK__ADVANCEBYTES(DUK__ADVANCEBYTES84521,2941889
#define DUK__INITBUFFER(DUK__INITBUFFER84522,2941972
#define DUK__APPENDBUFFER(DUK__APPENDBUFFER84523,2942043
#define DUK__APPENDBUFFER_ASCII(DUK__APPENDBUFFER_ASCII84524,2942139
#define DUK__L0(DUK__L084527,2942317
#define DUK__L1(DUK__L184528,2942360
#define DUK__L2(DUK__L284529,2942403
#define DUK__L3(DUK__L384530,2942446
#define DUK__L4(DUK__L484531,2942489
#define DUK__L5(DUK__L584532,2942532
#define DUK__ADVTOK(DUK__ADVTOK84535,2942643
DUK_LOCAL void duk__fill_lexer_buffer(duk_lexer_ctx *lex_ctx, duk_small_uint_t start_offset_byteduk__fill_lexer_buffer84607,2946037
DUK_LOCAL void duk__advance_bytes(duk_lexer_ctx *lex_ctx, duk_small_uint_t count_bytes) {duk__advance_bytes84748,2949702
DUK_LOCAL void duk__init_lexer_window(duk_lexer_ctx *lex_ctx) {duk__init_lexer_window84776,2951117
DUK_LOCAL duk_codepoint_t duk__read_char(duk_lexer_ctx *lex_ctx) {duk__read_char84781,2951298
DUK_LOCAL void duk__advance_bytes(duk_lexer_ctx *lex_ctx, duk_small_uint_t count_bytes) {duk__advance_bytes84909,2954489
DUK_LOCAL void duk__init_lexer_window(duk_lexer_ctx *lex_ctx) {duk__init_lexer_window84932,2955380
DUK_LOCAL void duk__advance_chars(duk_lexer_ctx *lex_ctx, duk_small_uint_t count_chars) {duk__advance_chars84938,2955666
DUK_LOCAL void duk__initbuffer(duk_lexer_ctx *lex_ctx) {duk__initbuffer84947,2955937
DUK_LOCAL void duk__appendbuffer(duk_lexer_ctx *lex_ctx, duk_codepoint_t x) {duk__appendbuffer84964,2956527
DUK_LOCAL void duk__appendbuffer_ascii(duk_lexer_ctx *lex_ctx, duk_codepoint_t x) {duk__appendbuffer_ascii84979,2957111
DUK_LOCAL duk_hstring *duk__internbuffer(duk_lexer_ctx *lex_ctx, duk_idx_t valstack_idx) {duk__internbuffer84993,2957518
DUK_INTERNAL void duk_lexer_initctx(duk_lexer_ctx *lex_ctx) {duk_lexer_initctx85005,2957880
DUK_INTERNAL void duk_lexer_getpoint(duk_lexer_ctx *lex_ctx, duk_lexer_point *pt) {duk_lexer_getpoint85023,2958275
DUK_INTERNAL void duk_lexer_setpoint(duk_lexer_ctx *lex_ctx, duk_lexer_point *pt) {duk_lexer_setpoint85028,2958440
DUK_LOCAL duk_codepoint_t duk__hexval_validate(duk_codepoint_t x) {duk__hexval_validate85043,2958850
DUK_LOCAL duk_codepoint_t duk__hexval(duk_codepoint_t x) {duk__hexval85060,2959215
DUK_LOCAL duk_bool_t duk__is_hex_digit(duk_codepoint_t x) {duk__is_hex_digit85072,2959607
DUK_LOCAL duk_codepoint_t duk__lexer_parse_escape(duk_lexer_ctx *lex_ctx, duk_bool_t allow_es6) duk__lexer_parse_escape85082,2959867
DUK_LOCAL duk_codepoint_t duk__lexer_parse_legacy_octal(duk_lexer_ctx *lex_ctx, duk_small_uint_tduk__lexer_parse_legacy_octal85181,2962714
DUK_LOCAL void duk__lexer_parse_string_literal(duk_lexer_ctx *lex_ctx, duk_token *out_token, dukduk__lexer_parse_string_literal85240,2964650
DUK_LOCAL void duk__lexer_skip_to_endofline(duk_lexer_ctx *lex_ctx) {duk__lexer_skip_to_endofline85378,2968536
void duk_lexer_parse_js_input_element(duk_lexer_ctx *lex_ctx,duk_lexer_parse_js_input_element85455,2971851
DUK_INTERNAL void duk_lexer_parse_re_token(duk_lexer_ctx *lex_ctx, duk_re_token *out_token) {duk_lexer_parse_re_token86258,2998154
void duk__emit_u16_direct_ranges(duk_lexer_ctx *lex_ctx,duk__emit_u16_direct_ranges86633,3009499
DUK_INTERNAL void duk_lexer_parse_re_ranges(duk_lexer_ctx *lex_ctx, duk_re_range_callback gen_raduk_lexer_parse_re_ranges86650,3010072
#define DUK__IEEE_DOUBLE_EXP_BIAS DUK__IEEE_DOUBLE_EXP_BIAS86906,3017761
#define DUK__IEEE_DOUBLE_EXP_MIN DUK__IEEE_DOUBLE_EXP_MIN86907,3017801
#define DUK__DIGITCHAR(DUK__DIGITCHAR86909,3017892
DUK_LOCAL const duk_uint8_t duk__str2num_digits_for_radix[] = {duk__str2num_digits_for_radix86926,3018580
typedef struct {__anonffb0efc1140886933,3018883
	duk_int16_t upper;upper86934,3018900
	duk_int16_t lower;lower86935,3018920
} duk__exp_limits;duk__exp_limits86936,3018940
DUK_LOCAL const duk__exp_limits duk__str2num_exp_limits[] = {duk__str2num_exp_limits86938,3018960
#define DUK__BI_MAX_PARTS DUK__BI_MAX_PARTS86965,3020175
#define DUK__BI_PRINT(DUK__BI_PRINT86968,3020294
#define DUK__BI_PRINT(DUK__BI_PRINT86970,3020357
typedef struct {__anonffb0efc1150886974,3020434
	duk_small_int_t n;n86975,3020451
	duk_uint32_t v[DUK__BI_MAX_PARTS];  /* low to high */v86976,3020471
} duk__bigint;duk__bigint86977,3020526
DUK_LOCAL void duk__bi_print(const char *name, duk__bigint *x) {duk__bi_print86980,3020605
DUK_LOCAL duk_small_int_t duk__bi_is_valid(duk__bigint *x) {duk__bi_is_valid87000,3021190
DUK_LOCAL void duk__bi_normalize(duk__bigint *x) {duk__bi_normalize87007,3021437
DUK_LOCAL void duk__bi_copy(duk__bigint *x, duk__bigint *y) {duk__bi_copy87022,3021698
DUK_LOCAL void duk__bi_set_small(duk__bigint *x, duk_uint32_t v) {duk__bi_set_small87031,3021940
DUK_LOCAL int duk__bi_compare(duk__bigint *x, duk__bigint *y) {duk__bi_compare87045,3022213
DUK_LOCAL void duk__bi_add(duk__bigint *x, duk__bigint *y, duk__bigint *z) {duk__bi_add87083,3022738
DUK_LOCAL void duk__bi_add(duk__bigint *x, duk__bigint *y, duk__bigint *z) {duk__bi_add87118,3023490
DUK_LOCAL void duk__bi_add_small(duk__bigint *x, duk__bigint *y, duk_uint32_t z) {duk__bi_add_small87171,3024667
DUK_LOCAL void duk__bi_sub(duk__bigint *x, duk__bigint *y, duk__bigint *z) {duk__bi_sub87193,3025248
DUK_LOCAL void duk__bi_sub(duk__bigint *x, duk__bigint *y, duk__bigint *z) {duk__bi_sub87223,3025966
DUK_LOCAL void duk__bi_sub_copy(duk__bigint *x, duk__bigint *y, duk__bigint *t) {duk__bi_sub_copy87281,3027328
DUK_LOCAL void duk__bi_mul(duk__bigint *x, duk__bigint *y, duk__bigint *z) {duk__bi_mul87287,3027474
DUK_LOCAL void duk__bi_mul_small(duk__bigint *x, duk__bigint *y, duk_uint32_t z) {duk__bi_mul_small87401,3030218
DUK_LOCAL void duk__bi_mul_copy(duk__bigint *x, duk__bigint *y, duk__bigint *t) {duk__bi_mul_copy87414,3030516
DUK_LOCAL void duk__bi_mul_small_copy(duk__bigint *x, duk_uint32_t y, duk__bigint *t) {duk__bi_mul_small_copy87420,3030677
DUK_LOCAL int duk__bi_is_even(duk__bigint *x) {duk__bi_is_even87425,3030818
DUK_LOCAL int duk__bi_is_zero(duk__bigint *x) {duk__bi_is_zero87430,3030951
DUK_LOCAL duk_small_int_t duk__bi_is_2to52(duk__bigint *x) {duk__bi_is_2to5287441,3031383
DUK_LOCAL void duk__bi_twoexp(duk__bigint *x, duk_small_int_t y) {duk__bi_twoexp87448,3031598
DUK_LOCAL void duk__bi_exp_small(duk__bigint *x, duk_small_int_t b, duk_small_int_t y, duk__bigiduk__bi_exp_small87460,3031900
#define DUK__MAX_OUTPUT_DIGITS DUK__MAX_OUTPUT_DIGITS87518,3033649
#define DUK__MAX_FORMATTED_LENGTH DUK__MAX_FORMATTED_LENGTH87521,3033812
#define DUK__NUMCONV_CTX_NUM_BIGINTS DUK__NUMCONV_CTX_NUM_BIGINTS87524,3033989
#define DUK__NUMCONV_CTX_BIGINTS_SIZE DUK__NUMCONV_CTX_BIGINTS_SIZE87525,3034031
typedef struct {__anonffb0efc1160887527,3034125
	duk__bigint f, r, s, mp, mm, t1, t2;f87533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;r87533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;s87533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;mp87533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;mm87533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;t187533,3034355
	duk__bigint f, r, s, mp, mm, t1, t2;t287533,3034355
	duk_small_int_t is_s2n;        /* if 1, doing a string-to-number; else doing a number-to-stringis_s2n87535,3034394
	duk_small_int_t is_fixed;      /* if 1, doing a fixed format output (not free format) */is_fixed87536,3034494
	duk_small_int_t req_digits;    /* requested number of output digits; 0 = free-format */req_digits87537,3034584
	duk_small_int_t abs_pos;       /* digit position is absolute, not relative */abs_pos87538,3034673
	duk_small_int_t e;             /* exponent for 'f' */e87539,3034752
	duk_small_int_t b;             /* input radix */b87540,3034807
	duk_small_int_t B;             /* output radix */B87541,3034857
	duk_small_int_t k;             /* see algorithm */k87542,3034908
	duk_small_int_t low_ok;        /* see algorithm */low_ok87543,3034960
	duk_small_int_t high_ok;       /* see algorithm */high_ok87544,3035012
	duk_small_int_t unequal_gaps;  /* m+ != m- (very rarely) */unequal_gaps87545,3035064
	duk_uint8_t digits[DUK__MAX_OUTPUT_DIGITS];digits87548,3035200
	duk_small_int_t count;  /* digit count */count87549,3035245
} duk__numconv_stringify_ctx;duk__numconv_stringify_ctx87550,3035288
#define DUK__DRAGON4_OUTPUT_PREINC(DUK__DRAGON4_OUTPUT_PREINC87556,3035486
DUK_LOCAL duk_size_t duk__dragon4_format_uint32(duk_uint8_t *buf, duk_uint32_t x, duk_small_int_duk__dragon4_format_uint3287562,3035724
DUK_LOCAL void duk__dragon4_prepare(duk__numconv_stringify_ctx *nc_ctx) {duk__dragon4_prepare87596,3036514
DUK_LOCAL void duk__dragon4_scale(duk__numconv_stringify_ctx *nc_ctx) {duk__dragon4_scale87738,3041739
DUK_LOCAL void duk__dragon4_generate(duk__numconv_stringify_ctx *nc_ctx) {duk__dragon4_generate87843,3045312
DUK_LOCAL duk_small_int_t duk__dragon4_fixed_format_round(duk__numconv_stringify_ctx *nc_ctx, duduk__dragon4_fixed_format_round88018,3051773
#define DUK__NO_EXP DUK__NO_EXP88087,3054065
DUK_LOCAL void duk__dragon4_convert_and_push(duk__numconv_stringify_ctx *nc_ctx,duk__dragon4_convert_and_push88089,3054144
DUK_LOCAL void duk__dragon4_double_to_ctx(duk__numconv_stringify_ctx *nc_ctx, duk_double_t x) {duk__dragon4_double_to_ctx88237,3059252
DUK_LOCAL void duk__dragon4_ctx_to_double(duk__numconv_stringify_ctx *nc_ctx, duk_double_t *x) {duk__dragon4_ctx_to_double88282,3060449
DUK_LOCAL DUK_NOINLINE void duk__numconv_stringify_raw(duk_hthread *thr, duk_small_int_t radix, duk__numconv_stringify_raw88431,3064943
DUK_INTERNAL void duk_numconv_stringify(duk_hthread *thr, duk_small_int_t radix, duk_small_int_tduk_numconv_stringify88624,3070762
DUK_LOCAL DUK_NOINLINE void duk__numconv_parse_raw(duk_hthread *thr, duk_small_int_t radix, duk_duk__numconv_parse_raw88639,3071217
DUK_INTERNAL void duk_numconv_parse(duk_hthread *thr, duk_small_int_t radix, duk_small_uint_t flduk_numconv_parse89168,3088518
#define DUK__RE_INITIAL_BUFSIZE DUK__RE_INITIAL_BUFSIZE89214,3090041
#define DUK__RE_BUFLEN(DUK__RE_BUFLEN89216,3090077
typedef struct {__anonffb0efc1170889223,3090218
	duk_int32_t charlen;charlen89228,3090401
} duk__re_disjunction_info;duk__re_disjunction_info89243,3090839
DUK_LOCAL duk_uint32_t duk__encode_i32(duk_int32_t x) {duk__encode_i3289258,3091284
DUK_LOCAL duk_uint32_t duk__insert_u32(duk_re_compiler_ctx *re_ctx, duk_uint32_t offset, duk_uinduk__insert_u3289269,3091549
DUK_LOCAL void duk__append_u32(duk_re_compiler_ctx *re_ctx, duk_uint32_t x) {duk__append_u3289279,3091927
DUK_LOCAL void duk__append_7bit(duk_re_compiler_ctx *re_ctx, duk_uint32_t x) {duk__append_7bit89283,3092065
DUK_LOCAL duk_uint32_t duk__insert_i32(duk_re_compiler_ctx *re_ctx, duk_uint32_t offset, duk_intduk__insert_i3289298,3092485
DUK_LOCAL void duk__append_reop(duk_re_compiler_ctx *re_ctx, duk_uint32_t reop) {duk__append_reop89302,3092655
DUK_LOCAL void duk__append_u16_list(duk_re_compiler_ctx *re_ctx, const duk_uint16_t *values, dukduk__append_u16_list89314,3093059
DUK_LOCAL void duk__insert_slice(duk_re_compiler_ctx *re_ctx, duk_uint32_t offset, duk_uint32_t duk__insert_slice89321,3093330
DUK_LOCAL void duk__append_slice(duk_re_compiler_ctx *re_ctx, duk_uint32_t data_offset, duk_uintduk__append_slice89325,3093559
DUK_LOCAL void duk__remove_slice(duk_re_compiler_ctx *re_ctx, duk_uint32_t data_offset, duk_uintduk__remove_slice89329,3093758
DUK_LOCAL duk_uint32_t duk__insert_jump_offset(duk_re_compiler_ctx *re_ctx, duk_uint32_t offset,duk__insert_jump_offset89346,3094557
DUK_LOCAL duk_uint32_t duk__append_jump_offset(duk_re_compiler_ctx *re_ctx, duk_int32_t skip) {duk__append_jump_offset89410,3096065
DUK_LOCAL void duk__regexp_emit_range(duk_re_compiler_ctx *re_ctx, duk_codepoint_t r1, duk_codepduk__regexp_emit_range89491,3100391
DUK_LOCAL duk_codepoint_t duk__re_canon_next_discontinuity(duk_codepoint_t start, duk_codepoint_duk__re_canon_next_discontinuity89503,3100899
DUK_LOCAL duk_codepoint_t duk__re_canon_next_discontinuity(duk_codepoint_t start, duk_codepoint_duk__re_canon_next_discontinuity89542,3102166
DUK_LOCAL void duk__regexp_generate_ranges(void *userdata, duk_codepoint_t r1, duk_codepoint_t rduk__regexp_generate_ranges89554,3102510
DUK_LOCAL const duk_uint16_t * const duk__re_range_lookup1[3] = {duk__re_range_lookup189676,3107072
DUK_LOCAL const duk_uint8_t duk__re_range_lookup2[3] = {duk__re_range_lookup289681,3107233
DUK_LOCAL void duk__append_range_atom_matcher(duk_re_compiler_ctx *re_ctx, duk_small_uint_t re_oduk__append_range_atom_matcher89687,3107497
DUK_LOCAL void duk__parse_disjunction(duk_re_compiler_ctx *re_ctx, duk_bool_t expect_eof, duk__rduk__parse_disjunction89698,3107915
DUK_LOCAL duk_uint32_t duk__parse_regexp_flags(duk_hthread *thr, duk_hstring *h) {duk__parse_regexp_flags90188,3127151
DUK_LOCAL void duk__create_escaped_source(duk_hthread *thr, int idx_pattern) {duk__create_escaped_source90255,3128932
DUK_INTERNAL void duk_regexp_compile(duk_hthread *thr) {duk_regexp_compile90316,3130629
DUK_INTERNAL void duk_regexp_create_instance(duk_hthread *thr) {duk_regexp_create_instance90435,3134108
DUK_LOCAL duk_uint32_t duk__bc_get_u32(duk_re_matcher_ctx *re_ctx, const duk_uint8_t **pc) {duk__bc_get_u3290505,3136120
DUK_LOCAL duk_int32_t duk__bc_get_i32(duk_re_matcher_ctx *re_ctx, const duk_uint8_t **pc) {duk__bc_get_i3290509,3136330
DUK_LOCAL const duk_uint8_t *duk__utf8_backtrack(duk_hthread *thr, const duk_uint8_t **ptr, consduk__utf8_backtrack90521,3136707
DUK_LOCAL const duk_uint8_t *duk__utf8_advance(duk_hthread *thr, const duk_uint8_t **ptr, const duk__utf8_advance90551,3137323
DUK_LOCAL duk_codepoint_t duk__inp_get_cp(duk_re_matcher_ctx *re_ctx, const duk_uint8_t **sp) {duk__inp_get_cp90590,3138283
DUK_LOCAL const duk_uint8_t *duk__inp_backtrack(duk_re_matcher_ctx *re_ctx, const duk_uint8_t **duk__inp_backtrack90603,3138691
DUK_LOCAL duk_codepoint_t duk__inp_get_prev_cp(duk_re_matcher_ctx *re_ctx, const duk_uint8_t *spduk__inp_get_prev_cp90608,3138991
DUK_LOCAL const duk_uint8_t *duk__match_regexp(duk_re_matcher_ctx *re_ctx, const duk_uint8_t *pcduk__match_regexp90625,3139592
DUK_LOCAL void duk__regexp_match_helper(duk_hthread *thr, duk_small_int_t force_global) {duk__regexp_match_helper91163,3156008
DUK_INTERNAL void duk_regexp_match(duk_hthread *thr) {duk_regexp_match91489,3167395
DUK_INTERNAL void duk_regexp_match_force_global(duk_hthread *thr) {duk_regexp_match_force_global91496,3167661
typedef union {__anonffb0efc1180a91519,3168200
	double d;d91520,3168216
	duk_uint8_t x[8];x91521,3168227
} duk__test_double_union;duk__test_double_union91522,3168246
#define DUK__FAILED(DUK__FAILED91525,3168347
#define DUK__DBLUNION_CMP_TRUE(DUK__DBLUNION_CMP_TRUE91530,3168525
#define DUK__DBLUNION_CMP_FALSE(DUK__DBLUNION_CMP_FALSE91536,3168753
typedef union {__anonffb0efc1190a91542,3168982
	duk_uint32_t i;i91543,3168998
	duk_uint8_t x[8];x91544,3169015
} duk__test_u32_union;duk__test_u32_union91545,3169034
#define DUK__U32_INIT(DUK__U32_INIT91548,3169090
#define DUK__U32_INIT(DUK__U32_INIT91554,3169333
#define DUK__DOUBLE_INIT(DUK__DOUBLE_INIT91562,3169541
#define DUK__DOUBLE_COMPARE(DUK__DOUBLE_COMPARE91566,3169757
#define DUK__DOUBLE_INIT(DUK__DOUBLE_INIT91570,3170011
#define DUK__DOUBLE_COMPARE(DUK__DOUBLE_COMPARE91574,3170227
#define DUK__DOUBLE_INIT(DUK__DOUBLE_INIT91578,3170481
#define DUK__DOUBLE_COMPARE(DUK__DOUBLE_COMPARE91582,3170697
DUK_LOCAL duk_uint_t duk__selftest_types(void) {duk__selftest_types91593,3171010
DUK_LOCAL duk_uint_t duk__selftest_packed_tval(void) {duk__selftest_packed_tval91628,3171858
DUK_LOCAL duk_uint_t duk__selftest_twos_complement(void) {duk__selftest_twos_complement91644,3172143
DUK_LOCAL duk_uint_t duk__selftest_byte_order(void) {duk__selftest_byte_order91665,3172688
DUK_LOCAL duk_uint_t duk__selftest_bswap_macros(void) {duk__selftest_bswap_macros91693,3173264
DUK_LOCAL duk_uint_t duk__selftest_double_union_size(void) {duk__selftest_double_union_size91787,3175785
DUK_LOCAL duk_uint_t duk__selftest_double_aliasing(void) {duk__selftest_double_aliasing91801,3176040
DUK_LOCAL duk_uint_t duk__selftest_double_zero_sign(void) {duk__selftest_double_zero_sign91842,3177213
DUK_LOCAL duk_uint_t duk__selftest_double_rounding(void) {duk__selftest_double_rounding91860,3177697
DUK_LOCAL duk_uint_t duk__selftest_fmod(void) {duk__selftest_fmod91931,3180547
DUK_LOCAL duk_uint_t duk__selftest_struct_align(void) {duk__selftest_struct_align91990,3182106
DUK_LOCAL duk_uint_t duk__selftest_64bit_arithmetic(void) {duk__selftest_64bit_arithmetic92016,3182741
DUK_LOCAL duk_uint_t duk__selftest_cast_double_to_small_uint(void) {duk__selftest_cast_double_to_small_uint92038,3183195
DUK_LOCAL duk_uint_t duk__selftest_cast_double_to_uint32(void) {duk__selftest_cast_double_to_uint3292074,3184031
DUK_LOCAL duk_uint_t duk__selftest_alloc_funcs(duk_alloc_function alloc_func,duk__selftest_alloc_funcs92105,3184777
DUK_INTERNAL duk_uint_t duk_selftest_run_tests(duk_alloc_function alloc_func,duk_selftest_run_tests92154,3186127
DUK_INTERNAL DUK_ALWAYS_INLINE void duk_tval_set_number_chkfast_fast(duk_tval *tv, duk_double_t duk_tval_set_number_chkfast_fast92214,3188452
DUK_INTERNAL DUK_NOINLINE void duk_tval_set_number_chkfast_slow(duk_tval *tv, duk_double_t x) {duk_tval_set_number_chkfast_slow92257,3189650
DUK_INTERNAL DUK_ALWAYS_INLINE duk_double_t duk_tval_get_number_packed(duk_tval *tv) {duk_tval_get_number_packed92266,3189911
DUK_INTERNAL DUK_ALWAYS_INLINE duk_double_t duk_tval_get_number_unpacked_fastint(duk_tval *tv) {duk_tval_get_number_unpacked_fastint92316,3191615
DUK_INTERNAL void duk_tval_assert_valid(duk_tval *tv) {duk_tval_assert_valid92341,3192292
const duk_uint8_t duk_unicode_ids_noa[1116] = {duk_unicode_ids_noa92371,3193200
const duk_uint8_t duk_unicode_ids_noabmp[625] = {duk_unicode_ids_noabmp92430,3197154
const duk_uint8_t duk_unicode_ids_m_let_noa[42] = {duk_unicode_ids_m_let_noa92469,3199470
const duk_uint8_t duk_unicode_ids_m_let_noabmp[24] = {duk_unicode_ids_m_let_noabmp92480,3199857
const duk_uint8_t duk_unicode_idp_m_ids_noa[576] = {duk_unicode_idp_m_ids_noa92493,3200217
const duk_uint8_t duk_unicode_idp_m_ids_noabmp[358] = {duk_unicode_idp_m_ids_noabmp92530,3202504
const duk_uint8_t duk_unicode_caseconv_uc[1411] = {duk_unicode_caseconv_uc92562,3204043
const duk_uint8_t duk_unicode_caseconv_lc[706] = {duk_unicode_caseconv_lc92628,3208847
const duk_uint16_t duk_unicode_re_canon_lookup[65536] = {duk_unicode_re_canon_lookup92669,3211409
const duk_uint8_t duk_unicode_re_canon_bitmap[256] = {duk_unicode_re_canon_bitmap98504,3632116
DUK_INTERNAL duk_uint32_t duk_bd_decode(duk_bitdecoder_ctx *ctx, duk_small_int_t bits) {duk_bd_decode98532,3633507
DUK_INTERNAL duk_small_uint_t duk_bd_decode_flag(duk_bitdecoder_ctx *ctx) {duk_bd_decode_flag98577,3634945
DUK_INTERNAL duk_uint32_t duk_bd_decode_flagged(duk_bitdecoder_ctx *ctx, duk_small_int_t bits, dduk_bd_decode_flagged98584,3635177
DUK_INTERNAL duk_int32_t duk_bd_decode_flagged_signed(duk_bitdecoder_ctx *ctx, duk_small_int_t bduk_bd_decode_flagged_signed98593,3635453
DUK_INTERNAL duk_uint32_t duk_bd_decode_varuint(duk_bitdecoder_ctx *ctx) {duk_bd_decode_varuint98598,3635733
#define DUK__BITPACK_LETTER_LIMIT DUK__BITPACK_LETTER_LIMIT98625,3636503
#define DUK__BITPACK_LOOKUP1 DUK__BITPACK_LOOKUP198626,3636541
#define DUK__BITPACK_LOOKUP2 DUK__BITPACK_LOOKUP298627,3636579
#define DUK__BITPACK_SWITCH1 DUK__BITPACK_SWITCH198628,3636617
#define DUK__BITPACK_SWITCH DUK__BITPACK_SWITCH98629,3636655
#define DUK__BITPACK_UNUSED1 DUK__BITPACK_UNUSED198630,3636693
#define DUK__BITPACK_EIGHTBIT DUK__BITPACK_EIGHTBIT98631,3636731
DUK_LOCAL const duk_uint8_t duk__bitpacked_lookup[16] = {duk__bitpacked_lookup98633,3636770
DUK_INTERNAL duk_small_uint_t duk_bd_decode_bitpacked_string(duk_bitdecoder_ctx *bd, duk_uint8_tduk_bd_decode_bitpacked_string98640,3637029
DUK_INTERNAL void duk_be_encode(duk_bitencoder_ctx *ctx, duk_uint32_t data, duk_small_int_t bitsduk_be_encode98695,3638547
DUK_INTERNAL void duk_be_finish(duk_bitencoder_ctx *ctx) {duk_be_finish98720,3639205
DUK_LOCAL void duk__bw_update_ptrs(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx, duk_size_t curr_duk__bw_update_ptrs98747,3639808
DUK_INTERNAL void duk_bw_init(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx, duk_hbuffer_dynamic *duk_bw_init98764,3640437
DUK_INTERNAL void duk_bw_init_pushbuf(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx, duk_size_t buduk_bw_init_pushbuf98773,3640726
DUK_INTERNAL duk_uint8_t *duk_bw_resize(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx, duk_size_t duk_bw_resize98786,3641215
DUK_INTERNAL void duk_bw_compact(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx) {duk_bw_compact98824,3642507
DUK_INTERNAL void duk_bw_write_raw_slice(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_t srcduk_bw_write_raw_slice98836,3642820
DUK_INTERNAL void duk_bw_write_ensure_slice(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_t duk_bw_write_ensure_slice98853,3643347
DUK_INTERNAL void duk_bw_insert_raw_bytes(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_t dsduk_bw_insert_raw_bytes98864,3643755
DUK_INTERNAL void duk_bw_insert_ensure_bytes(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_tduk_bw_insert_ensure_bytes98888,3644576
DUK_INTERNAL void duk_bw_insert_raw_slice(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_t dsduk_bw_insert_raw_slice98898,3644939
DUK_INTERNAL void duk_bw_insert_ensure_slice(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_tduk_bw_insert_ensure_slice98935,3646136
DUK_INTERNAL duk_uint8_t *duk_bw_insert_raw_area(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_siduk_bw_insert_raw_area98950,3646732
DUK_INTERNAL duk_uint8_t *duk_bw_insert_ensure_area(duk_hthread *thr, duk_bufwriter_ctx *bw, dukduk_bw_insert_ensure_area98968,3647315
DUK_INTERNAL void duk_bw_remove_raw_slice(duk_hthread *thr, duk_bufwriter_ctx *bw, duk_size_t ofduk_bw_remove_raw_slice98977,3647624
DUK_INTERNAL void duk_bw_assert_valid(duk_hthread *thr, duk_bufwriter_ctx *bw_ctx) {duk_bw_assert_valid99006,3648346
#define DUK__DOUBLE_INT_CAST1(DUK__DOUBLE_INT_CAST199039,3649666
#define DUK__DOUBLE_INT_CAST2(DUK__DOUBLE_INT_CAST299060,3650352
#define DUK__DOUBLE_INT_CAST3(DUK__DOUBLE_INT_CAST399065,3650610
#define DUK__DOUBLE_INT_CAST4(DUK__DOUBLE_INT_CAST499081,3651280
DUK_INTERNAL duk_int_t duk_double_to_int_t(duk_double_t x) {duk_double_to_int_t99085,3651445
DUK_INTERNAL duk_uint_t duk_double_to_uint_t(duk_double_t x) {duk_double_to_uint_t99096,3651797
DUK_INTERNAL duk_int32_t duk_double_to_int32_t(duk_double_t x) {duk_double_to_int32_t99104,3652010
DUK_INTERNAL duk_uint32_t duk_double_to_uint32_t(duk_double_t x) {duk_double_to_uint32_t99112,3652229
#define DUK__FLOAT_ROUND_LIMIT DUK__FLOAT_ROUND_LIMIT99125,3652725
#define DUK__FLOAT_MAX DUK__FLOAT_MAX99130,3652936
DUK_INTERNAL duk_float_t duk_double_to_float_t(duk_double_t x) {duk_double_to_float_t99132,3653015
DUK_INTERNAL duk_bool_t duk_double_is_anyinf(duk_double_t x) {duk_double_is_anyinf99195,3654877
DUK_INTERNAL duk_bool_t duk_double_is_posinf(duk_double_t x) {duk_double_is_posinf99201,3655013
DUK_INTERNAL duk_bool_t duk_double_is_neginf(duk_double_t x) {duk_double_is_neginf99207,3655149
DUK_INTERNAL duk_bool_t duk_double_is_nan(duk_double_t x) {duk_double_is_nan99213,3655285
DUK_INTERNAL duk_bool_t duk_double_is_nan_or_zero(duk_double_t x) {duk_double_is_nan_or_zero99223,3655573
DUK_INTERNAL duk_bool_t duk_double_is_nan_or_inf(duk_double_t x) {duk_double_is_nan_or_inf99233,3655901
DUK_INTERNAL duk_bool_t duk_double_is_nan_zero_inf(duk_double_t x) {duk_double_is_nan_zero_inf99250,3656508
DUK_INTERNAL duk_small_uint_t duk_double_signbit(duk_double_t x) {duk_double_signbit99290,3657495
DUK_INTERNAL duk_double_t duk_double_trunc_towards_zero(duk_double_t x) {duk_double_trunc_towards_zero99296,3657656
DUK_INTERNAL duk_bool_t duk_double_same_sign(duk_double_t x, duk_double_t y) {duk_double_same_sign99306,3657891
DUK_INTERNAL duk_double_t duk_double_fmin(duk_double_t x, duk_double_t y) {duk_double_fmin99315,3658129
DUK_INTERNAL duk_double_t duk_double_fmax(duk_double_t x, duk_double_t y) {duk_double_fmax99324,3658449
DUK_INTERNAL duk_bool_t duk_double_is_finite(duk_double_t x) {duk_double_is_finite99333,3658769
DUK_INTERNAL duk_bool_t duk_double_is_integer(duk_double_t x) {duk_double_is_integer99337,3658873
DUK_INTERNAL duk_bool_t duk_double_is_safe_integer(duk_double_t x) {duk_double_is_safe_integer99345,3659060
DUK_INTERNAL duk_bool_t duk_is_whole_get_int32_nonegzero(duk_double_t x, duk_int32_t *ival) {duk_is_whole_get_int32_nonegzero99357,3659494
DUK_INTERNAL duk_bool_t duk_is_whole_get_int32(duk_double_t x, duk_int32_t *ival) {duk_is_whole_get_int3299378,3659945
DUK_INTERNAL DUK_INLINE duk_double_t duk_double_div(duk_double_t x, duk_double_t y) {duk_double_div99393,3660295
DUK_INTERNAL DUK_INLINE void duk_dblunion_host_to_little(duk_double_union *u) {duk_dblunion_host_to_little99426,3661102
DUK_INTERNAL DUK_INLINE void duk_dblunion_little_to_host(duk_double_union *u) {duk_dblunion_little_to_host99455,3661685
DUK_INTERNAL DUK_INLINE void duk_dblunion_host_to_big(duk_double_union *u) {duk_dblunion_host_to_big99459,3661801
DUK_INTERNAL DUK_INLINE void duk_dblunion_big_to_host(duk_double_union *u) {duk_dblunion_big_to_host99488,3662407
DUK_INTERNAL DUK_INLINE void duk_fltunion_host_to_big(duk_float_union *u) {duk_fltunion_host_to_big99492,3662517
DUK_INTERNAL DUK_INLINE void duk_fltunion_big_to_host(duk_float_union *u) {duk_fltunion_big_to_host99504,3662815
DUK_INTERNAL DUK_ALWAYS_INLINE duk_bool_t duk_double_equals(duk_double_t x, duk_double_t y) {duk_double_equals99520,3663375
DUK_INTERNAL DUK_ALWAYS_INLINE duk_bool_t duk_float_equals(duk_float_t x, duk_float_t y) {duk_float_equals99524,3663488
#define DUK__MAGIC_M DUK__MAGIC_M99546,3664077
#define DUK__MAGIC_R DUK__MAGIC_R99547,3664129
DUK_INTERNAL duk_uint32_t duk_util_hashbytes(const duk_uint8_t *data, duk_size_t len, duk_uint32duk_util_hashbytes99549,3664155
DUK_INTERNAL DUK_INLINE duk_small_int_t duk_memcmp_unsafe(const void *s1, const void *s2, duk_siduk_memcmp_unsafe99602,3665486
DUK_INTERNAL DUK_INLINE duk_small_int_t duk_memcmp(const void *s1, const void *s2, duk_size_t leduk_memcmp99608,3665715
DUK_INTERNAL DUK_INLINE duk_small_int_t duk_memcmp_unsafe(const void *s1, const void *s2, duk_siduk_memcmp_unsafe99614,3665956
DUK_INTERNAL DUK_INLINE duk_small_int_t duk_memcmp(const void *s1, const void *s2, duk_size_t leduk_memcmp99625,3666273
#define DUK__RANDOM_SHAMIR3OPDUK__RANDOM_SHAMIR3OP99649,3667153
#define DUK__RANDOM_XOROSHIRO128PLUSDUK__RANDOM_XOROSHIRO128PLUS99651,3667189
#define DUK__UPDATE_RND(DUK__UPDATE_RND99655,3667269
#define DUK__RND_BIT(DUK__RND_BIT99660,3667456
DUK_INTERNAL void duk_util_tinyrandom_prepare_seed(duk_hthread *thr) {duk_util_tinyrandom_prepare_seed99662,3667530
DUK_INTERNAL duk_double_t duk_util_tinyrandom_get_double(duk_hthread *thr) {duk_util_tinyrandom_get_double99666,3667641
DUK_LOCAL DUK_ALWAYS_INLINE duk_uint64_t duk__rnd_splitmix64(duk_uint64_t *x) {duk__rnd_splitmix6499692,3668150
DUK_LOCAL DUK_ALWAYS_INLINE duk_uint64_t duk__rnd_rotl(const duk_uint64_t x, duk_small_uint_t k)duk__rnd_rotl99700,3668449
DUK_LOCAL DUK_ALWAYS_INLINE duk_uint64_t duk__xoroshiro128plus(duk_uint64_t *s) {duk__xoroshiro128plus99704,3668588
DUK_INTERNAL void duk_util_tinyrandom_prepare_seed(duk_hthread *thr) {duk_util_tinyrandom_prepare_seed99719,3668875
DUK_INTERNAL duk_double_t duk_util_tinyrandom_get_double(duk_hthread *thr) {duk_util_tinyrandom_get_double99734,3669406
void duk_dump_context_stdout(duk_context *ctx) {duk_dump_context_stdout99773,3670423
void duk_dump_context_stderr(duk_context *ctx) {duk_dump_context_stderr99779,3670574
const char *duk_push_string_file_raw(duk_context *ctx, const char *path, duk_uint_t flags) {duk_push_string_file_raw99789,3670791
void duk_eval_file(duk_context *ctx, const char *path) {duk_eval_file99836,3671697
void duk_eval_file_noresult(duk_context *ctx, const char *path) {duk_eval_file_noresult99844,3671942
duk_int_t duk_peval_file(duk_context *ctx, const char *path) {duk_peval_file99849,3672053
duk_int_t duk_peval_file_noresult(duk_context *ctx, const char *path) {duk_peval_file_noresult99863,3672395
void duk_compile_file(duk_context *ctx, duk_uint_t flags, const char *path) {duk_compile_file99871,3672546
duk_int_t duk_pcompile_file(duk_context *ctx, duk_uint_t flags, const char *path) {duk_pcompile_file99877,3672723
void duk_to_defaultvalue(duk_context *ctx, duk_idx_t idx, duk_int_t hint) {duk_to_defaultvalue99890,3672993

sql/create_cs_db.sql,235
CREATE TABLE userStateuserState14,168
  (userid VARCHAR(100) NOT NULL PRIMARY KEY,userid15,191
   ustate VARBINARY(max) NOT NULL,ustate16,236
   lastUpdateDate DATETIME2 NOT NULL DEFAULT CURRENT_TIMESTAMP);lastUpdateDate17,271

sql/sp.sql,0
